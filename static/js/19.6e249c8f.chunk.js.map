{"version":3,"sources":["common/InputGroup/index.js","common/Modal/components/ModalSubmit/index.js","pages/Feed/components/SendTipModal/index.js","pages/Feed/components/UnlockModal/index.js","pages/OtherUser/css/OtherUser.module.css","pages/OtherUser/components/FollowBtn/FollowBtn.module.css","pages/Feed/components/BuyServiceModal/index.js","pages/OtherUser/components/FollowBtn/FollowBtn.tsx","pages/OtherUser/index.tsx"],"names":["InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","disabled","className","classNames","group","onClick","fas","ModalSubmit","text","SendTipModal","tipData","toggleOpen","dispatch","useDispatch","useState","error","setError","loading","setLoading","amount","setAmount","tipSuccess","setTipSuccess","onInputChange","useCallback","e","target","submitTip","a","preventDefault","sendTipPost","publicKey","postId","postID","console","errorMessage","message","responseError","response","data","useEffect","toggleModal","modalOpen","modalTitle","onSubmit","overlay","UnlockModal","unlockData","unlockSuccess","setUnlockSuccess","submitUnlock","unlockContent","module","exports","BuyServiceModal","service","buySuccess","setBuySuccess","copied","setCopied","submitBuy","servicePrice","owner","serviceID","serviceType","Number","buyService","revealRes","log","addAvailableToken","seedUrl","tokens","addStreamToken","copyRes","navigator","clipboard","writeText","JSON","stringify","Modal","Loader","FollowBtn","isFollowed","Store","find","f","user","changingStatus","setChangingStatus","handleFollow","res","status","Utils","delete","put","Error","alert","styles","container","c","icon","gStyles","Post","React","lazy","SharedPost","OtherUserPage","profileModalOpen","setProfileModalOpen","userProfiles","useSelector","userPublicKey","useParams","userPosts","setUserPosts","userSharedPosts","setUserSharedPosts","finalPosts","setFinalPosts","userServices","setUserServices","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","buyServiceModalData","setBuyServiceModalOpen","selectedView","setSelectedView","subscribeFollows","unsubscribeFollows","subscribeUserPosts","query","subscription","rifle","reconnect","onData","posts","postEntries","Object","entries","newPosts","filter","key","GUN_PROPS","includes","map","proms","id","Http","get","post","authorId","Promise","allSettled","postsAlmostReady","postsReady","maybeOk","rifleCleanup","subscribeSharedPosts","shared","originalAuthor","originalPost","subscribeUserProfile","final","sort","b","date","unSubProfiles","pub","unsubscribeUserProfile","forEach","unSub","then","toggleTipModal","toggleBuyServiceModal","buyData","toggleUnlockModal","copyClipboard","handleViewChange","selected","header","alt","src","style","height","width","ShockAvatar","greyBorder","displayName","bio","ProfileDivider","index","profile","originalPublicKey","originalProfile","fallback","originalPostProfile","sharedTimestamp","shareDate","sharerProfile","postPublicKey","openTipModal","openUnlockModal","openDeleteModal","timestamp","contentItems","avatar","username","processDisplayName","tipCounter","tipValue","serviceTitle","serviceDescription","serviceCondition","Pad","amt","contentStyle","padding","bgColor","fgColor","size","ClipboardIcon","AddBtn","large","iconURL","QRCodeIcon","backgroundColor","BottomBar"],"mappings":"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","file":"static/js/19.6e249c8f.chunk.js","sourcesContent":["import classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label,\n  name,\n  onChange,\n  inputAction,\n  actionIcon,\n  value,\n  inputMode = \"text\",\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst ModalSubmit = ({ text = \"Submit\", onClick }) => {\n  return (\n    <div className=\"submit-btn\" onClick={onClick}>\n      <p className=\"submit-btn-text\">{text}</p>\n    </div>\n  );\n};\n\nexport default ModalSubmit;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { sendTipPost } from \"../../../../actions/FeedActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst SendTipModal = ({ tipData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(0);\n  const [tipSuccess, setTipSuccess] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n  }, []);\n\n  const submitTip = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await dispatch(\n          sendTipPost({\n            amount,\n            publicKey: tipData.publicKey,\n            postId: tipData.postID\n          })\n        );\n        setTipSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (tipData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, amount, tipData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!tipData) {\n      setLoading(false);\n      setError(null);\n      setTipSuccess(false);\n    }\n  }, [tipData]);\n\n  return (\n    <Modal toggleModal={toggleOpen} modalOpen={!!tipData} modalTitle=\"Send Tip\">\n      {tipSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post tipped successfully!</p>\n          <p className=\"tip-success-desc\"></p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitTip}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            Please specify the amount of sats you'd like to tip this user with\n            below.\n          </p>\n          <InputGroup\n            name=\"amount\"\n            onChange={onInputChange}\n            value={amount}\n            inputMode=\"decimal\"\n            small\n          />\n          <ModalSubmit text=\"SEND TIP\" onClick={submitTip} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SendTipModal;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { unlockContent } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst UnlockModal = ({ unlockData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [unlockSuccess, setUnlockSuccess] = useState(false);\n\n  const submitUnlock = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await unlockContent(\n          100,\n          unlockData.publicKey,\n          unlockData.postID\n        )(dispatch);\n        setUnlockSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (unlockData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, unlockData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!unlockData) {\n      setLoading(false);\n      setError(null);\n      setUnlockSuccess(false);\n    }\n  }, [unlockData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!unlockData}\n      modalTitle=\"Unlock content\"\n    >\n      {unlockSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Content unlocked successfully!</p>\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitUnlock}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            100 sats will be sent to the owner of the post to unlock the content\n          </p>\n          <ModalSubmit text=\"UNLOCK\" onClick={submitUnlock} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default UnlockModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"OtherUser_profile-page__OhC-_\",\"profile-container\":\"OtherUser_profile-container__2oq7s\",\"profile-cover\":\"OtherUser_profile-cover__3Fq6P\",\"profile-info-container\":\"OtherUser_profile-info-container__3qnqN\",\"profile-avatar\":\"OtherUser_profile-avatar__S6INq\",\"profile-name\":\"OtherUser_profile-name__3chmC\",\"profile-desc\":\"OtherUser_profile-desc__f9Dsj\",\"config-btn\":\"OtherUser_config-btn__t33_B\",\"config-btn-icon\":\"OtherUser_config-btn-icon__1p_6O\",\"config-btn-text\":\"OtherUser_config-btn-text__1Wg_T\",\"profile-choice-container\":\"OtherUser_profile-choice-container__3-xgF\",\"profile-choice-icon\":\"OtherUser_profile-choice-icon__3iOE1\",\"profile-choice-text\":\"OtherUser_profile-choice-text__deYLl\",\"profile-qrcode\":\"OtherUser_profile-qrcode__2Ok54\",\"profile-qrcode-desc\":\"OtherUser_profile-qrcode-desc__3cp0P\",\"profile-clipboard-container\":\"OtherUser_profile-clipboard-container__1P_p8\",\"profile-clipboard-icon\":\"OtherUser_profile-clipboard-icon__1nW2U\",\"profile-clipboard-text\":\"OtherUser_profile-clipboard-text__2g4AC\",\"publish-content-form\":\"OtherUser_publish-content-form__1YdVa\",\"publish-content-title\":\"OtherUser_publish-content-title__3EsYE\",\"publish-content-icon\":\"OtherUser_publish-content-icon__291ch\",\"m-1\":\"OtherUser_m-1__1dpvP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FollowBtn_container__2c7Cj\",\"icon\":\"FollowBtn_icon__3orep\",\"text\":\"FollowBtn_text__1o7CS\"};","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { buyService } from \"../../../../actions/OrdersActions\";\nimport {\n  addAvailableToken,\n  addStreamToken\n} from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst BuyServiceModal = ({ service, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [buySuccess, setBuySuccess] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const submitBuy = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        const { servicePrice, owner, serviceID, serviceType } = service;\n        if (!owner || !serviceID || typeof Number(servicePrice) !== \"number\") {\n          console.error(\"invalid service provided\");\n          console.error(service);\n          return;\n        }\n        setLoading(true);\n        const revealRes = await buyService(\n          owner,\n          serviceID,\n          servicePrice\n        )(dispatch);\n        console.log(revealRes);\n        setBuySuccess(revealRes);\n        if (serviceType === \"torrentSeed\") {\n          addAvailableToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n        if (serviceType === \"streamSeed\") {\n          addStreamToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n      } catch (err) {\n        console.error(err);\n        if (service) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, service]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!service) {\n      setLoading(false);\n      setError(null);\n      setBuySuccess(null);\n    }\n  }, [buySuccess]);\n  const copyRes = useCallback(() => {\n    navigator.clipboard.writeText(JSON.stringify(buySuccess));\n    setCopied(true);\n  }, [buySuccess, setCopied]);\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!service}\n      modalTitle=\"Buy Service\"\n    >\n      {buySuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">\n            You successfully bought this service!\n          </p>\n          <p>{JSON.stringify(buySuccess)}</p>\n          <button onClick={copyRes}>COPY TO CLIPBOARD</button>\n          {copied && <p>Copied!</p>}\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitBuy}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            {service && service.servicePrice} sats will be sent to the owner of\n            the service provider\n          </p>\n          <ModalSubmit text=\"BUY\" onClick={submitBuy} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default BuyServiceModal;\n","import { useCallback, useState } from \"react\";\nimport c from \"classnames\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\n\nimport styles from \"./FollowBtn.module.css\";\n\nexport interface FollowBtnProps {\n  publicKey: string;\n}\n\nconst FollowBtn = ({ publicKey }: FollowBtnProps) => {\n  const isFollowed = !!Store.useSelector(Store.selectFollows).find(\n    f => f.user === publicKey\n  );\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleFollow = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n      setChangingStatus(true);\n\n      let res = { status: -1, data: { errorMessage: \"\" } };\n\n      if (isFollowed) {\n        res = await Utils.Http.delete(`/api/gun/follows/${publicKey}`);\n      } else {\n        res = await Utils.Http.put(`/api/gun/follows/${publicKey}`, {});\n      }\n\n      if (res.status !== 200) {\n        throw new Error(res.data.errorMessage);\n      }\n    } catch (e) {\n      if (isFollowed) {\n        alert(`Could not unfollow: ${e.message}`);\n      } else {\n        alert(`Could not follow: ${e.message}`);\n      }\n    } finally {\n      setChangingStatus(false);\n    }\n  }, [changingStatus, setChangingStatus, isFollowed, publicKey]);\n\n  return (\n    <div className={styles.container} onClick={handleFollow}>\n      <i className={c(styles.icon, \"fas\", \"fa-user-plus\")} />\n\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isFollowed ? \"Unfollow\" : \"Follow\"}\n      </p>\n    </div>\n  );\n};\n\nexport default FollowBtn;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport QRCode from \"qrcode.react\";\nimport { useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { GUN_PROPS } from \"../../utils/Gun\";\nimport Http from \"../../utils/Http\";\nimport { processDisplayName } from \"../../utils/String\";\n\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"../../actions/UserProfilesActions\";\nimport { rifle, rifleCleanup } from \"../../utils/WebSocket\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport SendTipModal from \"../Feed/components/SendTipModal\";\nimport UnlockModal from \"../Feed/components/UnlockModal\";\nimport BuyServiceModal from \"../Feed/components/BuyServiceModal\";\nimport * as Store from \"../../store\";\n\nimport styles from \"./css/OtherUser.module.css\";\nimport FollowBtn from \"./components/FollowBtn\";\nimport {\n  subscribeFollows,\n  unsubscribeFollows\n} from \"../../actions/FeedActions\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst AVATAR_SIZE = 122;\n\nconst OtherUserPage = () => {\n  //#region controller\n  const dispatch = useDispatch();\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n  //@ts-expect-error\n  const userProfiles = useSelector(({ userProfiles }) => userProfiles);\n  const { publicKey: userPublicKey } = useParams<{ publicKey: string }>();\n  const user = Store.useSelector(Store.selectUser(userPublicKey));\n  const [userPosts, setUserPosts] = useState([]);\n  const [userSharedPosts, setUserSharedPosts] = useState([]);\n  const [finalPosts, setFinalPosts] = useState([]);\n  const [userServices, setUserServices] = useState({});\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [buyServiceModalData, setBuyServiceModalOpen] = useState(null);\n  const [selectedView, setSelectedView] = useState<\"posts\" | \"services\">(\n    \"posts\"\n  );\n  // Effect to sub follows\n  useEffect(() => {\n    subscribeFollows()(dispatch);\n    return () => {\n      unsubscribeFollows();\n    };\n  }, []);\n  const subscribeUserPosts = useCallback(() => {\n    const query = `${userPublicKey}::posts::on`;\n    const subscription = rifle({\n      query,\n      reconnect: false,\n      onData: async posts => {\n        const postEntries = Object.entries(posts);\n        const newPosts = postEntries\n          .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n          .map(([key]) => key);\n\n        const proms = newPosts.map(async id => {\n          const { data: post } = await Http.get(\n            `/api/gun/otheruser/${userPublicKey}/load/posts>${id}`\n          );\n          return { ...post.data, id, authorId: userPublicKey };\n        });\n        const postsAlmostReady = await Promise.allSettled(proms);\n        const postsReady = postsAlmostReady\n          .filter(maybeOk => maybeOk.status === \"fulfilled\")\n          //@ts-expect-error\n          .map(res => res.value);\n        setUserPosts(postsReady);\n      }\n    });\n\n    return rifleCleanup(subscription);\n  }, [userPublicKey]);\n\n  const subscribeSharedPosts = useCallback(() => {\n    const query = `${userPublicKey}::sharedPosts::on`;\n    const subscription = rifle({\n      query,\n      reconnect: false,\n      onData: async posts => {\n        const postEntries = Object.entries(posts);\n        const newPosts = postEntries\n          .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n          .map(([key]) => key);\n\n        const proms = newPosts.map(async id => {\n          const { data: shared } = await Http.get(\n            `/api/gun/otheruser/${userPublicKey}/load/sharedPosts>${id}`\n          );\n          if(!shared.data || !shared.data.originalAuthor){\n            throw new Error(\"invalid shared post provided for user \"+userPublicKey)\n          }\n          const { data: post } = await Http.get(\n            `/api/gun/otheruser/${shared.data.originalAuthor}/load/posts>${id}`\n          );\n          return {\n            ...shared.data,\n            originalPost: { ...post.data, id },\n            authorId: userPublicKey,\n            type: \"shared\"\n          };\n        });\n        const postsAlmostReady = await Promise.allSettled(proms);\n        const postsReady = postsAlmostReady\n          .filter(maybeOk => maybeOk.status === \"fulfilled\")\n          // @ts-expect-error\n          .map(res => res.value);\n        setUserSharedPosts(postsReady);\n      }\n    });\n\n    return rifleCleanup(subscription);\n  }, [userPublicKey]);\n\n  // effect for user profile\n  // @ts-ignore\n  useEffect(() => {\n    const unsubscribe = dispatch(subscribeUserProfile(userPublicKey));\n\n    return unsubscribe;\n  }, [dispatch, userPublicKey]);\n  //effect for user posts\n  useEffect(() => {\n    const unsubscribe = subscribeUserPosts();\n\n    return unsubscribe;\n  }, [subscribeUserPosts]);\n  //effect for shared posts\n  useEffect(() => {\n    const unsubscribe = subscribeSharedPosts();\n\n    return unsubscribe;\n  }, [subscribeSharedPosts]);\n  //effect for merge posts and shared posts\n  useEffect(() => {\n    const final = [...userPosts, ...userSharedPosts].sort(\n      (a, b) => b.date - a.date\n    );\n    setFinalPosts(final);\n    const unSubProfiles = userSharedPosts\n      .filter(post => !userProfiles[post.originalAuthor])\n      .map(post => {\n        const pub = post.originalAuthor;\n        dispatch(subscribeUserProfile(pub));\n        return () => {\n          dispatch(unsubscribeUserProfile(pub));\n        };\n      });\n    return () => {\n      unSubProfiles.forEach(unSub => unSub());\n    };\n  }, [dispatch, userPosts, userProfiles, userSharedPosts]);\n  //effect for services\n  useEffect(() => {\n    Http.get(`/api/gun/otheruser/${userPublicKey}/load/offeredServices`).then(\n      ({ data }) => {\n        setUserServices(data.data);\n      }\n    );\n  }, [userPublicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n      }\n\n      setTipModalOpen(tipData);\n    },\n    [tipModalData]\n  );\n  const toggleBuyServiceModal = useCallback(\n    buyData => {\n      if (buyServiceModalData || !buyData) {\n        setBuyServiceModalOpen(null);\n      }\n\n      setBuyServiceModalOpen(buyData);\n    },\n    [buyServiceModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const copyClipboard = useCallback(() => {\n    navigator.clipboard.writeText(userPublicKey);\n  }, [userPublicKey]);\n  const renderPosts = () => {\n    return finalPosts.map((post, index) => {\n      const profile = userProfiles[post.authorId];\n      if (post.type === \"shared\") {\n        if(!post.originalPost){\n          return null\n        }\n        const originalPublicKey = post.originalAuthor;\n        const originalProfile = userProfiles[originalPublicKey];\n        return (\n          <Suspense fallback={<Loader />} key={index}>\n            <SharedPost\n              originalPost={post.originalPost}\n              originalPostProfile={originalProfile}\n              sharedTimestamp={post.shareDate}\n              sharerProfile={profile}\n              postPublicKey={originalPublicKey}\n              openTipModal={toggleTipModal}\n              openUnlockModal={toggleUnlockModal}\n              openDeleteModal={null}\n            />\n          </Suspense>\n        );\n      }\n\n      return (\n        <Suspense fallback={<Loader />} key={index}>\n          <Post\n            id={post.id}\n            timestamp={post.date}\n            contentItems={post.contentItems}\n            avatar={`data:image/jpeg;base64,${profile?.avatar}`}\n            username={processDisplayName(profile?.user, profile?.displayName)}\n            publicKey={post.authorId}\n            openTipModal={toggleTipModal}\n            openUnlockModal={toggleUnlockModal}\n            tipCounter={0}\n            tipValue={0}\n            openDeleteModal={null}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    return Object.entries(userServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, service]) => {\n        const buyCB = () => {\n          setBuyServiceModalOpen({\n            //@ts-expect-error\n            ...service,\n            serviceID: id,\n            owner: userPublicKey\n          });\n        };\n        return (\n          <div className={styles.post}>\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceType}</p>\n            <strong>Service Title</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceTitle}</p>\n            <strong>Service Description</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceDescription}</p>\n            <strong>Service Condition</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceCondition}</p>\n            <strong>Service Price</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.servicePrice}</p>\n            <button onClick={buyCB}>BUY SERVICE</button>\n          </div>\n        );\n      });\n  };\n  const handleViewChange = useCallback((selected: \"posts\" | \"services\") => {\n    setSelectedView(selected);\n  }, []);\n  //#endregion controller\n\n  return (\n    <div className={classNames(\"page-container\", styles[\"profile-page\"])}>\n      <div className={styles[\"profile-container\"]}>\n        <div className=\"profile-cover\">\n          {user.header && (\n            <img\n              alt=\"User set profile header.\"\n              src={`data:image/jpeg;base64,${user.header}`}\n            />\n          )}\n        </div>\n\n        <div className={styles[\"profile-info-container\"]}>\n          <div\n            className={styles[\"profile-avatar\"]}\n            style={{\n              height: `${AVATAR_SIZE}px`,\n              width: `${AVATAR_SIZE}px`\n            }}\n          >\n            <ShockAvatar\n              height={AVATAR_SIZE}\n              publicKey={userPublicKey}\n              greyBorder\n            />\n          </div>\n          <div className={styles[\"profile-info\"]}>\n            <p className={styles[\"profile-name\"]}>{user.displayName}</p>\n            <p className={styles[\"profile-desc\"]}>\n              {user.bio || \"Shockwallet user\"}\n            </p>\n\n            <FollowBtn publicKey={userPublicKey} />\n          </div>\n        </div>\n\n        <ProfileDivider onChange={handleViewChange} selected={selectedView} />\n\n        <div>\n          {selectedView === \"posts\" && renderPosts()}\n          {selectedView === \"services\" && renderServices()}\n        </div>\n\n        {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n        <Pad amt={200} />\n\n        <Modal\n          toggleModal={toggleModal}\n          modalOpen={profileModalOpen}\n          contentStyle={{\n            padding: \"40px 30px\"\n          }}\n        >\n          <QRCode\n            bgColor=\"#23282d\"\n            fgColor=\"#4285b9\"\n            value={userPublicKey}\n            size={180}\n            className={styles[\"profile-qrcode\"]}\n          />\n          <p className={styles[\"profile-qrcode-desc\"]}>\n            Scan this code to contact this user\n          </p>\n          <div\n            className={styles[\"profile-clipboard-container\"]}\n            onClick={copyClipboard}\n          >\n            <img\n              src={ClipboardIcon}\n              className={styles[\"profile-clipboard-icon\"]}\n              alt=\"\"\n            />\n            <p className={styles[\"profile-clipboard-text\"]}>\n              Tap to copy to clipboard\n            </p>\n          </div>\n        </Modal>\n        <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n        <UnlockModal\n          unlockData={unlockModalData}\n          toggleOpen={toggleUnlockModal}\n        />\n        <BuyServiceModal\n          service={buyServiceModalData}\n          toggleOpen={toggleBuyServiceModal}\n        />\n\n        <AddBtn\n          onClick={toggleModal}\n          large\n          iconURL={QRCodeIcon}\n          style={{ backgroundColor: \"var(--yellow)\" }}\n          icon={null}\n          label={null}\n        />\n      </div>\n\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default OtherUserPage;\n"],"sourceRoot":""}