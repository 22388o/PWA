{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","utils/Cache.js","utils/Promise.js","utils/Torrents.js","common/BottomBar/index.js","common/Modal/components/ModalSubmit/index.js","pages/Feed/components/SendTipModal/index.js","pages/Feed/components/ShareModal/index.js","pages/Feed/components/UnlockModal/index.js","pages/Feed/css/Feed.module.css","pages/Feed/index.js"],"names":["ModalContent","children","style","contentClass","className","classNames","ModalTitle","title","toggleModal","Utils","forceRenderTitleBar","hideXBtn","onClick","OVERLAY_STYLE","borderRadius","Modal","modalOpen","modalTitle","contentStyle","disableBackdropClose","noFullWidth","blueBtn","disableBlueBtn","onClickBlueBtn","redBtn","disableRedBtn","onClickRedBtn","error","textIfLoading","closeModal","useCallback","handleBackdropClick","modal","open","container","Loader","overlay","text","disabled","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","group","fas","getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","console","log","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","length","forEach","src","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","file","extension","split","slice","supportedFileType","Object","entries","filter","includes","fileType","webTorrentClient","WebTorrent","isURLCompatible","url","format","toLowerCase","endsWith","attachMedia","posts","torrentMode","allowDuplicates","torrentTasks","map","post","contentItems","id","item","key","get","magnetURI","add","torrent","files","target","destroy","torrentElement","compatibleURL","elementSrc","getAttribute","renderTo","contentURL","decodeURIComponent","replace","setAttribute","on","getBlob","err","blob","querySelector","dataset","played","reduce","torrents","BottomBar","to","activeClassName","ModalSubmit","SendTipModal","tipData","toggleOpen","dispatch","useDispatch","useState","setError","loading","setLoading","amount","setAmount","tipSuccess","setTipSuccess","onInputChange","e","submitTip","preventDefault","sendTipPost","publicKey","postId","postID","errorMessage","message","responseError","response","data","useEffect","onSubmit","ShareModal","shareData","success","setSuccess","submitShare","sharedPostRaw","originalAuthor","shareDate","Date","now","Http","path","ok","close","UnlockModal","unlockData","unlockSuccess","setUnlockSuccess","submitUnlock","unlockContent","module","exports","Post","React","lazy","SharedPost","FeedPage","Store","history","useHistory","follows","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","shareModalData","setShareModalData","selfPublicKey","reloadDone","feed","subscribeFollows","unsubscribeFollows","toggleTipModal","toggleUnlockModal","toggleShareModal","useLayoutEffect","Common","subscriptions","follow","profileSubscription","subscribeUserProfile","user","postsSubscription","subscribeUserPosts","sharedPostsSubscription","subSharedPosts","unsubscribe","reloadFeed","setTimeout","go","styles","followed","forceAddBtn","height","createsPost","nameAtBottom","fallback","openTipModal","openUnlockModal","openShareModal","originalPostID","sharerPublicKey","sharedBy","shareID","authorId"],"mappings":"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","file":"static/js/13.1198bd74.chunk.js","sourcesContent":["import classNames from \"classnames\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children = null, style = {}, contentClass = \"\" }) => (\n  <div className={classNames(\"content\", contentClass)} style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import * as Utils from \"../../../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({\n  title = \"\",\n  toggleModal = Utils.EMPTY_FN,\n  forceRenderTitleBar = false,\n  hideXBtn = false\n}) =>\n  title || forceRenderTitleBar ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      {!hideXBtn && (\n        <div className=\"head-close\" onClick={toggleModal}>\n          <i className=\"fas fa-times\"></i>\n        </div>\n      )}\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","import { useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\nimport Loader from \"../../common/Loader\";\n\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\n\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = Utils.EMPTY_OBJ,\n  disableBackdropClose = false,\n  forceRenderTitleBar = false,\n  hideXBtn = false,\n  noFullWidth = false,\n  blueBtn = \"\",\n  disableBlueBtn = false,\n  onClickBlueBtn = Utils.EMPTY_FN,\n  redBtn = \"\",\n  disableRedBtn = false,\n  onClickRedBtn = Utils.EMPTY_FN,\n  contentClass = \"\",\n  error = \"\",\n  textIfLoading = \"\"\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  const handleBackdropClick = useCallback(() => {\n    if (!disableBackdropClose) {\n      toggleModal();\n    }\n  }, [disableBackdropClose, toggleModal]);\n  return (\n    <div className={classNames({ modal: true, open: modalOpen })}>\n      <div className=\"backdrop\" onClick={handleBackdropClick} />\n      <div\n        className={classNames({\n          container: true,\n          \"container-no-full-width\": noFullWidth\n        })}\n      >\n        {textIfLoading && (\n          <Loader overlay style={OVERLAY_STYLE} text={textIfLoading} />\n        )}\n\n        <ModalTitle\n          title={modalTitle}\n          toggleModal={closeModal}\n          forceRenderTitleBar={forceRenderTitleBar}\n          hideXBtn={hideXBtn}\n        />\n\n        {error && <div className={\"form-error form-error-margin\"}>{error}</div>}\n\n        <ModalContent style={contentStyle} contentClass={contentClass}>\n          {typeof children === \"string\" ? (\n            <p className=\"text-align-center\">{children}</p>\n          ) : (\n            children\n          )}\n        </ModalContent>\n\n        <div className=\"color-buttons\">\n          {blueBtn && (\n            <button\n              disabled={disableBlueBtn}\n              className={classNames(\"color-btn\", \"blue-btn\")}\n              onClick={onClickBlueBtn}\n            >\n              {blueBtn}\n            </button>\n          )}\n\n          {redBtn && (\n            <button\n              disabled={disableRedBtn}\n              className={classNames(\"color-btn\", \"red-btn\")}\n              onClick={onClickRedBtn}\n            >\n              {redBtn}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst OVERLAY_STYLE = {\n  borderRadius: \"15px\"\n};\n\nexport default Modal;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label = \"\",\n  name = \"\",\n  onChange,\n  inputAction = Utils.EMPTY_FN,\n  actionIcon = \"\",\n  value,\n  inputMode = /** @type {React.HTMLAttributes['inputMode']} */ (\"text\"),\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled = false\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = true;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import WebTorrent from \"webtorrent\";\nimport { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nconst supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: true,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\", \"gif\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nconst _getFileType = file => {\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const supportedFileType = Object.entries(\n    supportedFileTypes\n  ).filter(([type, options]) => options.formats.includes(extension))[0];\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport const webTorrentClient = new WebTorrent();\n\nexport const isURLCompatible = ({ url, type = \"video/embedded\" }) => {\n  const fileType = supportedFileTypes[type];\n  const [compatibleURL] = fileType.formats.filter(format =>\n    url.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n  );\n\n  return !!compatibleURL;\n};\n\nexport const attachMedia = (\n  posts = [],\n  torrentMode = true,\n  allowDuplicates = false\n) => {\n  const torrentTasks = posts\n    .map(post => {\n      const { contentItems, id } = post;\n      return Object.entries(contentItems ?? {})\n        .filter(([key, item]) => supportedFileTypes[item.type])\n        .map(([key, item]) => () =>\n          new Promise(resolve => {\n            const torrentExists = webTorrentClient.get(item.magnetURI);\n\n            if (torrentExists && !allowDuplicates) {\n              resolve(true);\n              return;\n            }\n\n            webTorrentClient.add(item.magnetURI, async torrent => {\n              // Proceed to the next torrent in queue\n              resolve(true);\n\n              const files = torrent.files.filter(file => {\n                const extension = file.name?.split(\".\")?.slice(-1)[0];\n                const supportedFileType = Object.entries(\n                  supportedFileTypes\n                ).filter(([type, options]) =>\n                  options.formats.includes(extension)\n                )[0];\n                if (supportedFileType) {\n                  const [, fileType] = supportedFileType;\n                  const matched = fileType.formats.includes(extension);\n                  return matched;\n                }\n                return false;\n              });\n\n              files.map(async file => {\n                const fileType = _getFileType(file);\n\n                if (!fileType) {\n                  return;\n                }\n\n                const fileName = `${id}-${key}-${file.name}`;\n\n                const element = fileType.element;\n                const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                const cachedFile = await getCachedFile(fileName);\n\n                if (cachedFile) {\n                  const torrent = webTorrentClient.get(item.magnetURI);\n\n                  if (torrent) {\n                    torrent.destroy();\n                  }\n\n                  renderCachedFile(cachedFile, target);\n                  return;\n                }\n\n                const torrentElements = document.querySelectorAll(target);\n                torrentElements.forEach(torrentElement => {\n                  const compatibleURL = isURLCompatible({\n                    url: item.magnetURI,\n                    type: fileType.name\n                  });\n                  const elementSrc = torrentElement.getAttribute(\"src\");\n\n                  if ((torrentMode && !elementSrc) || !compatibleURL) {\n                    file.renderTo(torrentElement, fileType.options);\n                    return;\n                  }\n\n                  const contentURL = decodeURIComponent(\n                    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n                  );\n\n                  torrentElement.setAttribute(\"src\", contentURL);\n                });\n              });\n\n              torrent.on(\"done\", () => {\n                files.map(file => {\n                  const fileType = _getFileType(file);\n                  const fileName = `${id}-${key}-${file.name}`;\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n\n                  file.getBlob(async (err, blob) => {\n                    if (err) {\n                      console.warn(err);\n                      return;\n                    }\n\n                    await saveFile(fileName, blob);\n                    const element = document.querySelector(target);\n                    if (\n                      element?.dataset.played === \"false\" &&\n                      !element?.getAttribute(\"src\")\n                    ) {\n                      const cachedFile = await getCachedFile(fileName);\n                      renderCachedFile(cachedFile, target);\n                    }\n                  });\n\n                  return file;\n                });\n              });\n            });\n          })\n        );\n    })\n    .reduce((torrents, contentItems) => [...torrents, ...contentItems], []);\n\n  runSerial(torrentTasks);\n};\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import \"./ModalSubmit.scoped.css\";\n\nconst ModalSubmit = ({ text = \"Submit\", onClick }) => {\n  return (\n    <div className=\"submit-btn\" onClick={onClick}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default ModalSubmit;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { sendTipPost } from \"../../../../actions/FeedActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst SendTipModal = ({ tipData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [tipSuccess, setTipSuccess] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n  }, []);\n\n  const submitTip = useCallback(\n    async e => {\n      e.preventDefault();\n      if (loading) {\n        return;\n      }\n      try {\n        setLoading(true);\n        await dispatch(\n          sendTipPost({\n            amount,\n            publicKey: tipData.publicKey,\n            postId: tipData.postID\n          })\n        );\n        setTipSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (tipData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, amount, loading, tipData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!tipData) {\n      setLoading(false);\n      setError(null);\n      setTipSuccess(false);\n    }\n  }, [tipData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!tipData}\n      modalTitle=\"Send Tip\"\n      noFullWidth\n    >\n      {tipSuccess ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post tipped successfully!</p>\n          <p className=\"tip-success-desc\"></p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitTip}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc m-1\">\n            Please specify the amount of sats you'd like to tip this user with\n            below.\n          </p>\n          <InputGroup\n            name=\"amount\"\n            onChange={onInputChange}\n            value={amount}\n            inputMode=\"decimal\"\n            small\n          />\n          <ModalSubmit text=\"SEND TIP\" onClick={submitTip} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SendTipModal;\n","import { useCallback, useEffect, useState } from \"react\";\nimport Modal from \"../../../../common/Modal\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\nimport { Http } from \"../../../../utils\";\n\nconst ShareModal = ({ shareData, toggleOpen }) => {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const submitShare = useCallback(\n    async e => {\n      e.preventDefault();\n      if(loading){\n        return\n      }\n      try {\n        setLoading(true);\n        const { postID: id, publicKey } = shareData;\n        const sharedPostRaw = {\n          originalAuthor: publicKey,\n          shareDate: Date.now()\n        };\n        const { data } = await Http.post(`/api/gun/put`, {\n          path: `$user>sharedPosts>${id}`,\n          value: sharedPostRaw\n        });\n        if (data.ok) {\n          setSuccess(true);\n        } else {\n          setError(\"Share operation failed\");\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [shareData,loading]\n  );\n\n  const close = useCallback(() => {\n    toggleOpen(null);\n  }, [toggleOpen]);\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!shareData) {\n      setLoading(false);\n      setError(null);\n      setSuccess(false);\n    }\n  }, [shareData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!shareData}\n      modalTitle=\"Share post\"\n      blueBtn={\n        (!loading && !error && !success && \"SHARE\") ||\n        ((success || error) && \"OK\")\n      }\n      disableBlueBtn={loading}\n      onClickBlueBtn={success || error ? close : submitShare}\n      hideXBtn={success}\n      noFullWidth\n    >\n      {success ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post shared successfully!</p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitShare}>\n          {error ? <p className=\"form-error\">{error}</p> : null}\n          {error && <p className=\"tip-modal-desc m-1\">You can try again.</p>}\n          {loading ? <Loader text=\"Sharing...\" /> : null}\n          {!error && !loading && (\n            <p className=\"tip-modal-desc m-1\">\n              This post will be shared on your profile\n            </p>\n          )}\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default ShareModal;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { unlockContent } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst UnlockModal = ({ unlockData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [unlockSuccess, setUnlockSuccess] = useState(false);\n\n  const submitUnlock = useCallback(\n    async e => {\n      e.preventDefault();\n      if(loading){\n        return\n      }\n      try {\n        setLoading(true);\n        await unlockContent(\n          100,\n          unlockData.publicKey,\n          unlockData.postID\n        )(dispatch);\n        setUnlockSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (unlockData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch,loading, unlockData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!unlockData) {\n      setLoading(false);\n      setError(null);\n      setUnlockSuccess(false);\n    }\n  }, [unlockData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!unlockData}\n      modalTitle=\"Unlock content\"\n    >\n      {unlockSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Content unlocked successfully!</p>\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitUnlock}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            100 sats will be sent to the owner of the post to unlock the content\n          </p>\n          <ModalSubmit text=\"UNLOCK\" onClick={submitUnlock} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default UnlockModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followed\":\"Feed_followed__1ZWr5\"};","// @ts-check\nimport React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useState\n} from \"react\";\nimport * as Common from \"shock-common\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { attachMedia } from \"../../utils/Torrents\";\nimport * as Store from \"../../store\";\nimport BottomBar from \"../../common/BottomBar\";\n\nimport SendTipModal from \"./components/SendTipModal\";\nimport ShareModal from \"../Feed/components/ShareModal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\n\nimport \"./css/index.scoped.css\";\nimport UnlockModal from \"./components/UnlockModal\";\nimport {\n  subscribeFollows,\n  subscribeUserPosts,\n  unsubscribeFollows,\n  reloadFeed,\n  subSharedPosts\n} from \"../../actions/FeedActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport styles from \"./css/Feed.module.css\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst FeedPage = () => {\n  const dispatch = Store.useDispatch();\n  const history = useHistory();\n  const follows = Store.useSelector(Store.selectFollows);\n  const posts = Store.useSelector(\n    Store.selectAllPostsFromFollowedNewestToOldest\n  );\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [shareModalData, setShareModalData] = useState(null);\n  const { publicKey: selfPublicKey } = Store.useSelector(Store.selectSelfUser);\n  const reloadDone = Store.useSelector(({ feed }) => feed.reloadDone);\n  // Effect to sub follows\n  useEffect(() => {\n    dispatch(subscribeFollows());\n    return () => {\n      dispatch(unsubscribeFollows());\n    };\n  }, [dispatch]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      console.log(tipData);\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n      }\n\n      setTipModalOpen(tipData);\n    },\n    [tipModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      console.log(unlockData);\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const toggleShareModal = useCallback(\n    shareData => {\n      console.log(shareData);\n      if (shareModalData || !shareData) {\n        setShareModalData(null);\n      }\n\n      setShareModalData(shareData);\n    },\n    [shareModalData]\n  );\n\n  useLayoutEffect(() => {\n    attachMedia(\n      posts.filter(post => !Common.isSharedPost(post)),\n      false\n    );\n  }, [posts]);\n\n  useEffect(() => {\n    const subscriptions = follows.map(follow => {\n      const profileSubscription = dispatch(subscribeUserProfile(follow.user));\n      const postsSubscription = dispatch(subscribeUserPosts(follow.user));\n      const sharedPostsSubscription = dispatch(subSharedPosts(follow.user));\n\n      return () => {\n        profileSubscription();\n        postsSubscription();\n        sharedPostsSubscription();\n      };\n    });\n\n    return () => {\n      subscriptions.map(unsubscribe => unsubscribe());\n    };\n  }, [follows, dispatch]);\n\n  //effect to reload the feed once after a cache clear\n  useEffect(() => {\n    if (posts.length > 0 && !reloadDone) {\n      dispatch(reloadFeed());\n      setTimeout(() => {\n        history.go(0);\n      }, 3000);\n    }\n  }, [reloadDone, history, dispatch, posts.length]);\n\n  return (\n    <div className=\"page-container feed-page\">\n      <div className={styles.followed}>\n        <ShockAvatar\n          forceAddBtn\n          height={60}\n          publicKey={selfPublicKey}\n          createsPost\n        />\n\n        {follows?.map(follow => {\n          return (\n            <ShockAvatar\n              height={60}\n              key={follow.user}\n              nameAtBottom\n              publicKey={follow.user}\n            />\n          );\n        })}\n      </div>\n\n      <div className=\"tabs-holder\">\n        <p className=\"tab active\">Feed</p>\n        <p className=\"tab\">Saved</p>\n        <p className=\"tab\">Videos</p>\n      </div>\n      <div className=\"posts-holder\">\n        {posts.length === 0 && <Loader text=\"loading posts...\" />}\n        {posts.map(post => {\n          if (Common.isSharedPost(post)) {\n            return (\n              <Suspense fallback={<Loader />} key={post.shareID}>\n                <SharedPost\n                  openTipModal={toggleTipModal}\n                  openUnlockModal={toggleUnlockModal}\n                  openShareModal={toggleShareModal}\n                  postID={post.originalPostID}\n                  sharerPublicKey={post.sharedBy}\n                />\n              </Suspense>\n            );\n          }\n\n          return (\n            <Suspense fallback={<Loader />} key={post.id}>\n              <Post\n                id={post.id}\n                publicKey={post.authorId}\n                openTipModal={toggleTipModal}\n                openUnlockModal={toggleUnlockModal}\n                openShareModal={toggleShareModal}\n              />\n            </Suspense>\n          );\n        })}\n      </div>\n      <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n      <UnlockModal\n        unlockData={unlockModalData}\n        toggleOpen={toggleUnlockModal}\n      />\n      <ShareModal shareData={shareModalData} toggleOpen={toggleShareModal} />\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default FeedPage;\n"],"sourceRoot":""}