{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/DialogNav/index.js","utils/seed.tsx","pages/Profile/publishContent.tsx"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","DIALOG_NAV_MIN_HEIGHT_PX","CONTAINER_STYLE","minHeight","DialogNav","pageTitle","drawerVisible","onHeight","Utils","goBack","window","history","back","divRefCb","el","getBoundingClientRect","height","e","console","log","ref","EnrollToken","seedUrl","seedToken","a","array","Uint8Array","crypto","getRandomValues","token","Array","prototype","map","call","x","toString","slice","join","reqData","seed_token","wallet_token","fetch","method","headers","body","JSON","stringify","status","Error","RequestToken","availableTokens","seedProviderPub","serviceID","servicePrice","tokenInfo","deleteToken","availableToken","key","Object","hasOwnProperty","element","tokens","Http","post","type","amt","to","memo","feeLimit","ackInfo","data","orderAck","parse","response","PublishContentPage","dispatch","useDispatch","useHistory","Store","content","seedInfo","userProfiles","useState","error","setError","loading","setLoading","mediaPreviews","setMediaPreviews","setTitle","description","setDescription","postType","setPostType","setCreatePost","imageFile","useRef","videoFile","promptInfo","setPromptInfo","selectedFiles","setSelectedFiles","onSubmitCb","length","finalSeedUrl","formData","FormData","from","forEach","file","append","Authorization","res","json","resJson","message","err","removeUnavailableToken","torrent","magnet","firstFile","contentItem","magnetURI","width","addPublishedContent","published","push","errorMessage","closePrompt","submitPrompt","onSubmit","preventDefault","SeedServiceProvided","get","service","onDiscard","onInputChange","target","value","name","checked","onSelectedFile","files","promises","index","Promise","reader","FileReader","onload","startsWith","uri","result","readAsDataURL","allSettled","then","previews","singleRes","onSelectImageFile","current","click","onSelectVideoFile","overlay","fullScreen","text","onReset","display","flexDirection","alignItems","justifyContent","htmlFor","id","onChange","appearance","backgroundColor","color","marginLeft","placeholder","accept","multiple","prev","src","controls","rows","padding"],"mappings":"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","file":"static/js/21.5eb5e354.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"modal-content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"modal-head\">\n      <p className=\"modal-head-title\">{title}</p>\n      <div className=\"modal-head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"modal-open\": modalOpen })}>\n      <div className=\"modal-backdrop\" onClick={closeModal} />\n      <div className=\"modal-container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.css\";\n\nexport const DIALOG_NAV_MIN_HEIGHT_PX = 73;\n/** @type {import('react').CSSProperties} */\nconst CONTAINER_STYLE = {\n  minHeight: DIALOG_NAV_MIN_HEIGHT_PX\n};\n\nconst DialogNav = ({\n  pageTitle,\n  drawerVisible = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in DialogNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className=\"dialog-nav-container\"\n      ref={divRefCb}\n      style={CONTAINER_STYLE}\n    >\n      <div className=\"dialog-nav-back\" onClick={goBack}>\n        <i className=\"icon icon-thin-back\"></i>\n      </div>\n      <p className=\"dialog-nav-title\">{pageTitle}</p>\n      <div\n        className={classNames({\n          \"dialog-nav-menu-btn\": true,\n          \"dialog-nav-hidden\": !drawerVisible\n        })}\n      >\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DialogNav;\n","import Http from \"./Http\";\n\n\nexport const EnrollToken = async (seedUrl,seedToken) => {\n    const array = new Uint8Array(32);\n    window.crypto.getRandomValues(array);\n    const token = Array.prototype.map.call(array, x => ('00' + x.toString(16)).slice(-2)).join('');\n    const reqData = {\n      seed_token: seedToken,\n      wallet_token: token\n    }\n    const res = await fetch(`${seedUrl}/api/enroll_token`, {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'\n    },\n      body: JSON.stringify(reqData)\n    })\n    if (res.status !== 200) {\n      throw new Error('torrentSeed service currently not available')\n    }\n    return token\n}\n\nexport const RequestToken = async ({\n  availableTokens,\n  seedUrl,\n  seedToken,\n  seedProviderPub,\n  serviceID,\n  servicePrice\n}) => {\n  let tokenInfo = null\n  let deleteToken = false\n  let availableToken = null\n  for (const key in availableTokens) {\n    if (Object.prototype.hasOwnProperty.call(availableTokens, key)) {\n      const element = availableTokens[key];\n      if(element[0]){\n        availableToken = {seedUrl:key,tokens:element}\n        break\n      }\n    }\n  }\n  console.log(seedProviderPub)\n  console.log(serviceID)\n  console.log(servicePrice)\n  if(seedUrl && seedToken){\n    console.log(\"USING SELF SEED TOKEN\")\n    const token = await EnrollToken(seedUrl,seedToken)\n    console.log(\"token\")\n    console.log(token)\n    tokenInfo = {seedUrl, tokens:[token]}\n  } else if(availableToken) {\n    console.log(\"USING AVAILABLE TOKEN\")\n    tokenInfo = availableToken\n    deleteToken = true\n  } else if(seedProviderPub && serviceID && servicePrice){\n    console.log(\"USING DEFAULT TOKEN PROVIDER\")\n    const {data,status} = await Http.post('/api/lnd/unifiedTrx',{\n      type: 'service',\n      amt: servicePrice,\n      to:seedProviderPub,\n      memo:'',\n      feeLimit:500,\n      ackInfo:serviceID\n    })\n    if(status !== 200){\n      throw new Error(\"seed token request failed\")\n    }\n    console.log(data)\n    const {orderAck} = data\n    tokenInfo = JSON.parse(orderAck.response)\n  } else {\n    throw new Error(\"provide the token data or use default seed provider\")\n  }\n  return {...tokenInfo,deleteToken}\n}","import React, {  useCallback,  useRef, useState } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport \"./css/index.css\";\n\nimport Loader from \"../../common/Loader\";\nimport DialogNav from \"../../common/DialogNav\";\nimport Http from \"../../utils/Http\";\nimport {addPublishedContent,removeUnavailableToken} from '../../actions/ContentActions'\nimport { EnrollToken, RequestToken } from \"../../utils/seed\";\nimport { useHistory } from \"react-router\";\nimport * as Store from \"../../store\";\nimport Modal from \"../../common/Modal\";\nconst PublishContentPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory()\n  const seedProviderPub = Store.useSelector(({content}) => content.seedProviderPub)\n  const {seedUrl,seedToken} = Store.useSelector(({content}) => content.seedInfo)\n  const availableTokens = Store.useSelector(({ content }) => content.availableTokens)\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const [error, setError] = useState<string|null>(null);\n  const [loading, setLoading] = useState(false);\n  const [mediaPreviews,setMediaPreviews] = useState([])\n  const [title,setTitle] = useState(\"\")\n  const [description,setDescription] = useState(\"\")\n  const [postType,setPostType] = useState(\"public\")\n  const [createPost,setCreatePost] = useState(false)\n  const imageFile = useRef(null)\n  const videoFile = useRef(null)\n  const [promptInfo,setPromptInfo] = useState(null)\n\n\n  const [selectedFiles,setSelectedFiles] = useState([]) \n  \n  const onSubmitCb = useCallback(\n    async (servicePrice?,serviceID?) => {\n      console.log([title,description,selectedFiles])\n      if(selectedFiles.length === 0){\n        setError(\"no selected files\")\n        return\n      }\n      setLoading(true)\n      try{\n        \n        const {seedUrl:finalSeedUrl,tokens,deleteToken} = await RequestToken({\n          availableTokens,\n          seedProviderPub,\n          seedToken,\n          seedUrl,\n          serviceID,\n          servicePrice\n        })\n        const formData = new FormData()\n        //TODO support public/private content by requesting two tokens and doing this req twice\n        Array.from(selectedFiles).forEach(file => formData.append('files', file))\n        formData.append('info', 'extraInfo')\n        formData.append('comment', 'comment')\n        const res = await fetch(`${finalSeedUrl}/api/put_file`, {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${tokens[0]}`,\n          },\n          body: formData,\n        })\n        const resJson = await res.json()\n        console.log(resJson)\n        if(resJson.error && resJson.error.message){\n          const err = resJson.error.message\n          if(err === \"The provided token has already been used\"){\n            setError(\"An error occurred, please try again\")\n            removeUnavailableToken(finalSeedUrl,tokens[0])(dispatch)\n          } else {\n            setError(err)\n          }\n          setLoading(false)\n          return\n        }\n        const {torrent} = resJson.data\n        const {magnet} = torrent\n        const [firstFile] = mediaPreviews\n        console.log(firstFile)\n        let type = 'image/embedded'\n        if(firstFile.type === 'video'){\n          type = 'video/embedded'\n        }\n        const contentItem = {\n          type,\n          magnetURI:magnet,\n          width:0,\n          height:0\n        }\n        const published = await addPublishedContent(contentItem)(dispatch)\n        console.log(\"content publish complete\")\n        console.log(published)\n        setLoading(false)\n        if(deleteToken){\n          removeUnavailableToken(finalSeedUrl,tokens[0])(dispatch)\n        }\n        history.push(\"/profile\")\n      }catch(err){\n        console.log(err)\n        setError(err?.errorMessage ?? err?.message)\n        setLoading(false)\n      }\n\n    },\n    [title,description,selectedFiles,mediaPreviews,availableTokens,seedUrl, seedToken,history, dispatch, setError]\n  );\n\n  const closePrompt = useCallback(()=>{\n    setPromptInfo(null)\n  },[setPromptInfo])\n  const submitPrompt = useCallback(()=>{\n    const {servicePrice,serviceID} = promptInfo\n    onSubmitCb(servicePrice,serviceID)\n    setPromptInfo(null)\n  },[promptInfo,onSubmitCb,setPromptInfo])\n\n  const onSubmit = useCallback(async(e)=>{\n    e.preventDefault();\n    let availableToken = false\n    for (const key in availableTokens) {\n      if (Object.prototype.hasOwnProperty.call(availableTokens, key)) {\n        const element = availableTokens[key];\n        if(element[0]){\n          availableToken = true\n          break\n        }\n      }\n    }\n    let serviceID = \"\"\n    if(userProfiles[seedProviderPub]){\n      //@ts-expect-error\n      serviceID = userProfiles[seedProviderPub].SeedServiceProvided\n    }\n    if(availableToken || (seedUrl && seedToken)){\n      onSubmitCb()\n    } else if(serviceID && seedProviderPub) {\n      const {data:service} = await Http.get(\n        `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${serviceID}`\n      )\n      const {servicePrice} = service.data\n      console.log(service)\n      setPromptInfo({servicePrice,serviceID})\n    } else {\n      setError(\"No way found to publish content\")\n    }\n  },[availableTokens,setPromptInfo,setError,onSubmitCb])\n\n  \n  \n  const onDiscard = useCallback(\n    async e => {\n      e.preventDefault();\n      setTitle(\"\")\n      setDescription(\"\")\n      setError(null)\n      setPromptInfo(null)\n      setSelectedFiles([])\n      setMediaPreviews([])\n      \n    },\n    [setDescription, setTitle, setError,setPromptInfo,setSelectedFiles,setMediaPreviews]\n  );\n  const onInputChange = useCallback(e => {\n    const { value, name,checked } = e.target;\n    //e.preventDefault()\n    switch (name) {\n      case \"title\": {\n        setTitle(value);\n        return;\n      }\n      case \"description\": {\n        setDescription(value);\n        return;\n      }\n      case \"postType\":{\n        setPostType(value)\n        return\n      }\n      case \"createPost\":{\n        console.log(\"create post\")\n        return\n      }\n      default:\n        return;\n    }\n  }, [setTitle,setDescription,setCreatePost]);\n  const onSelectedFile = useCallback(e =>{\n    e.preventDefault()\n    \n    console.log(e.target.files)\n    setSelectedFiles(e.target.files)\n    const promises = Array.from(e.target.files).map((file,index) => {\n      console.log(\"doing file...\")\n      return new Promise(res => {\n        //@ts-ignore\n        const {type} = file\n        //@ts-ignore\n        const reader = new FileReader();\n\n        reader.onload = function (e) {\n          if(type.startsWith('image/')){\n            res({type:'image',uri:e.target.result,index})\n          }\n          if(type.startsWith('video/')){\n            res({type:'video',uri:e.target.result,index})\n          }\n        }\n        //@ts-ignore\n        reader.readAsDataURL(file);\n        \n      })\n    })\n    Promise.allSettled(promises)\n    .then(res =>{\n      const previews = []\n      res.forEach(singleRes => {\n        if(singleRes.status === 'fulfilled'){\n          previews.push(singleRes.value)\n        }\n      })\n      console.log(previews)\n      setMediaPreviews(previews)\n    })\n  },[setSelectedFiles,setMediaPreviews])\n  const onSelectImageFile = useCallback(e => {\n    e.preventDefault()\n    //imageFile.current.onChange = \n    imageFile.current.click()\n  },[imageFile])\n  const onSelectVideoFile = useCallback(e => {\n    e.preventDefault()\n    videoFile.current.click()\n  },[videoFile])\n  return (<div className=\"publish-content-form-container m-1\">\n    {loading ? (\n      <Loader overlay fullScreen text=\"Creating content...\" />\n    ) : null}\n    <DialogNav  drawerVisible={false} pageTitle=\"PUBLISH CONTENT\" />\n    \n    <form className=\"publish-content-form\" onSubmit={onSubmit} onReset={onDiscard}>\n    <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\n      <h2>Say Something<div className=\"line\"></div></h2>\n      \n    </div>\n      <div style={{display:'flex',alignItems:'center',justifyContent:'space-between'}}>\n        <div className=\"publish-content-title\">\n          <label htmlFor=\"title\" ><strong>Title</strong></label>\n          \n        </div>\n        <div>\n          <strong >Audience: <i className={`fas ${postType === 'public' ? \"fa-globe-europe\" : \"fa-credit-card\"}`}></i></strong>\n          <select name=\"postType\" id=\"postType\" onChange={onInputChange} style={{appearance:'none',backgroundColor:\"rgba(0,0,0,0)\",color:'var(--main-blue)', marginLeft:\"0.3rem\"}}>\n            <option value=\"public\" style={{backgroundColor:\"rgba(0,0,0,0)\",color:'var(--main-blue)'}}>Public</option>\n            <option value=\"private\">Paywall</option>\n          </select>\n        </div>\n      </div>\n      <input\n        type=\"text\"\n        name=\"title\"\n        placeholder=\"How I monetized my content with ShockWallet\"\n        value={title}\n        onChange={onInputChange}\n        className=\"input-field\"\n      />\n      <div className=\"publish-content-title\">\n        <label htmlFor=\"contents\"><strong>Contents</strong></label>\n      </div>\n      <div className=\"m-b-1\">\n      <input type='file' id='file' ref={imageFile} style={{display: 'none'}} accept=\"image/*\" multiple onChange={onSelectedFile}/>\n      <input type='file' id='file' ref={videoFile} style={{display: 'none'}} accept=\"video/*\" multiple onChange={onSelectedFile}/>\n      <i className=\"fas fa-images publish-content-icon\" onClick={onSelectImageFile}></i>\n      <i className=\"fas fa-video publish-content-icon\" onClick={onSelectVideoFile}></i>\n      <div >\n        {mediaPreviews.length > 0 && mediaPreviews.map(prev => {\n          if(prev.type === 'image'){\n            return <img src={prev.uri} key={prev.index.toString()} width={100} className=\"m-1\" ></img>\n          }\n          if(prev.type === 'video'){\n            return <video src={prev.uri} key={prev.index.toString()} controls width={100} className=\"m-1\"></video>\n          }\n        })}\n      </div>\n      {/*<i className=\"fas fa-music publish-content-icon\"></i>\n      <i className=\"fas fa-paperclip publish-content-icon\"></i>*/}\n      </div>\n      <div className=\"publish-content-title\">\n        <label htmlFor=\"description\"><strong>Description</strong></label>\n      </div>\n      <textarea\n        name=\"description\"\n        placeholder=\"I made a quick video to show you guys how easy it is to run your own social platform on ShockWallet, and start earning Bitcoin\"\n        rows={3}\n        value={description}\n        onChange={onInputChange}\n        className=\"input-field\"\n      />\n      <div style={{display:'flex',alignItems:'center',marginLeft:'auto'}}>\n        <label htmlFor=\"createPost\">Create Post/Teaser?</label>\n      <input type=\"checkbox\" name=\"createPost\" style={{marginLeft:\"0.2em\"}}  />\n      </div>\n      \n      {error ? <p className=\"error-container\">{error}</p> : null}\n      <div className='flex-center'>\n      <input type=\"reset\" value=\"reset\" className='shock-form-button m-1'/>\n      <input type=\"submit\" value=\"submit\" className='shock-form-button-confirm m-1' />\n      </div>\n    </form>\n    {promptInfo && <Modal modalOpen={(promptInfo && !loading)} toggleModal={closePrompt}>\n      <div style={{padding:\"1rem\"}}>\n        <p>The service from the default service provider will cost: <strong>{promptInfo.servicePrice} sats</strong></p>\n        \n        <button className='shock-form-button m-1' onClick={onDiscard}>cancel</button>\n        <button className='shock-form-button-confirm m-1' onClick={submitPrompt}>confirm</button>\n      </div>\n    </Modal>}\n  </div>)\n};\n\nexport default PublishContentPage;\n"],"sourceRoot":""}