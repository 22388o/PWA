{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/BottomBar/index.js","common/AddBtn/index.js","common/Modal/components/ModalSubmit/index.js","common/ProfileDivider/css/ProfileDivider.module.css","images/clipboard.svg","images/qrcode.svg","pages/Feed/components/SendTipModal/index.js","pages/Feed/components/UnlockModal/index.js","common/Line/index.tsx","common/ProfileDivider/index.tsx","pages/OtherUser/css/OtherUser.module.css","pages/Feed/components/BuyServiceModal/index.js","pages/OtherUser/index.tsx"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","disabled","group","fas","BottomBar","to","activeClassName","AddBtn","icon","iconURL","undefined","nestedMode","large","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","ModalSubmit","text","module","exports","SendTipModal","tipData","toggleOpen","dispatch","useDispatch","error","setError","loading","setLoading","amount","setAmount","tipSuccess","setTipSuccess","onInputChange","e","target","submitTip","a","preventDefault","sendTipPost","publicKey","postId","postID","console","errorMessage","message","responseError","response","data","useEffect","onSubmit","overlay","UnlockModal","unlockData","unlockSuccess","setUnlockSuccess","submitUnlock","unlockContent","Line","color","length","width","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","ProfileDivider","selected","gStyles","styles","container","unselected","BuyServiceModal","service","buySuccess","setBuySuccess","copied","setCopied","submitBuy","servicePrice","owner","serviceID","serviceType","Number","buyService","revealRes","log","addAvailableToken","seedUrl","tokens","addStreamToken","copyRes","navigator","clipboard","writeText","JSON","stringify","Loader","Post","React","lazy","SharedPost","OtherUserPage","profileModalOpen","setProfileModalOpen","hostIP","useSelector","node","userProfiles","userPublicKey","useParams","user","Store","userPosts","setUserPosts","userSharedPosts","setUserSharedPosts","finalPosts","setFinalPosts","userServices","setUserServices","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","buyServiceModalData","setBuyServiceModalOpen","selectedView","setSelectedView","subscribeUserPosts","query","rifle","host","reconnect","on","posts","postEntries","Object","entries","newPosts","filter","key","GUN_PROPS","includes","map","proms","id","Http","get","post","authorId","Promise","allSettled","postsAlmostReady","postsReady","maybeOk","status","res","subscribeSharedPosts","socketExists","rifleSocketExists","shared","originalAuthor","originalPost","disconnectRifleSocket","subscribeUserProfile","unsubscribeUserProfile","final","sort","b","date","unSubProfiles","pub","forEach","unSub","then","toggleTipModal","toggleBuyServiceModal","buyData","toggleUnlockModal","copyClipboard","handleViewChange","header","ShockAvatar","greyBorder","displayName","bio","index","profile","originalPublicKey","originalProfile","fallback","originalPostProfile","sharedTimestamp","shareDate","sharerProfile","postPublicKey","openTipModal","openUnlockModal","isOnlineNode","openDeleteModal","timestamp","contentItems","avatar","username","processDisplayName","tipCounter","tipValue","serviceTitle","serviceDescription","serviceCondition","Pad","amt","padding","bgColor","fgColor","size","ClipboardIcon","QRCodeIcon","backgroundColor"],"mappings":"iKASeA,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACnB,qBAAKC,UAAU,gBAAgBD,MAAOA,EAAtC,SACGD,KCQUG,G,OAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OACjBD,EACE,sBAAKF,UAAU,aAAf,UACE,mBAAGA,UAAU,mBAAb,SAAiCE,IACjC,qBAAKF,UAAU,mBAAmBI,QAASD,EAA3C,SACE,mBAAGH,UAAU,sBAGf,O,OCiBSK,IArBD,SAAC,GAMR,IAAD,IALJC,iBAKI,SAJJH,EAII,EAJJA,YAII,IAHJI,kBAGI,MAHS,GAGT,EAFJT,EAEI,EAFJA,SAEI,IADJU,oBACI,MADW,GACX,EACEC,EAAaC,uBAAY,WAC7BP,MACC,CAACA,IACJ,OACE,sBAAKH,UAAWW,IAAW,CAAEC,OAAO,EAAM,aAAcN,IAAxD,UACE,qBAAKN,UAAU,iBAAiBI,QAASK,IACzC,sBAAKT,UAAU,kBAAf,UACE,cAAC,EAAD,CAAYE,MAAOK,EAAYJ,YAAaM,IAC5C,cAAC,EAAD,CAAcV,MAAOS,EAArB,SAAoCV,Y,gJC8C7Be,IAjEI,SAAC,GAYb,IAXLC,EAWI,EAXJA,MACAC,EAUI,EAVJA,KACAC,EASI,EATJA,SACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,MAMI,IALJC,iBAKI,MALQ,OAKR,MAJJC,YAII,MAJG,OAIH,MAHJC,eAGI,MAHM,QAGN,MAFJC,aAEI,SADJC,EACI,EADJA,SAEA,OACE,sBACExB,UAAWW,IAAW,CACpBc,OAAO,EACP,iBAAkBD,EAClB,cAAeD,IAJnB,UAOGT,EAAQ,mBAAGd,UAAU,cAAb,SAA4Bc,IAAa,KAClD,sBACEd,UAAWW,IAAW,CACpB,yBAAyB,EACzB,iCAA8C,aAAZW,IAHtC,UAMe,aAAZA,EACC,0BACEtB,UAAU,mCACVe,KAAMA,EACNC,SAAUA,EACVI,UAAWA,EACXD,MAAOA,EACPK,SAAUA,IAGZ,uBACExB,UAAU,cACVqB,KAAMA,EACNN,KAAMA,EACNC,SAAUA,EACVI,UAAWA,EACXD,MAAOA,EACPK,SAAUA,IAGbP,GAAeC,EACd,qBAAKlB,UAAU,qBAAqBI,QAASa,EAA7C,SACE,mBACEjB,UAAWW,IAAW,aACpB,2BAA2B,EAC3Be,KAAK,GACJR,GAAa,IAEhBd,QAASa,MAGX,a,iCC9DZ,mBAmCeU,IAjCG,kBAChB,sBAAK3B,UAAU,uBAAf,UACE,cAAC,IAAD,CACEA,UAAU,iBACV4B,GAAG,YACHC,gBAAgB,iBAHlB,SAKE,mBAAG7B,UAAU,2CAEf,cAAC,IAAD,CACEA,UAAU,iBACV4B,GAAG,QACHC,gBAAgB,iBAHlB,SAKE,mBAAG7B,UAAU,yCAEf,cAAC,IAAD,CACEA,UAAU,iBACV4B,GAAG,WACHC,gBAAgB,iBAHlB,SAKE,mBAAG7B,UAAU,4CAEf,cAAC,IAAD,CACEA,UAAU,iBACV4B,GAAG,QACHC,gBAAgB,iBAHlB,SAKE,mBAAG7B,UAAU,8C,2GCgDJ8B,IA1EA,SAAC,GAWT,IAAD,IAVJhB,aAUI,MAVI,KAUJ,MATJiB,YASI,MATG,KASH,MARJC,eAQI,MARM,KAQN,MAPJ5B,eAOI,WAPM6B,EAON,MANJC,kBAMI,aALJC,aAKI,aAJJZ,aAII,aAHJa,gBAGI,aAFJtC,gBAEI,MAFO,KAEP,MADJC,aACI,MADI,GACJ,IACkCsC,oBAAS,GAD3C,mBACGC,EADH,KACgBC,EADhB,KAEEC,EAAoB9B,uBAAY,WAChCwB,GACFK,GAAgBD,KAEjB,CAACA,EAAaJ,IAEXO,EAAcC,mBAAQ,WAC1B,OAAIV,EACK,qBAAKW,IAAKX,EAAShC,UAAU,eAAe4C,IAAI,KAGlD,mBAAG5C,UAAS,wBAAY+B,QAAZ,IAAYA,IAAQ,YACtC,CAACA,EAAMC,IAEJa,EAAeH,mBAAQ,WAC3B,OAAI5B,EACK,mBAAGd,UAAU,gBAAb,SAA8Bc,IAGhC,OACN,CAACA,IAEJ,OACE,sBACEd,UAAWW,IAAW,CACpB,qBAAqB,EACrB,2BAA4BG,EAC5B,gBAAiBqB,EACjB,gBAAiBZ,IALrB,UAQE,sBACEvB,UAAWW,IAAW,CACpB,WAAW,EACX,iBAAkBG,EAClB,qBAAsBA,EACtB,mBAAoBsB,EACpB,eAAgBE,EAChB,iBAAkBJ,IAEpB9B,QAAO,OAAEA,QAAF,IAAEA,IAAWoC,EACpBzC,MAAOA,EAVT,UAYG0C,EACAI,KAGF/C,EACC,qBACEE,UAAWW,IAAW,CACpB,mBAAmB,EACnB,uBAAwB2B,IAH5B,SAMGxC,IAED,U,uDCzEV,uBAWegD,IARK,SAAC,GAAkC,IAAD,IAA/BC,YAA+B,MAAxB,SAAwB,EAAd3C,EAAc,EAAdA,QACtC,OACE,qBAAKJ,UAAU,mBAAmBI,QAASA,EAA3C,SACE,mBAAGJ,UAAU,wBAAb,SAAsC+C,Q,oBCL5CC,EAAOC,QAAU,CAAC,UAAY,kCAAkC,SAAW,iCAAiC,WAAa,mCAAmC,QAAU,kC,iCCDvJ,QAA0B,uC,iCCA1B,QAA0B,oC,+ICwF1BC,IA/EM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACzBC,EAAWC,cAD+B,EAEtBjB,mBAAS,IAFa,mBAEzCkB,EAFyC,KAElCC,EAFkC,OAGlBnB,oBAAS,GAHS,mBAGzCoB,EAHyC,KAGhCC,EAHgC,OAIpBrB,mBAAS,GAJW,mBAIzCsB,EAJyC,KAIjCC,EAJiC,OAKZvB,oBAAS,GALG,mBAKzCwB,EALyC,KAK7BC,EAL6B,KAO1CC,EAAgBrD,uBAAY,SAAAsD,GACV,WAAlBA,EAAEC,OAAOlD,MACX6C,EAAUI,EAAEC,OAAO9C,SAEpB,IAEG+C,EAAYxD,sBAAW,uCAC3B,WAAMsD,GAAN,qBAAAG,EAAA,6DACEH,EAAEI,iBADJ,SAGIV,GAAW,GAHf,SAIUL,EACJgB,YAAY,CACVV,SACAW,UAAWnB,EAAQmB,UACnBC,OAAQpB,EAAQqB,UARxB,OAWIV,GAAc,GAXlB,gDAaIW,QAAQlB,MAAR,MACIJ,IACIuB,EAAe,KAAIC,QACnBC,EAFK,UAEW,KAAIC,gBAFf,iBAEW,EAAcC,YAFzB,aAEW,EAAoBJ,aAC1ClB,EAAQ,OAACoB,QAAD,IAACA,IAAiBF,IAjBhC,yBAoBIhB,GAAW,GApBf,4EAD2B,sDAwB3B,CAACL,EAAUM,EAAQR,IAYrB,OARA4B,qBAAU,WACH5B,IACHO,GAAW,GACXF,EAAS,MACTM,GAAc,MAEf,CAACX,IAGF,cAAC,IAAD,CAAOhD,YAAaiD,EAAY9C,YAAa6C,EAAS5C,WAAW,WAAjE,SACGsD,EACC,sBAAK7D,UAAU,oBAAf,UACE,mBAAGA,UAAU,yCACb,mBAAGA,UAAU,oBAAb,uCACA,mBAAGA,UAAU,wBAGf,uBAAMA,UAAU,sBAAsBgF,SAAUd,EAAhD,UACGX,EAAQ,qBAAKvD,UAAU,aAAf,SAA6BuD,IAAe,KACpDE,EAAU,cAAC,IAAD,CAAQwB,SAAO,EAAClC,KAAK,mBAAsB,KACtD,mBAAG/C,UAAU,iBAAb,uFAIA,cAAC,IAAD,CACEe,KAAK,SACLC,SAAU+C,EACV5C,MAAOwC,EACPvC,UAAU,UACVG,OAAK,IAEP,cAAC,IAAD,CAAawB,KAAK,WAAW3C,QAAS8D,W,2LCTjCgB,IA/DK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAY/B,EAAiB,EAAjBA,WAC3BC,EAAWC,cADiC,EAExBjB,mBAAS,IAFe,mBAE3CkB,EAF2C,KAEpCC,EAFoC,OAGpBnB,oBAAS,GAHW,mBAG3CoB,EAH2C,KAGlCC,EAHkC,OAIRrB,oBAAS,GAJD,mBAI3C+C,EAJ2C,KAI5BC,EAJ4B,KAO5CC,EAAe5E,sBAAW,uCAC9B,WAAMsD,GAAN,qBAAAG,EAAA,6DACEH,EAAEI,iBADJ,SAGIV,GAAW,GAHf,SAIU6B,YAAc,IAAIJ,EAAWb,UAAUa,EAAWX,OAAlDe,CAA0DlC,GAJpE,OAKIgC,GAAiB,GALrB,gDAOIZ,QAAQlB,MAAR,MACI4B,IACIT,EAAe,KAAIC,QACnBC,EAFQ,UAEQ,KAAIC,gBAFZ,iBAEQ,EAAcC,YAFtB,aAEQ,EAAoBJ,aAC1ClB,EAAQ,OAACoB,QAAD,IAACA,IAAiBF,IAXhC,yBAcIhB,GAAW,GAdf,4EAD8B,sDAkB9B,CAACL,EAAU8B,IAYb,OARAJ,qBAAU,WACHI,IACHzB,GAAW,GACXF,EAAS,MACT6B,GAAiB,MAElB,CAACF,IAGF,cAAC,IAAD,CAAOhF,YAAaiD,EAAY9C,YAAa6E,EAAY5E,WAAW,iBAApE,SACG6E,EACC,sBAAKpF,UAAU,oBAAf,UACE,mBAAGA,UAAU,yCACb,mBAAGA,UAAU,oBAAb,+CAQF,uBAAMA,UAAU,sBAAsBgF,SAAUM,EAAhD,UACG/B,EAAQ,qBAAKvD,UAAU,aAAf,SAA6BuD,IAAe,KACpDE,EAAU,cAAC,IAAD,CAAQwB,SAAO,EAAClC,KAAK,mBAAsB,KACtD,mBAAG/C,UAAU,iBAAb,kFAGA,cAAC,IAAD,CAAa+C,KAAK,SAAS3C,QAASkF,W,mGCxB/BE,EAhCF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQrE,EAA6B,EAA7BA,KAAMsE,EAAuB,EAAvBA,MAC7B5F,EAAQ2C,mBAA6B,WACzC,MAAa,aAATrB,EACK,CACLuE,gBAAiB,QACjBC,gBAAgB,GAAD,OAAKF,EAAQ,EAAb,MACfG,gBAAiBL,EACjBM,iBAAkB,QAClBC,iBAAiB,GAAD,OAAKL,EAAQ,EAAb,MAChBM,iBAAkBR,EAClBS,OAAQR,GAIC,eAATrE,EACK,CACL8E,eAAgB,QAChBC,eAAgBT,EAAQ,EACxBU,eAAgBZ,EAChBa,kBAAmB,QACnBC,kBAAmBZ,EAAQ,EAC3Ba,kBAAmBf,EACnBE,MAAOD,GAIJ,KACN,CAACD,EAAOC,EAAQrE,EAAMsE,IAEzB,OAAO,qBAAK5F,MAAOA,K,kBCkBN0G,IA5CQ,SAAC,GAAiD,IAA/CzF,EAA8C,EAA9CA,SAAU0F,EAAoC,EAApCA,SAClC,OACE,sBACE1G,UAAWW,IACTgG,IACAA,IACAA,IACAA,IACAC,IAAOC,WANX,UASE,sBACE7G,UAAWW,IACTgG,IACa,UAAbD,GAAwBE,IAAOF,SAClB,aAAbA,GAA2BE,IAAOE,YAEpC1G,QAAS,WACPY,EAAS,UAPb,mBAaA,qBAAKhB,UAAW2G,IAAhB,SACE,cAAC,EAAD,CAAMlB,MAAM,QAAQC,OAAQ,GAAIrE,KAAK,WAAWsE,MAAO,MAGzD,sBACE3F,UAAWW,IACTgG,IACa,aAAbD,GAA2BE,IAAOF,SACrB,UAAbA,GAAwBE,IAAOE,YAEjC1G,QAAS,WACPY,EAAS,aAPb,2B,0CCvCNgC,EAAOC,QAAU,CAAC,eAAe,gCAAgC,oBAAoB,qCAAqC,gBAAgB,iCAAiC,yBAAyB,0CAA0C,iBAAiB,kCAAkC,eAAe,gCAAgC,eAAe,gCAAgC,aAAa,8BAA8B,kBAAkB,mCAAmC,kBAAkB,mCAAmC,2BAA2B,4CAA4C,sBAAsB,uCAAuC,sBAAsB,uCAAuC,iBAAiB,kCAAkC,sBAAsB,uCAAuC,8BAA8B,+CAA+C,yBAAyB,0CAA0C,yBAAyB,0CAA0C,uBAAuB,wCAAwC,wBAAwB,yCAAyC,uBAAuB,wCAAwC,MAAM,yB,kVC2F9sC8D,EAnFS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAAS5D,EAAiB,EAAjBA,WAC5BC,EAAWC,cADkC,EAEzBjB,mBAAS,IAFgB,mBAE5CkB,EAF4C,KAErCC,EAFqC,OAGrBnB,oBAAS,GAHY,mBAG5CoB,EAH4C,KAGnCC,EAHmC,OAIfrB,mBAAS,MAJM,mBAI5C4E,EAJ4C,KAIhCC,EAJgC,OAKvB7E,oBAAS,GALc,mBAK5C8E,EAL4C,KAKpCC,EALoC,KAQ7CC,EAAY3G,sBAAW,uCAC3B,WAAMsD,GAAN,+BAAAG,EAAA,yDACEH,EAAEI,iBADJ,SAGWkD,EAA4CN,EAA5CM,aAAaC,EAA+BP,EAA/BO,MAAMC,EAAyBR,EAAzBQ,UAAUC,EAAeT,EAAfS,YAChCF,GAAUC,GAA6C,kBAAzBE,OAAOJ,GAJ7C,uBAKM7C,QAAQlB,MAAM,4BACdkB,QAAQlB,MAAMyD,GANpB,iCASItD,GAAW,GATf,UAU4BiE,YAAWJ,EAAMC,EAAUF,EAA3BK,CAAyCtE,GAVrE,QAUUuE,EAVV,OAWInD,QAAQoD,IAAID,GACZV,EAAcU,GACK,gBAAhBH,GACDK,YAAkBF,EAAUG,QAAQH,EAAUI,OAAO,GAArDF,CAAyDzE,GAExC,eAAhBoE,GACDQ,YAAeL,EAAUG,QAAQH,EAAUI,OAAO,GAAlDC,CAAsD5E,GAjB5D,kDAoBIoB,QAAQlB,MAAR,MACIyD,IACItC,EAAe,KAAIC,QACnBC,EAFK,UAEW,KAAIC,gBAFf,iBAEW,EAAcC,YAFzB,aAEW,EAAoBJ,aAC1ClB,EAAQ,OAACoB,QAAD,IAACA,IAAiBF,IAxBhC,yBA2BIhB,GAAW,GA3Bf,6EAD2B,sDA+B3B,CAACL,EAAU2D,IAIbjC,qBAAU,WACHiC,IACHtD,GAAW,GACXF,EAAS,MACT0D,EAAc,SAEf,CAACD,IACJ,IAAMiB,EAAUxH,uBAAY,WAC1ByH,UAAUC,UAAUC,UAAUC,KAAKC,UAAUtB,IAC7CG,GAAU,KACT,CAACH,EAAWG,IACf,OACE,cAAC/G,EAAA,EAAD,CAAOF,YAAaiD,EAAY9C,YAAa0G,EAASzG,WAAW,cAAjE,SACG0G,EACC,sBAAKjH,UAAU,oBAAf,UACE,mBAAGA,UAAU,yCACb,mBAAGA,UAAU,oBAAb,mDACA,4BAAIsI,KAAKC,UAAUtB,KACnB,wBAAQ7G,QAAS8H,EAAjB,+BACCf,GAAU,2CAQb,uBAAMnH,UAAU,sBAAsBgF,SAAUqC,EAAhD,UACG9D,EAAQ,qBAAKvD,UAAU,aAAf,SAA6BuD,IAAe,KACpDE,EAAU,cAAC+E,EAAA,EAAD,CAAQvD,SAAO,EAAClC,KAAK,mBAAsB,KACtD,oBAAG/C,UAAU,iBAAb,UACGgH,GAAWA,EAAQM,aADtB,6DAGA,cAACxE,EAAA,EAAD,CAAaC,KAAK,MAAM3C,QAASiH,U,0BChDrCoB,EAAOC,IAAMC,MAAK,kBAAM,uDACxBC,EAAaF,IAAMC,MAAK,kBAAM,8DA2WrBE,UAvWO,WAEpB,IAAMxF,EAAWC,cAFS,EAGsBjB,oBAAS,GAH/B,mBAGnByG,EAHmB,KAGDC,EAHC,KAKpBC,EAASC,aAAY,qBAAGC,KAAgBF,UAExCG,EAAeF,aAAY,qBAAGE,gBACjBC,EAAkBC,cAA7B/E,UACFgF,EAAOC,cAAkBA,aAAiBH,IATtB,EAUQ/G,mBAAS,IAVjB,mBAUnBmH,EAVmB,KAURC,EAVQ,OAWoBpH,mBAAS,IAX7B,mBAWnBqH,EAXmB,KAWFC,EAXE,OAYUtH,mBAAS,IAZnB,mBAYnBuH,EAZmB,KAYPC,EAZO,OAacxH,mBAAS,IAbvB,oBAanByH,GAbmB,MAaLC,GAbK,SAcc1H,mBAAS,MAdvB,qBAcnB2H,GAdmB,MAcLC,GAdK,SAeoB5H,mBAAS,MAf7B,qBAenB6H,GAfmB,MAeFC,GAfE,SAgB4B9H,mBAAS,MAhBrC,qBAgBnB+H,GAhBmB,MAgBEC,GAhBF,SAiBchI,mBACtC,SAlBwB,qBAiBnBiI,GAjBmB,MAiBLC,GAjBK,MAoBpBC,GAAqB9J,sBAAW,sBAAC,4BAAAyD,EAAA,6DAC/BsG,EAD+B,UACpBrB,EADoB,wBAEVsB,YAAM,CAC/BC,KAAM3B,EACNyB,QACAnG,UAAW,GACXsG,WAAW,IANwB,cAQxBC,GAAG,SAAhB,uCAA0B,WAAMC,GAAN,uBAAA3G,EAAA,6DAClB4G,EAAcC,OAAOC,QAAQH,GAC7BI,EAAWH,EACdI,QAAO,mCAAEC,EAAF,YAA4B,OAA5B,OAAqCC,IAAUC,SAASF,MAC/DG,KAAI,0CAEDC,EAAQN,EAASK,IAAT,uCAAa,WAAME,GAAN,iBAAAtH,EAAA,sEACIuH,IAAKC,IAAL,6BACLvC,EADK,uBACuBqC,IAF3B,uBACXG,EADW,EACjB9G,KADiB,6CAIb8G,EAAK9G,MAJQ,IAIF2G,KAAII,SAAUzC,KAJZ,2CAAb,uDANU,SAYO0C,QAAQC,WAAWP,GAZ1B,OAYlBQ,EAZkB,OAalBC,EAAaD,EAChBb,QAAO,SAAAe,GAAO,MAAuB,cAAnBA,EAAQC,UAE1BZ,KAAI,SAAAa,GAAG,OAAIA,EAAIjL,SAClBsI,EAAawC,GAjBW,2CAA1B,uDARqC,2CA2BpC,CAACjD,EAAQI,IAENiD,GAAuB3L,sBAAW,sBAAC,8BAAAyD,EAAA,6DACjCsG,EADiC,UACtBrB,EADsB,qBAEjCkD,EAAeC,YAAkB9B,GAFA,SAGZC,YAAM,CAC/BC,KAAM3B,EACNyB,QACAnG,UAAW,GACXsG,WAAW,IAP0B,iBAS1BC,GAAG,SAAhB,uCAA0B,WAAMC,GAAN,uBAAA3G,EAAA,6DAClB4G,EAAcC,OAAOC,QAAQH,GAC7BI,EAAWH,EACdI,QAAO,mCAAEC,EAAF,YAA4B,OAA5B,OAAqCC,IAAUC,SAASF,MAC/DG,KAAI,0CAEDC,EAAQN,EAASK,IAAT,uCAAa,WAAME,GAAN,qBAAAtH,EAAA,sEACMuH,IAAKC,IAAL,6BACPvC,EADO,6BAC2BqC,IAFjC,uBACXe,EADW,EACjB1H,KADiB,SAII4G,IAAKC,IAAL,6BACLa,EAAO1H,KAAK2H,eADP,uBACoChB,IALxC,uBAIXG,EAJW,EAIjB9G,KAJiB,6CAQpB0H,EAAO1H,MARa,IASvB4H,aAAa,2BAAMd,EAAK9G,MAAZ,IAAkB2G,OAC9BI,SAAUzC,EACV/H,KAAM,YAXiB,2CAAb,uDANU,SAoBOyK,QAAQC,WAAWP,GApB1B,OAoBlBQ,EApBkB,OAqBlBC,EAAaD,EAChBb,QAAO,SAAAe,GAAO,MAAuB,cAAnBA,EAAQC,UAE1BZ,KAAI,SAAAa,GAAG,OAAIA,EAAIjL,SAClBwI,EAAmBsC,GAzBK,2CAA1B,uDA2BKK,EApCkC,0CAqC9B,WACLK,YAAsBlC,MAtCa,2CAyCtC,CAACzB,EAAQI,IAGZrE,qBAAU,WAER,OADA1B,EAASuJ,YAAqBxD,IACvB,WACL/F,EAASwJ,YAAuBzD,OAEjC,CAAC/F,EAAU+F,IAEdrE,qBAAU,WACRyF,OACC,CAACA,KAEJzF,qBAAU,WACRsH,OACC,CAACA,KAEJtH,qBAAU,WACR,IAAM+H,EAAQ,sBAAItD,GAAJ,YAAkBE,IAAiBqD,MAC/C,SAAC5I,EAAG6I,GAAJ,OAAUA,EAAEC,KAAO9I,EAAE8I,QAEvBpD,EAAciD,GACd,IAAMI,EAAgBxD,EACnByB,QAAO,SAAAS,GAAI,OAAKzC,EAAayC,EAAKa,mBAClClB,KAAI,SAAAK,GACH,IAAMuB,EAAMvB,EAAKa,eAEjB,OADApJ,EAASuJ,YAAqBO,IACvB,WACL9J,EAASwJ,YAAuBM,QAGtC,OAAO,WACLD,EAAcE,SAAQ,SAAAC,GAAK,OAAIA,UAEhC,CAAChK,EAAUmG,EAAWL,EAAcO,IAEvC3E,qBAAU,WACR2G,IAAKC,IAAL,6BAA+BvC,EAA/B,0BAAqEkE,MACnE,YAAe,IAAZxI,EAAW,EAAXA,KACDiF,GAAgBjF,EAAKA,WAGxB,CAACsE,IAEJ,IAAMjJ,GAAcO,uBAAY,WAC9BqI,GAAqBD,KACpB,CAACA,IAEEyE,GAAiB7M,uBACrB,SAAAyC,IACM6G,IAAiB7G,GACnB8G,GAAgB,MAGlBA,GAAgB9G,KAElB,CAAC6G,KAEGwD,GAAwB9M,uBAC5B,SAAA+M,IACMrD,IAAwBqD,GAC1BpD,GAAuB,MAGzBA,GAAuBoD,KAEzB,CAACrD,KAEGsD,GAAoBhN,uBACxB,SAAAyE,IACM+E,IAAoB/E,GACtBgF,GAAmB,MAGrBA,GAAmBhF,KAErB,CAAC+E,KAGGyD,GAAgBjN,uBAAY,WAChCyH,UAAUC,UAAUC,UAAUe,KAC7B,CAACA,IAkFEwE,GAAmBlN,uBAAY,SAACgG,GACpC6D,GAAgB7D,KACf,IAGH,OACE,sBAAK1G,UAAWW,IAAW,iBAAkBiG,IAAO,iBAApD,UACE,sBAAK5G,UAAW4G,IAAO,qBAAvB,UACE,qBAAK5G,UAAU,gBAAf,SACGsJ,EAAKuE,QACJ,qBACEjL,IAAI,2BACJD,IAAG,iCAA4B2G,EAAKuE,YAK1C,sBAAK7N,UAAW4G,IAAO,0BAAvB,UACE,qBACE5G,UAAW4G,IAAO,kBAClB7G,MAAO,CACLmG,OAAO,GAAD,OArRA,IAqRA,MACNP,MAAM,GAAD,OAtRC,IAsRD,OAJT,SAOE,cAACmI,EAAA,EAAD,CACE5H,OA1RM,IA2RN5B,UAAW8E,EACX2E,YAAU,MAGd,sBAAK/N,UAAW4G,IAAO,gBAAvB,UACE,mBAAG5G,UAAW4G,IAAO,gBAArB,SAAuC0C,EAAK0E,cAC5C,mBAAGhO,UAAW4G,IAAO,gBAArB,SACG0C,EAAK2E,KAAO,2BAKnB,cAACxH,EAAA,EAAD,CAAgBzF,SAAU4M,GAAkBlH,SAAU4D,KAEtD,gCACoB,UAAjBA,IA1HAV,EAAW2B,KAAI,SAACK,EAAMsC,GAC3B,IAAMC,EAAUhF,EAAayC,EAAKC,UAClC,GAAkB,WAAdD,EAAKvK,KAAmB,CAC1B,IAAM+M,EAAoBxC,EAAKa,eACzB4B,EAAkBlF,EAAaiF,GACrC,OACE,cAAC,WAAD,CAAUE,SAAU,cAAC9F,EAAA,EAAD,IAApB,SACE,cAACI,EAAD,CACE8D,aAAcd,EAAKc,aACnB6B,oBAAqBF,EACrBG,gBAAiB5C,EAAK6C,UACtBC,cAAeP,EACfQ,cAAeP,EACfQ,aAAcrB,GACdsB,gBAAiBnB,GAEjBoB,cAAY,EACZC,gBAAiB,QAXgBb,GAiBzC,OACE,cAAC,WAAD,CAAUI,SAAU,cAAC9F,EAAA,EAAD,IAApB,SACE,cAACC,EAAD,CACEgD,GAAIG,EAAKH,GACTuD,UAAWpD,EAAKqB,KAChBgC,aAAcrD,EAAKqD,aACnBC,OAAM,wCAA4Bf,QAA5B,IAA4BA,OAA5B,EAA4BA,EAASe,QAC3CC,SAAUC,YAAkB,OAACjB,QAAD,IAACA,OAAD,EAACA,EAAS7E,KAAV,OAAgB6E,QAAhB,IAAgBA,OAAhB,EAAgBA,EAASH,aACrD1J,UAAWsH,EAAKC,SAChB+C,aAAcrB,GACdsB,gBAAiBnB,GACjB2B,WAAY,EACZC,SAAU,EAEVR,cAAY,EACZC,gBAAiB,QAdgBb,MAmGjB,aAAjB5D,IA9EAU,OAAOC,QAAQnB,IACnBqB,QAAO,yDACPI,KAAI,YAAoB,IAAD,mBAAjBE,EAAiB,KAAbzE,EAAa,KAStB,OACE,sBAAKhH,UAAW4G,IAAOgF,KAAvB,UACE,gDACA,4BAAIH,IACJ,iDAEA,4BAAIzE,EAAQS,cACZ,mDAEA,4BAAIT,EAAQuI,eACZ,yDAEA,4BAAIvI,EAAQwI,qBACZ,uDAEA,4BAAIxI,EAAQyI,mBACZ,mDAEA,4BAAIzI,EAAQM,eACZ,wBAAQlH,QA3BE,WACZiK,GAAuB,2BAElBrD,GAFiB,IAGpBQ,UAAWiE,EACXlE,MAAO6B,MAsBP,kCAoDJ,cAACsG,EAAA,EAAD,CAAKC,IAAK,MAEV,eAACtP,EAAA,EAAD,CACEF,YAAaA,GACbG,UAAWwI,EACXtI,aAAc,CACZoP,QAAS,aAJb,UAOE,cAAC,IAAD,CACEC,QAAQ,UACRC,QAAQ,UACR3O,MAAOiI,EACP2G,KAAM,IACN/P,UAAW4G,IAAO,oBAEpB,mBAAG5G,UAAW4G,IAAO,uBAArB,iDAGA,sBACE5G,UAAW4G,IAAO,+BAClBxG,QAASuN,GAFX,UAIE,qBACEhL,IAAKqN,IACLhQ,UAAW4G,IAAO,0BAClBhE,IAAI,KAEN,mBAAG5C,UAAW4G,IAAO,0BAArB,4CAKJ,cAAC1D,EAAA,EAAD,CAAcC,QAAS6G,GAAc5G,WAAYmK,KACjD,cAACrI,EAAA,EAAD,CACEC,WAAY+E,GACZ9G,WAAYsK,KAEd,cAAC,EAAD,CACE1G,QAASoD,GACThH,WAAYoK,KAGd,cAAC1L,EAAA,EAAD,CACE1B,QAASD,GACTgC,OAAK,EACLH,QAASiO,IACTlQ,MAAO,CAAEmQ,gBAAiB,iBAC1BnO,KAAM,KACNjB,MAAO,UAIX,cAACa,EAAA,EAAD","file":"static/js/14.4f17d789.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"modal-content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"modal-head\">\n      <p className=\"modal-head-title\">{title}</p>\n      <div className=\"modal-head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"modal-open\": modalOpen })}>\n      <div className=\"modal-backdrop\" onClick={closeModal} />\n      <div className=\"modal-container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst InputGroup = ({\n  label,\n  name,\n  onChange,\n  inputAction,\n  actionIcon,\n  value,\n  inputMode = \"text\",\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst ModalSubmit = ({ text = \"Submit\", onClick }) => {\n  return (\n    <div className=\"modal-submit-btn\" onClick={onClick}>\n      <p className=\"modal-submit-btn-text\">{text}</p>\n    </div>\n  );\n};\n\nexport default ModalSubmit;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileDivider_container__3ob9k\",\"selected\":\"ProfileDivider_selected__3U98y\",\"unselected\":\"ProfileDivider_unselected__1Z_qd\",\"divider\":\"ProfileDivider_divider__1IzYV\"};","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { sendTipPost } from \"../../../../actions/FeedActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.css\";\n\nconst SendTipModal = ({ tipData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(0);\n  const [tipSuccess, setTipSuccess] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n  }, []);\n\n  const submitTip = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await dispatch(\n          sendTipPost({\n            amount,\n            publicKey: tipData.publicKey,\n            postId: tipData.postID\n          })\n        );\n        setTipSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (tipData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, amount, tipData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!tipData) {\n      setLoading(false);\n      setError(null);\n      setTipSuccess(false);\n    }\n  }, [tipData]);\n\n  return (\n    <Modal toggleModal={toggleOpen} modalOpen={!!tipData} modalTitle=\"Send Tip\">\n      {tipSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post tipped successfully!</p>\n          <p className=\"tip-success-desc\"></p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitTip}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            Please specify the amount of sats you'd like to tip this user with\n            below.\n          </p>\n          <InputGroup\n            name=\"amount\"\n            onChange={onInputChange}\n            value={amount}\n            inputMode=\"decimal\"\n            small\n          />\n          <ModalSubmit text=\"SEND TIP\" onClick={submitTip} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SendTipModal;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { unlockContent } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.css\";\n\nconst UnlockModal = ({ unlockData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [unlockSuccess, setUnlockSuccess] = useState(false);\n\n\n  const submitUnlock = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await unlockContent(100,unlockData.publicKey,unlockData.postID)(dispatch)\n        setUnlockSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (unlockData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, unlockData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!unlockData) {\n      setLoading(false);\n      setError(null);\n      setUnlockSuccess(false);\n    }\n  }, [unlockData]);\n\n  return (\n    <Modal toggleModal={toggleOpen} modalOpen={!!unlockData} modalTitle=\"Unlock content\">\n      {unlockSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Content unlocked successfully!</p>\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitUnlock}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            100 sats will be sent to the owner of the post to unlock the content\n          </p>\n          <ModalSubmit text=\"UNLOCK\" onClick={submitUnlock} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default UnlockModal;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","import classNames from \"classnames\";\n\nimport * as gStyles from \"../../styles\";\nimport Line from \"../Line\";\n\nimport styles from \"./css/ProfileDivider.module.css\";\n\nexport interface ProfileDividerProps {\n  onChange(newlySelected: \"posts\" | \"services\"): void;\n  selected: \"posts\" | \"services\";\n}\n\nconst ProfileDivider = ({ onChange, selected }: ProfileDividerProps) => {\n  return (\n    <div\n      className={classNames(\n        gStyles.width100,\n        gStyles.rowCentered,\n        gStyles.spaceAround,\n        gStyles.padding12,\n        styles.container\n      )}\n    >\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"posts\" && styles.selected,\n          selected === \"services\" && styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"posts\");\n        }}\n      >\n        Posts\n      </span>\n\n      <div className={gStyles.absolute /* centers it, keeps texts in place */}>\n        <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n      </div>\n\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"services\" && styles.selected,\n          selected === \"posts\" && styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"services\");\n        }}\n      >\n        Services\n      </span>\n    </div>\n  );\n};\n\nexport default ProfileDivider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"OtherUser_profile-page__OhC-_\",\"profile-container\":\"OtherUser_profile-container__2oq7s\",\"profile-cover\":\"OtherUser_profile-cover__3Fq6P\",\"profile-info-container\":\"OtherUser_profile-info-container__3qnqN\",\"profile-avatar\":\"OtherUser_profile-avatar__S6INq\",\"profile-name\":\"OtherUser_profile-name__3chmC\",\"profile-desc\":\"OtherUser_profile-desc__f9Dsj\",\"config-btn\":\"OtherUser_config-btn__t33_B\",\"config-btn-icon\":\"OtherUser_config-btn-icon__1p_6O\",\"config-btn-text\":\"OtherUser_config-btn-text__1Wg_T\",\"profile-choice-container\":\"OtherUser_profile-choice-container__3-xgF\",\"profile-choice-icon\":\"OtherUser_profile-choice-icon__3iOE1\",\"profile-choice-text\":\"OtherUser_profile-choice-text__deYLl\",\"profile-qrcode\":\"OtherUser_profile-qrcode__2Ok54\",\"profile-qrcode-desc\":\"OtherUser_profile-qrcode-desc__3cp0P\",\"profile-clipboard-container\":\"OtherUser_profile-clipboard-container__1P_p8\",\"profile-clipboard-icon\":\"OtherUser_profile-clipboard-icon__1nW2U\",\"profile-clipboard-text\":\"OtherUser_profile-clipboard-text__2g4AC\",\"publish-content-form\":\"OtherUser_publish-content-form__1YdVa\",\"publish-content-title\":\"OtherUser_publish-content-title__3EsYE\",\"publish-content-icon\":\"OtherUser_publish-content-icon__291ch\",\"m-1\":\"OtherUser_m-1__1dpvP\"};","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { buyService } from \"../../../../actions/OrdersActions\";\nimport { addAvailableToken,addStreamToken } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.css\";\n\nconst BuyServiceModal = ({ service, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [buySuccess, setBuySuccess] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n\n  const submitBuy = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        const {servicePrice,owner,serviceID,serviceType} = service\n        if(!owner || !serviceID || typeof Number(servicePrice) !== 'number'){\n          console.error(\"invalid service provided\")\n          console.error(service)\n          return\n        }\n        setLoading(true);\n        const revealRes = await buyService(owner,serviceID,servicePrice)(dispatch)\n        console.log(revealRes)\n        setBuySuccess(revealRes);\n        if(serviceType === 'torrentSeed'){\n          addAvailableToken(revealRes.seedUrl,revealRes.tokens[0])(dispatch)\n        }\n        if(serviceType === 'streamSeed'){\n          addStreamToken(revealRes.seedUrl,revealRes.tokens[0])(dispatch)\n        }\n      } catch (err) {\n        console.error(err);\n        if (service) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, service]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!service) {\n      setLoading(false);\n      setError(null);\n      setBuySuccess(null);\n    }\n  }, [buySuccess]);\n  const copyRes = useCallback(() => {\n    navigator.clipboard.writeText(JSON.stringify(buySuccess));\n    setCopied(true)\n  }, [buySuccess,setCopied]);\n  return (\n    <Modal toggleModal={toggleOpen} modalOpen={!!service} modalTitle=\"Buy Service\">\n      {buySuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">You successfully bought this service!</p>\n          <p>{JSON.stringify(buySuccess)}</p>\n          <button onClick={copyRes}>COPY TO CLIPBOARD</button>\n          {copied && <p>Copied!</p>}\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitBuy}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            {service && service.servicePrice} sats will be sent to the owner of the service provider\n          </p>\n          <ModalSubmit text=\"BUY\" onClick={submitBuy} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default BuyServiceModal;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport QRCode from \"qrcode.react\";\nimport { useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { GUN_PROPS } from \"../../utils/Gun\";\nimport Http from \"../../utils/Http\";\nimport { processDisplayName } from \"../../utils/String\";\n\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"../../actions/UserProfilesActions\";\nimport {\n  rifle,\n  rifleSocketExists,\n  disconnectRifleSocket\n} from \"../../utils/WebSocket\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport SendTipModal from \"../Feed/components/SendTipModal\";\nimport UnlockModal from \"../Feed/components/UnlockModal\";\nimport BuyServiceModal from \"../Feed/components/BuyServiceModal\";\nimport * as Store from \"../../store\";\n\nimport styles from \"./css/OtherUser.module.css\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst AVATAR_SIZE = 122;\n\nconst OtherUserPage = () => {\n  //#region controller\n  const dispatch = useDispatch();\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n  //@ts-expect-error\n  const hostIP = useSelector(({ node }) => node.hostIP);\n  //@ts-expect-error\n  const userProfiles = useSelector(({ userProfiles }) => userProfiles);\n  const { publicKey: userPublicKey } = useParams<{ publicKey: string }>();\n  const user = Store.useSelector(Store.selectUser(userPublicKey));\n  const [userPosts, setUserPosts] = useState([]);\n  const [userSharedPosts, setUserSharedPosts] = useState([]);\n  const [finalPosts, setFinalPosts] = useState([]);\n  const [userServices, setUserServices] = useState({});\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [buyServiceModalData, setBuyServiceModalOpen] = useState(null);\n  const [selectedView, setSelectedView] = useState<\"posts\" | \"services\">(\n    \"posts\"\n  );\n  const subscribeUserPosts = useCallback(async () => {\n    const query = `${userPublicKey}::posts::on`;\n    const subscription = await rifle({\n      host: hostIP,\n      query,\n      publicKey: \"\",\n      reconnect: false\n    });\n    subscription.on(\"$shock\", async posts => {\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      const proms = newPosts.map(async id => {\n        const { data: post } = await Http.get(\n          `/api/gun/otheruser/${userPublicKey}/load/posts>${id}`\n        );\n        return { ...post.data, id, authorId: userPublicKey };\n      });\n      const postsAlmostReady = await Promise.allSettled(proms);\n      const postsReady = postsAlmostReady\n        .filter(maybeOk => maybeOk.status === \"fulfilled\")\n        //@ts-expect-error\n        .map(res => res.value);\n      setUserPosts(postsReady);\n    });\n  }, [hostIP, userPublicKey]);\n\n  const subscribeSharedPosts = useCallback(async () => {\n    const query = `${userPublicKey}::sharedPosts::on`;\n    const socketExists = rifleSocketExists(query);\n    const subscription = await rifle({\n      host: hostIP,\n      query,\n      publicKey: \"\",\n      reconnect: false\n    });\n    subscription.on(\"$shock\", async posts => {\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      const proms = newPosts.map(async id => {\n        const { data: shared } = await Http.get(\n          `/api/gun/otheruser/${userPublicKey}/load/sharedPosts>${id}`\n        );\n        const { data: post } = await Http.get(\n          `/api/gun/otheruser/${shared.data.originalAuthor}/load/posts>${id}`\n        );\n        return {\n          ...shared.data,\n          originalPost: { ...post.data, id },\n          authorId: userPublicKey,\n          type: \"shared\"\n        };\n      });\n      const postsAlmostReady = await Promise.allSettled(proms);\n      const postsReady = postsAlmostReady\n        .filter(maybeOk => maybeOk.status === \"fulfilled\")\n        // @ts-expect-error\n        .map(res => res.value);\n      setUserSharedPosts(postsReady);\n    });\n    if (!socketExists) {\n      return () => {\n        disconnectRifleSocket(query);\n      };\n    }\n  }, [hostIP, userPublicKey]);\n\n  //effect for user profile\n  useEffect(() => {\n    dispatch(subscribeUserProfile(userPublicKey));\n    return () => {\n      dispatch(unsubscribeUserProfile(userPublicKey));\n    };\n  }, [dispatch, userPublicKey]);\n  //effect for user posts\n  useEffect(() => {\n    subscribeUserPosts();\n  }, [subscribeUserPosts]);\n  //effect for shared posts\n  useEffect(() => {\n    subscribeSharedPosts();\n  }, [subscribeSharedPosts]);\n  //effect for merge posts and shared posts\n  useEffect(() => {\n    const final = [...userPosts, ...userSharedPosts].sort(\n      (a, b) => b.date - a.date\n    );\n    setFinalPosts(final);\n    const unSubProfiles = userSharedPosts\n      .filter(post => !userProfiles[post.originalAuthor])\n      .map(post => {\n        const pub = post.originalAuthor;\n        dispatch(subscribeUserProfile(pub));\n        return () => {\n          dispatch(unsubscribeUserProfile(pub));\n        };\n      });\n    return () => {\n      unSubProfiles.forEach(unSub => unSub());\n    };\n  }, [dispatch, userPosts, userProfiles, userSharedPosts]);\n  //effect for services\n  useEffect(() => {\n    Http.get(`/api/gun/otheruser/${userPublicKey}/load/offeredServices`).then(\n      ({ data }) => {\n        setUserServices(data.data);\n      }\n    );\n  }, [userPublicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n      }\n\n      setTipModalOpen(tipData);\n    },\n    [tipModalData]\n  );\n  const toggleBuyServiceModal = useCallback(\n    buyData => {\n      if (buyServiceModalData || !buyData) {\n        setBuyServiceModalOpen(null);\n      }\n\n      setBuyServiceModalOpen(buyData);\n    },\n    [buyServiceModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const copyClipboard = useCallback(() => {\n    navigator.clipboard.writeText(userPublicKey);\n  }, [userPublicKey]);\n  const renderPosts = () => {\n    return finalPosts.map((post, index) => {\n      const profile = userProfiles[post.authorId];\n      if (post.type === \"shared\") {\n        const originalPublicKey = post.originalAuthor;\n        const originalProfile = userProfiles[originalPublicKey];\n        return (\n          <Suspense fallback={<Loader />} key={index}>\n            <SharedPost\n              originalPost={post.originalPost}\n              originalPostProfile={originalProfile}\n              sharedTimestamp={post.shareDate}\n              sharerProfile={profile}\n              postPublicKey={originalPublicKey}\n              openTipModal={toggleTipModal}\n              openUnlockModal={toggleUnlockModal}\n              // TODO: User online status handling\n              isOnlineNode\n              openDeleteModal={null}\n            />\n          </Suspense>\n        );\n      }\n\n      return (\n        <Suspense fallback={<Loader />} key={index}>\n          <Post\n            id={post.id}\n            timestamp={post.date}\n            contentItems={post.contentItems}\n            avatar={`data:image/jpeg;base64,${profile?.avatar}`}\n            username={processDisplayName(profile?.user, profile?.displayName)}\n            publicKey={post.authorId}\n            openTipModal={toggleTipModal}\n            openUnlockModal={toggleUnlockModal}\n            tipCounter={0}\n            tipValue={0}\n            // TODO: User online status handling\n            isOnlineNode\n            openDeleteModal={null}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    return Object.entries(userServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, service]) => {\n        const buyCB = () => {\n          setBuyServiceModalOpen({\n            //@ts-expect-error\n            ...service,\n            serviceID: id,\n            owner: userPublicKey\n          });\n        };\n        return (\n          <div className={styles.post}>\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceType}</p>\n            <strong>Service Title</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceTitle}</p>\n            <strong>Service Description</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceDescription}</p>\n            <strong>Service Condition</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceCondition}</p>\n            <strong>Service Price</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.servicePrice}</p>\n            <button onClick={buyCB}>BUY SERVICE</button>\n          </div>\n        );\n      });\n  };\n  const handleViewChange = useCallback((selected: \"posts\" | \"services\") => {\n    setSelectedView(selected);\n  }, []);\n  //#endregion controller\n\n  return (\n    <div className={classNames(\"page-container\", styles[\"profile-page\"])}>\n      <div className={styles[\"profile-container\"]}>\n        <div className=\"profile-cover\">\n          {user.header && (\n            <img\n              alt=\"User set profile header.\"\n              src={`data:image/jpeg;base64,${user.header}`}\n            />\n          )}\n        </div>\n\n        <div className={styles[\"profile-info-container\"]}>\n          <div\n            className={styles[\"profile-avatar\"]}\n            style={{\n              height: `${AVATAR_SIZE}px`,\n              width: `${AVATAR_SIZE}px`\n            }}\n          >\n            <ShockAvatar\n              height={AVATAR_SIZE}\n              publicKey={userPublicKey}\n              greyBorder\n            />\n          </div>\n          <div className={styles[\"profile-info\"]}>\n            <p className={styles[\"profile-name\"]}>{user.displayName}</p>\n            <p className={styles[\"profile-desc\"]}>\n              {user.bio || \"Shockwallet user\"}\n            </p>\n          </div>\n        </div>\n\n        <ProfileDivider onChange={handleViewChange} selected={selectedView} />\n\n        <div>\n          {selectedView === \"posts\" && renderPosts()}\n          {selectedView === \"services\" && renderServices()}\n        </div>\n\n        {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n        <Pad amt={200} />\n\n        <Modal\n          toggleModal={toggleModal}\n          modalOpen={profileModalOpen}\n          contentStyle={{\n            padding: \"40px 30px\"\n          }}\n        >\n          <QRCode\n            bgColor=\"#23282d\"\n            fgColor=\"#4285b9\"\n            value={userPublicKey}\n            size={180}\n            className={styles[\"profile-qrcode\"]}\n          />\n          <p className={styles[\"profile-qrcode-desc\"]}>\n            Scan this code to contact this user\n          </p>\n          <div\n            className={styles[\"profile-clipboard-container\"]}\n            onClick={copyClipboard}\n          >\n            <img\n              src={ClipboardIcon}\n              className={styles[\"profile-clipboard-icon\"]}\n              alt=\"\"\n            />\n            <p className={styles[\"profile-clipboard-text\"]}>\n              Tap to copy to clipboard\n            </p>\n          </div>\n        </Modal>\n        <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n        <UnlockModal\n          unlockData={unlockModalData}\n          toggleOpen={toggleUnlockModal}\n        />\n        <BuyServiceModal\n          service={buyServiceModalData}\n          toggleOpen={toggleBuyServiceModal}\n        />\n\n        <AddBtn\n          onClick={toggleModal}\n          large\n          iconURL={QRCodeIcon}\n          style={{ backgroundColor: \"var(--yellow)\" }}\n          icon={null}\n          label={null}\n        />\n      </div>\n\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default OtherUserPage;\n"],"sourceRoot":""}