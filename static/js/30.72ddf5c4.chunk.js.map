{"version":3,"sources":["common/DialogNav/index.js","common/InputGroup/index.js","pages/Profile/offerService.tsx"],"names":["DIALOG_NAV_MIN_HEIGHT_PX","CONTAINER_STYLE","minHeight","DialogNav","pageTitle","drawerVisible","onHeight","Utils","goBack","useCallback","window","history","back","divRefCb","el","getBoundingClientRect","height","e","console","log","className","ref","style","onClick","classNames","memo","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","disabled","group","fas","OfferService","dispatch","useDispatch","useHistory","useSelector","content","seedInfo","seedUrl","seedToken","useState","loading","setLoading","error","setError","serviceType","setServiceType","servicePrice","setServicePrice","onInputChange","target","preventDefault","onSubmit","a","clear","serviceTitle","serviceDescription","serviceCondition","encrypt","serviceSeedUrl","serviceSeedToken","createService","res","push","message","onDiscard","overflow","overlay","fullScreen","text","onReset","display","justifyContent","marginBottom"],"mappings":"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","file":"static/js/30.72ddf5c4.chunk.js","sourcesContent":["// @ts-check\nimport { memo, useCallback } from \"react\";\nimport classNames from \"classnames\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nexport const DIALOG_NAV_MIN_HEIGHT_PX = 73;\n/** @type {import('react').CSSProperties} */\nconst CONTAINER_STYLE = {\n  minHeight: DIALOG_NAV_MIN_HEIGHT_PX\n};\n\nconst DialogNav = ({\n  pageTitle,\n  drawerVisible = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in DialogNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className=\"dialog-nav-container\"\n      ref={divRefCb}\n      style={CONTAINER_STYLE}\n    >\n      <div className=\"dialog-nav-back\" onClick={goBack}>\n        <i className=\"icon icon-thin-back\"></i>\n      </div>\n      <p className=\"dialog-nav-title\">{pageTitle}</p>\n      <div\n        className={classNames({\n          \"dialog-nav-menu-btn\": true,\n          \"dialog-nav-hidden\": !drawerVisible\n        })}\n      >\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DialogNav);\n","import React, { memo } from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label = \"\",\n  name = \"\",\n  onChange,\n  inputAction = Utils.EMPTY_FN,\n  actionIcon = \"\",\n  value,\n  inputMode = /** @type {React.HTMLAttributes['inputMode']} */ (\"text\"),\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled = false\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InputGroup);\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DialogNav from \"../../common/DialogNav\";\nimport Loader from \"../../common/Loader\";\nimport InputGroup from \"../../common/InputGroup\";\nimport { createService } from \"../../actions/OrdersActions\";\nimport { useHistory } from \"react-router\";\nimport \"./css/index.scoped.css\";\n\nconst OfferService = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  //@ts-expect-error\n  const { seedUrl, seedToken } = useSelector(({ content }) => content.seedInfo);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [serviceType, setServiceType] = useState(\"torrentSeed\");\n  const [servicePrice, setServicePrice] = useState(0);\n  //optional fields\n\n  const onInputChange = useCallback(\n    e => {\n      const { value, name } = e.target;\n      e.preventDefault();\n      switch (name) {\n        case \"type\": {\n          setServiceType(value);\n          return;\n        }\n        case \"price\": {\n          setServicePrice(value);\n          return;\n        }\n        default:\n          return;\n      }\n    },\n    [setServiceType, setServicePrice]\n  );\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      if (!seedUrl || !seedToken) {\n        setError(\"seed url and token are not set in config\");\n        return;\n      }\n      if (servicePrice <= 0) {\n        setError(\"service price must be greater than 0\");\n        return;\n      }\n      try {\n        setLoading(true);\n        const clear = {\n          serviceType,\n          serviceTitle: \"Content Seeding\",\n          serviceDescription: \"\",\n          serviceCondition: \"\",\n          servicePrice\n        };\n        const encrypt = {\n          serviceSeedUrl: seedUrl,\n          serviceSeedToken: seedToken\n        };\n        const res = await createService(clear, encrypt)(dispatch);\n        console.log(res);\n        setLoading(false);\n        history.push(\"/profile\");\n      } catch (err) {\n        setLoading(false);\n        setError(err.message || err);\n      }\n    },\n    [serviceType, servicePrice, history, dispatch, seedUrl, seedToken]\n  );\n  const onDiscard = useCallback(\n    async e => {\n      e.preventDefault();\n      setError(null);\n      setServiceType(\"torrentSeed\");\n      setServicePrice(0);\n    },\n    [setError, setServiceType, setServicePrice]\n  );\n\n  return (\n    <div\n      className=\"publish-content-form-container m-1\"\n      style={{ overflow: \"auto\" }}\n    >\n      {loading ? (\n        <Loader overlay fullScreen text=\"Creating service...\" />\n      ) : null}\n      <DialogNav drawerVisible={false} pageTitle=\"\" />\n      <form\n        className=\"publish-content-form\"\n        onSubmit={onSubmit}\n        onReset={onDiscard}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginBottom: \"1rem\"\n          }}\n        >\n          <div>\n            <h2>Offer service</h2>\n            <div className=\"line\"></div>\n          </div>\n        </div>\n        <div>\n          <select name=\"type\" value={serviceType} onChange={onInputChange}>\n            <option value=\"torrentSeed\">Content Seeding</option>\n          </select>\n          {/*@ts-ignore */}\n          <InputGroup\n            label=\"Service Price\"\n            name=\"price\"\n            type=\"number\"\n            actionIcon={null}\n            value={servicePrice}\n            onChange={onInputChange}\n            disabled={false}\n            inputAction={null}\n          />\n        </div>\n        {error ? <p className=\"error-container\">{error}</p> : null}\n        <div className=\"flex-center\">\n          <input type=\"reset\" value=\"reset\" className=\"shock-form-button m-1\" />\n          <input\n            type=\"submit\"\n            value=\"submit\"\n            className=\"shock-form-button-confirm m-1\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default OfferService;\n"],"sourceRoot":""}