{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/Post/components/Image/index.js","common/Modal/components/ModalSubmit/index.js","common/BottomBar/index.js","common/AddBtn/index.js","common/Line/index.tsx","common/ProfileDivider/index.tsx","common/ProfileDivider/css/ProfileDivider.module.css","images/clipboard.svg","images/qrcode.svg","pages/Feed/components/SendTipModal/index.js","pages/Feed/components/ShareModal/index.js","pages/Feed/components/UnlockModal/index.js","pages/OtherUser/css/OtherUser.module.css","pages/OtherUser/components/FollowBtn/FollowBtn.module.css","pages/OtherUser/components/SendReqBtn/SendReqBtn.module.css","common/ContentWall/ContentWall.tsx","pages/Feed/components/BuyServiceModal/index.js","pages/OtherUser/components/FollowBtn/FollowBtn.tsx","pages/OtherUser/components/SendReqBtn/SendReqBtn.tsx","pages/OtherUser/index.tsx"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","disabled","group","fas","Image","id","item","index","postId","tipValue","tipCounter","hideRibbon","width","disableZoom","useState","zoomed","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","clearTimeout","timer","setTimeout","contentURL","decodeURIComponent","magnetURI","replace","mainImageStyle","opacity","imgNode","alt","data-torrent","data-file-key","src","onLoad","display","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","ModalSubmit","text","BottomBar","to","activeClassName","AddBtn","icon","iconURL","undefined","nestedMode","large","relative","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","labelElement","Line","color","length","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","ProfileDivider","selected","showContentBtn","gStyles","styles","container","unselected","module","exports","SendTipModal","tipData","toggleOpen","dispatch","useDispatch","error","setError","loading","setLoading","amount","setAmount","tipSuccess","setTipSuccess","onInputChange","e","target","submitTip","a","preventDefault","sendTipPost","publicKey","postID","console","errorMessage","message","responseError","response","data","useEffect","onSubmit","overlay","ShareModal","shareData","success","setSuccess","submitShare","sharedPostRaw","originalAuthor","shareDate","Date","now","Http","post","path","ok","UnlockModal","unlockData","unlockSuccess","setUnlockSuccess","submitUnlock","unlockContent","MEDIA_STYLE","objectFit","ContentWall","history","useHistory","React","content","setContent","subscription","rifle","query","onError","JSON","stringify","onData","key","produce","draft","Schema","Utils","warn","slice","then","sub","off","orderedContent","Object","values","sort","b","timestamp","map","i","push","author","description","BuyServiceModal","service","buySuccess","setBuySuccess","copied","setCopied","submitBuy","servicePrice","owner","serviceID","serviceType","Number","buyService","revealRes","log","addAvailableToken","seedUrl","tokens","addStreamToken","copyRes","navigator","clipboard","writeText","Loader","FollowBtn","isFollowed","Store","find","f","user","changingStatus","setChangingStatus","handleFollow","res","status","delete","put","Error","alert","c","SendReqBtn","isInContact","handleClick","sendHandshakeRequest","Post","lazy","SharedPost","OtherUserPage","myGunPub","node","profileModalOpen","setProfileModalOpen","useParams","userPublicKey","selectedView","userServices","setUserServices","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","buyServiceModalData","setBuyServiceModalOpen","shareModalData","setShareModalData","isMe","subscribeFollows","unsubscribeFollows","subPosts","subSharedPosts","subscribeUserProfile","get","catch","toggleTipModal","toggleBuyServiceModal","buyData","toggleUnlockModal","toggleShareModal","posts","copyClipboard","handleViewChange","header","ShockAvatar","greyBorder","displayName","bio","Pad","amt","insideRow","Common","fallback","openTipModal","openUnlockModal","openShareModal","originalPostID","sharerPublicKey","sharedBy","authorId","openDeleteModal","entries","filter","serviceTitle","serviceDescription","serviceCondition","padding","bgColor","fgColor","size","ClipboardIcon","QRCodeIcon"],"mappings":"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","file":"static/js/14.747d78fb.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      <div className=\"head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"open\": modalOpen })}>\n      <div className=\"backdrop\" onClick={closeModal} />\n      <div className=\"container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label,\n  name,\n  onChange,\n  inputAction,\n  actionIcon,\n  value,\n  inputMode = \"text\",\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.scoped.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null,\n  disableZoom = false,\n  style = /** @type {import('react').CSSProperties} */ ({})\n}) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [\n      animationTimer,\n      zoomLoaded,\n      setZoomed,\n      setZoomLoaded,\n      setPreviewVisible,\n      setAnimationTimer\n    ]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { ...style, opacity: previewVisible ? 1 : 0 };\n  if (width) {\n    mainImageStyle.width = width;\n  }\n\n  const imgNode = (\n    <>\n      <img\n        className={`image torrent-img torrent-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-torrent={item.magnetURI}\n        data-file-key={index}\n        style={mainImageStyle}\n        src={contentURL}\n      />\n      <img\n        className={`image enlarged-img enlarged-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-file-key={index}\n        onLoad={() => {\n          setZoomLoaded(true);\n        }}\n        style={{\n          opacity: zoomed ? 1 : 0,\n          display: zoomed ? \"block\" : \"none\"\n        }}\n        src={contentURL}\n      />\n      {!hideRibbon && (\n        <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"media-container\">\n      {disableZoom ? (\n        imgNode\n      ) : (\n        <ControlledZoom\n          isZoomed={zoomed}\n          onZoomChange={handleZoomChange}\n          overlayBgColorStart=\"#16191c00\"\n          overlayBgColorEnd=\"#16191c\"\n        >\n          {imgNode}\n        </ControlledZoom>\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\nimport \"../../css/index.scoped.css\"\n\nconst ModalSubmit = ({ text = \"Submit\", onClick }) => {\n  return (\n    <div className=\"submit-btn\" onClick={onClick}>\n      <p className=\"submit-btn-text\">{text}</p>\n    </div>\n  );\n};\n\nexport default ModalSubmit;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","import classNames from \"classnames\";\n\nimport * as gStyles from \"../../styles\";\nimport Line from \"../Line\";\n\nimport styles from \"./css/ProfileDivider.module.css\";\n\nexport interface ProfileDividerProps {\n  onChange(newlySelected: \"posts\" | \"services\" | \"content\"): void;\n  selected: \"posts\" | \"services\" | \"content\";\n  showContentBtn?: boolean;\n}\n\nconst ProfileDivider = ({\n  onChange,\n  selected,\n  showContentBtn\n}: ProfileDividerProps) => {\n  return (\n    <div\n      className={classNames(\n        gStyles.width100,\n        gStyles.rowCentered,\n        gStyles.spaceAround,\n        gStyles.padding12,\n        styles.container\n      )}\n    >\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"posts\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"posts\");\n        }}\n      >\n        Posts\n      </span>\n\n      <div\n        className={classNames(\n          gStyles.absolute,\n          showContentBtn && styles[\"left-line\"]\n        )}\n      >\n        <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n      </div>\n\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"services\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"services\");\n        }}\n      >\n        Services\n      </span>\n\n      {showContentBtn && (\n        <>\n          <div className={classNames(gStyles.absolute, styles[\"right-line\"])}>\n            <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n          </div>\n\n          <span\n            className={classNames(\n              gStyles.unselectable,\n              selected === \"content\" ? styles.selected : styles.unselected\n            )}\n            onClick={() => {\n              onChange(\"content\");\n            }}\n          >\n            Content\n          </span>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileDivider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileDivider_container__3ob9k\",\"selected\":\"ProfileDivider_selected__3U98y\",\"unselected\":\"ProfileDivider_unselected__1Z_qd\",\"left-line\":\"ProfileDivider_left-line__2xjlN\",\"right-line\":\"ProfileDivider_right-line__1d2KH\"};","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { sendTipPost } from \"../../../../actions/FeedActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst SendTipModal = ({ tipData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(0);\n  const [tipSuccess, setTipSuccess] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n  }, []);\n\n  const submitTip = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await dispatch(\n          sendTipPost({\n            amount,\n            publicKey: tipData.publicKey,\n            postId: tipData.postID\n          })\n        );\n        setTipSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (tipData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, amount, tipData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!tipData) {\n      setLoading(false);\n      setError(null);\n      setTipSuccess(false);\n    }\n  }, [tipData]);\n\n  return (\n    <Modal toggleModal={toggleOpen} modalOpen={!!tipData} modalTitle=\"Send Tip\">\n      {tipSuccess ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post tipped successfully!</p>\n          <p className=\"tip-success-desc\"></p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitTip}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc m-1\">\n            Please specify the amount of sats you'd like to tip this user with\n            below.\n          </p>\n          <InputGroup\n            name=\"amount\"\n            onChange={onInputChange}\n            value={amount}\n            inputMode=\"decimal\"\n            small\n          />\n          <ModalSubmit text=\"SEND TIP\" onClick={submitTip} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SendTipModal;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\nimport { Http } from \"../../../../utils\";\n\nconst ShareModal = ({ shareData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const submitShare = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        const {postID:id,publicKey} = shareData\n        const sharedPostRaw = {\n          originalAuthor: publicKey,\n          shareDate: Date.now(),\n        }\n        const {data} = await Http.post(`/api/gun/put`, {\n          path: `$user>sharedPosts>${id}`,\n          value: sharedPostRaw,\n        })\n        if(data.ok){\n          setSuccess(true)\n        } else {\n          setError(\"Share operation failed\")\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, shareData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!shareData) {\n      setLoading(false);\n      setError(null);\n      setSuccess(false);\n    }\n  }, [shareData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!shareData}\n      modalTitle=\"Share post\"\n    >\n      {success ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post shared successfully!</p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitShare}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sharing...\" /> : null}\n          <p className=\"tip-modal-desc m-1\">\n            This post will be shared on your profile\n          </p>\n          <ModalSubmit text=\"SHARE\" onClick={submitShare} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default ShareModal;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { unlockContent } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst UnlockModal = ({ unlockData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [unlockSuccess, setUnlockSuccess] = useState(false);\n\n  const submitUnlock = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await unlockContent(\n          100,\n          unlockData.publicKey,\n          unlockData.postID\n        )(dispatch);\n        setUnlockSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (unlockData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, unlockData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!unlockData) {\n      setLoading(false);\n      setError(null);\n      setUnlockSuccess(false);\n    }\n  }, [unlockData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!unlockData}\n      modalTitle=\"Unlock content\"\n    >\n      {unlockSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Content unlocked successfully!</p>\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitUnlock}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            100 sats will be sent to the owner of the post to unlock the content\n          </p>\n          <ModalSubmit text=\"UNLOCK\" onClick={submitUnlock} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default UnlockModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"OtherUser_profile-page__OhC-_\",\"profile-container\":\"OtherUser_profile-container__2oq7s\",\"profile-cover\":\"OtherUser_profile-cover__3Fq6P\",\"profile-info-container\":\"OtherUser_profile-info-container__3qnqN\",\"profile-avatar\":\"OtherUser_profile-avatar__S6INq\",\"profile-name\":\"OtherUser_profile-name__3chmC\",\"profile-desc\":\"OtherUser_profile-desc__f9Dsj\",\"config-btn\":\"OtherUser_config-btn__t33_B\",\"config-btn-icon\":\"OtherUser_config-btn-icon__1p_6O\",\"config-btn-text\":\"OtherUser_config-btn-text__1Wg_T\",\"profile-choice-container\":\"OtherUser_profile-choice-container__3-xgF\",\"profile-choice-icon\":\"OtherUser_profile-choice-icon__3iOE1\",\"profile-choice-text\":\"OtherUser_profile-choice-text__deYLl\",\"profile-qrcode\":\"OtherUser_profile-qrcode__2Ok54\",\"profile-qrcode-desc\":\"OtherUser_profile-qrcode-desc__3cp0P\",\"profile-clipboard-container\":\"OtherUser_profile-clipboard-container__1P_p8\",\"profile-clipboard-icon\":\"OtherUser_profile-clipboard-icon__1nW2U\",\"profile-clipboard-text\":\"OtherUser_profile-clipboard-text__2g4AC\",\"publish-content-form\":\"OtherUser_publish-content-form__1YdVa\",\"publish-content-title\":\"OtherUser_publish-content-title__3EsYE\",\"publish-content-icon\":\"OtherUser_publish-content-icon__291ch\",\"m-1\":\"OtherUser_m-1__1dpvP\",\"content-container\":\"OtherUser_content-container__1lOOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FollowBtn_container__2c7Cj\",\"text\":\"FollowBtn_text__1o7CS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SendReqBtn_container__2nY4E\",\"text\":\"SendReqBtn_text__2_2zC\"};","import React from \"react\";\nimport produce from \"immer\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { rifle } from \"../../utils/WebSocket\";\nimport * as Schema from \"../../schema\";\nimport * as Utils from \"../../utils\";\nimport Image from \"../../common/Post/components/Image\";\n\nimport \"./css/ContentWall.scoped.css\";\n\nexport interface ContentWallProps {\n  publicKey: string;\n}\n\nconst ContentWall: React.FC<ContentWallProps> = ({ publicKey }) => {\n  const history = useHistory();\n  const [content, setContent] = React.useState<\n    Record<string, Schema.PublicContentItem>\n  >({});\n  const [error, setError] = React.useState<string>(\"\");\n\n  React.useEffect(() => {\n    const subscription = rifle({\n      query: `${publicKey}::publishedContentPublic::map.on`,\n      onError(e) {\n        setError(JSON.stringify(e, null, 4));\n      },\n      onData(item, key) {\n        setContent(\n          produce(draft => {\n            if (Schema.isPublicContentItem(item)) {\n              draft[key] = item;\n            } else {\n              Utils.logger.warn(\n                `Invalid/incomplete public published content found for public key ...${publicKey.slice(\n                  -8\n                )}, might be due to pending replication or was deleted if null: ${JSON.stringify(\n                  item,\n                  null,\n                  4\n                )}`\n              );\n            }\n          })\n        );\n      }\n    });\n\n    return () => {\n      subscription.then(sub => sub.off());\n    };\n  }, [publicKey]);\n\n  const orderedContent = React.useMemo(() => {\n    return Object.values(content).sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  }, [content]);\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <>\n      {orderedContent.map((item, i) => {\n        return (\n          <div\n            className=\"item\"\n            key={item.id}\n            onClick={() => {\n              history.push(`/item/${item.author}/${item.id}`);\n            }}\n          >\n            {item.type === \"image/embedded\" && (\n              <div style={MEDIA_STYLE}>\n                <Image\n                  disableZoom\n                  hideRibbon\n                  id={item.id}\n                  index={i}\n                  item={item}\n                  postId={null}\n                  tipCounter={null}\n                  tipValue={null}\n                  style={MEDIA_STYLE}\n                />\n              </div>\n            )}\n\n            {item.type === \"video/embedded\" && (\n              <div className=\"video-placeholder\" style={MEDIA_STYLE}>\n                <i className=\"fas fa-video video-icon\" />\n              </div>\n            )}\n\n            <div className=\"title-and-description\">\n              <h2 className=\"title\">{item.title}</h2>\n\n              <p className=\"description\">{item.description || \" \"}</p>\n\n              <span className=\"timestamp\">\n                {Utils.formatTimestamp(item.timestamp)}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst MAX_MEDIA_LONG_EDGE = 100;\n\nconst MEDIA_STYLE: React.CSSProperties = {\n  height: MAX_MEDIA_LONG_EDGE,\n  width: MAX_MEDIA_LONG_EDGE,\n  objectFit: \"contain\"\n};\n\nexport default ContentWall;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { buyService } from \"../../../../actions/OrdersActions\";\nimport {\n  addAvailableToken,\n  addStreamToken\n} from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst BuyServiceModal = ({ service, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [buySuccess, setBuySuccess] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const submitBuy = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        const { servicePrice, owner, serviceID, serviceType } = service;\n        if (!owner || !serviceID || typeof Number(servicePrice) !== \"number\") {\n          console.error(\"invalid service provided\");\n          console.error(service);\n          return;\n        }\n        setLoading(true);\n        const revealRes = await buyService(\n          owner,\n          serviceID,\n          servicePrice\n        )(dispatch);\n        console.log(revealRes);\n        setBuySuccess(revealRes);\n        if (serviceType === \"torrentSeed\") {\n          addAvailableToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n        if (serviceType === \"streamSeed\") {\n          addStreamToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n      } catch (err) {\n        console.error(err);\n        if (service) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, service]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!service) {\n      setLoading(false);\n      setError(null);\n      setBuySuccess(null);\n    }\n  }, [buySuccess]);\n  const copyRes = useCallback(() => {\n    navigator.clipboard.writeText(JSON.stringify(buySuccess));\n    setCopied(true);\n  }, [buySuccess, setCopied]);\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!service}\n      modalTitle=\"Buy Service\"\n    >\n      {buySuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">\n            You successfully bought this service!\n          </p>\n          <p>{JSON.stringify(buySuccess)}</p>\n          <button onClick={copyRes}>COPY TO CLIPBOARD</button>\n          {copied && <p>Copied!</p>}\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitBuy}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            {service && service.servicePrice} sats will be sent to the owner of\n            the service provider\n          </p>\n          <ModalSubmit text=\"BUY\" onClick={submitBuy} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default BuyServiceModal;\n","import { useCallback, useState } from \"react\";\nimport c from \"classnames\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\n\nimport styles from \"./FollowBtn.module.css\";\n\nexport interface FollowBtnProps {\n  publicKey: string;\n}\n\nconst FollowBtn = ({ publicKey }: FollowBtnProps) => {\n  const isFollowed = !!Store.useSelector(Store.selectFollows).find(\n    f => f.user === publicKey\n  );\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleFollow = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n      setChangingStatus(true);\n\n      let res = { status: -1, data: { errorMessage: \"\" } };\n\n      if (isFollowed) {\n        res = await Utils.Http.delete(`/api/gun/follows/${publicKey}`);\n      } else {\n        res = await Utils.Http.put(`/api/gun/follows/${publicKey}`, {});\n      }\n\n      if (res.status !== 200) {\n        throw new Error(res.data.errorMessage);\n      }\n    } catch (e) {\n      if (isFollowed) {\n        alert(`Could not unfollow: ${e.message}`);\n      } else {\n        alert(`Could not follow: ${e.message}`);\n      }\n    } finally {\n      setChangingStatus(false);\n    }\n  }, [changingStatus, setChangingStatus, isFollowed, publicKey]);\n\n  return (\n    <div className={styles.container} onClick={handleFollow}>\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isFollowed ? \"Unfollow\" : \"Follow\"}\n      </p>\n    </div>\n  );\n};\n\nexport default FollowBtn;\n","import { useCallback, useState } from \"react\";\nimport c from \"classnames\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\nimport { sendHandshakeRequest } from \"../../../../actions/ChatActions\";\n\nimport styles from \"./SendReqBtn.module.css\";\n\nexport interface SendReqBtnProps {\n  publicKey: string;\n}\n\nconst SendReqBtn = ({ publicKey }: SendReqBtnProps) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isInContact = Store.useSelector(Store.selectIsInContact(publicKey));\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleClick = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n\n      if (isInContact) {\n        history.push(`/chat/${publicKey}`);\n        return;\n      }\n\n      setChangingStatus(true);\n\n      await dispatch(sendHandshakeRequest(publicKey));\n\n      setChangingStatus(false);\n    } catch (e) {\n      alert(`Could not send contact request: ${e.message}`);\n      Utils.logger.error(e);\n      setChangingStatus(false);\n    }\n  }, [changingStatus, dispatch, history, isInContact, publicKey]);\n\n  return (\n    <div className={c(styles.container)} onClick={handleClick}>\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isInContact ? \"Message\" : \"Request Contact\"}\n      </p>\n    </div>\n  );\n};\n\nexport default SendReqBtn;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport * as Common from \"shock-common\";\n\nimport Http from \"../../utils/Http\";\n\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\nimport ContentWall from \"../../common/ContentWall\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport SendTipModal from \"../Feed/components/SendTipModal\";\nimport UnlockModal from \"../Feed/components/UnlockModal\";\nimport BuyServiceModal from \"../Feed/components/BuyServiceModal\";\nimport ShareModal from \"../Feed/components/ShareModal\";\nimport * as Store from \"../../store\";\nimport * as gStyles from \"../../styles\";\n\nimport styles from \"./css/OtherUser.module.css\";\nimport FollowBtn from \"./components/FollowBtn\";\nimport SendReqBtn from \"./components/SendReqBtn\";\nimport {\n  subscribeFollows,\n  unsubscribeFollows,\n  subscribeUserPosts as subPosts,\n  subSharedPosts\n} from \"../../actions/FeedActions\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst AVATAR_SIZE = 122;\n\nconst OtherUserPage = () => {\n  //#region controller\n  const dispatch = Store.useDispatch();\n  const history = useHistory();\n  const myGunPub = Store.useSelector(({ node }) => node.publicKey);\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n\n  const { publicKey: userPublicKey, selectedView = \"posts\" } = useParams<{\n    publicKey: string;\n    selectedView: \"posts\" | \"services\" | \"content\";\n  }>();\n  const user = Store.useSelector(Store.selectUser(userPublicKey));\n  const [userServices, setUserServices] = useState({});\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [buyServiceModalData, setBuyServiceModalOpen] = useState(null);\n  const [shareModalData, setShareModalData] = useState(null);\n  const isMe = myGunPub === user.publicKey;\n  // Effect to sub follows\n  useEffect(() => {\n    dispatch(subscribeFollows());\n    return () => {\n      dispatch(unsubscribeFollows());\n    };\n  }, [dispatch]);\n\n  useEffect(() => dispatch(subPosts(userPublicKey)), [dispatch, userPublicKey]);\n  useEffect(() => dispatch(subSharedPosts(userPublicKey)), [\n    dispatch,\n    userPublicKey\n  ]);\n\n  // effect for user profile\n  useEffect(() => {\n    const unsubscribe = dispatch(subscribeUserProfile(userPublicKey));\n\n    return unsubscribe;\n  }, [dispatch, userPublicKey]);\n\n  //effect for services\n  useEffect(() => {\n    Http.get(`/api/gun/otheruser/${userPublicKey}/load/offeredServices`)\n      .then(({ data }) => {\n        setUserServices(data.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }, [userPublicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n      }\n\n      setTipModalOpen(tipData);\n    },\n    [tipModalData]\n  );\n  const toggleBuyServiceModal = useCallback(\n    buyData => {\n      if (buyServiceModalData || !buyData) {\n        setBuyServiceModalOpen(null);\n      }\n\n      setBuyServiceModalOpen(buyData);\n    },\n    [buyServiceModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const toggleShareModal = useCallback(\n    shareData => {\n      console.log(\"share click yo\");\n      console.log(shareData);\n      if (shareModalData || !shareData) {\n        setShareModalData(null);\n      }\n\n      setShareModalData(shareData);\n    },\n    [shareModalData]\n  );\n\n  const posts = Store.useSelector(\n    Store.selectPostsNewestToOldest(userPublicKey)\n  );\n\n  const copyClipboard = useCallback(() => {\n    navigator.clipboard.writeText(userPublicKey);\n  }, [userPublicKey]);\n  const renderPosts = () => {\n    if (posts.length === 0) {\n      return <Loader text=\"loading posts...\" />;\n    }\n    return posts.map(post => {\n      if (Common.isSharedPost(post)) {\n        return (\n          <Suspense fallback={<Loader />} key={post.originalPostID}>\n            <SharedPost\n              openTipModal={toggleTipModal}\n              openUnlockModal={toggleUnlockModal}\n              openShareModal={toggleShareModal}\n              postID={post.originalPostID}\n              sharerPublicKey={post.sharedBy}\n            />\n          </Suspense>\n        );\n      }\n\n      return (\n        <Suspense fallback={<Loader />} key={post.id}>\n          <Post\n            id={post.id}\n            publicKey={post.authorId}\n            openTipModal={toggleTipModal}\n            openUnlockModal={toggleUnlockModal}\n            openDeleteModal={null}\n            openShareModal={toggleShareModal}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    return Object.entries(userServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, service]) => {\n        const buyCB = () => {\n          setBuyServiceModalOpen({\n            // @ts-expect-error\n            ...service,\n            serviceID: id,\n            owner: userPublicKey\n          });\n        };\n        return (\n          <div className={styles.post}>\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceType}</p>\n            <strong>Service Title</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceTitle}</p>\n            <strong>Service Description</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceDescription}</p>\n            <strong>Service Condition</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceCondition}</p>\n            <strong>Service Price</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.servicePrice}</p>\n            <button onClick={buyCB}>BUY SERVICE</button>\n          </div>\n        );\n      });\n  };\n  const renderContent = () => {\n    return (\n      <div className={styles[\"content-container\"]}>\n        <ContentWall publicKey={userPublicKey} />\n      </div>\n    );\n  };\n  const handleViewChange = useCallback(\n    (selected: \"posts\" | \"services\" | \"content\") => {\n      history.replace(`/otherUser/${userPublicKey}/${selected}`);\n    },\n    [history, userPublicKey]\n  );\n  //#endregion controller\n\n  return (\n    <div className={classNames(\"page-container\", styles[\"profile-page\"])}>\n      <div className={classNames(styles[\"profile-container\"])}>\n        <div className=\"profile-cover\">\n          {user.header && (\n            <img\n              className=\"w-100\"\n              alt=\"User set profile header.\"\n              src={`data:image/jpeg;base64,${user.header}`}\n            />\n          )}\n        </div>\n\n        <div className={styles[\"profile-info-container\"]}>\n          <div\n            className={styles[\"profile-avatar\"]}\n            style={{\n              height: `${AVATAR_SIZE}px`,\n              width: `${AVATAR_SIZE}px`\n            }}\n          >\n            <ShockAvatar\n              height={AVATAR_SIZE}\n              publicKey={userPublicKey}\n              greyBorder\n            />\n          </div>\n          <div>\n            <p className={styles[\"profile-name\"]}>{user.displayName}</p>\n            <p className={styles[\"profile-desc\"]}>\n              {user.bio || \"Shockwallet user\"}\n            </p>\n\n            <div className={gStyles.rowCentered}>\n              {!isMe && <FollowBtn publicKey={userPublicKey} />}\n\n              <Pad amt={24} insideRow />\n\n              {!isMe && <SendReqBtn publicKey={userPublicKey} />}\n            </div>\n          </div>\n        </div>\n\n        <ProfileDivider\n          onChange={handleViewChange}\n          selected={selectedView}\n          showContentBtn\n        />\n\n        <div>\n          {selectedView === \"posts\" && renderPosts()}\n          {selectedView === \"services\" && renderServices()}\n          {selectedView === \"content\" && renderContent()}\n        </div>\n\n        {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n        <Pad amt={200} />\n\n        <Modal\n          toggleModal={toggleModal}\n          modalOpen={profileModalOpen}\n          contentStyle={{\n            padding: \"40px 30px\"\n          }}\n        >\n          <QRCode\n            bgColor=\"#23282d\"\n            fgColor=\"#4285b9\"\n            value={userPublicKey}\n            size={180}\n            className={styles[\"profile-qrcode\"]}\n          />\n          <p className={styles[\"profile-qrcode-desc\"]}>\n            Scan this code to contact this user\n          </p>\n          <div\n            className={styles[\"profile-clipboard-container\"]}\n            onClick={copyClipboard}\n          >\n            <img\n              src={ClipboardIcon}\n              className={styles[\"profile-clipboard-icon\"]}\n              alt=\"\"\n            />\n            <p className={styles[\"profile-clipboard-text\"]}>\n              Tap to copy to clipboard\n            </p>\n          </div>\n        </Modal>\n        <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n        <UnlockModal\n          unlockData={unlockModalData}\n          toggleOpen={toggleUnlockModal}\n        />\n        <BuyServiceModal\n          service={buyServiceModalData}\n          toggleOpen={toggleBuyServiceModal}\n        />\n        <ShareModal shareData={shareModalData} toggleOpen={toggleShareModal} />\n\n        <AddBtn\n          onClick={toggleModal}\n          large\n          iconURL={QRCodeIcon}\n          icon={null}\n          label={null}\n        />\n      </div>\n\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default OtherUserPage;\n"],"sourceRoot":""}