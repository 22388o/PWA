{"version":3,"sources":["actions/OrdersActions.js","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.js","reducers/DrawerReducer.js","reducers/ContentReducer.ts","reducers/FeesReducer.js","reducers/FeedReducer.js","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/selectors/publishedContent.ts","store/index.ts","common/Loader/index.js","common/Post/components/TipRibbon/index.js","common/Post/components/Stream/index.tsx","utils/Http.js","utils/WebSocket.js","actions/AuthActions.ts","actions/ChatActions.js","actions/WalletActions.js","utils/JSON.ts","utils/Encryption.ts","actions/ContentActions.ts","actions/NodeActions.js","common/Drawer/index.js","App.js","utils/ui.tsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js","utils/Date.ts","utils/index.ts","actions/UserProfilesActions.ts","actions/FeedActions.js","schema/index.ts","utils/FieldError.ts","utils/Error.ts","actions/EncryptionActions.js","actions/DrawerActions.js","actions/FeesActions.js","utils/Gun.js","utils/String.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","serviceID","dispatch","a","id","Http","post","path","value","data","ok","newID","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","rifle","query","publicKey","reconnect","onData","services","servicesEntries","forEach","get","service","type","serviceInfo","buyService","owner","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","INITIAL_STATE","hostId","hostIP","alias","authToken","authTokenExpirationDate","authMethod","hostingAttemptsDone","webClientPrefix","node","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","headers","common","Authorization","SET_ATTEMPTS_DONE","AUTH_ACTIONS","LOGOUT","SET_WEBCLIENT_PREFIX","authenticated","authStep","defaultSteps","manual","shockWizard","shockCloud","auth","SET_AUTHENTICATED","SET_AUTH_STEP","SET_AUTH_METHOD","method","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","lightningInfo","_getUnifiedTransactionDate","item","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","filter","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","sort","b","aDate","bDate","date","payment_hash","hash","payment_request","message","tx_hash","amount","label","warn","RESET_RECENT_TRANSACTIONS","LOAD_LIGHTNING_INFO","contacts","messages","sentRequests","receivedRequests","requestBlacklist","_identicalMessages","oldMessage","newMessage","localId","_sortMessages","timestamp","_processNewMessage","status","outgoing","userMessages","recipientPublicKey","existingMessage","body","sortedMessages","chat","LOAD_CHAT_DATA","LOAD_SENT_REQUESTS","requestPublicKeys","request","pk","pendingRequests","loading","includes","LOAD_RECEIVED_REQUESTS","SENT_REQUEST","avatar","changedAddress","displayName","Date","now","ACCEPT_HANDSHAKE_REQUEST","requestId","DECLINE_HANDSHAKE_REQUEST","trim","SENDING_MESSAGE","Schema","SENDING","SENT_MESSAGE","SENT","FAILED_MESSAGE","FAILED","RECEIVED_MESSAGE","RECEIVED","CHAT_WAS_DELETED","produce","draft","idx","findIndex","c","splice","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","streamPostId","streamContentId","streamStatusUrl","publishedContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","publishedContentAdded","match","payload","res","publishedContentRemoved","SET_SEED_PROVIDER_PUB","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","userToken","availableTmp","push","REMOVE_USED_TOKEN","index","indexOf","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","user","private","posts","feed","RESET_FOLLOWS","ADD_FOLLOW","existingFollow","find","follow","REMOVE_FOLLOW","UPDATE_FOLLOW","key","profile","ADD_USER_POST","receivedPost","authorId","userPosts","existingPostIndex","tmp","DELETE_USER_POST","LOAD_POSTS","LOAD_SHARED_POST","sharerId","updatedPosts","originalPost","deviceId","uuidv4","userKeys","hostKeys","encryption","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","NODE_ACTIONS","Common","RESET_USER_PROFILES","LOAD_USER_PROFILE","REMOVE_USER_PROFILE","profiles","UPDATE_USER_PROFILE","newProfile","oldProfile","CHAT_ACTIONS","req","myServices","boughtServices","orders","servicesTmp","selectedService","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","users","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","error","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectFollows","selectOwnPublishedContent","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","debug","process","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","store","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","TipRibbon","tipCounter","tipValue","zoomed","opacity","Stream","postId","hideRibbon","width","playerDOM","timeout","useRef","useState","isLive","videoStyle","liveStatus","useEffect","player","videojs","current","autoplay","muted","aspectRatio","src","magnetURI","play","cursor","display","ref","preload","controls","autoPlay","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","getState","remotePublicKey","REACT_APP_SHOCK_ENCRYPTION_ECC","Encryption","stringify","encryptedMessage","decryptResponse","localPrivateKey","privateKey","decryptedMessage","interceptors","use","localRequest","url","toUpperCase","reject","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","transports","rifleSubscriptions","Map","GunSocket","LNDSocket","connectSocket","host","disconnectSocket","socketOptions","encryptionId","SocketIO","connect","GunOn","encryptedOn","event","subscription","subscriptionId","onError","on","setAuthenticated","err","field","cachedNodeIP","connectHost","socket","off","close","decryptEventCallback","callback","encryptedEmit","eventName","emit","encryptedData","responses","decryptedResponses","subscribeSocket","resolve","then","token","unsubscribeRifleById","unsubscribeEvent","delete","unsubscribeRifleByQuery","Array","from","$shock","set","rifleCleanup","subscriptions","unsubscribe","getChats","chats","recipientAvatar","recipientDisplayName","didDisconnect","reduce","initialMessagePrefix","getSentRequests","getReceivedRequests","recipientChangedRequestAddress","RESET_AUTH_INFO","setAuthStep","step","setAuthMethod","logout","SET_CHAT_CONTACTS","SET_CHAT_MESSAGES","loadChatData","loadSentRequests","loadReceivedRequests","requestorPK","requestorAvatar","requestorDisplayName","subscribeChatMessages","userPublicKey","incomingId","rawMsg","msg","incomingMessages","acceptHandshakeRequest","put","accept","sendHandshakeRequest","sendMessage","tempId","DateTime","utc","toMillis","chatWasDeleted","fetchWalletBalance","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","FetchLightningInfo","safeParseJSON","nonEncryptedEvents","convertBase64ToBuffer","Buffer","convertBufferToBase64","processKey","Uint8Array","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","FieldError","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","PUBLISHED_CONTENT_ADDED","PUBLISHED_CONTENT_REMOVED","setSeedProviderPub","pub","setSeedInfo","cleanUrl","endsWith","slice","infoS","createAction","addPublishedContent","unlockContent","postID","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","addAvailableToken","removeUnavailableToken","addStreamToken","OWN_PUBLISHED_CONTENT_QUERY","subOwnPublishedContent","TypeError","parsed","parseJson","isPublishedContent","unsubOwnPublishedContent","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","fetchNodeHealth","Error","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","resetData","done","health","baseURL","throttledExchangeKeyPair","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","decodedToken","jwtDecode","authorization","exp","parseError","createWallet","setWebclientPrefix","prefix","Drawer","useDispatch","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","createPostPage","GoLivePage","OtherUserPage","Story","Stories","QRScannerPage","BackupsPage","PrivateRoute","component","authorizedComponent","App","history","useHistory","f","update","setUpdate","setIsLive","showFloatingPlayer","setShowFloatingPlayer","interval","setInterval","clearInterval","setTimeout","info","clearTimeout","StreamRender","useMemo","undefined","stopStream","fetch","r","json","j","magnet","catch","e","addLanguage","tokenExpired","JWTDecode","subscribeUserProfile","unsubscribeUserProfile","elementId","elmnt","document","getElementById","pos1","pos2","pos3","pos4","onpointerdown","preventDefault","clientX","clientY","onpointerup","closeDragElement","onpointermove","elementDrag","top","offsetTop","left","offsetLeft","dragElement","fallback","exact","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","href","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","useForceUpdate","setTick","tick","logger","resizeImage","img","desiredLongEdge","compression","canvas","createElement","Math","round","getContext","drawImage","toDataURL","processImageFile","file","startsWith","size","rej","reader","FileReader","onload","target","result","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","image","resizedImage","normalizeURL","_url","__url","_","protocol","getContact","contact","EMPTY_FN","useBooleanState","initialState","setState","_state","o","subscribedProfiles","Set","updateUserProfile","has","binarySub","Utils","header","RESET_FEED","POST_TIPPED","removeFollow","addFollow","loadSharedPost","originalPostId","originalPublicKey","sharerPublicKey","tipSet","tipsSet","values","lenSet","length","tot","acc","val","USER_POSTS_QUERY_SUFFIX","subscribeUserPosts","postEntries","newPosts","GUN_PROPS","deletedPosts","USER_SHARED_POSTS_QUERY_SUFFIX","subscribeSharedUserPosts","shared","originalAuthor","processedPost","shareDate","FOLLOWS_QUERY","subscribeFollows","unsubscribeFollows","sendTipPost","deleteUserPost","CHAT_MESSAGE_STATUS","isSharedPost","obj","description","title","stack","errorMessage","exchangingKeypair","addUserKeyPair","addHostKey","getDeviceId","APIPublicKey","openDrawer","loadFeeRates","capitalizeText","split","word","toLowerCase","join","processDisplayName","suffix"],"mappings":"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","file":"static/js/main.5a397dab.chunk.js","sourcesContent":["import Http from \"../utils/Http\";\nimport {\n  rifle,\n  rifleSocketExists,\n  unsubscribeRifleById\n} from \"../utils/WebSocket\";\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE: \"service/add/bought\"\n};\n\nexport const createService = (\n  clear,\n  encrypted,\n  serviceID\n) => async dispatch => {\n  let id = serviceID;\n  if (serviceID) {\n    const { data } = await Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}`,\n      value: clear\n    });\n    const { ok } = data;\n    if (!ok) {\n      return \"\";\n    }\n  } else {\n    const { data } = await Http.post(\"/api/gun/set\", {\n      path: \"$user>offeredServices\",\n      value: clear\n    });\n    const { ok, id: newID } = data;\n    if (!ok) {\n      return \"\";\n    }\n    id = newID;\n  }\n\n  const all = Object.entries(encrypted).map(([name, value]) => {\n    if (!value) {\n      return;\n    }\n    console.log(`setting: ${name} to ${value}`);\n    return Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}>${name}`,\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value\n      }\n    });\n  });\n  await Promise.all(all);\n  const { serviceType } = clear;\n  //update the offered service\n  if (serviceType === \"torrentSeed\" || serviceType === \"streamSeed\") {\n    console.log(\"updating profile with service\");\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>Profile>SeedServiceProvided`,\n      value: id\n    });\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id;\n};\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post(\"/api/gun/put\", {\n    path: `$user>offeredServices>${id}`,\n    value: null\n  });\n};\n\nexport const subscribeMyServices = () => dispatch => {\n  const query = `$user::offeredServices::on`;\n  const subscription = rifle({\n    query,\n    publicKey: \"\",\n    reconnect: false,\n    onData: async services => {\n      const servicesEntries = Object.entries(services);\n      console.log(servicesEntries);\n\n      servicesEntries.forEach(async ([id]) => {\n        if (id === \"_\") {\n          return;\n        }\n        const { data: service } = await Http.get(\n          `/api/gun/user/load/offeredServices>${id}`\n        );\n        console.log(service.data);\n        if (service.data === null) {\n          dispatch({\n            type: ACTIONS.REMOVE_MY_SERVICE,\n            data: id\n          });\n          return;\n        }\n        dispatch({\n          type: ACTIONS.ADD_MY_SERVICE,\n          data: { id, serviceInfo: service.data }\n        });\n      });\n    }\n  });\n\n  return subscription;\n};\n\nexport const buyService = (\n  owner,\n  serviceID,\n  servicePrice\n) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"service\",\n    amt: Number(servicePrice),\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: serviceID\n  });\n  console.log(data);\n  const orderAck = JSON.parse(data.orderAck.response);\n  dispatch({\n    type: ACTIONS.ADD_BOUGHT_SERVICE,\n    data: { orderAck, owner, serviceID }\n  });\n  return orderAck;\n};\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false,\n  webClientPrefix:\"https://shock.pub\"\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    case ACTIONS.SET_WEBCLIENT_PREFIX:{\n      return {...state, webClientPrefix:action.data}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: [],\n  lightningInfo:{},\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    case ACTIONS.LOAD_LIGHTNING_INFO:{\n      const {data}  = action\n      return {\n        ...state,\n        lightningInfo:data\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\nimport produce from \"immer\";\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n */\n/**\n * @template S\n * @typedef {import('redux').Reducer<S, AnyAction>} Reducer\n */\n\nimport * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').ReceivedRequest} ReceivedRequest\n * @typedef {import(\"../schema\").SentRequest} SentRequest\n *\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').LoadSentRequestsAction} LoadSentRequestsAction\n */\n\nconst INITIAL_STATE = {\n  contacts: /** @type {Contact[]} */ ([]),\n  /**\n   * @type {Record<string, Schema.ChatMessage[]>}\n   */\n  messages: {},\n  sentRequests: /** @type {SentRequest[]} */ ([]),\n  receivedRequests: /** @type {ReceivedRequest[]} */ ([]),\n  requestBlacklist: []\n};\n\n/**\n * @param {Schema.ChatMessage} oldMessage\n * @param {Schema.ChatMessage} newMessage\n * @returns {boolean}\n */\nconst _identicalMessages = (oldMessage, newMessage) =>\n  oldMessage.id && newMessage.id\n    ? oldMessage.id === newMessage.id\n    : oldMessage.localId === newMessage.localId;\n\n/**\n * @param {Schema.ChatMessage[]} messages\n * @returns {Schema.ChatMessage[]}\n */\nconst _sortMessages = (messages = []) =>\n  messages.sort((a, b) => b.timestamp - a.timestamp);\n\n/**\n * @typedef {object} ProcessNewMessageParams\n * @prop {Schema.ChatMessage} data\n * @prop {Schema.ChatMessageStatus} status\n * @prop {typeof INITIAL_STATE} state\n * @prop {boolean=} outgoing\n */\n\n/**\n * @param {ProcessNewMessageParams} args\n * @returns {typeof INITIAL_STATE}\n */\nconst _processNewMessage = ({ data, status, state, outgoing = false }) => {\n  const userMessages = state.messages[data.recipientPublicKey] ?? [];\n  const [existingMessage] = userMessages.filter(message =>\n    _identicalMessages(message, data)\n  );\n\n  if (existingMessage) {\n    console.warn(\"Duplicate Message:\", existingMessage?.body);\n  }\n\n  if (existingMessage) {\n    const messages = userMessages.map(message =>\n      _identicalMessages(message, existingMessage)\n        ? { ...existingMessage, ...data, status, outgoing }\n        : message\n    );\n    const sortedMessages = _sortMessages(messages);\n\n    return {\n      ...state,\n      messages: {\n        ...state.messages,\n        [data.recipientPublicKey]: sortedMessages\n      }\n    };\n  }\n\n  const messages = [{ ...data, status, outgoing }, ...userMessages];\n  const sortedMessages = _sortMessages(messages);\n\n  return {\n    ...state,\n    messages: {\n      ...state.messages,\n      [data.recipientPublicKey]: sortedMessages\n    }\n  };\n};\n\n/**\n * @type {Reducer<typeof INITIAL_STATE>}\n */\nconst chat = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_CHAT_DATA: {\n      const {\n        data: { contacts, messages }\n      } = /** @type {LoadChatDataAction} */ (action);\n      return {\n        ...state,\n        contacts,\n        // TODO: Could not replacing messages altogether be bad?\n        messages: {\n          ...state.messages,\n          ...messages\n        }\n      };\n    }\n    case ACTIONS.LOAD_SENT_REQUESTS: {\n      const {\n        data: sentRequests\n      } = /** @type {LoadSentRequestsAction} */ (action);\n      const requestPublicKeys = state.sentRequests.map(request => request.pk);\n      const pendingRequests = state.sentRequests.filter(\n        request => request.loading && !requestPublicKeys.includes(request.pk)\n      );\n\n      return {\n        ...state,\n        sentRequests: [...pendingRequests, ...sentRequests]\n      };\n    }\n    case ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      const {\n        data: receivedRequests\n      } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n      return {\n        ...state,\n        receivedRequests\n      };\n    }\n    case ACTIONS.SENT_REQUEST: {\n      const { data: publicKey } = /** @type {SentRequestAction} */ (action);\n      return {\n        ...state,\n        sentRequests: [\n          ...state.sentRequests,\n          {\n            avatar: null,\n            changedAddress: false,\n            displayName: null,\n            id: \"loading/\" + publicKey,\n            pk: publicKey,\n            timestamp: Date.now(),\n            loading: true\n          }\n        ]\n      };\n    }\n    case ACTIONS.ACCEPT_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      return {\n        ...state,\n        receivedRequests: state.receivedRequests.filter(\n          request => request.id !== requestId\n        )\n      };\n    }\n    case ACTIONS.DECLINE_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      if (!requestId || !requestId.trim()) {\n        return state;\n      }\n\n      return {\n        ...state,\n        requestBlacklist: [...state.requestBlacklist, requestId]\n      };\n    }\n    case ACTIONS.SENDING_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENDING,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.SENT_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.FAILED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.FAILED,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.RECEIVED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.RECEIVED,\n        state\n      });\n    }\n    case ACTIONS.CHAT_WAS_DELETED: {\n      const {\n        data: { publicKey }\n      } = action;\n      return produce(state, draft => {\n        const idx = draft.contacts.findIndex(c => c.pk === publicKey);\n        idx > -1 && draft.contacts.splice(idx, 1);\n        delete draft.messages[publicKey];\n        draft.messages[publicKey] = [];\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import produce from \"immer\";\n\nimport {\n  ACTIONS,\n  publishedContentAdded,\n  publishedContentRemoved\n} from \"../actions/ContentActions\";\nimport { PublishedContent } from \"../schema\";\n\nconst INITIAL_STATE = {\n  seedProviderPub:\n    \"qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg\",\n  streamUserToken: \"\",\n  streamLiveToken: \"\",\n  streamUrl: \"\",\n  streamPostId: \"\",\n  streamContentId: \"\",\n  streamStatusUrl: \"\",\n  publishedContent: {} as Record<string, PublishedContent>,\n  unlockedContent: {},\n  seedInfo: {},\n  availableTokens: {},\n  availableStreamTokens: {}\n};\n\nconst content = (state = INITIAL_STATE, action) => {\n  if (publishedContentAdded.match(action)) {\n    return produce(state, draft => {\n      const {\n        payload: { content, res }\n      } = action;\n      if (res.ok) {\n        draft.publishedContent[res.id] = content;\n      }\n    });\n  }\n\n  if (publishedContentRemoved.match(action)) {\n    return produce(state, draft => {\n      delete draft.publishedContent[action.payload.id];\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n\n    case ACTIONS.ADD_UNLOCKED_CONTENT: {\n      const { data } = action;\n      const unlockedTmp = { ...state.unlockedContent };\n      unlockedTmp[data.contentPath] = data.content;\n      return { ...state, unlockedContent: unlockedTmp };\n    }\n    case ACTIONS.ADD_STREAM: {\n      const { data } = action;\n      return {\n        ...state,\n        streamLiveToken: data.liveToken,\n        streamUserToken: data.seedToken,\n        streamUrl: data.streamUrl,\n        streamPostId: data.streamPostId,\n        streamContentId: data.streamContentId,\n        streamStatusUrl: data.streamStatusUrl\n      };\n    }\n    case ACTIONS.REMOVE_STREAM: {\n      return {\n        ...state,\n        streamLiveToken: \"\",\n        streamUserToken: \"\",\n        streamUrl: \"\",\n        streamPostId: \"\",\n        streamContentId: \"\",\n        streamStatusUrl: \"\"\n      };\n    }\n    case ACTIONS.SET_SEED_INFO: {\n      const { data } = action;\n      return { ...state, seedInfo: data };\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_USED_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableTokens: availableTmp };\n      }\n      return state;\n    }\n    case ACTIONS.ADD_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableStreamTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableStreamTokens: availableTmp };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import { ACTIONS } from \"../actions/FeesActions\";\n\nconst INITIAL_STATE = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n  rate: \"halfHourFee\",\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Follow} Follow\n */\n\nimport { ACTIONS } from \"../actions/FeedActions\";\n/**\n * @typedef {import('../schema').Post} Post\n * @typedef {import('../schema').SharedPost} SharedPost\n */\n\nconst INITIAL_STATE = {\n  follows: /** @type {Follow[]} */ ([\n    {\n      user:\n        \"qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg\",\n      status: \"ok\",\n      private: false\n    }\n  ]),\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: /** @type {Record<string, Array<Post|SharedPost>>} */ ({})\n};\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst feed = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FOLLOWS: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.ADD_USER_POST: {\n      const { data } = action;\n      /** @type {SharedPost} */\n      const receivedPost = data;\n      const authorId = receivedPost.authorId;\n      const userPosts = state.posts[authorId] ?? [];\n      const existingPostIndex = userPosts.findIndex(\n        post => receivedPost.id === post.id\n      );\n\n      const tmp = [...userPosts];\n\n      if (existingPostIndex !== -1) {\n        tmp[existingPostIndex] = receivedPost;\n      } else {\n        tmp.push(receivedPost);\n      }\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: tmp\n        }\n      };\n    }\n    case ACTIONS.DELETE_USER_POST: {\n      const { id, authorId } = action.data;\n      const userPosts = (state.posts[authorId] ?? []).filter(\n        post => post.id !== id\n      );\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: userPosts\n        }\n      };\n    }\n    case ACTIONS.LOAD_POSTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        posts: data\n      };\n    }\n    case ACTIONS.LOAD_SHARED_POST: {\n      const { data } = action;\n      const { id, sharerId } = data;\n      const userPosts = state.posts[sharerId] ?? [];\n      const updatedPosts = userPosts.map(post => {\n        if (post.id === id && post.type === \"shared\") {\n          return {\n            ...post,\n            originalPost: data\n          };\n        }\n\n        return post;\n      });\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [sharerId]: updatedPosts\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as CHAT_ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import(\"../actions/ChatActions\").LoadSentRequestsAction} LoadSentRequestsAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n */\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_USER_PROFILE: {\n      const { publicKey, profile } = action.data;\n\n      if (!publicKey || !profile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey],\n          ...profile\n        }\n      };\n    }\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { publicKey, profile: newProfile } = action.data;\n      const oldProfile = state[publicKey];\n\n      if (!oldProfile || !newProfile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...oldProfile,\n          ...newProfile\n        }\n      };\n    }\n    case CHAT_ACTIONS.LOAD_CHAT_DATA: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadChatDataAction} */ (action);\n\n        data.contacts.forEach(c => {\n          draft[c.pk] = {\n            ...Common.createEmptyUser(c.pk),\n            ...draft[c.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_SENT_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadSentRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.SENT_REQUEST: {\n      return produce(state, draft => {\n        const { data: pk } = /** @type {SentRequestAction} */ (action);\n\n        if (!draft[pk]) {\n          draft[pk] = Common.createEmptyUser(pk);\n        }\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n  myServices: {},\n  services: {},\n  boughtServices: {}\n};\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const { id, serviceInfo } = action.data;\n      const tmp = { ...state.myServices };\n      tmp[id] = serviceInfo;\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE: {\n      const id = action.data;\n      const tmp = { ...state.myServices };\n      delete tmp[id];\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE: {\n      const { orderAck, owner, serviceID } = action.data;\n      const servicesTmp = { ...state.boughtServices };\n\n      if (!servicesTmp[owner]) {\n        servicesTmp[owner] = {};\n      }\n      const selectedService = servicesTmp[owner];\n      if (!selectedService[serviceID]) {\n        selectedService[serviceID] = [];\n      }\n      selectedService[serviceID].push(orderAck);\n      return { ...state, boughtServices: servicesTmp };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","import { combineReducers } from \"redux\";\nimport * as Common from \"shock-common\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\";\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders: OrdersReducer,\n  users: () => {\n    return {} as Record<string, Common.User>;\n  }\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = (publicKey: string) => (\n  state: State\n): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey);\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n","import { State } from \"../../reducers\";\n\nexport const selectFollows = (state: State) => state.feed.follows;\n","import { State } from \"../../reducers\";\n\nexport const selectOwnPublishedContent = (state: State) =>\n  state.content.publishedContent;\n","import { createStore, applyMiddleware, compose, AnyAction } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport { useSelector as origUseSelector } from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport * from \"./selectors\";\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.scoped.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\")\n    .matches;\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst REACT_APP_SL_SEED_URI = \"https://webtorrent.shock.network\";\nconst STREAM_STATUS_URI = `${REACT_APP_SL_SEED_URI}/rtmpapi/api/streams/live`;\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const {liveStatus} = item\n  useEffect(() =>{\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  },[item])\n  useEffect(()=>{\n    console.log(\"status:\",liveStatus)\n  },[item])\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {!isLive && liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!isLive && !liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","import Http from \"axios\";\nimport * as Encryption from \"./Encryption\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\") {\n    return config;\n  }\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return response;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n    }\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Common from \"shock-common\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\nimport { connectHost } from \"../actions/NodeActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true,\n  transports: [\"websocket\"]\n};\n\nconst rifleSubscriptions = new Map();\n\nexport let GunSocket = null;\n\nexport let LNDSocket = null;\n\nexport const connectSocket = async (host = \"\", reconnect = false) => {\n  if (GunSocket && LNDSocket && !reconnect) {\n    return { GunSocket, LNDSocket };\n  }\n\n  if (GunSocket && LNDSocket && reconnect) {\n    disconnectSocket(GunSocket);\n    disconnectSocket(LNDSocket);\n  }\n\n  const { store } = await import(\"../store\");\n  const socketOptions = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId\n    }\n  };\n  GunSocket = SocketIO.connect(`${host}/gun`, socketOptions);\n  LNDSocket = SocketIO.connect(`${host}/lndstreaming`, socketOptions);\n\n  const GunOn = encryptedOn(GunSocket);\n\n  // Subscribe to Rifle query events as soon as the socket is connected\n  GunOn(\"query:data\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onData?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunOn(\"query:error\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onError?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunSocket.on(Common.NOT_AUTH, () => {\n    store.dispatch(setAuthenticated(false));\n  });\n\n  GunSocket.on(\"encryption:error\", async err => {\n    if (err.field === \"deviceId\") {\n      const cachedNodeIP = store.getState().node.hostIP;\n      await store.dispatch(connectHost(cachedNodeIP, false));\n      store.dispatch(setAuthenticated(false));\n    }\n  });\n\n  return { GunSocket, LNDSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: data\n    });\n\n    callback(err, decryptedMessage);\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.emit(eventName, message, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message: JSON.stringify(message)\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        if (!response) {\n          return response;\n        }\n\n        if (response && !Encryption.isEncryptedMessage(response)) {\n          console.warn(\"Non-encrypted socket message\", response);\n          return response;\n        }\n\n        return Encryption.decryptMessage({\n          privateKey: localPrivateKey,\n          encryptedMessage: response\n        });\n      })\n    );\n\n    callback(...decryptedResponses);\n  });\n};\n\nconst subscribeSocket = ({ eventName, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const on = encryptedOn(GunSocket);\n        const emit = encryptedEmit(GunSocket);\n\n        emit(\n          `subscribe:${eventName}`,\n          {\n            token: store.getState().node.authToken\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              reject(err);\n              return;\n            }\n          }\n        );\n\n        on(eventName, data => {\n          if (callback) {\n            callback(null, data);\n            return;\n          }\n          resolve(data);\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const unsubscribeRifleById = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n\n  if (cachedSocket) {\n    unsubscribeEvent(subscriptionId);\n    rifleSubscriptions.delete(subscriptionId);\n  }\n};\n\nexport const unsubscribeRifleByQuery = query => {\n  const subscriptionEntries = Array.from(rifleSubscriptions.entries());\n\n  subscriptionEntries.map(([id, subscription]) => {\n    if (subscription.query === query) {\n      console.log(\"Unsubscribing by query:\", subscription);\n      unsubscribeRifleById(id);\n      return true;\n    }\n\n    return false;\n  });\n};\n\nexport const unsubscribeEvent = subscriptionId =>\n  new Promise(resolve => {\n    const emit = encryptedEmit(GunSocket);\n    emit(\n      \"unsubscribe\",\n      {\n        subscriptionId\n      },\n      () => {\n        console.debug(\n          `[SOCKET] Unsubscribed from event successfully! (${subscriptionId})`\n        );\n        resolve(true);\n      }\n    );\n  });\n\nexport const rifleSocketExists = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} query\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {boolean=} reconnect\n * @prop {(data, key) => void} onData\n * @prop {((error) => void)=} onError\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.onData(callback)` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map().once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<{ off: () => void }>}\n */\nexport const rifle = ({ query, publicKey, reconnect, onData, onError }) =>\n  new Promise((resolve, reject) => {\n    import(\"../store\").then(({ store }) => {\n      if (reconnect) {\n        unsubscribeRifleByQuery(query);\n      }\n\n      const emit = encryptedEmit(GunSocket);\n\n      emit(\n        \"subscribe:query\",\n        {\n          $shock: query,\n          token: store.getState().node.authToken,\n          publicKey\n        },\n        (err, data) => {\n          if (err) {\n            console.error(`Gun rifle error (${query})`);\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          rifleSubscriptions.set(data.subscriptionId, {\n            onData,\n            onError,\n            query\n          });\n\n          resolve({\n            off: () => unsubscribeRifleById(data.subscriptionId)\n          });\n        }\n      );\n    });\n  });\n\n/**\n *\n * @param {Promise<() => void>} subscription\n */\nexport const rifleCleanup = (...subscriptions) => () => {\n  subscriptions.map(subscription =>\n    subscription.then(unsubscribe => {\n      unsubscribe.off();\n    })\n  );\n};\n\n/**\n * @returns {{ messages: any , contacts: Contact[]}}\n */\nexport const getChats = async ({ authToken }) => {\n  try {\n    const chats = await subscribeSocket({ authToken, eventName: \"chats\" });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName,\n      didDisconnect: chat.didDisconnect\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\nexport const getSentRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const sentRequests = await subscribeSocket({\n      hostIP,\n      authToken,\n      eventName: \"sentRequests\",\n      callback\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getReceivedRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const receivedRequests = await subscribeSocket({\n      hostIP,\n      authToken,\n      eventName: \"receivedRequests\",\n      callback\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","export const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\"\n};\n\nexport const setAuthenticated = status => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTHENTICATED,\n    data: status\n  });\n};\n\nexport const setAuthStep = step => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_STEP,\n    data: step\n  });\n};\n\nexport const setAuthMethod = method => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_METHOD,\n    data: method\n  });\n};\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\n","// @ts-check\nimport Http from \"../utils/Http\";\nimport { DateTime } from \"luxon\";\nimport { v4 as uuidv4 } from \"uuid\";\n/**\n * @typedef {import('shock-common').Message} RawMessage\n */\n\nimport {\n  getChats,\n  getReceivedRequests,\n  getSentRequests,\n  rifle\n} from \"../utils/WebSocket\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport * as Schema from \"../schema\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').SentRequest} SentRequest\n * @typedef {import(\"../schema\").ReceivedRequest} ReceivedRequest\n * @typedef {import('../schema').ChatMessage} ChatMessage\n */\n\nexport const ACTIONS = {\n  LOAD_CHAT_DATA: /** @type {\"chat/loadData\"} */ (\"chat/loadData\"),\n  LOAD_SENT_REQUESTS: /** @type {\"chat/loadSentRequests\"} */ (\"chat/loadSentRequests\"),\n  LOAD_RECEIVED_REQUESTS: /** @type {\"chat/loadReceivedRequests\"} */ (\"chat/loadReceivedRequests\"),\n  SET_CHAT_CONTACTS: \"chat/contacts\",\n  SET_CHAT_MESSAGES: \"chat/messages\",\n  SENT_REQUEST: /** @type {\"chat/request/sent\"} */ (\"chat/request/sent\"),\n  ACCEPT_HANDSHAKE_REQUEST: \"chat/request/accept\",\n  DECLINE_HANDSHAKE_REQUEST: \"chat/request/decline\",\n  SENDING_MESSAGE: \"chat/message/sending\",\n  SENT_MESSAGE: \"chat/message/sent\",\n  FAILED_MESSAGE: \"chat/message/failed\",\n  RECEIVED_MESSAGE: /** @type {\"chat/message/received\"} */ (\"chat/message/received\"),\n  CHAT_WAS_DELETED: /** @type {'chat/deleted'} */ (\"chat/deleted\")\n};\n\n/**\n * @typedef {object} SentRequestAction\n * @prop {typeof ACTIONS.SENT_REQUEST} type\n * @prop {string} data The public key.\n */\n\n/**\n * @typedef {object} LoadChatDataAction\n * @prop {typeof ACTIONS.LOAD_CHAT_DATA} type\n * @prop {{ messages: Record<string, ChatMessage[]> , contacts: Contact[] }} data\n */\n\n/**\n * @typedef {object} LoadSentRequestsAction\n * @prop {typeof ACTIONS.LOAD_SENT_REQUESTS} type\n * @prop {SentRequest[]} data\n */\n\n/**\n * @typedef {object} LoadReceivedRequestsAction\n * @prop {typeof ACTIONS.LOAD_RECEIVED_REQUESTS} type\n * @prop {ReceivedRequest[]} data\n */\n\n/**\n * @typedef {object} ReceivedMessageAction\n * @prop {typeof ACTIONS.RECEIVED_MESSAGE} type\n * @prop {ChatMessage} data\n */\n\nexport const loadChatData = () => async (dispatch, getState) => {\n  const { authToken } = getState().node;\n  const data = await getChats({ authToken });\n  console.log(\"LOAD_CHAT_DATA:\", data);\n\n  dispatch({\n    type: ACTIONS.LOAD_CHAT_DATA,\n    data\n  });\n};\n\nexport const loadSentRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getSentRequests({ hostIP, authToken }, (err, sentRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"sentRequests:\", sentRequests);\n\n    /** @type {LoadSentRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_SENT_REQUESTS,\n      data: sentRequests.map(request => {\n        /** @type {SentRequest} */\n        const req = {\n          id: request.id,\n          pk: request.recipientPublicKey,\n          avatar: request.recipientAvatar,\n          displayName: request.recipientDisplayName,\n          changedAddress: request.recipientChangedRequestAddress,\n          timestamp: request.timestamp,\n          loading: false\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const loadReceivedRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getReceivedRequests({ hostIP, authToken }, (err, receivedRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"receivedRequests:\", receivedRequests);\n\n    /** @type {LoadReceivedRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n      data: receivedRequests.map(request => {\n        /** @type {ReceivedRequest} */\n        const req = {\n          id: request.id,\n          pk: request.requestorPK,\n          avatar: request.requestorAvatar,\n          displayName: request.requestorDisplayName,\n          timestamp: request.timestamp\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const subscribeChatMessages = (\n  userPublicKey,\n  recipientPublicKey\n) => async dispatch => {\n  const { data: incomingId } = await Http.get(\n    `/api/gun/user/once/userToIncoming>${recipientPublicKey}`,\n    {\n      headers: {\n        \"public-key-for-decryption\": userPublicKey\n      }\n    }\n  );\n\n  if (!incomingId.data) {\n    console.warn(\"Unable to retrieve incoming ID for selected contact\");\n    return null;\n  }\n\n  const incomingMessages = await rifle({\n    query: `${recipientPublicKey}::outgoings>${incomingId.data}>messages::map.on`,\n    publicKey: recipientPublicKey,\n    onData: (message, id) => {\n      if (!message.body || message.body === initialMessagePrefix) {\n        return;\n      }\n      /** @type {RawMessage} */\n      const rawMsg = message;\n\n      /** @type {ChatMessage} */\n      const msg = {\n        body: rawMsg.body,\n        id,\n        localId: id,\n        outgoing: false,\n        recipientPublicKey,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        timestamp: rawMsg.timestamp\n      };\n\n      /** @type {ReceivedMessageAction} */\n      const action = {\n        type: ACTIONS.RECEIVED_MESSAGE,\n        data: msg\n      };\n\n      dispatch(action);\n    }\n  });\n\n  return incomingMessages;\n};\n\nexport const acceptHandshakeRequest = requestId => async dispatch => {\n  const { data } = await Http.put(`/api/gun/requests/${requestId}`, {\n    accept: true\n  });\n\n  dispatch({\n    type: ACTIONS.ACCEPT_HANDSHAKE_REQUEST,\n    data: requestId\n  });\n\n  return data;\n};\n\nexport const sendHandshakeRequest = publicKey => async (dispatch, getState) => {\n  const { data } = await Http.post(`/api/gun/requests`, {\n    publicKey\n  });\n\n  /** @type {SentRequest[]} */\n  const sentRequests = getState().chat.sentRequests;\n  const [userExists] = sentRequests.filter(request => request.pk === publicKey);\n\n  if (!userExists) {\n    /** @type {SentRequestAction} */\n    const action = {\n      type: ACTIONS.SENT_REQUEST,\n      data: publicKey\n    };\n    dispatch(action);\n  }\n\n  return data;\n};\n\nexport const sendMessage = ({\n  publicKey,\n  message,\n  localId = null\n}) => async dispatch => {\n  const tempId = localId ?? uuidv4();\n  try {\n    dispatch({\n      type: ACTIONS.SENDING_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n    const { data } = await Http.post(`/api/gun/chats/${publicKey}`, {\n      body: message\n    });\n    console.log(data);\n    dispatch({\n      type: ACTIONS.SENT_MESSAGE,\n      data: { ...data, localId: tempId, recipientPublicKey: publicKey }\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIONS.FAILED_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n  }\n};\n\n/**\n * @param {string} publicKey\n */\nexport const chatWasDeleted = publicKey => ({\n  type: ACTIONS.CHAT_WAS_DELETED,\n  data: {\n    publicKey\n  }\n});\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\",\n  LOAD_LIGHTNING_INFO: \"wallet/lightningInfo/load\",\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  try {\n    const { data } = await Http.get(`/api/lnd/balance`);\n\n    dispatch({\n      type: ACTIONS.LOAD_BALANCE,\n      data: {\n        channelBalance: data.channel_balance,\n        confirmedBalance: data.confirmed_balance,\n        pendingChannelBalance: data.pending_channel_balance\n      }\n    });\n  } catch (e) {\n    console.error(\n      `When trying to fetch the balance for the wallet, an error ocurred:`,\n      e\n    );\n  }\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\n      \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n    );\n    const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n    dispatch({\n      type: ACTIONS.LOAD_USD_RATE,\n      data: exchangeRate\n    });\n  } catch (e) {\n    console.error(`An error happened when trying to fetch the USD rate:`, e);\n  }\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { transactions } = getState().wallet;\n\n    if (\n      (transactions.page >= page && !reset) ||\n      transactions.totalPages < page\n    ) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/transactions\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred when fetching transactions (fetchTransactions()):`,\n      e\n    );\n  }\n};\n\nexport const fetchChannels = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n    dispatch({\n      type: ACTIONS.LOAD_CHANNELS,\n      data: data.channels\n    });\n  } catch (e) {\n    console.error(\n      `An ocurred ocurred when fetching channels (fetchChannels()):`,\n      e\n    );\n  }\n};\n\nexport const fetchPeers = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n    dispatch({\n      type: ACTIONS.LOAD_PEERS,\n      data: data.peers\n    });\n\n    return data;\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching peers (fetchPeers()) (will be re-thrown):`,\n      e\n    );\n    throw e;\n  }\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { invoices } = getState().wallet;\n\n    if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/invoices\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching invoices (fetchInvoices()):`,\n      e\n    );\n  }\n};\n\nconst fetchPayments = ({ page, itemsPerPage = 10, reset = false }) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    const { payments } = getState().wallet;\n\n    if ((payments.page >= page && !reset) || payments.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/payments\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_PAYMENTS : ACTIONS.LOAD_MORE_PAYMENTS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching payments (fetchPayments()):`,\n      e\n    );\n  }\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n  } catch (err) {\n    console.error(\n      `An error ocurred while connecting peer --| ${host} |-- with public key --| ${publicKey} |-- in connectPeer()`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    dispatch(fetchChannels());\n  } catch (err) {\n    console.error(\n      `An error ocurred while opening a channel (openChannel()) with public key --| ${publicKey} |--, channel capacity: --| ${channelCapacity} |-- and push amount: --| ${pushAmount} |--:`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const FetchLightningInfo = () =>async dispatch => {\n  \n  try{\n    const {data}= await Http.get(\"/api/lnd/getinfo\");\n    dispatch({\n      type:ACTIONS.LOAD_LIGHTNING_INFO,\n      data\n    })\n  }catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n}\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Uint8Array;\n  ephemPublicKey: Uint8Array;\n  iv: Uint8Array;\n  mac: Uint8Array;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface DeriveKey {\n  localPrivateKey: Uint8Array | string;\n  remotePublicKey: Uint8Array | string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Uint8Array | string;\n  sharedKey: Uint8Array | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Uint8Array | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Uint8Array) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Uint8Array | string): Uint8Array => {\n  if (key instanceof Uint8Array) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName) ||\n  process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\";\n\nexport const generateKeyPair = () => {\n  const privateKey: Uint8Array = ECCrypto.generatePrivate();\n  const publicKey: Uint8Array = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const deriveKey = async ({\n  localPrivateKey,\n  remotePublicKey\n}: DeriveKey) => {\n  const sharedKey: Uint8Array = await ECCrypto.derive(\n    processKey(localPrivateKey),\n    processKey(remotePublicKey)\n  );\n  const sharedKeyBase64 = convertBufferToBase64(sharedKey);\n\n  return { sharedKey, sharedKeyBase64 };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  const processedPrivateKey = processKey(privateKey);\n  const decryptedMessageBuffer: Uint8Array = await ECCrypto.decrypt(\n    processedPrivateKey,\n    convertToEncryptedMessage(encryptedMessage)\n  );\n  const decryptedMessage = Buffer.from(decryptedMessageBuffer).toString();\n  const parsedMessage = safeParseJSON(decryptedMessage);\n\n  return parsedMessage;\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\nimport { PublishedContent, isPublishedContent } from \"../schema\";\nimport { parseJson } from \"../utils\";\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB: \"content/setSeedProviderPub\",\n  SET_SEED_INFO: \"content/setSeedInfo\",\n\n  PUBLISHED_CONTENT_ADDED: \"content/publishedContentAdded\",\n  PUBLISHED_CONTENT_REMOVED: \"content/publishedContentRemoved\",\n\n  ADD_UNLOCKED_CONTENT: \"content/addUnlocked\",\n  ADD_STREAM: \"content/addStream\",\n  REMOVE_STREAM: \"content/removeStream\",\n  ADD_AVAILABLE_TOKEN: \"content/addToken\",\n  REMOVE_USED_TOKEN: \"content/removeToken\",\n  ADD_STREAM_TOKEN: \"content/addStreamToken\",\n  REMOVE_STREAM_TOKEN: \"content/removeStreamToken\"\n} as const;\n\nexport const setSeedProviderPub = pub => async dispatch => {\n  let value: string | Record<string, any> = {\n    $$__ENCRYPT__FOR: \"me\",\n    value: pub\n  };\n  if (!pub) {\n    value = \"\";\n  }\n  await Http.post(\"/api/gun/put\", {\n    path: \"$user>seedServiceProviderPubKey\",\n    value\n  });\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (seedUrl, seedToken) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0, -1) : seedUrl;\n  const infoS = JSON.stringify({ seedUrl: cleanUrl, seedToken });\n  await Http.post(\"/api/gun/put\", {\n    path: \"$user>seedServiceSeedData\",\n    value: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: infoS\n    }\n  });\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: { seedUrl: cleanUrl, seedToken }\n  });\n};\n\nexport const publishedContentAdded = createAction<{\n  content: PublishedContent;\n  res: { ok: boolean; id: string };\n}>(ACTIONS.PUBLISHED_CONTENT_ADDED);\n\nexport const addPublishedContent = (\n  content: PublishedContent\n) => async dispatch => {\n  const { data } = await Http.post<{ ok: boolean; id: string }>(\n    \"/api/gun/set\",\n    {\n      path: \"$user>publishedContent\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: JSON.stringify(content)\n      }\n    }\n  );\n  dispatch(\n    publishedContentAdded({\n      content,\n      res: data\n    })\n  );\n  return data;\n};\n\nexport const publishedContentRemoved = createAction<{ id: string }>(\n  ACTIONS.PUBLISHED_CONTENT_REMOVED\n);\n\nexport const unlockContent = (amt, owner, postID) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"contentReveal\",\n    amt,\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: postID\n  });\n  const revealRes = JSON.parse(data.orderAck.response);\n  if (revealRes && revealRes.unlockedContents) {\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type: ACTIONS.ADD_UNLOCKED_CONTENT,\n          data: { contentPath: `${owner}>posts>${postID}`, content }\n        });\n      }\n    }\n  }\n};\nexport const addStream = ({\n  seedToken,\n  liveToken,\n  streamUrl,\n  streamPostId,\n  streamContentId,\n  streamStatusUrl\n}) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {\n      seedToken,\n      liveToken,\n      streamUrl,\n      streamPostId,\n      streamContentId,\n      streamStatusUrl\n    }\n  });\n};\nexport const removeStream = () => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeUnavailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\n\nconst OWN_PUBLISHED_CONTENT_QUERY = \"$user::publishedContent::map.on\";\n\nexport const subOwnPublishedContent = () => async (\n  dispatch: (action: any) => void,\n  getState: () => { node: { publicKey: string } }\n) => {\n  console.debug(`Subscribing to own published content`);\n  const subscription = await rifle({\n    query: OWN_PUBLISHED_CONTENT_QUERY,\n    reconnect: true,\n    publicKey: getState().node.publicKey,\n    onData: async (content: string, key) => {\n      try {\n        console.debug(`Received own content:`);\n        console.debug(content);\n\n        if (typeof key !== \"string\") {\n          throw new TypeError(`Invalid content key received: ${key}`);\n        }\n\n        if (!content) {\n          dispatch(\n            publishedContentRemoved({\n              id: key\n            })\n          );\n          return;\n        }\n\n        if (typeof content !== \"string\") {\n          throw new TypeError(`Invalid content received (${content})`);\n        }\n\n        const parsed = parseJson(content);\n\n        if (!isPublishedContent(parsed)) {\n          throw new TypeError(\n            `Invalid content received (might be incomplete replication): ${JSON.stringify(\n              parsed,\n              null,\n              2\n            )}`\n          );\n        }\n\n        dispatch(\n          publishedContentAdded({\n            content: parsed,\n            res: {\n              id: key,\n              ok: true\n            }\n          })\n        );\n      } catch (e) {\n        console.error(`Error inside own published content sub:`);\n        console.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n\nexport const unsubOwnPublishedContent = () => () => {\n  console.debug(`Unsubbing own published content.`);\n  unsubscribeRifleByQuery(OWN_PUBLISHED_CONTENT_QUERY);\n};\n","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { throttledExchangeKeyPair } from \"./EncryptionActions\";\nimport { connectSocket } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_WEBCLIENT_PREFIX:'node/setWebClientPrefix'\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nconst wait = ms => new Promise(r => setTimeout(r, ms));\n\nexport const fetchNodeHealth = hostIP => async dispatch => {\n  try {\n    const { data } = await Http.get(`${hostIP}/healthz`);\n    if (!data) {\n      throw new Error(\n        `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n      );\n    }\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (hostIP, resetData = true) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(throttledExchangeKeyPair())\n    ]);\n\n    connectSocket(host, true);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(`https://${sanitizedHostIP}`)(\n      dispatch\n    );\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(`http://${sanitizedHostIP}`)(\n    dispatch\n  );\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/auth\",\n      {\n        alias,\n        password\n      },\n      {\n        // Unlocking can take significantly longer than other endpoints\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/wallet\",\n      {\n        alias,\n        password\n      },\n      {\n        // Creating a wallet can take longer than any other endpoints.\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const setWebclientPrefix = prefix => dispatch => {\n  dispatch({\n    type:ACTIONS.SET_WEBCLIENT_PREFIX,\n    data:prefix\n  })\n}","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <NavLink to=\"/Backups\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </NavLink>\n        </div>\n        <div className=\"drawer-bottom-section\">\n          <NavLink className=\"drawer-item\" to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n          <NavLink to=\"/QRScanner\" onClick={close}>\n            <i\n              onClick={onClickScan}\n              className=\"icon-solid-scan\"\n              style={{ color: \"var(--main-blue)\" }}\n            ></i>\n          </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, { Suspense, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\nimport { loadReceivedRequests, loadSentRequests } from \"./actions/ChatActions\";\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as Store from \"./store\";\nimport \"./styles/App.global.css\";\nimport Stream from \"./common/Post/components/Stream\";\nimport { dragElement } from \"./utils/ui\";\nimport { Http } from \"./utils\";\nimport { removeStream } from \"./actions/ContentActions\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/publishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst createPostPage = React.lazy(() => import(\"./pages/Profile/createPost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/GoLive/GoLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst Story = React.lazy(() => import(\"./pages/Story\"));\nconst Stories = React.lazy(() => import(\"./pages/Stories\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\nconst BackupsPage = React.lazy(() => import(\"./pages/Backups\"));\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const contacts = Store.useSelector(({ chat }) => chat.contacts);\n  const sentRequests = Store.useSelector(({ chat }) => chat.sentRequests);\n  const receivedRequests = Store.useSelector(\n    ({ chat }) => chat.receivedRequests\n  );\n  const followedPublicKeys = Store.useSelector(Store.selectFollows).map(\n    f => f.user\n  );\n  const streamUrl = Store.useSelector(({ content }) => content.streamUrl);\n  const streamStatusUrl = Store.useSelector(({ content }) => content.streamStatusUrl);\n  const streamContentId = Store.useSelector(({ content }) => content.streamContentId);\n  const streamPostId = Store.useSelector(({ content }) => content.streamPostId);\n  const streamUserToken = Store.useSelector(({ content }) => content.streamUserToken);\n  const [update,setUpdate] = useState(0)\n  const [isLive,setIsLive] = useState(false);\n  const [showFloatingPlayer,setShowFloatingPlayer] = useState(false);\n  // effect to update live status\n  useEffect(() => {\n    if(!streamStatusUrl){\n      return\n    }\n    let timeout\n    const interval = setInterval(async ()=>{\n      try{\n        const res = await Http.get(streamStatusUrl);\n        if (!res.data.isLive) {\n          return\n        }\n        setIsLive(true)\n        clearInterval(interval)\n        timeout = setTimeout(()=>{\n          console.info(\"upp\")\n          setUpdate(Date.now())\n        },5000)\n      }catch(e){\n      }\n\n    },2000)\n    return () => {\n      clearInterval(interval)\n      clearTimeout(timeout)\n    }\n  },[streamStatusUrl,setIsLive,setUpdate])\n  const StreamRender = useMemo(() => {\n    return (\n      <Stream\n        hideRibbon={true}\n        item={{ magnetURI: streamUrl,liveStatus:'live' }}\n        timeout={1500}\n        id={undefined}\n        index={undefined}\n        postId={undefined}\n        tipCounter={undefined}\n        tipValue={undefined}\n        width={undefined}\n      />\n    );\n  }, [streamUrl,update]);\n\n  const stopStream = useCallback(() => {\n    Http.post(\"/api/gun/put\", {\n      path: `$user>posts>${streamPostId}>contentItems>${streamContentId}>liveStatus`,\n      value: 'wasLive'\n    });\n    removeStream()(dispatch);\n    console.info(\"doing it!!\")\n    console.info(streamUserToken)\n    fetch(`https://webtorrent.shock.network/api/stream/torrent/${streamUserToken}`)\n    .then(r => r.json())\n    .then(j => {\n      const {magnet} = j\n      if(!magnet){\n        return\n      }\n      Http.post(\"/api/gun/put\", {\n        path: `$user>posts>${streamPostId}>contentItems>${streamContentId}>playbackMagnet`,\n        value: magnet\n      });\n    })\n    .catch(e => console.info(e))\n    history.push(\"/profile\");\n  }, [dispatch,history,streamUserToken]);\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated) {\n      // TODO: Move to messages screen\n      dispatch(loadSentRequests());\n      dispatch(loadReceivedRequests());\n      // Get current user's profile on login\n      dispatch(subscribeUserProfile(publicKey));\n    } else {\n      dispatch(unsubscribeUserProfile(publicKey));\n    }\n  }, [authenticated, dispatch, publicKey]);\n\n  useEffect(()=>{\n    const tmp = authenticated && isLive && streamUrl\n    if(tmp !== showFloatingPlayer){\n      setShowFloatingPlayer(tmp)\n    }\n  },[authenticated,isLive,streamUrl,showFloatingPlayer,setShowFloatingPlayer])\n  useEffect(()=>{\n    if(showFloatingPlayer){\n      dragElement(\"floatyVideo\")\n    }\n  },[showFloatingPlayer])\n  return (\n    <FullHeight className=\"ShockWallet\">\n      {showFloatingPlayer && <div id=\"floatyVideo\" className=\"floaty-container\">\n        <i id=\"floatyVideoHeader\" className=\"fas fa-grip-vertical\"></i>\n        {StreamRender}\n      <button onClick={stopStream}>CLOSE STREAM</button></div>}\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:publicKey\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={createPostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey\"\n            exact\n            component={OtherUserPage}\n          />\n          <PrivateRoute path=\"/Backups\" exact component={BackupsPage} />\n          <Route path=\"/story\" exact component={Story} />\n          <Route path=\"/stories\" exact component={Stories} />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n    </FullHeight>\n  );\n};\n\nexport default App;\n","export function dragElement(elementId) {\n  const elmnt = document.getElementById(elementId)\n  if(!elmnt){\n    console.log(\"draggable set fail\")\n    return\n      \n  }\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  document.getElementById(elmnt.id + \"Header\").onpointerdown = dragMouseDown;\n\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onpointerup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onpointermove = elementDrag;\n  }\n\n  function elementDrag(e) {\n      console.log(\"dragging yooo\")\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n  }\n\n  function closeDragElement() {\n      console.log(\"not anymore!\")\n    // stop moving when mouse button is released:\n    document.onpointerup = null;\n    document.onpointermove = null;\n  }\n  }\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Http from \"axios\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./styles/index.global.css\";\n\nHttp.defaults.timeout = 10000;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\n\nexport function useForceUpdate(): () => void {\n  const [, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return update;\n}\n","import * as Common from \"shock-common\";\nimport { useCallback, useState } from \"react\";\n\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args),\n  debug: (...args: any[]) => console.debug(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not a url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n\nexport const useBooleanState = (initialState: boolean) => {\n  const [state, setState] = useState<boolean>(initialState);\n  const toggle = useCallback(() => {\n    setState(_state => !_state);\n  }, []);\n\n  return [state, toggle] as const;\n};\n\nexport const parseJson = (o: string) => JSON.parse(o) as unknown;\n","import * as Common from \"shock-common\";\n\nimport * as Utils from \"../utils\";\nimport {\n  rifle,\n  rifleCleanup,\n  unsubscribeRifleByQuery\n} from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  LOAD_USER_PROFILE: \"userProfiles/profiles/load\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\",\n  UPDATE_USER_PROFILE: \"userProfiles/profiles/update\"\n};\n\nconst subscribedProfiles = new Set();\n\nexport const updateUserProfile = (\n  publicKey: string,\n  profile: Partial<Common.User>\n) => ({\n  type: ACTIONS.UPDATE_USER_PROFILE,\n  data: {\n    publicKey,\n    profile\n  }\n});\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => (\n  dispatch: (action: object) => void,\n  getState: () => {\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  if (subscribedProfiles.has(publicKey)) {\n    return () => {};\n  }\n\n  console.info(\"subbing user...\" + publicKey);\n  subscribedProfiles.add(publicKey);\n\n  const subscription = rifle({\n    query: `${publicKey}::Profile::on`,\n    reconnect: true,\n    onData: profile => {\n      const { [publicKey]: existingUser } = getState().userProfiles;\n\n      if (existingUser) {\n        dispatch({\n          type: ACTIONS.UPDATE_USER_PROFILE,\n          data: { publicKey, profile }\n        });\n        return profile;\n      }\n\n      dispatch({\n        type: ACTIONS.LOAD_USER_PROFILE,\n        data: { publicKey, profile }\n      });\n    }\n  });\n\n  const binarySub = rifle({\n    query: `${publicKey}::profileBinary::map.on`,\n    reconnect: true,\n    onData: (data, key: string) => {\n      if (key === \"avatar\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updateUserProfile(publicKey, {\n            avatar: data\n          })\n        );\n      } else if (key === \"header\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updateUserProfile(publicKey, {\n            header: data\n          })\n        );\n      } else {\n        Utils.logger.error(\n          `Unknown key: ${key} for user binary profile data gun RPC socket`\n        );\n      }\n    }\n  });\n\n  return () => {\n    rifleCleanup(subscription, binarySub)();\n    subscribedProfiles.delete(publicKey);\n  };\n};\n\nexport const unsubscribeUserProfile = (publicKey: string) => async () => {\n  unsubscribeRifleByQuery(`${publicKey}::Profile::on`);\n  unsubscribeRifleByQuery(`${publicKey}::profileBinary::map.on`);\n};\n","// @ts-check\nimport { GUN_PROPS } from \"../utils/Gun\";\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const loadSharedPost = (\n  originalPostId,\n  originalPublicKey,\n  sharerPublicKey\n) => async dispatch => {\n  const { data: post } = await Http.get(\n    `/api/gun/otheruser/${originalPublicKey}/load/posts>${originalPostId}`\n  );\n  dispatch(subscribeUserProfile(originalPublicKey));\n  const tipSet = post.data.tipsSet ? Object.values(post.data.tipsSet) : [];\n  const lenSet = tipSet.length;\n  const tot =\n    lenSet > 0 ? tipSet.reduce((acc, val) => Number(val) + Number(acc)) : 0;\n  dispatch({\n    type: ACTIONS.LOAD_SHARED_POST,\n    data: {\n      ...post.data,\n      authorId: originalPublicKey,\n      sharerId: sharerPublicKey,\n      id: originalPostId,\n      tipCounter: lenSet,\n      tipValue: tot\n    }\n  });\n};\n\nconst USER_POSTS_QUERY_SUFFIX = `::posts::on`;\n\nexport const subscribeUserPosts = publicKey => async dispatch => {\n  console.info(\"subbing to posts from:\" + publicKey);\n  const subscription = await rifle({\n    query: publicKey + USER_POSTS_QUERY_SUFFIX,\n    onData: posts => {\n      console.debug(`posts from: ${publicKey}: `, posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n      const deletedPosts = postEntries\n        .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      newPosts.forEach(async function fetchAndDispatchPost(id) {\n        try {\n          const { data: post } = await Http.get(\n            `/api/gun/otheruser/${publicKey}/load/posts>${id}`\n          );\n          console.info(`processing post: ${id} from ${publicKey}`);\n          const tipSet = post.data.tipsSet\n            ? Object.values(post.data.tipsSet)\n            : [];\n          const lenSet = tipSet.length;\n          const tot =\n            lenSet > 0\n              ? tipSet.reduce((acc, val) => Number(val) + Number(acc))\n              : 0;\n          dispatch({\n            type: ACTIONS.ADD_USER_POST,\n            data: {\n              ...post.data,\n              id,\n              authorId: publicKey,\n              type: \"post\",\n              tipCounter: lenSet,\n              tipValue: tot\n            }\n          });\n        } catch (e) {\n          console.error(\n            `When subscribed to posts from public key --| ${publicKey} |-- and trying to download the post with id: --| ${id} |-- an error ocurred:`,\n            e\n          );\n        }\n      });\n\n      deletedPosts.forEach(id =>\n        dispatch({\n          type: ACTIONS.DELETE_USER_POST,\n          data: {\n            id,\n            authorId: publicKey,\n            type: \"post\"\n          }\n        })\n      );\n    }\n  });\n  return subscription;\n};\n\nexport const unsubUserPosts = publicKey => async () => {\n  console.info(\"unsubbing to posts from:\" + publicKey);\n  unsubscribeRifleByQuery(publicKey + USER_POSTS_QUERY_SUFFIX);\n};\n\nconst USER_SHARED_POSTS_QUERY_SUFFIX = `::sharedPosts::on`;\n\nexport const subscribeSharedUserPosts = publicKey => async dispatch => {\n  const subscription = await rifle({\n    query: publicKey + USER_SHARED_POSTS_QUERY_SUFFIX,\n    onData: posts => {\n      console.debug(`shared posts from ${publicKey}: `, posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n      const deletedPosts = postEntries\n        .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      newPosts.forEach(async function fetchAndDispatchSharedPost(id) {\n        try {\n          const res = await Http.get(\n            `/api/gun/otheruser/${publicKey}/load/sharedPosts>${id}`\n          );\n          const { data: shared } = res;\n          if (!shared.data || !shared.data.originalAuthor) {\n            throw new Error(\n              `invalid shared post provided for user ${publicKey}`\n            );\n          }\n          /** @type {import('shock-common').SharedPostRaw} */\n          const post = res.data.data;\n\n          /** @type {import('../schema').SharedPost} */\n          const processedPost = {\n            authorId: publicKey,\n            id,\n            originalAuthor: post.originalAuthor,\n            shareDate: post.shareDate,\n            sharerId: publicKey,\n            originalPost: undefined,\n            type: \"shared\"\n          };\n          dispatch({\n            type: ACTIONS.ADD_USER_POST,\n            data: processedPost\n          });\n\n          console.debug(\"dispatching shared post load\");\n          dispatch(loadSharedPost(id, post.originalAuthor, publicKey));\n        } catch (e) {\n          console.error(`User: ${publicKey}\\npostID: ${id}\\n error:`, e);\n        }\n      });\n\n      deletedPosts.forEach(id =>\n        dispatch({\n          type: ACTIONS.DELETE_USER_POST,\n          data: {\n            id,\n            authorId: publicKey\n          }\n        })\n      );\n    }\n  });\n  return subscription;\n};\n\nexport const unsubUserSharedPosts = publicKey => () => {\n  unsubscribeRifleByQuery(publicKey + USER_SHARED_POSTS_QUERY_SUFFIX);\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async dispatch => {\n  const subscription = await rifle({\n    query: FOLLOWS_QUERY,\n    reconnect: true,\n    onData: async (follow, key) => {\n      console.info(`processing follow`);\n      console.info(follow);\n      if (typeof key !== \"string\") {\n        console.warn(`Invalid follow key received: ${key}`);\n        return;\n      }\n\n      if (!follow) {\n        dispatch(removeFollow(key));\n        return;\n      }\n\n      if (typeof follow.user !== \"string\") {\n        console.warn(`Invalid follow user received (${follow.user})`);\n        return;\n      }\n\n      dispatch(addFollow(follow));\n    }\n  });\n\n  console.debug(\"subbing follows\");\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  unsubscribeRifleByQuery(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n","import * as Common from \"shock-common\";\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  didDisconnect: boolean;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  type: \"post\";\n}\n\n/**\n * Different from the one in shock-common.\n */\nexport interface SharedPost extends Common.SharedPostRaw {\n  authorId: string;\n  sharerId: string;\n  id: string;\n  type: \"shared\";\n  /**\n   * Undefined when loading it.\n   */\n  originalPost?: Post;\n}\n\nexport const isSharedPost = (post: any): post is SharedPost => {\n  if (!Common.isObj(post)) {\n    return false;\n  }\n\n  const obj = (post as unknown) as SharedPost;\n\n  if (typeof obj.authorId !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.id !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.originalAuthor !== \"string\") {\n    return false;\n  }\n\n  return obj.type === \"shared\";\n};\n\nexport interface PublishedContent {\n  type: \"image/embedded\" | \"video/embedded\";\n  magnetURI: string;\n  width: number;\n  height: number;\n  title: string;\n  description: string;\n}\n\nexport const isPublishedContent = (o: unknown): o is PublishedContent => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublishedContent;\n\n  if (typeof obj.description !== \"string\") {\n    return false;\n  }\n  if (typeof obj.height !== \"number\") {\n    return false;\n  }\n  if (typeof obj.width !== \"number\") {\n    return false;\n  }\n  if (!Common.isPopulatedString(obj.title)) {\n    return false;\n  }\n  if (obj.type !== \"image/embedded\" && obj.type !== \"video/embedded\") {\n    return false;\n  }\n  return true;\n};\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangingKeypair = null;\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(`/api/encryption/exchange`, {\n      publicKey: keyPair.publicKeyBase64,\n      deviceId\n    });\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n\nexport const throttledExchangeKeyPair = () => async dispatch => {\n  try {\n    if (!exchangingKeypair) {\n      exchangingKeypair = dispatch(exchangeKeyPair());\n    }\n\n    const result = await exchangingKeypair;\n\n    // eslint-disable-next-line require-atomic-updates\n    exchangingKeypair = null;\n\n    return result;\n  } catch (err) {\n    console.error(err);\n    exchangingKeypair = null;\n    throw err;\n  }\n};\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\nexport const setSource = source => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_SOURCE,\n    data: source\n  });\n\n  return source;\n};\n\nexport const setRate = rate => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_RATE,\n    data: rate\n  });\n\n  return rate;\n};\n","export const GUN_PROPS = [\"_\", \"#\"];\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n"],"sourceRoot":""}