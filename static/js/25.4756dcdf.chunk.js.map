{"version":3,"sources":["common/InputGroup/index.js","common/DialogNav/index.js","pages/Profile/offerService.tsx"],"names":["InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","disabled","className","classNames","group","onClick","fas","DIALOG_NAV_MIN_HEIGHT_PX","CONTAINER_STYLE","minHeight","DialogNav","pageTitle","drawerVisible","onHeight","Utils","goBack","useCallback","window","history","back","divRefCb","el","getBoundingClientRect","height","e","console","log","ref","style","OfferService","dispatch","useDispatch","useHistory","useSelector","content","seedInfo","seedUrl","seedToken","publicKey","node","userProfiles","useState","loading","setLoading","error","setError","serviceType","setServiceType","servicePrice","setServicePrice","onInputChange","target","preventDefault","onSubmit","a","serviceID","SeedServiceProvided","clear","serviceTitle","serviceDescription","serviceCondition","encrypt","serviceSeedUrl","serviceSeedToken","createService","res","push","message","onDiscard","overflow","overlay","fullScreen","text","onReset","display","justifyContent","marginBottom"],"mappings":"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","file":"static/js/25.4756dcdf.chunk.js","sourcesContent":["import classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst InputGroup = ({\n  label,\n  name,\n  onChange,\n  inputAction,\n  actionIcon,\n  value,\n  inputMode = \"text\",\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.css\";\n\nexport const DIALOG_NAV_MIN_HEIGHT_PX = 73;\n/** @type {import('react').CSSProperties} */\nconst CONTAINER_STYLE = {\n  minHeight: DIALOG_NAV_MIN_HEIGHT_PX\n};\n\nconst DialogNav = ({\n  pageTitle,\n  drawerVisible = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in DialogNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className=\"dialog-nav-container\"\n      ref={divRefCb}\n      style={CONTAINER_STYLE}\n    >\n      <div className=\"dialog-nav-back\" onClick={goBack}>\n        <i className=\"icon icon-thin-back\"></i>\n      </div>\n      <p className=\"dialog-nav-title\">{pageTitle}</p>\n      <div\n        className={classNames({\n          \"dialog-nav-menu-btn\": true,\n          \"dialog-nav-hidden\": !drawerVisible\n        })}\n      >\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DialogNav;\n","import React, {  useCallback,   useState } from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport DialogNav from \"../../common/DialogNav\";\nimport Loader from \"../../common/Loader\";\nimport InputGroup from \"../../common/InputGroup\"\nimport {createService} from \"../../actions/OrdersActions\"\nimport { useHistory } from \"react-router\";\n\n\nconst OfferService = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  //@ts-expect-error\n  const {seedUrl,seedToken} = useSelector(({content}) => content.seedInfo)\n  //@ts-expect-error\n  const publicKey = useSelector(({node}) => node.publicKey)\n  //@ts-expect-error\n  const userProfiles = useSelector(({userProfiles}) => userProfiles)\n  const [loading, setLoading] = useState(false);\n  const [error,setError] = useState(null)\n  const [serviceType,setServiceType] = useState(\"torrentSeed\")\n  const [servicePrice,setServicePrice] = useState(0)\n  //optional fields \n\n  const onInputChange = useCallback(e => {\n    const { value, name } = e.target;\n    e.preventDefault()\n    switch (name) {\n      case \"type\": {\n        setServiceType(value)\n        return\n      }\n      case \"price\": {\n        setServicePrice(value)\n        return\n      }\n      default:\n        return;\n    }\n  }, [setServiceType,setServicePrice]);\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault()\n      if(!seedUrl || !seedToken){\n        setError(\"seed url and token are not set in config\")\n        return\n      }\n      if(servicePrice <= 0){\n        setError(\"service price must be greater than 0\")\n        return\n      }\n      try{\n        setLoading(true)\n        let serviceID = \"\"\n        if(userProfiles[publicKey] && userProfiles[publicKey].SeedServiceProvided){\n          serviceID = userProfiles[publicKey].SeedServiceProvided\n        }\n        const clear = {serviceType,serviceTitle:\"Content Seeding\",serviceDescription:\"\",serviceCondition:\"\",servicePrice}\n        const encrypt = {serviceSeedUrl:seedUrl,serviceSeedToken:seedToken}\n        const res = await createService(clear,encrypt,serviceID)(dispatch)\n        console.log(res)\n        setLoading(false)\n        history.push(\"/profile\")\n      } catch(err){\n        setLoading(false)\n        setError(err.message || err)\n      }\n    },\n    [serviceType,servicePrice,history]\n  );\n  const onDiscard = useCallback(\n    async e => {\n      e.preventDefault();\n      setError(null)\n      setServiceType(\"torrentSeed\")\n      setServicePrice(0)\n\n    },\n    [setError,setServiceType,setServicePrice]\n  );\n  \n  return (<div className=\"publish-content-form-container m-1\" style={{overflow:'auto'}}>\n  {loading ? (\n    <Loader overlay fullScreen text=\"Creating service...\" />\n  ) : null}\n  <DialogNav  drawerVisible={false}  pageTitle=\"\" />\n  <form className=\"publish-content-form\" onSubmit={onSubmit} onReset={onDiscard}>\n    <div style={{display:'flex',justifyContent:'center',marginBottom:\"1rem\"}}>\n      <div >\n        <h2>Offer service</h2>\n        <div className=\"line\"></div>\n      </div>\n    </div>\n    <div >\n      <select name=\"type\" value={serviceType} onChange={onInputChange}>\n        <option value=\"torrentSeed\">Content Seeding</option>\n      </select>\n      {/*@ts-ignore */}\n      <InputGroup  \n        label=\"Service Price\" \n        name=\"price\" \n        type=\"number\" \n        actionIcon={null} \n        value={servicePrice}\n        onChange={onInputChange}\n        disabled={false} \n        inputAction={null}\n      />\n      \n    </div>\n    {error ? <p className=\"error-container\">{error}</p> : null}\n    <div className='flex-center'>\n    <input type=\"reset\" value=\"reset\" className='shock-form-button m-1'/>\n    <input type=\"submit\" value=\"submit\" className='shock-form-button-confirm m-1' />\n    </div>\n  </form>\n  </div>)\n}\nexport default OfferService"],"sourceRoot":""}