{"version":3,"sources":["common/DialogNav/index.js","utils/Platform.ts","common/QRCodeScanner/index.tsx","utils/validators.ts","pages/QRScanner/index.tsx"],"names":["DIALOG_NAV_MIN_HEIGHT_PX","CONTAINER_STYLE","minHeight","DialogNav","pageTitle","drawerVisible","onHeight","Utils","goBack","useCallback","window","history","back","divRefCb","el","getBoundingClientRect","height","e","console","log","className","ref","style","onClick","classNames","isDesktop","navigator","userAgent","match","modeContents","wizard","title","target","description","invoice","QRCodeScanner","mode","onScan","onError","onClose","content","facingMode","constraints","video","exact","btcAddress","lnInvoice","lnPubKey","extractInfo","data","cleanData","value","includes","split","removePrefix","amountSplit","amount","Math","floor","Number","address","toString","undefined","hasAmount","test","isBitcoinAddress","type","toLowerCase","isLightningPaymentRequest","request","isLightningPubKey","startsWith","isShockPubKey","pk","found","res","exec","findlnurl","lnurl","toUpperCase","QRScanner","useHistory","dispatch","useDispatch","useSelector","node","publicKey","useState","loading","setLoading","privateChannel","setPrivateChannel","payAmount","setPayAmount","withdrawAmount","setWithdrawAmount","hasMemo","setHasMemo","memo","setMemo","LNURLdata","setLNURLdata","scanQR","setScanQR","setDone","setError","push","onInputChange","name","checked","decodeLNURL","a","getParams","params","tag","p","reason","message","decodeAll","result","info","ExtractInfo","JSON","stringify","closeQR","scanDone","text","confirmWithdrawReq","callback","k1","Http","post","expiry","payReq","completeUrl","payment_request","fetch","json","status","confirmChannelReq","uri","newK1","shockPubKey","samePeer","pub_key","fetchPeers","peers","find","plit","host","connectPeer","get","nodeId","identity_pubkey","priv","confirmPayReq","pr","toRender","useMemo","onChange","maxWithdrawable","placeholder","minSendable","maxSendable","scanErr","Loader","overlay","fullScreen"],"mappings":"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","file":"static/js/26.f03f342a.chunk.js","sourcesContent":["// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.css\";\n\nexport const DIALOG_NAV_MIN_HEIGHT_PX = 73;\n/** @type {import('react').CSSProperties} */\nconst CONTAINER_STYLE = {\n  minHeight: DIALOG_NAV_MIN_HEIGHT_PX\n};\n\nconst DialogNav = ({\n  pageTitle,\n  drawerVisible = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in DialogNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className=\"dialog-nav-container\"\n      ref={divRefCb}\n      style={CONTAINER_STYLE}\n    >\n      <div className=\"dialog-nav-back\" onClick={goBack}>\n        <i className=\"icon icon-thin-back\"></i>\n      </div>\n      <p className=\"dialog-nav-title\">{pageTitle}</p>\n      <div\n        className={classNames({\n          \"dialog-nav-menu-btn\": true,\n          \"dialog-nav-hidden\": !drawerVisible\n        })}\n      >\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DialogNav;\n","export const isMobile = (): boolean =>\n  !!navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n\nexport const isDesktop = (): boolean => (!isMobile() ? true : false);\n","import QRScanner from \"react-qr-scanner\";\nimport { isDesktop } from \"../../utils/Platform\";\nimport \"./css/index.css\";\n\ntype ScannerMode = \"wizard\" | \"invoice\";\ninterface Props {\n  mode: ScannerMode;\n  onScan: (result: string | null) => void;\n  onError: (error: Error) => void;\n  onClose: () => void;\n}\n\nconst modeContents = {\n  wizard: {\n    title: \"SCAN A\",\n    target: \"QR CODE\",\n    description: \"Point your camera at a ShockWizard QR Code\"\n  },\n  invoice: {\n    title: \"SCAN AN\",\n    target: \"INVOICE\",\n    description: \"Point your camera at an LND Invoice\"\n  }\n};\n\nconst QRCodeScanner = ({\n  mode = \"wizard\",\n  onScan,\n  onError,\n  onClose\n}: Props) => {\n  const content = modeContents[mode];\n  const facingMode = isDesktop() ? \"user\" : \"environment\";\n\n  return (\n    <div className=\"qr-code-scanner-container\">\n      <div className=\"qr-scanner-top-section\">\n        <i className=\"fas fa-times\" onClick={onClose}></i>\n      </div>\n\n      <QRScanner\n        constraints={{\n          video: {\n            facingMode: { exact: facingMode }\n          }\n        }}\n        onScan={onScan}\n        onError={onError}\n      />\n\n      <div className=\"qr-scanner-target\" />\n      <div className=\"qr-scanner-bottom-section\">\n        <p className=\"qr-scanner-bottom-title\">\n          {content.title}{\" \"}\n          <span className=\"qr-scanner-bottom-title-highlight\">\n            {content.target}\n          </span>\n        </p>\n        <p className=\"qr-scanner-bottom-description\">{content.description}</p>\n        <div className=\"qr-scanner-btn\" onClick={onClose}>\n          Cancel Scan\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QRCodeScanner;\n","const btcAddress = /^(bc(1|r)|[123]|m|n|((t|x)pub)|(tb1))[a-zA-HJ-NP-Z0-9]{25,90}$/\nconst lnInvoice = /^(ln(tb|bc|bcrt))[0-9][a-z0-9]{180,7089}$/\nconst lnPubKey = /^[a-f0-9]{66}$/\n\nexport const removePrefix = (data:string):string => {\n  let value = data\n  if (data.includes('bitcoin:')) {\n    ;[, value] = data.split('bitcoin:')\n  } else if (data.includes('lightning:')) {\n    ;[, value] = data.split('lightning:')\n  } else if (data.includes('LIGHTNING:')) {\n    ;[, value] = data.split('LIGHTNING:')\n  }\n\n  return value\n}\n\nexport const hasAmount = (data:string):{address:string,amount:undefined|string} => {\n  if (data.includes('?amount=')) {\n    const amountSplit = data.split('?amount=')\n\n    const amount = Math.floor(Number(amountSplit[1]) * 100000000)\n    return { address: amountSplit[0], amount: amount.toString() }\n  }\n  return { address: data, amount: undefined }\n}\n\n\nexport const isBitcoinAddress = (data:string) => {\n  return btcAddress.test(data)\n}\n\nexport const isLightningPaymentRequest = (data:string) =>\n  lnInvoice.test(data.toLowerCase())\n\nexport const isLightningPubKey = (data:string) => lnPubKey.test(data)\n\n\nexport const isShockPubKey = (data:string) => data.startsWith('$$__SHOCKWALLET__USER__')\n\n\nexport const findlnurl = (data:string) => {\n  const res = /^(http.*[&?]lightning=)?((lnurl)([0-9]{1,}[a-z0-9]+){1})/.exec(\n    data.toLowerCase(),\n  )\n  if (res) {\n    return res[2]\n  }\n  return null\n}\nexport type ExtractedBTCAddress = {\n  type: 'btc',\n  address:string,\n  amount?:string\n}\nexport type ExtractedLNInvoice = {\n  type: 'ln',\n  request:string,\n}\nexport type ExtractedKeysend = {\n  type: 'keysend',\n  address:string,\n}\nexport type ExtractedShockPK = {\n  type: 'pk',\n  pk:string,\n}\nexport type ExtractedLNURL = {\n  type: 'lnurl',\n  lnurl:string,\n}\nexport type ExtractedUnknown = {\n  type: 'unknown',\n}\n\n/**\n * @param {string} data\n * @returns {ExtractedBTCAddress|ExtractedLNInvoice|ExtractedKeysend|ExtractedShockPK|ExtractedUnknown|ExtractedLNURL}\n */\nconst extractInfo = (data:string):ExtractedBTCAddress|ExtractedLNInvoice|ExtractedKeysend|ExtractedShockPK|ExtractedUnknown|ExtractedLNURL => {\n  const cleanData = removePrefix(data)\n  const { address, amount } = hasAmount(cleanData)\n  if (isBitcoinAddress(address)) {\n    return {\n      type: 'btc',\n      address,\n      amount,\n    }\n  }\n  if (isLightningPaymentRequest(cleanData)) {\n    return {\n      type: 'ln',\n      request: cleanData,\n    }\n  }\n  if (isLightningPubKey(cleanData)) {\n    return {\n      type: 'keysend',\n      address: cleanData,\n    }\n  }\n  if (isShockPubKey(cleanData)) {\n    return {\n      type: 'pk',\n      pk: cleanData,\n    }\n  }\n\n  const found = findlnurl(cleanData)\n  if (found) {\n    return {\n      type: 'lnurl',\n      lnurl: found.toUpperCase(),\n    }\n  }\n  return { type: 'unknown' }\n}\n\nexport default extractInfo\n","import React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from \"react\";\nimport { useHistory } from \"react-router\";\nimport { getParams, LNURLAuthParams, LNURLChannelParams, LNURLPayParams, LNURLResponse, LNURLWithdrawParams } from 'js-lnurl'\nimport DialogNav from \"../../common/DialogNav\";\nimport Loader from \"../../common/Loader\";\nimport QRCodeScanner from \"../../common/QRCodeScanner\";\nimport ExtractInfo from \"../../utils/validators\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Http } from \"../../utils\";\nimport { connectPeer, fetchPeers } from \"../../actions/WalletActions\";\n\nconst QRScanner = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  //@ts-ignore\n  const publicKey = useSelector(({node}) => node.publicKey)\n  const [loading,setLoading] = useState(false)\n  const[privateChannel,setPrivateChannel] = useState(true)\n  const[payAmount,setPayAmount]= useState(0)\n  const[withdrawAmount,setWithdrawAmount]= useState(0)\n  const[hasMemo,setHasMemo]= useState(false)\n  const[memo,setMemo]= useState('')\n  const[LNURLdata,setLNURLdata]= useState(null)\n  const[scanQR,setScanQR]= useState(true)\n  const[done,setDone]= useState(null)\n  const[error,setError]= useState(null)\n  const goBack = useCallback(()=>{history.push(\"/overview\")},[history])\n  const onInputChange = useCallback(e => {\n    const { value, name,checked } = e.target;\n    //e.preventDefault()\n    switch (name) {\n      case \"privateChannel\": {\n        setPrivateChannel(checked);\n        return;\n      }\n      case \"payAmount\": {\n        setPayAmount(value);\n        return;\n      }\n      case \"withdrawAmount\": {\n        setWithdrawAmount(value);\n        return;\n      }\n      case \"hasMemo\": {\n        setHasMemo(checked);\n        return;\n      }\n      case \"memo\": {\n        setMemo(value);\n        return;\n      }\n      case \"memo\": {\n        setMemo(value);\n        return;\n      }\n      default:\n        return;\n    }\n  }, [setPrivateChannel,setPayAmount,setWithdrawAmount,setHasMemo,setMemo]);\n  const decodeLNURL = useCallback(async (data) => {\n    setLoading(true)\n    try {\n      const params = await getParams(data)\n      //@ts-ignore\n      if(!params.tag){\n        const p = params as LNURLResponse\n        setLoading(false)\n        setError(p.reason)\n      }\n      const p = params as LNURLChannelParams | LNURLWithdrawParams | LNURLAuthParams | LNURLPayParams\n      switch (p.tag) {\n        case 'channelRequest': {\n          console.log('this url is a channel request')\n          break\n        }\n        case 'withdrawRequest': {\n          console.log('this url is a withdrawal request')\n          break\n        }\n        case 'hostedChannelRequest': {\n          console.log('this url is a hosted channel request')\n          break\n        }\n        case 'login': {\n          console.log('this url is a login ')\n          break\n        }\n        case 'payRequest': {\n          console.log('this url is a pay request')\n          break\n        }\n        default: {\n          console.log('unknown tag')\n        }\n      }\n      setLNURLdata(p)\n      setLoading(false)\n    } catch (e) {\n      console.log(e)\n      setLoading(false)\n      setError(e.message || e)\n    }\n  },[])\n  const decodeAll = useCallback((result) => {\n    console.log(\"decoding!\")\n    const info = ExtractInfo(result)\n    switch (info.type) {\n      case 'btc':\n      case 'ln':\n      case 'keysend': {\n        history.push(\"/send\",{\n          data: info,\n        })\n        return\n      }\n      case 'pk': {\n        history.push(`/otherUser/${info.pk}`)\n        return\n      }\n      case 'lnurl': {\n        decodeLNURL(info.lnurl)\n        return\n      }\n      case 'unknown': {\n        setError('cant decode' + JSON.stringify(info))\n      }\n    }\n  },[history,setError,decodeLNURL])\n  const closeQR = useCallback(()=>{\n    setScanQR(false)\n    history.push(\"/overview\")\n  },[setScanQR])\n  const scanDone = useCallback((content)=> {\n    console.log(content)\n    if(!content || !content.text){\n      return\n    }\n    decodeAll(content.text)\n    setScanQR(false)\n  },[decodeAll,setScanQR])\n\n\n  const confirmWithdrawReq = useCallback(async ()=>{\n    try{\n      const { callback, k1 } = LNURLdata\n      const {data:payReq} = await Http.post(\"/api/lnd/addinvoice\",{\n        value:withdrawAmount,\n        memo: memo,\n        expiry: 1800,\n      })\n      const completeUrl = `${callback}?k1=${k1}&pr=${payReq.payment_request}`\n      console.log(completeUrl)\n      const res = await fetch(completeUrl)\n      const json = await res.json()\n      if(json.status === 'OK'){\n        setDone('Withdraw request sent correctly')\n      } else {\n        setError(json.reason)\n      }\n    }catch(e){\n      setError(e.message || e)\n    }\n  },[history,LNURLdata,withdrawAmount,memo,setDone,setError])\n  const confirmChannelReq = useCallback(async ()=>{\n    try{\n      const { uri, callback, k1 } = LNURLdata\n      let newK1 = k1\n      if (k1 === 'gun' && LNURLdata.shockPubKey) {\n        newK1 = `$$__SHOCKWALLET__USER__${LNURLdata.shockPubKey}`\n      }\n      const samePeer = e => {\n        const localUri = `${e.pub_key}@${e.address}`\n        return localUri === uri\n      }\n      const {peers} = await fetchPeers()(dispatch)\n      if(!peers.find(samePeer)){\n        const [publicKey, host] = uri.plit(\"@\")\n        await connectPeer({publicKey, host})\n      }\n\n      const {data:node} = await Http.get(\"/healthz\")\n      const nodeId = node.identity_pubkey\n      const priv = privateChannel ? 1 : 0\n      const completeUrl = `${callback}?k1=${newK1}&remoteid=${nodeId}&private=${priv}`\n      const res = await fetch(completeUrl)\n      const json = await res.json()\n      if(json.status === 'OK'){\n        setDone('Channel request sent correctly')\n      }else {\n        setError(json.reason)\n      }\n    }catch(e){\n        setError(e.message || e)\n      }\n  },[history,LNURLdata,setError])\n  const confirmPayReq = useCallback(async ()=>{\n    try{\n      const { callback } = LNURLdata\n      const completeUrl = `${callback}?amount=${payAmount * 1000}`\n      console.log(completeUrl)\n      const res = await fetch(completeUrl)\n      const json = await res.json()\n      if (json.status === 'ERROR') {\n        setError(json.reason)\n        return\n      }\n      history.push(\"/send\",{\n        data: { type: 'ln', request: json.pr },\n      })\n    }catch(e){\n      setError(e.message || e)\n    }\n  },[history,LNURLdata,payAmount,setError])\n\n  const toRender = useMemo(() => {\n    if (LNURLdata === null) {\n      return null\n    }\n    switch (LNURLdata.tag) {\n      case 'channelRequest': {\n        console.log('this url is a channel request')\n        return <div>\n          <h2>LNURL Channel Request</h2>\n          <p>Requesting channel from:{LNURLdata.uri || 'ADDRESS NOT FOUND'}</p>\n          <input type='checkbox' name=\"privateChannel\" checked={privateChannel} onChange={onInputChange}/>\n          <button onClick={confirmChannelReq}>CONNECT</button>\n        </div>\n      }\n      case 'withdrawRequest': {\n        console.log('this url is a withdrawal request')\n        return <div>\n          <h2>LNURL Channel Request</h2>\n          <p><strong>Max</strong>Withdrawable: <strong>{LNURLdata.maxWithdrawable / 1000}</strong> Satoshi</p>\n          <input type=\"number\" value={withdrawAmount} name=\"withdrawAmount\" onChange={onInputChange}/>\n          <input type='checkbox' name=\"hasMemo\" checked={hasMemo} onChange={onInputChange}/>\n          {hasMemo && <input type=\"text\" value={memo} name=\"memo\" placeholder=\"memo\" onChange={onInputChange}/>}\n          <button onClick={confirmWithdrawReq}>RECEIVE</button>\n        </div>\n      }\n      case 'hostedChannelRequest': {\n        console.log('this url is a hosted channel request')\n        return <div>\n          <h2>LNURL Hosted Channel Request</h2>\n          <p>This Request is not supported</p>\n          <button onClick={goBack}>BACK</button>\n        </div>\n      }\n      case 'login': {\n        console.log('this url is a login ')\n        return <div>\n        <h2>LNURL Auth Request</h2>\n        <p>This Request is not supported</p>\n        <button onClick={goBack}>BACK</button>\n      </div>\n      }\n      case 'payRequest': {\n        console.log('this url is a pay request')\n        return <div>\n        <h2>LNURL Pay Request</h2>\n        <p><strong>Min</strong>Sendable: <strong>{LNURLdata.minSendable / 1000}</strong> Satoshi</p>\n        <p><strong>Max</strong>Sendable: <strong>{LNURLdata.maxSendable / 1000}</strong> Satoshi</p>\n        <input type=\"number\" value={payAmount} name=\"payAmount\" onChange={onInputChange}/>\n        <button onClick={confirmPayReq}>SEND</button>\n      </div>\n      }\n      default: {\n        console.log('unknown tag')\n        return <div>\n        <h2>LNURL Unknown Request</h2>\n        <button onClick={goBack}>BACK</button>\n      </div>\n      }\n    }\n  },[LNURLdata,privateChannel,withdrawAmount,hasMemo,memo,payAmount,onInputChange,goBack])\n  const scanErr = useCallback((e:Error)=>{\n    setError(e.message || e)\n  },[setError])\n  if(scanQR){\n    return <div>\n    <QRCodeScanner\n      mode=\"invoice\"\n      onClose={closeQR}\n      onError={scanErr}\n      onScan={scanDone}\n    />\n    </div>\n  }\n  return (<div className=\"publish-content-form-container m-1\">\n  {loading ? (\n    <Loader overlay fullScreen text=\"\" />\n  ) : null}\n  <DialogNav  drawerVisible={false} pageTitle=\"PUBLISH CONTENT\" />\n  <div>\n    {toRender}\n  </div>\n  </div>)\n};\n\nexport default QRScanner;\n"],"sourceRoot":""}