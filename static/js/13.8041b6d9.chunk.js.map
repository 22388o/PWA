{"version":3,"sources":["common/Post/components/TipRibbon/index.js","common/DialogNav/index.js","utils/Cache.js","utils/Promise.js","utils/Torrents.js","common/Post/components/ImagePreview/index.js","common/Post/components/VideoPreview/index.js","pages/Profile/createPost.tsx"],"names":["TipRibbon","tipCounter","tipValue","zoomed","className","style","opacity","DialogNav","pageTitle","drawerVisible","goBack","useCallback","window","history","back","onClick","classNames","getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","console","log","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","length","forEach","element","src","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","file","extension","name","split","slice","supportedFileType","Object","entries","filter","includes","fileType","webTorrentClient","WebTorrent","attachMedia","posts","torrentMode","allowDuplicates","torrentTasks","map","post","contentItems","id","item","type","key","get","magnetURI","add","torrent","files","target","destroy","torrentElement","contentURL","decodeURIComponent","replace","format","toLowerCase","endsWith","compatibleURL","elementSrc","getAttribute","setAttribute","renderTo","on","getBlob","err","blob","querySelector","dataset","played","reduce","torrents","ImagePreview","index","postId","width","selected","updateSelection","mainImageStyle","selectThis","position","alt","data-torrent","data-file-key","top","backgroundColor","height","display","alignItems","justifyContent","class","VideoPreview","videoStyle","cursor","controls","data-played","PublishContentPage","useDispatch","useHistory","publishedContent","useSelector","content","avatar","node","useState","loading","setLoading","error","setError","paragraph","setParagraph","postType","setPostType","isPreview","selectedContent","setSelectedContent","onSubmit","useMemo","e","preventDefault","push","text","isPrivate","Http","tags","title","errorMessage","message","onDiscard","onInputChange","value","Loader","overlay","fullScreen","onReset","marginBottom","backgroundImage","onChange","placeholder","rows","marginLeft","appearance","color","overflow","whiteSpace","margin"],"mappings":"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","file":"static/js/13.8041b6d9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./css/index.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst DialogNav = ({ pageTitle, drawerVisible }) => {\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n  return (\n    <div className=\"dialog-nav-container\">\n      <div className=\"dialog-nav-back\" onClick={goBack}>\n        <i className=\"icon icon-thin-back\"></i>\n      </div>\n      <p className=\"dialog-nav-title\">{pageTitle}</p>\n      <div\n        className={classNames({\n          \"dialog-nav-menu-btn\": true,\n          \"dialog-nav-hidden\": !drawerVisible\n        })}\n      >\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DialogNav;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = true;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import WebTorrent from \"webtorrent\";\nimport { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nconst supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: true,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nconst _getFileType = file => {\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const supportedFileType = Object.entries(\n    supportedFileTypes\n  ).filter(([type, options]) => options.formats.includes(extension))[0];\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport const webTorrentClient = new WebTorrent();\n\nexport const attachMedia = (\n  posts = [],\n  torrentMode = true,\n  allowDuplicates = false\n) => {\n  const torrentTasks = posts\n    .map(post => {\n      const { contentItems, id } = post;\n      return Object.entries(contentItems)\n        .filter(([key, item]) => supportedFileTypes[item.type])\n        .map(([key, item]) => () =>\n          new Promise(resolve => {\n            const torrentExists = webTorrentClient.get(item.magnetURI);\n\n            if (torrentExists && !allowDuplicates) {\n              resolve(true);\n              return;\n            }\n\n            webTorrentClient.add(item.magnetURI, async torrent => {\n              // Proceed to the next torrent in queue\n              resolve(true);\n\n              const files = torrent.files.filter(file => {\n                const extension = file.name?.split(\".\")?.slice(-1)[0];\n                const supportedFileType = Object.entries(\n                  supportedFileTypes\n                ).filter(([type, options]) =>\n                  options.formats.includes(extension)\n                )[0];\n                if (supportedFileType) {\n                  const [, fileType] = supportedFileType;\n                  const matched = fileType.formats.includes(extension);\n                  return matched;\n                }\n                return false;\n              });\n\n              files.map(async file => {\n                const fileType = _getFileType(file);\n\n                if (!fileType) {\n                  return;\n                }\n\n                const fileName = `${id}-${key}-${file.name}`;\n\n                const element = fileType.element;\n                const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                const cachedFile = await getCachedFile(fileName);\n\n                if (cachedFile) {\n                  const torrent = webTorrentClient.get(item.magnetURI);\n\n                  if (torrent) {\n                    torrent.destroy();\n                  }\n\n                  renderCachedFile(cachedFile, target);\n                  return;\n                }\n\n                const torrentElements = document.querySelectorAll(target);\n                torrentElements.forEach(torrentElement => {\n                  const contentURL = decodeURIComponent(\n                    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n                  );\n                  const [compatibleURL] = fileType.formats.filter(format =>\n                    contentURL\n                      .toLowerCase()\n                      .endsWith(`.${format.toLowerCase()}`)\n                  );\n                  const elementSrc = torrentElement.getAttribute(\"src\");\n\n                  if ((torrentMode || !compatibleURL) && !elementSrc) {\n                    file.renderTo(torrentElement, fileType.options);\n                    return;\n                  }\n\n                  torrentElement.setAttribute(\"src\", contentURL);\n                });\n              });\n\n              torrent.on(\"done\", () => {\n                files.map(file => {\n                  const fileType = _getFileType(file);\n                  const fileName = `${id}-${key}-${file.name}`;\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n\n                  file.getBlob(async (err, blob) => {\n                    if (err) {\n                      console.warn(err);\n                      return;\n                    }\n\n                    await saveFile(fileName, blob);\n                    const element = document.querySelector(target);\n                    if (element?.dataset.played === \"false\" && !element?.getAttribute(\"src\")) {\n                      const cachedFile = await getCachedFile(fileName);\n                      renderCachedFile(cachedFile, target);\n                    }\n                  });\n\n                  return file;\n                });\n              });\n            });\n          })\n        );\n    })\n    .reduce((torrents, contentItems) => [...torrents, ...contentItems], []);\n\n  runSerial(torrentTasks);\n};\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst ImagePreview = ({ id, item, index, postId,width,selected,updateSelection }) => {\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = {opacity:1}\n  if(width){\n    mainImageStyle.width = width\n  }\n  const selectThis = useCallback(()=> {\n    if(selected !==id){\n      updateSelection(id)\n    } \n  },[id,updateSelection])\n\n  return (\n    <div className=\"media-container\" onClick={selectThis} style={{position:'relative'}}>\n      <img\n          className={`torrent-img torrent-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          style={mainImageStyle}\n          src={contentURL}\n        />\n      {selected === id && <div\n          style={{...mainImageStyle,opacity:1,position:'absolute',top:0,backgroundColor:'rgb(255,255,255,0.2)',height:'100%',display:'flex',alignItems:'center',justifyContent:'center'}}\n        >\n        <i class=\"far fa-check-circle fa-3x\" style={{opacity:1}}></i>\n      </div>}\n    </div>\n  );\n};\n\nexport default ImagePreview;\n","import React,{useCallback} from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.css\";\n\nconst VideoPreview = ({ id, item, index, postId,width,selected,updateSelection }) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = { }\n  if(width){\n    videoStyle.width = width\n  }\n  const selectThis = useCallback(()=> {\n    if(selected !==id){\n      updateSelection(id)\n    } \n  },[id,updateSelection])\n  return (\n    <div className=\"media-container\" style={{position:'relative'}}>\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\",\n          \n        }}\n        \n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n      </div>\n      <div onClick={selectThis}\n          style={{...videoStyle,opacity:selected === id ? 1:0,position:'absolute',top:0,backgroundColor:'rgb(255,255,255,0.2)',height:'100%',display:'flex',alignItems:'center',justifyContent:'center'}}\n        >\n        <i class=\"far fa-check-circle fa-3x\" style={{opacity:1}}></i>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPreview;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport \"./css/index.css\";\n\nimport Loader from \"../../common/Loader\";\nimport DialogNav from \"../../common/DialogNav\";\nimport Http from \"../../utils/Http\";\nimport Video from \"../../common/Post/components/Video\";\nimport Image from \"../../common/Post/components/Image\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport ImagePreview from \"../../common/Post/components/ImagePreview\";\nimport VideoPreview from \"../../common/Post/components/VideoPreview\";\nimport { useHistory } from \"react-router\";\nconst PublishContentPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory()\n  //@ts-expect-error\n  const publishedContent = useSelector(({content}) => content.publishedContent)\n  //@ts-expect-error\n  const avatar = useSelector(({ node }) => node.avatar);\n  const [loading, setLoading] = useState(false);\n  const [error,setError] = useState(null)\n  const [paragraph,setParagraph] = useState('')\n  const [postType,setPostType] = useState(\"public\")\n  const [isPreview,setIsPreview] = useState(false)\n  const [selectedContent,setSelectedContent] = useState('')\n  const contentToDisplay = useMemo(() => {\n    attachMedia([{id:\"content\",contentItems:publishedContent}])\n  },[publishedContent])\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault()\n      \n      console.log(\"submitting\")\n      if(selectedContent === '' && paragraph === ''){\n        setError(\"at least one paragraph or one media is required\")\n        return\n      }\n      setLoading(true)\n      let contentItems = []\n      if(paragraph !== ''){\n        contentItems.push({\n          type: 'text/paragraph',\n          text: paragraph,\n        })\n      }\n      const isPrivate = postType === \"private\"\n      if(selectedContent !== ''){\n        const item = publishedContent[selectedContent]\n        if(item){\n          contentItems.push({\n            type:item.type,\n            width:item.width,\n            height:item.height,\n            magnetURI:item.magnetURI,\n            isPreview:isPreview,\n            isPrivate:isPrivate\n          })\n        }\n      }\n      try{\n        const res = await Http.post(`/api/gun/wall`, {\n          tags: [],\n          title: 'Post',\n          contentItems,\n        })\n        if (res.status === 200) {\n          console.log('post created successfully')\n          setLoading(false)\n          history.push(\"/profile\")\n        } else {\n          setError('invalid response status')\n          setLoading(false)\n        }\n      }catch(err){\n        console.log(err)\n        setError(err?.errorMessage ?? err?.message)\n        setLoading(false)\n      }\n    },\n    [selectedContent,paragraph,publishedContent,isPreview,postType,history,setLoading,setError]\n  );\n  const onDiscard = useCallback(\n    async e => {\n      e.preventDefault();\n      setError(null)\n      setParagraph('')\n    },\n    []\n  );\n  const onInputChange = useCallback(e => {\n    const { value, name } = e.target;\n    switch (name) {\n      case \"paragraph\": {\n        setParagraph(value)\n        return;\n      }\n      case \"postType\":{\n        console.log(value)\n        setPostType(value)\n        return\n      }\n      default:\n        return;\n    }\n  }, [setParagraph]);\n\n  const updateSelection = useCallback(e => {\n    e.preventDefault()\n    setSelectedContent(e.target.getAttribute(\"propid\"))\n  },[selectedContent,setSelectedContent])\n\n  const parseContent = ([key, item], index) => {\n    if (item.type === \"image/embedded\") {\n      return (\n        <div style={{width:100,margin:'1em'}}>\n        <ImagePreview\n          id={key}\n          item={item}\n          index={index}\n          postId={\"content\"}\n          key={`${index}`}\n          width=\"100px\"\n          selected={selectedContent}\n          updateSelection={setSelectedContent}\n        />\n        </div>\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <div style={{width:100}}>\n        <VideoPreview\n          id={key}\n          item={item}\n          index={index}\n          postId={\"content\"}\n          key={`${index}`}\n          width=\"100px\"\n          selected={selectedContent}\n          updateSelection={setSelectedContent}\n        />\n        </div>\n      );\n    }\n\n    return null;\n  };\n  console.log(selectedContent)\n  return (<div className=\"publish-content-form-container m-1\">\n    {loading ? (\n      <Loader overlay fullScreen text=\"Unlocking Wallet...\" />\n    ) : null}\n    <DialogNav  drawerVisible={false}  pageTitle=\"CREATE POST\" />\n    <form className=\"publish-content-form\" onSubmit={onSubmit} onReset={onDiscard}>\n      <div style={{display:'flex',justifyContent:'space-between',marginBottom:\"1rem\"}}>\n        <div\n          className=\"profile-avatar\"\n          style={{ backgroundImage: `url(${avatar})` }}\n        />\n        <div>\n          <h2>Say Something</h2>\n          <div className=\"line\"></div>\n        </div>\n        <div  style={{width:\"122px\"}}></div>\n      </div>\n      <textarea className=\"input-field\" name={'paragraph'} value={paragraph} onChange={onInputChange} placeholder=\"What's up?\" rows={4}>\n      </textarea>\n      <div style={{marginLeft:'auto',display:\"flex\",alignItems:'center'}}>\n        <strong >Audience: <i className={`fas ${postType === 'public' ? \"fa-globe-europe\" : \"fa-credit-card\"}`}></i></strong>\n        <select name=\"postType\" id=\"postType\" onChange={onInputChange} style={{appearance:'none',backgroundColor:\"rgba(0,0,0,0)\",color:'var(--main-blue)', marginLeft:\"0.3rem\"}}>\n          <option value=\"public\" style={{backgroundColor:\"rgba(0,0,0,0)\",color:'var(--main-blue)'}}>Public</option>\n          <option value=\"private\">Paywall</option>\n        </select>\n      </div>\n      <div style={{display:'flex',alignItems:'center', overflow: 'auto',whiteSpace: 'nowrap'}}>\n      {Object.entries(publishedContent).map(parseContent)}\n      </div>\n      {error ? <p className=\"error-container\">{error}</p> : null}\n      <div className='flex-center'>\n      <input type=\"reset\" value=\"reset\" className='shock-form-button m-1'/>\n      <input type=\"submit\" value=\"submit\" className='shock-form-button-confirm m-1' />\n      </div>\n    </form>\n  </div>)\n};\n\nexport default PublishContentPage;\n"],"sourceRoot":""}