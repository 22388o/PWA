{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/BottomBar/index.js","common/AddBtn/index.js","common/Line/index.tsx","common/ProfileDivider/index.tsx","common/ProfileDivider/css/ProfileDivider.module.css","images/clipboard.svg","images/qrcode.svg","common/ContentHostInput/components/ContentHostInputView.module.css","common/ContentHostInput/components/Host.module.css","common/ContentHostInput/components/Host.tsx","common/ContentHostInput/components/ContentHostInputView.tsx","common/ContentHostInput/index.ts","common/ContentHostInput/ContentHostInput.tsx","pages/Profile/index.tsx"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","BottomBar","to","activeClassName","AddBtn","label","icon","iconURL","undefined","nestedMode","large","small","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","Line","color","length","type","width","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","ProfileDivider","onChange","selected","gStyles","styles","container","unselected","module","exports","Host","hostError","error","isBeingAddedOrDeleted","isDefault","onClickRemove","onClickWarning","price","publicKey","URI","user","Store","isConfirmingRemoval","setIsConfirmingRemoval","toggleConfirmingRemoval","confirming","handleClickOnWarning","handleRemovalConfirmation","malformedHost","JSON","stringify","pill","ShockAvatar","toLowerCase","displayName","Common","fontSize","yellow","blue","BUTTON_HOLDER_CLASS_NAME","ContentHostInputView","unorderedHosts","hosts","onAddHost","onRemoveHost","onRetryHost","publicKeyOrServerURI","URIHostAwaitingForToken","setPublicKeyOrServerURIData","hostForErrorDialog","setHostForErrorDialog","open","setOpen","input","useRef","isPasting","setIsPasting","token","setToken","tokenInput","isPastingToken","setIsPastingToken","sortedHosts","slice","sort","a","b","dateAdded","defaultHosts","filter","h","nonDefaultHosts","handleFocus","onClickPaste","navigator","clipboard","readText","then","txt","produce","data","catch","e","alert","message","finally","current","focus","document","execCommand","blur","onClickAdd","url","Utils","handleTokenPaste","handleTokenAdd","handleHostRemoval","publicKeyOrURI","closeErrorDialog","handleRemovalOfHostWithError","handleHostRetry","target","value","onKeyUp","key","keyCode","autoCapitalize","autoCorrect","placeholder","ref","onFocus","disabled","map","host","find","ContentHostInput","dispatch","useDispatch","seedProviderPub","content","userProfiles","seedInfo","seedUrl","seedToken","setHosts","providerProfile","setProviderProfile","providedService","setProvidedService","priceToUpdate","setPriceToUpdate","providerError","setProviderError","useEffect","provProfile","avatar","SeedServiceProvided","toSet","push","Date","now","Http","get","service","servicePrice","tmpHosts","providerIndex","findIndex","err","addHost","startsWith","setSeedInfo","setSeedProviderPub","removeHost","subscribeUserProfile","filteredHosts","Post","React","lazy","SharedPost","AVAILABLE_WEB_CLIENT_PREFIXES","ProfilePage","profileModalOpen","setProfileModalOpen","deletePostModalData","setDeletePostModalData","posts","feed","node","hostIP","myServices","orders","selectedView","setSelectedView","useSelector","myPosts","alpha","isSharedPost","shareDate","date","subscription","subscribeMyServices","rifleCleanup","postSubscription","subscribeUserPosts","sharedPostSubscription","subscribeSharedUserPosts","profileConfigModalOpen","setProfileConfigModalOpen","currWebClientPrefix","webClientPrefix","newWebClientPrefix","setNewWebClientPrefix","copyWebClientUrlToClipboard","writeText","placeholderEl","querySelector","display","select","subscribeClientPrefix","console","debug","socket","rifle","query","onData","webClientPrefixReceived","setWebclientPrefix","onError","errorMessage","handleViewChange","view","somethingInsideConfigModalChanged","toggleConfigModal","onConfigCancel","onConfigSubmit","post","path","headerImageFileInput","settingHeader","setSettingHeader","onSelectedHeaderFile","preventDefault","files","file","imageObtained","base64","onPressHeader","click","toggleDeleteModal","deleteData","log","closeDeleteModal","deletePost","id","shared","deleteUserPost","authorId","copyClipboard","text","dnModalOpen","setDnModalOpen","newDisplayName","setNewDisplayName","newDnIfBeingSaved","setNewDnIfBeingSaved","saveNewDisplayName","toBeSaved","put","toggleDnModal","handleOkDnChange","dnModalStyle","padding","bio","bioModalOpen","setBioModalOpen","newBio","setNewBio","newBioIfBeingSaved","setNewBioIfBeingSaved","saveNewBio","toggleBioModal","handleOkBioChange","bioModalStyle","header","setsAvatar","greyBorder","disableOnlineRing","c","backgroundColor","flexDirection","justifyContent","alignItems","borderRadius","fontWeight","index","originalPost","streamContentId","streamItem","item","Object","entries","contentItems","liveStatus","playbackMagnet","magnetURI","sharerProfile","sharerId","originalPublicKey","originalAuthor","originalProfile","fallback","Loader","originalPostProfile","sharedTimestamp","postPublicKey","openTipModal","openUnlockModal","openDeleteModal","openShareModal","profile","timestamp","username","processDisplayName","tipCounter","tipValue","serviceType","serviceTitle","serviceDescription","serviceCondition","deleteService","Pad","amt","bgColor","fgColor","size","readOnly","ClipboardIcon","htmlFor","name","prefix","marginTop","QRCodeIcon","hidden","accept"],"mappings":"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","file":"static/js/17.215e0fdb.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      <div className=\"head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"open\": modalOpen })}>\n      <div className=\"backdrop\" onClick={closeModal} />\n      <div className=\"container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","import classNames from \"classnames\";\n\nimport * as gStyles from \"../../styles\";\nimport Line from \"../Line\";\n\nimport styles from \"./css/ProfileDivider.module.css\";\n\nexport interface ProfileDividerProps {\n  onChange(newlySelected: \"posts\" | \"services\"): void;\n  selected: \"posts\" | \"services\";\n}\n\nconst ProfileDivider = ({ onChange, selected }: ProfileDividerProps) => {\n  return (\n    <div\n      className={classNames(\n        gStyles.width100,\n        gStyles.rowCentered,\n        gStyles.spaceAround,\n        gStyles.padding12,\n        styles.container\n      )}\n    >\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"posts\" && styles.selected,\n          selected === \"services\" && styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"posts\");\n        }}\n      >\n        Posts\n      </span>\n\n      <div className={gStyles.absolute /* centers it, keeps texts in place */}>\n        <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n      </div>\n\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"services\" && styles.selected,\n          selected === \"posts\" && styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"services\");\n        }}\n      >\n        Services\n      </span>\n    </div>\n  );\n};\n\nexport default ProfileDivider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileDivider_container__3ob9k\",\"selected\":\"ProfileDivider_selected__3U98y\",\"unselected\":\"ProfileDivider_unselected__1Z_qd\",\"divider\":\"ProfileDivider_divider__1IzYV\"};","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentHostInputView_container__1CVAn\",\"uri-or-token-input\":\"ContentHostInputView_uri-or-token-input__3vg5h\",\"plus-or-paste-btn\":\"ContentHostInputView_plus-or-paste-btn__3z_k0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container-base\":\"Host_container-base__r5EJP\",\"remove-or-cancel\":\"Host_remove-or-cancel__2sHhe Host_container-base__r5EJP\",\"container\":\"Host_container__2hPww Host_container-base__r5EJP\",\"pill\":\"Host_pill__1WzlY\",\"display-name-or-uri\":\"Host_display-name-or-uri__2eaUy\",\"price-and-status\":\"Host_price-and-status__3Q4n3\",\"price\":\"Host_price__2oEgL\",\"red\":\"Host_red__1kS00\",\"yellow\":\"Host_yellow__3DLEG\",\"blue\":\"Host_blue__3m2Kb\"};","import { useCallback, useState } from \"react\";\nimport * as Common from \"shock-common\";\nimport classNames from \"classnames\";\n\nimport ShockAvatar from \"../../ShockAvatar\";\nimport * as gStyles from \"../../../styles\";\nimport * as Store from \"../../../store\";\n\nimport styles from \"./Host.module.css\";\n\nexport interface IHost {\n  /**\n   * Can be empty if publicKey is provided.\n   */\n  URI: string | null;\n  /**\n   * Unix timestamp.\n   */\n  dateAdded: number;\n  /**\n   * An empty string means no error. If there's an error adding the host,\n   * instead of making it disappear, have it show up with a warning the user can\n   * interact with, after the user clicks on it the actual error message will\n   * show up in a dialog.\n   */\n  error: string;\n  /**\n   * The host will be rendered with an indication that it is being added as\n   * opposed to being added already.\n   */\n  isBeingAddedOrDeleted: boolean;\n  /**\n   * Will render a check mark.\n   */\n  isDefault: boolean;\n  /**\n   * In sats.\n   */\n  price: number;\n  /**\n   * Can be empty if URI is provided.\n   */\n  publicKey: string | null;\n  /**\n   * Token for the service.\n   */\n  token: string;\n}\n\nexport interface HostProps extends IHost {\n  onClickRemove(publicKeyOrURI: string): void;\n  /**\n   * Called when clicking on the warning icon on a host with an error set.\n   */\n  onClickWarning(publicKeyOrURI: string): void;\n}\n\nconst Host = ({\n  error: hostError,\n  isBeingAddedOrDeleted,\n  isDefault,\n  onClickRemove,\n  onClickWarning,\n  price,\n  publicKey,\n  URI\n}: HostProps) => {\n  const user = Store.useSelector(Store.selectUser(publicKey));\n  const [isConfirmingRemoval, setIsConfirmingRemoval] = useState<boolean>(\n    false\n  );\n  const toggleConfirmingRemoval = useCallback(() => {\n    setIsConfirmingRemoval(confirming => !confirming);\n  }, []);\n\n  const handleClickOnWarning = useCallback(() => {\n    onClickWarning(publicKey || URI);\n  }, [onClickWarning, publicKey, URI]);\n\n  const handleRemovalConfirmation = useCallback(() => {\n    onClickRemove(publicKey || URI);\n  }, [onClickRemove, publicKey, URI]);\n\n  const malformedHost =\n    (hostError && isBeingAddedOrDeleted) ||\n    (publicKey && URI) ||\n    (!publicKey && !URI);\n\n  let error = hostError;\n\n  if (malformedHost) {\n    error = `Malformed host provided to <Host />, it must have either a public key or an URI (though not both), and it must not have both truthy error and isAdding props at the same time: ${JSON.stringify(\n      malformedHost\n    )}`;\n  }\n\n  if (isConfirmingRemoval) {\n    return (\n      <div\n        className={classNames(\n          gStyles.rowCentered,\n          gStyles.centerJustify,\n          gStyles.width100\n        )}\n      >\n        <button\n          onClick={handleRemovalConfirmation}\n          className={classNames(gStyles.flatBtnFullWidth)}\n        >\n          Remove\n        </button>\n\n        <button\n          onClick={toggleConfirmingRemoval}\n          className={classNames(gStyles.flatBtnFullWidth)}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classNames(\n        gStyles.rowCentered,\n        gStyles.spaceBetween,\n        gStyles.childrenSpaced24,\n        styles.container\n      )}\n    >\n      <div\n        className={classNames(\n          gStyles.rowCentered,\n          gStyles.spaceBetween,\n          gStyles.childrenSpaced8,\n          styles.pill\n        )}\n      >\n        {publicKey ? (\n          <ShockAvatar height={24} publicKey={publicKey} />\n        ) : (\n          <i className={classNames(\"fas fa-globe\")}></i>\n        )}\n\n        <span className={styles[\"display-name-or-uri\"]}>\n          {(URI && URI.toLowerCase()) ||\n            user.displayName ||\n            Common.defaultName(publicKey)}\n        </span>\n\n        {isBeingAddedOrDeleted || error ? (\n          <div />\n        ) : (\n          <span\n            className=\"fas fa-times\"\n            onClick={toggleConfirmingRemoval}\n            style={{\n              fontSize: 12\n            }}\n          />\n        )}\n      </div>\n\n      <div\n        className={classNames(\n          gStyles.flex,\n          gStyles.childrenSpaced24,\n          styles[\"price-and-status\"]\n        )}\n      >\n        <span className={classNames(gStyles.flex, styles.price)}>\n          {price} sats\n        </span>\n\n        {(() => {\n          if (error) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-exclamation-triangle\",\n                  gStyles.fontSize12,\n                  styles.yellow\n                )}\n                onClick={handleClickOnWarning}\n              />\n            );\n          }\n\n          if (isBeingAddedOrDeleted) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-hourglass-half\",\n                  gStyles.fontSize12,\n                  styles.yellow\n                )}\n              />\n            );\n          }\n\n          if (isDefault) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-check\",\n                  gStyles.fontSize12,\n                  styles.blue\n                )}\n              />\n            );\n          }\n\n          return (\n            <i\n              className={classNames(\n                \"fas fa-link\",\n                gStyles.fontSize12,\n                styles.blue\n              )}\n            ></i>\n          );\n        })()}\n      </div>\n    </div>\n  );\n};\n\nexport default Host;\n","import { useCallback, useMemo, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport produce from \"immer\";\n\nimport * as gStyles from \"../../../styles\";\nimport Modal from \"../../Modal\";\nimport * as Utils from \"../../../utils\";\n\nimport styles from \"./ContentHostInputView.module.css\";\nimport Host, { IHost as _IHost } from \"./Host\";\n\nexport type IHost = _IHost;\n\nexport interface ContentHostInputViewProps {\n  hosts: IHost[];\n  /**\n   * A token will be provided if the content host being added is a URI, the\n   * token will be required from the user before calling this callback.\n   */\n  onAddHost(publicKeyOrServerURI: string, token?: string): void;\n  onRemoveHost(publicKeyOrServerURI: string): void;\n  /**\n   * If a host has an error set, the user will be offered to retry adding it.\n   */\n  onRetryHost(publicKeyOrServerURI: string): void;\n}\n\nconst ContentHostInputView = ({\n  hosts: unorderedHosts,\n  onAddHost,\n  onRemoveHost,\n  onRetryHost\n}: ContentHostInputViewProps) => {\n  type PublicKeyOrServerURIData = {\n    publicKeyOrServerURI: string;\n    URIHostAwaitingForToken: string;\n  };\n  const [\n    { publicKeyOrServerURI, URIHostAwaitingForToken },\n    setPublicKeyOrServerURIData\n  ] = useState<PublicKeyOrServerURIData>({\n    publicKeyOrServerURI: \"\",\n    URIHostAwaitingForToken: \"\"\n  });\n  const [hostForErrorDialog, setHostForErrorDialog] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const input = useRef<HTMLInputElement>(null);\n  const [isPasting, setIsPasting] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const tokenInput = useRef<HTMLInputElement>(null);\n  const [isPastingToken, setIsPastingToken] = useState(false);\n\n  const sortedHosts = useMemo(\n    () =>\n      unorderedHosts.slice().sort((a, b) => {\n        return b.dateAdded - a.dateAdded;\n      }),\n    [unorderedHosts]\n  );\n\n  const defaultHosts = useMemo(() => sortedHosts.filter(h => h.isDefault), [\n    sortedHosts\n  ]);\n\n  const nonDefaultHosts = useMemo(() => sortedHosts.filter(h => !h.isDefault), [\n    sortedHosts\n  ]);\n\n  const hosts = useMemo(() => [...defaultHosts, ...nonDefaultHosts], [\n    defaultHosts,\n    nonDefaultHosts\n  ]);\n\n  const handleFocus = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const onClickPaste = useCallback(() => {\n    if (isPasting) {\n      return;\n    }\n\n    if (navigator.clipboard) {\n      setIsPasting(true);\n      navigator.clipboard\n        .readText()\n        .then(txt => {\n          setPublicKeyOrServerURIData(\n            produce((data: PublicKeyOrServerURIData) => {\n              data.publicKeyOrServerURI = txt;\n            })\n          );\n        })\n        .catch(e => {\n          alert(`Could not paste: ${e.message}`);\n        })\n        .finally(() => {\n          setIsPasting(false);\n        });\n    } else {\n      if (input.current) {\n        input.current.focus();\n        document.execCommand(\"paste\");\n        input.current.blur();\n      }\n    }\n  }, [isPasting, setIsPasting]);\n\n  const onClickAdd = useCallback(() => {\n    setPublicKeyOrServerURIData(\n      produce((data: PublicKeyOrServerURIData) => {\n        const url = Utils.normalizeURL(data.publicKeyOrServerURI);\n\n        if (url) {\n          data.publicKeyOrServerURI = url;\n          data.URIHostAwaitingForToken = url;\n        }\n      })\n    );\n\n    const url = Utils.normalizeURL(publicKeyOrServerURI);\n\n    if (!url) {\n      onAddHost(publicKeyOrServerURI);\n    }\n  }, [setPublicKeyOrServerURIData, publicKeyOrServerURI, onAddHost]);\n\n  const handleTokenPaste = useCallback(() => {\n    if (isPastingToken) {\n      return;\n    }\n\n    if (navigator.clipboard) {\n      setIsPastingToken(true);\n      navigator.clipboard\n        .readText()\n        .then(txt => {\n          setToken(txt);\n        })\n        .catch(e => {\n          alert(`Could not paste: ${e.message}`);\n        })\n        .finally(() => {\n          setIsPastingToken(false);\n        });\n    } else {\n      if (tokenInput.current) {\n        tokenInput.current.focus();\n        document.execCommand(\"paste\");\n        tokenInput.current.blur();\n      }\n    }\n  }, [isPastingToken, setIsPastingToken, setToken]);\n\n  const handleTokenAdd = useCallback(() => {\n    setPublicKeyOrServerURIData(\n      produce((data: PublicKeyOrServerURIData) => {\n        data.publicKeyOrServerURI = \"\";\n        data.URIHostAwaitingForToken = \"\";\n      })\n    );\n\n    onAddHost(publicKeyOrServerURI, token);\n  }, [setPublicKeyOrServerURIData, onAddHost, publicKeyOrServerURI, token]);\n\n  const handleHostRemoval = useCallback(\n    (publicKeyOrURI: string) => {\n      onRemoveHost(publicKeyOrURI);\n    },\n    [onRemoveHost]\n  );\n\n  const closeErrorDialog = useCallback(() => {\n    setHostForErrorDialog(\"\");\n  }, [setHostForErrorDialog]);\n\n  const handleRemovalOfHostWithError = useCallback(() => {\n    onRemoveHost(hostForErrorDialog);\n    closeErrorDialog();\n  }, [onRemoveHost, hostForErrorDialog, closeErrorDialog]);\n\n  const handleHostRetry = useCallback(() => {\n    onRetryHost(hostForErrorDialog);\n    setHostForErrorDialog(\"\");\n  }, [onRetryHost, hostForErrorDialog, setHostForErrorDialog]);\n\n  return (\n    <>\n      <div\n        className={classNames(gStyles.col, gStyles.width100, styles.container)}\n      >\n        <div className={(gStyles.row, gStyles.centerJustify)}>\n          {/* https://stackoverflow.com/a/15314433 */}\n          <input\n            className={classNames(\"input-field\", styles[\"uri-or-token-input\"])}\n            onChange={e => {\n              setPublicKeyOrServerURIData(\n                produce((data: PublicKeyOrServerURIData) => {\n                  data.publicKeyOrServerURI = e.target.value;\n                  data.URIHostAwaitingForToken = \"\";\n                })\n              );\n\n              setToken(\"\");\n            }}\n            type=\"text\"\n            value={publicKeyOrServerURI}\n            onKeyUp={e => {\n              if (e.key === \"Enter\" || e.keyCode === 13) {\n                onClickAdd();\n              }\n            }}\n            autoCapitalize=\"off\"\n            autoCorrect=\"none\"\n            placeholder=\"Provider Pubkey or Server URI (include https or http)\"\n            ref={input}\n            onFocus={handleFocus}\n          />\n\n          {publicKeyOrServerURI.length === 0 && (\n            <button\n              className={classNames(\n                gStyles.flatBtn,\n                styles[\"plus-or-paste-btn\"]\n              )}\n              disabled={isPasting}\n              onClick={onClickPaste}\n            >\n              <i className=\"fas fa-paste\"></i>\n            </button>\n          )}\n\n          {publicKeyOrServerURI.length > 0 &&\n            publicKeyOrServerURI !== URIHostAwaitingForToken && (\n              <button\n                className={classNames(\n                  gStyles.flatBtn,\n                  styles[\"plus-or-paste-btn\"]\n                )}\n                disabled={publicKeyOrServerURI.length === 0}\n                onClick={onClickAdd}\n              >\n                +\n              </button>\n            )}\n        </div>\n\n        {publicKeyOrServerURI.length > 0 &&\n          publicKeyOrServerURI === URIHostAwaitingForToken && (\n            <div className={(gStyles.row, gStyles.centerJustify)}>\n              <input\n                className={classNames(\n                  \"input-field\",\n                  styles[\"uri-or-token-input\"]\n                )}\n                onChange={e => {\n                  setToken(e.target.value);\n                }}\n                type=\"text\"\n                value={token}\n                onKeyUp={e => {\n                  if (e.key === \"Enter\" || e.keyCode === 13) {\n                    handleTokenAdd();\n                  }\n                }}\n                autoCapitalize=\"off\"\n                autoCorrect=\"none\"\n                placeholder=\"Token (required)\"\n                ref={tokenInput}\n              />\n\n              {token.length === 0 && (\n                <button\n                  className={classNames(\n                    gStyles.flatBtn,\n                    styles[\"plus-or-paste-btn\"]\n                  )}\n                  disabled={isPastingToken}\n                  onClick={handleTokenPaste}\n                >\n                  <i className=\"fas fa-paste\"></i>\n                </button>\n              )}\n\n              {token.length > 0 && (\n                <button\n                  className={classNames(\n                    gStyles.flatBtn,\n                    styles[\"plus-or-paste-btn\"]\n                  )}\n                  disabled={token.length === 0}\n                  onClick={handleTokenAdd}\n                >\n                  +\n                </button>\n              )}\n            </div>\n          )}\n\n        <div className={classNames(gStyles.col)}>\n          {(open ? hosts : defaultHosts).map(host => (\n            <Host\n              URI={host.URI}\n              dateAdded={0}\n              error={host.error}\n              isBeingAddedOrDeleted={host.isBeingAddedOrDeleted}\n              isDefault={host.isDefault}\n              key={host.publicKey || host.URI}\n              onClickRemove={handleHostRemoval}\n              onClickWarning={setHostForErrorDialog}\n              price={host.price}\n              publicKey={host.publicKey}\n              token={host.token}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* TODO: change to global modal */}\n      <Modal\n        modalOpen={!!hostForErrorDialog}\n        modalTitle={\n          hosts.find(\n            h =>\n              h.publicKey === hostForErrorDialog || h.URI === hostForErrorDialog\n          )?.error\n        }\n        toggleModal={closeErrorDialog}\n      >\n        <div className={BUTTON_HOLDER_CLASS_NAME}>\n          <button\n            onClick={handleRemovalOfHostWithError}\n            className=\"shock-form-button m-1\"\n          >\n            REMOVE\n          </button>\n\n          <button\n            onClick={handleHostRetry}\n            className=\"shock-form-button-confirm m-1\"\n          >\n            RETRY\n          </button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nconst BUTTON_HOLDER_CLASS_NAME = classNames(\n  gStyles.rowCentered,\n  gStyles.width100,\n  gStyles.centerJustify,\n  gStyles.childrenSpaced16,\n  gStyles.padding12\n);\n\nexport default ContentHostInputView;\n","import ContentHostInput from \"./ContentHostInput\";\n\nexport default ContentHostInput;\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as Store from \"../../store\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\n\nimport ContentHostInputView, { IHost } from \"./components/ContentHostInputView\";\nimport { Http } from \"../../utils\";\nimport { setSeedInfo, setSeedProviderPub } from \"../../actions/ContentActions\";\nimport * as Utils from \"../../utils\";\n\nconst ContentHostInput = () => {\n  const dispatch = useDispatch();\n  const seedProviderPub = Store.useSelector(\n    ({ content }) => content.seedProviderPub\n  );\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const { seedUrl, seedToken } = Store.useSelector(\n    ({ content }) => content.seedInfo\n  );\n  const [hosts, setHosts] = useState<IHost[]>([]);\n  const [providerProfile, setProviderProfile] = useState(null);\n  const [providedService, setProvidedService] = useState(\"\");\n  const [priceToUpdate, setPriceToUpdate] = useState(0);\n  const [providerError, setProviderError] = useState(\"\");\n  //effect for user profile\n  useEffect(() => {\n    const provProfile = userProfiles[seedProviderPub];\n    if (!provProfile) {\n      setProviderProfile(null);\n      return;\n    }\n    if (!providerProfile) {\n      setProviderProfile(provProfile);\n      return;\n    }\n    if (provProfile.avatar !== providerProfile.avatar) {\n      setProviderProfile(provProfile);\n      return;\n    }\n    if (\n      // @ts-expect-error\n      provProfile.SeedServiceProvided !== providerProfile.SeedServiceProvided\n    ) {\n      setProviderProfile(provProfile);\n      return;\n    }\n  }, [userProfiles, seedProviderPub, providerProfile, setProviderProfile]);\n  //effect to check provided service\n  useEffect(() => {\n    if (!providerProfile) {\n      return;\n    }\n    const { SeedServiceProvided } = providerProfile;\n    if (SeedServiceProvided !== providedService) {\n      setProvidedService(SeedServiceProvided);\n    }\n  }, [providerProfile, providedService, setProvidedService]);\n  //effect to populate the hosts\n  useEffect(() => {\n    let toSet: IHost[] = [];\n    if (seedUrl && seedToken) {\n      toSet.push({\n        URI: seedUrl,\n        token: seedToken,\n        price: 0,\n        isBeingAddedOrDeleted: false,\n        dateAdded: Date.now(),\n        isDefault: true,\n        error: null,\n        publicKey: null\n      });\n    }\n    if (seedProviderPub && providerProfile) {\n      toSet.push({\n        dateAdded: Date.now(),\n        isBeingAddedOrDeleted: true,\n        isDefault: true,\n        publicKey: seedProviderPub,\n        price: 0,\n        URI: null,\n        token: null,\n        error: null\n      });\n    }\n    setHosts(toSet);\n  }, [seedUrl, seedToken, seedProviderPub, providerProfile, setHosts]);\n  //effect to fetch provided service\n  useEffect(() => {\n    if (!providedService) {\n      return;\n    }\n    Http.get(\n      `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${providedService}`\n    )\n      .then(({ data }) => {\n        const { data: service } = data;\n        setPriceToUpdate(service.servicePrice);\n      })\n      .catch(e => {\n        setProviderError(e);\n      });\n  }, [providedService, seedProviderPub, setPriceToUpdate, setProviderError]);\n  //effect to update service\n  useEffect(() => {\n    const tmpHosts = [...hosts];\n    const providerIndex = tmpHosts.findIndex(host => !host.URI);\n    if (\n      providerIndex === -1 ||\n      tmpHosts[providerIndex].price === priceToUpdate\n    ) {\n      return;\n    }\n    tmpHosts[providerIndex].isBeingAddedOrDeleted = false;\n    tmpHosts[providerIndex].price = priceToUpdate;\n    setHosts(tmpHosts);\n  }, [priceToUpdate, setPriceToUpdate, hosts, setHosts]);\n  //effect to update error\n  useEffect(() => {\n    //@ts-expect-error\n    const err = providerError.message || providerError;\n    const tmpHosts = [...hosts];\n    const providerIndex = tmpHosts.findIndex(host => !host.URI);\n    if (providerIndex === -1 || err === tmpHosts[providerIndex].error) {\n      return;\n    }\n    tmpHosts[providerIndex].isBeingAddedOrDeleted = false;\n    tmpHosts[providerIndex].error = err;\n    setHosts(tmpHosts);\n  }, [providerError, setProviderError, hosts, setHosts]);\n\n  const addHost = useCallback(\n    (publicKeyOrURI: string, token?: string) => {\n      try {\n        if (publicKeyOrURI.startsWith(\"http\")) {\n          setSeedInfo(publicKeyOrURI, token!)(dispatch);\n        } else {\n          setSeedProviderPub(publicKeyOrURI)(dispatch);\n        }\n      } catch (e) {\n        alert(`Could not add host: ${e.message}`);\n        Utils.logger.error(\"Could not add host: \", e);\n      }\n    },\n    [dispatch]\n  );\n\n  const removeHost = useCallback(\n    (publicKeyOrURI: string) => {\n      try {\n        if (publicKeyOrURI.startsWith(\"http\")) {\n          setSeedInfo(\"\", \"\")(dispatch);\n        } else {\n          setSeedProviderPub(\"\")(dispatch);\n        }\n      } catch (e) {\n        alert(`Could not remove host: ${e.message}`);\n        Utils.logger.error(\"Could not remove host: \", e);\n      }\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    const unsubscribe = (dispatch(\n      subscribeUserProfile(seedProviderPub)\n    ) as unknown) as () => void;\n\n    return unsubscribe;\n  }, [seedProviderPub, dispatch]);\n  const filteredHosts = useMemo(() => {\n    return hosts.filter(h => h);\n  }, [hosts]);\n  return (\n    <ContentHostInputView\n      hosts={filteredHosts}\n      onAddHost={addHost}\n      onRemoveHost={removeHost}\n      onRetryHost={() => {}}\n    />\n  );\n};\n\nexport default ContentHostInput;\n","import React, {\n  Suspense,\n  useCallback,\n  useMemo,\n  useState,\n  useEffect,\n  useRef,\n  InputHTMLAttributes\n} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport QRCode from \"qrcode.react\";\nimport { Link } from \"react-router-dom\";\nimport c from \"classnames\";\nimport * as Common from \"shock-common\";\n\nimport { processDisplayName } from \"../../utils/String\";\n\nimport * as Utils from \"../../utils\";\nimport {\n  deleteService,\n  subscribeMyServices\n} from \"../../actions/OrdersActions\";\nimport * as gStyles from \"../../styles\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ContentHostInput from \"../../common/ContentHostInput\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport * as Store from \"../../store\";\nimport { rifle, rifleCleanup } from \"../../utils/WebSocket\";\n\nimport \"./css/index.scoped.css\";\nimport {\n  deleteUserPost,\n  subscribeSharedUserPosts,\n  subscribeUserPosts\n} from \"../../actions/FeedActions\";\nimport { isSharedPost } from \"../../schema\";\nimport { setWebclientPrefix } from \"../../actions/NodeActions\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nexport type WebClientPrefix =\n  | \"https://shock.page\"\n  | \"https://shock.pub\"\n  | \"https://lightning.page\"\n  | \"https://satoshi.watch\";\n\nconst ProfilePage = () => {\n  const dispatch = useDispatch();\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n  const [deletePostModalData, setDeletePostModalData] = useState(null);\n\n  const posts = Store.useSelector(({ feed }) => feed.posts);\n  const publicKey = Store.useSelector(({ node }) => node.publicKey);\n  const hostIP = Store.useSelector(({ node }) => node.hostIP);\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n\n  const myServices = Store.useSelector(({ orders }) => orders.myServices);\n  const [selectedView, setSelectedView] = useState<\"posts\" | \"services\">(\n    \"posts\"\n  );\n  const user = useSelector(Store.selectSelfUser);\n  const myPosts = useMemo(() => {\n    if (posts && posts[publicKey]) {\n      const myP = posts[publicKey].sort((a, b) => {\n        const alpha = isSharedPost(a) ? a.shareDate : a.date;\n        const beta = isSharedPost(b) ? b.shareDate : b.date;\n\n        return beta - alpha;\n      });\n      return myP;\n    }\n    return [];\n  }, [posts, publicKey]);\n\n  useEffect(() => {\n    const subscription = subscribeMyServices()(dispatch);\n\n    return rifleCleanup(subscription);\n  }, [dispatch]);\n\n  useEffect(() => {\n    const postSubscription = dispatch(subscribeUserPosts(publicKey));\n    const sharedPostSubscription = dispatch(\n      subscribeSharedUserPosts(publicKey)\n    );\n\n    return rifleCleanup(postSubscription, sharedPostSubscription);\n  }, [dispatch, publicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  // ------------------------------------------------------------------------ //\n  // CONFIG MODAL\n\n  const [profileConfigModalOpen, setProfileConfigModalOpen] = useState(false);\n  const currWebClientPrefix = Store.useSelector(\n    ({ node }) => node.webClientPrefix\n  );\n  const [newWebClientPrefix, setNewWebClientPrefix] = useState<WebClientPrefix>(\n    currWebClientPrefix\n  );\n\n  const copyWebClientUrlToClipboard = useCallback(() => {\n    // some browsers/platforms don't support navigator.clipboard\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(newWebClientPrefix + \"/\" + publicKey);\n    } else {\n      const placeholderEl = document.querySelector(\n        \"#web-client-url-holder\"\n      ) as HTMLInputElement;\n      placeholderEl.style.display = \"block\";\n      placeholderEl.select();\n      document.execCommand(\"copy\");\n      placeholderEl.blur();\n      placeholderEl.style.display = \"none\";\n    }\n  }, [newWebClientPrefix, publicKey]);\n\n  const subscribeClientPrefix = useCallback(() => {\n    // Extraneous logs but helps us not having eslint complain about these\n    // \"unnecessary\" dependencies below without disabling the\n    console.debug(\n      `Subbing to webclient prefix on hostIP --| ${hostIP} |-- and public key --| ${publicKey} |--`\n    );\n    const query = `$user::Profile>webClientPrefix::on`;\n\n    const socket = rifle({\n      query,\n      onData: (webClientPrefixReceived: unknown) => {\n        if (\n          typeof webClientPrefixReceived === \"string\" &&\n          webClientPrefixReceived !== currWebClientPrefix\n        ) {\n          setWebclientPrefix(webClientPrefixReceived as WebClientPrefix)(\n            dispatch\n          );\n        }\n      },\n      onError: (errorMessage: string) => {\n        console.error(\n          `There was an error fetching web client prefix: ${errorMessage}`\n        );\n      }\n    });\n\n    return rifleCleanup(socket);\n  }, [hostIP, publicKey /* handles alias/hostIP switch */]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeClientPrefix();\n\n    return unsubscribe;\n  }, [subscribeClientPrefix]);\n\n  const handleViewChange = useCallback((view: \"posts\" | \"services\") => {\n    setSelectedView(view);\n  }, []);\n  //#region configModal ----------------------------------------------------- //\n  const somethingInsideConfigModalChanged =\n    newWebClientPrefix !== currWebClientPrefix;\n\n  const toggleConfigModal = useCallback(() => {\n    setProfileConfigModalOpen(open => !open);\n    setNewWebClientPrefix(currWebClientPrefix);\n  }, [currWebClientPrefix]);\n\n  const onConfigCancel = useCallback(() => {\n    toggleConfigModal();\n  }, [toggleConfigModal]);\n\n  const onConfigSubmit = useCallback(() => {\n    if (newWebClientPrefix !== currWebClientPrefix) {\n      setWebclientPrefix(newWebClientPrefix)(dispatch);\n      Utils.Http.post(`/api/gun/put`, {\n        path: \"$user>Profile>webClientPrefix\",\n        value: newWebClientPrefix\n      }).catch(e => {\n        alert(\n          `There was an error setting your web client prefix: ${e.message}`\n        );\n      });\n    }\n    toggleConfigModal();\n  }, [toggleConfigModal, newWebClientPrefix, currWebClientPrefix]);\n  //#endregion configModal -------------------------------------------------- //\n  //#region header ---------------------------------------------------------- //\n  const headerImageFileInput = useRef<HTMLInputElement>(null);\n  const [settingHeader, setSettingHeader] = useState<boolean>(false);\n\n  const onSelectedHeaderFile: InputHTMLAttributes<{}>[\"onChange\"] = async e => {\n    try {\n      e.preventDefault();\n      if (settingHeader) {\n        return;\n      }\n\n      setSettingHeader(true);\n\n      const { files } = (e.target as unknown) as {\n        files: readonly Utils.File[];\n      };\n\n      if (files.length === 0) {\n        return;\n      }\n\n      if (files.length !== 1) {\n        Utils.logger.error(`Profile -> files.length !== 1`);\n        alert(\n          `An error occurred while trying to set a header. This has been logged.`\n        );\n        return;\n      }\n\n      const [file] = files;\n\n      const imageObtained = await Utils.processImageFile(file, 320, 0.7);\n\n      const DATA_URL_TYPE_PREFIX = \"data:image/jpeg;base64,\";\n      const base64 = imageObtained.slice(DATA_URL_TYPE_PREFIX.length);\n\n      await Utils.Http.post(`/api/gun/put`, {\n        path: \"$user>profileBinary>header\",\n        value: base64\n      });\n    } catch (e) {\n      Utils.logger.error(`Error while trying to load new header.`);\n      Utils.logger.error(e);\n      alert(\n        \"There was an error loading the new header, this has error has been logged.\"\n      );\n    } finally {\n      setSettingHeader(false);\n    }\n  };\n\n  const onPressHeader = useCallback(e => {\n    e.preventDefault();\n    const { current } = headerImageFileInput;\n    if (!current) {\n      Utils.logger.error(\"File input element for avatar is falsy.\");\n      alert(\"There was an error and it was logged.\");\n    }\n    current.click();\n  }, []);\n  //#endregion header ------------------------------------------------------- //\n  //#region deleteModal------------------------------------------------------ //\n  const toggleDeleteModal = useCallback(\n    deleteData => {\n      console.log(deleteData);\n      if (deletePostModalData || !deleteData) {\n        setDeletePostModalData(null);\n      }\n      setDeletePostModalData(deleteData);\n    },\n    [deletePostModalData]\n  );\n  const closeDeleteModal = useCallback(() => {\n    setDeletePostModalData(null);\n  }, []);\n\n  const deletePost = useCallback(async () => {\n    try {\n      if (!deletePostModalData || !deletePostModalData.id) {\n        return;\n      }\n      console.log(\"deleting:\");\n      console.log(deletePostModalData);\n      const key = deletePostModalData.shared ? \"sharedPosts\" : \"posts\";\n      await Utils.Http.post(\"/api/gun/put\", {\n        path: `$user>${key}>${deletePostModalData.id}`,\n        value: null\n      });\n      dispatch(\n        deleteUserPost({\n          id: deletePostModalData.id,\n          authorId: publicKey\n        })\n      );\n      toggleDeleteModal(null);\n    } catch (e) {\n      console.log(`Error when deleting post:`);\n      console.log(e);\n      alert(`Could not delete post: ${e.message}`);\n    }\n  }, [deletePostModalData, dispatch, publicKey, toggleDeleteModal]);\n  const copyClipboard = useCallback(() => {\n    try {\n      // some browsers/platforms don't support navigator.clipboard\n      if (navigator.clipboard) {\n        const text = `${currWebClientPrefix}/${publicKey}`;\n        navigator.clipboard.writeText(text);\n      } else {\n        const placeholderEl = document.querySelector(\n          \"#public-key-holder\"\n        ) as HTMLInputElement;\n        placeholderEl.style.display = \"block\";\n        placeholderEl.select();\n        document.execCommand(\"copy\");\n        placeholderEl.blur();\n        placeholderEl.style.display = \"none\";\n        setProfileModalOpen(false);\n      }\n    } catch (e) {\n      alert(`Could not copy to clipboard: ${e.message}`);\n    }\n  }, [publicKey]);\n\n  const AVATAR_SIZE = 122;\n\n  const renderPosts = () => {\n    return myPosts.map((post, index) => {\n      if (post.type === \"shared\") {\n        if (!post.originalPost) {\n          return null;\n        }\n        const item = Object.entries(post.originalPost.contentItems).find(\n          ([_, item]) => item.type === \"stream/embedded\"\n        );\n        let streamContentId, streamItem;\n        if (item) {\n          [streamContentId, streamItem] = item;\n        }\n        if (streamItem) {\n          if (!streamItem.liveStatus) {\n            return;\n          }\n          if (streamItem.liveStatus === \"waiting\") {\n            return;\n          }\n          if (streamItem.liveStatus === \"wasLive\") {\n            if (!streamItem.playbackMagnet) {\n              return;\n            }\n            post.originalPost.contentItems[streamContentId].type =\n              \"video/embedded\";\n            //@ts-expect-error\n            post.originalPost.contentItems[streamContentId].magnetURI =\n              streamItem.playbackMagnet;\n          }\n        }\n        // TODO: ensure users reducer receives sharer profiles\n        const sharerProfile =\n          userProfiles[post.sharerId] || Common.createEmptyUser(post.sharerId);\n        const originalPublicKey = post.originalAuthor;\n        const originalProfile =\n          userProfiles[originalPublicKey] ||\n          Common.createEmptyUser(originalPublicKey);\n        return (\n          <Suspense\n            fallback={<Loader />}\n            key={post.sharerId + post.originalPost.id}\n          >\n            <SharedPost\n              originalPost={post.originalPost}\n              originalPostProfile={originalProfile}\n              sharedTimestamp={post.shareDate}\n              sharerProfile={sharerProfile}\n              postPublicKey={originalPublicKey}\n              openTipModal={() => {}}\n              openUnlockModal={() => {}}\n              openDeleteModal={toggleDeleteModal}\n              openShareModal={null}\n            />\n          </Suspense>\n        );\n      }\n      const item = Object.entries(post.contentItems).find(\n        ([_, item]) => item.type === \"stream/embedded\"\n      );\n      let streamContentId, streamItem;\n      if (item) {\n        [streamContentId, streamItem] = item;\n      }\n      if (streamItem) {\n        if (!streamItem.liveStatus) {\n          return;\n        }\n        if (streamItem.liveStatus === \"waiting\") {\n          return;\n        }\n        if (streamItem.liveStatus === \"wasLive\") {\n          if (!streamItem.playbackMagnet) {\n            return;\n          }\n          post.contentItems[streamContentId].type = \"video/embedded\";\n          //@ts-expect-error\n          post.contentItems[streamContentId].magnetURI =\n            streamItem.playbackMagnet;\n        }\n      }\n\n      const profile =\n        userProfiles[post.authorId] || Common.createEmptyUser(post.authorId);\n\n      return (\n        <Suspense fallback={<Loader />} key={post.id}>\n          <Post\n            id={post.id}\n            timestamp={post.date}\n            contentItems={post.contentItems}\n            username={processDisplayName(\n              profile?.publicKey,\n              profile?.displayName\n            )}\n            publicKey={post.authorId}\n            openTipModal={() => {}}\n            openUnlockModal={() => {}}\n            //@ts-expect-error\n            tipCounter={post.tipCounter || 0}\n            //@ts-expect-error\n            tipValue={post.tipValue || 0}\n            openDeleteModal={toggleDeleteModal}\n            openShareModal={null}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    console.log(myServices);\n    return Object.entries(myServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, serv]) => {\n        const service = serv as Record<string, string>;\n        const deleteCB = () => {\n          console.log(\"delete wtf\");\n          deleteService(id)(dispatch);\n        };\n        return (\n          <div className=\"post\" key={id}>\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            <p>{service.serviceType || \"\"}</p>\n            <strong>Service Title</strong>\n            <p>{service.serviceTitle || \"\"}</p>\n            <strong>Service Description</strong>\n            <p>{service.serviceDescription || \"\"}</p>\n            <strong>Service Condition</strong>\n            <p>{service.serviceCondition || \"\"}</p>\n            <strong>Service Price</strong>\n            <p>{service.servicePrice || \"\"}</p>\n            <button onClick={deleteCB}>DELETE SERVICE</button>\n          </div>\n        );\n      });\n  };\n  //#endregion deleteModal------------------------------------------------------ //\n  //#region displayName ----------------------------------------------------- //\n  const [dnModalOpen, setDnModalOpen] = useState(false);\n  const { displayName } = user;\n  // stores the display name input value\n  const [newDisplayName, setNewDisplayName] = useState(\n    user.displayName || \"Anon\"\n  );\n  // stores the new display name while it's being uploaded\n  const [newDnIfBeingSaved, setNewDnIfBeingSaved] = useState<string | null>(\n    null\n  );\n  const saveNewDisplayName = useCallback((toBeSaved: string) => {\n    if (toBeSaved === \"\") {\n      return;\n    }\n    setNewDnIfBeingSaved(toBeSaved); // optimistically render new display name\n    Utils.Http.put(\"/api/gun/me\", {\n      displayName: toBeSaved\n    }).catch(e => {\n      setNewDnIfBeingSaved(null); // reverts to existing display name\n      alert(`There was an error setting a new display name: ${e.message}`);\n    });\n  }, []);\n  useEffect(() => {\n    // set placeholder display name back to null after getting the round trip\n    // from api\n    if (newDnIfBeingSaved === displayName) {\n      console.debug(`Got display name round trip from api.`);\n      setNewDnIfBeingSaved(null);\n    }\n  }, [newDnIfBeingSaved, displayName]);\n  const toggleDnModal = useCallback(() => {\n    setNewDisplayName(displayName);\n    setDnModalOpen(open => !open);\n  }, [displayName]);\n  const handleOkDnChange = useCallback(() => {\n    if (newDisplayName !== displayName) {\n      saveNewDisplayName(newDisplayName);\n    }\n    toggleDnModal();\n  }, [displayName, newDisplayName, saveNewDisplayName, toggleDnModal]);\n  const dnModalStyle = useMemo<React.CSSProperties>(\n    () => ({\n      padding: \"12px 24px\"\n    }),\n    []\n  );\n  const handleNewDisplayNameChange = ({ target: { value } }) => {\n    setNewDisplayName(value);\n  };\n  //#endregion displayName -------------------------------------------------- //\n  //#region bio ------------------------------------------------------------- //\n  const { bio } = user;\n  const [bioModalOpen, setBioModalOpen] = useState(false);\n  // stores the bio input value\n  const [newBio, setNewBio] = useState(bio || \"bio\");\n  // stores the new bio while it's being uploaded\n  const [newBioIfBeingSaved, setNewBioIfBeingSaved] = useState<string | null>(\n    null\n  );\n  const saveNewBio = useCallback((toBeSaved: string) => {\n    if (toBeSaved === \"\") {\n      return;\n    }\n    setNewBioIfBeingSaved(toBeSaved); // optimistically render new bio\n    Utils.Http.put(\"/api/gun/me\", {\n      bio: toBeSaved\n    }).catch(e => {\n      setNewBioIfBeingSaved(null); // reverts to existing bio\n      alert(`There was an error setting a new bio: ${e.message}`);\n    });\n  }, []);\n  useEffect(() => {\n    // set placeholder bio back to null after getting the round trip\n    // from api\n    if (newBioIfBeingSaved === bio) {\n      console.debug(`Got bio round trip from api.`);\n      setNewBioIfBeingSaved(null);\n    }\n  }, [newBioIfBeingSaved, bio]);\n  const toggleBioModal = useCallback(() => {\n    setNewBio(bio);\n    setBioModalOpen(open => !open);\n  }, [bio]);\n  const handleOkBioChange = useCallback(() => {\n    if (newBio !== bio) {\n      saveNewBio(newBio);\n    }\n    toggleBioModal();\n  }, [bio, newBio, saveNewBio, toggleBioModal]);\n  const bioModalStyle = useMemo<React.CSSProperties>(\n    () => ({\n      padding: \"12px 24px\"\n    }),\n    []\n  );\n  const handleNewBioChange = ({ target: { value } }) => {\n    setNewBio(value);\n  };\n  //#endregion bio ---------------------------------------------------------- //\n\n  return (\n    <>\n      <div className=\"page-container profile-page\">\n        <div className=\"profile-container no-scrollbar\">\n          <div className=\"profile-cover\" onClick={onPressHeader}>\n            {user.header && (\n              <img\n                alt=\"User set profile header.\"\n                src={`data:image/jpeg;base64,${user.header}`}\n              />\n            )}\n          </div>\n          <div className=\"profile-info-container\">\n            <div\n              className=\"profile-avatar\"\n              style={{\n                height: `${AVATAR_SIZE}px`,\n                width: `${AVATAR_SIZE}px`\n              }}\n            >\n              <ShockAvatar\n                height={AVATAR_SIZE}\n                publicKey={publicKey}\n                setsAvatar\n                greyBorder\n                disableOnlineRing\n              />\n            </div>\n\n            <div className=\"profile-info\">\n              <p\n                className={c(gStyles.unselectable, \"profile-name\")}\n                onClick={toggleDnModal}\n              >\n                {newDnIfBeingSaved || displayName}\n              </p>\n              <p\n                className={c(gStyles.unselectable, \"profile-desc\")}\n                onClick={toggleBioModal}\n              >\n                {newBioIfBeingSaved || user.bio}\n              </p>\n              <div className=\"config-btn\" onClick={toggleConfigModal}>\n                <i className=\"config-btn-icon icon-solid-spending-rule\" />\n                <p className=\"config-btn-text\">Config</p>\n              </div>\n            </div>\n          </div>\n          <div>\n            <Link to={\"/goLive\"} className=\"profile-choice-container\">\n              <div\n                style={{\n                  backgroundColor: \"red\",\n                  color: \"white\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  padding: \"0.2em 0.5em\",\n                  borderRadius: \"0.7em\",\n                  fontSize: \"16px\",\n                  fontWeight: 600\n                }}\n              >\n                <i className=\"fas fa-video\"></i>\n                <p>GO LIVE</p>\n              </div>\n            </Link>\n            <Link to={\"/createPost\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-pen-square\"></i>\n              <p className=\"profile-choice-text\">Create Post</p>\n            </Link>\n            <Link to={\"/publishContent\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fab fa-youtube\"></i>\n              <p className=\"profile-choice-text\">Publish Content</p>\n            </Link>\n            <button className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-shopping-cart\"></i>\n              <p className=\"profile-choice-text\">Offer a Product</p>\n            </button>\n            <Link to={\"/offerService\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-running\"></i>\n              <p className=\"profile-choice-text\">Offer a Service</p>\n            </Link>\n          </div>\n\n          <ProfileDivider onChange={handleViewChange} selected={selectedView} />\n          <div className=\"\">\n            {selectedView === \"posts\" && renderPosts()}\n            {selectedView === \"services\" && renderServices()}\n          </div>\n\n          {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n          <Pad amt={200} />\n\n          <Modal\n            toggleModal={toggleModal}\n            modalOpen={profileModalOpen}\n            contentStyle={{\n              padding: \"40px 30px\"\n            }}\n          >\n            <QRCode\n              bgColor=\"#23282d\"\n              fgColor=\"#4285b9\"\n              value={`${currWebClientPrefix}/${publicKey}`}\n              size={180}\n              className=\"profile-qrcode\"\n            />\n            <p className=\"profile-qrcode-desc\">\n              Other users can scan this code to contact you\n            </p>\n\n            {!navigator.clipboard && (\n              <input\n                className=\"hidden-input\"\n                id=\"public-key-holder\"\n                readOnly\n                type=\"text\"\n                value={`${currWebClientPrefix}/${publicKey}`}\n              ></input>\n            )}\n            <div\n              className=\"profile-clipboard-container\"\n              onClick={copyClipboard}\n            >\n              <img\n                src={ClipboardIcon}\n                className=\"profile-clipboard-icon\"\n                alt=\"\"\n              />\n              <p className=\"profile-clipboard-text\">Tap to copy to clipboard</p>\n            </div>\n          </Modal>\n\n          <Modal\n            toggleModal={toggleConfigModal}\n            modalOpen={profileConfigModalOpen}\n            contentStyle={{\n              padding: \"2em 2em\"\n            }}\n          >\n            <label htmlFor=\"new-web-client-prefix\">Web Client</label>\n\n            <div className=\"web-client-prefix-picker\">\n              <i\n                className=\"far fa-copy\"\n                onClick={copyWebClientUrlToClipboard}\n                style={{ fontSize: 24 }}\n              />\n\n              <select\n                onChange={e => {\n                  setNewWebClientPrefix(e.target.value as WebClientPrefix);\n                }}\n                name=\"new-web-client-prefix\"\n                id=\"new-web-client-prefix\"\n                value={newWebClientPrefix}\n              >\n                {AVAILABLE_WEB_CLIENT_PREFIXES.map(prefix => (\n                  <option key={prefix} value={prefix}>\n                    {prefix}\n                  </option>\n                ))}\n              </select>\n\n              <span>/</span>\n\n              <span style={{ fontSize: 12 }}>{publicKey}</span>\n            </div>\n\n            {!navigator.clipboard && (\n              <input\n                className=\"hidden-input\"\n                id=\"web-client-url-holder\"\n                readOnly\n                type=\"text\"\n                value={newWebClientPrefix + \"/\" + publicKey}\n              ></input>\n            )}\n\n            <br></br>\n\n            <label htmlFor=\"content-host\">Content Host</label>\n\n            <ContentHostInput />\n\n            <br></br>\n\n            {somethingInsideConfigModalChanged && (\n              <div className=\"flex-center\" style={{ marginTop: \"auto\" }}>\n                <button\n                  onClick={onConfigCancel}\n                  className=\"shock-form-button m-1\"\n                >\n                  CANCEL\n                </button>\n                <button\n                  onClick={onConfigSubmit}\n                  className=\"shock-form-button-confirm m-1\"\n                >\n                  SUBMIT\n                </button>\n              </div>\n            )}\n          </Modal>\n\n          <Modal\n            toggleModal={toggleDeleteModal}\n            modalOpen={deletePostModalData}\n            contentStyle={{\n              padding: \"2em 2em\"\n            }}\n          >\n            <div>You sure delete</div>\n            <div className=\"flex-center\" style={{ marginTop: \"auto\" }}>\n              <button\n                onClick={closeDeleteModal}\n                className=\"shock-form-button m-1\"\n              >\n                CANCEL\n              </button>\n              <button\n                onClick={deletePost}\n                className=\"shock-form-button-confirm m-1\"\n              >\n                DELETE\n              </button>\n            </div>\n          </Modal>\n          <AddBtn\n            onClick={toggleModal}\n            large\n            iconURL={QRCodeIcon}\n            icon={null}\n            label={null}\n          />\n        </div>\n\n        <BottomBar />\n      </div>\n\n      <input\n        type=\"file\"\n        id=\"avatar-file\"\n        ref={headerImageFileInput}\n        hidden\n        accept=\"image/*\"\n        onChange={onSelectedHeaderFile}\n      />\n\n      {\n        //#region displayNameModal\n      }\n\n      <Modal\n        contentStyle={dnModalStyle}\n        modalOpen={dnModalOpen}\n        toggleModal={toggleDnModal}\n      >\n        <label htmlFor=\"newDisplayName\">Display Name</label>\n        <input\n          autoCapitalize=\"none\"\n          autoCorrect=\"off\"\n          type=\"text\"\n          className=\"input-field\"\n          placeholder={\"New display name\"}\n          name=\"newDisplayName\"\n          onChange={handleNewDisplayNameChange}\n          value={newDisplayName}\n        />\n\n        {newDisplayName !== displayName && newDisplayName !== \"\" ? (\n          <button\n            onClick={handleOkDnChange}\n            className=\"shock-form-button-confirm m-1\"\n          >\n            OK\n          </button>\n        ) : (\n          <button onClick={toggleDnModal} className=\"shock-form-button m-1\">\n            GO BACK\n          </button>\n        )}\n      </Modal>\n\n      {\n        //#endregion displayNameModal\n      }\n\n      {\n        //#region bioModal\n      }\n      <Modal\n        contentStyle={bioModalStyle}\n        modalOpen={bioModalOpen}\n        toggleModal={toggleBioModal}\n      >\n        <label htmlFor=\"newBio\">New Bio</label>\n        <input\n          autoCapitalize=\"none\"\n          autoCorrect=\"off\"\n          type=\"text\"\n          className=\"input-field\"\n          placeholder={\"New bio\"}\n          name=\"newBio\"\n          onChange={handleNewBioChange}\n          value={newBio}\n        />\n        {newBio !== bio && newBio !== \"\" ? (\n          <button\n            onClick={handleOkBioChange}\n            className=\"shock-form-button-confirm m-1\"\n          >\n            OK\n          </button>\n        ) : (\n          <button onClick={toggleBioModal} className=\"shock-form-button m-1\">\n            GO BACK\n          </button>\n        )}\n      </Modal>\n      {\n        //#endregion bioModal\n      }\n    </>\n  );\n};\n\nconst AVAILABLE_WEB_CLIENT_PREFIXES: readonly WebClientPrefix[] = [\n  \"https://shock.pub\",\n  \"https://shock.page\",\n  \"https://lightning.page\",\n  \"https://satoshi.watch\"\n];\n\nexport default ProfilePage;\n"],"sourceRoot":""}