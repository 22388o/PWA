{"version":3,"sources":["pages/Request/components/FormStep/index.js","pages/Request/components/InvoiceStep/index.js","pages/Request/index.js"],"names":["FormStep","onInputChange","amount","description","className","InputGroup","name","label","onChange","value","inputMode","element","InvoiceStep","unit","prevStep","history","useDispatch","useHistory","useState","paymentRequest","setPaymentRequest","address","setAddress","QRLoading","setQRLoading","loading","setLoading","contact","setContact","error","setError","lightningMode","setLightningMode","addInvoice","useCallback","a","Http","post","memo","expiry","invoice","data","payment_request","response","errorMessage","generateAddress","type","selectContact","useEffect","toggleLightningMode","placeholderInputRef","useRef","copyClipboard","txtToCopy","navigator","clipboard","writeText","el","current","ReferenceError","style","display","select","document","execCommand","blur","e","console","message","sendInvoice","push","err","Loader","overlay","text","Suggestion","selected","undefined","ContactsSearch","features","small","size","fgColor","bgColor","classNames","mode","onClick","gStyles","readOnly","ref","bind","toUpperCase","SlidePay","wrapperStyle","padding","marginTop","slideText","onSuccess","disabled","STEPS","Array","from","length","RequestPage","setAmount","setDescription","activeStep","setActiveStep","setUnit","target","nextStep","MAX_STEPS","renderStep","lastStep","DialogPageContainer","title","map","_","key","indicator"],"mappings":"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","file":"static/js/36.1f914122.chunk.js","sourcesContent":["import InputGroup from \"../../../../common/InputGroup\";\nimport \"./css/index.scoped.css\"\n\nconst FormStep = ({ onInputChange, amount, description }) => (\n  <div className=\"container\">\n    <div className=\"inputs-group\">\n      <InputGroup\n        name=\"amount\"\n        label=\"Enter Amount\"\n        onChange={onInputChange}\n        value={amount}\n        inputMode=\"decimal\"\n      />\n      <select name=\"unit\" className=\"unit-dropdown\" onChange={onInputChange}>\n        <option value=\"sats\">Sats</option>\n        <option value=\"msats\">mSats</option>\n        <option value=\"btc\">BTC</option>\n      </select>\n    </div>\n    <InputGroup\n      name=\"description\"\n      label=\"Description\"\n      element=\"textarea\"\n      onChange={onInputChange}\n      value={description}\n    />\n  </div>\n);\n\nexport default FormStep;\n","import { useCallback, useEffect, useState, useRef } from \"react\";\nimport { useHistory } from \"react-router\";\nimport classNames from \"classnames\";\nimport QRCode from \"qrcode.react\";\nimport { useDispatch } from \"react-redux\";\nimport Loader from \"../../../../common/Loader\";\nimport SlidePay from \"../../../../common/SlidePay\";\nimport Http from \"../../../../utils/Http\";\nimport \"./css/index.scoped.css\";\nimport Suggestion from \"../../../../common/ContactsSearch/components/Suggestion\";\nimport ContactsSearch from \"../../../../common/ContactsSearch\";\n\nimport * as gStyles from \"../../../../styles\";\n\nconst InvoiceStep = ({\n  amount = 0,\n  description = \"N/A\",\n  unit = \"\",\n  prevStep\n}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [paymentRequest, setPaymentRequest] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [QRLoading, setQRLoading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [contact, setContact] = useState();\n  const [error, setError] = useState(\"\");\n  const [lightningMode, setLightningMode] = useState(false);\n\n  const addInvoice = useCallback(async () => {\n    try {\n      setQRLoading(true);\n      const { data: invoice } = await Http.post(\"/api/lnd/addinvoice\", {\n        value: amount,\n        memo: description,\n        expiry: 100\n      });\n\n      setPaymentRequest(invoice.payment_request);\n    } catch (err) {\n      setError(\n        err?.response?.data.errorMessage ?? \"An unknown error has occurred\"\n      );\n    } finally {\n      setQRLoading(false);\n    }\n  }, [amount, description]);\n\n  const generateAddress = useCallback(async () => {\n    try {\n      setQRLoading(true);\n      const { data } = await Http.post(\"/api/lnd/newaddress\", {\n        type: \"p2wkh\"\n      });\n\n      setAddress(data.address);\n    } catch (err) {\n      setError(\n        err?.response?.data.errorMessage ?? \"An unknown error has occurred\"\n      );\n    } finally {\n      setQRLoading(false);\n    }\n  }, []);\n\n  const selectContact = useCallback(async contact => {\n    setContact(contact);\n  }, []);\n\n  useEffect(() => {\n    if (lightningMode) {\n      addInvoice();\n      return;\n    }\n\n    generateAddress();\n  }, [addInvoice, generateAddress, lightningMode]);\n\n  const toggleLightningMode = useCallback(() => {\n    setLightningMode(!lightningMode);\n  }, [lightningMode]);\n\n  /** @type {import('react').MutableRefObject<HTMLInputElement|null>} */\n  const placeholderInputRef = useRef();\n\n  const copyClipboard = useCallback(() => {\n    try {\n      const txtToCopy = lightningMode ? paymentRequest : address;\n\n      if (navigator.clipboard) {\n        navigator.clipboard.writeText(txtToCopy);\n      } else {\n        const { current: el } = placeholderInputRef;\n        if (!el) {\n          throw new ReferenceError(\n            `When trying to access the ref for the placeholder input to copy, the ref was null.`\n          );\n        }\n\n        el.style.display = \"block\";\n        el.select();\n        document.execCommand(\"copy\");\n        el.blur();\n        el.style.display = \"none\";\n      }\n    } catch (e) {\n      console.error(e);\n      setError(e.message);\n    }\n  }, [lightningMode, paymentRequest, address]);\n\n  const sendInvoice = useCallback(async () => {\n    if (contact) {\n      try {\n        setLoading(true);\n        // await sendMessage({\n        //   publicKey: contact.pk,\n        //   message: \"$$__SHOCKWALLET__INVOICE__\" + paymentRequest\n        // })(dispatch);\n        setLoading(false);\n        history.push(\"/overview\");\n      } catch (err) {\n        setError(\n          err?.response?.data.errorMessage ??\n            err?.message ??\n            \"An unknown error has occurred\"\n        );\n        setLoading(false);\n      }\n    }\n  }, [contact, history]);\n\n  return (\n    <div className=\"container\">\n      {loading ? <Loader overlay text=\"Sending Invoice...\" /> : null}\n      {lightningMode ? (\n        contact ? (\n          <Suggestion\n            selected\n            contact={contact}\n            selectContact={selectContact}\n            style={undefined}\n          />\n        ) : (\n          <ContactsSearch\n            selectContact={selectContact}\n            features={[\"contact\"]}\n          />\n        )\n      ) : null}\n      <div className=\"qr-code-container\">\n        <div className=\"qr-code\">\n          {QRLoading ? (\n            <Loader overlay small text=\"\" />\n          ) : (\n            <QRCode\n              value={lightningMode ? paymentRequest : address}\n              size={180}\n              fgColor={lightningMode ? \"#f5a623\" : \"#4285b9\"}\n              bgColor=\"#001220\"\n            />\n          )}\n        </div>\n        <div\n          className={classNames({\n            mode: true,\n            \"lightning-active\": lightningMode\n          })}\n          onClick={toggleLightningMode}\n        >\n          <p className=\"switch-name on-chain-switch\">On-Chain</p>\n          <div className=\"switch\">\n            <div className=\"switch-handle\" />\n          </div>\n          <p className=\"switch-name lightning-switch\">Lightning</p>\n        </div>\n      </div>\n      <div className=\"copy-clipboard-btn\" onClick={copyClipboard}>\n        <i className=\"fas fa-copy\"></i>\n        <p className=\"copy-clipboard-btn-text\">Copy to Clipboard</p>\n      </div>\n\n      {!navigator.clipboard && (\n        <input\n          className={gStyles.hiddenInput}\n          readOnly\n          ref={placeholderInputRef}\n          type=\"text\"\n          value={lightningMode ? paymentRequest : address}\n        />\n      )}\n\n      {error ? (\n        <>\n          <span>{error}</span>\n\n          <br />\n\n          <span className=\"inline-link\" onClick={setError.bind(null, \"\")}>\n            Dismiss\n          </span>\n        </>\n      ) : (\n        <>\n          <div className=\"details\">\n            <p className=\"details-change\" onClick={prevStep}>\n              Change\n            </p>\n            <div className=\"detail\">\n              <p className=\"detail-title\">Amount</p>\n              <p className=\"detail-value\">\n                {amount} {unit.toUpperCase()}\n              </p>\n            </div>\n            <div className=\"detail\">\n              <p className=\"detail-title\">Description</p>\n              <p className=\"detail-value\">{description}</p>\n            </div>\n          </div>\n\n          {lightningMode && contact ? (\n            <SlidePay\n              wrapperStyle={{\n                padding: 0,\n                marginTop: 23\n              }}\n              slideText=\"SLIDE TO SEND\"\n              onSuccess={sendInvoice}\n              disabled={false}\n            />\n          ) : null}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default InvoiceStep;\n","// @ts-check\nimport { useCallback, useState } from \"react\";\nimport classNames from \"classnames\";\nimport DialogPageContainer from \"../../common/DialogPageContainer\";\nimport \"./css/index.scoped.css\";\nimport FormStep from \"./components/FormStep\";\nimport InvoiceStep from \"./components/InvoiceStep\";\n\nconst MAX_STEPS = 2;\n/**\n * @type {readonly unknown[]}\n */\nconst STEPS = Array.from({ length: MAX_STEPS });\n\nconst RequestPage = () => {\n  const [amount, setAmount] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [activeStep, setActiveStep] = useState(0);\n  const [unit, setUnit] = useState(\"sats\");\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n\n    if (e.target.name === \"description\") {\n      setDescription(e.target.value);\n    }\n\n    if (e.target.name === \"unit\") {\n      setUnit(e.target.value);\n    }\n  }, []);\n\n  const nextStep = useCallback(() => {\n    if (activeStep < MAX_STEPS - 1) {\n      setActiveStep(activeStep + 1);\n    }\n  }, [activeStep]);\n\n  const prevStep = useCallback(() => {\n    if (activeStep > 0) {\n      setActiveStep(activeStep - 1);\n    }\n  }, [activeStep]);\n\n  const renderStep = useCallback(() => {\n    if (activeStep === 0) {\n      return (\n        <FormStep\n          amount={amount}\n          description={description}\n          onInputChange={onInputChange}\n        />\n      );\n    }\n\n    if (activeStep === 1) {\n      return (\n        <InvoiceStep\n          amount={amount}\n          description={description}\n          unit={unit}\n          prevStep={prevStep}\n        />\n      );\n    }\n  }, [activeStep, amount, description, onInputChange, prevStep, unit]);\n\n  const lastStep = activeStep === MAX_STEPS - 1;\n\n  return (\n    <DialogPageContainer title=\"REQUEST\">\n      {renderStep()}\n      <div className=\"footer\">\n        {!lastStep ? (\n          <div className=\"controls\">\n            <div className=\"control\" onClick={nextStep}>\n              Skip\n            </div>\n            <div className=\"control next\" onClick={nextStep}>\n              Next\n            </div>\n          </div>\n        ) : null}\n        <div className=\"indicators\">\n          {STEPS.map((_, key) => (\n            <div\n              className={classNames({\n                indicator: true,\n                \"indicator-active\": key === activeStep\n              })}\n              key={key}\n            ></div>\n          ))}\n        </div>\n      </div>\n    </DialogPageContainer>\n  );\n};\n\nexport default RequestPage;\n"],"sourceRoot":""}