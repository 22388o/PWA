{"version":3,"sources":["common/Pad/index.tsx","pages/Story/css/index.module.css","pages/Story/index.tsx"],"names":["Pad","amt","style","insideRow","width","height","module","exports","Story","publicKey","onParentNext","onNext","onParentPrevious","onPrevious","position","React","useState","currI","setCurrI","pics","setPics","currPic","Store","state","node","displayName","userProfiles","hostIP","subscribeStory","useCallback","a","rifle","query","onData","pictures","Object","values","filter","p","onError","err","console","log","sub","off","useEffect","length","className","classNames","styles","container","alt","src","data","picture","map","pic","i","Fragment","id","info","moment","Common","timestamp","fromNow","onClick"],"mappings":"qHAAA,gBAkBeA,IAXiB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,IAC3BC,EAA6B,GAOnC,OARsD,EAAhBC,UAGpCD,EAAME,MAAQH,EAEdC,EAAMG,OAASJ,EAGV,qBAAKC,MAAOA,M,oBCdrBI,EAAOC,QAAU,CAAC,IAAM,OAAO,UAAY,uBAAuB,KAAO,kBAAkB,kBAAkB,6BAA6B,KAAO,kBAAkB,gBAAgB,2CAA2C,KAAO,kBAAkB,YAAY,uCAAuC,aAAa,wCAAwC,QAAU,uB,wLC8I1VC,UAvHqB,SAAC,GAK/B,EAJJC,UAIK,IAHGC,EAGJ,EAHJC,OACYC,EAER,EAFJC,WACAC,EACI,EADJA,SACI,EACsBC,IAAMC,SAAiB,GAD7C,mBACGC,EADH,KACUC,EADV,OAEoBH,IAAMC,SAAyB,IAFnD,mBAEGG,EAFH,KAESC,EAFT,KAGEC,EAAUF,EAAKF,GAGfR,EAAYa,eAAkB,SAAAC,GAAK,OAAIA,EAAMC,KAAKf,aAChDgB,EAAgBH,eACtB,qBAAGI,aAAgCjB,MAD7BgB,YAGAE,EAAWL,eAAkB,SAAAC,GAAK,OAAIA,EAAMC,QAA5CG,OACFC,EAAiBb,IAAMc,YAAN,sBAAkB,4BAAAC,EAAA,sEACrBC,YAAM,CACtBC,MAAM,GAAD,OAAKvB,EAAL,iBACLwB,OAAQ,SAACC,GACiB,kBAAbA,GAAsC,OAAbA,GAIpCd,EACEe,OAAOC,OAAOF,GAAUG,QACtB,SAAAC,GAAC,MAAiB,kBAANA,GAAwB,OAANA,OAIpCC,QAAS,SAAAC,GACPC,QAAQC,IAAR,2BACAD,QAAQC,IAAIF,MAhBuB,cACjCG,EADiC,0BAoBhC,WACLA,EAAIC,SArBiC,2CAuBtC,CAACjB,EAAQlB,IAEZM,IAAM8B,WAAU,WACdjB,MACC,CAACA,IAEJb,IAAM8B,WAAU,cAIb,CAAC5B,EAAOH,IAoBX,OAAoB,IAAhBK,EAAK2B,OACA,qBAAKC,UAAWC,IAAW,iBAAkBC,IAAOC,aAI3D,sBAAKH,UAAWC,IAAW,iBAAkBC,IAAOC,WAApD,UACE,qBACEC,IAAG,cAASlC,EAAQ,EAAjB,mBAA6BE,EAAK2B,QACrCM,IAAG,iCAA4B/B,EAAQgC,MACvCN,UAAWE,IAAOK,UAGpB,cAAC,IAAD,CAAKrD,IAAK,KAEV,qBAAK8C,UAAWE,IAAO,mBAAvB,SACG9B,EAAKoC,KAAI,SAACC,EAAKC,GAAN,OACR,eAAC,IAAMC,SAAP,WACE,cAAC,IAAD,CAAKzD,IAAK,GAAIE,WAAS,IAEvB,qBACE4C,UAAWC,IACTC,IAAM,KACNQ,IAAMxC,GAASgC,IAAO,oBAI1B,cAAC,IAAD,CAAKhD,IAAK,GAAIE,WAAS,MAVJqD,EAAIG,SAe7B,cAAC,IAAD,CAAK1D,IAAK,KAEV,sBAAK8C,UAAWE,IAAOW,KAAvB,UACE,+BAAOnC,IAEP,cAAC,IAAD,CAAKxB,IAAK,KAEV,+BACG4D,IAAOC,IAA8BzC,EAAQ0C,YAAYC,eAI9D,qBAAKjB,UAAWE,IAAO,aAAcgB,QAnDtB,WACH,IAAVhD,EACFL,IAEAM,GAAS,SAAAuC,GAAC,OAAIA,EAAI,QAiDlB,qBAAKV,UAAWE,IAAO,cAAegB,QA/D3B,WACThD,IAAUE,EAAK2B,OAAS,GACT,SAAbhC,GACFI,EAAS,GAEXR,KAEAQ,GAAS,SAAAuC,GAAC,OAAIA,EAAI","file":"static/js/37.d877c450.chunk.js","sourcesContent":["import React from \"react\";\n\nexport interface PadProps {\n  amt: number;\n  insideRow?: boolean;\n}\n\nconst Pad: React.FC<PadProps> = ({ amt, insideRow }) => {\n  const style: React.CSSProperties = {};\n  if (insideRow) {\n    style.width = amt;\n  } else {\n    style.height = amt;\n  }\n\n  return <div style={style} />;\n};\n\nexport default Pad;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PAD\":\"24px\",\"container\":\"css_container__1PBSF\",\"info\":\"css_info__3-BVc\",\"lines-container\":\"css_lines-container__2cbF7\",\"line\":\"css_line__2Yjr7\",\"line-selected\":\"css_line-selected__2NoqB css_line__2Yjr7\",\"half\":\"css_half__og7Px\",\"half-left\":\"css_half-left__5n9sU css_half__og7Px\",\"half-right\":\"css_half-right__2A-oI css_half__og7Px\",\"picture\":\"css_picture__-Xnv0\"};","import React from \"react\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\nimport * as Common from \"shock-common\";\n\nimport Pad from \"../../common/Pad\";\nimport * as Utils from \"../../utils\";\nimport { rifle } from \"../../utils/WebSocket\";\nimport * as Store from \"../../store\";\nimport { Pic } from \"../../hooks\";\n\nimport styles from \"./css/index.module.css\";\n\nexport interface StoryParams {\n  publicKey?: string;\n}\n\nexport interface StoryProps {\n  publicKey?: string;\n  onNext(): void;\n  onPrevious(): void;\n  position: \"first\" | \"middle\" | \"last\";\n}\n\nconst Story: React.FC<StoryProps> = ({\n  publicKey: propsPublicKey,\n  onNext: onParentNext,\n  onPrevious: onParentPrevious,\n  position\n}) => {\n  const [currI, setCurrI] = React.useState<number>(0);\n  const [pics, setPics] = React.useState<readonly Pic[]>([]);\n  const currPic = pics[currI];\n  // const { publicKey: paramPublicKey } = useParams<StoryParams>();\n  // @ts-ignore\n  const publicKey = Store.useSelector(state => state.node.publicKey); //paramPublicKey || propsPublicKey;\n  const { displayName } = Store.useSelector(\n    ({ userProfiles }) => userProfiles[publicKey]\n  );\n  const { hostIP } = Store.useSelector(state => state.node);\n  const subscribeStory = React.useCallback(async () => {\n    const sub = await rifle({\n      query: `${publicKey}::story::open`,\n      onData: (pictures: unknown) => {\n        if (typeof pictures !== \"object\" || pictures === null) {\n          return;\n        }\n\n        setPics(\n          Object.values(pictures).filter(\n            p => typeof p === \"object\" && p !== null\n          )\n        );\n      },\n      onError: err => {\n        console.log(`Error inside story sub:`);\n        console.log(err);\n      }\n    });\n\n    return () => {\n      sub.off();\n    };\n  }, [hostIP, publicKey]);\n\n  React.useEffect(() => {\n    subscribeStory();\n  }, [subscribeStory]);\n\n  React.useEffect(() => {\n    if (currI !== 0 && position !== \"first\") {\n      // setCurrI(0);\n    }\n  }, [currI, position]);\n\n  const onNext = () => {\n    if (currI === pics.length - 1) {\n      if (position !== \"last\") {\n        setCurrI(0);\n      }\n      onParentNext();\n    } else {\n      setCurrI(i => i + 1);\n    }\n  };\n  const onPrevious = () => {\n    if (currI === 0) {\n      onParentPrevious();\n    } else {\n      setCurrI(i => i - 1);\n    }\n  };\n\n  if (pics.length === 0) {\n    return <div className={classNames(\"page-container\", styles.container)} />;\n  }\n\n  return (\n    <div className={classNames(\"page-container\", styles.container)}>\n      <img\n        alt={`Pic ${currI + 1} out of ${pics.length}`}\n        src={`data:image/jpeg;base64,${currPic.data}`}\n        className={styles.picture}\n      />\n\n      <Pad amt={24} />\n\n      <div className={styles[\"lines-container\"]}>\n        {pics.map((pic, i) => (\n          <React.Fragment key={pic.id}>\n            <Pad amt={12} insideRow />\n\n            <div\n              className={classNames(\n                styles[\"line\"],\n                i === currI && styles[\"line-selected\"]\n              )}\n            />\n\n            <Pad amt={12} insideRow />\n          </React.Fragment>\n        ))}\n      </div>\n\n      <Pad amt={24} />\n\n      <div className={styles.info}>\n        <span>{displayName}</span>\n\n        <Pad amt={12} />\n\n        <span>\n          {moment(Common.normalizeTimestampToMs(currPic.timestamp)).fromNow()}\n        </span>\n      </div>\n\n      <div className={styles[\"half-left\"]} onClick={onPrevious} />\n\n      <div className={styles[\"half-right\"]} onClick={onNext} />\n    </div>\n  );\n};\n\nexport default Story;\n"],"sourceRoot":""}