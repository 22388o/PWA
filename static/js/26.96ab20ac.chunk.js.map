{"version":3,"sources":["images/bitcoin-lightning.svg","../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js","../node_modules/use-latest/dist/use-latest.esm.js","../node_modules/use-composed-ref/dist/use-composed-ref.esm.js","../node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.esm.js","pages/Chat/components/ChatMessage/index.js","pages/Chat/index.js"],"names":["index","useLayoutEffect","useLatest","value","ref","useRef","useIsomorphicLayoutEffect","current","updateRef","useComposedRef","libRef","userRef","prevUserRef","useCallback","instance","HIDDEN_TEXTAREA_STYLE","height","visibility","overflow","position","top","right","forceHiddenStyles","node","Object","keys","forEach","key","style","setProperty","hiddenTextarea","noop","SIZING_STYLE","isIE","document","documentElement","currentStyle","TextareaAutosize","_ref","cacheMeasurements","maxRows","minRows","_ref$onChange","onChange","_ref$onHeightChange","onHeightChange","props","_objectWithoutPropertiesLoose","isControlled","undefined","heightRef","measurementsCacheRef","resizeTextarea","nodeSizingData","window","getComputedStyle","obj","sizingStyle","reduce","acc","prop","boxSizing","width","parseFloat","borderRightWidth","borderLeftWidth","paddingRight","paddingLeft","paddingSize","paddingBottom","paddingTop","borderSize","borderBottomWidth","borderTopWidth","getSizingData","_calculateNodeHeight","sizingData","Infinity","createElement","setAttribute","parentNode","body","appendChild","_key","scrollHeight","getHeight","rowHeight","minHeight","Math","max","maxHeight","min","calculateNodeHeight","placeholder","listener","latestListener","handler","event","addEventListener","removeEventListener","useWindowResizeListener","_extends","forwardRef","ChatMessage","text","receivedMessage","className","classNames","ChatPage","dispatch","useDispatch","recipientPublicKey","useParams","publicKey","useState","message","setMessage","messages","Store","chat","contact","getContact","contacts","sentRequest","sentRequests","receivedRequest","receivedRequests","gunPublicKey","pendingSentRequest","pendingReceivedRequest","handleInputChange","e","target","acceptRequest","console","log","acceptHandshakeRequest","id","submitMessage","ctrlKey","preventDefault","sendMessage","subscribeIncomingMessages","subscription","subscribeChatMessages","a","resolvedSubscription","close","useEffect","contactName","useMemo","processDisplayName","pk","displayName","MainNav","solid","pageTitle","enableBackButton","map","outgoing","status","timestamp","onClick","src","BitcoinLightning","alt","type","enterKeyHint","onKeyPress"],"mappings":"qHAAe,QAA0B,+C,4CCI1BA,EAFFC,kBCSEC,IARC,SAAmBC,GACjC,IAAIC,EAAMC,iBAAOF,GAIjB,OAHAG,GAA0B,WACxBF,EAAIG,QAAUJ,KAETC,I,uKCNLI,EAAY,SAAmBJ,EAAKD,GACnB,oBAARC,EAIXA,EAAIG,QAAUJ,EAHZC,EAAID,IAyBOM,EAnBM,SAAwBC,EAAQC,GACnD,IAAIC,EAAcP,mBAClB,OAAOQ,uBAAY,SAAUC,GAC3BJ,EAAOH,QAAUO,EAEbF,EAAYL,SACdC,EAAUI,EAAYL,QAAS,MAGjCK,EAAYL,QAAUI,EAEjBA,GAILH,EAAUG,EAASG,KAClB,CAACH,KCpBFI,EAAwB,CAC1B,aAAc,IACd,aAAc,OACdC,OAAQ,IACRC,WAAY,SACZC,SAAU,SACVC,SAAU,WACV,UAAW,QACXC,IAAK,IACLC,MAAO,KAGLC,EAAoB,SAA2BC,GACjDC,OAAOC,KAAKV,GAAuBW,SAAQ,SAAUC,GACnDJ,EAAKK,MAAMC,YAAYF,EAAKZ,EAAsBY,GAAM,iBAOxDG,EAAiB,KAiErB,IAAIC,EAAO,aAQPC,EAAe,CAAC,oBAAqB,kBAAmB,mBAAoB,iBAAkB,YAAa,aAAc,WAAY,YAAa,aAAc,gBAAiB,aAAc,gBAAiB,cAAe,eAAgB,aACnP,UAAW,aACX,gBAAiB,gBAAiB,SAC9BC,IAASC,SAASC,gBAAgBC,aA6ClCC,EAAmB,SAA0BC,EAAM3B,GACrD,IAAI4B,EAAoBD,EAAKC,kBACzBC,EAAUF,EAAKE,QACfC,EAAUH,EAAKG,QACfC,EAAgBJ,EAAKK,SACrBA,OAA6B,IAAlBD,EAA2BX,EAAOW,EAC7CE,EAAsBN,EAAKO,eAC3BA,OAAyC,IAAxBD,EAAiCb,EAAOa,EACzDE,EAAQC,YAA8BT,EAAM,CAAC,oBAAqB,UAAW,UAAW,WAAY,mBAYxG,IAAIU,OAA+BC,IAAhBH,EAAM3C,MACrBO,EAASL,iBAAO,MAChBD,EAAMK,EAAeC,EAAQC,GAC7BuC,EAAY7C,iBAAO,GACnB8C,EAAuB9C,mBAEvB+C,EAAiB,WACnB,IAAI7B,EAAOb,EAAOH,QACd8C,EAAiBd,GAAqBY,EAAqB5C,QAAU4C,EAAqB5C,QAvE9E,SAAuBgB,GACzC,IAAIK,EAAQ0B,OAAOC,iBAAiBhC,GAEpC,GAAc,OAAVK,EACF,OAAO,KAGT,IAnB8B4B,EAmB1BC,GAnB0BD,EAmBO5B,EAAdI,EAlBV0B,QAAO,SAAUC,EAAKC,GAEjC,OADAD,EAAIC,GAAQJ,EAAII,GACTD,IACN,KAgBCE,EAAYJ,EAAYI,UAE5B,MAAkB,KAAdA,EACK,MAKL5B,GAAsB,eAAd4B,IACVJ,EAAYK,MAAQC,WAAWN,EAAYK,OAASC,WAAWN,EAAYO,kBAAoBD,WAAWN,EAAYQ,iBAAmBF,WAAWN,EAAYS,cAAgBH,WAAWN,EAAYU,aAAe,MAKjN,CACLV,YAAaA,EACbW,YAJgBL,WAAWN,EAAYY,eAAiBN,WAAWN,EAAYa,YAK/EC,WAJeR,WAAWN,EAAYe,mBAAqBT,WAAWN,EAAYgB,kBAkDsBC,CAAcnD,GAEtH,GAAK8B,EAAL,CAIAF,EAAqB5C,QAAU8C,EAE/B,IAAIsB,EA/IR,SAA6BC,EAAYzE,EAAOsC,EAASD,QACvC,IAAZC,IACFA,EAAU,QAGI,IAAZD,IACFA,EAAUqC,KAGP/C,KACHA,EAAiBI,SAAS4C,cAAc,aACzBC,aAAa,YAAa,MACzCjD,EAAeiD,aAAa,cAAe,QAC3CzD,EAAkBQ,IAGc,OAA9BA,EAAekD,YACjB9C,SAAS+C,KAAKC,YAAYpD,GAG5B,IAAIsC,EAAcQ,EAAWR,YACzBG,EAAaK,EAAWL,WACxBd,EAAcmB,EAAWnB,YACzBI,EAAYJ,EAAYI,UAC5BrC,OAAOC,KAAKgC,GAAa/B,SAAQ,SAAUyD,GACzC,IAAIxD,EAAMwD,EACVrD,EAAeF,MAAMD,GAAO8B,EAAY9B,MAE1CL,EAAkBQ,GAClBA,EAAe3B,MAAQA,EACvB,IAAIa,EA1CU,SAAmBO,EAAMqD,GACvC,IAAI5D,EAASO,EAAK6D,aAElB,MAAyC,eAArCR,EAAWnB,YAAYI,UAElB7C,EAAS4D,EAAWL,WAItBvD,EAAS4D,EAAWR,YAiCdiB,CAAUvD,EAAgB8C,GAEvC9C,EAAe3B,MAAQ,IACvB,IAAImF,EAAYxD,EAAesD,aAAehB,EAC1CmB,EAAYD,EAAY7C,EAEV,eAAdoB,IACF0B,EAAYA,EAAYnB,EAAcG,GAGxCvD,EAASwE,KAAKC,IAAIF,EAAWvE,GAC7B,IAAI0E,EAAYJ,EAAY9C,EAO5B,MALkB,eAAdqB,IACF6B,EAAYA,EAAYtB,EAAcG,GAIjC,CADPvD,EAASwE,KAAKG,IAAID,EAAW1E,GACbsE,GA+FaM,CAAoBvC,EAAgB9B,EAAKpB,OAASoB,EAAKsE,aAAe,IAAKpD,EAASD,GAC3GxB,EAAS2D,EAAqB,GAC9BW,EAAYX,EAAqB,GAEjCzB,EAAU3C,UAAYS,IACxBkC,EAAU3C,QAAUS,EACpBO,EAAKK,MAAMC,YAAY,SAAUb,EAAS,KAAM,aAChD6B,EAAe7B,EAAQ,CACrBsE,UAAWA,OAkBjB,OAJErF,0BAAgBmD,GAxEU,SAAiC0C,GAC7D,IAAIC,EAAiB7F,YAAU4F,GAC/B7F,2BAAgB,WACd,IAAI+F,EAAU,SAAiBC,GAC7BF,EAAexF,QAAQ0F,IAIzB,OADA3C,OAAO4C,iBAAiB,SAAUF,GAC3B,WACL1C,OAAO6C,oBAAoB,SAAUH,MAEtC,IA8DDI,CAAwBhD,GAGN0B,wBAAc,WAAYuB,YAAS,GAAIvD,EAAO,CAChEH,SAdiB,SAAsBsD,GAClCjD,GACHI,IAGFT,EAASsD,IAUT7F,IAAKA,MAMMJ,EAFYsG,qBAAWjE,G,0CCtMvBkE,EAdK,SAAC,GAA4C,IAAD,IAAzCC,YAAyC,MAAlC,GAAkC,MAA9BC,uBAA8B,SAC9D,OACE,sBACEC,UAAWC,IAAW,CACpB,gBAAgB,EAChB,wBAAyBF,IAH7B,UAMGA,EAAkB,qBAAKC,UAAU,wBAA+B,KACjE,mBAAGA,UAAU,oBAAb,SAAkCF,Q,kDCmKzBI,UA9JE,WACf,IAAMC,EAAWC,cACEC,EAAuBC,cAAlCC,UAFa,EAGSC,mBAAS,IAHlB,mBAGdC,EAHc,KAGLC,EAHK,KAIfC,EAAWC,eACf,qBAAGC,KAAgBF,SAASN,MAExBS,EAAUF,eAAkB,gBAAGC,EAAH,EAAGA,KAAH,OAChCE,YAAWF,EAAKG,SAAUX,MAEtBY,EAAcL,eAAkB,gBAAGC,EAAH,EAAGA,KAAH,OACpCE,YAAWF,EAAKK,aAAcb,MAE1Bc,EAAkBP,eAAkB,gBAAGC,EAAH,EAAGA,KAAH,OACxCE,YAAWF,EAAKO,iBAAkBf,MAE9BgB,EAAeT,eAAkB,qBAAG/F,KAAgB0F,aACpDe,GAAsBR,GAAWG,EACjCM,GAA0BT,GAAWK,EAErCK,EAAoBrH,uBAAY,SAAAsH,GACpCf,EAAWe,EAAEC,OAAOjI,SACnB,IAEGkI,EAAgBxH,uBAAY,WAChCyH,QAAQC,IAAIV,GACRA,GACFW,YAAuBX,EAAgBY,GAAvCD,CAA2C3B,KAE5C,CAACgB,EAAiBhB,IAEf6B,EAAgB7H,uBACpB,SAAAsH,GACE,GAAc,UAAVA,EAAExG,MAAmBwG,EAAEQ,QAK3B,MAAc,UAAVR,EAAExG,KACJwG,EAAES,iBACF/B,EACEgC,YAAY,CACV1B,UACAF,UAAWF,UAGfK,EAAW,UARb,EAJEA,EAAWD,EAAU,UAgBzB,CAACA,EAASJ,EAAoBF,IAG1BiC,EAA4BjI,uBAAY,WAC5C,IAAMkI,EAAelC,EACnBmC,YAAsBjB,EAAchB,IAGtC,6BAAO,4BAAAkC,EAAA,sEAC8BF,EAD9B,OAEe,QADdG,EADD,cAEe,IAApBA,KAAsBC,QAFjB,6CAIN,CAACtC,EAAUkB,EAAchB,IAE5BqC,qBAAU,WAGR,OAFoBN,MAGnB,CAACA,IAEJ,IAAMO,EAAcC,mBAAQ,WAC1B,OAAItB,EACKuB,YACLvB,EAAmBwB,GACnBxB,EAAmByB,aAInBxB,EACKsB,YACLtB,EAAuBuB,GACvBvB,EAAuBwB,aAIvBjC,EACK+B,YAAmB/B,EAAQgC,GAAIhC,EAAQiC,aAGzC,KACN,CAACzB,EAAoBC,EAAwBT,IAEhD,OACE,sBAAKd,UAAU,2BAAf,UACE,cAACgD,EAAA,EAAD,CAASC,OAAK,EAACC,UAAWP,EAAaQ,kBAAgB,IACvD,qBAAKnD,UAAU,0BAAf,gBACGW,QADH,IACGA,OADH,EACGA,EAAUyC,KAAI,SAAA3C,GAAO,OACpB,cAAC,EAAD,CACEX,KAAMW,EAAQlC,KACdwB,iBAAkBU,EAAQ4C,SAC1BC,OAAQ7C,EAAQ6C,OAChBC,UAAW9C,EAAQ8C,iBAIxBhC,EACC,sBAAKvB,UAAU,sBAAf,UACE,oBAAGA,UAAU,yCAAb,UACG2C,EADH,mCAGA,oBAAG3C,UAAU,2BAAb,sFAEe2C,KAEf,sBAAK3C,UAAU,2CAAf,UACE,qBACEA,UAAU,+DACVwD,QAAS7B,EAFX,oBAMA,qBAAK3B,UAAU,gEAAf,2BAKFsB,EACF,sBAAKtB,UAAU,sBAAf,UACE,oBAAGA,UAAU,4BAAb,2CACiC2C,EADjC,mBAGA,oBAAG3C,UAAU,wCAAb,kBACQ2C,EADR,+DAMF,qBAAK3C,UAAU,kBAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,qBAAKyD,IAAKC,IAAkBC,IAAI,WAElC,cAAC,EAAD,CACE3D,UAAU,aACV4D,KAAK,OACLC,aAAa,OACbC,WAAY9B,EACZ/F,SAAUuF,EACV/H,MAAOgH,EACPnG,OAAQ","file":"static/js/26.96ab20ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bitcoin-lightning.2d73b74b.svg\";","import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n","import { useRef } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n\nvar useLatest = function useLatest(value) {\n  var ref = useRef(value);\n  useIsomorphicLayoutEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n};\n\nexport default useLatest;\n","import { useRef, useCallback } from 'react';\n\nvar updateRef = function updateRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n    return;\n  }\n  ref.current = value;\n};\n\nvar useComposedRef = function useComposedRef(libRef, userRef) {\n  var prevUserRef = useRef();\n  return useCallback(function (instance) {\n    libRef.current = instance;\n\n    if (prevUserRef.current) {\n      updateRef(prevUserRef.current, null);\n    }\n\n    prevUserRef.current = userRef;\n\n    if (!userRef) {\n      return;\n    }\n\n    updateRef(userRef, instance);\n  }, [userRef]);\n};\n\nexport default useComposedRef;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useLayoutEffect, forwardRef, useRef, createElement } from 'react';\nimport useLatest from 'use-latest';\nimport useComposedRef from 'use-composed-ref';\n\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n//   export type CalculatedNodeHeights = [height: number, rowHeight: number];\n// https://github.com/microsoft/TypeScript/issues/28259\n\nvar hiddenTextarea = null;\n\nvar getHeight = function getHeight(node, sizingData) {\n  var height = node.scrollHeight;\n\n  if (sizingData.sizingStyle.boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    return height + sizingData.borderSize;\n  } // remove padding, since height = content\n\n\n  return height - sizingData.paddingSize;\n};\n\nfunction calculateNodeHeight(sizingData, value, minRows, maxRows) {\n  if (minRows === void 0) {\n    minRows = 1;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = Infinity;\n  }\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tab-index', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    forceHiddenStyles(hiddenTextarea);\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  var paddingSize = sizingData.paddingSize,\n      borderSize = sizingData.borderSize,\n      sizingStyle = sizingData.sizingStyle;\n  var boxSizing = sizingStyle.boxSizing;\n  Object.keys(sizingStyle).forEach(function (_key) {\n    var key = _key;\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = value;\n  var height = getHeight(hiddenTextarea, sizingData); // measure height of a textarea with a single row\n\n  hiddenTextarea.value = 'x';\n  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  var minHeight = rowHeight * minRows;\n\n  if (boxSizing === 'border-box') {\n    minHeight = minHeight + paddingSize + borderSize;\n  }\n\n  height = Math.max(minHeight, height);\n  var maxHeight = rowHeight * maxRows;\n\n  if (boxSizing === 'border-box') {\n    maxHeight = maxHeight + paddingSize + borderSize;\n  }\n\n  height = Math.min(maxHeight, height);\n  return [height, rowHeight];\n}\n\nvar noop = function noop() {};\nvar pick = function pick(props, obj) {\n  return props.reduce(function (acc, prop) {\n    acc[prop] = obj[prop];\n    return acc;\n  }, {});\n};\n\nvar SIZING_STYLE = ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'boxSizing', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop', // non-standard\n'tabSize', 'textIndent', // non-standard\n'textRendering', 'textTransform', 'width'];\nvar isIE = !!document.documentElement.currentStyle ;\n\nvar getSizingData = function getSizingData(node) {\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = pick(SIZING_STYLE, style);\n  var boxSizing = sizingStyle.boxSizing; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);\n  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);\n  return {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize\n  };\n};\n\nvar useWindowResizeListener = function useWindowResizeListener(listener) {\n  var latestListener = useLatest(listener);\n  useLayoutEffect(function () {\n    var handler = function handler(event) {\n      latestListener.current(event);\n    };\n\n    window.addEventListener('resize', handler);\n    return function () {\n      window.removeEventListener('resize', handler);\n    };\n  }, []);\n};\n\nvar TextareaAutosize = function TextareaAutosize(_ref, userRef) {\n  var cacheMeasurements = _ref.cacheMeasurements,\n      maxRows = _ref.maxRows,\n      minRows = _ref.minRows,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onHeightChange = _ref.onHeightChange,\n      onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange,\n      props = _objectWithoutPropertiesLoose(_ref, [\"cacheMeasurements\", \"maxRows\", \"minRows\", \"onChange\", \"onHeightChange\"]);\n\n  if (process.env.NODE_ENV !== 'production' && props.style) {\n    if ('maxHeight' in props.style) {\n      throw new Error('Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.');\n    }\n\n    if ('minHeight' in props.style) {\n      throw new Error('Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.');\n    }\n  }\n\n  var isControlled = props.value !== undefined;\n  var libRef = useRef(null);\n  var ref = useComposedRef(libRef, userRef);\n  var heightRef = useRef(0);\n  var measurementsCacheRef = useRef();\n\n  var resizeTextarea = function resizeTextarea() {\n    var node = libRef.current;\n    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData(node);\n\n    if (!nodeSizingData) {\n      return;\n    }\n\n    measurementsCacheRef.current = nodeSizingData;\n\n    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || 'x', minRows, maxRows),\n        height = _calculateNodeHeight[0],\n        rowHeight = _calculateNodeHeight[1];\n\n    if (heightRef.current !== height) {\n      heightRef.current = height;\n      node.style.setProperty('height', height + \"px\", 'important');\n      onHeightChange(height, {\n        rowHeight: rowHeight\n      });\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      resizeTextarea();\n    }\n\n    onChange(event);\n  };\n\n  {\n    useLayoutEffect(resizeTextarea);\n    useWindowResizeListener(resizeTextarea);\n  }\n\n  return /*#__PURE__*/createElement(\"textarea\", _extends({}, props, {\n    onChange: handleChange,\n    ref: ref\n  }));\n};\n\nvar index = /* #__PURE__ */forwardRef(TextareaAutosize);\n\nexport default index;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst ChatMessage = ({ text = \"\", receivedMessage = false }) => {\n  return (\n    <div\n      className={classNames({\n        \"chat-message\": true,\n        \"chat-message-received\": receivedMessage\n      })}\n    >\n      {receivedMessage ? <div className=\"chat-message-avatar\"></div> : null}\n      <p className=\"chat-message-text\">{text}</p>\n    </div>\n  );\n};\n\nexport default ChatMessage;\n","// @ts-check\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport TextArea from \"react-textarea-autosize\";\nimport MainNav from \"../../common/MainNav\";\nimport ChatMessage from \"./components/ChatMessage\";\nimport {\n  acceptHandshakeRequest,\n  sendMessage,\n  subscribeChatMessages\n} from \"../../actions/ChatActions\";\nimport BitcoinLightning from \"../../images/bitcoin-lightning.svg\";\nimport \"./css/index.css\";\nimport { processDisplayName } from \"../../utils/String\";\nimport * as Store from \"../../store\";\nimport { getContact } from \"../../utils\";\n\nconst ChatPage = () => {\n  const dispatch = useDispatch();\n  const { publicKey: recipientPublicKey } = useParams();\n  const [message, setMessage] = useState(\"\");\n  const messages = Store.useSelector(\n    ({ chat }) => chat.messages[recipientPublicKey]\n  );\n  const contact = Store.useSelector(({ chat }) =>\n    getContact(chat.contacts, recipientPublicKey)\n  );\n  const sentRequest = Store.useSelector(({ chat }) =>\n    getContact(chat.sentRequests, recipientPublicKey)\n  );\n  const receivedRequest = Store.useSelector(({ chat }) =>\n    getContact(chat.receivedRequests, recipientPublicKey)\n  );\n  const gunPublicKey = Store.useSelector(({ node }) => node.publicKey);\n  const pendingSentRequest = !contact && sentRequest;\n  const pendingReceivedRequest = !contact && receivedRequest;\n\n  const handleInputChange = useCallback(e => {\n    setMessage(e.target.value);\n  }, []);\n\n  const acceptRequest = useCallback(() => {\n    console.log(receivedRequest);\n    if (receivedRequest) {\n      acceptHandshakeRequest(receivedRequest.id)(dispatch);\n    }\n  }, [receivedRequest, dispatch]);\n\n  const submitMessage = useCallback(\n    e => {\n      if (e.key === \"Enter\" && e.ctrlKey) {\n        setMessage(message + \"\\r\\n\");\n        return;\n      }\n\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        dispatch(\n          sendMessage({\n            message,\n            publicKey: recipientPublicKey\n          })\n        );\n        setMessage(\"\");\n        return;\n      }\n    },\n    [message, recipientPublicKey, dispatch]\n  );\n\n  const subscribeIncomingMessages = useCallback(() => {\n    const subscription = dispatch(\n      subscribeChatMessages(gunPublicKey, recipientPublicKey)\n    );\n\n    return async () => {\n      const resolvedSubscription = await subscription;\n      resolvedSubscription?.close();\n    };\n  }, [dispatch, gunPublicKey, recipientPublicKey]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeIncomingMessages();\n\n    return unsubscribe;\n  }, [subscribeIncomingMessages]);\n\n  const contactName = useMemo(() => {\n    if (pendingSentRequest) {\n      return processDisplayName(\n        pendingSentRequest.pk,\n        pendingSentRequest.displayName\n      );\n    }\n\n    if (pendingReceivedRequest) {\n      return processDisplayName(\n        pendingReceivedRequest.pk,\n        pendingReceivedRequest.displayName\n      );\n    }\n\n    if (contact) {\n      return processDisplayName(contact.pk, contact.displayName);\n    }\n\n    return \"\";\n  }, [pendingSentRequest, pendingReceivedRequest, contact]);\n\n  return (\n    <div className=\"page-container chat-page\">\n      <MainNav solid pageTitle={contactName} enableBackButton />\n      <div className=\"chat-messages-container\">\n        {messages?.map(message => (\n          <ChatMessage\n            text={message.body}\n            receivedMessage={!message.outgoing}\n            status={message.status}\n            timestamp={message.timestamp}\n          />\n        ))}\n      </div>\n      {pendingReceivedRequest ? (\n        <div className=\"chat-permission-bar\">\n          <p className=\"chat-permission-bar-title unselectable\">\n            {contactName} has sent you a chat request!\n          </p>\n          <p className=\"chat-permission-bar-text\">\n            Once you accept the request, you'll be able to chat and send\n            invoices to {contactName}\n          </p>\n          <div className=\"chat-permission-bar-actions unselectable\">\n            <div\n              className=\"chat-permission-bar-action chat-permission-bar-action-accept\"\n              onClick={acceptRequest}\n            >\n              Accept\n            </div>\n            <div className=\"chat-permission-bar-action chat-permission-bar-action-decline\">\n              Decline\n            </div>\n          </div>\n        </div>\n      ) : pendingSentRequest ? (\n        <div className=\"chat-permission-bar\">\n          <p className=\"chat-permission-bar-title\">\n            Your request has been sent to {contactName} successfully\n          </p>\n          <p className=\"chat-permission-bar-text unselectable\">\n            Once {contactName} accepts the request, you'll be able to chat with\n            them\n          </p>\n        </div>\n      ) : (\n        <div className=\"chat-bottom-bar\">\n          <div className=\"chat-input-container\">\n            <div className=\"chat-input-btn unselectable\">\n              <img src={BitcoinLightning} alt=\"Menu\" />\n            </div>\n            <TextArea\n              className=\"chat-input\"\n              type=\"text\"\n              enterKeyHint=\"send\"\n              onKeyPress={submitMessage}\n              onChange={handleInputChange}\n              value={message}\n              height={20}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"sourceRoot":""}