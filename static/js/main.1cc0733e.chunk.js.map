{"version":3,"sources":["actions/OrdersActions.js","common/Loader/index.js","utils/Http.js","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.js","reducers/DrawerReducer.js","reducers/ContentReducer.js","reducers/FeesReducer.js","reducers/FeedReducer.js","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/index.ts","actions/AuthActions.ts","utils/WebSocket.js","actions/ChatActions.js","actions/WalletActions.js","utils/JSON.ts","utils/Encryption.ts","actions/NodeActions.js","actions/ContentActions.js","common/Drawer/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js","actions/UserProfilesActions.ts","actions/FeedActions.js","schema/index.ts","utils/FieldError.ts","utils/Error.ts","actions/EncryptionActions.js","actions/DrawerActions.js","actions/FeesActions.js","utils/Gun.js","utils/Date.ts","utils/index.ts","utils/String.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","serviceID","dispatch","a","id","Http","post","path","value","data","ok","newID","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","rifle","query","publicKey","reconnect","onData","services","servicesEntries","forEach","get","service","type","serviceInfo","buyService","owner","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","window","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","store","hostKeys","getState","encryption","hostId","node","remotePublicKey","process","REACT_APP_SHOCK_ENCRYPTION_ECC","warn","Encryption","message","stringify","encryptedMessage","decryptResponse","userKeys","localPrivateKey","privateKey","decryptedMessage","interceptors","request","use","authToken","deviceId","localRequest","url","indexOf","headers","common","Authorization","method","toUpperCase","includes","error","reject","INITIAL_STATE","hostIP","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","webClientPrefix","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","SET_ATTEMPTS_DONE","AUTH_ACTIONS","LOGOUT","SET_WEBCLIENT_PREFIX","authenticated","authStep","defaultSteps","manual","shockWizard","shockCloud","auth","SET_AUTHENTICATED","SET_AUTH_STEP","SET_AUTH_METHOD","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","lightningInfo","_getUnifiedTransactionDate","item","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","filter","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","sort","b","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","LOAD_LIGHTNING_INFO","contacts","messages","sentRequests","receivedRequests","requestBlacklist","_identicalMessages","oldMessage","newMessage","localId","_sortMessages","timestamp","_processNewMessage","status","outgoing","userMessages","recipientPublicKey","existingMessage","body","sortedMessages","chat","LOAD_CHAT_DATA","LOAD_SENT_REQUESTS","requestPublicKeys","pk","pendingRequests","loading","LOAD_RECEIVED_REQUESTS","SENT_REQUEST","avatar","changedAddress","displayName","Date","now","ACCEPT_HANDSHAKE_REQUEST","requestId","DECLINE_HANDSHAKE_REQUEST","trim","SENDING_MESSAGE","Schema","SENDING","SENT_MESSAGE","SENT","FAILED_MESSAGE","FAILED","RECEIVED_MESSAGE","RECEIVED","CHAT_WAS_DELETED","produce","draft","idx","findIndex","c","splice","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","streamPostId","streamContentId","streamStatusUrl","publishedContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","SET_SEED_PROVIDER_PUB","ADD_PUBLISHED_CONTENT","res","contentTmp","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","userToken","availableTmp","push","REMOVE_USED_TOKEN","index","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","user","private","posts","feed","RESET_FOLLOWS","ADD_FOLLOW","existingFollow","find","follow","REMOVE_FOLLOW","UPDATE_FOLLOW","key","profile","ADD_USER_POST","receivedPost","authorId","userPosts","existingPostIndex","tmp","DELETE_USER_POST","LOAD_POSTS","LOAD_SHARED_POST","sharerId","updatedPosts","originalPost","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","NODE_ACTIONS","Common","RESET_USER_PROFILES","LOAD_USER_PROFILE","REMOVE_USER_PROFILE","profiles","UPDATE_USER_PROFILE","newProfile","oldProfile","CHAT_ACTIONS","req","myServices","boughtServices","orders","servicesTmp","selectedService","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","users","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectFollows","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","debug","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","RESET_AUTH_INFO","setAuthenticated","setAuthStep","step","setAuthMethod","logout","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","transports","rifleSubscriptions","Map","GunSocket","LNDSocket","connectSocket","host","disconnectSocket","socketOptions","encryptionId","SocketIO","connect","GunOn","encryptedOn","event","subscription","subscriptionId","onError","on","socket","off","close","decryptEventCallback","err","callback","encryptedEmit","eventName","emit","encryptedData","responses","decryptedResponses","subscribeSocket","resolve","then","token","unsubscribeRifleById","unsubscribeEvent","delete","unsubscribeRifleByQuery","Array","from","$shock","set","rifleCleanup","subscriptions","unsubscribe","getChats","chats","recipientAvatar","recipientDisplayName","didDisconnect","reduce","initialMessagePrefix","getSentRequests","getReceivedRequests","recipientChangedRequestAddress","SET_CHAT_CONTACTS","SET_CHAT_MESSAGES","loadChatData","loadSentRequests","loadReceivedRequests","requestorPK","requestorAvatar","requestorDisplayName","subscribeChatMessages","userPublicKey","incomingId","rawMsg","msg","incomingMessages","acceptHandshakeRequest","put","accept","sendHandshakeRequest","sendMessage","tempId","DateTime","utc","toMillis","chatWasDeleted","fetchWalletBalance","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","FetchLightningInfo","safeParseJSON","nonEncryptedEvents","convertBase64ToBuffer","Buffer","convertBufferToBase64","processKey","Uint8Array","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","FieldError","field","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","fetchNodeHealth","Error","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","connectHost","resetData","done","health","baseURL","throttledExchangeKeyPair","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","timeout","decodedToken","jwtDecode","authorization","exp","parseError","createWallet","setWebclientPrefix","prefix","setSeedProviderPub","pub","setSeedInfo","cleanUrl","endsWith","slice","infoS","addPublishedContent","toSet","unlockContent","postID","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","addAvailableToken","removeUnavailableToken","addStreamToken","Drawer","useDispatch","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","createPostPage","GoLivePage","OtherUserPage","Story","Stories","QRScannerPage","BackupsPage","PrivateRoute","component","authorizedComponent","App","f","useEffect","videojs","addLanguage","tokenExpired","JWTDecode","subscribeUserProfile","unsubscribeUserProfile","fallback","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","subscribedProfiles","Set","updateUserProfile","has","info","binarySub","Utils","header","RESET_FEED","POST_TIPPED","removeFollow","addFollow","loadSharedPost","originalPostId","originalPublicKey","sharerPublicKey","tipSet","tipsSet","values","lenSet","length","tot","acc","val","tipCounter","tipValue","USER_POSTS_QUERY_SUFFIX","subscribeUserPosts","postEntries","newPosts","GUN_PROPS","deletedPosts","USER_SHARED_POSTS_QUERY_SUFFIX","subscribeSharedUserPosts","shared","originalAuthor","processedPost","shareDate","undefined","FOLLOWS_QUERY","subscribeFollows","unsubscribeFollows","sendTipPost","postId","deleteUserPost","CHAT_MESSAGE_STATUS","isSharedPost","obj","stack","errorMessage","exchangingKeypair","addUserKeyPair","addHostKey","getDeviceId","APIPublicKey","result","openDrawer","loadFeeRates","useForceUpdate","useState","setTick","tick","logger","resizeImage","img","desiredLongEdge","compression","canvas","createElement","width","Math","round","getContext","drawImage","toDataURL","processImageFile","file","startsWith","TypeError","size","rej","reader","FileReader","onload","e","target","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","src","image","resizedImage","normalizeURL","_url","__url","_","protocol","getContact","contact","EMPTY_FN","useBooleanState","initialState","setState","_state","capitalizeText","split","word","toLowerCase","join","processDisplayName","suffix"],"mappings":"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","file":"static/js/main.1cc0733e.chunk.js","sourcesContent":["import Http from \"../utils/Http\";\nimport {\n  rifle,\n  rifleSocketExists,\n  unsubscribeRifleById\n} from \"../utils/WebSocket\";\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE: \"service/add/bought\"\n};\n\nexport const createService = (\n  clear,\n  encrypted,\n  serviceID\n) => async dispatch => {\n  let id = serviceID;\n  if (serviceID) {\n    const { data } = await Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}`,\n      value: clear\n    });\n    const { ok } = data;\n    if (!ok) {\n      return \"\";\n    }\n  } else {\n    const { data } = await Http.post(\"/api/gun/set\", {\n      path: \"$user>offeredServices\",\n      value: clear\n    });\n    const { ok, id: newID } = data;\n    if (!ok) {\n      return \"\";\n    }\n    id = newID;\n  }\n\n  const all = Object.entries(encrypted).map(([name, value]) => {\n    if (!value) {\n      return;\n    }\n    console.log(`setting: ${name} to ${value}`);\n    return Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}>${name}`,\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value\n      }\n    });\n  });\n  await Promise.all(all);\n  const { serviceType } = clear;\n  //update the offered service\n  if (serviceType === \"torrentSeed\" || serviceType === \"streamSeed\") {\n    console.log(\"updating profile with service\");\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>Profile>SeedServiceProvided`,\n      value: id\n    });\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id;\n};\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post(\"/api/gun/put\", {\n    path: `$user>offeredServices>${id}`,\n    value: null\n  });\n};\n\nexport const subscribeMyServices = () => dispatch => {\n  const query = `$user::offeredServices::on`;\n  const subscription = rifle({\n    query,\n    publicKey: \"\",\n    reconnect: false,\n    onData: async services => {\n      const servicesEntries = Object.entries(services);\n      console.log(servicesEntries);\n\n      servicesEntries.forEach(async ([id]) => {\n        if (id === \"_\") {\n          return;\n        }\n        const { data: service } = await Http.get(\n          `/api/gun/user/load/offeredServices>${id}`\n        );\n        console.log(service.data);\n        if (service.data === null) {\n          dispatch({\n            type: ACTIONS.REMOVE_MY_SERVICE,\n            data: id\n          });\n          return;\n        }\n        dispatch({\n          type: ACTIONS.ADD_MY_SERVICE,\n          data: { id, serviceInfo: service.data }\n        });\n      });\n    }\n  });\n\n  return subscription;\n};\n\nexport const buyService = (\n  owner,\n  serviceID,\n  servicePrice\n) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"service\",\n    amt: Number(servicePrice),\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: serviceID\n  });\n  console.log(data);\n  const orderAck = JSON.parse(data.orderAck.response);\n  dispatch({\n    type: ACTIONS.ADD_BOUGHT_SERVICE,\n    data: { orderAck, owner, serviceID }\n  });\n  return orderAck;\n};\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.scoped.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\")\n    .matches;\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","import Http from \"axios\";\nimport * as Encryption from \"./Encryption\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\") {\n    return config;\n  }\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return response;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n    }\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false,\n  webClientPrefix:\"https://shock.pub\"\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    case ACTIONS.SET_WEBCLIENT_PREFIX:{\n      return {...state, webClientPrefix:action.data}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: [],\n  lightningInfo:{},\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    case ACTIONS.LOAD_LIGHTNING_INFO:{\n      const {data}  = action\n      return {\n        ...state,\n        lightningInfo:data\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\nimport produce from \"immer\";\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n */\n/**\n * @template S\n * @typedef {import('redux').Reducer<S, AnyAction>} Reducer\n */\n\nimport * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').ReceivedRequest} ReceivedRequest\n * @typedef {import(\"../schema\").SentRequest} SentRequest\n *\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').LoadSentRequestsAction} LoadSentRequestsAction\n */\n\nconst INITIAL_STATE = {\n  contacts: /** @type {Contact[]} */ ([]),\n  /**\n   * @type {Record<string, Schema.ChatMessage[]>}\n   */\n  messages: {},\n  sentRequests: /** @type {SentRequest[]} */ ([]),\n  receivedRequests: /** @type {ReceivedRequest[]} */ ([]),\n  requestBlacklist: []\n};\n\n/**\n * @param {Schema.ChatMessage} oldMessage\n * @param {Schema.ChatMessage} newMessage\n * @returns {boolean}\n */\nconst _identicalMessages = (oldMessage, newMessage) =>\n  oldMessage.id && newMessage.id\n    ? oldMessage.id === newMessage.id\n    : oldMessage.localId === newMessage.localId;\n\n/**\n * @param {Schema.ChatMessage[]} messages\n * @returns {Schema.ChatMessage[]}\n */\nconst _sortMessages = (messages = []) =>\n  messages.sort((a, b) => b.timestamp - a.timestamp);\n\n/**\n * @typedef {object} ProcessNewMessageParams\n * @prop {Schema.ChatMessage} data\n * @prop {Schema.ChatMessageStatus} status\n * @prop {typeof INITIAL_STATE} state\n * @prop {boolean=} outgoing\n */\n\n/**\n * @param {ProcessNewMessageParams} args\n * @returns {typeof INITIAL_STATE}\n */\nconst _processNewMessage = ({ data, status, state, outgoing = false }) => {\n  const userMessages = state.messages[data.recipientPublicKey] ?? [];\n  const [existingMessage] = userMessages.filter(message =>\n    _identicalMessages(message, data)\n  );\n\n  if (existingMessage) {\n    console.warn(\"Duplicate Message:\", existingMessage?.body);\n  }\n\n  if (existingMessage) {\n    const messages = userMessages.map(message =>\n      _identicalMessages(message, existingMessage)\n        ? { ...existingMessage, ...data, status, outgoing }\n        : message\n    );\n    const sortedMessages = _sortMessages(messages);\n\n    return {\n      ...state,\n      messages: {\n        ...state.messages,\n        [data.recipientPublicKey]: sortedMessages\n      }\n    };\n  }\n\n  const messages = [{ ...data, status, outgoing }, ...userMessages];\n  const sortedMessages = _sortMessages(messages);\n\n  return {\n    ...state,\n    messages: {\n      ...state.messages,\n      [data.recipientPublicKey]: sortedMessages\n    }\n  };\n};\n\n/**\n * @type {Reducer<typeof INITIAL_STATE>}\n */\nconst chat = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_CHAT_DATA: {\n      const {\n        data: { contacts, messages }\n      } = /** @type {LoadChatDataAction} */ (action);\n      return {\n        ...state,\n        contacts,\n        // TODO: Could not replacing messages altogether be bad?\n        messages: {\n          ...state.messages,\n          ...messages\n        }\n      };\n    }\n    case ACTIONS.LOAD_SENT_REQUESTS: {\n      const {\n        data: sentRequests\n      } = /** @type {LoadSentRequestsAction} */ (action);\n      const requestPublicKeys = state.sentRequests.map(request => request.pk);\n      const pendingRequests = state.sentRequests.filter(\n        request => request.loading && !requestPublicKeys.includes(request.pk)\n      );\n\n      return {\n        ...state,\n        sentRequests: [...pendingRequests, ...sentRequests]\n      };\n    }\n    case ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      const {\n        data: receivedRequests\n      } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n      return {\n        ...state,\n        receivedRequests\n      };\n    }\n    case ACTIONS.SENT_REQUEST: {\n      const { data: publicKey } = /** @type {SentRequestAction} */ (action);\n      return {\n        ...state,\n        sentRequests: [\n          ...state.sentRequests,\n          {\n            avatar: null,\n            changedAddress: false,\n            displayName: null,\n            id: \"loading/\" + publicKey,\n            pk: publicKey,\n            timestamp: Date.now(),\n            loading: true\n          }\n        ]\n      };\n    }\n    case ACTIONS.ACCEPT_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      return {\n        ...state,\n        receivedRequests: state.receivedRequests.filter(\n          request => request.id !== requestId\n        )\n      };\n    }\n    case ACTIONS.DECLINE_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      if (!requestId || !requestId.trim()) {\n        return state;\n      }\n\n      return {\n        ...state,\n        requestBlacklist: [...state.requestBlacklist, requestId]\n      };\n    }\n    case ACTIONS.SENDING_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENDING,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.SENT_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.FAILED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.FAILED,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.RECEIVED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.RECEIVED,\n        state\n      });\n    }\n    case ACTIONS.CHAT_WAS_DELETED: {\n      const {\n        data: { publicKey }\n      } = action;\n      return produce(state, draft => {\n        const idx = draft.contacts.findIndex(c => c.pk === publicKey);\n        idx > -1 && draft.contacts.splice(idx, 1);\n        delete draft.messages[publicKey];\n        draft.messages[publicKey] = [];\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import { ACTIONS } from \"../actions/ContentActions\";\nconst INITIAL_STATE = {\n  seedProviderPub:\n    \"qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg\",\n  streamUserToken: \"\",\n  streamLiveToken: \"\",\n  streamUrl: \"\",\n  streamPostId:\"\",\n  streamContentId:\"\",\n  streamStatusUrl:\"\",\n  publishedContent: {},\n  unlockedContent: {},\n  seedInfo: {},\n  availableTokens: {},\n  availableStreamTokens: {}\n};\n\nconst content = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n    case ACTIONS.ADD_PUBLISHED_CONTENT: {\n      const { data } = action;\n      const { content, res } = data;\n      const contentTmp = { ...state.publishedContent };\n      if (res.ok) {\n        contentTmp[res.id] = content;\n      }\n      return { ...state, publishedContent: contentTmp };\n    }\n    case ACTIONS.ADD_UNLOCKED_CONTENT: {\n      const { data } = action;\n      const unlockedTmp = { ...state.unlockedContent };\n      unlockedTmp[data.contentPath] = data.content;\n      return { ...state, unlockedContent: unlockedTmp };\n    }\n    case ACTIONS.ADD_STREAM: {\n      const { data } = action;\n      return {\n        ...state,\n        streamLiveToken: data.liveToken,\n        streamUserToken: data.seedToken,\n        streamUrl: data.streamUrl,\n        streamPostId: data.streamPostId,\n        streamContentId: data.streamContentId,\n        streamStatusUrl:data.streamStatusUrl\n      };\n    }\n    case ACTIONS.REMOVE_STREAM: {\n      return { ...state, streamLiveToken: \"\", streamUserToken: \"\",streamUrl:'',streamPostId:'',streamContentId:'',streamStatusUrl:'' };\n    }\n    case ACTIONS.SET_SEED_INFO: {\n      const { data } = action;\n      return { ...state, seedInfo: data };\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_USED_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableTokens: availableTmp };\n      }\n      return state;\n    }\n    case ACTIONS.ADD_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableStreamTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableStreamTokens: availableTmp };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import { ACTIONS } from \"../actions/FeesActions\";\n\nconst INITIAL_STATE = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n  rate: \"halfHourFee\",\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Follow} Follow\n */\n\nimport { ACTIONS } from \"../actions/FeedActions\";\n/**\n * @typedef {import('../schema').Post} Post\n * @typedef {import('../schema').SharedPost} SharedPost\n */\n\nconst INITIAL_STATE = {\n  follows: /** @type {Follow[]} */ ([\n    {\n      user:\n        \"qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg\",\n      status: \"ok\",\n      private: false\n    }\n  ]),\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: /** @type {Record<string, Array<Post|SharedPost>>} */ ({})\n};\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst feed = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FOLLOWS: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.ADD_USER_POST: {\n      const { data } = action;\n      /** @type {SharedPost} */\n      const receivedPost = data;\n      const authorId = receivedPost.authorId;\n      const userPosts = state.posts[authorId] ?? [];\n      const existingPostIndex = userPosts.findIndex(\n        post => receivedPost.id === post.id\n      );\n\n      const tmp = [...userPosts];\n\n      if (existingPostIndex !== -1) {\n        tmp[existingPostIndex] = receivedPost;\n      } else {\n        tmp.push(receivedPost);\n      }\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: tmp\n        }\n      };\n    }\n    case ACTIONS.DELETE_USER_POST: {\n      const { id, authorId } = action.data;\n      const userPosts = (state.posts[authorId] ?? []).filter(\n        post => post.id !== id\n      );\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: userPosts\n        }\n      };\n    }\n    case ACTIONS.LOAD_POSTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        posts: data\n      };\n    }\n    case ACTIONS.LOAD_SHARED_POST: {\n      const { data } = action;\n      const { id, sharerId } = data;\n      const userPosts = state.posts[sharerId] ?? [];\n      const updatedPosts = userPosts.map(post => {\n        if (post.id === id && post.type === \"shared\") {\n          return {\n            ...post,\n            originalPost: data\n          };\n        }\n\n        return post;\n      });\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [sharerId]: updatedPosts\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as CHAT_ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import(\"../actions/ChatActions\").LoadSentRequestsAction} LoadSentRequestsAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n */\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_USER_PROFILE: {\n      const { publicKey, profile } = action.data;\n\n      if (!publicKey || !profile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey],\n          ...profile\n        }\n      };\n    }\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { publicKey, profile: newProfile } = action.data;\n      const oldProfile = state[publicKey];\n\n      if (!oldProfile || !newProfile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...oldProfile,\n          ...newProfile\n        }\n      };\n    }\n    case CHAT_ACTIONS.LOAD_CHAT_DATA: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadChatDataAction} */ (action);\n\n        data.contacts.forEach(c => {\n          draft[c.pk] = {\n            ...Common.createEmptyUser(c.pk),\n            ...draft[c.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_SENT_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadSentRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.SENT_REQUEST: {\n      return produce(state, draft => {\n        const { data: pk } = /** @type {SentRequestAction} */ (action);\n\n        if (!draft[pk]) {\n          draft[pk] = Common.createEmptyUser(pk);\n        }\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n  myServices: {},\n  services: {},\n  boughtServices: {}\n};\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const { id, serviceInfo } = action.data;\n      const tmp = { ...state.myServices };\n      tmp[id] = serviceInfo;\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE: {\n      const id = action.data;\n      const tmp = { ...state.myServices };\n      delete tmp[id];\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE: {\n      const { orderAck, owner, serviceID } = action.data;\n      const servicesTmp = { ...state.boughtServices };\n\n      if (!servicesTmp[owner]) {\n        servicesTmp[owner] = {};\n      }\n      const selectedService = servicesTmp[owner];\n      if (!selectedService[serviceID]) {\n        selectedService[serviceID] = [];\n      }\n      selectedService[serviceID].push(orderAck);\n      return { ...state, boughtServices: servicesTmp };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","import { combineReducers } from \"redux\";\nimport * as Common from \"shock-common\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\";\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders: OrdersReducer,\n  users: () => {\n    return {} as Record<string, Common.User>;\n  }\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = (publicKey: string) => (\n  state: State\n): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey);\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n","import { State } from \"../../reducers\";\n\nexport const selectFollows = (state: State) => state.feed.follows;\n","import { createStore, applyMiddleware, compose, AnyAction } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport { useSelector as origUseSelector } from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport * from \"./selectors\";\n","export const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\"\n};\n\nexport const setAuthenticated = status => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTHENTICATED,\n    data: status\n  });\n};\n\nexport const setAuthStep = step => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_STEP,\n    data: step\n  });\n};\n\nexport const setAuthMethod = method => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_METHOD,\n    data: method\n  });\n};\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Common from \"shock-common\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true,\n  transports: [\"websocket\"]\n};\n\nconst rifleSubscriptions = new Map();\n\nexport let GunSocket = null;\n\nexport let LNDSocket = null;\n\nexport const connectSocket = async (host = \"\", reconnect = false) => {\n  if (GunSocket && LNDSocket && !reconnect) {\n    return { GunSocket, LNDSocket };\n  }\n\n  if (GunSocket && LNDSocket && reconnect) {\n    disconnectSocket(GunSocket);\n    disconnectSocket(LNDSocket);\n  }\n\n  const { store } = await import(\"../store\");\n  const socketOptions = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId\n    }\n  };\n  GunSocket = SocketIO.connect(`${host}/gun`, socketOptions);\n  LNDSocket = SocketIO.connect(`${host}/lndstreaming`, socketOptions);\n\n  const GunOn = encryptedOn(GunSocket);\n\n  // Subscribe to Rifle query events as soon as the socket is connected\n  GunOn(\"query:data\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onData?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunOn(\"query:error\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onError?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunSocket.on(Common.NOT_AUTH, () => {\n    store.dispatch(setAuthenticated(false));\n  });\n\n  return { GunSocket, LNDSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: data\n    });\n\n    callback(err, decryptedMessage);\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.emit(eventName, message, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message: JSON.stringify(message)\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        if (!response) {\n          return response;\n        }\n\n        if (response && !Encryption.isEncryptedMessage(response)) {\n          console.warn(\"Non-encrypted socket message\", response);\n          return response;\n        }\n\n        return Encryption.decryptMessage({\n          privateKey: localPrivateKey,\n          encryptedMessage: response\n        });\n      })\n    );\n\n    callback(...decryptedResponses);\n  });\n};\n\nconst subscribeSocket = ({ eventName, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const on = encryptedOn(GunSocket);\n        const emit = encryptedEmit(GunSocket);\n\n        emit(\n          `subscribe:${eventName}`,\n          {\n            token: store.getState().node.authToken\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              reject(err);\n              return;\n            }\n          }\n        );\n\n        on(eventName, data => {\n          if (callback) {\n            callback(null, data);\n            return;\n          }\n          resolve(data);\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const unsubscribeRifleById = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n\n  if (cachedSocket) {\n    unsubscribeEvent(subscriptionId);\n    rifleSubscriptions.delete(subscriptionId);\n  }\n};\n\nexport const unsubscribeRifleByQuery = query => {\n  const subscriptionEntries = Array.from(rifleSubscriptions.entries());\n\n  subscriptionEntries.map(([id, subscription]) => {\n    if (subscription.query === query) {\n      console.log(\"Unsubscribing by query:\", subscription);\n      unsubscribeRifleById(id);\n      return true;\n    }\n\n    return false;\n  });\n};\n\nexport const unsubscribeEvent = subscriptionId =>\n  new Promise(resolve => {\n    const emit = encryptedEmit(GunSocket);\n    emit(\n      \"unsubscribe\",\n      {\n        subscriptionId\n      },\n      () => {\n        console.debug(\n          `[SOCKET] Unsubscribed from event successfully! (${subscriptionId})`\n        );\n        resolve(true);\n      }\n    );\n  });\n\nexport const rifleSocketExists = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} query\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {boolean=} reconnect\n * @prop {(data, key) => void} onData\n * @prop {((error) => void)=} onError\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.onData(callback)` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map().once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<{ off: () => void }>}\n */\nexport const rifle = ({ query, publicKey, reconnect, onData, onError }) =>\n  new Promise((resolve, reject) => {\n    import(\"../store\").then(({ store }) => {\n      if (reconnect) {\n        unsubscribeRifleByQuery(query);\n      }\n\n      const emit = encryptedEmit(GunSocket);\n\n      emit(\n        \"subscribe:query\",\n        {\n          $shock: query,\n          token: store.getState().node.authToken,\n          publicKey\n        },\n        (err, data) => {\n          if (err) {\n            console.error(`Gun rifle error (${query})`);\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          rifleSubscriptions.set(data.subscriptionId, {\n            onData,\n            onError,\n            query\n          });\n\n          resolve({\n            off: () => unsubscribeRifleById(data.subscriptionId)\n          });\n        }\n      );\n    });\n  });\n\n/**\n *\n * @param {Promise<() => void>} subscription\n */\nexport const rifleCleanup = (...subscriptions) => () => {\n  subscriptions.map(subscription =>\n    subscription.then(unsubscribe => {\n      unsubscribe.off();\n    })\n  );\n};\n\n/**\n * @returns {{ messages: any , contacts: Contact[]}}\n */\nexport const getChats = async ({ authToken }) => {\n  try {\n    const chats = await subscribeSocket({ authToken, eventName: \"chats\" });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName,\n      didDisconnect: chat.didDisconnect\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\nexport const getSentRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const sentRequests = await subscribeSocket({\n      hostIP,\n      authToken,\n      eventName: \"sentRequests\",\n      callback\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getReceivedRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const receivedRequests = await subscribeSocket({\n      hostIP,\n      authToken,\n      eventName: \"receivedRequests\",\n      callback\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","// @ts-check\nimport Http from \"../utils/Http\";\nimport { DateTime } from \"luxon\";\nimport { v4 as uuidv4 } from \"uuid\";\n/**\n * @typedef {import('shock-common').Message} RawMessage\n */\n\nimport {\n  getChats,\n  getReceivedRequests,\n  getSentRequests,\n  rifle\n} from \"../utils/WebSocket\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport * as Schema from \"../schema\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').SentRequest} SentRequest\n * @typedef {import(\"../schema\").ReceivedRequest} ReceivedRequest\n * @typedef {import('../schema').ChatMessage} ChatMessage\n */\n\nexport const ACTIONS = {\n  LOAD_CHAT_DATA: /** @type {\"chat/loadData\"} */ (\"chat/loadData\"),\n  LOAD_SENT_REQUESTS: /** @type {\"chat/loadSentRequests\"} */ (\"chat/loadSentRequests\"),\n  LOAD_RECEIVED_REQUESTS: /** @type {\"chat/loadReceivedRequests\"} */ (\"chat/loadReceivedRequests\"),\n  SET_CHAT_CONTACTS: \"chat/contacts\",\n  SET_CHAT_MESSAGES: \"chat/messages\",\n  SENT_REQUEST: /** @type {\"chat/request/sent\"} */ (\"chat/request/sent\"),\n  ACCEPT_HANDSHAKE_REQUEST: \"chat/request/accept\",\n  DECLINE_HANDSHAKE_REQUEST: \"chat/request/decline\",\n  SENDING_MESSAGE: \"chat/message/sending\",\n  SENT_MESSAGE: \"chat/message/sent\",\n  FAILED_MESSAGE: \"chat/message/failed\",\n  RECEIVED_MESSAGE: /** @type {\"chat/message/received\"} */ (\"chat/message/received\"),\n  CHAT_WAS_DELETED: /** @type {'chat/deleted'} */ (\"chat/deleted\")\n};\n\n/**\n * @typedef {object} SentRequestAction\n * @prop {typeof ACTIONS.SENT_REQUEST} type\n * @prop {string} data The public key.\n */\n\n/**\n * @typedef {object} LoadChatDataAction\n * @prop {typeof ACTIONS.LOAD_CHAT_DATA} type\n * @prop {{ messages: Record<string, ChatMessage[]> , contacts: Contact[] }} data\n */\n\n/**\n * @typedef {object} LoadSentRequestsAction\n * @prop {typeof ACTIONS.LOAD_SENT_REQUESTS} type\n * @prop {SentRequest[]} data\n */\n\n/**\n * @typedef {object} LoadReceivedRequestsAction\n * @prop {typeof ACTIONS.LOAD_RECEIVED_REQUESTS} type\n * @prop {ReceivedRequest[]} data\n */\n\n/**\n * @typedef {object} ReceivedMessageAction\n * @prop {typeof ACTIONS.RECEIVED_MESSAGE} type\n * @prop {ChatMessage} data\n */\n\nexport const loadChatData = () => async (dispatch, getState) => {\n  const { authToken } = getState().node;\n  const data = await getChats({ authToken });\n  console.log(\"LOAD_CHAT_DATA:\", data);\n\n  dispatch({\n    type: ACTIONS.LOAD_CHAT_DATA,\n    data\n  });\n};\n\nexport const loadSentRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getSentRequests({ hostIP, authToken }, (err, sentRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"sentRequests:\", sentRequests);\n\n    /** @type {LoadSentRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_SENT_REQUESTS,\n      data: sentRequests.map(request => {\n        /** @type {SentRequest} */\n        const req = {\n          id: request.id,\n          pk: request.recipientPublicKey,\n          avatar: request.recipientAvatar,\n          displayName: request.recipientDisplayName,\n          changedAddress: request.recipientChangedRequestAddress,\n          timestamp: request.timestamp,\n          loading: false\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const loadReceivedRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getReceivedRequests({ hostIP, authToken }, (err, receivedRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"receivedRequests:\", receivedRequests);\n\n    /** @type {LoadReceivedRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n      data: receivedRequests.map(request => {\n        /** @type {ReceivedRequest} */\n        const req = {\n          id: request.id,\n          pk: request.requestorPK,\n          avatar: request.requestorAvatar,\n          displayName: request.requestorDisplayName,\n          timestamp: request.timestamp\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const subscribeChatMessages = (\n  userPublicKey,\n  recipientPublicKey\n) => async dispatch => {\n  const { data: incomingId } = await Http.get(\n    `/api/gun/user/once/userToIncoming>${recipientPublicKey}`,\n    {\n      headers: {\n        \"public-key-for-decryption\": userPublicKey\n      }\n    }\n  );\n\n  if (!incomingId.data) {\n    console.warn(\"Unable to retrieve incoming ID for selected contact\");\n    return null;\n  }\n\n  const incomingMessages = await rifle({\n    query: `${recipientPublicKey}::outgoings>${incomingId.data}>messages::map.on`,\n    publicKey: recipientPublicKey,\n    onData: (message, id) => {\n      if (!message.body || message.body === initialMessagePrefix) {\n        return;\n      }\n      /** @type {RawMessage} */\n      const rawMsg = message;\n\n      /** @type {ChatMessage} */\n      const msg = {\n        body: rawMsg.body,\n        id,\n        localId: id,\n        outgoing: false,\n        recipientPublicKey,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        timestamp: rawMsg.timestamp\n      };\n\n      /** @type {ReceivedMessageAction} */\n      const action = {\n        type: ACTIONS.RECEIVED_MESSAGE,\n        data: msg\n      };\n\n      dispatch(action);\n    }\n  });\n\n  return incomingMessages;\n};\n\nexport const acceptHandshakeRequest = requestId => async dispatch => {\n  const { data } = await Http.put(`/api/gun/requests/${requestId}`, {\n    accept: true\n  });\n\n  dispatch({\n    type: ACTIONS.ACCEPT_HANDSHAKE_REQUEST,\n    data: requestId\n  });\n\n  return data;\n};\n\nexport const sendHandshakeRequest = publicKey => async (dispatch, getState) => {\n  const { data } = await Http.post(`/api/gun/requests`, {\n    publicKey\n  });\n\n  /** @type {SentRequest[]} */\n  const sentRequests = getState().chat.sentRequests;\n  const [userExists] = sentRequests.filter(request => request.pk === publicKey);\n\n  if (!userExists) {\n    /** @type {SentRequestAction} */\n    const action = {\n      type: ACTIONS.SENT_REQUEST,\n      data: publicKey\n    };\n    dispatch(action);\n  }\n\n  return data;\n};\n\nexport const sendMessage = ({\n  publicKey,\n  message,\n  localId = null\n}) => async dispatch => {\n  const tempId = localId ?? uuidv4();\n  try {\n    dispatch({\n      type: ACTIONS.SENDING_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n    const { data } = await Http.post(`/api/gun/chats/${publicKey}`, {\n      body: message\n    });\n    console.log(data);\n    dispatch({\n      type: ACTIONS.SENT_MESSAGE,\n      data: { ...data, localId: tempId, recipientPublicKey: publicKey }\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIONS.FAILED_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n  }\n};\n\n/**\n * @param {string} publicKey\n */\nexport const chatWasDeleted = publicKey => ({\n  type: ACTIONS.CHAT_WAS_DELETED,\n  data: {\n    publicKey\n  }\n});\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\",\n  LOAD_LIGHTNING_INFO: \"wallet/lightningInfo/load\",\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  try {\n    const { data } = await Http.get(`/api/lnd/balance`);\n\n    dispatch({\n      type: ACTIONS.LOAD_BALANCE,\n      data: {\n        channelBalance: data.channel_balance,\n        confirmedBalance: data.confirmed_balance,\n        pendingChannelBalance: data.pending_channel_balance\n      }\n    });\n  } catch (e) {\n    console.error(\n      `When trying to fetch the balance for the wallet, an error ocurred:`,\n      e\n    );\n  }\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\n      \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n    );\n    const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n    dispatch({\n      type: ACTIONS.LOAD_USD_RATE,\n      data: exchangeRate\n    });\n  } catch (e) {\n    console.error(`An error happened when trying to fetch the USD rate:`, e);\n  }\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { transactions } = getState().wallet;\n\n    if (\n      (transactions.page >= page && !reset) ||\n      transactions.totalPages < page\n    ) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/transactions\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred when fetching transactions (fetchTransactions()):`,\n      e\n    );\n  }\n};\n\nexport const fetchChannels = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n    dispatch({\n      type: ACTIONS.LOAD_CHANNELS,\n      data: data.channels\n    });\n  } catch (e) {\n    console.error(\n      `An ocurred ocurred when fetching channels (fetchChannels()):`,\n      e\n    );\n  }\n};\n\nexport const fetchPeers = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n    dispatch({\n      type: ACTIONS.LOAD_PEERS,\n      data: data.peers\n    });\n\n    return data;\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching peers (fetchPeers()) (will be re-thrown):`,\n      e\n    );\n    throw e;\n  }\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { invoices } = getState().wallet;\n\n    if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/invoices\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching invoices (fetchInvoices()):`,\n      e\n    );\n  }\n};\n\nconst fetchPayments = ({ page, itemsPerPage = 10, reset = false }) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    const { payments } = getState().wallet;\n\n    if ((payments.page >= page && !reset) || payments.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/payments\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_PAYMENTS : ACTIONS.LOAD_MORE_PAYMENTS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching payments (fetchPayments()):`,\n      e\n    );\n  }\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n  } catch (err) {\n    console.error(\n      `An error ocurred while connecting peer --| ${host} |-- with public key --| ${publicKey} |-- in connectPeer()`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    dispatch(fetchChannels());\n  } catch (err) {\n    console.error(\n      `An error ocurred while opening a channel (openChannel()) with public key --| ${publicKey} |--, channel capacity: --| ${channelCapacity} |-- and push amount: --| ${pushAmount} |--:`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const FetchLightningInfo = () =>async dispatch => {\n  \n  try{\n    const {data}= await Http.get(\"/api/lnd/getinfo\");\n    dispatch({\n      type:ACTIONS.LOAD_LIGHTNING_INFO,\n      data\n    })\n  }catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n}\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Uint8Array;\n  ephemPublicKey: Uint8Array;\n  iv: Uint8Array;\n  mac: Uint8Array;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface DeriveKey {\n  localPrivateKey: Uint8Array | string;\n  remotePublicKey: Uint8Array | string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Uint8Array | string;\n  sharedKey: Uint8Array | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Uint8Array | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Uint8Array) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Uint8Array | string): Uint8Array => {\n  if (key instanceof Uint8Array) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName) ||\n  process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\";\n\nexport const generateKeyPair = () => {\n  const privateKey: Uint8Array = ECCrypto.generatePrivate();\n  const publicKey: Uint8Array = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const deriveKey = async ({\n  localPrivateKey,\n  remotePublicKey\n}: DeriveKey) => {\n  const sharedKey: Uint8Array = await ECCrypto.derive(\n    processKey(localPrivateKey),\n    processKey(remotePublicKey)\n  );\n  const sharedKeyBase64 = convertBufferToBase64(sharedKey);\n\n  return { sharedKey, sharedKeyBase64 };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  const processedPrivateKey = processKey(privateKey);\n  const decryptedMessageBuffer: Uint8Array = await ECCrypto.decrypt(\n    processedPrivateKey,\n    convertToEncryptedMessage(encryptedMessage)\n  );\n  const decryptedMessage = Buffer.from(decryptedMessageBuffer).toString();\n  const parsedMessage = safeParseJSON(decryptedMessage);\n\n  return parsedMessage;\n};\n","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { throttledExchangeKeyPair } from \"./EncryptionActions\";\nimport { connectSocket } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_WEBCLIENT_PREFIX:'node/setWebClientPrefix'\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nconst wait = ms => new Promise(r => setTimeout(r, ms));\n\nexport const fetchNodeHealth = hostIP => async dispatch => {\n  try {\n    const { data } = await Http.get(`${hostIP}/healthz`);\n    if (!data) {\n      throw new Error(\n        `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n      );\n    }\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (hostIP, resetData = true) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(throttledExchangeKeyPair())\n    ]);\n\n    connectSocket(host, true);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(`https://${sanitizedHostIP}`)(\n      dispatch\n    );\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(`http://${sanitizedHostIP}`)(\n    dispatch\n  );\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/auth\",\n      {\n        alias,\n        password\n      },\n      {\n        // Unlocking can take significantly longer than other endpoints\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/wallet\",\n      {\n        alias,\n        password\n      },\n      {\n        // Creating a wallet can take longer than any other endpoints.\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const setWebclientPrefix = prefix => dispatch => {\n  dispatch({\n    type:ACTIONS.SET_WEBCLIENT_PREFIX,\n    data:prefix\n  })\n}","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB: \"content/setSeedProviderPub\",\n  SET_SEED_INFO: \"content/setSeedInfo\",\n  ADD_PUBLISHED_CONTENT: \"content/addPublishedContent\",\n  ADD_UNLOCKED_CONTENT: \"content/addUnlocked\",\n  ADD_STREAM: \"content/addStream\",\n  REMOVE_STREAM: \"content/removeStream\",\n  ADD_AVAILABLE_TOKEN: \"content/addToken\",\n  REMOVE_USED_TOKEN: \"content/removeToken\",\n  ADD_STREAM_TOKEN: \"content/addStreamToken\",\n  REMOVE_STREAM_TOKEN: \"content/removeStreamToken\"\n};\n\nexport const setSeedProviderPub = pub => async dispatch => {\n  let value = {\n    $$__ENCRYPT__FOR: \"me\",\n    value: pub\n  };\n  if (!pub) {\n    value = \"\";\n  }\n  await Http.post(\"/api/gun/put\", {\n    path: \"$user>seedServiceProviderPubKey\",\n    value\n  });\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (seedUrl, seedToken) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0, -1) : seedUrl;\n  const infoS = JSON.stringify({ seedUrl: cleanUrl, seedToken });\n  await Http.post(\"/api/gun/put\", {\n    path: \"$user>seedServiceSeedData\",\n    value: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: infoS\n    }\n  });\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: { seedUrl: cleanUrl, seedToken }\n  });\n};\nexport const addPublishedContent = content => async dispatch => {\n  let toSet = content;\n  if (typeof content !== \"string\") {\n    toSet = JSON.stringify(content);\n  }\n  const { data } = await Http.post(\"/api/gun/set\", {\n    path: \"$user>publishedContent\",\n    value: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: toSet\n    }\n  });\n  dispatch({\n    type: ACTIONS.ADD_PUBLISHED_CONTENT,\n    data: { content, res: data }\n  });\n  return data;\n};\n\nexport const unlockContent = (amt, owner, postID) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"contentReveal\",\n    amt,\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: postID\n  });\n  const revealRes = JSON.parse(data.orderAck.response);\n  if (revealRes && revealRes.unlockedContents) {\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type: ACTIONS.ADD_UNLOCKED_CONTENT,\n          data: { contentPath: `${owner}>posts>${postID}`, content }\n        });\n      }\n    }\n  }\n};\nexport const addStream = ({seedToken, liveToken, streamUrl,streamPostId,streamContentId,streamStatusUrl}) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: { seedToken, liveToken, streamUrl,streamPostId,streamContentId,streamStatusUrl }\n  });\n};\nexport const removeStream = () => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeUnavailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <NavLink to=\"/Backups\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </NavLink>\n        </div>\n        <div className=\"drawer-bottom-section\">\n          <NavLink className=\"drawer-item\" to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n          <NavLink to=\"/QRScanner\" onClick={close}>\n            <i\n              onClick={onClickScan}\n              className=\"icon-solid-scan\"\n              style={{ color: \"var(--main-blue)\" }}\n            ></i>\n          </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, { Suspense, useEffect } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\nimport { loadReceivedRequests, loadSentRequests } from \"./actions/ChatActions\";\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as Store from \"./store\";\nimport \"./styles/App.global.css\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/publishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst createPostPage = React.lazy(() => import(\"./pages/Profile/createPost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/GoLive/GoLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst Story = React.lazy(() => import(\"./pages/Story\"));\nconst Stories = React.lazy(() => import(\"./pages/Stories\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\nconst BackupsPage = React.lazy(() => import(\"./pages/Backups\"));\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const contacts = Store.useSelector(({ chat }) => chat.contacts);\n  const sentRequests = Store.useSelector(({ chat }) => chat.sentRequests);\n  const receivedRequests = Store.useSelector(\n    ({ chat }) => chat.receivedRequests\n  );\n  const followedPublicKeys = Store.useSelector(Store.selectFollows).map(\n    f => f.user\n  );\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated) {\n      // TODO: Move to messages screen\n      dispatch(loadSentRequests());\n      dispatch(loadReceivedRequests());\n      // Get current user's profile on login\n      dispatch(subscribeUserProfile(publicKey));\n    } else {\n      dispatch(unsubscribeUserProfile(publicKey));\n    }\n  }, [authenticated, dispatch, publicKey]);\n\n  return (\n    <FullHeight className=\"ShockWallet\">\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:publicKey\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={createPostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey\"\n            exact\n            component={OtherUserPage}\n          />\n          <PrivateRoute path=\"/Backups\" exact component={BackupsPage} />\n          <Route path=\"/story\" exact component={Story} />\n          <Route path=\"/stories\" exact component={Stories} />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n    </FullHeight>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Http from \"axios\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./styles/index.global.css\";\n\nHttp.defaults.timeout = 10000;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import * as Common from \"shock-common\";\n\nimport * as Utils from \"../utils\";\nimport {\n  rifle,\n  rifleCleanup,\n  unsubscribeRifleByQuery\n} from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  LOAD_USER_PROFILE: \"userProfiles/profiles/load\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\",\n  UPDATE_USER_PROFILE: \"userProfiles/profiles/update\"\n};\n\nconst subscribedProfiles = new Set();\n\nexport const updateUserProfile = (\n  publicKey: string,\n  profile: Partial<Common.User>\n) => ({\n  type: ACTIONS.UPDATE_USER_PROFILE,\n  data: {\n    publicKey,\n    profile\n  }\n});\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => (\n  dispatch: (action: object) => void,\n  getState: () => {\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  if (subscribedProfiles.has(publicKey)) {\n    return () => {};\n  }\n\n  console.info(\"subbing user...\" + publicKey);\n  subscribedProfiles.add(publicKey);\n\n  const subscription = rifle({\n    query: `${publicKey}::Profile::on`,\n    reconnect: true,\n    onData: profile => {\n      const { [publicKey]: existingUser } = getState().userProfiles;\n\n      if (existingUser) {\n        dispatch({\n          type: ACTIONS.UPDATE_USER_PROFILE,\n          data: { publicKey, profile }\n        });\n        return profile;\n      }\n\n      dispatch({\n        type: ACTIONS.LOAD_USER_PROFILE,\n        data: { publicKey, profile }\n      });\n    }\n  });\n\n  const binarySub = rifle({\n    query: `${publicKey}::profileBinary::map.on`,\n    reconnect: true,\n    onData: (data, key: string) => {\n      if (key === \"avatar\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updateUserProfile(publicKey, {\n            avatar: data\n          })\n        );\n      } else if (key === \"header\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updateUserProfile(publicKey, {\n            header: data\n          })\n        );\n      } else {\n        Utils.logger.error(\n          `Unknown key: ${key} for user binary profile data gun RPC socket`\n        );\n      }\n    }\n  });\n\n  return () => {\n    rifleCleanup(subscription, binarySub)();\n    subscribedProfiles.delete(publicKey);\n  };\n};\n\nexport const unsubscribeUserProfile = (publicKey: string) => async () => {\n  unsubscribeRifleByQuery(`${publicKey}::Profile::on`);\n  unsubscribeRifleByQuery(`${publicKey}::profileBinary::map.on`);\n};\n","// @ts-check\nimport { GUN_PROPS } from \"../utils/Gun\";\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const loadSharedPost = (\n  originalPostId,\n  originalPublicKey,\n  sharerPublicKey\n) => async dispatch => {\n  const { data: post } = await Http.get(\n    `/api/gun/otheruser/${originalPublicKey}/load/posts>${originalPostId}`\n  );\n  dispatch(subscribeUserProfile(originalPublicKey));\n  const tipSet = post.data.tipsSet ? Object.values(post.data.tipsSet) : [];\n  const lenSet = tipSet.length;\n  const tot =\n    lenSet > 0 ? tipSet.reduce((acc, val) => Number(val) + Number(acc)) : 0;\n  dispatch({\n    type: ACTIONS.LOAD_SHARED_POST,\n    data: {\n      ...post.data,\n      authorId: originalPublicKey,\n      sharerId: sharerPublicKey,\n      id: originalPostId,\n      tipCounter: lenSet,\n      tipValue: tot\n    }\n  });\n};\n\nconst USER_POSTS_QUERY_SUFFIX = `::posts::on`;\n\nexport const subscribeUserPosts = publicKey => async dispatch => {\n  console.info(\"subbing to posts from:\" + publicKey);\n  const subscription = await rifle({\n    query: publicKey + USER_POSTS_QUERY_SUFFIX,\n    onData: posts => {\n      console.debug(`posts from: ${publicKey}: `, posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n      const deletedPosts = postEntries\n        .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      newPosts.forEach(async function fetchAndDispatchPost(id) {\n        try {\n          const { data: post } = await Http.get(\n            `/api/gun/otheruser/${publicKey}/load/posts>${id}`\n          );\n          console.info(`processing post: ${id} from ${publicKey}`);\n          const tipSet = post.data.tipsSet\n            ? Object.values(post.data.tipsSet)\n            : [];\n          const lenSet = tipSet.length;\n          const tot =\n            lenSet > 0\n              ? tipSet.reduce((acc, val) => Number(val) + Number(acc))\n              : 0;\n          dispatch({\n            type: ACTIONS.ADD_USER_POST,\n            data: {\n              ...post.data,\n              id,\n              authorId: publicKey,\n              type: \"post\",\n              tipCounter: lenSet,\n              tipValue: tot\n            }\n          });\n        } catch (e) {\n          console.error(\n            `When subscribed to posts from public key --| ${publicKey} |-- and trying to download the post with id: --| ${id} |-- an error ocurred:`,\n            e\n          );\n        }\n      });\n\n      deletedPosts.forEach(id =>\n        dispatch({\n          type: ACTIONS.DELETE_USER_POST,\n          data: {\n            id,\n            authorId: publicKey,\n            type: \"post\"\n          }\n        })\n      );\n    }\n  });\n  return subscription;\n};\n\nexport const unsubUserPosts = publicKey => async () => {\n  console.info(\"unsubbing to posts from:\" + publicKey);\n  unsubscribeRifleByQuery(publicKey + USER_POSTS_QUERY_SUFFIX);\n};\n\nconst USER_SHARED_POSTS_QUERY_SUFFIX = `::sharedPosts::on`;\n\nexport const subscribeSharedUserPosts = publicKey => async dispatch => {\n  const subscription = await rifle({\n    query: publicKey + USER_SHARED_POSTS_QUERY_SUFFIX,\n    onData: posts => {\n      console.debug(`shared posts from ${publicKey}: `, posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n      const deletedPosts = postEntries\n        .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      newPosts.forEach(async function fetchAndDispatchSharedPost(id) {\n        try {\n          const res = await Http.get(\n            `/api/gun/otheruser/${publicKey}/load/sharedPosts>${id}`\n          );\n          const { data: shared } = res;\n          if (!shared.data || !shared.data.originalAuthor) {\n            throw new Error(\n              `invalid shared post provided for user ${publicKey}`\n            );\n          }\n          /** @type {import('shock-common').SharedPostRaw} */\n          const post = res.data.data;\n\n          /** @type {import('../schema').SharedPost} */\n          const processedPost = {\n            authorId: publicKey,\n            id,\n            originalAuthor: post.originalAuthor,\n            shareDate: post.shareDate,\n            sharerId: publicKey,\n            originalPost: undefined,\n            type: \"shared\"\n          };\n          dispatch({\n            type: ACTIONS.ADD_USER_POST,\n            data: processedPost\n          });\n\n          console.debug(\"dispatching shared post load\");\n          dispatch(loadSharedPost(id, post.originalAuthor, publicKey));\n        } catch (e) {\n          console.error(`User: ${publicKey}\\npostID: ${id}\\n error:`, e);\n        }\n      });\n\n      deletedPosts.forEach(id =>\n        dispatch({\n          type: ACTIONS.DELETE_USER_POST,\n          data: {\n            id,\n            authorId: publicKey\n          }\n        })\n      );\n    }\n  });\n  return subscription;\n};\n\nexport const unsubUserSharedPosts = publicKey => () => {\n  unsubscribeRifleByQuery(publicKey + USER_SHARED_POSTS_QUERY_SUFFIX);\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async dispatch => {\n  const subscription = await rifle({\n    query: FOLLOWS_QUERY,\n    reconnect: true,\n    onData: async (follow, key) => {\n      console.info(`processing follow`);\n      console.info(follow);\n      if (typeof key !== \"string\") {\n        console.warn(`Invalid follow key received: ${key}`);\n        return;\n      }\n\n      if (!follow) {\n        dispatch(removeFollow(key));\n        return;\n      }\n\n      if (typeof follow.user !== \"string\") {\n        console.warn(`Invalid follow user received (${follow.user})`);\n        return;\n      }\n\n      dispatch(addFollow(follow));\n    }\n  });\n\n  console.debug(\"subbing follows\");\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  unsubscribeRifleByQuery(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n","import * as Common from \"shock-common\";\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  didDisconnect: boolean;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  type: \"post\";\n}\n\n/**\n * Different from the one in shock-common.\n */\nexport interface SharedPost extends Common.SharedPostRaw {\n  authorId: string;\n  sharerId: string;\n  id: string;\n  type: \"shared\";\n  /**\n   * Undefined when loading it.\n   */\n  originalPost?: Post;\n}\n\nexport const isSharedPost = (post: any): post is SharedPost => {\n  if (!Common.isObj(post)) {\n    return false;\n  }\n\n  const obj = (post as unknown) as SharedPost;\n\n  if (typeof obj.authorId !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.id !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.originalAuthor !== \"string\") {\n    return false;\n  }\n\n  return obj.type === \"shared\";\n};\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangingKeypair = null;\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(`/api/encryption/exchange`, {\n      publicKey: keyPair.publicKeyBase64,\n      deviceId\n    });\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n\nexport const throttledExchangeKeyPair = () => async dispatch => {\n  try {\n    if (!exchangingKeypair) {\n      exchangingKeypair = dispatch(exchangeKeyPair());\n    }\n\n    const result = await exchangingKeypair;\n\n    // eslint-disable-next-line require-atomic-updates\n    exchangingKeypair = null;\n\n    return result;\n  } catch (err) {\n    console.error(err);\n    exchangingKeypair = null;\n    throw err;\n  }\n};\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\nexport const setSource = source => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_SOURCE,\n    data: source\n  });\n\n  return source;\n};\n\nexport const setRate = rate => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_RATE,\n    data: rate\n  });\n\n  return rate;\n};\n","export const GUN_PROPS = [\"_\", \"#\"];\n","import React from \"react\";\n\nexport function useForceUpdate(): () => void {\n  const [, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return update;\n}\n","import * as Common from \"shock-common\";\nimport { useCallback, useState } from \"react\";\n\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args),\n  debug: (...args: any[]) => console.debug(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not a url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n\nexport const useBooleanState = (initialState: boolean) => {\n  const [state, setState] = useState<boolean>(initialState);\n  const toggle = useCallback(() => {\n    setState(_state => !_state);\n  }, []);\n\n  return [state, toggle] as const;\n};\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n"],"sourceRoot":""}