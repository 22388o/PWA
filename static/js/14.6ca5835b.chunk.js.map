{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/BottomBar/index.js","common/Post/components/Image/index.js","common/Line/index.tsx","common/Modal/components/ModalSubmit/index.js","common/AddBtn/index.js","common/ProfileDivider/index.tsx","common/ProfileDivider/css/ProfileDivider.module.css","images/clipboard.svg","images/qrcode.svg","pages/Feed/components/SendTipModal/index.js","pages/Feed/components/ShareModal/index.js","pages/Feed/components/UnlockModal/index.js","pages/OtherUser/css/OtherUser.module.css","pages/OtherUser/components/FollowBtn/FollowBtn.module.css","pages/OtherUser/components/SendReqBtn/SendReqBtn.module.css","common/ContentWall/ContentWall.tsx","images/logo-alone-2.png","pages/Feed/components/BuyServiceModal/index.js","pages/OtherUser/components/FollowBtn/FollowBtn.tsx","pages/OtherUser/components/SendReqBtn/SendReqBtn.tsx","pages/OtherUser/index.tsx"],"names":["ModalContent","children","style","contentClass","className","classNames","ModalTitle","title","toggleModal","Utils","forceRenderTitleBar","hideXBtn","onClick","OVERLAY_STYLE","borderRadius","Modal","modalOpen","modalTitle","contentStyle","disableBackdropClose","noFullWidth","blueBtn","disableBlueBtn","onClickBlueBtn","redBtn","disableRedBtn","onClickRedBtn","error","textIfLoading","closeModal","useCallback","handleBackdropClick","modal","open","container","Loader","overlay","text","disabled","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","group","fas","BottomBar","to","activeClassName","Image","id","item","index","postId","tipValue","tipCounter","hideRibbon","width","disableZoom","useState","zoomed","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","clearTimeout","timer","setTimeout","contentURL","decodeURIComponent","magnetURI","replace","mainImageStyle","opacity","imgNode","alt","data-torrent","data-file-key","src","onLoad","display","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","Line","color","length","useMemo","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","ModalSubmit","AddBtn","icon","iconURL","undefined","nestedMode","large","relative","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","labelElement","ProfileDivider","selected","showContentBtn","gStyles","styles","unselected","module","exports","SendTipModal","tipData","toggleOpen","dispatch","useDispatch","setError","loading","setLoading","amount","setAmount","tipSuccess","setTipSuccess","onInputChange","e","target","submitTip","a","preventDefault","sendTipPost","publicKey","postID","console","errorMessage","message","responseError","response","data","useEffect","onSubmit","ShareModal","shareData","success","setSuccess","submitShare","sharedPostRaw","originalAuthor","shareDate","Date","now","Http","post","path","ok","close","UnlockModal","unlockData","unlockSuccess","setUnlockSuccess","submitUnlock","unlockContent","MEDIA_STYLE","objectFit","ContentWall","history","useHistory","React","content","setContent","subscription","rifle","query","onError","JSON","stringify","onData","key","produce","draft","Schema","warn","slice","then","sub","off","orderedContent","Object","values","sort","b","timestamp","map","i","push","author","description","BuyServiceModal","service","buySuccess","setBuySuccess","copied","setCopied","submitBuy","servicePrice","owner","serviceID","serviceType","Number","buyService","revealRes","log","addAvailableToken","seedUrl","tokens","addStreamToken","copyRes","navigator","clipboard","writeText","FollowBtn","isFollowed","Store","find","f","user","changingStatus","setChangingStatus","handleFollow","res","status","delete","put","Error","alert","c","SendReqBtn","isInContact","handleClick","sendHandshakeRequest","Post","lazy","SharedPost","QR_IMAGE_SETTINGS","logoAlone","excavate","OtherUserPage","myGunPub","node","profileModalOpen","setProfileModalOpen","useParams","userPublicKey","selectedView","userServices","setUserServices","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","buyServiceModalData","setBuyServiceModalOpen","shareModalData","setShareModalData","isMe","subscribeFollows","unsubscribeFollows","subPosts","subSharedPosts","subscribeUserProfile","get","catch","toggleTipModal","toggleBuyServiceModal","buyData","toggleUnlockModal","toggleShareModal","posts","copyClipboard","handleViewChange","header","ShockAvatar","greyBorder","displayName","bio","Pad","amt","insideRow","Common","fallback","openTipModal","openUnlockModal","openShareModal","originalPostID","sharerPublicKey","sharedBy","authorId","openDeleteModal","entries","filter","serviceTitle","serviceDescription","serviceCondition","padding","bgColor","fgColor","size","imageSettings","ClipboardIcon","QRCodeIcon"],"mappings":"oLAUeA,EANM,SAAC,GAAD,QAAGC,gBAAH,MAAc,KAAd,MAAoBC,aAApB,MAA4B,GAA5B,MAAgCC,oBAAhC,MAA+C,GAA/C,SACnB,qBAAKC,UAAWC,IAAW,UAAWF,GAAeD,MAAOA,EAA5D,8BACGD,KCeUK,G,OAjBI,SAAC,GAAD,QACjBC,aADiB,MACT,GADS,MAEjBC,mBAFiB,MAEHC,IAFG,MAGjBC,2BAHiB,aAIjBC,gBAJiB,gBAMjBJ,GAASG,EACP,sBAAKN,UAAU,OAAf,+BACE,mBAAGA,UAAU,aAAb,8BAA2BG,KACzBI,GACA,qBAAKP,UAAU,aAAaQ,QAASJ,EAArC,8BACE,mBAAGJ,UAAU,eAAb,4BAIJ,OC4EAS,G,OAAgB,CACpBC,aAAc,SAGDC,IAxFD,SAAC,GAmBR,IAAD,IAlBJC,iBAkBI,SAjBJR,EAiBI,EAjBJA,YAiBI,IAhBJS,kBAgBI,MAhBS,GAgBT,EAfJhB,EAeI,EAfJA,SAeI,IAdJiB,oBAcI,MAdWT,IAcX,MAbJU,4BAaI,aAZJT,2BAYI,aAXJC,gBAWI,aAVJS,mBAUI,aATJC,eASI,MATM,GASN,MARJC,sBAQI,aAPJC,sBAOI,MAPad,IAOb,MANJe,cAMI,MANK,GAML,MALJC,qBAKI,aAJJC,qBAII,MAJYjB,IAIZ,MAHJN,oBAGI,MAHW,GAGX,MAFJwB,aAEI,MAFI,GAEJ,MADJC,qBACI,MADY,GACZ,EACEC,EAAaC,uBAAY,WAC7BtB,MACC,CAACA,IACEuB,EAAsBD,uBAAY,WACjCX,GACHX,MAED,CAACW,EAAsBX,IAC1B,OACE,sBAAKJ,UAAWC,IAAW,CAAE2B,OAAO,EAAMC,KAAMjB,IAAhD,+BACE,qBAAKZ,UAAU,WAAWQ,QAASmB,EAAnC,uBACA,sBACE3B,UAAWC,IAAW,CACpB6B,WAAW,EACX,0BAA2Bd,IAH/B,+BAMGQ,GACC,cAACO,EAAA,EAAD,CAAQC,SAAO,EAAClC,MAAOW,EAAewB,KAAMT,EAA5C,uBAGF,cAAC,EAAD,CACErB,MAAOU,EACPT,YAAaqB,EACbnB,oBAAqBA,EACrBC,SAAUA,EAJZ,uBAOCgB,GAAS,qBAAKvB,UAAW,+BAAhB,8BAAiDuB,IAE3D,cAAC,EAAD,CAAczB,MAAOgB,EAAcf,aAAcA,EAAjD,8BACuB,kBAAbF,EACN,mBAAGG,UAAU,oBAAb,8BAAkCH,IAElCA,IAIJ,sBAAKG,UAAU,gBAAf,+BACGiB,GACC,wBACEiB,SAAUhB,EACVlB,UAAWC,IAAW,YAAa,YACnCO,QAASW,EAHX,8BAKGF,IAIJG,GACC,wBACEc,SAAUb,EACVrB,UAAWC,IAAW,YAAa,WACnCO,QAASc,EAHX,8BAKGF,e,4FCdAe,IAjEI,SAAC,GAYb,IAAD,IAXJC,aAWI,MAXI,GAWJ,MAVJC,YAUI,MAVG,GAUH,EATJC,EASI,EATJA,SASI,IARJC,mBAQI,MARUlC,IAQV,MAPJmC,kBAOI,MAPS,GAOT,EANJC,EAMI,EANJA,MAMI,IALJC,iBAKI,MAL0D,OAK1D,MAJJC,YAII,MAJG,OAIH,MAHJC,eAGI,MAHM,QAGN,MAFJC,aAEI,aADJX,gBACI,SACJ,OACE,sBACElC,UAAWC,IAAW,CACpB6C,OAAO,EACP,iBAAkBZ,EAClB,cAAeW,IAJnB,+BAOGT,EAAQ,mBAAGpC,UAAU,cAAb,8BAA4BoC,IAAa,KAClD,sBACEpC,UAAWC,IAAW,CACpB,yBAAyB,EACzB,iCAA8C,aAAZ2C,IAHtC,+BAMe,aAAZA,EACC,0BACE5C,UAAU,mCACVqC,KAAMA,EACNC,SAAUA,EACVI,UAAWA,EACXD,MAAOA,EACPP,SAAUA,EANZ,uBASA,uBACElC,UAAU,cACV2C,KAAMA,EACNN,KAAMA,EACNC,SAAUA,EACVI,UAAWA,EACXD,MAAOA,EACPP,SAAUA,EAPZ,uBAUDK,GAAeC,EACd,qBAAKxC,UAAU,qBAAqBQ,QAAS+B,EAA7C,8BACE,mBACEvC,UAAWC,IAAW,aACpB,2BAA2B,EAC3B8C,KAAK,GACJP,GAAa,IAEhBhC,QAAS+B,EANX,yBASA,a,yHClEZ,mBAmCeS,IAjCG,kBAChB,sBAAKhD,UAAU,uBAAf,UACE,cAAC,IAAD,CACEA,UAAU,iBACViD,GAAG,YACHC,gBAAgB,iBAHlB,SAKE,mBAAGlD,UAAU,2CAEf,cAAC,IAAD,CACEA,UAAU,iBACViD,GAAG,QACHC,gBAAgB,iBAHlB,SAKE,mBAAGlD,UAAU,yCAEf,cAAC,IAAD,CACEA,UAAU,iBACViD,GAAG,WACHC,gBAAgB,iBAHlB,SAKE,mBAAGlD,UAAU,4CAEf,cAAC,IAAD,CACEA,UAAU,iBACViD,GAAG,QACHC,gBAAgB,iBAHlB,SAKE,mBAAGlD,UAAU,8C,oGCgFJmD,IAtGD,SAAC,GAWR,IAAD,IAVJC,UAUI,MAVC,GAUD,EATJC,EASI,EATJA,KASI,IARJC,aAQI,MARI,EAQJ,MAPJC,cAOI,MAPK,GAOL,MANJC,gBAMI,MANO,EAMP,MALJC,kBAKI,MALS,EAKT,MAJJC,kBAII,aAHJC,aAGI,MAHI,KAGJ,MAFJC,mBAEI,aADJ9D,aACI,MADkD,GAClD,IACwB+D,oBAAS,GADjC,mBACGC,EADH,KACWC,EADX,OAEgCF,oBAAS,GAFzC,mBAEGG,EAFH,KAEeC,EAFf,OAGwCJ,oBAAS,GAHjD,mBAGGK,EAHH,KAGmBC,EAHnB,OAIwCN,mBAAS,MAJjD,mBAIGO,EAJH,KAImBC,EAJnB,KAMEC,EAAmB5C,uBACvB,SAAAe,GAGE,GAFA8B,aAAaH,GACbL,EAAUtB,IACLA,GAASuB,EAAY,CACxBC,GAAc,GACd,IAAMO,EAAQC,YAAW,WACvBN,GAAkB,KA1BA,KA4BpBE,EAAkBG,GAGhB/B,GACF0B,GAAkB,KAGtB,CACEC,EACAJ,EACAD,EACAE,EACAE,EACAE,IAIEK,EAAaC,mBACjBtB,EAAKuB,UAAUC,QAAQ,YAAa,KAEhCC,EAAc,2BAAQhF,GAAR,IAAeiF,QAASb,EAAiB,EAAI,IAC7DP,IACFmB,EAAenB,MAAQA,GAGzB,IAAMqB,EACJ,qCACE,qBACEhF,UAAS,wCAAmCuD,EAAnC,YAA6CH,GACtD6B,IAAI,aACJC,eAAc7B,EAAKuB,UACnBO,gBAAe7B,EACfxD,MAAOgF,EACPM,IAAKV,EANP,uBAQA,qBACE1E,UAAS,0CAAqCuD,EAArC,YAA+CH,GACxD6B,IAAI,aACJE,gBAAe7B,EACf+B,OAAQ,WACNpB,GAAc,IAEhBnE,MAAO,CACLiF,QAASjB,EAAS,EAAI,EACtBwB,QAASxB,EAAS,QAAU,QAE9BsB,IAAKV,EAXP,wBAaEhB,GACA,cAAC,IAAD,CACED,WAAYA,EACZD,SAAUA,EACVM,OAAQA,EAHV,0BASN,OACE,qBAAK9D,UAAU,kBAAf,8BACG4D,EACCoB,EAEA,cAAC,IAAD,CACEO,SAAUzB,EACV0B,aAAclB,EACdmB,oBAAoB,YACpBC,kBAAkB,UAJpB,8BAMGV,Q,uDCvGX,kBAyCeW,IAhCF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQlD,EAA6B,EAA7BA,KAAMgB,EAAuB,EAAvBA,MAC7B7D,EAAQgG,mBAA6B,WACzC,MAAa,aAATnD,EACK,CACLoD,gBAAiB,QACjBC,gBAAgB,GAAD,OAAKrC,EAAQ,EAAb,MACfsC,gBAAiBL,EACjBM,iBAAkB,QAClBC,iBAAiB,GAAD,OAAKxC,EAAQ,EAAb,MAChByC,iBAAkBR,EAClBS,OAAQR,GAIC,eAATlD,EACK,CACL2D,eAAgB,QAChBC,eAAgB5C,EAAQ,EACxB6C,eAAgBZ,EAChBa,kBAAmB,QACnBC,kBAAmB/C,EAAQ,EAC3BgD,kBAAmBf,EACnBjC,MAAOkC,GAIJ,KACN,CAACD,EAAOC,EAAQlD,EAAMgB,IAEzB,OAAO,qBAAK7D,MAAOA,M,iCCtCrB,kBAUe8G,IARK,SAAC,GAAkC,IAAD,IAA/B3E,YAA+B,MAAxB,SAAwB,EAAdzB,EAAc,EAAdA,QACtC,OACE,qBAAKR,UAAU,aAAaQ,QAASA,EAArC,8BACE,iDAAIyB,Q,qFCyEK4E,IA1EA,SAAC,GAWT,IAAD,IAVJzE,aAUI,MAVI,KAUJ,MATJ0E,YASI,MATG,KASH,MARJC,eAQI,MARM,KAQN,MAPJvG,eAOI,WAPMwG,EAON,MANJC,kBAMI,aALJC,aAKI,aAJJrE,aAII,aAHJsE,gBAGI,aAFJtH,gBAEI,MAFO,KAEP,MADJC,aACI,MADI,GACJ,IACkC+D,oBAAS,GAD3C,mBACGuD,EADH,KACgBC,EADhB,KAEEC,EAAoB5F,uBAAY,WAChCuF,GACFI,GAAgBD,KAEjB,CAACA,EAAaH,IAEXM,EAAczB,mBAAQ,WAC1B,OAAIiB,EACK,qBAAK3B,IAAK2B,EAAS/G,UAAU,eAAeiF,IAAI,GAAhD,uBAGF,mBAAGjF,UAAS,wBAAY8G,QAAZ,IAAYA,IAAQ,QAAhC,yBACN,CAACA,EAAMC,IAEJS,EAAe1B,mBAAQ,WAC3B,OAAI1D,EACK,mBAAGpC,UAAU,gBAAb,8BAA8BoC,IAGhC,OACN,CAACA,IAEJ,OACE,sBACEpC,UAAWC,IAAW,CACpB,qBAAqB,EACrB,2BAA4BmC,EAC5B,gBAAiB8E,EACjB,gBAAiBrE,IALrB,+BAQE,sBACE7C,UAAWC,IAAW,CACpB,WAAW,EACX,iBAAkBmC,EAClB,qBAAsBA,EACtB,mBAAoB+E,EACpB,eAAgBC,EAChB,iBAAkBH,IAEpBzG,QAAO,OAAEA,QAAF,IAAEA,IAAW8G,EACpBxH,MAAOA,EAVT,+BAYGyH,EACAC,KAGF3H,EACC,qBACEG,UAAWC,IAAW,CACpB,mBAAmB,EACnB,uBAAwBmH,IAH5B,8BAMGvH,IAED,U,6ECzEV,gEAoFe4H,IAvEQ,SAAC,GAII,IAH1BnF,EAGyB,EAHzBA,SACAoF,EAEyB,EAFzBA,SACAC,EACyB,EADzBA,eAEA,OACE,sBACE3H,UAAWC,IACT2H,IACAA,IACAA,IACAA,IACAC,IAAO/F,WANX,UASE,sBACE9B,UAAWC,IACT2H,IACa,UAAbF,EAAuBG,IAAOH,SAAWG,IAAOC,YAElDtH,QAAS,WACP8B,EAAS,UANb,mBAYA,qBACEtC,UAAWC,IACT2H,IACAD,GAAkBE,IAAO,cAH7B,SAME,cAAC,IAAD,CAAMjC,MAAM,QAAQC,OAAQ,GAAIlD,KAAK,WAAWgB,MAAO,MAGzD,sBACE3D,UAAWC,IACT2H,IACa,aAAbF,EAA0BG,IAAOH,SAAWG,IAAOC,YAErDtH,QAAS,WACP8B,EAAS,aANb,sBAYCqF,GACC,qCACE,qBAAK3H,UAAWC,IAAW2H,IAAkBC,IAAO,eAApD,SACE,cAAC,IAAD,CAAMjC,MAAM,QAAQC,OAAQ,GAAIlD,KAAK,WAAWgB,MAAO,MAGzD,sBACE3D,UAAWC,IACT2H,IACa,YAAbF,EAAyBG,IAAOH,SAAWG,IAAOC,YAEpDtH,QAAS,WACP8B,EAAS,YANb,6B,oBClEVyF,EAAOC,QAAU,CAAC,UAAY,kCAAkC,SAAW,iCAAiC,WAAa,mCAAmC,YAAY,kCAAkC,aAAa,qC,iCCDxM,QAA0B,uC,iCCA1B,QAA0B,oC,+IC6F1BC,IApFM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACzBC,EAAWC,cAD+B,EAEtBxE,mBAAS,IAFa,mBAEzCtC,EAFyC,KAElC+G,EAFkC,OAGlBzE,oBAAS,GAHS,mBAGzC0E,EAHyC,KAGhCC,EAHgC,OAIpB3E,mBAAS,GAJW,mBAIzC4E,EAJyC,KAIjCC,EAJiC,OAKZ7E,oBAAS,GALG,mBAKzC8E,EALyC,KAK7BC,EAL6B,KAO1CC,EAAgBnH,uBAAY,SAAAoH,GACV,WAAlBA,EAAEC,OAAO1G,MACXqG,EAAUI,EAAEC,OAAOtG,SAEpB,IAEGuG,EAAYtH,sBAAW,uCAC3B,WAAMoH,GAAN,qBAAAG,EAAA,6DACEH,EAAEI,iBADJ,SAGIV,GAAW,GAHf,SAIUJ,EACJe,YAAY,CACVV,SACAW,UAAWlB,EAAQkB,UACnB7F,OAAQ2E,EAAQmB,UARxB,OAWIT,GAAc,GAXlB,gDAaIU,QAAQ/H,MAAR,MACI2G,IACIqB,EAAe,KAAIC,QACnBC,EAFK,UAEW,KAAIC,gBAFf,iBAEW,EAAcC,YAFzB,aAEW,EAAoBJ,aAC1CjB,EAAQ,OAACmB,QAAD,IAACA,IAAiBF,IAjBhC,yBAoBIf,GAAW,GApBf,4EAD2B,sDAwB3B,CAACJ,EAAUK,EAAQP,IAYrB,OARA0B,qBAAU,WACH1B,IACHM,GAAW,GACXF,EAAS,MACTM,GAAc,MAEf,CAACV,IAGF,cAAC,IAAD,CACE9H,YAAa+H,EACbvH,YAAasH,EACbrH,WAAW,WACXG,aAAW,EAJb,8BAMG2H,EACC,sBAAK3I,UAAU,wBAAf,+BACE,mBAAGA,UAAU,uCAAb,uBACA,mBAAGA,UAAU,oBAAb,4DACA,mBAAGA,UAAU,mBAAb,0BAGF,uBAAMA,UAAU,0BAA0B6J,SAAUb,EAApD,+BACGzH,EAAQ,qBAAKvB,UAAU,aAAf,8BAA6BuB,IAAe,KACpDgH,EAAU,cAAC,IAAD,CAAQvG,SAAO,EAACC,KAAK,iBAArB,uBAA2C,KACtD,mBAAGjC,UAAU,qBAAb,4GAIA,cAAC,IAAD,CACEqC,KAAK,SACLC,SAAUuG,EACVpG,MAAOgG,EACP/F,UAAU,UACVG,OAAK,EALP,uBAOA,cAAC,IAAD,CAAaZ,KAAK,WAAWzB,QAASwI,EAAtC,8B,0ICCKc,IAjFI,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAW5B,EAAiB,EAAjBA,WAAiB,EACtBtE,mBAAS,IADa,mBACzCtC,EADyC,KAClC+G,EADkC,OAElBzE,oBAAS,GAFS,mBAEzC0E,EAFyC,KAEhCC,EAFgC,OAGlB3E,oBAAS,GAHS,mBAGzCmG,EAHyC,KAGhCC,EAHgC,KAK1CC,EAAcxI,sBAAW,uCAC7B,WAAMoH,GAAN,qBAAAG,EAAA,6DACEH,EAAEI,iBADJ,SAGIV,GAAW,GACKpF,EAAkB2G,EAA1BV,OAAYD,EAAcW,EAAdX,UACde,EAAgB,CACpBC,eAAgBhB,EAChBiB,UAAWC,KAAKC,OAPtB,SAS2BC,IAAKC,KAAL,eAA0B,CAC/CC,KAAK,qBAAD,OAAuBtH,GAC3BX,MAAO0H,IAXb,kBASYR,KAICgB,GACPV,GAAW,GAEX3B,EAAS,0BAhBf,kDAmBIgB,QAAQ/H,MAAR,MAnBJ,yBAqBIiH,GAAW,GArBf,6EAD6B,sDAyB7B,CAACuB,IAGGa,EAAQlJ,uBAAY,WACxByG,EAAW,QACV,CAACA,IAWJ,OARAyB,qBAAU,WACHG,IACHvB,GAAW,GACXF,EAAS,MACT2B,GAAW,MAEZ,CAACF,IAGF,cAAC,IAAD,CACE3J,YAAa+H,EACbvH,YAAamJ,EACblJ,WAAW,aACXI,QACIsH,GAAYhH,GAAUyI,GACtBA,GAAWzI,IAAU,KADY,QAGrCL,eAAgBqH,EAChBpH,eAAgB6I,GAAWzI,EAAQqJ,EAAQV,EAC3C3J,SAAUyJ,EACVhJ,aAAW,EAXb,8BAaGgJ,EACC,sBAAKhK,UAAU,wBAAf,+BACE,mBAAGA,UAAU,uCAAb,uBACA,mBAAGA,UAAU,oBAAb,+DAGF,uBAAMA,UAAU,0BAA0B6J,SAAUK,EAApD,+BACG3I,EAAQ,mBAAGvB,UAAU,aAAb,8BAA2BuB,IAAa,KAChDA,GAAS,mBAAGvB,UAAU,qBAAb,qDACTuI,EAAU,cAAC,IAAD,CAAQtG,KAAK,aAAb,uBAA+B,MACxCV,IAAUgH,GACV,mBAAGvI,UAAU,qBAAb,kF,4JCEG6K,IAtEK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAY3C,EAAiB,EAAjBA,WAC3BC,EAAWC,cADiC,EAExBxE,mBAAS,IAFe,mBAE3CtC,EAF2C,KAEpC+G,EAFoC,OAGpBzE,oBAAS,GAHW,mBAG3C0E,EAH2C,KAGlCC,EAHkC,OAIR3E,oBAAS,GAJD,mBAI3CkH,EAJ2C,KAI5BC,EAJ4B,KAM5CC,EAAevJ,sBAAW,uCAC9B,WAAMoH,GAAN,qBAAAG,EAAA,6DACEH,EAAEI,iBADJ,SAGIV,GAAW,GAHf,SAIU0C,YACJ,IACAJ,EAAW1B,UACX0B,EAAWzB,OAHP6B,CAIJ9C,GARN,OASI4C,GAAiB,GATrB,gDAWI1B,QAAQ/H,MAAR,MACIuJ,IACIvB,EAAe,KAAIC,QACnBC,EAFQ,UAEQ,KAAIC,gBAFZ,iBAEQ,EAAcC,YAFtB,aAEQ,EAAoBJ,aAC1CjB,EAAQ,OAACmB,QAAD,IAACA,IAAiBF,IAfhC,yBAkBIf,GAAW,GAlBf,4EAD8B,sDAsB9B,CAACJ,EAAU0C,IAYb,OARAlB,qBAAU,WACHkB,IACHtC,GAAW,GACXF,EAAS,MACT0C,GAAiB,MAElB,CAACF,IAGF,cAAC,IAAD,CACE1K,YAAa+H,EACbvH,YAAakK,EACbjK,WAAW,iBAHb,8BAKGkK,EACC,sBAAK/K,UAAU,oBAAf,+BACE,mBAAGA,UAAU,uCAAb,uBACA,mBAAGA,UAAU,oBAAb,oEAQF,uBAAMA,UAAU,sBAAsB6J,SAAUoB,EAAhD,+BACG1J,EAAQ,qBAAKvB,UAAU,aAAf,8BAA6BuB,IAAe,KACpDgH,EAAU,cAAC,IAAD,CAAQvG,SAAO,EAACC,KAAK,iBAArB,uBAA2C,KACtD,mBAAGjC,UAAU,iBAAb,uGAGA,cAAC,IAAD,CAAaiC,KAAK,SAASzB,QAASyK,EAApC,8B,sFCvEVlD,EAAOC,QAAU,CAAC,eAAe,gCAAgC,oBAAoB,qCAAqC,gBAAgB,iCAAiC,yBAAyB,0CAA0C,iBAAiB,kCAAkC,eAAe,gCAAgC,eAAe,gCAAgC,aAAa,8BAA8B,kBAAkB,mCAAmC,kBAAkB,mCAAmC,2BAA2B,4CAA4C,sBAAsB,uCAAuC,sBAAsB,uCAAuC,iBAAiB,kCAAkC,sBAAsB,uCAAuC,8BAA8B,+CAA+C,yBAAyB,0CAA0C,yBAAyB,0CAA0C,uBAAuB,wCAAwC,wBAAwB,yCAAyC,uBAAuB,wCAAwC,MAAM,uBAAuB,oBAAoB,uC,oBCAxwCD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,0B,oBCAlED,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,2B,oQCkH7DmD,EAAmC,CACvC9E,OAH0B,IAI1B1C,MAJ0B,IAK1ByH,UAAW,WAGEC,EA1GiC,SAAC,GAAmB,IAAjBjC,EAAgB,EAAhBA,UAC3CkC,EAAUC,cADiD,EAEnCC,IAAM3H,SAElC,IAJ+D,mBAE1D4H,EAF0D,KAEjDC,EAFiD,OAKvCF,IAAM3H,SAAiB,IALgB,mBAK1DtC,EAL0D,KAKnD+G,EALmD,KAOjEkD,IAAM5B,WAAU,WACd,IAAM+B,EAAeC,YAAM,CACzBC,MAAM,GAAD,OAAKzC,EAAL,oCACL0C,QAFyB,SAEjBhD,GACNR,EAASyD,KAAKC,UAAUlD,EAAG,KAAM,KAEnCmD,OALyB,SAKlB5I,EAAM6I,GACXR,EACES,aAAQ,SAAAC,GACFC,IAA2BhJ,GAC7B+I,EAAMF,GAAO7I,EAEbhD,IAAaiM,KAAb,8EACyElD,EAAUmD,OAC9E,GAFL,yEAGoER,KAAKC,UACrE3I,EACA,KACA,YASd,OAAO,WACLsI,EAAaa,MAAK,SAAAC,GAAG,OAAIA,EAAIC,YAE9B,CAACtD,IAEJ,IAAMuD,EAAiBnB,IAAM1F,SAAQ,WACnC,OAAO8G,OAAOC,OAAOpB,GAASqB,MAAK,SAAC7D,EAAG8D,GACrC,OAAOA,EAAEC,UAAY/D,EAAE+D,eAExB,CAACvB,IAEJ,OAAIlK,EACK,iDAAIA,IAIX,mCACGoL,EAAeM,KAAI,SAAC5J,EAAM6J,GACzB,OACE,sBACElN,UAAU,OAEVQ,QAAS,WACP8K,EAAQ6B,KAAR,gBAAsB9J,EAAK+J,OAA3B,YAAqC/J,EAAKD,MAJ9C,+BAOiB,mBAAdC,EAAKV,MACJ,qBAAK7C,MAAOqL,EAAZ,8BACE,cAAChI,EAAA,EAAD,CACES,aAAW,EACXF,YAAU,EACVN,GAAIC,EAAKD,GACTE,MAAO4J,EACP7J,KAAMA,EACNE,OAAQ,KACRE,WAAY,KACZD,SAAU,KACV1D,MAAOqL,EATT,yBAcW,mBAAd9H,EAAKV,MACJ,qBAAK3C,UAAU,oBAAoBF,MAAOqL,EAA1C,8BACE,mBAAGnL,UAAU,0BAAb,yBAIJ,sBAAKA,UAAU,wBAAf,+BACE,oBAAIA,UAAU,QAAd,8BAAuBqD,EAAKlD,QAE5B,mBAAGH,UAAU,cAAb,8BAA4BqD,EAAKgK,aAAe,MAEhD,sBAAMrN,UAAU,YAAhB,8BACGK,IAAsBgD,EAAK2J,kBAjC3B3J,EAAKD,U,kBCtEP,MAA0B,yC,2ECyG1BkK,G,OA7FS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASpF,EAAiB,EAAjBA,WAC5BC,EAAWC,cADkC,EAEzBxE,mBAAS,IAFgB,mBAE5CtC,EAF4C,KAErC+G,EAFqC,OAGrBzE,oBAAS,GAHY,mBAG5C0E,EAH4C,KAGnCC,EAHmC,OAIf3E,mBAAS,MAJM,mBAI5C2J,EAJ4C,KAIhCC,EAJgC,OAKvB5J,oBAAS,GALc,mBAK5C6J,EAL4C,KAKpCC,EALoC,KAO7CC,EAAYlM,sBAAW,uCAC3B,WAAMoH,GAAN,+BAAAG,EAAA,yDACEH,EAAEI,iBADJ,SAGY2E,EAAgDN,EAAhDM,aAAcC,EAAkCP,EAAlCO,MAAOC,EAA2BR,EAA3BQ,UAAWC,EAAgBT,EAAhBS,YACnCF,GAAUC,GAA6C,kBAAzBE,OAAOJ,GAJ9C,uBAKMvE,QAAQ/H,MAAM,4BACd+H,QAAQ/H,MAAMgM,GANpB,iCASI/E,GAAW,GATf,UAU4B0F,YACtBJ,EACAC,EACAF,EAHsBK,CAItB9F,GAdN,QAUU+F,EAVV,OAeI7E,QAAQ8E,IAAID,GACZV,EAAcU,GACM,gBAAhBH,GACFK,YAAkBF,EAAUG,QAASH,EAAUI,OAAO,GAAtDF,CAA0DjG,GAExC,eAAhB4F,GACFQ,YAAeL,EAAUG,QAASH,EAAUI,OAAO,GAAnDC,CAAuDpG,GArB7D,kDAwBIkB,QAAQ/H,MAAR,MACIgM,IACIhE,EAAe,KAAIC,QACnBC,EAFK,UAEW,KAAIC,gBAFf,iBAEW,EAAcC,YAFzB,aAEW,EAAoBJ,aAC1CjB,EAAQ,OAACmB,QAAD,IAACA,IAAiBF,IA5BhC,yBA+BIf,GAAW,GA/Bf,6EAD2B,sDAmC3B,CAACJ,EAAUmF,IAIb3D,qBAAU,WACH2D,IACH/E,GAAW,GACXF,EAAS,MACTmF,EAAc,SAEf,CAACD,IACJ,IAAMiB,EAAU/M,uBAAY,WAC1BgN,UAAUC,UAAUC,UAAU7C,KAAKC,UAAUwB,IAC7CG,GAAU,KACT,CAACH,EAAYG,IAChB,OACE,cAAChN,EAAA,EAAD,CACEP,YAAa+H,EACbvH,YAAa2M,EACb1M,WAAW,cAHb,8BAKG2M,EACC,sBAAKxN,UAAU,oBAAf,+BACE,mBAAGA,UAAU,uCAAb,uBACA,mBAAGA,UAAU,oBAAb,wEAGA,iDAAI+L,KAAKC,UAAUwB,KACnB,wBAAQhN,QAASiO,EAAjB,oDACCf,GAAU,gEAQb,uBAAM1N,UAAU,sBAAsB6J,SAAU+D,EAAhD,+BACGrM,EAAQ,qBAAKvB,UAAU,aAAf,8BAA6BuB,IAAe,KACpDgH,EAAU,cAACxG,EAAA,EAAD,CAAQC,SAAO,EAACC,KAAK,iBAArB,uBAA2C,KACtD,oBAAGjC,UAAU,iBAAb,+BACGuN,GAAWA,EAAQM,aADtB,6DAIA,cAACjH,EAAA,EAAD,CAAa3E,KAAK,MAAMzB,QAASoN,EAAjC,8B,8DCxCKiB,EA7CG,SAAC,GAAmC,IAAjCzF,EAAgC,EAAhCA,UACb0F,IAAeC,cAAkBA,iBAAqBC,MAC1D,SAAAC,GAAC,OAAIA,EAAEC,OAAS9F,KAFiC,EAKPvF,oBAAS,GALF,mBAK5CsL,EAL4C,KAK5BC,EAL4B,KAO7CC,EAAe3N,sBAAW,sBAAC,4BAAAuH,EAAA,mEAEzBkG,EAFyB,oDAK7BC,GAAkB,GAEdE,EAAM,CAAEC,QAAS,EAAG5F,KAAM,CAAEJ,aAAc,MAE1CuF,EATyB,iCAUfzO,IAAWmP,OAAX,2BAAsCpG,IAVvB,OAU3BkG,EAV2B,gDAYfjP,IAAWoP,IAAX,2BAAmCrG,GAAa,IAZjC,QAY3BkG,EAZ2B,kBAeV,MAAfA,EAAIC,OAfqB,uBAgBrB,IAAIG,MAAMJ,EAAI3F,KAAKJ,cAhBE,0DAmBzBuF,EACFa,MAAM,uBAAD,OAAwB,KAAEnG,UAE/BmG,MAAM,qBAAD,OAAsB,KAAEnG,UAtBF,yBAyB7B4F,GAAkB,GAzBW,6EA2B9B,CAACD,EAAgBC,EAAmBN,EAAY1F,IAEnD,OACE,qBAAKpJ,UAAW6H,IAAO/F,UAAWtB,QAAS6O,EAA3C,SACE,mBAAGrP,UAAW4P,IAAEhI,IAAsBC,IAAO5F,MAA7C,SACGkN,EAAiB,MAAQL,EAAa,WAAa,c,0BCG7Ce,GAvCI,SAAC,GAAoC,IAAlCzG,EAAiC,EAAjCA,UACdhB,EAAWC,cACXiD,EAAUC,cACVuE,EAAcf,cAAkBA,oBAAwB3F,IAHT,EAKTvF,oBAAS,GALA,mBAK9CsL,EAL8C,KAK9BC,EAL8B,KAO/CW,EAAcrO,sBAAW,sBAAC,sBAAAuH,EAAA,mEAExBkG,EAFwB,qDAMxBW,EANwB,uBAO1BxE,EAAQ6B,KAAR,gBAAsB/D,IAPI,iCAW5BgG,GAAkB,GAXU,SAatBhH,EAAS4H,YAAqB5G,IAbR,OAe5BgG,GAAkB,GAfU,kDAiB5BO,MAAM,mCAAD,OAAoC,KAAEnG,UAC3CnJ,IAAakB,MAAb,MACA6N,GAAkB,GAnBU,0DAqB7B,CAACD,EAAgB/G,EAAUkD,EAASwE,EAAa1G,IAEpD,OACE,qBAAKpJ,UAAW4P,IAAE/H,IAAO/F,WAAYtB,QAASuP,EAA9C,SACE,mBAAG/P,UAAW4P,IAAEhI,IAAsBC,IAAO5F,MAA7C,SACGkN,EAAiB,MAAQW,EAAc,UAAY,uB,SCVtDG,GAAOzE,IAAM0E,MAAK,kBAAM,wDACxBC,GAAa3E,IAAM0E,MAAK,kBAAM,sEAqT9BE,GAAmC,CACvChL,IAAKiL,EACLhK,OAAQ,GACR1C,MAAO,GACP2M,UAAU,GAGGC,UAxTO,WAEpB,IAAMnI,EAAW2G,gBACXzD,EAAUC,cACViF,EAAWzB,eAAkB,qBAAG0B,KAAgBrH,aAJ5B,EAKsBvF,oBAAS,GAL/B,mBAKnB6M,EALmB,KAKDC,EALC,OAOmCC,cAA1CC,EAPO,EAOlBzH,UAPkB,IAOQ0H,oBAPR,MAOuB,QAPvB,EAWpB5B,EAAOH,cAAkBA,aAAiB8B,IAXtB,EAYchN,mBAAS,IAZvB,mBAYnBkN,EAZmB,KAYLC,EAZK,OAacnN,mBAAS,MAbvB,mBAanBoN,EAbmB,KAaLC,EAbK,OAcoBrN,mBAAS,MAd7B,mBAcnBsN,EAdmB,KAcFC,EAdE,OAe4BvN,mBAAS,MAfrC,mBAenBwN,GAfmB,KAeEC,GAfF,QAgBkBzN,mBAAS,MAhB3B,qBAgBnB0N,GAhBmB,MAgBHC,GAhBG,MAiBpBC,GAAOjB,IAAatB,EAAK9F,UAE/BQ,qBAAU,WAER,OADAxB,EAASsJ,gBACF,WACLtJ,EAASuJ,mBAEV,CAACvJ,IAEJwB,qBAAU,kBAAMxB,EAASwJ,aAASf,MAAiB,CAACzI,EAAUyI,IAC9DjH,qBAAU,kBAAMxB,EAASyJ,aAAehB,MAAiB,CACvDzI,EACAyI,IAIFjH,qBAAU,WAGR,OAFoBxB,EAAS0J,YAAqBjB,MAGjD,CAACzI,EAAUyI,IAGdjH,qBAAU,WACRY,IAAKuH,IAAL,6BAA+BlB,EAA/B,0BACGrE,MAAK,YAAe,IAAZ7C,EAAW,EAAXA,KACPqH,EAAgBrH,EAAKA,SAEtBqI,OAAM,SAAAlJ,GACLQ,QAAQ8E,IAAItF,QAEf,CAAC+H,IAEJ,IAAMzQ,GAAcsB,uBAAY,WAC9BiP,GAAqBD,KACpB,CAACA,IAEEuB,GAAiBvQ,uBACrB,SAAAwG,IACM+I,GAAiB/I,GACnBgJ,EAAgB,MAGlBA,EAAgBhJ,KAElB,CAAC+I,IAEGiB,GAAwBxQ,uBAC5B,SAAAyQ,IACMd,IAAwBc,GAC1Bb,GAAuB,MAGzBA,GAAuBa,KAEzB,CAACd,KAEGe,GAAoB1Q,uBACxB,SAAAoJ,IACMqG,GAAoBrG,GACtBsG,EAAmB,MAGrBA,EAAmBtG,KAErB,CAACqG,IAGGkB,GAAmB3Q,uBACvB,SAAAqI,GACET,QAAQ8E,IAAI,kBACZ9E,QAAQ8E,IAAIrE,IACRwH,IAAmBxH,GACrByH,GAAkB,MAGpBA,GAAkBzH,KAEpB,CAACwH,KAGGe,GAAQvD,cACZA,4BAAgC8B,IAG5B0B,GAAgB7Q,uBAAY,WAChCgN,UAAUC,UAAUC,UAAUiC,KAC7B,CAACA,IA6EE2B,GAAmB9Q,uBACvB,SAACgG,GACC4D,EAAQzG,QAAR,qBAA8BgM,EAA9B,YAA+CnJ,MAEjD,CAAC4D,EAASuF,IAIZ,OACE,sBAAK7Q,UAAWC,IAAW,iBAAkB4H,IAAO,iBAApD,UACE,sBAAK7H,UAAWC,IAAW4H,IAAO,sBAAlC,UACE,qBAAK7H,UAAU,gBAAf,SACGkP,EAAKuD,QACJ,qBACEzS,UAAU,QACViF,IAAI,2BACJG,IAAG,iCAA4B8J,EAAKuD,YAK1C,sBAAKzS,UAAW6H,IAAO,0BAAvB,UACE,qBACE7H,UAAW6H,IAAO,kBAClB/H,MAAO,CACLuG,OAAO,GAAD,OAhNA,IAgNA,MACN1C,MAAM,GAAD,OAjNC,IAiND,OAJT,SAOE,cAAC+O,EAAA,EAAD,CACErM,OArNM,IAsNN+C,UAAWyH,EACX8B,YAAU,MAGd,gCACE,mBAAG3S,UAAW6H,IAAO,gBAArB,SAAuCqH,EAAK0D,cAC5C,mBAAG5S,UAAW6H,IAAO,gBAArB,SACGqH,EAAK2D,KAAO,wBAGf,sBAAK7S,UAAW4H,IAAhB,WACI6J,IAAQ,cAAC,EAAD,CAAWrI,UAAWyH,IAEhC,cAACiC,EAAA,EAAD,CAAKC,IAAK,GAAIC,WAAS,KAErBvB,IAAQ,cAAC,GAAD,CAAYrI,UAAWyH,aAKvC,cAACpJ,EAAA,EAAD,CACEnF,SAAUkQ,GACV9K,SAAUoJ,EACVnJ,gBAAc,IAGhB,gCACoB,UAAjBmJ,IArIc,IAAjBwB,GAAMzM,OACD,cAAC9D,EAAA,EAAD,CAAQE,KAAK,qBAEfqQ,GAAMrF,KAAI,SAAAxC,GACf,OAAIwI,IAAoBxI,GAEpB,cAAC,WAAD,CAAUyI,SAAU,cAACnR,EAAA,EAAD,IAApB,SACE,cAACoO,GAAD,CACEgD,aAAclB,GACdmB,gBAAiBhB,GACjBiB,eAAgBhB,GAChBhJ,OAAQoB,EAAK6I,eACbC,gBAAiB9I,EAAK+I,YANW/I,EAAK6I,gBAa5C,cAAC,WAAD,CAAUJ,SAAU,cAACnR,EAAA,EAAD,IAApB,SACE,cAACkO,GAAD,CACE7M,GAAIqH,EAAKrH,GACTgG,UAAWqB,EAAKgJ,SAChBN,aAAclB,GACdmB,gBAAiBhB,GACjBsB,gBAAiB,KACjBL,eAAgBhB,MAPiB5H,EAAKrH,QAmHtB,aAAjB0N,GArGAlE,OAAO+G,QAAQ5C,GACnB6C,QAAO,yDACP3G,KAAI,YAAoB,IAAD,mBAAjB7J,EAAiB,KAAbmK,EAAa,KAStB,OACE,sBAAKvN,UAAW6H,IAAO4C,KAAvB,UACE,gDACA,4BAAIrH,IACJ,iDAEA,4BAAImK,EAAQS,cACZ,mDAEA,4BAAIT,EAAQsG,eACZ,yDAEA,4BAAItG,EAAQuG,qBACZ,uDAEA,4BAAIvG,EAAQwG,mBACZ,mDAEA,4BAAIxG,EAAQM,eACZ,wBAAQrN,QA3BE,WACZ8Q,GAAuB,2BAElB/D,GAFiB,IAGpBQ,UAAW3K,EACX0K,MAAO+C,MAsBP,+BAwEgB,YAAjBC,GAjEL,qBAAK9Q,UAAW6H,IAAO,qBAAvB,SACE,cAAC,EAAD,CAAauB,UAAWyH,SAoExB,cAACiC,EAAA,EAAD,CAAKC,IAAK,MAEV,eAACpS,EAAA,EAAD,CACEP,YAAaA,GACbQ,UAAW8P,EACX5P,aAAc,CACZkT,QAAS,aAEXhT,aAAW,EANb,UAQE,cAAC,IAAD,CACEiT,QAAQ,UACRC,QAAQ,UACRzR,MAAOoO,EACPsD,KAAM,IACNnU,UAAW6H,IAAO,kBAClBuM,cAAehE,KAEjB,mBAAGpQ,UAAW6H,IAAO,uBAArB,iDAGA,sBACE7H,UAAW6H,IAAO,+BAClBrH,QAAS+R,GAFX,UAIE,qBACEnN,IAAKiP,IACLrU,UAAW6H,IAAO,0BAClB5C,IAAI,KAEN,mBAAGjF,UAAW6H,IAAO,0BAArB,4CAKJ,cAACI,EAAA,EAAD,CAAcC,QAAS+I,EAAc9I,WAAY8J,KACjD,cAACpH,EAAA,EAAD,CACEC,WAAYqG,EACZhJ,WAAYiK,KAEd,cAAC,EAAD,CACE7E,QAAS8D,GACTlJ,WAAY+J,KAEd,cAACpI,EAAA,EAAD,CAAYC,UAAWwH,GAAgBpJ,WAAYkK,KAEnD,cAACxL,EAAA,EAAD,CACErG,QAASJ,GACT8G,OAAK,EACLH,QAASuN,IACTxN,KAAM,KACN1E,MAAO,UAIX,cAACY,EAAA,EAAD","file":"static/js/14.6ca5835b.chunk.js","sourcesContent":["import classNames from \"classnames\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children = null, style = {}, contentClass = \"\" }) => (\n  <div className={classNames(\"content\", contentClass)} style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import * as Utils from \"../../../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({\n  title = \"\",\n  toggleModal = Utils.EMPTY_FN,\n  forceRenderTitleBar = false,\n  hideXBtn = false\n}) =>\n  title || forceRenderTitleBar ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      {!hideXBtn && (\n        <div className=\"head-close\" onClick={toggleModal}>\n          <i className=\"fas fa-times\"></i>\n        </div>\n      )}\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","import { useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\nimport Loader from \"../../common/Loader\";\n\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\n\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = Utils.EMPTY_OBJ,\n  disableBackdropClose = false,\n  forceRenderTitleBar = false,\n  hideXBtn = false,\n  noFullWidth = false,\n  blueBtn = \"\",\n  disableBlueBtn = false,\n  onClickBlueBtn = Utils.EMPTY_FN,\n  redBtn = \"\",\n  disableRedBtn = false,\n  onClickRedBtn = Utils.EMPTY_FN,\n  contentClass = \"\",\n  error = \"\",\n  textIfLoading = \"\"\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  const handleBackdropClick = useCallback(() => {\n    if (!disableBackdropClose) {\n      toggleModal();\n    }\n  }, [disableBackdropClose, toggleModal]);\n  return (\n    <div className={classNames({ modal: true, open: modalOpen })}>\n      <div className=\"backdrop\" onClick={handleBackdropClick} />\n      <div\n        className={classNames({\n          container: true,\n          \"container-no-full-width\": noFullWidth\n        })}\n      >\n        {textIfLoading && (\n          <Loader overlay style={OVERLAY_STYLE} text={textIfLoading} />\n        )}\n\n        <ModalTitle\n          title={modalTitle}\n          toggleModal={closeModal}\n          forceRenderTitleBar={forceRenderTitleBar}\n          hideXBtn={hideXBtn}\n        />\n\n        {error && <div className={\"form-error form-error-margin\"}>{error}</div>}\n\n        <ModalContent style={contentStyle} contentClass={contentClass}>\n          {typeof children === \"string\" ? (\n            <p className=\"text-align-center\">{children}</p>\n          ) : (\n            children\n          )}\n        </ModalContent>\n\n        <div className=\"color-buttons\">\n          {blueBtn && (\n            <button\n              disabled={disableBlueBtn}\n              className={classNames(\"color-btn\", \"blue-btn\")}\n              onClick={onClickBlueBtn}\n            >\n              {blueBtn}\n            </button>\n          )}\n\n          {redBtn && (\n            <button\n              disabled={disableRedBtn}\n              className={classNames(\"color-btn\", \"red-btn\")}\n              onClick={onClickRedBtn}\n            >\n              {redBtn}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst OVERLAY_STYLE = {\n  borderRadius: \"15px\"\n};\n\nexport default Modal;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label = \"\",\n  name = \"\",\n  onChange,\n  inputAction = Utils.EMPTY_FN,\n  actionIcon = \"\",\n  value,\n  inputMode = /** @type {React.HTMLAttributes['inputMode']} */ (\"text\"),\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled = false\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.scoped.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null,\n  disableZoom = false,\n  style = /** @type {import('react').CSSProperties} */ ({})\n}) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [\n      animationTimer,\n      zoomLoaded,\n      setZoomed,\n      setZoomLoaded,\n      setPreviewVisible,\n      setAnimationTimer\n    ]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { ...style, opacity: previewVisible ? 1 : 0 };\n  if (width) {\n    mainImageStyle.width = width;\n  }\n\n  const imgNode = (\n    <>\n      <img\n        className={`image torrent-img torrent-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-torrent={item.magnetURI}\n        data-file-key={index}\n        style={mainImageStyle}\n        src={contentURL}\n      />\n      <img\n        className={`image enlarged-img enlarged-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-file-key={index}\n        onLoad={() => {\n          setZoomLoaded(true);\n        }}\n        style={{\n          opacity: zoomed ? 1 : 0,\n          display: zoomed ? \"block\" : \"none\"\n        }}\n        src={contentURL}\n      />\n      {!hideRibbon && (\n        <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"media-container\">\n      {disableZoom ? (\n        imgNode\n      ) : (\n        <ControlledZoom\n          isZoomed={zoomed}\n          onZoomChange={handleZoomChange}\n          overlayBgColorStart=\"#16191c00\"\n          overlayBgColorEnd=\"#16191c\"\n        >\n          {imgNode}\n        </ControlledZoom>\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","import \"./ModalSubmit.scoped.css\";\n\nconst ModalSubmit = ({ text = \"Submit\", onClick }) => {\n  return (\n    <div className=\"submit-btn\" onClick={onClick}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default ModalSubmit;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import classNames from \"classnames\";\n\nimport * as gStyles from \"../../styles\";\nimport Line from \"../Line\";\n\nimport styles from \"./css/ProfileDivider.module.css\";\n\nexport interface ProfileDividerProps {\n  onChange(newlySelected: \"posts\" | \"services\" | \"content\"): void;\n  selected: \"posts\" | \"services\" | \"content\";\n  showContentBtn?: boolean;\n}\n\nconst ProfileDivider = ({\n  onChange,\n  selected,\n  showContentBtn\n}: ProfileDividerProps) => {\n  return (\n    <div\n      className={classNames(\n        gStyles.width100,\n        gStyles.rowCentered,\n        gStyles.spaceAround,\n        gStyles.padding12,\n        styles.container\n      )}\n    >\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"posts\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"posts\");\n        }}\n      >\n        Posts\n      </span>\n\n      <div\n        className={classNames(\n          gStyles.absolute,\n          showContentBtn && styles[\"left-line\"]\n        )}\n      >\n        <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n      </div>\n\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"services\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"services\");\n        }}\n      >\n        Services\n      </span>\n\n      {showContentBtn && (\n        <>\n          <div className={classNames(gStyles.absolute, styles[\"right-line\"])}>\n            <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n          </div>\n\n          <span\n            className={classNames(\n              gStyles.unselectable,\n              selected === \"content\" ? styles.selected : styles.unselected\n            )}\n            onClick={() => {\n              onChange(\"content\");\n            }}\n          >\n            Content\n          </span>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileDivider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileDivider_container__3ob9k\",\"selected\":\"ProfileDivider_selected__3U98y\",\"unselected\":\"ProfileDivider_unselected__1Z_qd\",\"left-line\":\"ProfileDivider_left-line__2xjlN\",\"right-line\":\"ProfileDivider_right-line__1d2KH\"};","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { sendTipPost } from \"../../../../actions/FeedActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst SendTipModal = ({ tipData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(0);\n  const [tipSuccess, setTipSuccess] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n  }, []);\n\n  const submitTip = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await dispatch(\n          sendTipPost({\n            amount,\n            publicKey: tipData.publicKey,\n            postId: tipData.postID\n          })\n        );\n        setTipSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (tipData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, amount, tipData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!tipData) {\n      setLoading(false);\n      setError(null);\n      setTipSuccess(false);\n    }\n  }, [tipData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!tipData}\n      modalTitle=\"Send Tip\"\n      noFullWidth\n    >\n      {tipSuccess ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post tipped successfully!</p>\n          <p className=\"tip-success-desc\"></p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitTip}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc m-1\">\n            Please specify the amount of sats you'd like to tip this user with\n            below.\n          </p>\n          <InputGroup\n            name=\"amount\"\n            onChange={onInputChange}\n            value={amount}\n            inputMode=\"decimal\"\n            small\n          />\n          <ModalSubmit text=\"SEND TIP\" onClick={submitTip} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SendTipModal;\n","import { useCallback, useEffect, useState } from \"react\";\nimport Modal from \"../../../../common/Modal\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\nimport { Http } from \"../../../../utils\";\n\nconst ShareModal = ({ shareData, toggleOpen }) => {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const submitShare = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        const { postID: id, publicKey } = shareData;\n        const sharedPostRaw = {\n          originalAuthor: publicKey,\n          shareDate: Date.now()\n        };\n        const { data } = await Http.post(`/api/gun/put`, {\n          path: `$user>sharedPosts>${id}`,\n          value: sharedPostRaw\n        });\n        if (data.ok) {\n          setSuccess(true);\n        } else {\n          setError(\"Share operation failed\");\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [shareData]\n  );\n\n  const close = useCallback(() => {\n    toggleOpen(null);\n  }, [toggleOpen]);\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!shareData) {\n      setLoading(false);\n      setError(null);\n      setSuccess(false);\n    }\n  }, [shareData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!shareData}\n      modalTitle=\"Share post\"\n      blueBtn={\n        (!loading && !error && !success && \"SHARE\") ||\n        ((success || error) && \"OK\")\n      }\n      disableBlueBtn={loading}\n      onClickBlueBtn={success || error ? close : submitShare}\n      hideXBtn={success}\n      noFullWidth\n    >\n      {success ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post shared successfully!</p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitShare}>\n          {error ? <p className=\"form-error\">{error}</p> : null}\n          {error && <p className=\"tip-modal-desc m-1\">You can try again.</p>}\n          {loading ? <Loader text=\"Sharing...\" /> : null}\n          {!error && !loading && (\n            <p className=\"tip-modal-desc m-1\">\n              This post will be shared on your profile\n            </p>\n          )}\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default ShareModal;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { unlockContent } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst UnlockModal = ({ unlockData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [unlockSuccess, setUnlockSuccess] = useState(false);\n\n  const submitUnlock = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await unlockContent(\n          100,\n          unlockData.publicKey,\n          unlockData.postID\n        )(dispatch);\n        setUnlockSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (unlockData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, unlockData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!unlockData) {\n      setLoading(false);\n      setError(null);\n      setUnlockSuccess(false);\n    }\n  }, [unlockData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!unlockData}\n      modalTitle=\"Unlock content\"\n    >\n      {unlockSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Content unlocked successfully!</p>\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitUnlock}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            100 sats will be sent to the owner of the post to unlock the content\n          </p>\n          <ModalSubmit text=\"UNLOCK\" onClick={submitUnlock} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default UnlockModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"OtherUser_profile-page__OhC-_\",\"profile-container\":\"OtherUser_profile-container__2oq7s\",\"profile-cover\":\"OtherUser_profile-cover__3Fq6P\",\"profile-info-container\":\"OtherUser_profile-info-container__3qnqN\",\"profile-avatar\":\"OtherUser_profile-avatar__S6INq\",\"profile-name\":\"OtherUser_profile-name__3chmC\",\"profile-desc\":\"OtherUser_profile-desc__f9Dsj\",\"config-btn\":\"OtherUser_config-btn__t33_B\",\"config-btn-icon\":\"OtherUser_config-btn-icon__1p_6O\",\"config-btn-text\":\"OtherUser_config-btn-text__1Wg_T\",\"profile-choice-container\":\"OtherUser_profile-choice-container__3-xgF\",\"profile-choice-icon\":\"OtherUser_profile-choice-icon__3iOE1\",\"profile-choice-text\":\"OtherUser_profile-choice-text__deYLl\",\"profile-qrcode\":\"OtherUser_profile-qrcode__2Ok54\",\"profile-qrcode-desc\":\"OtherUser_profile-qrcode-desc__3cp0P\",\"profile-clipboard-container\":\"OtherUser_profile-clipboard-container__1P_p8\",\"profile-clipboard-icon\":\"OtherUser_profile-clipboard-icon__1nW2U\",\"profile-clipboard-text\":\"OtherUser_profile-clipboard-text__2g4AC\",\"publish-content-form\":\"OtherUser_publish-content-form__1YdVa\",\"publish-content-title\":\"OtherUser_publish-content-title__3EsYE\",\"publish-content-icon\":\"OtherUser_publish-content-icon__291ch\",\"m-1\":\"OtherUser_m-1__1dpvP\",\"content-container\":\"OtherUser_content-container__1lOOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FollowBtn_container__2c7Cj\",\"text\":\"FollowBtn_text__1o7CS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SendReqBtn_container__2nY4E\",\"text\":\"SendReqBtn_text__2_2zC\"};","import React from \"react\";\nimport produce from \"immer\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { rifle } from \"../../utils/WebSocket\";\nimport * as Schema from \"../../schema\";\nimport * as Utils from \"../../utils\";\nimport Image from \"../../common/Post/components/Image\";\n\nimport \"./css/ContentWall.scoped.css\";\n\nexport interface ContentWallProps {\n  publicKey: string;\n}\n\nconst ContentWall: React.FC<ContentWallProps> = ({ publicKey }) => {\n  const history = useHistory();\n  const [content, setContent] = React.useState<\n    Record<string, Schema.PublicContentItem>\n  >({});\n  const [error, setError] = React.useState<string>(\"\");\n\n  React.useEffect(() => {\n    const subscription = rifle({\n      query: `${publicKey}::publishedContentPublic::map.on`,\n      onError(e) {\n        setError(JSON.stringify(e, null, 4));\n      },\n      onData(item, key) {\n        setContent(\n          produce(draft => {\n            if (Schema.isPublicContentItem(item)) {\n              draft[key] = item;\n            } else {\n              Utils.logger.warn(\n                `Invalid/incomplete public published content found for public key ...${publicKey.slice(\n                  -8\n                )}, might be due to pending replication or was deleted if null: ${JSON.stringify(\n                  item,\n                  null,\n                  4\n                )}`\n              );\n            }\n          })\n        );\n      }\n    });\n\n    return () => {\n      subscription.then(sub => sub.off());\n    };\n  }, [publicKey]);\n\n  const orderedContent = React.useMemo(() => {\n    return Object.values(content).sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  }, [content]);\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <>\n      {orderedContent.map((item, i) => {\n        return (\n          <div\n            className=\"item\"\n            key={item.id}\n            onClick={() => {\n              history.push(`/item/${item.author}/${item.id}`);\n            }}\n          >\n            {item.type === \"image/embedded\" && (\n              <div style={MEDIA_STYLE}>\n                <Image\n                  disableZoom\n                  hideRibbon\n                  id={item.id}\n                  index={i}\n                  item={item}\n                  postId={null}\n                  tipCounter={null}\n                  tipValue={null}\n                  style={MEDIA_STYLE}\n                />\n              </div>\n            )}\n\n            {item.type === \"video/embedded\" && (\n              <div className=\"video-placeholder\" style={MEDIA_STYLE}>\n                <i className=\"fas fa-video video-icon\" />\n              </div>\n            )}\n\n            <div className=\"title-and-description\">\n              <h2 className=\"title\">{item.title}</h2>\n\n              <p className=\"description\">{item.description || \" \"}</p>\n\n              <span className=\"timestamp\">\n                {Utils.formatTimestamp(item.timestamp)}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst MAX_MEDIA_LONG_EDGE = 100;\n\nconst MEDIA_STYLE: React.CSSProperties = {\n  height: MAX_MEDIA_LONG_EDGE,\n  width: MAX_MEDIA_LONG_EDGE,\n  objectFit: \"contain\"\n};\n\nexport default ContentWall;\n","export default __webpack_public_path__ + \"static/media/logo-alone-2.512c5854.png\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { buyService } from \"../../../../actions/OrdersActions\";\nimport {\n  addAvailableToken,\n  addStreamToken\n} from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst BuyServiceModal = ({ service, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [buySuccess, setBuySuccess] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const submitBuy = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        const { servicePrice, owner, serviceID, serviceType } = service;\n        if (!owner || !serviceID || typeof Number(servicePrice) !== \"number\") {\n          console.error(\"invalid service provided\");\n          console.error(service);\n          return;\n        }\n        setLoading(true);\n        const revealRes = await buyService(\n          owner,\n          serviceID,\n          servicePrice\n        )(dispatch);\n        console.log(revealRes);\n        setBuySuccess(revealRes);\n        if (serviceType === \"torrentSeed\") {\n          addAvailableToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n        if (serviceType === \"streamSeed\") {\n          addStreamToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n      } catch (err) {\n        console.error(err);\n        if (service) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, service]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!service) {\n      setLoading(false);\n      setError(null);\n      setBuySuccess(null);\n    }\n  }, [buySuccess]);\n  const copyRes = useCallback(() => {\n    navigator.clipboard.writeText(JSON.stringify(buySuccess));\n    setCopied(true);\n  }, [buySuccess, setCopied]);\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!service}\n      modalTitle=\"Buy Service\"\n    >\n      {buySuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">\n            You successfully bought this service!\n          </p>\n          <p>{JSON.stringify(buySuccess)}</p>\n          <button onClick={copyRes}>COPY TO CLIPBOARD</button>\n          {copied && <p>Copied!</p>}\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitBuy}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            {service && service.servicePrice} sats will be sent to the owner of\n            the service provider\n          </p>\n          <ModalSubmit text=\"BUY\" onClick={submitBuy} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default BuyServiceModal;\n","import { useCallback, useState } from \"react\";\nimport c from \"classnames\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\n\nimport styles from \"./FollowBtn.module.css\";\n\nexport interface FollowBtnProps {\n  publicKey: string;\n}\n\nconst FollowBtn = ({ publicKey }: FollowBtnProps) => {\n  const isFollowed = !!Store.useSelector(Store.selectFollows).find(\n    f => f.user === publicKey\n  );\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleFollow = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n      setChangingStatus(true);\n\n      let res = { status: -1, data: { errorMessage: \"\" } };\n\n      if (isFollowed) {\n        res = await Utils.Http.delete(`/api/gun/follows/${publicKey}`);\n      } else {\n        res = await Utils.Http.put(`/api/gun/follows/${publicKey}`, {});\n      }\n\n      if (res.status !== 200) {\n        throw new Error(res.data.errorMessage);\n      }\n    } catch (e) {\n      if (isFollowed) {\n        alert(`Could not unfollow: ${e.message}`);\n      } else {\n        alert(`Could not follow: ${e.message}`);\n      }\n    } finally {\n      setChangingStatus(false);\n    }\n  }, [changingStatus, setChangingStatus, isFollowed, publicKey]);\n\n  return (\n    <div className={styles.container} onClick={handleFollow}>\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isFollowed ? \"Unfollow\" : \"Follow\"}\n      </p>\n    </div>\n  );\n};\n\nexport default FollowBtn;\n","import { useCallback, useState } from \"react\";\nimport c from \"classnames\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\nimport { sendHandshakeRequest } from \"../../../../actions/ChatActions\";\n\nimport styles from \"./SendReqBtn.module.css\";\n\nexport interface SendReqBtnProps {\n  publicKey: string;\n}\n\nconst SendReqBtn = ({ publicKey }: SendReqBtnProps) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isInContact = Store.useSelector(Store.selectIsInContact(publicKey));\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleClick = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n\n      if (isInContact) {\n        history.push(`/chat/${publicKey}`);\n        return;\n      }\n\n      setChangingStatus(true);\n\n      await dispatch(sendHandshakeRequest(publicKey));\n\n      setChangingStatus(false);\n    } catch (e) {\n      alert(`Could not send contact request: ${e.message}`);\n      Utils.logger.error(e);\n      setChangingStatus(false);\n    }\n  }, [changingStatus, dispatch, history, isInContact, publicKey]);\n\n  return (\n    <div className={c(styles.container)} onClick={handleClick}>\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isInContact ? \"Message\" : \"Request Contact\"}\n      </p>\n    </div>\n  );\n};\n\nexport default SendReqBtn;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport QRCode, { ImageSettings } from \"qrcode.react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport * as Common from \"shock-common\";\n\nimport Http from \"../../utils/Http\";\n\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\nimport ContentWall from \"../../common/ContentWall\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport logoAlone from \"../../images/logo-alone-2.png\";\nimport SendTipModal from \"../Feed/components/SendTipModal\";\nimport UnlockModal from \"../Feed/components/UnlockModal\";\nimport BuyServiceModal from \"../Feed/components/BuyServiceModal\";\nimport ShareModal from \"../Feed/components/ShareModal\";\nimport * as Store from \"../../store\";\nimport * as gStyles from \"../../styles\";\n\nimport styles from \"./css/OtherUser.module.css\";\nimport FollowBtn from \"./components/FollowBtn\";\nimport SendReqBtn from \"./components/SendReqBtn\";\nimport {\n  subscribeFollows,\n  unsubscribeFollows,\n  subscribeUserPosts as subPosts,\n  subSharedPosts\n} from \"../../actions/FeedActions\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst AVATAR_SIZE = 122;\n\nconst OtherUserPage = () => {\n  //#region controller\n  const dispatch = Store.useDispatch();\n  const history = useHistory();\n  const myGunPub = Store.useSelector(({ node }) => node.publicKey);\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n\n  const { publicKey: userPublicKey, selectedView = \"posts\" } = useParams<{\n    publicKey: string;\n    selectedView: \"posts\" | \"services\" | \"content\";\n  }>();\n  const user = Store.useSelector(Store.selectUser(userPublicKey));\n  const [userServices, setUserServices] = useState({});\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [buyServiceModalData, setBuyServiceModalOpen] = useState(null);\n  const [shareModalData, setShareModalData] = useState(null);\n  const isMe = myGunPub === user.publicKey;\n  // Effect to sub follows\n  useEffect(() => {\n    dispatch(subscribeFollows());\n    return () => {\n      dispatch(unsubscribeFollows());\n    };\n  }, [dispatch]);\n\n  useEffect(() => dispatch(subPosts(userPublicKey)), [dispatch, userPublicKey]);\n  useEffect(() => dispatch(subSharedPosts(userPublicKey)), [\n    dispatch,\n    userPublicKey\n  ]);\n\n  // effect for user profile\n  useEffect(() => {\n    const unsubscribe = dispatch(subscribeUserProfile(userPublicKey));\n\n    return unsubscribe;\n  }, [dispatch, userPublicKey]);\n\n  //effect for services\n  useEffect(() => {\n    Http.get(`/api/gun/otheruser/${userPublicKey}/load/offeredServices`)\n      .then(({ data }) => {\n        setUserServices(data.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }, [userPublicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n      }\n\n      setTipModalOpen(tipData);\n    },\n    [tipModalData]\n  );\n  const toggleBuyServiceModal = useCallback(\n    buyData => {\n      if (buyServiceModalData || !buyData) {\n        setBuyServiceModalOpen(null);\n      }\n\n      setBuyServiceModalOpen(buyData);\n    },\n    [buyServiceModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const toggleShareModal = useCallback(\n    shareData => {\n      console.log(\"share click yo\");\n      console.log(shareData);\n      if (shareModalData || !shareData) {\n        setShareModalData(null);\n      }\n\n      setShareModalData(shareData);\n    },\n    [shareModalData]\n  );\n\n  const posts = Store.useSelector(\n    Store.selectPostsNewestToOldest(userPublicKey)\n  );\n\n  const copyClipboard = useCallback(() => {\n    navigator.clipboard.writeText(userPublicKey);\n  }, [userPublicKey]);\n  const renderPosts = () => {\n    if (posts.length === 0) {\n      return <Loader text=\"loading posts...\" />;\n    }\n    return posts.map(post => {\n      if (Common.isSharedPost(post)) {\n        return (\n          <Suspense fallback={<Loader />} key={post.originalPostID}>\n            <SharedPost\n              openTipModal={toggleTipModal}\n              openUnlockModal={toggleUnlockModal}\n              openShareModal={toggleShareModal}\n              postID={post.originalPostID}\n              sharerPublicKey={post.sharedBy}\n            />\n          </Suspense>\n        );\n      }\n\n      return (\n        <Suspense fallback={<Loader />} key={post.id}>\n          <Post\n            id={post.id}\n            publicKey={post.authorId}\n            openTipModal={toggleTipModal}\n            openUnlockModal={toggleUnlockModal}\n            openDeleteModal={null}\n            openShareModal={toggleShareModal}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    return Object.entries(userServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, service]) => {\n        const buyCB = () => {\n          setBuyServiceModalOpen({\n            // @ts-expect-error\n            ...service,\n            serviceID: id,\n            owner: userPublicKey\n          });\n        };\n        return (\n          <div className={styles.post}>\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceType}</p>\n            <strong>Service Title</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceTitle}</p>\n            <strong>Service Description</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceDescription}</p>\n            <strong>Service Condition</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceCondition}</p>\n            <strong>Service Price</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.servicePrice}</p>\n            <button onClick={buyCB}>BUY SERVICE</button>\n          </div>\n        );\n      });\n  };\n  const renderContent = () => {\n    return (\n      <div className={styles[\"content-container\"]}>\n        <ContentWall publicKey={userPublicKey} />\n      </div>\n    );\n  };\n  const handleViewChange = useCallback(\n    (selected: \"posts\" | \"services\" | \"content\") => {\n      history.replace(`/otherUser/${userPublicKey}/${selected}`);\n    },\n    [history, userPublicKey]\n  );\n  //#endregion controller\n\n  return (\n    <div className={classNames(\"page-container\", styles[\"profile-page\"])}>\n      <div className={classNames(styles[\"profile-container\"])}>\n        <div className=\"profile-cover\">\n          {user.header && (\n            <img\n              className=\"w-100\"\n              alt=\"User set profile header.\"\n              src={`data:image/jpeg;base64,${user.header}`}\n            />\n          )}\n        </div>\n\n        <div className={styles[\"profile-info-container\"]}>\n          <div\n            className={styles[\"profile-avatar\"]}\n            style={{\n              height: `${AVATAR_SIZE}px`,\n              width: `${AVATAR_SIZE}px`\n            }}\n          >\n            <ShockAvatar\n              height={AVATAR_SIZE}\n              publicKey={userPublicKey}\n              greyBorder\n            />\n          </div>\n          <div>\n            <p className={styles[\"profile-name\"]}>{user.displayName}</p>\n            <p className={styles[\"profile-desc\"]}>\n              {user.bio || \"Lightning.Page user\"}\n            </p>\n\n            <div className={gStyles.rowCentered}>\n              {!isMe && <FollowBtn publicKey={userPublicKey} />}\n\n              <Pad amt={24} insideRow />\n\n              {!isMe && <SendReqBtn publicKey={userPublicKey} />}\n            </div>\n          </div>\n        </div>\n\n        <ProfileDivider\n          onChange={handleViewChange}\n          selected={selectedView}\n          showContentBtn\n        />\n\n        <div>\n          {selectedView === \"posts\" && renderPosts()}\n          {selectedView === \"services\" && renderServices()}\n          {selectedView === \"content\" && renderContent()}\n        </div>\n\n        {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n        <Pad amt={200} />\n\n        <Modal\n          toggleModal={toggleModal}\n          modalOpen={profileModalOpen}\n          contentStyle={{\n            padding: \"40px 30px\"\n          }}\n          noFullWidth\n        >\n          <QRCode\n            bgColor=\"#23282d\"\n            fgColor=\"#64bbff\"\n            value={userPublicKey}\n            size={180}\n            className={styles[\"profile-qrcode\"]}\n            imageSettings={QR_IMAGE_SETTINGS}\n          />\n          <p className={styles[\"profile-qrcode-desc\"]}>\n            Scan this code to contact this user\n          </p>\n          <div\n            className={styles[\"profile-clipboard-container\"]}\n            onClick={copyClipboard}\n          >\n            <img\n              src={ClipboardIcon}\n              className={styles[\"profile-clipboard-icon\"]}\n              alt=\"\"\n            />\n            <p className={styles[\"profile-clipboard-text\"]}>\n              Tap to copy to clipboard\n            </p>\n          </div>\n        </Modal>\n        <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n        <UnlockModal\n          unlockData={unlockModalData}\n          toggleOpen={toggleUnlockModal}\n        />\n        <BuyServiceModal\n          service={buyServiceModalData}\n          toggleOpen={toggleBuyServiceModal}\n        />\n        <ShareModal shareData={shareModalData} toggleOpen={toggleShareModal} />\n\n        <AddBtn\n          onClick={toggleModal}\n          large\n          iconURL={QRCodeIcon}\n          icon={null}\n          label={null}\n        />\n      </div>\n\n      <BottomBar />\n    </div>\n  );\n};\n\nconst QR_IMAGE_SETTINGS: ImageSettings = {\n  src: logoAlone,\n  height: 36,\n  width: 36,\n  excavate: true\n};\n\nexport default OtherUserPage;\n"],"sourceRoot":""}