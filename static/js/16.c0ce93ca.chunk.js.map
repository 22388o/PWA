{"version":3,"sources":["common/Post/components/Video/index.js","images/share.svg","common/Post/index.js","utils/Cache.js","utils/Promise.js","utils/Torrents.js","images/av1.jpg","common/Post/SharedPost.js"],"names":["Video","id","item","index","postId","tipValue","tipCounter","hideRibbon","width","contentURL","decodeURIComponent","magnetURI","replace","videoStyle","className","style","cursor","data-torrent","data-file-key","controls","data-played","src","TipRibbon","zoomed","Post","timestamp","publicKey","openTipModal","openUnlockModal","contentItems","username","openDeleteModal","undefined","openShareModal","_","unlockedContent","Store","content","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","useState","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","liveStatus","setLiveStatus","viewersCounter","setViewersCounter","isOnlineNode","useEffect","values","Object","videoContent","find","type","streamContent","status","getMediaContent","useCallback","entries","filter","forEach","k","e","path","parseContent","key","text","finalItem","cached","Image","Stream","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","on","scrollSnapList","length","window","addEventListener","removeEventListener","off","tipPost","targetType","postID","unlockPost","deletePost","shared","sharePost","Tooltip","rebuild","console","log","ShockAvatar","height","Pad","amt","insideRow","to","DateTime","fromMillis","toRelative","onClick","map","Array","from","classNames","scrollTo","ref","data-tip","alt","ShareIcon","color","marginLeft","getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","persist","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","element","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","file","extension","name","split","slice","supportedFileType","includes","fileType","webTorrentClient","WebTorrent","attachMedia","posts","torrentMode","allowDuplicates","torrentTasks","post","get","add","torrent","files","target","destroy","torrentElement","format","toLowerCase","endsWith","compatibleURL","elementSrc","getAttribute","setAttribute","renderTo","getBlob","err","blob","querySelector","dataset","played","reduce","torrents","SharedPost","sharerProfile","originalPostProfile","origPost","originalPost","sharedTimestamp","postPublicKey","loadPostMedia","useLayoutEffect","selfPublicKey","Common","lastSeenApp","displayName","date","alias","Loader"],"mappings":"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","file":"static/js/16.c0ce93ca.chunk.js","sourcesContent":["import TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\n\nconst Video = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null\n}) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = {};\n  if (width) {\n    videoStyle.width = width;\n  }\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","export default __webpack_public_path__ + \"static/media/share.8ed36b2d.svg\";","// @ts-check\nimport { useEffect, useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../store\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\n\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport \"./css/index.scoped.css\";\n\nimport ShareIcon from \"../../images/share.svg\";\n\nconst Post = ({\n  id,\n  timestamp,\n  tipCounter,\n  tipValue,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  contentItems = {},\n  username,\n  openDeleteModal = undefined,\n  openShareModal = _ => {}\n}) => {\n  const unlockedContent = Store.useSelector(\n    ({ content }) => content.unlockedContent\n  );\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [liveStatus, setLiveStatus] = useState(\"\");\n  const [viewersCounter, setViewersCounter] = useState(0);\n\n  const isOnlineNode = /*Utils.isOnline(\n    Store.useSelector(Store.selectUser(publicKey)).lastSeenApp\n  );*/ true;\n\n  //effect for liveStatus and viewers counter\n  useEffect(() => {\n    const values = Object.values(contentItems);\n    const videoContent = values.find(\n      item => item.type === \"video/embedded\" && item.liveStatus === \"wasLive\"\n    );\n    const streamContent = values.find(\n      item => item.type === \"stream/embedded\" && item.liveStatus === \"live\"\n    );\n    let status = \"\";\n    if (videoContent) {\n      status = \"Was Live\"\n    }\n    if (streamContent) {\n      status = \"Is Live\"\n      if(streamContent.viewersCounter){\n        setViewersCounter(streamContent.viewersCounter)\n      }\n    }\n    if (status) {\n      setLiveStatus(status);\n    }\n  }, [contentItems, setLiveStatus]);\n\n  const getMediaContent = useCallback(() => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  }, [contentItems]);\n\n  const getTextContent = () => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(() => {\n    getMediaContent().forEach(([k, e]) => {\n      const path = `${publicKey}>posts>${k}`;\n      if (e.isPrivate && !unlockedContent[path]) {\n        setIsPrivate(true);\n      }\n    });\n  }, [contentItems, getMediaContent, publicKey, unlockedContent]);\n\n  const parseContent = ([key, item], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n    const finalItem = item;\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`;\n      const cached = unlockedContent[path];\n      if (cached) {\n        finalItem.magnetURI = cached;\n      } else {\n        return (\n          <div key={key}>\n            <i className=\"fas fa-lock fa-10x\"></i>\n          </div>\n        );\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n    if (item.type === \"stream/embedded\") {\n      return (\n        <Stream\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  // useEffect(() => {\n  //   attachMedia();\n  // }, [contentItems.length]);\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id, shared: false });\n  }, [id, openDeleteModal]);\n\n  const sharePost = useCallback(() => {\n    openShareModal({\n      targetType: \"share\",\n      postID: id,\n      publicKey\n    });\n  }, [publicKey, id, openShareModal]);\n\n  useEffect(() => {\n    try {\n      Tooltip.rebuild();\n    } catch (e) {\n      console.log(`Error inside <Post />: `, e);\n    }\n  }, []);\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={publicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <div className=\"username\">\n              <Link to={`/otherUser/${publicKey}`}>{username}</Link>\n              {liveStatus && (\n                <p className=\"liveStatus\">\n                  {liveStatus}\n                  <i\n                    className={`fas fa-circle liveStatusIcon ${\n                      liveStatus === \"Is Live\" ? \"liveIcon\" : \"\"\n                    }`}\n                  ></i>  \n                  {liveStatus === 'Is Live' &&  <span> | {viewersCounter} watching</span>}\n                </p>\n              )}\n            </div>\n            <p>\n              {timestamp && typeof timestamp === \"number\"\n                ? DateTime.fromMillis(timestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    // TODO: Get the actual ID here. However posts can't be\n                    // edited so index is stable.\n                    key={key}\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div></div>\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n        {openShareModal && (\n          <div className=\"icon-tip-btn\" data-tip={\"share\"} onClick={sharePost}>\n            <img\n              alt=\"Share this post\"\n              src={ShareIcon}\n              style={{ color: \"#4285b9\", marginLeft: \"auto\" }}\n            />\n          </div>\n        )}\n        {!openShareModal && <div></div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = true;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import WebTorrent from \"webtorrent\";\nimport { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nconst supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: true,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nconst _getFileType = file => {\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const supportedFileType = Object.entries(\n    supportedFileTypes\n  ).filter(([type, options]) => options.formats.includes(extension))[0];\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport const webTorrentClient = new WebTorrent();\n\nexport const attachMedia = (\n  posts = [],\n  torrentMode = true,\n  allowDuplicates = false\n) => {\n  const torrentTasks = posts\n    .map(post => {\n      const { contentItems, id } = post;\n      return Object.entries(contentItems)\n        .filter(([key, item]) => supportedFileTypes[item.type])\n        .map(([key, item]) => () =>\n          new Promise(resolve => {\n            const torrentExists = webTorrentClient.get(item.magnetURI);\n\n            if (torrentExists && !allowDuplicates) {\n              resolve(true);\n              return;\n            }\n\n            webTorrentClient.add(item.magnetURI, async torrent => {\n              // Proceed to the next torrent in queue\n              resolve(true);\n\n              const files = torrent.files.filter(file => {\n                const extension = file.name?.split(\".\")?.slice(-1)[0];\n                const supportedFileType = Object.entries(\n                  supportedFileTypes\n                ).filter(([type, options]) =>\n                  options.formats.includes(extension)\n                )[0];\n                if (supportedFileType) {\n                  const [, fileType] = supportedFileType;\n                  const matched = fileType.formats.includes(extension);\n                  return matched;\n                }\n                return false;\n              });\n\n              files.map(async file => {\n                const fileType = _getFileType(file);\n\n                if (!fileType) {\n                  return;\n                }\n\n                const fileName = `${id}-${key}-${file.name}`;\n\n                const element = fileType.element;\n                const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                const cachedFile = await getCachedFile(fileName);\n\n                if (cachedFile) {\n                  const torrent = webTorrentClient.get(item.magnetURI);\n\n                  if (torrent) {\n                    torrent.destroy();\n                  }\n\n                  renderCachedFile(cachedFile, target);\n                  return;\n                }\n\n                const torrentElements = document.querySelectorAll(target);\n                torrentElements.forEach(torrentElement => {\n                  const contentURL = decodeURIComponent(\n                    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n                  );\n                  const [compatibleURL] = fileType.formats.filter(format =>\n                    contentURL\n                      .toLowerCase()\n                      .endsWith(`.${format.toLowerCase()}`)\n                  );\n                  const elementSrc = torrentElement.getAttribute(\"src\");\n\n                  if ((torrentMode || !compatibleURL) && !elementSrc) {\n                    file.renderTo(torrentElement, fileType.options);\n                    return;\n                  }\n\n                  torrentElement.setAttribute(\"src\", contentURL);\n                });\n              });\n\n              torrent.on(\"done\", () => {\n                files.map(file => {\n                  const fileType = _getFileType(file);\n                  const fileName = `${id}-${key}-${file.name}`;\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n\n                  file.getBlob(async (err, blob) => {\n                    if (err) {\n                      console.warn(err);\n                      return;\n                    }\n\n                    await saveFile(fileName, blob);\n                    const element = document.querySelector(target);\n                    if (\n                      element?.dataset.played === \"false\" &&\n                      !element?.getAttribute(\"src\")\n                    ) {\n                      const cachedFile = await getCachedFile(fileName);\n                      renderCachedFile(cachedFile, target);\n                    }\n                  });\n\n                  return file;\n                });\n              });\n            });\n          })\n        );\n    })\n    .reduce((torrents, contentItems) => [...torrents, ...contentItems], []);\n\n  runSerial(torrentTasks);\n};\n","export default __webpack_public_path__ + \"static/media/av1.e1539bb2.jpg\";","// @ts-check\nimport { useCallback, useLayoutEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"react-tooltip\";\nimport * as Common from \"shock-common\";\n\nimport Post from \".\";\n\nimport av1 from \"../../images/av1.jpg\";\nimport \"../Post/css/index.scoped.css\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport Loader from \"../Loader\";\nimport * as Store from \"../../store\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\n/**\n * @typedef {import('../../schema').Post} Post\n */\n\nconst SharedPost = ({\n  sharerProfile,\n  originalPostProfile,\n  originalPost: origPost,\n  sharedTimestamp,\n  postPublicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = undefined,\n  openShareModal = (_)=>{}\n}) => {\n  /** @type {Post|undefined} */\n  const originalPost = origPost;\n  const loadPostMedia = useCallback(async () => {\n    if (originalPost) {\n      attachMedia([originalPost], false);\n    }\n  }, [originalPost]);\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id: originalPost.id, shared: true });\n  }, [originalPost, openDeleteModal]);\n\n  useLayoutEffect(() => {\n    Tooltip.rebuild();\n    loadPostMedia();\n  }, [loadPostMedia]);\n\n  const selfPublicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const isOwn = sharerProfile.publicKey === selfPublicKey;\n  const isAppOnline = Common.isAppOnline(\n    Store.useSelector(Store.selectUser(sharerProfile.publicKey)).lastSeenApp\n  );\n\n  return (\n    <div className=\"post shared-post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={sharerProfile.publicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <p>{sharerProfile?.displayName}</p>\n            <p>\n              {sharedTimestamp && typeof sharedTimestamp === \"number\"\n                ? DateTime.fromMillis(sharedTimestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"shared-content\">\n        {originalPost && originalPostProfile ? (\n          <Post\n            id={originalPost.id}\n            timestamp={originalPost.date}\n            // @ts-expect-error tipCounter not wired right now I think\n            tipCounter={originalPost.tipCounter || 0}\n            // @ts-expect-error tipValue ??\n            tipValue={originalPost.tipValue || 0}\n            publicKey={postPublicKey}\n            openTipModal={openTipModal}\n            openUnlockModal={openUnlockModal}\n            contentItems={originalPost.contentItems ?? {}}\n            username={\n              originalPostProfile.displayName ?? originalPostProfile.alias\n            }\n            openShareModal={openShareModal}\n          />\n        ) : (\n          <Loader text=\"Loading Post...\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SharedPost;\n"],"sourceRoot":""}