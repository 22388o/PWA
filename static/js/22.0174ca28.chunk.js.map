{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/DialogNav/index.js","utils/seed.tsx","pages/Profile/publishContent.tsx"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","DIALOG_NAV_MIN_HEIGHT_PX","CONTAINER_STYLE","minHeight","DialogNav","pageTitle","drawerVisible","onHeight","Utils","goBack","window","history","back","divRefCb","el","getBoundingClientRect","height","e","console","log","ref","EnrollToken","seedUrl","seedToken","a","array","Uint8Array","crypto","getRandomValues","token","Array","prototype","map","call","x","toString","slice","join","reqData","seed_token","wallet_token","fetch","method","headers","body","JSON","stringify","status","Error","RequestToken","availableTokens","seedProviderPub","serviceID","servicePrice","tokenInfo","deleteToken","availableToken","key","Object","hasOwnProperty","element","tokens","Http","post","type","amt","to","memo","feeLimit","ackInfo","data","orderAck","parse","response","PublishContentPage","dispatch","useDispatch","useHistory","Store","content","seedInfo","userProfiles","useState","error","setError","loading","setLoading","mediaPreviews","setMediaPreviews","setTitle","description","setDescription","postType","setPostType","setCreatePost","imageFile","useRef","videoFile","promptInfo","setPromptInfo","selectedFiles","setSelectedFiles","onSubmitCb","length","finalSeedUrl","formData","FormData","from","forEach","file","append","Authorization","res","json","resJson","message","err","removeUnavailableToken","torrent","magnet","firstFile","contentItem","magnetURI","width","addPublishedContent","published","push","errorMessage","closePrompt","submitPrompt","onSubmit","preventDefault","SeedServiceProvided","get","service","onDiscard","onInputChange","target","value","name","checked","onSelectedFile","files","promises","index","Promise","reader","FileReader","onload","startsWith","uri","result","readAsDataURL","allSettled","then","previews","singleRes","onSelectImageFile","current","click","onSelectVideoFile","overlay","fullScreen","text","onReset","display","flexDirection","alignItems","justifyContent","htmlFor","id","onChange","appearance","backgroundColor","color","marginLeft","placeholder","accept","multiple","prev","src","controls","rows","padding"],"mappings":"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","file":"static/js/22.0174ca28.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      <div className=\"head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"open\": modalOpen })}>\n      <div className=\"backdrop\" onClick={closeModal} />\n      <div className=\"container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nexport const DIALOG_NAV_MIN_HEIGHT_PX = 73;\n/** @type {import('react').CSSProperties} */\nconst CONTAINER_STYLE = {\n  minHeight: DIALOG_NAV_MIN_HEIGHT_PX\n};\n\nconst DialogNav = ({\n  pageTitle,\n  drawerVisible = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in DialogNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className=\"dialog-nav-container\"\n      ref={divRefCb}\n      style={CONTAINER_STYLE}\n    >\n      <div className=\"dialog-nav-back\" onClick={goBack}>\n        <i className=\"icon icon-thin-back\"></i>\n      </div>\n      <p className=\"dialog-nav-title\">{pageTitle}</p>\n      <div\n        className={classNames({\n          \"dialog-nav-menu-btn\": true,\n          \"dialog-nav-hidden\": !drawerVisible\n        })}\n      >\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DialogNav;\n","import Http from \"./Http\";\n\nexport const EnrollToken = async (seedUrl, seedToken) => {\n  const array = new Uint8Array(32);\n  window.crypto.getRandomValues(array);\n  const token = Array.prototype.map\n    .call(array, x => (\"00\" + x.toString(16)).slice(-2))\n    .join(\"\");\n  const reqData = {\n    seed_token: seedToken,\n    wallet_token: token\n  };\n  const res = await fetch(`${seedUrl}/api/enroll_token`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(reqData)\n  });\n  if (res.status !== 200) {\n    throw new Error(\"torrentSeed service currently not available\");\n  }\n  return token;\n};\n\nexport const RequestToken = async ({\n  availableTokens,\n  seedUrl,\n  seedToken,\n  seedProviderPub,\n  serviceID,\n  servicePrice\n}) => {\n  let tokenInfo = null;\n  let deleteToken = false;\n  let availableToken = null;\n  for (const key in availableTokens) {\n    if (Object.prototype.hasOwnProperty.call(availableTokens, key)) {\n      const element = availableTokens[key];\n      if (element[0]) {\n        availableToken = { seedUrl: key, tokens: element };\n        break;\n      }\n    }\n  }\n  console.log(seedProviderPub);\n  console.log(serviceID);\n  console.log(servicePrice);\n  if (seedUrl && seedToken) {\n    console.log(\"USING SELF SEED TOKEN\");\n    const token = await EnrollToken(seedUrl, seedToken);\n    console.log(\"token\");\n    console.log(token);\n    tokenInfo = { seedUrl, tokens: [token] };\n  } else if (availableToken) {\n    console.log(\"USING AVAILABLE TOKEN\");\n    tokenInfo = availableToken;\n    deleteToken = true;\n  } else if (seedProviderPub && serviceID && servicePrice) {\n    console.log(\"USING DEFAULT TOKEN PROVIDER\");\n    const { data, status } = await Http.post(\"/api/lnd/unifiedTrx\", {\n      type: \"service\",\n      amt: servicePrice,\n      to: seedProviderPub,\n      memo: \"\",\n      feeLimit: 500,\n      ackInfo: serviceID\n    });\n    if (status !== 200) {\n      throw new Error(\"seed token request failed\");\n    }\n    console.log(data);\n    const { orderAck } = data;\n    tokenInfo = JSON.parse(orderAck.response);\n  } else {\n    throw new Error(\"provide the token data or use default seed provider\");\n  }\n  return { ...tokenInfo, deleteToken };\n};\n","import React, { useCallback, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./css/index.scoped.css\";\n\nimport Loader from \"../../common/Loader\";\nimport DialogNav from \"../../common/DialogNav\";\nimport Http from \"../../utils/Http\";\nimport {\n  addPublishedContent,\n  removeUnavailableToken\n} from \"../../actions/ContentActions\";\nimport { EnrollToken, RequestToken } from \"../../utils/seed\";\nimport { useHistory } from \"react-router\";\nimport * as Store from \"../../store\";\nimport Modal from \"../../common/Modal\";\nconst PublishContentPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const seedProviderPub = Store.useSelector(\n    ({ content }) => content.seedProviderPub\n  );\n  const { seedUrl, seedToken } = Store.useSelector(\n    ({ content }) => content.seedInfo\n  );\n  const availableTokens = Store.useSelector(\n    ({ content }) => content.availableTokens\n  );\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [mediaPreviews, setMediaPreviews] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [postType, setPostType] = useState(\"public\");\n  const [createPost, setCreatePost] = useState(false);\n  const imageFile = useRef(null);\n  const videoFile = useRef(null);\n  const [promptInfo, setPromptInfo] = useState(null);\n\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  const onSubmitCb = useCallback(\n    async (servicePrice?, serviceID?) => {\n      console.log([title, description, selectedFiles]);\n      if (selectedFiles.length === 0) {\n        setError(\"no selected files\");\n        return;\n      }\n      setLoading(true);\n      try {\n        const {\n          seedUrl: finalSeedUrl,\n          tokens,\n          deleteToken\n        } = await RequestToken({\n          availableTokens,\n          seedProviderPub,\n          seedToken,\n          seedUrl,\n          serviceID,\n          servicePrice\n        });\n        const formData = new FormData();\n        //TODO support public/private content by requesting two tokens and doing this req twice\n        Array.from(selectedFiles).forEach(file =>\n          formData.append(\"files\", file)\n        );\n        formData.append(\"info\", \"extraInfo\");\n        formData.append(\"comment\", \"comment\");\n        const res = await fetch(`${finalSeedUrl}/api/put_file`, {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${tokens[0]}`\n          },\n          body: formData\n        });\n        const resJson = await res.json();\n        console.log(resJson);\n        if (resJson.error && resJson.error.message) {\n          const err = resJson.error.message;\n          if (err === \"The provided token has already been used\") {\n            setError(\"An error occurred, please try again\");\n            removeUnavailableToken(finalSeedUrl, tokens[0])(dispatch);\n          } else {\n            setError(err);\n          }\n          setLoading(false);\n          return;\n        }\n        const { torrent } = resJson.data;\n        const { magnet } = torrent;\n        const [firstFile] = mediaPreviews;\n        console.log(firstFile);\n        let type = \"image/embedded\";\n        if (firstFile.type === \"video\") {\n          type = \"video/embedded\";\n        }\n        const contentItem = {\n          type,\n          magnetURI: magnet,\n          width: 0,\n          height: 0\n        };\n        const published = await addPublishedContent(contentItem)(dispatch);\n        console.log(\"content publish complete\");\n        console.log(published);\n        setLoading(false);\n        if (deleteToken) {\n          removeUnavailableToken(finalSeedUrl, tokens[0])(dispatch);\n        }\n        history.push(\"/profile\");\n      } catch (err) {\n        console.log(err);\n        setError(err?.errorMessage ?? err?.message);\n        setLoading(false);\n      }\n    },\n    [\n      title,\n      description,\n      selectedFiles,\n      mediaPreviews,\n      availableTokens,\n      seedUrl,\n      seedToken,\n      history,\n      dispatch,\n      setError\n    ]\n  );\n\n  const closePrompt = useCallback(() => {\n    setPromptInfo(null);\n  }, [setPromptInfo]);\n  const submitPrompt = useCallback(() => {\n    const { servicePrice, serviceID } = promptInfo;\n    onSubmitCb(servicePrice, serviceID);\n    setPromptInfo(null);\n  }, [promptInfo, onSubmitCb, setPromptInfo]);\n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      let availableToken = false;\n      for (const key in availableTokens) {\n        if (Object.prototype.hasOwnProperty.call(availableTokens, key)) {\n          const element = availableTokens[key];\n          if (element[0]) {\n            availableToken = true;\n            break;\n          }\n        }\n      }\n      let serviceID = \"\";\n      if (userProfiles[seedProviderPub]) {\n        //@ts-expect-error\n        serviceID = userProfiles[seedProviderPub].SeedServiceProvided;\n      }\n      if (availableToken || (seedUrl && seedToken)) {\n        onSubmitCb();\n      } else if (serviceID && seedProviderPub) {\n        const { data: service } = await Http.get(\n          `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${serviceID}`\n        );\n        const { servicePrice } = service.data;\n        console.log(service);\n        setPromptInfo({ servicePrice, serviceID });\n      } else {\n        setError(\"No way found to publish content\");\n      }\n    },\n    [availableTokens, setPromptInfo, setError, onSubmitCb]\n  );\n\n  const onDiscard = useCallback(\n    async e => {\n      e.preventDefault();\n      setTitle(\"\");\n      setDescription(\"\");\n      setError(null);\n      setPromptInfo(null);\n      setSelectedFiles([]);\n      setMediaPreviews([]);\n    },\n    [\n      setDescription,\n      setTitle,\n      setError,\n      setPromptInfo,\n      setSelectedFiles,\n      setMediaPreviews\n    ]\n  );\n  const onInputChange = useCallback(\n    e => {\n      const { value, name, checked } = e.target;\n      //e.preventDefault()\n      switch (name) {\n        case \"title\": {\n          setTitle(value);\n          return;\n        }\n        case \"description\": {\n          setDescription(value);\n          return;\n        }\n        case \"postType\": {\n          setPostType(value);\n          return;\n        }\n        case \"createPost\": {\n          console.log(\"create post\");\n          return;\n        }\n        default:\n          return;\n      }\n    },\n    [setTitle, setDescription, setCreatePost]\n  );\n  const onSelectedFile = useCallback(\n    e => {\n      e.preventDefault();\n\n      console.log(e.target.files);\n      setSelectedFiles(e.target.files);\n      const promises = Array.from(e.target.files).map((file, index) => {\n        console.log(\"doing file...\");\n        return new Promise(res => {\n          //@ts-ignore\n          const { type } = file;\n          //@ts-ignore\n          const reader = new FileReader();\n\n          reader.onload = function (e) {\n            if (type.startsWith(\"image/\")) {\n              res({ type: \"image\", uri: e.target.result, index });\n            }\n            if (type.startsWith(\"video/\")) {\n              res({ type: \"video\", uri: e.target.result, index });\n            }\n          };\n          //@ts-ignore\n          reader.readAsDataURL(file);\n        });\n      });\n      Promise.allSettled(promises).then(res => {\n        const previews = [];\n        res.forEach(singleRes => {\n          if (singleRes.status === \"fulfilled\") {\n            previews.push(singleRes.value);\n          }\n        });\n        console.log(previews);\n        setMediaPreviews(previews);\n      });\n    },\n    [setSelectedFiles, setMediaPreviews]\n  );\n  const onSelectImageFile = useCallback(\n    e => {\n      e.preventDefault();\n      //imageFile.current.onChange =\n      imageFile.current.click();\n    },\n    [imageFile]\n  );\n  const onSelectVideoFile = useCallback(\n    e => {\n      e.preventDefault();\n      videoFile.current.click();\n    },\n    [videoFile]\n  );\n  return (\n    <div className=\"publish-content-form-container m-1\">\n      {loading ? (\n        <Loader overlay fullScreen text=\"Creating content...\" />\n      ) : null}\n      <DialogNav drawerVisible={false} pageTitle=\"PUBLISH CONTENT\" />\n\n      <form\n        className=\"publish-content-form\"\n        onSubmit={onSubmit}\n        onReset={onDiscard}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          }}\n        >\n          <h2>\n            Say Something<div className=\"line\"></div>\n          </h2>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\"\n          }}\n        >\n          <div className=\"publish-content-title\">\n            <label htmlFor=\"title\">\n              <strong>Title</strong>\n            </label>\n          </div>\n          <div>\n            <strong>\n              Audience:{\" \"}\n              <i\n                className={`fas ${\n                  postType === \"public\" ? \"fa-globe-europe\" : \"fa-credit-card\"\n                }`}\n              ></i>\n            </strong>\n            <select\n              name=\"postType\"\n              id=\"postType\"\n              onChange={onInputChange}\n              style={{\n                appearance: \"none\",\n                backgroundColor: \"rgba(0,0,0,0)\",\n                color: \"var(--main-blue)\",\n                marginLeft: \"0.3rem\"\n              }}\n            >\n              <option\n                value=\"public\"\n                style={{\n                  backgroundColor: \"rgba(0,0,0,0)\",\n                  color: \"var(--main-blue)\"\n                }}\n              >\n                Public\n              </option>\n              <option value=\"private\">Paywall</option>\n            </select>\n          </div>\n        </div>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"How I monetized my content with ShockWallet\"\n          value={title}\n          onChange={onInputChange}\n          className=\"input-field\"\n        />\n        <div className=\"publish-content-title\">\n          <label htmlFor=\"contents\">\n            <strong>Contents</strong>\n          </label>\n        </div>\n        <div className=\"m-b-1\">\n          <input\n            type=\"file\"\n            id=\"file\"\n            ref={imageFile}\n            style={{ display: \"none\" }}\n            accept=\"image/*\"\n            multiple\n            onChange={onSelectedFile}\n          />\n          <input\n            type=\"file\"\n            id=\"file\"\n            ref={videoFile}\n            style={{ display: \"none\" }}\n            accept=\"video/*\"\n            multiple\n            onChange={onSelectedFile}\n          />\n          <i\n            className=\"fas fa-images publish-content-icon\"\n            onClick={onSelectImageFile}\n          ></i>\n          <i\n            className=\"fas fa-video publish-content-icon\"\n            onClick={onSelectVideoFile}\n          ></i>\n          <div>\n            {mediaPreviews.length > 0 &&\n              mediaPreviews.map(prev => {\n                if (prev.type === \"image\") {\n                  return (\n                    <img\n                      src={prev.uri}\n                      key={prev.index.toString()}\n                      width={100}\n                      className=\"m-1\"\n                    ></img>\n                  );\n                }\n                if (prev.type === \"video\") {\n                  return (\n                    <video\n                      src={prev.uri}\n                      key={prev.index.toString()}\n                      controls\n                      width={100}\n                      className=\"m-1\"\n                    ></video>\n                  );\n                }\n              })}\n          </div>\n          {/*<i className=\"fas fa-music publish-content-icon\"></i>\n      <i className=\"fas fa-paperclip publish-content-icon\"></i>*/}\n        </div>\n        <div className=\"publish-content-title\">\n          <label htmlFor=\"description\">\n            <strong>Description</strong>\n          </label>\n        </div>\n        <textarea\n          name=\"description\"\n          placeholder=\"I made a quick video to show you guys how easy it is to run your own social platform on ShockWallet, and start earning Bitcoin\"\n          rows={3}\n          value={description}\n          onChange={onInputChange}\n          className=\"input-field\"\n        />\n        <div\n          style={{ display: \"flex\", alignItems: \"center\", marginLeft: \"auto\" }}\n        >\n          <label htmlFor=\"createPost\">Create Post/Teaser?</label>\n          <input\n            type=\"checkbox\"\n            name=\"createPost\"\n            style={{ marginLeft: \"0.2em\" }}\n          />\n        </div>\n\n        {error ? <p className=\"error-container\">{error}</p> : null}\n        <div className=\"flex-center\">\n          <input type=\"reset\" value=\"reset\" className=\"shock-form-button m-1\" />\n          <input\n            type=\"submit\"\n            value=\"submit\"\n            className=\"shock-form-button-confirm m-1\"\n          />\n        </div>\n      </form>\n      {promptInfo && (\n        <Modal modalOpen={promptInfo && !loading} toggleModal={closePrompt}>\n          <div style={{ padding: \"1rem\" }}>\n            <p>\n              The service from the default service provider will cost:{\" \"}\n              <strong>{promptInfo.servicePrice} sats</strong>\n            </p>\n\n            <button className=\"shock-form-button m-1\" onClick={onDiscard}>\n              cancel\n            </button>\n            <button\n              className=\"shock-form-button-confirm m-1\"\n              onClick={submitPrompt}\n            >\n              confirm\n            </button>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default PublishContentPage;\n"],"sourceRoot":""}