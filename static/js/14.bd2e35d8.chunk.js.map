{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/MainNav/index.js","common/Line/index.tsx","utils/Number.js","common/AddBtn/index.js","pages/Advanced/components/Transaction/index.js","pages/Advanced/components/Channel/index.tsx","pages/Advanced/components/Peer/index.tsx","pages/Advanced/components/AddPeerModal/index.js","pages/Advanced/components/AddChannelModal/index.js","pages/Advanced/components/InfoModal/InfoModal.tsx","pages/Advanced/index.tsx"],"names":["ModalContent","children","style","contentClass","className","classNames","ModalTitle","title","toggleModal","Utils","forceRenderTitleBar","hideXBtn","onClick","OVERLAY_STYLE","borderRadius","Modal","modalOpen","modalTitle","contentStyle","disableBackdropClose","noFullWidth","blueBtn","disableBlueBtn","onClickBlueBtn","redBtn","disableRedBtn","onClickRedBtn","error","textIfLoading","closeModal","useCallback","handleBackdropClick","modal","open","container","Loader","overlay","text","disabled","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","group","fas","MainNav","pageTitle","absolute","solid","enableBackButton","onHeight","dispatch","useDispatch","goBack","window","history","back","openDrawer","gunPublicKey","useSelector","node","publicKey","divRefCb","el","getBoundingClientRect","height","e","console","log","ref","Line","color","length","width","useMemo","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","COMMA_REGEX","SAT_DENOMINATION","_addCommas","number","test","replace","formatNumber","split","decimal","formattedNumber","formattedDecimal","convertSatsToUSD","sats","USDRate","confirmedBalanceBTC","Big","div","toString","times","AddBtn","icon","iconURL","undefined","nestedMode","large","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","src","alt","labelElement","Transaction","hash","date","unconfirmed","wallet","sanitizedValue","USDValue","toFixed","formattedDate","DateTime","fromSeconds","parseInt","toRelative","display","marginLeft","Channel","ip","sendable","receivable","active","pendingStatus","renderDivider","formattedSendable","React","formattedReceivable","fullIdentifier","navigator","clipboard","writeText","then","toast","dark","catch","message","Pad","amt","insideRow","Peer","sent","received","address","formattedSent","formattedReceived","AddPeerModal","loading","setLoading","host","setHost","setPublicKey","setError","onInputChange","target","useEffect","onSubmit","a","preventDefault","connectPeer","errorMessage","AddChannelModal","channelCapacity","setChannelCapacity","pushAmount","setPushAmount","loadFeeRates","openChannel","InfoModal","nodeInfo","setNodeInfo","get","res","data","LNDStatus","alert","modalContent","synced_to_chain","synced_to_graph","identity_pubkey","slice","uris","join","num_pending_channels","block_height","best_header_timestamp","version","AdvancedPage","selectedAccordion","setSelectedAccordion","page","addPeerOpen","setAddPeerOpen","addChannelOpen","setAddChannelOpen","infoModalOpen","toggleInfoModal","pendingChannels","setPendingChannels","confirmedBalance","Store","channelBalance","transactions","channels","peers","reset","fetchTransactions","fetchInvoices","fetchChannels","fetchPeers","Http","makeChanObj","ch","remote_pubkey","remote_node_pub","remote_balance","local_balance","pending","pending_open_channels","forEach","chan","channel","push","waiting_close_channels","pending_force_closing_channels","confirmedBalanceUSD","channelBalanceUSD","openAccordion","accordion","current","toggleAddPeerOpen","toggleAddChannelOpen","openTransactionsAccordion","openPeersAccordion","openChannelsAccordion","paddingBottom","content","map","transaction","time_stamp","tx_hash","amount","num_confirmations","peer","i","pub_key","sat_sent","sat_recv","find","p","thereIsMoreThanOneChannel","isLastChannel","thereArePendingChannels","chan_id"],"mappings":"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","file":"static/js/14.bd2e35d8.chunk.js","sourcesContent":["import classNames from \"classnames\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children = null, style = {}, contentClass = \"\" }) => (\n  <div className={classNames(\"content\", contentClass)} style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import * as Utils from \"../../../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({\n  title = \"\",\n  toggleModal = Utils.EMPTY_FN,\n  forceRenderTitleBar = false,\n  hideXBtn = false\n}) =>\n  title || forceRenderTitleBar ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      {!hideXBtn && (\n        <div className=\"head-close\" onClick={toggleModal}>\n          <i className=\"fas fa-times\"></i>\n        </div>\n      )}\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","import { useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\nimport Loader from \"../../common/Loader\";\n\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\n\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = Utils.EMPTY_OBJ,\n  disableBackdropClose = false,\n  forceRenderTitleBar = false,\n  hideXBtn = false,\n  noFullWidth = false,\n  blueBtn = \"\",\n  disableBlueBtn = false,\n  onClickBlueBtn = Utils.EMPTY_FN,\n  redBtn = \"\",\n  disableRedBtn = false,\n  onClickRedBtn = Utils.EMPTY_FN,\n  contentClass = \"\",\n  error = \"\",\n  textIfLoading = \"\"\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  const handleBackdropClick = useCallback(() => {\n    if (!disableBackdropClose) {\n      toggleModal();\n    }\n  }, [disableBackdropClose, toggleModal]);\n  return (\n    <div className={classNames({ modal: true, open: modalOpen })}>\n      <div className=\"backdrop\" onClick={handleBackdropClick} />\n      <div\n        className={classNames({\n          container: true,\n          \"container-no-full-width\": noFullWidth\n        })}\n      >\n        {textIfLoading && (\n          <Loader overlay style={OVERLAY_STYLE} text={textIfLoading} />\n        )}\n\n        <ModalTitle\n          title={modalTitle}\n          toggleModal={closeModal}\n          forceRenderTitleBar={forceRenderTitleBar}\n          hideXBtn={hideXBtn}\n        />\n\n        {error && <div className={\"form-error form-error-margin\"}>{error}</div>}\n\n        <ModalContent style={contentStyle} contentClass={contentClass}>\n          {typeof children === \"string\" ? (\n            <p className=\"text-align-center\">{children}</p>\n          ) : (\n            children\n          )}\n        </ModalContent>\n\n        <div className=\"color-buttons\">\n          {blueBtn && (\n            <button\n              disabled={disableBlueBtn}\n              className={classNames(\"color-btn\", \"blue-btn\")}\n              onClick={onClickBlueBtn}\n            >\n              {blueBtn}\n            </button>\n          )}\n\n          {redBtn && (\n            <button\n              disabled={disableRedBtn}\n              className={classNames(\"color-btn\", \"red-btn\")}\n              onClick={onClickRedBtn}\n            >\n              {redBtn}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst OVERLAY_STYLE = {\n  borderRadius: \"15px\"\n};\n\nexport default Modal;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label = \"\",\n  name = \"\",\n  onChange,\n  inputAction = Utils.EMPTY_FN,\n  actionIcon = \"\",\n  value,\n  inputMode = /** @type {React.HTMLAttributes['inputMode']} */ (\"text\"),\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled = false\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","// @ts-check\nimport { useCallback } from \"react\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as Utils from \"../../utils\";\nimport { openDrawer } from \"../../actions/DrawerActions\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport { useSelector } from \"../../store\";\n\nconst MainNav = ({\n  pageTitle,\n  absolute = false,\n  solid = false,\n  enableBackButton = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const dispatch = useDispatch();\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  const open = useCallback(() => {\n    dispatch(openDrawer());\n  }, [dispatch]);\n\n  const gunPublicKey = useSelector(({ node }) => node.publicKey);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in MainNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className={classNames({\n        \"main-nav-container\": true,\n        \"main-nav-absolute\": absolute,\n        \"main-nav-solid\": solid\n      })}\n      ref={divRefCb}\n    >\n      {enableBackButton ? (\n        <div className=\"main-nav-back\" onClick={goBack}>\n          <i className=\"icon icon-thin-back\"></i>\n        </div>\n      ) : (\n        <ShockAvatar height={40} publicKey={gunPublicKey} />\n      )}\n      <p className=\"main-nav-title unselectable\">{pageTitle}</p>\n      <div className=\"main-nav-menu-btn\" onClick={open}>\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default MainNav;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","// Use Big.js to avoid large number inaccuracy issues\nimport Big from \"big.js\";\n\nconst COMMA_REGEX = /(\\d+)(\\d{3})/gi;\n\nexport const SAT_DENOMINATION = 100000000;\n\nconst _addCommas = number => {\n  const test = COMMA_REGEX.test(number);\n\n  if (test) {\n    const newNumber = number.replace(COMMA_REGEX, \"$1,$2\");\n    return _addCommas(newNumber);\n  }\n\n  return number;\n};\n\nexport const formatNumber = (value = \"\") => {\n  const [number, decimal] = value.split(\".\");\n  const formattedNumber = _addCommas(number);\n  const formattedDecimal = decimal ? \".\" + decimal : \"\";\n\n  return formattedNumber + formattedDecimal;\n};\n\nexport const convertSatsToUSD = (sats, USDRate = \"0\") => {\n  //console.debug(`Converting ${sats} Sats to USD (${USDRate})`);\n  const confirmedBalanceBTC = Big(sats).div(SAT_DENOMINATION).toString();\n\n  return Big(USDRate?.toString() || \"0\").times(confirmedBalanceBTC);\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import { DateTime } from \"luxon\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { convertSatsToUSD, formatNumber } from \"../../../../utils/Number\";\nimport \"./css/index.scoped.css\";\n\nconst Transaction = ({ hash, value, date, unconfirmed }) => {\n  const USDRate = useSelector(({ wallet }) => wallet.USDRate ?? \"0\");\n  const sanitizedValue = value.replace(/,/g, \"\");\n  const USDValue = formatNumber(\n    convertSatsToUSD(sanitizedValue, USDRate).toFixed(2)\n  );\n  const formattedDate = date\n    ? DateTime.fromSeconds(parseInt(date, 10)).toRelative()\n    : \"unknown\";\n\n  return (\n    <div className=\"advanced-transaction-container\">\n      <div className=\"advanced-transaction-info\">\n        <div className=\"advanced-transaction-avatar\"></div>\n        <div className=\"advanced-transaction-author\">\n          <p className=\"advanced-transaction-author-name\">{hash}</p>\n          <div style={{ display: \"flex\" }}>\n            <p className=\"advanced-transaction-type\">Payment</p>\n            {unconfirmed && (\n              <i\n                className=\"far fa-clock\"\n                style={{ marginLeft: \"0.5rem\", color: \"red\" }}\n              ></i>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"advanced-transaction-value-container\">\n        <p className=\"advanced-transaction-time\">{formattedDate}</p>\n        <p className=\"advanced-transaction-value\">{value}</p>\n        <p className=\"advanced-transaction-usd\">{USDValue} USD</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Transaction;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { toast } from \"react-toastify\";\n\nimport * as Utils from \"../../../../utils\";\nimport Pad from \"../../../../common/Pad\";\nimport Line from \"../../../../common/Line\";\nimport { formatNumber } from \"../../../../utils/Number\";\n\nimport \"./css/index.scoped.css\";\n\nexport interface ChannelProps {\n  active: boolean;\n  publicKey: string;\n  ip: string | undefined;\n  pendingStatus?: string;\n  receivable: string;\n  sendable: string;\n  renderDivider: boolean;\n}\n\nconst Channel: React.FC<ChannelProps> = ({\n  publicKey,\n  ip,\n  sendable,\n  receivable,\n  active,\n  pendingStatus = \"\",\n  renderDivider\n}) => {\n  const formattedSendable = React.useMemo(() => formatNumber(sendable), [\n    sendable\n  ]);\n  const formattedReceivable = React.useMemo(() => formatNumber(receivable), [\n    receivable\n  ]);\n  const fullIdentifier = publicKey + (!!ip && `@${ip}`);\n\n  const onClick = React.useCallback(() => {\n    if (!navigator.clipboard) {\n      toast.dark(\n        `Could not copy to clipboard, enable clipboard access or use HTTPs.`\n      );\n      return;\n    }\n    navigator.clipboard\n      .writeText(fullIdentifier)\n      .then(() => {\n        toast.dark(\"Copied to clipboard\");\n      })\n      .catch(e => {\n        Utils.logger.error(`Error inside <Channel />.onClick -> `, e);\n        toast.dark(`Could not copy to clipboard: ${e.message}`);\n      });\n  }, [fullIdentifier]);\n\n  return (\n    <div\n      className={classNames(\"advanced-channel-container\", {\n        \"has-divider\": renderDivider\n      })}\n      onClick={onClick}\n    >\n      {/* <div className=\"advanced-channel-ip\"></div> */}\n\n      <div className=\"advanced-channel-name-container\">\n        <p style={{ marginLeft: \"0.5rem\" }}>{pendingStatus}</p>\n      </div>\n\n      <div className=\"address-and-status\">\n        <div\n          className={classNames({\n            \"advanced-channel-status\": true,\n            \"advanced-channel-status-offline\": !active\n          })}\n        ></div>\n\n        <Pad amt={12} insideRow />\n\n        <p className=\"advanced-channel-address\">{fullIdentifier}</p>\n      </div>\n\n      <Pad amt={12} />\n\n      <div className=\"advanced-channel-capacity-container\">\n        <div className=\"advanced-channel-capacity\">\n          Sendable: {formattedSendable} sats\n        </div>\n\n        <div className=\"line\">\n          <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n        </div>\n\n        <div className=\"advanced-channel-capacity\">\n          Receivable: {formattedReceivable} sats\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Channel;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { toast } from \"react-toastify\";\n\nimport * as Utils from \"../../../../utils\";\nimport Pad from \"../../../../common/Pad\";\nimport Line from \"../../../../common/Line\";\nimport { formatNumber } from \"../../../../utils/Number\";\n\nimport \"./css/index.scoped.css\";\n\nexport interface PeerProps {\n  address: string;\n  publicKey: string;\n  received: string;\n  sent: string;\n  renderDivider: boolean;\n}\n\nconst Peer: React.FC<PeerProps> = ({\n  sent,\n  received,\n  address,\n  publicKey,\n  renderDivider\n}) => {\n  const formattedSent = formatNumber(sent.toString());\n  const formattedReceived = formatNumber(received.toString());\n\n  const onClick = React.useCallback(() => {\n    if (!navigator.clipboard) {\n      toast.dark(\n        `Could not copy to clipboard, enable clipboard access or use HTTPs.`\n      );\n      return;\n    }\n    navigator.clipboard\n      .writeText(address)\n      .then(() => {\n        toast.dark(\"Copied to clipboard\");\n      })\n      .catch(e => {\n        Utils.logger.error(`Error inside <Peer />.onClick -> `, e);\n        toast.dark(`Could not copy to clipboard: ${e.message}`);\n      });\n  }, [address]);\n\n  return (\n    <div\n      className={classNames(\"peer-container\", {\n        \"has-divider\": renderDivider\n      })}\n      onClick={onClick}\n    >\n      <h5 className=\"margin-0 padding-0\">{address}</h5>\n\n      <Pad amt={12} />\n\n      <p className=\"advanced-peer-public-key\">\n        <span>{publicKey ?? \"Unknown public key\"}</span>\n      </p>\n\n      <Pad amt={12} />\n\n      <div className=\"sent-and-received\">\n        <p className=\"advanced-peer-value\">\n          <span>\n            <span className=\"peer-value-title\">Sent:</span> {formattedSent}\n          </span>\n        </p>\n\n        <div className=\"line\">\n          <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n        </div>\n\n        <p className=\"advanced-peer-value\">\n          <span>\n            <span className=\"peer-value-title\">Received:</span>{\" \"}\n            {formattedReceived}\n          </span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Peer;\n","import React, { useCallback, useState } from \"react\";\nimport Modal from \"../../../../common/Modal\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport \"./css/index.scoped.css\";\nimport { connectPeer } from \"../../../../actions/WalletActions\";\nimport { useDispatch } from \"react-redux\";\nimport Pad from \"../../../../common/Pad\";\n\nconst AddPeerModal = ({ open = false, toggleModal }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [host, setHost] = useState(\"\");\n  const [publicKey, setPublicKey] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onInputChange = useCallback(e => {\n    const { name, value } = e.target;\n    if (name === \"publicKey\") {\n      setPublicKey(value);\n    }\n\n    if (name === \"host\") {\n      setHost(value);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    setHost(\"\");\n    setLoading(false);\n    setError(\"\");\n  }, [open]);\n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      setError(\"\");\n      setLoading(true);\n      try {\n        await dispatch(connectPeer({ publicKey, host }));\n        toggleModal();\n      } catch (err) {\n        setError(err?.errorMessage ?? err?.message);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, publicKey, host, toggleModal]\n  );\n\n  return (\n    <Modal\n      toggleModal={toggleModal}\n      modalOpen={open}\n      modalTitle=\"ADD PEER\"\n      blueBtn=\"Add Peer\"\n      onClickBlueBtn={onSubmit}\n      disableBlueBtn={loading}\n      noFullWidth\n      error={error}\n      contentClass=\"p-1\"\n      textIfLoading={loading && \"Adding Peer...\"}\n    >\n      <InputGroup\n        onChange={onInputChange}\n        name=\"publicKey\"\n        label=\"Public Key\"\n        value={publicKey}\n        small\n      />\n\n      <Pad amt={16} />\n\n      <InputGroup\n        onChange={onInputChange}\n        name=\"host\"\n        label=\"Host IP\"\n        value={host}\n        small\n      />\n    </Modal>\n  );\n};\n\nexport default AddPeerModal;\n","import { useCallback, useState } from \"react\";\nimport Modal from \"../../../../common/Modal\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport \"./css/index.scoped.css\";\nimport { openChannel } from \"../../../../actions/WalletActions\";\nimport { useDispatch } from \"react-redux\";\nimport Loader from \"../../../../common/Loader\";\nimport Pad from \"../../../../common/Pad\";\nimport { loadFeeRates } from \"../../../../actions/FeesActions\";\n\nconst AddChannelModal = ({ open = false, toggleModal }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [channelCapacity, setChannelCapacity] = useState(\"\");\n  const [pushAmount, setPushAmount] = useState(\"\");\n  const [publicKey, setPublicKey] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onInputChange = useCallback(e => {\n    const { name, value } = e.target;\n    if (name === \"publicKey\") {\n      setPublicKey(value);\n    }\n\n    if (name === \"pushAmount\") {\n      setPushAmount(value);\n    }\n\n    if (name === \"channelCapacity\") {\n      setChannelCapacity(value);\n    }\n  }, []);\n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      setLoading(true);\n      try {\n        await dispatch(loadFeeRates());\n        await dispatch(openChannel({ publicKey, channelCapacity, pushAmount }));\n        toggleModal();\n      } catch (err) {\n        setError(err?.errorMessage ?? err?.message);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, publicKey, channelCapacity, pushAmount, toggleModal]\n  );\n\n  return (\n    <Modal\n      toggleModal={toggleModal}\n      modalOpen={open}\n      modalTitle=\"OPEN CHANNEL\"\n      blueBtn={!loading && \"OPEN\"}\n      onClickBlueBtn={onSubmit}\n      noFullWidth\n    >\n      <form className=\"container m-1\">\n        {error ? <div className=\"form-error\">{error}</div> : null}\n        {loading ? <Loader overlay text=\"Adding Peer...\" /> : null}\n        <div className=\"inputs\">\n          <InputGroup\n            onChange={onInputChange}\n            name=\"publicKey\"\n            label=\"Node Public Key\"\n            value={publicKey}\n            small\n          />\n          <Pad amt={16} />\n          <InputGroup\n            onChange={onInputChange}\n            name=\"channelCapacity\"\n            label=\"Channel Capacity (sats)\"\n            value={channelCapacity}\n            inputMode=\"number\"\n            small\n          />\n          <Pad amt={16} />\n          <InputGroup\n            onChange={onInputChange}\n            name=\"pushAmount\"\n            label=\"Push Amount (sats)\"\n            value={pushAmount}\n            inputMode=\"number\"\n            small\n          />\n          <Pad amt={16} />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default AddChannelModal;\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport * as Schema from \"../../../../schema\";\nimport * as Utils from \"../../../../utils\";\nimport Modal from \"../../../../common/Modal\";\nimport Pad from \"../../../../common/Pad\";\n\nimport \"./InfoModal.scoped.css\";\n\nexport interface InfoModalProps {\n  modalOpen: boolean;\n  toggleModal(): void;\n}\n\nconst InfoModal = ({ modalOpen, toggleModal }: InfoModalProps) => {\n  const [nodeInfo, setNodeInfo] = React.useState<Schema.NodeInfo | null>(null);\n\n  React.useEffect(() => {\n    if (modalOpen) {\n      Utils.Http.get(\"/healthz\")\n        .then(res => {\n          setNodeInfo(res.data.LNDStatus.message);\n        })\n        .catch(e => {\n          Utils.logger.error(\n            `Error while fetching node info inside <InfoModal /> -> `,\n            e\n          );\n          alert(`Error while fetching node info: ${e.message}`);\n        });\n    }\n  }, [modalOpen]);\n\n  let modalContent = <span>Loading...</span>;\n\n  if (nodeInfo) {\n    modalContent = (\n      <div className=\"container\">\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Synced to Chain</span>\n\n          {nodeInfo.synced_to_chain ? (\n            <i className=\"fas fa-check icon\" />\n          ) : (\n            <i className=\"far fa-clock icon\" />\n          )}\n        </div>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Synced to Graph</span>\n\n          {nodeInfo.synced_to_graph ? (\n            <i className=\"fas fa-check icon\" />\n          ) : (\n            <i className=\"far fa-clock icon\" />\n          )}\n        </div>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Lightning PubKey:</span>\n\n          <i\n            className=\"far fa-copy icon cursor-pointer\"\n            onClick={() => {\n              try {\n                navigator.clipboard.writeText(nodeInfo.identity_pubkey);\n                toast.dark(\"Copied to clipboard\");\n              } catch (e) {\n                alert(e.message);\n              }\n            }}\n          />\n        </div>\n\n        <span className=\"data pubKey\">\n          {/* poor man's ellipsis */}\n          ...{nodeInfo.identity_pubkey.slice(-14)}\n        </span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Uris</span>\n\n          <i\n            className=\"far fa-copy icon cursor-pointer\"\n            onClick={() => {\n              try {\n                navigator.clipboard.writeText(nodeInfo.uris.join(\" , \"));\n                toast.dark(\"Copied to clipboard\");\n              } catch (e) {\n                alert(e.message);\n              }\n            }}\n          />\n        </div>\n\n        <span className=\"data\">\n          {`Number of Uris: ${nodeInfo.uris.length.toString()}`}\n        </span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Pending Channels:</span>\n        </div>\n\n        <span className=\"data\">{nodeInfo.num_pending_channels.toString()}</span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Block Height:</span>\n        </div>\n\n        <span className=\"data\">{nodeInfo.block_height.toString()}</span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Block Height:</span>\n        </div>\n\n        <span className=\"data\">{nodeInfo.block_height.toString()}</span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Best Header Timestamp:</span>\n        </div>\n\n        <span className=\"data\">{nodeInfo.best_header_timestamp}</span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">LND Version</span>\n        </div>\n\n        <span className=\"data\">{nodeInfo.version}</span>\n\n        <Pad amt={45} />\n\n        <div\n          className=\"btn\"\n          onClick={() => {\n            alert(\"Coming soon\");\n          }}\n        >\n          <span className=\"btn-text\">Download Backup</span>\n        </div>\n\n        <Pad amt={18} />\n\n        <span className=\"footer\">\n          <span className=\"warning\">Warning: </span> Consult documentation\n          before use.\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      modalOpen={modalOpen}\n      toggleModal={toggleModal}\n      modalTitle=\"Node Info\"\n    >\n      <Pad amt={50} />\n\n      {modalContent}\n    </Modal>\n  );\n};\n\nexport default InfoModal;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { Channel as IChannel } from \"shock-common\";\n\nimport {\n  fetchChannels,\n  fetchInvoices,\n  fetchPeers,\n  fetchTransactions\n} from \"../../actions/WalletActions\";\nimport { convertSatsToUSD, formatNumber } from \"../../utils/Number\";\nimport MainNav from \"../../common/MainNav\";\nimport AddBtn from \"../../common/AddBtn\";\n// import Invoice from \"./components/Invoice\";\nimport Transaction from \"./components/Transaction\";\nimport Channel from \"./components/Channel\";\nimport Peer from \"./components/Peer\";\nimport AddPeerModal from \"./components/AddPeerModal\";\nimport AddChannelModal from \"./components/AddChannelModal\";\nimport InfoModal from \"./components/InfoModal\";\nimport * as Utils from \"../../utils\";\nimport Http from \"../../utils/Http\";\nimport * as Store from \"../../store\";\nimport \"./css/index.scoped.css\";\n\ntype PendingChannel = IChannel & {\n  pendingStatus: string;\n  ip: string;\n};\n\ntype AccordionSection =\n  | \"none\"\n  | \"transactions\"\n  | \"invoices\"\n  | \"peers\"\n  | \"channels\";\n\nconst AdvancedPage: React.FC = () => {\n  const [\n    selectedAccordion,\n    setSelectedAccordion\n  ] = React.useState<AccordionSection>(\"channels\");\n  const [page] = React.useState(1);\n  const [addPeerOpen, setAddPeerOpen] = React.useState(false);\n  const [addChannelOpen, setAddChannelOpen] = React.useState(false);\n  const [infoModalOpen, toggleInfoModal] = Utils.useBooleanState(false);\n\n  const [pendingChannels, setPendingChannels] = React.useState<\n    PendingChannel[]\n  >([]);\n\n  const dispatch = useDispatch();\n  const confirmedBalance = Store.useSelector(\n    ({ wallet }) => wallet.confirmedBalance\n  );\n  const channelBalance = Store.useSelector(\n    ({ wallet }) => wallet.channelBalance\n  );\n  const transactions = Store.useSelector(({ wallet }) => wallet.transactions);\n  // const invoices = Store.useSelector(({ wallet }) => wallet.invoices);\n  const channels = Store.useSelector(({ wallet }) => wallet.channels);\n  const peers = Store.useSelector(({ wallet }) => wallet.peers);\n  const USDRate = Store.useSelector(({ wallet }) => wallet.USDRate);\n\n  React.useEffect(() => {\n    const reset = page === 1;\n    dispatch(fetchTransactions({ page, reset }));\n    dispatch(fetchInvoices({ page, reset }));\n    dispatch(fetchChannels());\n    dispatch(fetchPeers());\n  }, [page, dispatch]);\n\n  //effect to load pending channels, no need to keep them in redux\n  React.useEffect(() => {\n    Http.get(\"/api/lnd/pendingchannels\").then(({ data }) => {\n      console.log(\"pending channels:\");\n      console.log(data);\n      const makeChanObj = (ch, pendingStatus) => ({\n        remote_pubkey: ch.remote_node_pub,\n        remote_balance: ch.remote_balance,\n        local_balance: ch.local_balance,\n        ip: \"\",\n        active: false,\n        pendingStatus\n      });\n      const pending = [];\n      data.pending_open_channels.forEach(chan => {\n        const { channel } = chan;\n        pending.push(makeChanObj(channel, \"Pending Open\"));\n      });\n      data.waiting_close_channels.forEach(chan => {\n        const { channel } = chan;\n        pending.push(makeChanObj(channel, \"Pending Close\"));\n      });\n      data.pending_force_closing_channels.forEach(chan => {\n        const { channel } = chan;\n        pending.push(makeChanObj(channel, \"Pending Force Close\"));\n      });\n      setPendingChannels(pending);\n    });\n  }, []);\n\n  const confirmedBalanceUSD = React.useMemo(\n    () => formatNumber(convertSatsToUSD(confirmedBalance, USDRate).toFixed(2)),\n    [USDRate, confirmedBalance]\n  );\n  const channelBalanceUSD = React.useMemo(\n    () => formatNumber(convertSatsToUSD(channelBalance, USDRate).toFixed(2)),\n    [USDRate, channelBalance]\n  );\n\n  const openAccordion = React.useCallback((accordion: AccordionSection) => {\n    setSelectedAccordion(current => {\n      return current === accordion ? \"none\" : accordion;\n    });\n  }, []);\n\n  const toggleAddPeerOpen = React.useCallback(() => {\n    setAddPeerOpen(!addPeerOpen);\n  }, [addPeerOpen]);\n\n  const toggleAddChannelOpen = React.useCallback(() => {\n    setAddChannelOpen(!addChannelOpen);\n  }, [addChannelOpen]);\n\n  const openTransactionsAccordion = React.useCallback(() => {\n    openAccordion(\"transactions\");\n  }, [openAccordion]);\n\n  const openPeersAccordion = React.useCallback(() => {\n    openAccordion(\"peers\");\n  }, [openAccordion]);\n\n  // const openInvoicesAccordion = useCallback(() => {\n  //   openAccordion(\"invoices\");\n  // }, [openAccordion]);\n\n  const openChannelsAccordion = React.useCallback(() => {\n    openAccordion(\"channels\");\n  }, [openAccordion]);\n\n  return (\n    <div className=\"page-container advanced-page\">\n      <div className=\"advanced-header\">\n        <MainNav absolute pageTitle=\"ADVANCED\" enableBackButton={false} />\n        <div className=\"advanced-balance-container\">\n          <div className=\"advanced-balance-icon-container\">\n            <i className=\"advanced-balance-icon fas fa-link\"></i>\n          </div>\n          <div className=\"advanced-balance-btc-container\">\n            <p className=\"advanced-balance-btc\">\n              {formatNumber(confirmedBalance)}\n            </p>\n            <p className=\"advanced-balance-usd\">{confirmedBalanceUSD} USD</p>\n          </div>\n        </div>\n        <div\n          className=\"advanced-balance-container\"\n          style={{ paddingBottom: 25 }}\n        >\n          <div className=\"advanced-balance-icon-container\">\n            <i className=\"advanced-balance-icon fas fa-bolt\"></i>\n          </div>\n          <div className=\"advanced-balance-btc-container\">\n            <p className=\"advanced-balance-btc\">\n              {formatNumber(channelBalance)}\n            </p>\n            <p className=\"advanced-balance-usd\">{channelBalanceUSD} USD</p>\n          </div>\n        </div>\n        <span className=\"open-info-btn\" onClick={toggleInfoModal}>\n          Node Info <i className=\"fas fa-info-circle\" />\n        </span>\n      </div>\n      <div className=\"accordion\">\n        <div\n          className={classNames({\n            \"accordion-section\": true,\n            \"section-open\": selectedAccordion === \"transactions\"\n          })}\n        >\n          <div className=\"section-header\" onClick={openTransactionsAccordion}>\n            <p className=\"header-title\">Transactions</p>\n          </div>\n          <div className=\"section-content\">\n            <div className=\"content-inner\">\n              {transactions.content.length === 0 && (\n                <span className=\"content-inner-empty\">No transactions yet</span>\n              )}\n              {transactions.content.map(transaction => (\n                <Transaction\n                  date={transaction.time_stamp}\n                  hash={transaction.tx_hash}\n                  value={formatNumber(transaction.amount)}\n                  key={transaction.tx_hash}\n                  unconfirmed={transaction.num_confirmations === 0}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n        <div\n          className={classNames({\n            \"accordion-section\": true,\n            \"section-open\": selectedAccordion === \"peers\"\n          })}\n        >\n          <div className=\"section-header\" onClick={openPeersAccordion}>\n            <p className=\"header-title\">Peers</p>\n          </div>\n          <div className=\"section-content\">\n            <div className=\"content-inner\">\n              {peers.length === 0 && (\n                <span className=\"content-inner-empty\">No peers connected</span>\n              )}\n              {peers.map((peer, i) => {\n                return (\n                  <Peer\n                    address={peer.address}\n                    publicKey={peer.pub_key}\n                    sent={peer.sat_sent}\n                    received={peer.sat_recv}\n                    key={peer.address + peer.pub_key}\n                    renderDivider={peers.length > 1 && i !== peers.length - 1}\n                  />\n                );\n              })}\n            </div>\n            {selectedAccordion === \"peers\" && (\n              <AddBtn nestedMode relative>\n                <AddBtn\n                  label=\"ADD PEER\"\n                  onClick={toggleAddPeerOpen}\n                  icon=\"link\"\n                />\n              </AddBtn>\n            )}\n          </div>\n        </div>\n        {/* <div\n          className={classNames({\n            \"accordion-section\": true,\n            \"section-open\": selectedAccordion === \"invoices\"\n          })}\n        >\n          <div\n            className=\"section-header\"\n            onClick={openInvoicesAccordion}\n          >\n            <p className=\"header-title\">Invoices</p>\n          </div>\n          <div className=\"section-content\">\n            <div className=\"content-inner\">\n              {invoices.content\n                .slice()\n                .reverse()\n                .map(invoice => (\n                  <Invoice\n                    paymentRequest={invoice.payment_request}\n                    date={invoice.creation_date}\n                    value={formatNumber(invoice.value)}\n                    message={invoice.memo}\n                    key={invoice.payment_request}\n                  />\n                ))}\n            </div>\n          </div>\n        </div> */}\n        <div\n          className={classNames({\n            \"accordion-section\": true,\n            \"section-open\": selectedAccordion === \"channels\"\n          })}\n        >\n          <div className=\"section-header\" onClick={openChannelsAccordion}>\n            <p className=\"header-title\">Channels</p>\n          </div>\n          <div className=\"section-content\">\n            <div className=\"content-inner\">\n              {channels.length === 0 && pendingChannels.length === 0 && (\n                <span className=\"content-inner-empty\">No channels</span>\n              )}\n              {channels.map((channel, i) => {\n                const ip = peers.find(p => p.pub_key)?.address;\n                const thereIsMoreThanOneChannel = channels.length > 1;\n                const isLastChannel = i === channels.length - 1;\n                const thereArePendingChannels = pendingChannels.length > 0;\n                const renderDivider =\n                  (thereIsMoreThanOneChannel && !isLastChannel) ||\n                  thereArePendingChannels;\n\n                return (\n                  <Channel\n                    publicKey={channel.remote_pubkey}\n                    ip={ip}\n                    receivable={channel.remote_balance}\n                    sendable={channel.local_balance}\n                    active={channel.active}\n                    key={channel.chan_id}\n                    renderDivider={renderDivider}\n                  />\n                );\n              })}\n              {pendingChannels.map((channel, i) => {\n                const ip = peers.find(p => p.pub_key)?.address;\n\n                return (\n                  <Channel\n                    publicKey={channel.remote_pubkey}\n                    ip={ip}\n                    receivable={channel.remote_balance}\n                    sendable={channel.local_balance}\n                    active={channel.active}\n                    key={channel.chan_id}\n                    pendingStatus={channel.pendingStatus}\n                    renderDivider={\n                      pendingChannels.length > 1 &&\n                      i !== pendingChannels.length - 1\n                    }\n                  />\n                );\n              })}\n              {selectedAccordion === \"channels\" && (\n                <AddBtn nestedMode relative>\n                  <AddBtn\n                    label=\"ADD CHANNEL\"\n                    small\n                    onClick={toggleAddChannelOpen}\n                    icon=\"exchange-alt\"\n                  />\n                </AddBtn>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <AddPeerModal open={addPeerOpen} toggleModal={toggleAddPeerOpen} />\n      <AddChannelModal\n        open={addChannelOpen}\n        toggleModal={toggleAddChannelOpen}\n      />\n      <InfoModal modalOpen={infoModalOpen} toggleModal={toggleInfoModal} />\n    </div>\n  );\n};\n\nexport default AdvancedPage;\n"],"sourceRoot":""}