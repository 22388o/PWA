{"version":3,"sources":["common/Post/components/Image/index.js","utils/Cache.js","utils/Promise.js","utils/Torrents.js","common/Post/components/Video/index.js","images/share.svg","common/Post/index.tsx"],"names":["Image","id","item","index","postId","tipValue","tipCounter","hideRibbon","width","disableZoom","style","useState","zoomed","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","useCallback","value","clearTimeout","timer","setTimeout","contentURL","decodeURIComponent","magnetURI","replace","mainImageStyle","opacity","imgNode","className","alt","data-torrent","data-file-key","src","onLoad","display","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","console","log","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","length","forEach","element","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","file","extension","name","split","slice","supportedFileType","Object","entries","filter","includes","fileType","webTorrentClient","WebTorrent","isURLCompatible","url","type","format","toLowerCase","endsWith","attachMedia","posts","torrentMode","allowDuplicates","torrentTasks","map","post","contentItems","key","get","add","torrent","files","target","destroy","torrentElement","compatibleURL","elementSrc","getAttribute","renderTo","setAttribute","on","getBlob","err","blob","querySelector","dataset","played","reduce","torrents","Video","useMemo","videoStyle","cursor","controls","data-played","TipRibbon","Post","publicKey","openTipModal","openUnlockModal","openDeleteModal","undefined","openShareModal","_","dispatch","Store","unlockedContent","content","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","author","React","tips","values","sum","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","isOnlineNode","useEffect","subPostContent","subPostTips","liveStatus","stream","find","viewersCounter","getMediaContent","k","e","path","parseContent","text","finalMagnetURI","cached","Common","playbackMagnet","Stream","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","scrollSnapList","window","addEventListener","removeEventListener","off","tipPost","targetType","postID","unlockPost","deletePost","shared","sharePost","Tooltip","rebuild","ShockAvatar","height","Pad","amt","insideRow","to","displayName","live","waiting","wasLive","DateTime","fromMillis","date","toRelative","onClick","getTextContent","Array","from","classNames","scrollTo","ref","data-tip","ShareIcon","color","marginLeft"],"mappings":"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","file":"static/js/15.4877631b.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.scoped.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null,\n  disableZoom = false,\n  style = /** @type {import('react').CSSProperties} */ ({})\n}) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [\n      animationTimer,\n      zoomLoaded,\n      setZoomed,\n      setZoomLoaded,\n      setPreviewVisible,\n      setAnimationTimer\n    ]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { ...style, opacity: previewVisible ? 1 : 0 };\n  if (width) {\n    mainImageStyle.width = width;\n  }\n\n  const imgNode = (\n    <>\n      <img\n        className={`image torrent-img torrent-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-torrent={item.magnetURI}\n        data-file-key={index}\n        style={mainImageStyle}\n        src={contentURL}\n      />\n      <img\n        className={`image enlarged-img enlarged-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-file-key={index}\n        onLoad={() => {\n          setZoomLoaded(true);\n        }}\n        style={{\n          opacity: zoomed ? 1 : 0,\n          display: zoomed ? \"block\" : \"none\"\n        }}\n        src={contentURL}\n      />\n      {!hideRibbon && (\n        <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"media-container\">\n      {disableZoom ? (\n        imgNode\n      ) : (\n        <ControlledZoom\n          isZoomed={zoomed}\n          onZoomChange={handleZoomChange}\n          overlayBgColorStart=\"#16191c00\"\n          overlayBgColorEnd=\"#16191c\"\n        >\n          {imgNode}\n        </ControlledZoom>\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = true;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import WebTorrent from \"webtorrent\";\nimport { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nconst supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: true,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\", \"gif\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nconst _getFileType = file => {\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const supportedFileType = Object.entries(\n    supportedFileTypes\n  ).filter(([type, options]) => options.formats.includes(extension))[0];\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport const webTorrentClient = new WebTorrent();\n\nexport const isURLCompatible = ({ url, type = \"video/embedded\" }) => {\n  const fileType = supportedFileTypes[type];\n  const [compatibleURL] = fileType.formats.filter(format =>\n    url.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n  );\n\n  return !!compatibleURL;\n};\n\nexport const attachMedia = (\n  posts = [],\n  torrentMode = true,\n  allowDuplicates = false\n) => {\n  const torrentTasks = posts\n    .map(post => {\n      const { contentItems, id } = post;\n      return Object.entries(contentItems ?? {})\n        .filter(([key, item]) => supportedFileTypes[item.type])\n        .map(([key, item]) => () =>\n          new Promise(resolve => {\n            const torrentExists = webTorrentClient.get(item.magnetURI);\n\n            if (torrentExists && !allowDuplicates) {\n              resolve(true);\n              return;\n            }\n\n            webTorrentClient.add(item.magnetURI, async torrent => {\n              // Proceed to the next torrent in queue\n              resolve(true);\n\n              const files = torrent.files.filter(file => {\n                const extension = file.name?.split(\".\")?.slice(-1)[0];\n                const supportedFileType = Object.entries(\n                  supportedFileTypes\n                ).filter(([type, options]) =>\n                  options.formats.includes(extension)\n                )[0];\n                if (supportedFileType) {\n                  const [, fileType] = supportedFileType;\n                  const matched = fileType.formats.includes(extension);\n                  return matched;\n                }\n                return false;\n              });\n\n              files.map(async file => {\n                const fileType = _getFileType(file);\n\n                if (!fileType) {\n                  return;\n                }\n\n                const fileName = `${id}-${key}-${file.name}`;\n\n                const element = fileType.element;\n                const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                const cachedFile = await getCachedFile(fileName);\n\n                if (cachedFile) {\n                  const torrent = webTorrentClient.get(item.magnetURI);\n\n                  if (torrent) {\n                    torrent.destroy();\n                  }\n\n                  renderCachedFile(cachedFile, target);\n                  return;\n                }\n\n                const torrentElements = document.querySelectorAll(target);\n                torrentElements.forEach(torrentElement => {\n                  const compatibleURL = isURLCompatible({\n                    url: item.magnetURI,\n                    type: fileType.name\n                  });\n                  const elementSrc = torrentElement.getAttribute(\"src\");\n\n                  if ((torrentMode && !elementSrc) || !compatibleURL) {\n                    file.renderTo(torrentElement, fileType.options);\n                    return;\n                  }\n\n                  const contentURL = decodeURIComponent(\n                    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n                  );\n\n                  torrentElement.setAttribute(\"src\", contentURL);\n                });\n              });\n\n              torrent.on(\"done\", () => {\n                files.map(file => {\n                  const fileType = _getFileType(file);\n                  const fileName = `${id}-${key}-${file.name}`;\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n\n                  file.getBlob(async (err, blob) => {\n                    if (err) {\n                      console.warn(err);\n                      return;\n                    }\n\n                    await saveFile(fileName, blob);\n                    const element = document.querySelector(target);\n                    if (\n                      element?.dataset.played === \"false\" &&\n                      !element?.getAttribute(\"src\")\n                    ) {\n                      const cachedFile = await getCachedFile(fileName);\n                      renderCachedFile(cachedFile, target);\n                    }\n                  });\n\n                  return file;\n                });\n              });\n            });\n          })\n        );\n    })\n    .reduce((torrents, contentItems) => [...torrents, ...contentItems], []);\n\n  runSerial(torrentTasks);\n};\n","import { useMemo } from \"react\";\nimport { isURLCompatible } from \"../../../../utils/Torrents\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\n\nconst Video = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null\n}) => {\n  const contentURL = useMemo(() => {\n    const url = item.magnetURI.replace(/.*(ws=)/gi, \"\");\n\n    if (isURLCompatible({ url })) {\n      return decodeURIComponent(url);\n    }\n\n    return null;\n  }, [item.magnetURI]);\n  const videoStyle = {};\n  if (width) {\n    videoStyle.width = width;\n  }\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","export default __webpack_public_path__ + \"static/media/share.8ed36b2d.svg\";","import React, { useEffect, useState, useCallback } from \"react\";\nimport * as Common from \"shock-common\";\nimport { Link } from \"react-router-dom\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport sum from \"lodash/sum\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../store\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\nimport { subPostContent, subPostTips } from \"../../actions/FeedActions\";\n\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport \"./css/index.scoped.css\";\n\nimport ShareIcon from \"../../images/share.svg\";\n\nconst Post = ({\n  id,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = undefined,\n  openShareModal = _ => {}\n}) => {\n  const dispatch = Store.useDispatch();\n  const unlockedContent = Store.useSelector(\n    ({ content }) => content.unlockedContent\n  );\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n  const author = Store.useSelector(Store.selectUser(publicKey));\n  const post = Store.useSelector(Store.selectSinglePost(publicKey, id));\n  const [tipCounter, tipValue] = React.useMemo(() => {\n    const tips = Object.values(\n      post.tips ||\n        {} /* cached data from previous app version won't have the tips object */\n    );\n\n    return [tips.length, sum(tips)];\n  }, [post]);\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n\n  const isOnlineNode = /*Utils.isOnline(\n    Store.useSelector(Store.selectUser(publicKey)).lastSeenApp\n  );*/ true;\n\n  useEffect(() => dispatch(subPostContent(publicKey, id)), [\n    dispatch,\n    id,\n    publicKey\n  ]);\n\n  useEffect(() => dispatch(subPostTips(publicKey, id)), [\n    dispatch,\n    id,\n    publicKey\n  ]);\n\n  const liveStatus = React.useMemo<Common.LiveStatus | null>(() => {\n    const stream = Object.values(post.contentItems ?? {}).find(\n      item => item.type === \"stream/embedded\"\n    ) as Common.EmbeddedStream;\n\n    if (stream) {\n      return stream.liveStatus;\n    }\n\n    return null;\n  }, [post.contentItems]);\n\n  const viewersCounter = React.useMemo<number | null>(() => {\n    const stream = Object.values(post.contentItems ?? {}).find(\n      item => item.type === \"stream/embedded\"\n    ) as Common.EmbeddedStream;\n\n    if (stream && stream.liveStatus === \"live\") {\n      return stream.viewersCounter;\n    }\n\n    return null;\n  }, [post.contentItems]);\n\n  const getMediaContent = useCallback(() => {\n    return Object.entries(post.contentItems ?? {}).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  }, [post.contentItems]);\n\n  const getTextContent = () => {\n    return Object.entries(post.contentItems ?? {}).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(() => {\n    getMediaContent().forEach(([k, e]) => {\n      const path = `${publicKey}>posts>${k}`;\n      // @ts-expect-error\n      if (e.isPrivate && !unlockedContent[path]) {\n        setIsPrivate(true);\n      }\n    });\n  }, [getMediaContent, publicKey, unlockedContent]);\n\n  const parseContent = ([key, item]: [string, Common.ContentItem], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n\n    let finalMagnetURI = \"\";\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`;\n      const cached = unlockedContent[path];\n      if (cached) {\n        finalMagnetURI = cached;\n      } else {\n        return (\n          <div key={key}>\n            <i className=\"fas fa-lock fa-10x\"></i>\n          </div>\n        );\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={{\n            ...item,\n            magnetURI: finalMagnetURI || item.magnetURI\n          }}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={{\n            ...item,\n            magnetURI: finalMagnetURI || item.magnetURI\n          }}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n    if (Common.isEmbeddedStream(item)) {\n      if (item.playbackMagnet) {\n        return (\n          <Video\n            id={key}\n            item={{\n              ...item,\n              magnetURI: item.playbackMagnet\n            }}\n            index={index}\n            postId={id}\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            key={`${id}-${index}`}\n            hideRibbon={undefined}\n            width={undefined}\n          />\n        );\n      }\n      return (\n        <Stream\n          id={key}\n          item={{\n            ...item,\n            magnetURI: finalMagnetURI || item.magnetURI\n          }}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id, shared: false });\n  }, [id, openDeleteModal]);\n\n  const sharePost = useCallback(() => {\n    openShareModal({\n      targetType: \"share\",\n      postID: id,\n      publicKey\n    });\n  }, [publicKey, id, openShareModal]);\n\n  useEffect(() => {\n    try {\n      Tooltip.rebuild();\n    } catch (e) {\n      console.log(`Error inside <Post />: `, e);\n    }\n  }, []);\n\n  const readableLiveStatus: Record<Common.LiveStatus, string> = {\n    live: \"Is Live\",\n    waiting: \"Waiting\",\n    wasLive: \"Was Live\"\n  };\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={publicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <div className=\"username\">\n              <Link to={`/otherUser/${publicKey}`}>{author.displayName}</Link>\n              {liveStatus && (\n                <p className=\"liveStatus\">\n                  {readableLiveStatus[liveStatus]}\n                  <i\n                    className={`fas fa-circle liveStatusIcon ${\n                      liveStatus === \"live\" ? \"liveIcon\" : \"\"\n                    }`}\n                  ></i>\n                  {liveStatus === \"live\" && (\n                    <span> | {viewersCounter} watching</span>\n                  )}\n                </p>\n              )}\n            </div>\n            <p>{DateTime.fromMillis(post.date).toRelative()}</p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash trash-icon\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    // TODO: Get the actual ID here. However posts can't be\n                    // edited so index is stable.\n                    key={key}\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div></div>\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n        {openShareModal && (\n          <div className=\"icon-tip-btn\" data-tip={\"share\"} onClick={sharePost}>\n            <img\n              alt=\"Share this post\"\n              src={ShareIcon}\n              style={{ color: \"#4285b9\", marginLeft: \"auto\" }}\n            />\n          </div>\n        )}\n        {!openShareModal && <div></div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"],"sourceRoot":""}