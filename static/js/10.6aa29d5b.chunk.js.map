{"version":3,"sources":["common/Post/components/Video/index.js","images/share.svg","common/Post/index.tsx","common/Post/SharedPost.tsx"],"names":["Video","item","index","tipValue","tipCounter","hideRibbon","videoRef","useRef","useState","playing","setPlaying","observe","useInView","trackVisibility","delay","onEnter","current","play","onLeave","pause","togglePlayingStatus","useCallback","updatedPlaying","console","log","videoHeight","useMemo","CSS","supports","aspectRatio","height","onPause","readyState","className","ref","style","classNames","onClick","data-torrent","magnetURI","data-file-key","alt","data-played","controls","muted","TipRibbon","Post","id","publicKey","openTipModal","openUnlockModal","openDeleteModal","undefined","openShareModal","_","dispatch","Store","unlockedContent","content","authenticated","auth","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","author","post","React","tips","Object","values","length","sum","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","mediaAttached","setMediaAttached","mediaDetached","setMediaDetached","isOnlineNode","useEffect","subPostContent","subPostTips","liveStatus","stream","contentItems","find","type","viewersCounter","getMediaContent","entries","filter","forEach","k","e","path","parseContent","key","text","finalMagnetURI","cached","Image","postId","width","Common","playbackMagnet","Stream","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","on","scrollSnapList","window","addEventListener","removeEventListener","off","tipPost","targetType","postID","unlockPost","deletePost","shared","sharePost","url","location","host","navigator","share","displayName","clipboard","writeText","Tooltip","rebuild","useLayoutEffect","attachMedia","map","detachTorrent","ShockAvatar","Pad","amt","insideRow","to","live","waiting","wasLive","DateTime","fromMillis","date","toRelative","getTextContent","Array","from","scrollTo","data-tip","src","ShareIcon","color","marginLeft","SharedPost","sharerPublicKey","Utils","sharerProfile","sharedPost","originalPost","originalAuthor","subscribeUserProfile","subSinglePost","shareDate"],"mappings":"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","file":"static/js/10.6aa29d5b.chunk.js","sourcesContent":["import classNames from \"classnames\";\nimport { useCallback, useMemo, useRef, useState } from \"react\";\nimport useInView from \"react-cool-inview\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\n\nconst Video = ({\n  item,\n  index = 0,\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false\n}) => {\n  const videoRef = useRef(null);\n  const [playing, setPlaying] = useState(false);\n  const { observe } = useInView({\n    trackVisibility: false,\n    delay: 100,\n    onEnter: () => {\n      if (videoRef.current) {\n        setPlaying(true);\n        videoRef.current.play();\n      }\n    },\n    onLeave: () => {\n      if (!videoRef.current) {\n        return;\n      }\n\n      setPlaying(false);\n      videoRef.current.pause();\n    }\n  });\n\n  const togglePlayingStatus = useCallback(() => {\n    const updatedPlaying = !playing;\n    setPlaying(updatedPlaying);\n    if (videoRef.current) {\n      if (!updatedPlaying) {\n        videoRef.current.pause();\n        return;\n      }\n\n      console.log(\"Playing video\", updatedPlaying);\n      videoRef.current.play();\n    }\n  }, [playing]);\n\n  const videoHeight = useMemo(() => {\n    if (CSS.supports(\"aspect-ratio: 16 / 9\")) {\n      return {\n        aspectRatio: \"16 / 9\"\n      };\n    }\n\n    return {\n      height: 400\n    };\n  }, []);\n\n  const onPause = useCallback(() => {\n    if (videoRef.current?.readyState === 4) {\n      setPlaying(false);\n    }\n  }, [videoRef]);\n\n  return (\n    <div className=\"media-container\" ref={observe}>\n      <div className=\"video-container\" style={videoHeight}>\n        <div\n          className={classNames({\n            \"thumbnail-container\": true,\n            \"video-hidden\": playing\n          })}\n          onClick={togglePlayingStatus}\n        >\n          <div className=\"play-btn\">\n            <i className=\"fas fa-play\" />\n          </div>\n          <img\n            className=\"video-thumbnail hidden\"\n            data-torrent={item.magnetURI}\n            data-file-key={index}\n            alt=\"Video thumbnail\"\n          />\n          <video\n            className=\"dynamic-thumbnail hidden\"\n            data-torrent={item.magnetURI}\n            data-file-key={index}\n            data-played=\"false\"\n            controls={false}\n            muted\n          />\n        </div>\n        <video\n          className={classNames({\n            \"torrent-video video-js vjs-default-skin\": true,\n            \"video-hidden\": !playing\n          })}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          data-played=\"false\"\n          controls\n          ref={videoRef}\n          muted\n          onPause={onPause}\n        />\n        {!hideRibbon && (\n          <TipRibbon tipCounter={tipCounter} tipValue={tipValue} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","export default __webpack_public_path__ + \"static/media/share.8ed36b2d.svg\";","import React, {\n  useEffect,\n  useState,\n  useCallback,\n  useLayoutEffect\n} from \"react\";\nimport * as Common from \"shock-common\";\nimport { Link } from \"react-router-dom\";\nimport useInView from \"react-cool-inview\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport sum from \"lodash/sum\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../store\";\nimport { attachMedia, detachTorrent } from \"../../utils/Torrents\";\nimport { subPostContent, subPostTips } from \"../../actions/FeedActions\";\n\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\n\nimport ShareIcon from \"../../images/share.svg\";\nimport \"./css/index.scoped.css\";\n\nconst Post = ({\n  id,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = undefined,\n  openShareModal = _ => {}\n}) => {\n  const dispatch = Store.useDispatch();\n  const unlockedContent = Store.useSelector(\n    ({ content }) => content.unlockedContent\n  );\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n  const author = Store.useSelector(Store.selectUser(publicKey));\n  const post = Store.useSelector(Store.selectSinglePost(publicKey, id));\n  const [tipCounter, tipValue] = React.useMemo(() => {\n    const tips = Object.values(\n      post.tips ||\n        {} /* cached data from previous app version won't have the tips object */\n    );\n\n    return [tips.length, sum(tips)];\n  }, [post]);\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n  // Track Enter/Leave only once\n  const [mediaAttached, setMediaAttached] = useState(false);\n  const [mediaDetached, setMediaDetached] = useState(false);\n  const { observe } = useInView({\n    trackVisibility: false,\n    delay: 100,\n    onEnter: () => {\n      setMediaAttached(true);\n    },\n    onLeave: () => {\n      setMediaDetached(true);\n    }\n  });\n\n  const isOnlineNode = /*Utils.isOnline(\n    Store.useSelector(Store.selectUser(publicKey)).lastSeenApp\n  );*/ true;\n\n  useEffect(() => {\n    const subscription = dispatch(subPostContent(publicKey, id));\n    return subscription;\n  }, [dispatch, id, publicKey]);\n\n  useEffect(() => {\n    const subscription = dispatch(subPostTips(publicKey, id));\n    return subscription;\n  }, [dispatch, id, publicKey]);\n\n  const liveStatus = React.useMemo<Common.LiveStatus | null>(() => {\n    const stream = Object.values(post.contentItems ?? {}).find(\n      item => item.type === \"stream/embedded\"\n    ) as Common.EmbeddedStream;\n\n    if (stream) {\n      return stream.liveStatus;\n    }\n\n    return null;\n  }, [post.contentItems]);\n\n  const viewersCounter = React.useMemo<number | null>(() => {\n    const stream = Object.values(post.contentItems ?? {}).find(\n      item => item.type === \"stream/embedded\"\n    ) as Common.EmbeddedStream;\n\n    if (stream && stream.liveStatus === \"live\") {\n      return stream.viewersCounter;\n    }\n\n    return null;\n  }, [post.contentItems]);\n\n  const getMediaContent = useCallback(() => {\n    return Object.entries(post.contentItems ?? {}).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  }, [post.contentItems]);\n\n  const getTextContent = () => {\n    return Object.entries(post.contentItems ?? {}).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(() => {\n    getMediaContent().forEach(([k, e]) => {\n      const path = `${publicKey}>posts>${k}`;\n      // @ts-expect-error\n      if (e.isPrivate && !unlockedContent[path]) {\n        setIsPrivate(true);\n      }\n    });\n  }, [getMediaContent, publicKey, unlockedContent]);\n\n  const parseContent = ([key, item]: [string, Common.ContentItem], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n\n    let finalMagnetURI = \"\";\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`;\n      const cached = unlockedContent[path];\n      if (cached) {\n        finalMagnetURI = cached;\n      } else {\n        return (\n          <div key={key}>\n            <i className=\"fas fa-lock fa-10x\"></i>\n          </div>\n        );\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={{\n            ...item,\n            magnetURI: finalMagnetURI || item.magnetURI\n          }}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          item={{\n            ...item,\n            magnetURI: finalMagnetURI || item.magnetURI\n          }}\n          index={index}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n        />\n      );\n    }\n    if (Common.isEmbeddedStream(item)) {\n      if (item.playbackMagnet) {\n        return (\n          <Video\n            item={{\n              ...item,\n              magnetURI: item.playbackMagnet\n            }}\n            index={index}\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            key={`${id}-${index}`}\n          />\n        );\n      }\n      return (\n        <Stream\n          id={key}\n          item={{\n            ...item,\n            magnetURI: finalMagnetURI || item.magnetURI\n          }}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id, shared: false });\n  }, [id, openDeleteModal]);\n\n  const sharePost = useCallback(() => {\n    if (!authenticated) {\n      const url = `https://${window.location.host}/${publicKey}/post/${id}`;\n\n      if (navigator.share) {\n        navigator.share({\n          text: `Check out ${author.displayName}'s post on Lightning.Page!`,\n          url\n        });\n        return;\n      }\n\n      navigator.clipboard.writeText(url);\n      return;\n    }\n\n    openShareModal({\n      targetType: \"share\",\n      postID: id,\n      publicKey\n    });\n  }, [publicKey, id, openShareModal]);\n\n  useEffect(() => {\n    try {\n      Tooltip.rebuild();\n    } catch (e) {\n      console.log(`Error inside <Post />: `, e);\n    }\n  }, []);\n\n  useLayoutEffect(() => {\n    if (mediaAttached) {\n      attachMedia([post], false);\n    }\n\n    if (mediaDetached) {\n      Object.entries(post.contentItems).map(([key, item]) => {\n        if (\"magnetURI\" in item) {\n          detachTorrent({\n            magnetURI: item.magnetURI\n          });\n        }\n      });\n    }\n  }, [mediaAttached, mediaDetached]);\n\n  const readableLiveStatus: Record<Common.LiveStatus, string> = {\n    live: \"Is Live\",\n    waiting: \"Waiting\",\n    wasLive: \"Was Live\"\n  };\n\n  return (\n    <div className=\"post\" ref={observe}>\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={publicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <div className=\"username\">\n              <Link to={`/otherUser/${publicKey}`}>{author.displayName}</Link>\n              {liveStatus && (\n                <p className=\"liveStatus\">\n                  {readableLiveStatus[liveStatus]}\n                  <i\n                    className={`fas fa-circle liveStatusIcon ${\n                      liveStatus === \"live\" ? \"liveIcon\" : \"\"\n                    }`}\n                  ></i>\n                  {liveStatus === \"live\" && (\n                    <span> | {viewersCounter} watching</span>\n                  )}\n                </p>\n              )}\n            </div>\n            <p>{DateTime.fromMillis(post.date).toRelative()}</p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash trash-icon\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    // TODO: Get the actual ID here. However posts can't be\n                    // edited so index is stable.\n                    key={key}\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div></div>\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n        {openShareModal && (\n          <div className=\"icon-tip-btn\" data-tip=\"share\" onClick={sharePost}>\n            <img\n              alt=\"Share this post\"\n              src={ShareIcon}\n              style={{ color: \"#4285b9\", marginLeft: \"auto\" }}\n            />\n          </div>\n        )}\n        {!openShareModal && <div></div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React, { useCallback, useLayoutEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport Tooltip from \"react-tooltip\";\n\nimport Post from \".\";\n\nimport * as Store from \"../../store\";\nimport * as Utils from \"../../utils\";\nimport Loader from \"../Loader\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport { subPostContent, subSinglePost } from \"../../actions/FeedActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport \"../Post/css/index.scoped.css\";\n\nexport interface SharedPostProps {\n  postID: string;\n  sharerPublicKey: string;\n  openTipModal?(tipData: any): void;\n  openUnlockModal?(unlockData: any): void;\n  openDeleteModal?(params: { id: string; shared: boolean }): void;\n  openShareModal?(shareData: any): void;\n}\n\nconst SharedPost = ({\n  postID,\n  sharerPublicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = Utils.EMPTY_FN,\n  openShareModal = Utils.EMPTY_FN\n}: SharedPostProps) => {\n  const dispatch = Store.useDispatch();\n\n  const sharerProfile = Store.useSelector(Store.selectUser(sharerPublicKey));\n  const sharedPost = Store.useSelector(\n    Store.selectSharedPost(sharerPublicKey, postID)\n  );\n  const originalPost = Store.useSelector(\n    Store.selectSinglePost(sharedPost.originalAuthor, postID)\n  );\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id: originalPost.id, shared: true });\n  }, [originalPost, openDeleteModal]);\n\n  React.useEffect(\n    () => dispatch(subscribeUserProfile(sharedPost.originalAuthor)),\n    [dispatch, sharedPost.originalAuthor]\n  );\n\n  React.useEffect(\n    () => dispatch(subscribeUserProfile(sharerPublicKey)),\n    [dispatch, sharerPublicKey]\n  );\n\n  React.useEffect(\n    () => dispatch(subSinglePost(sharedPost.originalAuthor, postID)),\n    [dispatch, postID, sharedPost.originalAuthor]\n  );\n\n  React.useEffect(\n    () => dispatch(subPostContent(sharedPost.originalAuthor, postID)),\n    [dispatch, postID, sharedPost.originalAuthor]\n  );\n\n  useLayoutEffect(() => {\n    Tooltip.rebuild();\n  }, []);\n\n  return (\n    <div className=\"post shared-post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={sharerPublicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <p>{sharerProfile?.displayName}</p>\n            <p>\n              {/* @ts-ignore */}\n              Shared {DateTime.fromMillis(sharedPost.shareDate).toRelative()}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"shared-content\">\n        {originalPost ? (\n          <Post\n            id={originalPost.id}\n            publicKey={sharedPost.originalAuthor}\n            openTipModal={openTipModal}\n            openUnlockModal={openUnlockModal}\n            openShareModal={openShareModal}\n          />\n        ) : (\n          <Loader text=\"Loading Post...\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SharedPost;\n"],"sourceRoot":""}