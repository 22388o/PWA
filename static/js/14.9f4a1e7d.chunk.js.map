{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/Post/components/Image/index.js","common/BottomBar/index.js","common/AddBtn/index.js","common/Line/index.tsx","common/Modal/components/ModalSubmit/index.js","utils/Cache.js","utils/Promise.js","utils/Torrents.js","common/ProfileDivider/index.tsx","common/ProfileDivider/css/ProfileDivider.module.css","images/clipboard.svg","images/qrcode.svg","pages/Feed/components/SendTipModal/index.js","pages/Feed/components/ShareModal/index.js","pages/Feed/components/UnlockModal/index.js","common/TipModal/index.tsx","pages/OtherUser/css/OtherUser.module.css","pages/OtherUser/components/FollowBtn/FollowBtn.module.css","pages/OtherUser/components/SendReqBtn/SendReqBtn.module.css","common/ContentWall/ContentWall.tsx","images/logo-alone-2.png","pages/Feed/components/BuyServiceModal/index.js","pages/OtherUser/components/FollowBtn/FollowBtn.tsx","pages/OtherUser/components/SendReqBtn/SendReqBtn.tsx","pages/OtherUser/index.tsx"],"names":["ModalContent","children","style","contentClass","className","classNames","ModalTitle","title","toggleModal","Utils","forceRenderTitleBar","hideXBtn","onClick","OVERLAY_STYLE","borderRadius","Modal","modalOpen","modalTitle","contentStyle","disableBackdropClose","noFullWidth","blueBtn","disableBlueBtn","onClickBlueBtn","redBtn","disableRedBtn","onClickRedBtn","error","textIfLoading","closeModal","useCallback","handleBackdropClick","modal","open","container","Loader","overlay","text","disabled","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","group","fas","Image","id","item","index","postId","tipValue","tipCounter","hideRibbon","width","disableZoom","useState","zoomed","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","clearTimeout","timer","setTimeout","contentURL","decodeURIComponent","magnetURI","replace","mainImageStyle","opacity","imgNode","alt","data-torrent","data-file-key","src","onLoad","display","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","BottomBar","useSelector","auth","authenticated","to","activeClassName","AddBtn","icon","iconURL","undefined","nestedMode","large","relative","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","labelElement","Line","color","length","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","ModalSubmit","getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","console","log","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","forEach","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","Object","values","reduce","supportedFormats","fileType","file","extension","split","slice","entries","filter","includes","supportedFileType","webTorrentClient","initializeClient","WebTorrent","default","showDynamicThumbnail","thumbnailFile","thumbnailFileType","thumbnailTarget","dynamicThumbnailTarget","querySelector","classList","add","remove","getCacheId","key","renderTorrent","torrentMode","torrent","target","torrentElements","torrentElement","contains","format","toLowerCase","endsWith","compatibleURL","setAttribute","renderTo","getThumbnailRenderer","thumbnailFileNames","getCacheFileName","thumbnails","sanitizedName","join","thumbnailName","thumbnailIndex","indexOf","cachedThumbnail","attachMedia","posts","all","map","post","contentItems","supportedItems","get","files","match","renderThumbnail","destroy","on","getBlob","err","blob","dataset","played","getAttribute","torrentTasks","torrents","ProfileDivider","selected","showContentBtn","gStyles","styles","unselected","module","exports","SendTipModal","tipData","toggleOpen","dispatch","useDispatch","setError","loading","setLoading","amount","setAmount","tipSuccess","setTipSuccess","onInputChange","e","submitTip","preventDefault","sendTipPost","publicKey","postID","errorMessage","message","responseError","response","data","useEffect","onSubmit","ShareModal","shareData","success","setSuccess","submitShare","sharedPostRaw","originalAuthor","shareDate","Date","now","Http","path","ok","close","UnlockModal","unlockData","unlockSuccess","setUnlockSuccess","submitUnlock","unlockContent","TipModalContent","React","lazy","GuestTipModal","props","loader","margin","resetPaymentResponse","fallback","MEDIA_STYLE","objectFit","ContentWall","history","useHistory","content","setContent","subscription","rifle","query","onError","JSON","stringify","onData","produce","draft","Schema","sub","off","orderedContent","sort","b","timestamp","i","push","author","description","BuyServiceModal","service","buySuccess","setBuySuccess","copied","setCopied","submitBuy","servicePrice","owner","serviceID","serviceType","Number","buyService","revealRes","addAvailableToken","seedUrl","tokens","addStreamToken","copyRes","navigator","clipboard","writeText","FollowBtn","Store","isFollowed","find","f","user","changingStatus","setChangingStatus","handleFollow","res","delete","put","Error","alert","handleGuestFollow","followUser","c","SendReqBtn","isInContact","handleClick","sendHandshakeRequest","Post","SharedPost","QR_IMAGE_SETTINGS","logoAlone","excavate","OtherUserPage","myGunPub","node","profileModalOpen","setProfileModalOpen","useParams","userPublicKey","selectedView","userServices","setUserServices","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","buyServiceModalData","setBuyServiceModalOpen","shareModalData","setShareModalData","isMe","subscribeFollows","unsubscribeFollows","unsubscribePosts","subPosts","unsubscribeSharedPosts","subSharedPosts","unsubscribeUserProfile","subscribeUserProfile","createGuestUser","s","msg","startsWith","toast","dark","displayName","toggleTipModal","toggleBuyServiceModal","buyData","toggleUnlockModal","toggleShareModal","redirectAuth","copyClipboard","handleViewChange","useLayoutEffect","Common","header","ShockAvatar","greyBorder","bio","Pad","amt","insideRow","openTipModal","openUnlockModal","openShareModal","originalPostID","sharerPublicKey","sharedBy","authorId","openDeleteModal","serviceTitle","serviceDescription","serviceCondition","padding","bgColor","fgColor","size","imageSettings","ClipboardIcon","QRCodeIcon"],"mappings":"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","file":"static/js/14.9f4a1e7d.chunk.js","sourcesContent":["import classNames from \"classnames\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children = null, style = {}, contentClass = \"\" }) => (\n  <div className={classNames(\"content\", contentClass)} style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import * as Utils from \"../../../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({\n  title = \"\",\n  toggleModal = Utils.EMPTY_FN,\n  forceRenderTitleBar = false,\n  hideXBtn = false\n}) =>\n  title || forceRenderTitleBar ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      {!hideXBtn && (\n        <div className=\"head-close\" onClick={toggleModal}>\n          <i className=\"fas fa-times\"></i>\n        </div>\n      )}\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","import { useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\nimport Loader from \"../../common/Loader\";\n\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\n\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = Utils.EMPTY_OBJ,\n  disableBackdropClose = false,\n  forceRenderTitleBar = false,\n  hideXBtn = false,\n  noFullWidth = false,\n  blueBtn = \"\",\n  disableBlueBtn = false,\n  onClickBlueBtn = Utils.EMPTY_FN,\n  redBtn = \"\",\n  disableRedBtn = false,\n  onClickRedBtn = Utils.EMPTY_FN,\n  contentClass = \"\",\n  error = \"\",\n  textIfLoading = \"\"\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  const handleBackdropClick = useCallback(() => {\n    if (!disableBackdropClose) {\n      toggleModal();\n    }\n  }, [disableBackdropClose, toggleModal]);\n  return (\n    <div className={classNames({ modal: true, open: modalOpen })}>\n      <div className=\"backdrop\" onClick={handleBackdropClick} />\n      <div\n        className={classNames({\n          container: true,\n          \"container-no-full-width\": noFullWidth\n        })}\n      >\n        {textIfLoading && (\n          <Loader overlay style={OVERLAY_STYLE} text={textIfLoading} />\n        )}\n\n        <ModalTitle\n          title={modalTitle}\n          toggleModal={closeModal}\n          forceRenderTitleBar={forceRenderTitleBar}\n          hideXBtn={hideXBtn}\n        />\n\n        {error && <div className={\"form-error form-error-margin\"}>{error}</div>}\n\n        <ModalContent style={contentStyle} contentClass={contentClass}>\n          {typeof children === \"string\" ? (\n            <p className=\"text-align-center\">{children}</p>\n          ) : (\n            children\n          )}\n        </ModalContent>\n\n        <div className=\"color-buttons\">\n          {blueBtn && (\n            <button\n              disabled={disableBlueBtn}\n              className={classNames(\"color-btn\", \"blue-btn\")}\n              onClick={onClickBlueBtn}\n            >\n              {blueBtn}\n            </button>\n          )}\n\n          {redBtn && (\n            <button\n              disabled={disableRedBtn}\n              className={classNames(\"color-btn\", \"red-btn\")}\n              onClick={onClickRedBtn}\n            >\n              {redBtn}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst OVERLAY_STYLE = {\n  borderRadius: \"15px\"\n};\n\nexport default Modal;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label = \"\",\n  name = \"\",\n  onChange,\n  inputAction = Utils.EMPTY_FN,\n  actionIcon = \"\",\n  value,\n  inputMode = /** @type {React.HTMLAttributes['inputMode']} */ (\"text\"),\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled = false\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.scoped.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null,\n  disableZoom = false,\n  style = /** @type {import('react').CSSProperties} */ ({})\n}) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [\n      animationTimer,\n      zoomLoaded,\n      setZoomed,\n      setZoomLoaded,\n      setPreviewVisible,\n      setAnimationTimer\n    ]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { ...style, opacity: previewVisible ? 1 : 0 };\n  if (width) {\n    mainImageStyle.width = width;\n  }\n\n  const imgNode = (\n    <>\n      <img\n        className={`image torrent-img torrent-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-torrent={item.magnetURI}\n        data-file-key={index}\n        style={mainImageStyle}\n        src={contentURL}\n      />\n      <img\n        className={`image enlarged-img enlarged-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-file-key={index}\n        onLoad={() => {\n          setZoomLoaded(true);\n        }}\n        style={{\n          opacity: zoomed ? 1 : 0,\n          display: zoomed ? \"block\" : \"none\"\n        }}\n        src={contentURL}\n      />\n      {!hideRibbon && (\n        <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"media-container\">\n      {disableZoom ? (\n        imgNode\n      ) : (\n        <ControlledZoom\n          isZoomed={zoomed}\n          onZoomChange={handleZoomChange}\n          overlayBgColorStart=\"#16191c00\"\n          overlayBgColorEnd=\"#16191c\"\n        >\n          {imgNode}\n        </ControlledZoom>\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"../../store\";\n\nconst BottomBar = () => {\n  const authenticated = useSelector(({ auth }) => auth.authenticated);\n\n  if (!authenticated) {\n    return null;\n  }\n\n  return (\n    <div className=\"bottom-nav-container\">\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/overview\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n      </NavLink>\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/chat\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n      </NavLink>\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/profile\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n      </NavLink>\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/feed\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","import \"./ModalSubmit.scoped.css\";\n\nconst ModalSubmit = ({ text = \"Submit\", onClick }) => {\n  return (\n    <div className=\"submit-btn\" onClick={onClick}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default ModalSubmit;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = false;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nexport const supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: false,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nexport const supportedFormats = Object.values(supportedFileTypes).reduce(\n  (supportedFormats, fileType) => [...supportedFormats, ...fileType.formats],\n  []\n);\n\nconst _getFileType = file => {\n  if (!file) {\n    return null;\n  }\n\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const [supportedFileType] = Object.entries(supportedFileTypes).filter(\n    ([type, options]) => options.formats.includes(extension)\n  );\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport let webTorrentClient = null;\n\nexport const initializeClient = async () => {\n  if (!webTorrentClient) {\n    const WebTorrent = await import(\"webtorrent\");\n    webTorrentClient = new WebTorrent.default();\n  }\n\n  return webTorrentClient;\n};\n\nconst showDynamicThumbnail = ({ thumbnailFile, fileType, item }) => {\n  const thumbnailFileType = _getFileType(thumbnailFile);\n  const thumbnailTarget = `${\n    thumbnailFileType?.element ?? \"img\"\n  }[data-torrent=\"${item.magnetURI}\"]`;\n  const dynamicThumbnailTarget = `.dynamic-thumbnail[data-torrent=\"${item.magnetURI}\"]`;\n\n  if (!thumbnailFile && fileType.element === \"video\") {\n    document.querySelector(thumbnailTarget)?.classList.add(\"hidden\");\n    document.querySelector(dynamicThumbnailTarget)?.classList.remove(\"hidden\");\n  }\n};\n\nconst getCacheId =\n  ({ id, key }) =>\n  file =>\n    `${id}-${key}-${file.name}`;\n\nconst renderTorrent = ({ file, type, torrentMode, torrent }) => {\n  const element = type.element;\n  const target = `${element}[data-torrent=\"${torrent.magnetURI}\"]`;\n  const torrentElements = document.querySelectorAll(target);\n  console.log(\"Torrent Elements:\", torrentElements);\n  torrentElements.forEach(torrentElement => {\n    // Don't render hidden videos\n    if (torrentElement.classList.contains(\"hidden\")) {\n      return;\n    }\n    const contentURL = decodeURIComponent(\n      torrent.magnetURI.replace(/.*(ws=)/gi, \"\")\n    );\n    const [compatibleURL] = type.formats.filter(format =>\n      contentURL.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n    );\n\n    if (torrentMode || !compatibleURL) {\n      file.renderTo(torrentElement, type.options);\n      return;\n    }\n\n    torrentElement.setAttribute(\"src\", contentURL);\n  });\n};\n\nexport const isURLCompatible = ({ url, type = \"video/embedded\" }) => {\n  const fileType = supportedFileTypes[type];\n  const [compatibleURL] = fileType.formats.filter(format =>\n    url.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n  );\n\n  return !!compatibleURL;\n};\n\nconst getThumbnailRenderer =\n  ({ thumbnailFileNames, getCacheFileName, torrentMode }) =>\n  async ({ fileName, thumbnails, item, fileType }) => {\n    const sanitizedName = fileName.split(\".\").slice(0, -1).join(\".\");\n    const thumbnailName = `${sanitizedName}-thumb`;\n    const thumbnailIndex = thumbnailFileNames.indexOf(thumbnailName);\n    const thumbnailFile = thumbnails[thumbnailIndex];\n    const thumbnailFileType = thumbnailFile\n      ? _getFileType(thumbnailFile)\n      : null;\n    const thumbnailTarget = `${\n      thumbnailFileType?.element ?? \"img\"\n    }[data-torrent=\"${item.magnetURI}\"]`;\n\n    if (fileType.element === \"video\" && thumbnailFile) {\n      const cachedThumbnail = await getCachedFile(\n        getCacheFileName(thumbnailFile)\n      );\n\n      document.querySelector(thumbnailTarget)?.classList.remove(\"hidden\");\n\n      if (cachedThumbnail) {\n        renderCachedFile(cachedThumbnail, thumbnailTarget);\n        return;\n      }\n\n      renderTorrent({\n        file: thumbnailFile,\n        type: thumbnailFileType,\n        torrentMode,\n        torrent: item\n      });\n\n      return;\n    }\n\n    if (fileType.element === \"video\" && !thumbnailFile) {\n      showDynamicThumbnail({\n        thumbnailFile,\n        fileType,\n        item\n      });\n\n      return;\n    }\n\n    return {\n      thumbnailFile\n    };\n  };\n\nexport const attachMedia = async (posts = [], torrentMode = true) => {\n  const torrentTasks = await Promise.all(\n    posts.map(async post => {\n      const { contentItems, id } = post;\n      const supportedItems = Object.entries(contentItems).filter(\n        ([, item]) => supportedFileTypes[item.type]\n      );\n\n      if (!supportedItems) {\n        return [];\n      }\n\n      const webTorrentClient = await initializeClient();\n\n      return supportedItems.map(\n        ([key, item]) =>\n          () =>\n            new Promise(resolve => {\n              const getCacheFileName = getCacheId({ id, key });\n              const torrentExists = webTorrentClient.get(item.magnetURI);\n\n              if (torrentExists) {\n                resolve(true);\n                return;\n              }\n\n              webTorrentClient.add(item.magnetURI, async torrent => {\n                // Proceed to the next torrent in queue\n                resolve(true);\n\n                const files = torrent.files.filter(file => {\n                  const extension = file.name?.split(\".\")?.slice(-1)[0];\n                  const supportedFileType = Object.values(\n                    supportedFileTypes\n                  ).filter(options => options.formats.includes(extension))[0];\n                  if (supportedFileType) {\n                    const fileType = supportedFileType;\n                    const matched = fileType.formats.includes(extension);\n                    return matched;\n                  }\n                  return false;\n                });\n\n                const thumbnails = files.filter(file =>\n                  file.name.match(/-thumb\\.([\\w\\d]){2,4}$/gi)\n                );\n                const thumbnailFileNames = thumbnails.map(file =>\n                  file.name.replace(/\\.([\\w\\d]){2,4}$/gi, \"\")\n                );\n                const renderThumbnail = getThumbnailRenderer({\n                  getCacheFileName,\n                  thumbnailFileNames,\n                  torrentMode\n                });\n\n                files.map(async file => {\n                  // Skip thumbnails\n                  if (thumbnailFileNames.includes(file.name)) {\n                    return;\n                  }\n\n                  const fileType = _getFileType(file);\n\n                  if (!fileType) {\n                    return;\n                  }\n\n                  const fileName = getCacheFileName(file);\n\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                  const cachedFile = await getCachedFile(fileName);\n\n                  renderThumbnail({\n                    fileName: file.name,\n                    thumbnails,\n                    fileType,\n                    item\n                  });\n\n                  if (cachedFile) {\n                    const torrent = webTorrentClient.get(item.magnetURI);\n\n                    if (torrent) {\n                      torrent.destroy();\n                    }\n\n                    renderCachedFile(cachedFile, target);\n                    return;\n                  }\n\n                  renderTorrent({\n                    file,\n                    type: fileType,\n                    torrentMode,\n                    torrent: item\n                  });\n                });\n\n                torrent.on(\"done\", () => {\n                  files.map(file => {\n                    const fileType = _getFileType(file);\n                    const fileName = getCacheFileName(file);\n                    const element = fileType.element;\n                    const target = `${element}.torrent-video[data-torrent=\"${item.magnetURI}\"]`;\n\n                    file.getBlob(async (err, blob) => {\n                      if (err) {\n                        console.warn(err);\n                        return;\n                      }\n\n                      console.log(\"Caching loaded file...\", fileName, blob);\n                      await saveFile(fileName, blob);\n                      const element = document.querySelector(target);\n                      if (\n                        element?.dataset.played === \"false\" &&\n                        !element?.getAttribute(\"src\")\n                      ) {\n                        const cachedFile = await getCachedFile(fileName);\n                        renderCachedFile(cachedFile, target);\n                      }\n                    });\n                  });\n                });\n              });\n            })\n      );\n    })\n  );\n  const contentItems = torrentTasks.reduce(\n    (torrents, contentItems) => [...torrents, ...contentItems],\n    []\n  );\n\n  runSerial(contentItems);\n};\n","import classNames from \"classnames\";\n\nimport * as gStyles from \"../../styles\";\nimport Line from \"../Line\";\n\nimport styles from \"./css/ProfileDivider.module.css\";\n\nexport interface ProfileDividerProps {\n  onChange(newlySelected: \"posts\" | \"services\" | \"content\"): void;\n  selected: \"posts\" | \"services\" | \"content\";\n  showContentBtn?: boolean;\n}\n\nconst ProfileDivider = ({\n  onChange,\n  selected,\n  showContentBtn\n}: ProfileDividerProps) => {\n  return (\n    <div\n      className={classNames(\n        gStyles.width100,\n        gStyles.rowCentered,\n        gStyles.spaceAround,\n        gStyles.padding12,\n        styles.container\n      )}\n    >\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"posts\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"posts\");\n        }}\n      >\n        Posts\n      </span>\n\n      <div\n        className={classNames(\n          gStyles.absolute,\n          showContentBtn && styles[\"left-line\"]\n        )}\n      >\n        <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n      </div>\n\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"services\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"services\");\n        }}\n      >\n        Services\n      </span>\n\n      {showContentBtn && (\n        <>\n          <div className={classNames(gStyles.absolute, styles[\"right-line\"])}>\n            <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n          </div>\n\n          <span\n            className={classNames(\n              gStyles.unselectable,\n              selected === \"content\" ? styles.selected : styles.unselected\n            )}\n            onClick={() => {\n              onChange(\"content\");\n            }}\n          >\n            Content\n          </span>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileDivider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileDivider_container__3ob9k\",\"selected\":\"ProfileDivider_selected__3U98y\",\"unselected\":\"ProfileDivider_unselected__1Z_qd\",\"left-line\":\"ProfileDivider_left-line__2xjlN\",\"right-line\":\"ProfileDivider_right-line__1d2KH\"};","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"../../../../store\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { sendTipPost } from \"../../../../actions/FeedActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst SendTipModal = ({ tipData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const authenticated = useSelector(({ auth }) => auth.authenticated);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [tipSuccess, setTipSuccess] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n  }, []);\n\n  const submitTip = useCallback(\n    async e => {\n      e.preventDefault();\n      if (loading) {\n        return;\n      }\n      try {\n        setLoading(true);\n        await dispatch(\n          sendTipPost({\n            amount,\n            publicKey: tipData.publicKey,\n            postId: tipData.postID\n          })\n        );\n        setTipSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (tipData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, amount, loading, tipData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!tipData) {\n      setLoading(false);\n      setError(null);\n      setTipSuccess(false);\n    }\n  }, [tipData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={tipData && authenticated}\n      modalTitle=\"Send Tip\"\n      noFullWidth\n    >\n      {tipSuccess ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post tipped successfully!</p>\n          <p className=\"tip-success-desc\"></p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitTip}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc m-1\">\n            Please specify the amount of sats you'd like to tip this user with\n            below.\n          </p>\n          <InputGroup\n            name=\"amount\"\n            onChange={onInputChange}\n            value={amount}\n            inputMode=\"decimal\"\n            small\n          />\n          <ModalSubmit text=\"SEND TIP\" onClick={submitTip} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SendTipModal;\n","import { useCallback, useEffect, useState } from \"react\";\nimport Modal from \"../../../../common/Modal\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\nimport { Http } from \"../../../../utils\";\n\nconst ShareModal = ({ shareData, toggleOpen }) => {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const submitShare = useCallback(\n    async e => {\n      e.preventDefault();\n      if(loading){\n        return\n      }\n      try {\n        setLoading(true);\n        const { postID: id, publicKey } = shareData;\n        const sharedPostRaw = {\n          originalAuthor: publicKey,\n          shareDate: Date.now()\n        };\n        const { data } = await Http.post(`/api/gun/put`, {\n          path: `$user>sharedPosts>${id}`,\n          value: sharedPostRaw\n        });\n        if (data.ok) {\n          setSuccess(true);\n        } else {\n          setError(\"Share operation failed\");\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [shareData,loading]\n  );\n\n  const close = useCallback(() => {\n    toggleOpen(null);\n  }, [toggleOpen]);\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!shareData) {\n      setLoading(false);\n      setError(null);\n      setSuccess(false);\n    }\n  }, [shareData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!shareData}\n      modalTitle=\"Share post\"\n      blueBtn={\n        (!loading && !error && !success && \"SHARE\") ||\n        ((success || error) && \"OK\")\n      }\n      disableBlueBtn={loading}\n      onClickBlueBtn={success || error ? close : submitShare}\n      hideXBtn={success}\n      noFullWidth\n    >\n      {success ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post shared successfully!</p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitShare}>\n          {error ? <p className=\"form-error\">{error}</p> : null}\n          {error && <p className=\"tip-modal-desc m-1\">You can try again.</p>}\n          {loading ? <Loader text=\"Sharing...\" /> : null}\n          {!error && !loading && (\n            <p className=\"tip-modal-desc m-1\">\n              This post will be shared on your profile\n            </p>\n          )}\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default ShareModal;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { unlockContent } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst UnlockModal = ({ unlockData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [unlockSuccess, setUnlockSuccess] = useState(false);\n\n  const submitUnlock = useCallback(\n    async e => {\n      e.preventDefault();\n      if(loading){\n        return\n      }\n      try {\n        setLoading(true);\n        await unlockContent(\n          100,\n          unlockData.publicKey,\n          unlockData.postID\n        )(dispatch);\n        setUnlockSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (unlockData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch,loading, unlockData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!unlockData) {\n      setLoading(false);\n      setError(null);\n      setUnlockSuccess(false);\n    }\n  }, [unlockData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!unlockData}\n      modalTitle=\"Unlock content\"\n    >\n      {unlockSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Content unlocked successfully!</p>\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitUnlock}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            100 sats will be sent to the owner of the post to unlock the content\n          </p>\n          <ModalSubmit text=\"UNLOCK\" onClick={submitUnlock} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default UnlockModal;\n","import React, { Suspense, useCallback, useMemo } from \"react\";\nimport { resetPaymentResponse } from \"../../actions/GuestActions\";\nimport { useSelector } from \"../../store\";\nimport Loader from \"../Loader\";\nimport \"./css/index.scoped.css\";\nimport { useDispatch } from \"react-redux\";\n\nconst TipModalContent = React.lazy(() => import(\"./components/Modal\"));\n\nconst GuestTipModal = (props: {\n  toggleOpen: (data?: any) => void;\n  tipData: any;\n  publicKey: string;\n}) => {\n  const { toggleOpen, tipData } = props;\n  const dispatch = useDispatch();\n  const authenticated = useSelector(({ auth }) => auth.authenticated);\n\n  const loader = useMemo(\n    () => <Loader text=\"Loading...\" style={{ margin: \"40px 0\" }} />,\n    []\n  );\n\n  const close = useCallback(() => {\n    dispatch(resetPaymentResponse());\n    toggleOpen();\n  }, [dispatch, toggleOpen]);\n\n  if (!tipData || authenticated) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal-overlay\" onClick={close}></div>\n      <div className=\"modal-content\">\n        <Suspense fallback={loader}>\n          <TipModalContent {...props} />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default GuestTipModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"OtherUser_profile-page__OhC-_\",\"profile-container\":\"OtherUser_profile-container__2oq7s\",\"profile-cover\":\"OtherUser_profile-cover__3Fq6P\",\"profile-info-container\":\"OtherUser_profile-info-container__3qnqN\",\"profile-avatar\":\"OtherUser_profile-avatar__S6INq\",\"profile-name\":\"OtherUser_profile-name__3chmC\",\"profile-desc\":\"OtherUser_profile-desc__f9Dsj\",\"config-btn\":\"OtherUser_config-btn__t33_B\",\"config-btn-icon\":\"OtherUser_config-btn-icon__1p_6O\",\"config-btn-text\":\"OtherUser_config-btn-text__1Wg_T\",\"profile-choice-container\":\"OtherUser_profile-choice-container__3-xgF\",\"profile-choice-icon\":\"OtherUser_profile-choice-icon__3iOE1\",\"profile-choice-text\":\"OtherUser_profile-choice-text__deYLl\",\"profile-qrcode\":\"OtherUser_profile-qrcode__2Ok54\",\"profile-qrcode-desc\":\"OtherUser_profile-qrcode-desc__3cp0P\",\"profile-clipboard-container\":\"OtherUser_profile-clipboard-container__1P_p8\",\"profile-clipboard-icon\":\"OtherUser_profile-clipboard-icon__1nW2U\",\"profile-clipboard-text\":\"OtherUser_profile-clipboard-text__2g4AC\",\"publish-content-form\":\"OtherUser_publish-content-form__1YdVa\",\"publish-content-title\":\"OtherUser_publish-content-title__3EsYE\",\"publish-content-icon\":\"OtherUser_publish-content-icon__291ch\",\"m-1\":\"OtherUser_m-1__1dpvP\",\"content-container\":\"OtherUser_content-container__1lOOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FollowBtn_container__2c7Cj\",\"text\":\"FollowBtn_text__1o7CS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SendReqBtn_container__2nY4E\",\"text\":\"SendReqBtn_text__2_2zC\"};","import React from \"react\";\nimport produce from \"immer\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { rifle } from \"../../utils/WebSocket\";\nimport * as Schema from \"../../schema\";\nimport * as Utils from \"../../utils\";\nimport Image from \"../../common/Post/components/Image\";\n\nimport \"./css/ContentWall.scoped.css\";\n\nexport interface ContentWallProps {\n  publicKey: string;\n}\n\nconst ContentWall: React.FC<ContentWallProps> = ({ publicKey }) => {\n  const history = useHistory();\n  const [content, setContent] = React.useState<\n    Record<string, Schema.PublicContentItem>\n  >({});\n  const [error, setError] = React.useState<string>(\"\");\n\n  React.useEffect(() => {\n    const subscription = rifle({\n      query: `${publicKey}::publishedContentPublic::map.on`,\n      onError(e) {\n        setError(JSON.stringify(e, null, 4));\n      },\n      onData(item, key) {\n        setContent(\n          produce(draft => {\n            if (Schema.isPublicContentItem(item)) {\n              draft[key] = item;\n            } else {\n              Utils.logger.warn(\n                `Invalid/incomplete public published content found for public key ...${publicKey.slice(\n                  -8\n                )}, might be due to pending replication or was deleted if null: ${JSON.stringify(\n                  item,\n                  null,\n                  4\n                )}`\n              );\n            }\n          })\n        );\n      }\n    });\n\n    return () => {\n      subscription.then(sub => sub.off());\n    };\n  }, [publicKey]);\n\n  const orderedContent = React.useMemo(() => {\n    return Object.values(content).sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  }, [content]);\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <>\n      {orderedContent.map((item, i) => {\n        return (\n          <div\n            className=\"item\"\n            key={item.id}\n            onClick={() => {\n              history.push(`/item/${item.author}/${item.id}`);\n            }}\n          >\n            {item.type === \"image/embedded\" && (\n              <div style={MEDIA_STYLE}>\n                <Image\n                  disableZoom\n                  hideRibbon\n                  id={item.id}\n                  index={i}\n                  item={item}\n                  postId={null}\n                  tipCounter={null}\n                  tipValue={null}\n                  style={MEDIA_STYLE}\n                />\n              </div>\n            )}\n\n            {item.type === \"video/embedded\" && (\n              <div className=\"video-placeholder\" style={MEDIA_STYLE}>\n                <i className=\"fas fa-video video-icon\" />\n              </div>\n            )}\n\n            <div className=\"title-and-description\">\n              <h2 className=\"title\">{item.title}</h2>\n\n              <p className=\"description\">{item.description || \" \"}</p>\n\n              <span className=\"timestamp\">\n                {Utils.formatTimestamp(item.timestamp)}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst MAX_MEDIA_LONG_EDGE = 100;\n\nconst MEDIA_STYLE: React.CSSProperties = {\n  height: MAX_MEDIA_LONG_EDGE,\n  width: MAX_MEDIA_LONG_EDGE,\n  objectFit: \"contain\"\n};\n\nexport default ContentWall;\n","export default __webpack_public_path__ + \"static/media/logo-alone-2.512c5854.png\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { buyService } from \"../../../../actions/OrdersActions\";\nimport {\n  addAvailableToken,\n  addStreamToken\n} from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst BuyServiceModal = ({ service, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [buySuccess, setBuySuccess] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const submitBuy = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        const { servicePrice, owner, serviceID, serviceType } = service;\n        if (!owner || !serviceID || typeof Number(servicePrice) !== \"number\") {\n          console.error(\"invalid service provided\");\n          console.error(service);\n          return;\n        }\n        setLoading(true);\n        const revealRes = await buyService(\n          owner,\n          serviceID,\n          servicePrice\n        )(dispatch);\n        console.log(revealRes);\n        setBuySuccess(revealRes);\n        if (serviceType === \"torrentSeed\") {\n          addAvailableToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n        if (serviceType === \"streamSeed\") {\n          addStreamToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n      } catch (err) {\n        console.error(err);\n        if (service) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, service]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!service) {\n      setLoading(false);\n      setError(null);\n      setBuySuccess(null);\n    }\n  }, [buySuccess, service]);\n  const copyRes = useCallback(() => {\n    navigator.clipboard.writeText(JSON.stringify(buySuccess));\n    setCopied(true);\n  }, [buySuccess, setCopied]);\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!service}\n      modalTitle=\"Buy Service\"\n    >\n      {buySuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">\n            You successfully bought this service!\n          </p>\n          <p>{JSON.stringify(buySuccess)}</p>\n          <button onClick={copyRes}>COPY TO CLIPBOARD</button>\n          {copied && <p>Copied!</p>}\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitBuy}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            {service && service.servicePrice} sats will be sent to the owner of\n            the service provider\n          </p>\n          <ModalSubmit text=\"BUY\" onClick={submitBuy} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default BuyServiceModal;\n","import { useCallback, useState } from \"react\";\nimport c from \"classnames\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\n\nimport styles from \"./FollowBtn.module.css\";\nimport { useDispatch } from \"../../../../utils/index\";\nimport { followUser } from \"../../../../actions/GuestActions\";\n\nexport interface FollowBtnProps {\n  publicKey: string;\n}\n\nconst FollowBtn = ({ publicKey }: FollowBtnProps) => {\n  const dispatch = useDispatch();\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const isFollowed = !!Store.useSelector(Store.selectFollows).find(\n    f => f.user === publicKey\n  );\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleFollow = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n      setChangingStatus(true);\n\n      let res = { status: -1, data: { errorMessage: \"\" } };\n\n      if (isFollowed) {\n        res = await Utils.Http.delete(`/api/gun/follows/${publicKey}`);\n      } else {\n        res = await Utils.Http.put(`/api/gun/follows/${publicKey}`, {});\n      }\n\n      if (res.status !== 200) {\n        throw new Error(res.data.errorMessage);\n      }\n    } catch (e) {\n      if (isFollowed) {\n        alert(`Could not unfollow: ${e.message}`);\n      } else {\n        alert(`Could not follow: ${e.message}`);\n      }\n    } finally {\n      setChangingStatus(false);\n    }\n  }, [changingStatus, setChangingStatus, isFollowed, publicKey]);\n\n  const handleGuestFollow = useCallback(() => {\n    dispatch(followUser({ publicKey }));\n  }, [dispatch, publicKey]);\n\n  return (\n    <div\n      className={styles.container}\n      onClick={authenticated ? handleFollow : handleGuestFollow}\n    >\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isFollowed ? \"Unfollow\" : \"Follow\"}\n      </p>\n    </div>\n  );\n};\n\nexport default FollowBtn;\n","import { useCallback, useState } from \"react\";\nimport c from \"classnames\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\nimport { sendHandshakeRequest } from \"../../../../actions/ChatActions\";\n\nimport styles from \"./SendReqBtn.module.css\";\n\nexport interface SendReqBtnProps {\n  publicKey: string;\n}\n\nconst SendReqBtn = ({ publicKey }: SendReqBtnProps) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isInContact = Store.useSelector(Store.selectIsInContact(publicKey));\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleClick = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n\n      if (isInContact) {\n        history.push(`/chat/${publicKey}`);\n        return;\n      }\n\n      setChangingStatus(true);\n\n      await dispatch(sendHandshakeRequest(publicKey));\n\n      setChangingStatus(false);\n    } catch (e) {\n      alert(`Could not send contact request: ${e.message}`);\n      Utils.logger.error(e);\n      setChangingStatus(false);\n    }\n  }, [changingStatus, dispatch, history, isInContact, publicKey]);\n\n  return (\n    <div className={c(styles.container)} onClick={handleClick}>\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isInContact ? \"Message\" : \"Request Contact\"}\n      </p>\n    </div>\n  );\n};\n\nexport default SendReqBtn;\n","import React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useState\n} from \"react\";\nimport QRCode, { ImageSettings } from \"qrcode.react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport * as Common from \"shock-common\";\nimport { toast } from \"react-toastify\";\n\nimport { rifle } from \"../../utils/WebSocket\";\n\nimport { createGuestUser } from \"../../actions/GuestActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\nimport ContentWall from \"../../common/ContentWall\";\nimport GuestTipModal from \"../../common/TipModal\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport logoAlone from \"../../images/logo-alone-2.png\";\nimport SendTipModal from \"../Feed/components/SendTipModal\";\nimport UnlockModal from \"../Feed/components/UnlockModal\";\nimport BuyServiceModal from \"../Feed/components/BuyServiceModal\";\nimport ShareModal from \"../Feed/components/ShareModal\";\nimport * as Store from \"../../store\";\nimport * as gStyles from \"../../styles\";\n\nimport styles from \"./css/OtherUser.module.css\";\nimport FollowBtn from \"./components/FollowBtn\";\nimport SendReqBtn from \"./components/SendReqBtn\";\nimport {\n  subscribeFollows,\n  unsubscribeFollows,\n  subscribeUserPosts as subPosts,\n  subSharedPosts\n} from \"../../actions/FeedActions\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport * as Utils from \"../../utils\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst AVATAR_SIZE = 122;\n\nconst OtherUserPage = () => {\n  //#region controller\n  const dispatch = Store.useDispatch();\n  const history = useHistory();\n  const myGunPub = Store.useSelector(({ node }) => node.publicKey);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n\n  const { publicKey: userPublicKey, selectedView = \"posts\" } = useParams<{\n    publicKey: string;\n    selectedView: \"posts\" | \"services\" | \"content\";\n  }>();\n  const user = Store.useSelector(Store.selectUser(userPublicKey));\n  const [userServices, setUserServices] = useState({});\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [buyServiceModalData, setBuyServiceModalOpen] = useState(null);\n  const [shareModalData, setShareModalData] = useState(null);\n  const isMe = myGunPub === user.publicKey;\n  // Effect to sub follows\n  useEffect(() => {\n    dispatch(subscribeFollows());\n    return () => {\n      dispatch(unsubscribeFollows());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    const unsubscribePosts = dispatch(subPosts(userPublicKey));\n    const unsubscribeSharedPosts = dispatch(subSharedPosts(userPublicKey));\n    const unsubscribeUserProfile = dispatch(\n      subscribeUserProfile(userPublicKey)\n    );\n\n    return () => {\n      unsubscribePosts();\n      unsubscribeSharedPosts();\n      unsubscribeUserProfile();\n    };\n  }, [dispatch, userPublicKey]);\n\n  useEffect(() => {\n    if (!authenticated) {\n      dispatch(createGuestUser());\n    }\n  }, [authenticated, dispatch]);\n\n  //effect for services\n  useEffect(() => {\n    const subscription = rifle({\n      onData(data, key) {\n        setUserServices(s => ({\n          ...s,\n          [key]: data\n        }));\n      },\n      query: `${userPublicKey}::offeredServices::map.on`,\n      onError(e) {\n        const msg = Utils.extractErrorMessage(e);\n\n        if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n          Utils.logger.warn(\n            `Could not fetch this user's (...${userPublicKey.slice(\n              -8\n            )}) offered services due to a timeout error, this can be expected if the data hasn't been populated yet.`\n          );\n        } else {\n          toast.dark(\n            `There was an error fetching ${user.displayName}'s offered services: ${msg}`\n          );\n          Utils.logger.error(e);\n        }\n      }\n    });\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  }, [user.displayName, userPublicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n      }\n\n      setTipModalOpen(tipData);\n    },\n    [tipModalData]\n  );\n  const toggleBuyServiceModal = useCallback(\n    buyData => {\n      if (buyServiceModalData || !buyData) {\n        setBuyServiceModalOpen(null);\n      }\n\n      setBuyServiceModalOpen(buyData);\n    },\n    [buyServiceModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const toggleShareModal = useCallback(\n    shareData => {\n      console.log(\"share click yo\");\n      console.log(shareData);\n      if (shareModalData || !shareData) {\n        setShareModalData(null);\n      }\n\n      setShareModalData(shareData);\n    },\n    [shareModalData]\n  );\n\n  const posts = Store.useSelector(\n    Store.selectPostsNewestToOldest(userPublicKey)\n  );\n\n  const redirectAuth = useCallback(() => {\n    history.push(\"/auth\");\n  }, [history]);\n\n  const copyClipboard = useCallback(() => {\n    navigator.clipboard.writeText(userPublicKey);\n  }, [userPublicKey]);\n\n  const renderPosts = () => {\n    if (posts.length === 0) {\n      return <Loader text=\"loading posts...\" />;\n    }\n    return posts.map(post => {\n      if (Common.isSharedPost(post)) {\n        return (\n          <Suspense fallback={<Loader />} key={post.originalPostID}>\n            <SharedPost\n              openTipModal={toggleTipModal}\n              openUnlockModal={toggleUnlockModal}\n              openShareModal={toggleShareModal}\n              postID={post.originalPostID}\n              sharerPublicKey={post.sharedBy}\n            />\n          </Suspense>\n        );\n      }\n\n      return (\n        <Suspense fallback={<Loader />} key={post.id}>\n          <Post\n            id={post.id}\n            publicKey={post.authorId}\n            openTipModal={toggleTipModal}\n            openUnlockModal={toggleUnlockModal}\n            openDeleteModal={null}\n            openShareModal={toggleShareModal}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    return Object.entries(userServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, service]) => {\n        const buyCB = () => {\n          setBuyServiceModalOpen({\n            // @ts-expect-error\n            ...service,\n            serviceID: id,\n            owner: userPublicKey\n          });\n        };\n        return (\n          <div className={styles.post}>\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceType}</p>\n            <strong>Service Title</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceTitle}</p>\n            <strong>Service Description</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceDescription}</p>\n            <strong>Service Condition</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceCondition}</p>\n            <strong>Service Price</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.servicePrice}</p>\n            <button onClick={buyCB}>BUY SERVICE</button>\n          </div>\n        );\n      });\n  };\n  const renderContent = () => {\n    return (\n      <div className={styles[\"content-container\"]}>\n        <ContentWall publicKey={userPublicKey} />\n      </div>\n    );\n  };\n  const handleViewChange = useCallback(\n    (selected: \"posts\" | \"services\" | \"content\") => {\n      history.replace(`/otherUser/${userPublicKey}/${selected}`);\n    },\n    [history, userPublicKey]\n  );\n  //#endregion controller\n\n  useLayoutEffect(() => {\n    attachMedia(\n      posts.filter(post => !Common.isSharedPost(post)),\n      false\n    );\n  }, [posts]);\n\n  return (\n    <div className={classNames(\"page-container\", styles[\"profile-page\"])}>\n      <div className={classNames(styles[\"profile-container\"])}>\n        <div className=\"profile-cover\">\n          {user.header && (\n            <img\n              className=\"w-100\"\n              alt=\"User set profile header.\"\n              src={`data:image/jpeg;base64,${user.header}`}\n            />\n          )}\n        </div>\n\n        <div className={styles[\"profile-info-container\"]}>\n          <div\n            className={styles[\"profile-avatar\"]}\n            style={{\n              height: `${AVATAR_SIZE}px`,\n              width: `${AVATAR_SIZE}px`\n            }}\n          >\n            <ShockAvatar\n              height={AVATAR_SIZE}\n              publicKey={userPublicKey}\n              greyBorder\n            />\n          </div>\n          <div>\n            <p className={styles[\"profile-name\"]}>{user.displayName}</p>\n            <p className={styles[\"profile-desc\"]}>\n              {user.bio || \"Lightning.Page user\"}\n            </p>\n\n            <div className={gStyles.rowCentered}>\n              {!isMe && <FollowBtn publicKey={userPublicKey} />}\n\n              <Pad amt={24} insideRow />\n\n              {!isMe && <SendReqBtn publicKey={userPublicKey} />}\n            </div>\n          </div>\n        </div>\n\n        <ProfileDivider\n          onChange={handleViewChange}\n          selected={selectedView}\n          showContentBtn\n        />\n        <Pad amt={30} />\n\n        <div>\n          {selectedView === \"posts\" && renderPosts()}\n          {selectedView === \"services\" && renderServices()}\n          {selectedView === \"content\" && renderContent()}\n        </div>\n\n        {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n        <Pad amt={200} />\n\n        <Modal\n          toggleModal={toggleModal}\n          modalOpen={profileModalOpen}\n          contentStyle={{\n            padding: \"40px 30px\"\n          }}\n          noFullWidth\n        >\n          <QRCode\n            bgColor=\"#23282d\"\n            fgColor=\"#64bbff\"\n            value={userPublicKey}\n            size={180}\n            className={styles[\"profile-qrcode\"]}\n            imageSettings={QR_IMAGE_SETTINGS}\n          />\n          <p className={styles[\"profile-qrcode-desc\"]}>\n            Scan this code to contact this user\n          </p>\n          <div\n            className={styles[\"profile-clipboard-container\"]}\n            onClick={copyClipboard}\n          >\n            <img\n              src={ClipboardIcon}\n              className={styles[\"profile-clipboard-icon\"]}\n              alt=\"\"\n            />\n            <p className={styles[\"profile-clipboard-text\"]}>\n              Tap to copy to clipboard\n            </p>\n          </div>\n        </Modal>\n        <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n        <GuestTipModal\n          publicKey={userPublicKey}\n          tipData={tipModalData}\n          toggleOpen={toggleTipModal}\n        />\n        <UnlockModal\n          unlockData={unlockModalData}\n          toggleOpen={toggleUnlockModal}\n        />\n        <BuyServiceModal\n          service={buyServiceModalData}\n          toggleOpen={toggleBuyServiceModal}\n        />\n        <ShareModal shareData={shareModalData} toggleOpen={toggleShareModal} />\n      </div>\n      {authenticated ? (\n        <AddBtn\n          onClick={toggleModal}\n          large\n          iconURL={QRCodeIcon}\n          icon={null}\n          label={null}\n        />\n      ) : (\n        <AddBtn\n          onClick={redirectAuth}\n          large\n          icon=\"user\"\n          label=\"Create a Lightning Page\"\n        />\n      )}\n\n      <BottomBar />\n    </div>\n  );\n};\n\nconst QR_IMAGE_SETTINGS: ImageSettings = {\n  src: logoAlone,\n  height: 36,\n  width: 36,\n  excavate: true\n};\n\nexport default OtherUserPage;\n"],"sourceRoot":""}