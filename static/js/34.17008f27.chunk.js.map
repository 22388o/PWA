{"version":3,"sources":["common/MainNav/index.js","pages/Backups/index.tsx"],"names":["MainNav","pageTitle","absolute","solid","enableBackButton","onHeight","Utils","dispatch","useDispatch","goBack","useCallback","window","history","back","open","openDrawer","gunPublicKey","useSelector","node","publicKey","divRefCb","el","getBoundingClientRect","height","e","console","log","className","classNames","ref","onClick","memo","Backups","useState","seedBackup","setSeedBackup","channelsBackup","setChannelsBackup","copied","setCopied","lndPub","Store","wallet","lightningInfo","identity_pubkey","gunPub","useEffect","Http","get","headers","then","data","copyChannelsBackup","navigator","clipboard","writeText","JSON","stringify"],"mappings":"qHAAA,oFAcMA,EAAU,SAAC,GAMV,IALLC,EAKI,EALJA,UAKI,IAJJC,gBAII,aAHJC,aAGI,aAFJC,wBAEI,aADJC,gBACI,MADOC,IACP,EACEC,EAAWC,cACXC,EAASC,uBAAY,WACzBC,OAAOC,QAAQC,SACd,IAEGC,EAAOJ,uBAAY,WACvBH,EAASQ,iBACR,CAACR,IAEES,EAAeC,uBAAY,qBAAGC,KAAgBC,aAG9CC,EAAWV,uBACf,SAAAW,GAEE,GAAKA,EACL,IACEhB,EAASgB,EAAGC,wBAAwBC,QACpC,MAAOC,GACPC,QAAQC,IAAR,+CACAD,QAAQC,IAAIF,MAGhB,CAACnB,IAGH,OACE,sBACEsB,UAAWC,IAAW,CACpB,sBAAsB,EACtB,oBAAqB1B,EACrB,iBAAkBC,IAEpB0B,IAAKT,EANP,+BAQGhB,EACC,qBAAKuB,UAAU,gBAAgBG,QAASrB,EAAxC,8BACE,mBAAGkB,UAAU,sBAAb,yBAGF,cAAC,IAAD,CAAaJ,OAAQ,GAAIJ,UAAWH,EAApC,uBAEF,mBAAGW,UAAU,8BAAb,8BAA4C1B,IAC5C,sBAAK0B,UAAU,oBAAoBG,QAAShB,EAA5C,+BACE,qBAAKa,UAAU,qBAAf,uBACA,qBAAKA,UAAU,qBAAf,uBACA,qBAAKA,UAAU,qBAAf,8BAMOI,mBAAK/B,I,gJCnEdgC,EAAU,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACbC,EADa,KACDC,EADC,OAEwBF,mBAAS,MAFjC,mBAEbG,EAFa,KAEGC,EAFH,OAGQJ,oBAAS,GAHjB,mBAGbK,EAHa,KAGLC,EAHK,KAIKC,EAAWC,eAClC,qBAAGC,OAAoBC,iBADjBC,gBAGFC,EAASJ,eAAkB,qBAAGvB,KAAgBC,aAEpD2B,qBAAU,WACRC,IAAKC,IAAL,gCAA0C,CACxCC,QAAS,CACP,4BAA6BJ,KAE9BK,MAAK,YAAqC,IAApBhB,EAAmB,EAAjCiB,KAAQA,KACjBhB,EAAcD,QAEf,CAACW,IAEJC,qBAAU,WACRC,IAAKC,IAAL,oCAA8C,CAC5CC,QAAS,CACP,4BAA6BJ,KAE9BK,MAAK,YAAyC,IAAxBd,EAAuB,EAArCe,KAAQA,KACjBd,EAAkBD,QAEnB,CAACS,IACJ,IAAMO,EAAqB1C,uBAAY,WACrC2C,UAAUC,UAAUC,UAAUC,KAAKC,UAAUrB,IAC7CG,GAAU,KACT,CAACH,IACJ,OACE,sBAAKT,UAAU,mBAAf,+BACE,cAAC,IAAD,CAAS1B,UAAU,UAAUG,kBAAkB,EAA/C,uBACA,sBAAKuB,UAAU,mBAAf,+BACE,sBAAKA,UAAU,iBAAf,+BACE,2EACA,kDAAKa,OAEP,sBAAKb,UAAU,iBAAf,+BACE,kEACCO,GAAc,kDAAKA,KAClBA,GAAc,2FAElB,sBAAKP,UAAU,iBAAf,+BACE,uEACCS,GACC,sBAAKT,UAAU,gBAAf,+BACE,4EACCW,GACC,mBAAGX,UAAU,eAAeG,QAASsB,EAArC,wBAEAd,GACA,mBAAGX,UAAU,cAAcG,QAASsB,EAApC,2BAIJhB,GAAkB,kGAOfL,yBAAKC","file":"static/js/34.17008f27.chunk.js","sourcesContent":["// @ts-check\nimport { memo, useCallback } from \"react\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as Utils from \"../../utils\";\nimport { openDrawer } from \"../../actions/DrawerActions\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport { useSelector } from \"../../store\";\n\nconst MainNav = ({\n  pageTitle,\n  absolute = false,\n  solid = false,\n  enableBackButton = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const dispatch = useDispatch();\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  const open = useCallback(() => {\n    dispatch(openDrawer());\n  }, [dispatch]);\n\n  const gunPublicKey = useSelector(({ node }) => node.publicKey);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in MainNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className={classNames({\n        \"main-nav-container\": true,\n        \"main-nav-absolute\": absolute,\n        \"main-nav-solid\": solid\n      })}\n      ref={divRefCb}\n    >\n      {enableBackButton ? (\n        <div className=\"main-nav-back\" onClick={goBack}>\n          <i className=\"icon icon-thin-back\"></i>\n        </div>\n      ) : (\n        <ShockAvatar height={40} publicKey={gunPublicKey} />\n      )}\n      <p className=\"main-nav-title unselectable\">{pageTitle}</p>\n      <div className=\"main-nav-menu-btn\" onClick={open}>\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MainNav);\n","import { memo, useCallback, useEffect, useState } from \"react\";\nimport MainNav from \"../../common/MainNav\";\nimport \"./css/index.scoped.css\";\nimport Http from \"../../utils/Http\";\nimport * as Store from \"../../store\";\n\nconst Backups = () => {\n  const [seedBackup, setSeedBackup] = useState(\"\");\n  const [channelsBackup, setChannelsBackup] = useState(null);\n  const [copied, setCopied] = useState(false);\n  const { identity_pubkey: lndPub } = Store.useSelector(\n    ({ wallet }) => wallet.lightningInfo\n  );\n  const gunPub = Store.useSelector(({ node }) => node.publicKey);\n  //effect for seed backup\n  useEffect(() => {\n    Http.get(`/api/gun/user/once/seedBackup`, {\n      headers: {\n        \"public-key-for-decryption\": gunPub\n      }\n    }).then(({ data: { data: seedBackup } }) => {\n      setSeedBackup(seedBackup);\n    });\n  }, [gunPub]);\n  //effect for channels backup\n  useEffect(() => {\n    Http.get(`/api/gun/user/once/channelsBackup`, {\n      headers: {\n        \"public-key-for-decryption\": gunPub\n      }\n    }).then(({ data: { data: channelsBackup } }) => {\n      setChannelsBackup(channelsBackup);\n    });\n  }, [gunPub]);\n  const copyChannelsBackup = useCallback(() => {\n    navigator.clipboard.writeText(JSON.stringify(channelsBackup));\n    setCopied(true);\n  }, [channelsBackup]);\n  return (\n    <div className=\"moonPayContainer\">\n      <MainNav pageTitle=\"BACKUPS\" enableBackButton={true} />\n      <div className=\"backupsContainer\">\n        <div className=\"innerContainer\">\n          <h1>Lightning Public Key</h1>\n          <h3>{lndPub}</h3>\n        </div>\n        <div className=\"innerContainer\">\n          <h1>Seed Backup</h1>\n          {seedBackup && <h3>{seedBackup}</h3>}\n          {!seedBackup && <h3>backup not available on this node</h3>}\n        </div>\n        <div className=\"innerContainer\">\n          <h2>Channels Backups</h2>\n          {channelsBackup && (\n            <div className=\"copyContainer\">\n              <p>copy channel backups: </p>\n              {copied && (\n                <i className=\"fas fa-check\" onClick={copyChannelsBackup}></i>\n              )}\n              {!copied && (\n                <i className=\"fas fa-copy\" onClick={copyChannelsBackup}></i>\n              )}\n            </div>\n          )}\n          {!channelsBackup && <h3>backup not available on this node</h3>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Backups);\n"],"sourceRoot":""}