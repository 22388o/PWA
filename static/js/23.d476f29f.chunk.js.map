{"version":3,"sources":["images/bitcoin-lightning.svg","../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js","../node_modules/use-latest/dist/use-latest.esm.js","../node_modules/lodash/debounce.js","../node_modules/lodash/now.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/isSymbol.js","../node_modules/use-composed-ref/dist/use-composed-ref.esm.js","../node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.esm.js","../../src/observers.ts","../../src/InView.tsx","pages/Chat/components/ChatMessage/index.js","../../src/useInView.tsx","pages/Chat/index.js"],"names":["index","useLayoutEffect","useLatest","value","ref","useRef","useIsomorphicLayoutEffect","current","isObject","require","now","toNumber","nativeMax","Math","max","nativeMin","min","module","exports","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","cancel","flush","root","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","test","slice","trimmedEndIndex","reTrimStart","string","replace","reWhitespace","length","charAt","baseGetTag","isObjectLike","updateRef","useComposedRef","libRef","userRef","prevUserRef","useCallback","instance","HIDDEN_TEXTAREA_STYLE","height","visibility","overflow","position","top","right","forceHiddenStyles","node","Object","keys","forEach","key","style","setProperty","hiddenTextarea","noop","SIZING_STYLE","isIE","document","documentElement","currentStyle","TextareaAutosize","_ref","cacheMeasurements","maxRows","minRows","_ref$onChange","onChange","_ref$onHeightChange","onHeightChange","props","_objectWithoutPropertiesLoose","isControlled","heightRef","measurementsCacheRef","resizeTextarea","nodeSizingData","window","getComputedStyle","obj","sizingStyle","reduce","acc","prop","boxSizing","width","parseFloat","borderRightWidth","borderLeftWidth","paddingRight","paddingLeft","paddingSize","paddingBottom","paddingTop","borderSize","borderBottomWidth","borderTopWidth","getSizingData","_calculateNodeHeight","sizingData","Infinity","createElement","setAttribute","parentNode","body","appendChild","_key","scrollHeight","getHeight","rowHeight","minHeight","maxHeight","calculateNodeHeight","placeholder","listener","latestListener","handler","event","addEventListener","removeEventListener","useWindowResizeListener","_extends","forwardRef","ObserverMap","RootIds","rootId","optionsToId","observe","element","callback","id","elements","observer","IntersectionObserver","entries","inView","entry","thresholds","Array","createObserver","callbacks","isPlainChildren","InView","_unobserveCb","handleNode","handleChange","componentDidUpdate","prevProps","componentWillUnmount","observeNode","threshold","rootMargin","trackVisibility","delay","unobserve","render","children","as","tag","triggerOnce","initialInView","USE_IN_VIEW_OPTS","ChatMessage","text","receivedMessage","publicKey","timestamp","onInView","Utils","onOutView","useInView","skip","React","state","setState","setRef","useEffect","className","classNames","ShockAvatar","Pad","amt","insideRow","normalizedTimestamp","Common","dateTxt","DateTime","fromMillis","toLocaleString","TIME_SIMPLE","gStyles","e","console","log","enableMapSet","ChatPage","dispatch","useDispatch","recipientPublicKey","useParams","user","Store","useState","message","setMessage","shouldShowDateBubble","setShouldShowDateBubble","headerHeight","setHeaderHeight","chatDateBubbleContainerStyle","useMemo","handleHeaderHeight","handleScroll","debounce","messages","chat","contact","getContact","contacts","sentRequest","sentRequests","receivedRequest","receivedRequests","gunPublicKey","pendingSentRequest","pendingReceivedRequest","handleInputChange","target","acceptRequest","acceptHandshakeRequest","submitMessage","ctrlKey","preventDefault","sendMessage","subscribeIncomingMessages","subscription","subscribeChatMessages","rifleCleanup","Set","visibleMessages","setVisibleMessages","size","sorted","from","map","find","msg","filter","x","sort","a","b","newestTimestampInView","oldestTimestampInView","handleMessageInView","produce","draft","add","handleMessageOutView","delete","contactName","displayName","MainNav","solid","pageTitle","enableBackButton","onHeight","onScroll","outgoing","newest","startOf","oldest","today","yesterday","minus","day","allMessagesThisYear","hasSame","toFormat","DATE_FULL","firstDay","lastDay","month","year","firstMonth","lastMonth","firstYear","lastYear","onClick","src","BitcoinLightning","alt","type","enterKeyHint","onKeyPress"],"mappings":"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","file":"static/js/23.d476f29f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bitcoin-lightning.2d73b74b.svg\";","import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n","import { useRef } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n\nvar useLatest = function useLatest(value) {\n  var ref = useRef(value);\n  useIsomorphicLayoutEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n};\n\nexport default useLatest;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","import { useRef, useCallback } from 'react';\n\nvar updateRef = function updateRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n    return;\n  }\n  ref.current = value;\n};\n\nvar useComposedRef = function useComposedRef(libRef, userRef) {\n  var prevUserRef = useRef();\n  return useCallback(function (instance) {\n    libRef.current = instance;\n\n    if (prevUserRef.current) {\n      updateRef(prevUserRef.current, null);\n    }\n\n    prevUserRef.current = userRef;\n\n    if (!userRef) {\n      return;\n    }\n\n    updateRef(userRef, instance);\n  }, [userRef]);\n};\n\nexport default useComposedRef;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useLayoutEffect, forwardRef, useRef, createElement } from 'react';\nimport useLatest from 'use-latest';\nimport useComposedRef from 'use-composed-ref';\n\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n//   export type CalculatedNodeHeights = [height: number, rowHeight: number];\n// https://github.com/microsoft/TypeScript/issues/28259\n\nvar hiddenTextarea = null;\n\nvar getHeight = function getHeight(node, sizingData) {\n  var height = node.scrollHeight;\n\n  if (sizingData.sizingStyle.boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    return height + sizingData.borderSize;\n  } // remove padding, since height = content\n\n\n  return height - sizingData.paddingSize;\n};\n\nfunction calculateNodeHeight(sizingData, value, minRows, maxRows) {\n  if (minRows === void 0) {\n    minRows = 1;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = Infinity;\n  }\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tab-index', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    forceHiddenStyles(hiddenTextarea);\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  var paddingSize = sizingData.paddingSize,\n      borderSize = sizingData.borderSize,\n      sizingStyle = sizingData.sizingStyle;\n  var boxSizing = sizingStyle.boxSizing;\n  Object.keys(sizingStyle).forEach(function (_key) {\n    var key = _key;\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = value;\n  var height = getHeight(hiddenTextarea, sizingData); // measure height of a textarea with a single row\n\n  hiddenTextarea.value = 'x';\n  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  var minHeight = rowHeight * minRows;\n\n  if (boxSizing === 'border-box') {\n    minHeight = minHeight + paddingSize + borderSize;\n  }\n\n  height = Math.max(minHeight, height);\n  var maxHeight = rowHeight * maxRows;\n\n  if (boxSizing === 'border-box') {\n    maxHeight = maxHeight + paddingSize + borderSize;\n  }\n\n  height = Math.min(maxHeight, height);\n  return [height, rowHeight];\n}\n\nvar noop = function noop() {};\nvar pick = function pick(props, obj) {\n  return props.reduce(function (acc, prop) {\n    acc[prop] = obj[prop];\n    return acc;\n  }, {});\n};\n\nvar SIZING_STYLE = ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'boxSizing', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop', // non-standard\n'tabSize', 'textIndent', // non-standard\n'textRendering', 'textTransform', 'width'];\nvar isIE = !!document.documentElement.currentStyle ;\n\nvar getSizingData = function getSizingData(node) {\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = pick(SIZING_STYLE, style);\n  var boxSizing = sizingStyle.boxSizing; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);\n  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);\n  return {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize\n  };\n};\n\nvar useWindowResizeListener = function useWindowResizeListener(listener) {\n  var latestListener = useLatest(listener);\n  useLayoutEffect(function () {\n    var handler = function handler(event) {\n      latestListener.current(event);\n    };\n\n    window.addEventListener('resize', handler);\n    return function () {\n      window.removeEventListener('resize', handler);\n    };\n  }, []);\n};\n\nvar TextareaAutosize = function TextareaAutosize(_ref, userRef) {\n  var cacheMeasurements = _ref.cacheMeasurements,\n      maxRows = _ref.maxRows,\n      minRows = _ref.minRows,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onHeightChange = _ref.onHeightChange,\n      onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange,\n      props = _objectWithoutPropertiesLoose(_ref, [\"cacheMeasurements\", \"maxRows\", \"minRows\", \"onChange\", \"onHeightChange\"]);\n\n  if (process.env.NODE_ENV !== 'production' && props.style) {\n    if ('maxHeight' in props.style) {\n      throw new Error('Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.');\n    }\n\n    if ('minHeight' in props.style) {\n      throw new Error('Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.');\n    }\n  }\n\n  var isControlled = props.value !== undefined;\n  var libRef = useRef(null);\n  var ref = useComposedRef(libRef, userRef);\n  var heightRef = useRef(0);\n  var measurementsCacheRef = useRef();\n\n  var resizeTextarea = function resizeTextarea() {\n    var node = libRef.current;\n    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData(node);\n\n    if (!nodeSizingData) {\n      return;\n    }\n\n    measurementsCacheRef.current = nodeSizingData;\n\n    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || 'x', minRows, maxRows),\n        height = _calculateNodeHeight[0],\n        rowHeight = _calculateNodeHeight[1];\n\n    if (heightRef.current !== height) {\n      heightRef.current = height;\n      node.style.setProperty('height', height + \"px\", 'important');\n      onHeightChange(height, {\n        rowHeight: rowHeight\n      });\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      resizeTextarea();\n    }\n\n    onChange(event);\n  };\n\n  {\n    useLayoutEffect(resizeTextarea);\n    useWindowResizeListener(resizeTextarea);\n  }\n\n  return /*#__PURE__*/createElement(\"textarea\", _extends({}, props, {\n    onChange: handleChange,\n    ref: ref\n  }));\n};\n\nvar index = /* #__PURE__ */forwardRef(TextareaAutosize);\n\nexport default index;\n","import { ObserverInstanceCallback } from './index';\n\nconst ObserverMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: Map<Element, string> = new Map();\n\nlet rootId = 0;\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root?: Element | null) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = ObserverMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    ObserverMap.set(id, instance);\n  }\n\n  return instance;\n}\n\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n) {\n  if (!element) return () => {};\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      ObserverMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observers';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n * Monitors scroll, and triggers the children function with updated props\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  static displayName = 'InView';\n  static defaultProps = {\n    threshold: 0,\n    triggerOnce: false,\n    initialInView: false,\n  };\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const { threshold, root, rootMargin, trackVisibility, delay } = this.props;\n\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay,\n    });\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      tag,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || tag || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","// @ts-check\nimport { useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\nimport * as Common from \"shock-common\";\nimport { useInView } from \"react-intersection-observer\";\n/**\n * @typedef {import('react-intersection-observer').IntersectionOptions} IntersectionOptions\n */\n\nimport Pad from \"../../../../common/Pad\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport * as gStyles from \"../../../../styles\";\nimport * as Utils from \"../../../../utils\";\n\nimport \"./css/index.css\";\n\n/** @type {IntersectionOptions} */\nconst USE_IN_VIEW_OPTS = {\n  threshold: 0.2\n};\n\nconst ChatMessage = ({\n  text = \"\",\n  receivedMessage = false,\n  publicKey = \"\",\n  timestamp,\n  onInView = Utils.EMPTY_FN,\n  onOutView = Utils.EMPTY_FN,\n  id\n}) => {\n  const { inView, ref } = useInView(USE_IN_VIEW_OPTS);\n\n  useEffect(() => {\n    if (inView) {\n      onInView(id);\n    } else {\n      onOutView(id);\n    }\n  }, [id, inView, onInView, onOutView]);\n\n  return (\n    <div\n      className={classNames({\n        \"chat-message\": true,\n        \"chat-message-received\": receivedMessage\n      })}\n      ref={ref}\n    >\n      {receivedMessage && (\n        <>\n          <ShockAvatar height={48} publicKey={publicKey} />\n\n          <Pad amt={16} insideRow />\n        </>\n      )}\n\n      <p className=\"chat-message-text\">{text}</p>\n\n      <Pad amt={8} insideRow />\n\n      {(() => {\n        try {\n          const normalizedTimestamp = Common.normalizeTimestampToMs(timestamp);\n\n          const dateTime = DateTime.fromMillis(normalizedTimestamp);\n\n          const dateTxt = dateTime.toLocaleString(DateTime.TIME_SIMPLE);\n\n          return (\n            <div className={classNames(gStyles.rowCentered)}>\n              <p className={gStyles.fontSize12}>{dateTxt}</p>\n            </div>\n          );\n        } catch (e) {\n          console.log(e);\n          return null;\n        }\n      })()}\n    </div>\n  );\n};\n\nexport default ChatMessage;\n","import * as React from 'react';\nimport { InViewHookResponse, IntersectionOptions } from './index';\nimport { useEffect } from 'react';\nimport { observe } from './observers';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const unobserve = React.useRef<Function>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n  });\n\n  const setRef = React.useCallback(\n    (node) => {\n      if (unobserve.current !== undefined) {\n        unobserve.current();\n        unobserve.current = undefined;\n      }\n\n      // Skip creating the observer\n      if (skip) return;\n\n      if (node) {\n        unobserve.current = observe(\n          node,\n          (inView, entry) => {\n            setState({ inView, entry });\n\n            if (entry.isIntersecting && triggerOnce && unobserve.current) {\n              // If it should only trigger once, unobserve the element after it's inView\n              unobserve.current();\n              unobserve.current = undefined;\n            }\n          },\n          {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay,\n          },\n        );\n      }\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      delay,\n    ],\n  );\n\n  /* eslint-disable-next-line */\n  useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n      });\n    }\n  });\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","// @ts-check\nimport { useCallback, useEffect, useState, useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport TextArea from \"react-textarea-autosize\";\nimport classNames from \"classnames\";\nimport debounce from \"lodash/debounce\";\nimport { DateTime } from \"luxon\";\nimport produce, { enableMapSet } from \"immer\";\n\nimport MainNav from \"../../common/MainNav\";\nimport ChatMessage from \"./components/ChatMessage\";\nimport {\n  acceptHandshakeRequest,\n  sendMessage,\n  subscribeChatMessages\n} from \"../../actions/ChatActions\";\nimport BitcoinLightning from \"../../images/bitcoin-lightning.svg\";\nimport \"./css/index.css\";\nimport * as Store from \"../../store\";\nimport { rifleCleanup } from \"../../utils/WebSocket\";\nimport { getContact } from \"../../utils\";\nimport * as gStyles from \"../../styles\";\n/**\n * @typedef {import('../../schema').ReceivedRequest} ReceivedRequest\n */\n\nenableMapSet();\n\n/**\n * @typedef {object} ChatPageParams\n * @prop {string} publicKey\n */\n\nconst ChatPage = () => {\n  const dispatch = useDispatch();\n  const params = /** @type {ChatPageParams} */ (useParams());\n  const { publicKey: recipientPublicKey } = params;\n  const user = Store.useSelector(Store.selectUser(recipientPublicKey));\n  const [message, setMessage] = useState(\"\");\n  /* ------------------------------------------------------------------------ */\n  // Date Bubble\n  const [shouldShowDateBubble, setShouldShowDateBubble] = useState(false);\n  const [headerHeight, setHeaderHeight] = useState(-1);\n  const chatDateBubbleContainerStyle = useMemo(\n    () => ({\n      top: headerHeight + 8 + \"px\"\n    }),\n    [headerHeight]\n  );\n\n  const handleHeaderHeight = useCallback(\n    (/** @type {number} */ height) => {\n      setHeaderHeight(height);\n    },\n    [setHeaderHeight]\n  );\n\n  const handleScroll = debounce(() => {\n    if (!shouldShowDateBubble) {\n      setShouldShowDateBubble(true);\n      setTimeout(() => {\n        setShouldShowDateBubble(false);\n      }, 1500);\n    }\n  });\n  /* ------------------------------------------------------------------------ */\n\n  const messages = Store.useSelector(\n    ({ chat }) => chat.messages[recipientPublicKey]\n  );\n  const contact = Store.useSelector(({ chat }) =>\n    getContact(chat.contacts, recipientPublicKey)\n  );\n  const sentRequest = Store.useSelector(({ chat }) =>\n    getContact(chat.sentRequests, recipientPublicKey)\n  );\n  const receivedRequest = /** @type {ReceivedRequest} */ (Store.useSelector(\n    ({ chat }) => getContact(chat.receivedRequests, recipientPublicKey)\n  ));\n  const gunPublicKey = Store.useSelector(({ node }) => node.publicKey);\n  const pendingSentRequest = !contact && sentRequest;\n  const pendingReceivedRequest = !contact && receivedRequest;\n\n  const handleInputChange = useCallback(e => {\n    setMessage(e.target.value);\n  }, []);\n\n  const acceptRequest = useCallback(() => {\n    console.log(receivedRequest);\n    if (receivedRequest) {\n      acceptHandshakeRequest(receivedRequest.id)(dispatch);\n    }\n  }, [receivedRequest, dispatch]);\n\n  const submitMessage = useCallback(\n    e => {\n      if (e.key === \"Enter\" && e.ctrlKey) {\n        setMessage(message + \"\\r\\n\");\n        return;\n      }\n\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        dispatch(\n          sendMessage({\n            message,\n            publicKey: recipientPublicKey\n          })\n        );\n        setMessage(\"\");\n        return;\n      }\n    },\n    [message, recipientPublicKey, dispatch]\n  );\n\n  const subscribeIncomingMessages = useCallback(() => {\n    const subscription = dispatch(\n      subscribeChatMessages(gunPublicKey, recipientPublicKey)\n    );\n\n    return rifleCleanup(subscription);\n  }, [dispatch, gunPublicKey, recipientPublicKey]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeIncomingMessages();\n\n    return unsubscribe;\n  }, [subscribeIncomingMessages]);\n\n  // ------------------------------------------------------------------------ //\n  // Date bubble\n\n  const [visibleMessages, setVisibleMessages] = useState(\n    /** @type {Set<string>} */ (new Set())\n  );\n\n  const [newestTimestampInView, oldestTimestampInView] = useMemo(() => {\n    if (visibleMessages.size === 0) {\n      return [DateTime.now().valueOf(), Date.now().valueOf()];\n    }\n    const sorted = Array.from(visibleMessages)\n      .map(id => messages.find(msg => msg.id === id))\n      .filter(x => !!x)\n      .sort((a, b) => b.timestamp - a.timestamp);\n    /** @type {[number|null , number|null]} */\n    const res = [sorted[0].timestamp, sorted[sorted.length - 1].timestamp];\n    return res;\n  }, [messages, visibleMessages]);\n\n  const handleMessageInView = useCallback(\n    id => {\n      setVisibleMessages(\n        produce(draft => {\n          draft.add(id);\n        })\n      );\n    },\n    [setVisibleMessages]\n  );\n  const handleMessageOutView = useCallback(\n    id => {\n      setVisibleMessages(\n        produce(draft => {\n          draft.delete(id);\n        })\n      );\n    },\n    [setVisibleMessages]\n  );\n\n  // ------------------------------------------------------------------------ //\n\n  const contactName = user.displayName;\n\n  return (\n    <div className=\"page-container\">\n      <MainNav\n        solid\n        pageTitle={contactName}\n        enableBackButton\n        onHeight={handleHeaderHeight}\n      />\n\n      <div className=\"chat-messages-container\" onScroll={handleScroll}>\n        {messages?.map(message => (\n          <ChatMessage\n            text={message.body}\n            receivedMessage={!message.outgoing}\n            publicKey={message.recipientPublicKey}\n            timestamp={message.timestamp}\n            onInView={handleMessageInView}\n            onOutView={handleMessageOutView}\n            id={message.id}\n          />\n        ))}\n      </div>\n\n      <div\n        className={classNames(\n          gStyles.horizontallyCenteredAbsolute,\n          gStyles.absoluteStickToTop,\n          gStyles.centerAlign,\n          gStyles.centerJustify\n        )}\n        style={chatDateBubbleContainerStyle}\n      >\n        <span\n          className={classNames(\n            gStyles.fontSize12,\n            \"chat-date-bubble\",\n            shouldShowDateBubble\n              ? gStyles.opacityThreeQuarters\n              : gStyles.opacityNone\n          )}\n        >\n          {(() => {\n            const newest = DateTime.fromMillis(newestTimestampInView).startOf(\n              \"day\"\n            );\n            const oldest = DateTime.fromMillis(oldestTimestampInView).startOf(\n              \"day\"\n            );\n            const today = DateTime.now().startOf(\"day\");\n            const yesterday = DateTime.now()\n              .minus({\n                day: 1\n              })\n              .startOf(\"day\");\n            const allMessagesThisYear =\n              newest.hasSame(today, \"year\") && oldest.hasSame(today, \"year\");\n\n            const allMessagesSameDay = (newest || oldest).hasSame(\n              oldest,\n              \"day\"\n            );\n            if (allMessagesSameDay) {\n              if (newest.hasSame(today, \"day\")) {\n                return \"Today\";\n              }\n              if (newest.hasSame(yesterday, \"day\")) {\n                return \"Yesterday\";\n              }\n              return allMessagesThisYear\n                ? // August 13\n                  newest.toFormat(\"LLLL d\")\n                : // August 13, 2017\n                  newest.toLocaleString(DateTime.DATE_FULL);\n            }\n\n            const allMessagesSameMonth = newest.hasSame(oldest, \"month\");\n            if (allMessagesSameMonth) {\n              const firstDay = oldest.toFormat(\"d\");\n              const lastDay = newest.toFormat(\"d\");\n              const month = (newest || oldest).toFormat(\"LLLL\");\n              if (allMessagesThisYear) {\n                // August 13 - 27\n                return `${month} ${firstDay} - ${lastDay}`;\n              }\n              const year = newest.toFormat(\"y\");\n              // August 13 - 27, 2020\n              return `${month} ${firstDay} - ${lastDay}, ${year}`;\n            }\n\n            if (allMessagesThisYear) {\n              const firstDay = oldest.toFormat(\"d\");\n              const lastDay = newest.toFormat(\"d\");\n              const firstMonth = oldest.toFormat(\"LLLL\");\n              const lastMonth = newest.toFormat(\"LLLL\");\n              // January 12 - February 14\n              return `${firstMonth} ${firstDay} - ${lastMonth} ${lastDay}`;\n            }\n\n            const firstDay = oldest.toFormat(\"d\");\n            const lastDay = newest.toFormat(\"d\");\n            const firstMonth = oldest.toFormat(\"LLLL\");\n            const lastMonth = newest.toFormat(\"LLLL\");\n            const firstYear = oldest.toFormat(\"y\");\n            const lastYear = newest.toFormat(\"y\");\n            // December 27, 2020 - January 2, 2021\n            return `${firstMonth} ${firstDay}, ${firstYear} - ${lastMonth} ${lastDay}, ${lastYear}`;\n          })()}\n        </span>\n      </div>\n\n      {pendingReceivedRequest ? (\n        <div className=\"chat-permission-bar\">\n          <p className=\"chat-permission-bar-title unselectable\">\n            {contactName} has sent you a chat request!\n          </p>\n          <p className=\"chat-permission-bar-text\">\n            Once you accept the request, you'll be able to chat and send\n            invoices to {contactName}\n          </p>\n          <div className=\"chat-permission-bar-actions unselectable\">\n            <div\n              className=\"chat-permission-bar-action chat-permission-bar-action-accept\"\n              onClick={acceptRequest}\n            >\n              Accept\n            </div>\n            <div className=\"chat-permission-bar-action chat-permission-bar-action-decline\">\n              Decline\n            </div>\n          </div>\n        </div>\n      ) : pendingSentRequest ? (\n        <div className=\"chat-permission-bar\">\n          <p className=\"chat-permission-bar-title\">\n            Your request has been sent to {contactName} successfully\n          </p>\n          <p className=\"chat-permission-bar-text unselectable\">\n            Once {contactName} accepts the request, you'll be able to chat with\n            them\n          </p>\n        </div>\n      ) : (\n        <div className=\"chat-bottom-bar\">\n          <div className=\"chat-input-container\">\n            <div className=\"chat-input-btn unselectable\">\n              <img src={BitcoinLightning} alt=\"Menu\" />\n            </div>\n            <TextArea\n              className=\"chat-input\"\n              // @ts-expect-error\n              type=\"text\"\n              enterKeyHint=\"send\"\n              onKeyPress={submitMessage}\n              onChange={handleInputChange}\n              value={message}\n              height={20}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"sourceRoot":""}