{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/MainNav/index.js","common/BottomBar/index.js","common/AddBtn/index.js","utils/Platform.ts","common/QRCodeScanner/index.tsx","pages/Messages/components/common.ts","pages/Messages/components/Message/index.js","pages/Messages/components/Request/index.js","pages/Messages/index.js"],"names":["ModalContent","children","style","contentClass","className","classNames","ModalTitle","title","toggleModal","Utils","forceRenderTitleBar","hideXBtn","onClick","Modal","modalOpen","modalTitle","contentStyle","disableBackdropClose","noFullWidth","blueBtn","disableBlueBtn","onClickBlueBtn","redBtn","disableRedBtn","onClickRedBtn","error","textIfLoading","closeModal","useCallback","handleBackdropClick","modal","open","container","Loader","overlay","OVERLAY_STYLE","text","disabled","borderRadius","memo","MainNav","pageTitle","absolute","solid","enableBackButton","onHeight","dispatch","useDispatch","goBack","window","history","back","openDrawer","gunPublicKey","useSelector","node","publicKey","divRefCb","el","getBoundingClientRect","height","e","console","log","ref","BottomBar","authToken","to","activeClassName","AddBtn","label","icon","iconURL","undefined","nestedMode","large","small","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","isDesktop","navigator","userAgent","match","modeContents","wizard","target","description","invoice","QRCodeScanner","mode","onScan","onError","onClose","content","videoConstrain","facingMode","exact","constraints","video","AVATAR_CONTAINER_STYLE","AVATAR_SIZE","width","Message","id","Store","convo","convoMessages","latestMsg","slice","sort","a","b","timestamp","length","user","with","subtitle","body","Common","state","React","useEffect","subConvoMessages","ShockAvatar","processDisplayName","displayName","Date","now","Request","time","sent","MessagesPage","addModalOpen","setAddModalOpen","sendError","setSendError","sendRequestLoading","setSendRequestLoading","convos","sentRequests","receivedRequests","scanQR","setScanQR","currentHandshakeAddress","sub","subCurrentHandshakeAddress","then","off","subHandshakeNode","subscription","subConvos","subscriptions","map","subscribeUserProfile","push","req","from","unsubscribe","sendRequest","input","shockUser","startsWith","splitted","split","pk","FieldError","field","message","test","sendHandshakeRequest","errMsg","sendRequestClipboard","clipboard","readText","clipboardText","alert","openQR","closeQR","scanErr","scanDone","request"],"mappings":"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","file":"static/js/18.d5fd26f5.chunk.js","sourcesContent":["import classNames from \"classnames\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children = null, style = {}, contentClass = \"\" }) => (\n  <div className={classNames(\"content\", contentClass)} style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import * as Utils from \"../../../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({\n  title = \"\",\n  toggleModal = Utils.EMPTY_FN,\n  forceRenderTitleBar = false,\n  hideXBtn = false\n}) =>\n  title || forceRenderTitleBar ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      {!hideXBtn && (\n        <div className=\"head-close\" onClick={toggleModal}>\n          <i className=\"fas fa-times\"></i>\n        </div>\n      )}\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","import { memo, useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\nimport Loader from \"../../common/Loader\";\n\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\n\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = Utils.EMPTY_OBJ,\n  disableBackdropClose = false,\n  forceRenderTitleBar = false,\n  hideXBtn = false,\n  noFullWidth = false,\n  blueBtn = \"\",\n  disableBlueBtn = false,\n  onClickBlueBtn = Utils.EMPTY_FN,\n  redBtn = \"\",\n  disableRedBtn = false,\n  onClickRedBtn = Utils.EMPTY_FN,\n  contentClass = \"\",\n  error = \"\",\n  textIfLoading = \"\"\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  const handleBackdropClick = useCallback(() => {\n    if (!disableBackdropClose) {\n      toggleModal();\n    }\n  }, [disableBackdropClose, toggleModal]);\n  return (\n    <div className={classNames({ modal: true, open: modalOpen })}>\n      <div className=\"backdrop\" onClick={handleBackdropClick} />\n      <div\n        className={classNames({\n          container: true,\n          \"container-no-full-width\": noFullWidth\n        })}\n      >\n        {textIfLoading && (\n          <Loader overlay style={OVERLAY_STYLE} text={textIfLoading} />\n        )}\n\n        <ModalTitle\n          title={modalTitle}\n          toggleModal={closeModal}\n          forceRenderTitleBar={forceRenderTitleBar}\n          hideXBtn={hideXBtn}\n        />\n\n        {error && <div className={\"form-error form-error-margin\"}>{error}</div>}\n\n        <ModalContent style={contentStyle} contentClass={contentClass}>\n          {typeof children === \"string\" ? (\n            <p className=\"text-align-center\">{children}</p>\n          ) : (\n            children\n          )}\n        </ModalContent>\n\n        <div className=\"color-buttons\">\n          {blueBtn && (\n            <button\n              disabled={disableBlueBtn}\n              className={classNames(\"color-btn\", \"blue-btn\")}\n              onClick={onClickBlueBtn}\n            >\n              {blueBtn}\n            </button>\n          )}\n\n          {redBtn && (\n            <button\n              disabled={disableRedBtn}\n              className={classNames(\"color-btn\", \"red-btn\")}\n              onClick={onClickRedBtn}\n            >\n              {redBtn}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst OVERLAY_STYLE = {\n  borderRadius: \"15px\"\n};\n\nexport default memo(Modal);\n","// @ts-check\nimport { memo, useCallback } from \"react\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as Utils from \"../../utils\";\nimport { openDrawer } from \"../../actions/DrawerActions\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport { useSelector } from \"../../store\";\n\nconst MainNav = ({\n  pageTitle,\n  absolute = false,\n  solid = false,\n  enableBackButton = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const dispatch = useDispatch();\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  const open = useCallback(() => {\n    dispatch(openDrawer());\n  }, [dispatch]);\n\n  const gunPublicKey = useSelector(({ node }) => node.publicKey);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in MainNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className={classNames({\n        \"main-nav-container\": true,\n        \"main-nav-absolute\": absolute,\n        \"main-nav-solid\": solid\n      })}\n      ref={divRefCb}\n    >\n      {enableBackButton ? (\n        <div className=\"main-nav-back\" onClick={goBack}>\n          <i className=\"icon icon-thin-back\"></i>\n        </div>\n      ) : (\n        <ShockAvatar height={40} publicKey={gunPublicKey} />\n      )}\n      <p className=\"main-nav-title unselectable\">{pageTitle}</p>\n      <div className=\"main-nav-menu-btn\" onClick={open}>\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MainNav);\n","import { memo } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"../../store\";\n\nconst BottomBar = () => {\n  const authenticated = useSelector(({ node }) => node.authToken);\n\n  if (!authenticated) {\n    return null;\n  }\n\n  return (\n    <div className=\"bottom-nav-container\">\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/overview\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n      </NavLink>\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/chat\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n      </NavLink>\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/profile\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n      </NavLink>\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/feed\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default memo(BottomBar);\n","import { memo, useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default memo(AddBtn);\n","export const isMobile = (): boolean =>\n  !!navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n\nexport const isDesktop = (): boolean => (!isMobile() ? true : false);\n","import { memo } from \"react\";\nimport QRScanner from \"react-qr-scanner\";\nimport { isDesktop } from \"../../utils/Platform\";\nimport \"./css/index.scoped.css\";\n\ntype ScannerMode = \"wizard\" | \"invoice\";\ninterface Props {\n  mode: ScannerMode;\n  onScan: (result: string | null) => void;\n  onError: (error: Error) => void;\n  onClose: () => void;\n}\n\nconst modeContents = {\n  wizard: {\n    title: \"SCAN A\",\n    target: \"QR CODE\",\n    description: \"Point your camera at a ShockWizard QR Code\"\n  },\n  invoice: {\n    title: \"SCAN AN\",\n    target: \"INVOICE\",\n    description: \"Point your camera at an LND Invoice\"\n  }\n};\n\nconst QRCodeScanner = ({\n  mode = \"wizard\",\n  onScan,\n  onError,\n  onClose\n}: Props) => {\n  const content = modeContents[mode];\n  const videoConstrain: { facingMode? } = {};\n  if (!isDesktop()) {\n    videoConstrain.facingMode = { exact: \"environment\" };\n  }\n\n  return (\n    <div className=\"qr-code-scanner-container\">\n      <div className=\"qr-scanner-top-section\">\n        <i className=\"fas fa-times\" onClick={onClose}></i>\n      </div>\n\n      <QRScanner\n        constraints={{\n          video: videoConstrain\n        }}\n        onScan={onScan}\n        onError={onError}\n      />\n\n      <div className=\"qr-scanner-target\" />\n      <div className=\"qr-scanner-bottom-section\">\n        <p className=\"qr-scanner-bottom-title\">\n          {content.title}{\" \"}\n          <span className=\"qr-scanner-bottom-title-highlight\">\n            {content.target}\n          </span>\n        </p>\n        <p className=\"qr-scanner-bottom-description\">{content.description}</p>\n        <div className=\"qr-scanner-btn\" onClick={onClose}>\n          Cancel Scan\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(QRCodeScanner);\n","import { CSSProperties } from \"react\";\n\nexport const AVATAR_SIZE = 55;\n\nexport const AVATAR_CONTAINER_STYLE: CSSProperties = {\n  height: AVATAR_SIZE + \"px\",\n  width: AVATAR_SIZE + \"px\"\n};\n","import React, { memo } from \"react\";\nimport * as Common from \"shock-common\";\nimport { Link } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport { AVATAR_CONTAINER_STYLE, AVATAR_SIZE } from \"../common\";\nimport { processDisplayName } from \"../../../../utils/String\";\nimport { subConvoMessages } from \"../../../../actions/ChatActions\";\n\nimport \"./css/index.scoped.css\";\n\n/**\n * @typedef {object} Props\n * @prop {string} id\n */\n\n/**\n * @type {React.FC<Props>}\n */\nconst Message = ({ id }) => {\n  const dispatch = Store.useDispatch();\n  const convo = Store.useSelector(Store.selectSingleConvo(id));\n  const convoMessages = Store.useSelector(Store.selectConvoMessages(id));\n  /** @type {import('../../../../schema').ConvoMsg | undefined} */\n  const latestMsg = convoMessages\n    .slice()\n    .sort((a, b) => a.timestamp - b.timestamp)[convoMessages.length - 1];\n  const user = Store.useSelector(Store.selectUser(convo.with));\n  const subtitle = (() => {\n    if (convoMessages.length === 0 || latestMsg?.body === Common.INITIAL_MSG) {\n      return \"No messages yet\";\n    }\n    if (latestMsg?.state === \"received\") {\n      return \"> \" + latestMsg.body;\n    }\n    return latestMsg.body;\n  })();\n\n  React.useEffect(() => dispatch(subConvoMessages(id)), [dispatch, id]);\n\n  return (\n    <Link to={`/chat/${id}`} className=\"container\">\n      <div className=\"author-container\">\n        <div className=\"author-avatar\" style={AVATAR_CONTAINER_STYLE}>\n          <ShockAvatar publicKey={convo.with} height={AVATAR_SIZE} />\n        </div>\n\n        <div className=\"author-details\">\n          <p className=\"author-username\">\n            {processDisplayName(user.publicKey, user.displayName)}\n          </p>\n          <p className=\"author-text\">{subtitle}</p>\n        </div>\n      </div>\n      <p className=\"timestamp\">\n        {Utils.formatTimestamp(latestMsg?.timestamp || Date.now())}\n      </p>\n    </Link>\n  );\n};\n\nexport default memo(Message);\n","// @ts-check\nimport { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport { AVATAR_CONTAINER_STYLE, AVATAR_SIZE } from \"../common\";\n\nimport \"./css/index.scoped.css\";\n\nconst Request = ({ publicKey = \"\", time, sent, id }) => {\n  const user = Store.useSelector(Store.selectUser(publicKey));\n\n  return (\n    <Link to={`/chat/${id}`} className=\"request-container\">\n      <div className=\"request-author-container\">\n        <div className=\"request-author-avatar\" style={AVATAR_CONTAINER_STYLE}>\n          <ShockAvatar publicKey={publicKey} height={AVATAR_SIZE} />\n        </div>\n        <div className=\"request-author-details\">\n          <p className=\"request-author-username\">\n            {sent ? \"Sent Request\" : \"Received Request\"} - {user.displayName}\n          </p>\n          <p className=\"request-author-text\">Request pending acceptance...</p>\n        </div>\n      </div>\n      <p className=\"request-timestamp\">{time}</p>\n    </Link>\n  );\n};\n\nexport default memo(Request);\n","import React, { memo, useCallback, useEffect, useState } from \"react\";\n\nimport {\n  sendHandshakeRequest,\n  subCurrentHandshakeAddress,\n  subHandshakeNode,\n  subConvos\n} from \"../../actions/ChatActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport BottomBar from \"../../common/BottomBar\";\nimport Message from \"./components/Message\";\nimport Request from \"./components/Request\";\nimport MainNav from \"../../common/MainNav\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Loader from \"../../common/Loader\";\nimport FieldError from \"../../utils/FieldError\";\nimport \"./css/index.scoped.css\";\nimport Modal from \"../../common/Modal\";\nimport * as Store from \"../../store\";\nimport QRCodeScanner from \"../../common/QRCodeScanner\";\nimport * as Utils from \"../../utils\";\n\nconst MessagesPage = () => {\n  const dispatch = Utils.useDispatch();\n  const [addModalOpen, setAddModalOpen] = useState(false);\n  const [sendError, setSendError] = useState(\"\");\n  const [sendRequestLoading, setSendRequestLoading] = useState(false);\n  const convos = Store.useSelector(Store.selectConvos);\n  const sentRequests = Utils.EMPTY_ARR;\n  const receivedRequests = Store.useSelector(Store.selectReceivedRequests);\n  const [scanQR, setScanQR] = useState(false);\n  const currentHandshakeAddress = Store.useSelector(\n    Store.selectCurrentHandshakeAddress\n  );\n\n  useEffect(() => {\n    const sub = dispatch(subCurrentHandshakeAddress());\n\n    return () => {\n      sub.then(sub => sub.off());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    const sub = dispatch(subHandshakeNode(currentHandshakeAddress));\n\n    return () => {\n      sub.then(sub => sub.off());\n    };\n  }, [currentHandshakeAddress, dispatch]);\n\n  useEffect(() => {\n    const subscription = dispatch(subConvos());\n\n    return () => {\n      subscription.then(sub => sub.off());\n    };\n  });\n\n  useEffect(() => {\n    const subscriptions = convos.map(convo =>\n      dispatch(subscribeUserProfile(convo.with))\n    );\n\n    subscriptions.push(\n      ...receivedRequests.map(req => dispatch(subscribeUserProfile(req.from)))\n    );\n\n    return () => {\n      subscriptions.map(unsubscribe => unsubscribe());\n    };\n  }, [convos, dispatch, receivedRequests]);\n\n  const toggleModal = useCallback(() => {\n    setAddModalOpen(!addModalOpen);\n  }, [addModalOpen]);\n\n  const sanitizePublicKey = publicKey => {\n    if (publicKey.startsWith(\"http\")) {\n      const parts = publicKey.split(\"/\");\n      return parts.slice(-1)[0];\n    }\n\n    return publicKey;\n  };\n\n  const sendRequest = useCallback(\n    async input => {\n      if (!input) {\n        return;\n      }\n      try {\n        let shockUser = input;\n        if (input.startsWith(\"https://\")) {\n          const splitted = input.split(\"/\");\n          shockUser = splitted[splitted.length - 1];\n        }\n        setSendError(null);\n        setSendRequestLoading(true);\n        const pk = sanitizePublicKey(shockUser);\n\n        if (!pk?.length) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Please specify a public key\"\n          });\n        }\n\n        if (!/^[0-9A-Za-z\\-_.+/]+[=]{0,3}/.test(pk)) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Invalid public key format specified\"\n          });\n        }\n\n        await dispatch(sendHandshakeRequest(shockUser));\n\n        setAddModalOpen(false);\n      } catch (err) {\n        const errMsg =\n          err instanceof FieldError\n            ? err.message\n            : \"An unknown error has occurred\";\n\n        console.error(err);\n\n        setSendError(errMsg);\n      } finally {\n        setSendRequestLoading(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const sendRequestClipboard = useCallback(async () => {\n    try {\n      const clipboardText = await navigator.clipboard.readText();\n      return sendRequest(clipboardText);\n    } catch (e) {\n      alert(e.message);\n    }\n  }, [sendRequest]);\n\n  const openQR = useCallback(() => {\n    setScanQR(true);\n  }, [setScanQR]);\n\n  const closeQR = useCallback(() => {\n    setScanQR(false);\n  }, [setScanQR]);\n\n  const scanErr = useCallback(\n    e => {\n      console.log(e);\n      setSendError(e.message);\n    },\n    [setSendError]\n  );\n\n  const scanDone = useCallback(\n    content => {\n      if (!content || !content.text) {\n        return;\n      }\n      sendRequest(content.text);\n      setScanQR(false);\n      console.log(content.text);\n    },\n    [sendRequest, setScanQR]\n  );\n\n  if (scanQR) {\n    return (\n      <div>\n        <QRCodeScanner\n          mode=\"invoice\"\n          onClose={closeQR}\n          onError={scanErr}\n          onScan={scanDone}\n        />\n      </div>\n    );\n  }\n  console.log(sendError);\n  return (\n    <div className=\"page-container messages-page\">\n      <MainNav solid pageTitle=\"MESSAGES\" />\n      <div className=\"messages-container\">\n        <div className=\"message-list-container no-scrollbar\">\n          {sentRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Sent Requests</p>\n          ) : null}\n          {sentRequests.map(request => (\n            <Request\n              publicKey={request.pk}\n              sent\n              key={request.id}\n              time={undefined}\n              id={request.id}\n            />\n          ))}\n          {receivedRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Received Requests</p>\n          ) : null}\n          {receivedRequests.map(request => (\n            <Request\n              publicKey={request.from}\n              key={request.id}\n              sent={false}\n              time={undefined}\n              id={request.id}\n            />\n          ))}\n          {convos.length > 0 ? (\n            <p className=\"messages-section-title\">Messages</p>\n          ) : null}\n          {convos.map(convo => {\n            return <Message key={convo.id} id={convo.id} />;\n          })}\n        </div>\n        <AddBtn onClick={toggleModal} label=\"REQUEST\" />\n        {/* TODO: Extract to a separate component */}\n\n        {addModalOpen && (\n          <Modal\n            modalTitle=\"SEND REQUEST\"\n            toggleModal={toggleModal}\n            modalOpen={addModalOpen}\n          >\n            {sendRequestLoading ? (\n              <Loader\n                text=\"Sending Request...\"\n                overlay\n                style={{\n                  borderRadius: \"0 0 15px 15px\"\n                }}\n              />\n            ) : null}\n            {sendError ? (\n              <div className=\"send-request-error\">{sendError}</div>\n            ) : null}\n            <div className=\"send-request-cards\">\n              <div className=\"send-request-card\" onClick={openQR}>\n                <i className=\"send-request-card-icon fas fa-qrcode\" />\n                <p className=\"send-request-card-title\">SCAN QR</p>\n                <p className=\"send-request-card-desc\">\n                  Scan another users QR to send a message request.\n                </p>\n              </div>\n              <div className=\"send-request-card\" onClick={sendRequestClipboard}>\n                <i className=\"send-request-card-icon fas fa-clipboard\" />\n                <p className=\"send-request-card-title\">PASTE CLIPBOARD</p>\n                <p className=\"send-request-card-desc\">\n                  Paste another users Public Key to send a message request.\n                </p>\n              </div>\n            </div>\n          </Modal>\n        )}\n      </div>\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default memo(MessagesPage);\n"],"sourceRoot":""}