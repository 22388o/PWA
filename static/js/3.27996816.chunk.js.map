{"version":3,"sources":["common/Post/components/TipRibbon/index.js","common/Post/components/Stream/index.tsx","common/Post/components/Video/index.js","common/Post/components/Image/index.js","common/Post/index.js","images/av1.jpg","common/Post/SharedPost.js"],"names":["TipRibbon","tipCounter","tipValue","zoomed","className","style","opacity","Stream","id","item","index","postId","hideRibbon","width","playerDOM","timeout","useRef","useState","isLive","videoStyle","liveStatus","useEffect","player","videojs","current","autoplay","muted","aspectRatio","src","magnetURI","type","play","console","log","cursor","display","ref","preload","controls","autoPlay","Video","contentURL","decodeURIComponent","replace","data-torrent","data-file-key","data-played","Image","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","useCallback","value","clearTimeout","timer","setTimeout","mainImageStyle","Controlled","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","alt","onLoad","Post","timestamp","avatar","publicKey","openTipModal","openUnlockModal","contentItems","username","openDeleteModal","undefined","unlockedContent","Store","content","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","isOwn","isOnlineNode","getMediaContent","Object","entries","filter","forEach","k","e","path","parseContent","key","text","finalItem","cached","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","on","scrollSnapList","length","window","addEventListener","removeEventListener","off","tipPost","targetType","postID","unlockPost","deletePost","shared","Tooltip","rebuild","to","borderWidth","borderStyle","borderColor","backgroundImage","DateTime","fromMillis","toRelative","onClick","map","Array","from","_","classNames","scrollTo","data-tip","SharedPost","sharerProfile","originalPostProfile","origPost","originalPost","sharedTimestamp","postPublicKey","loadPostMedia","a","attachMedia","useLayoutEffect","selfPublicKey","isAppOnline","Common","lastSeenApp","displayName","date","av1","alias","Loader"],"mappings":"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","file":"static/js/3.27996816.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst REACT_APP_SL_SEED_URI = \"https://webtorrent.shock.network\";\nconst STREAM_STATUS_URI = `${REACT_APP_SL_SEED_URI}/rtmpapi/api/streams/live`;\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const {liveStatus} = item\n  useEffect(() =>{\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  },[item])\n  useEffect(()=>{\n    console.log(\"status:\",liveStatus)\n  },[item])\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {!isLive && liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!isLive && !liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","import React from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\n\nconst Video = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width\n}) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = {};\n  if (width) {\n    videoStyle.width = width;\n  }\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n        {!hideRibbon && (\n          <TipRibbon tipCounter={tipCounter} tipValue={tipValue} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.scoped.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width\n}) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [\n      animationTimer,\n      zoomLoaded,\n      setZoomed,\n      setZoomLoaded,\n      setPreviewVisible,\n      setAnimationTimer\n    ]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { opacity: previewVisible ? 1 : 0 };\n  if (width) {\n    mainImageStyle.width = width;\n  }\n\n  return (\n    <div className=\"media-container\">\n      <ControlledZoom\n        isZoomed={zoomed}\n        onZoomChange={handleZoomChange}\n        overlayBgColorStart=\"#16191c00\"\n        overlayBgColorEnd=\"#16191c\"\n      >\n        <img\n          className={`image torrent-img torrent-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          style={mainImageStyle}\n          src={contentURL}\n        />\n        <img\n          className={`image enlarged-img enlarged-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-file-key={index}\n          onLoad={() => {\n            setZoomLoaded(true);\n          }}\n          style={{\n            opacity: zoomed ? 1 : 0,\n            display: zoomed ? \"block\" : \"none\"\n          }}\n          src={contentURL}\n        />\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={zoomed}\n          />\n        )}\n      </ControlledZoom>\n    </div>\n  );\n};\n\nexport default Image;\n","// @ts-check\nimport { useEffect, useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../store\";\nimport * as Utils from \"../../utils\";\n\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport \"./css/index.scoped.css\";\n\nconst Post = ({\n  id,\n  timestamp,\n  avatar,\n  tipCounter,\n  tipValue,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  contentItems = {},\n  username,\n  openDeleteModal = undefined\n}) => {\n  const unlockedContent = Store.useSelector(\n    ({ content }) => content.unlockedContent\n  );\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n\n  const selfPublicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const isOwn = selfPublicKey === publicKey;\n\n  const isOnlineNode = /*Utils.isOnline(\n    Store.useSelector(Store.selectUser(publicKey)).lastSeenApp\n  );*/ true;\n\n  const getMediaContent = useCallback(() => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  }, [contentItems]);\n\n  const getTextContent = () => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(() => {\n    getMediaContent().forEach(([k, e]) => {\n      const path = `${publicKey}>posts>${k}`;\n      if (e.isPrivate && !unlockedContent[path]) {\n        setIsPrivate(true);\n      }\n    });\n  }, [contentItems, getMediaContent, publicKey, unlockedContent]);\n\n  const parseContent = ([key, item], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n    const finalItem = item;\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`;\n      const cached = unlockedContent[path];\n      if (cached) {\n        finalItem.magnetURI = cached;\n      } else {\n        return (\n          <div>\n            <i className=\"fas fa-lock fa-10x\"></i>\n          </div>\n        );\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n    if (item.type === \"stream/embedded\") {\n      return (\n        <Stream\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  // useEffect(() => {\n  //   attachMedia();\n  // }, [contentItems.length]);\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id, shared: false });\n  }, [id, openDeleteModal]);\n\n  useEffect(() => {\n    try {\n      Tooltip.rebuild();\n    } catch (e) {\n      console.log(`Error inside <Post />: `, e);\n    }\n  }, []);\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <Link\n            className=\"av\"\n            to={isOwn ? `/profile` : `/otherUser/${publicKey}`}\n            style={{\n              borderWidth: isOnlineNode && !isOwn ? 2 : undefined,\n              borderStyle: isOnlineNode && !isOwn ? \"solid\" : undefined,\n              borderColor: isOnlineNode && !isOwn ? \"#39B54A\" : undefined,\n              backgroundImage: `url(${avatar})`\n            }}\n          />\n          <div className=\"details\">\n            <Link to={`/otherUser/${publicKey}`}>{username}</Link>\n            <p>\n              {timestamp && typeof timestamp === \"number\"\n                ? DateTime.fromMillis(timestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    // TODO: Get the actual ID here. However posts can't be\n                    // edited so index is stable.\n                    key={key}\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","export default __webpack_public_path__ + \"static/media/av1.e1539bb2.jpg\";","// @ts-check\nimport { useCallback, useLayoutEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"react-tooltip\";\nimport * as Common from \"shock-common\";\n\nimport Post from \".\";\n\nimport av1 from \"../../images/av1.jpg\";\nimport \"../Post/css/index.scoped.css\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport Loader from \"../Loader\";\nimport * as Store from \"../../store\";\nimport * as Utils from \"../../utils\";\n/**\n * @typedef {import('../../schema').Post} Post\n */\n\nconst SharedPost = ({\n  sharerProfile,\n  originalPostProfile,\n  originalPost: origPost,\n  sharedTimestamp,\n  postPublicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = undefined\n}) => {\n  /** @type {Post|undefined} */\n  const originalPost = origPost;\n  const loadPostMedia = useCallback(async () => {\n    if (originalPost) {\n      attachMedia([originalPost], false);\n    }\n  }, [originalPost]);\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id: originalPost.id, shared: true });\n  }, [originalPost, openDeleteModal]);\n\n  useLayoutEffect(() => {\n    Tooltip.rebuild();\n    loadPostMedia();\n  }, [loadPostMedia]);\n\n  const selfPublicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const isOwn = sharerProfile.publicKey === selfPublicKey;\n  const isAppOnline = Common.isAppOnline(\n    Store.useSelector(Store.selectUser(sharerProfile.publicKey)).lastSeenApp\n  );\n\n  return (\n    <div className=\"post shared-post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <Link\n            to={isOwn ? `/profile` : `/otherUser/${sharerProfile.publicKey}`}\n            className=\"av\"\n            style={{\n              borderWidth: isAppOnline && !isOwn ? 2 : undefined,\n              borderStyle: isAppOnline && !isOwn ? \"solid\" : undefined,\n              borderColor: isAppOnline && !isOwn ? \"#39B54A\" : undefined,\n              backgroundImage: `url(data:image/jpeg;base64,${sharerProfile?.avatar})`\n            }}\n          ></Link>\n          <div className=\"details\">\n            <p>{sharerProfile?.displayName}</p>\n            <p>\n              {sharedTimestamp && typeof sharedTimestamp === \"number\"\n                ? DateTime.fromMillis(sharedTimestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"shared-content\">\n        {originalPost && originalPostProfile ? (\n          <Post\n            id={originalPost.id}\n            timestamp={originalPost.date}\n            avatar={\n              originalPostProfile.avatar\n                ? `data:image/jpeg;base64,${originalPostProfile.avatar}`\n                : av1\n            }\n            // @ts-expect-error tipCounter not wired right now I think\n            tipCounter={originalPost.tipCounter || 0}\n            // @ts-expect-error tipValue ??\n            tipValue={originalPost.tipValue || 0}\n            publicKey={postPublicKey}\n            openTipModal={openTipModal}\n            openUnlockModal={openUnlockModal}\n            contentItems={originalPost.contentItems ?? {}}\n            username={\n              originalPostProfile.displayName ?? originalPostProfile.alias\n            }\n          />\n        ) : (\n          <Loader text=\"Loading Post...\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SharedPost;\n"],"sourceRoot":""}