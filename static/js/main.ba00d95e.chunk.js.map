{"version":3,"sources":["actions/OrdersActions.js","utils/Http.js","common/Loader/index.js","actions/AuthActions.ts","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.js","reducers/DrawerReducer.js","reducers/ContentReducer.js","reducers/FeesReducer.js","reducers/FeedReducer.js","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/index.ts","actions/FeedActions.js","utils/WebSocket.js","actions/ChatActions.js","utils/JSON.ts","utils/Encryption.ts","actions/WalletActions.js","actions/UserProfilesActions.ts","actions/ContentActions.js","common/Drawer/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js","actions/NodeActions.js","utils/FieldError.ts","schema/index.ts","utils/Date.ts","utils/index.ts","utils/Error.ts","actions/EncryptionActions.js","actions/DrawerActions.js","actions/FeesActions.js","utils/Gun.js","utils/String.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","serviceID","dispatch","a","id","Http","post","path","value","data","ok","newID","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","hostIP","query","rifleSocketExists","rifle","host","publicKey","reconnect","on","services","servicesEntries","forEach","get","service","type","serviceInfo","disconnectRifleSocket","buyService","owner","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","store","hostKeys","getState","encryption","hostId","node","remotePublicKey","warn","Encryption","message","stringify","encryptedMessage","decryptResponse","userKeys","localPrivateKey","privateKey","decryptedMessage","interceptors","request","use","authToken","deviceId","localRequest","url","indexOf","headers","common","Authorization","method","toUpperCase","includes","error","reject","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","window","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","RESET_AUTH_INFO","SET_AUTH_STEP","SET_AUTHENTICATED","SET_AUTH_METHOD","LOGOUT","setAuthenticated","status","setAuthStep","step","setAuthMethod","logout","INITIAL_STATE","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","SET_ATTEMPTS_DONE","AUTH_ACTIONS","authenticated","authStep","userSessionKey","APISessionKey","defaultSteps","manual","shockWizard","shockCloud","auth","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","_getUnifiedTransactionDate","item","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","filter","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","sort","b","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","contacts","messages","sentRequests","receivedRequests","requestBlacklist","_identicalMessages","oldMessage","newMessage","localId","_sortMessages","timestamp","_processNewMessage","outgoing","userMessages","recipientPublicKey","existingMessage","body","sortedMessages","chat","LOAD_CHAT_DATA","LOAD_SENT_REQUESTS","requestPublicKeys","pk","pendingRequests","loading","LOAD_RECEIVED_REQUESTS","SENT_REQUEST","avatar","changedAddress","displayName","Date","now","ACCEPT_HANDSHAKE_REQUEST","requestId","DECLINE_HANDSHAKE_REQUEST","trim","SENDING_MESSAGE","Schema","SENDING","SENT_MESSAGE","SENT","FAILED_MESSAGE","FAILED","RECEIVED_MESSAGE","RECEIVED","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","publishedContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","SET_SEED_PROVIDER_PUB","ADD_PUBLISHED_CONTENT","res","contentTmp","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","userToken","availableTmp","push","REMOVE_USED_TOKEN","index","splice","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","user","private","posts","feed","RESET_FOLLOWS","ADD_FOLLOW","existingFollow","find","follow","REMOVE_FOLLOW","UPDATE_FOLLOW","key","profile","ADD_USER_POST","authorId","userPosts","existingPost","DELETE_USER_POST","LOAD_POSTS","LOAD_SHARED_POST","sharerId","updatedPosts","originalPost","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","NODE_ACTIONS","Common","RESET_USER_PROFILES","LOAD_USER_PROFILE","REMOVE_USER_PROFILE","profiles","UPDATE_USER_PROFILE","newProfile","oldProfile","CHAT_ACTIONS","produce","draft","c","req","myServices","boughtServices","orders","tmp","servicesTmp","selectedService","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","users","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectFollows","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","debug","process","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","RESET_FEED","POST_TIPPED","removeFollow","addFollow","loadSharedPost","postId","sharerPublicKey","subscribeUserProfile","USER_POSTS_QUERY_SUFFIX","subscribeUserPosts","subscription","postEntries","newPosts","GUN_PROPS","deletedPosts","unsubUserPosts","USER_SHARED_POSTS_QUERY_SUFFIX","subscribeSharedUserPosts","originalAuthor","unsubUserSharedPosts","FOLLOWS_QUERY","subscribeFollows","unsubscribeFollows","sendTipPost","deleteUserPost","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","rifleSockets","Map","GunSocket","LNDSocket","connectSocket","SocketIO","connect","disconnectSocket","socket","off","close","decryptEventCallback","err","callback","encryptedEmit","eventName","encryptedData","emit","encryptedOn","responses","decryptedResponses","fetchSocket","namespace","resolve","then","DataSocket","token","encryptionId","FieldError","field","cachedSocket","delete","opts","$shock","publicKeyForDecryption","set","getChats","chats","recipientAvatar","recipientDisplayName","reduce","initialMessagePrefix","getSentRequests","getReceivedRequests","recipientChangedRequestAddress","SET_CHAT_CONTACTS","SET_CHAT_MESSAGES","loadChatData","loadSentRequests","loadReceivedRequests","requestorPK","requestorAvatar","requestorDisplayName","subscribeChatMessages","userPublicKey","incomingId","incomingMessages","rawMsg","msg","acceptHandshakeRequest","put","accept","sendHandshakeRequest","sendMessage","tempId","DateTime","utc","toMillis","safeParseJSON","nonEncryptedEvents","convertBase64ToBuffer","Buffer","from","convertBufferToBase64","processKey","Uint8Array","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","fetchWalletBalance","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","updateUserProfile","binarySub","Utils","header","onError","onNotAuth","unsubscribeUserProfile","setSeedProviderPub","pub","setSeedInfo","cleanUrl","endsWith","slice","infoS","addPublishedContent","toSet","unlockContent","postID","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","addAvailableToken","removeUnavailableToken","addStreamToken","Drawer","useDispatch","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","createPostPage","GoLivePage","OtherUserPage","Story","Stories","QRScannerPage","PrivateRoute","component","authorizedComponent","App","followedPublicKeys","f","useEffect","videojs","addLanguage","tokenExpired","JWTDecode","exp","FeedActions","subbedUsers","useRef","unsub","currentlySubbedUsers","current","batch","length","contactPKs","sentReqsPKs","r","receivedReqsPKs","publicKeysToSub","uniq","subbedFollowedKeysRef","currentlySubbedFollowedKeys","fallback","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","timeout","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","retryOperation","operation","delay","retries","reason","ms","setTimeout","bind","fetchNodeHealth","Error","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","connectHost","resetData","done","health","baseURL","throttledExchangeKeyPair","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","decodedToken","jwtDecode","authorization","parseError","createWallet","SetAttemptsDone","stack","CHAT_MESSAGE_STATUS","isSharedPost","obj","useForceUpdate","setTick","tick","isOnline","lastSeen","logger","resizeImage","img","desiredLongEdge","compression","canvas","createElement","width","Math","round","getContext","drawImage","toDataURL","processImageFile","file","startsWith","TypeError","size","rej","reader","FileReader","onload","e","target","result","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","src","image","resizedImage","normalizeURL","_url","__url","_","protocol","getContact","contact","EMPTY_FN","errorMessage","exchangingKeypair","addUserKeyPair","addHostKey","getDeviceId","APIPublicKey","openDrawer","loadFeeRates","capitalizeText","split","word","toLowerCase","join","processDisplayName","suffix"],"mappings":"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","file":"static/js/main.ba00d95e.chunk.js","sourcesContent":["import Http from \"../utils/Http\"\nimport {rifle,rifleSocketExists,disconnectRifleSocket} from '../utils/WebSocket'\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE:\"service/add/bought\"\n};\n\nexport const createService = (clear,encrypted,serviceID) => async dispatch => {\n  let id = serviceID\n  if(serviceID){\n    const {data} = await Http.post('/api/gun/put',{\n      path:`$user>offeredServices>${id}`,\n      value:clear,\n      \n    })\n    const {ok} = data\n    if(!ok){\n      return \"\"\n    }\n  } else {\n    const {data} = await Http.post('/api/gun/set',{\n      path:'$user>offeredServices',\n      value:clear,\n      \n    })\n    const {ok,id:newID} = data\n    if(!ok){\n      return \"\"\n    }\n    id = newID\n  }\n  \n  const all = Object.entries(encrypted).map(([name,value]) => {\n    if(!value){\n      return\n    }\n    console.log(`setting: ${name} to ${value}`)\n    return Http.post('/api/gun/put',{\n      path:`$user>offeredServices>${id}>${name}`,\n      value:{\n        $$__ENCRYPT__FOR:'me',\n        value\n      },\n    })\n  })\n  await Promise.all(all)\n  const {serviceType} = clear\n  //update the offered service\n  if(serviceType === 'torrentSeed' || serviceType === 'streamSeed'){\n    console.log(\"updating profile with service\")\n    await Http.post('/api/gun/put',{\n      path:`$user>Profile>SeedServiceProvided`,\n      value:id,\n    })\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id\n};\n\n\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post('/api/gun/put',{\n    path:`$user>offeredServices>${id}`,\n    value:null\n  })\n};\n\nexport const subscribeMyServices = (hostIP) => async (dispatch) => {\n  const query = `$user::offeredServices::on`\n  const socketExists = rifleSocketExists(query)\n  const subscription = await rifle({\n    host: hostIP,\n    query,\n    publicKey:\"\",\n    reconnect:false\n  });\n  subscription.on(\"$shock\", async services => {\n    const servicesEntries = Object.entries(services);\n    console.log(servicesEntries)\n\n    servicesEntries.forEach(async ([id]) => {\n      if(id === \"_\"){\n        return\n      }\n      const { data: service } = await  Http.get(\n        `/api/gun/user/load/offeredServices>${id}`\n      )\n      console.log(service.data)\n      if (service.data === null) {\n        dispatch({\n          type: ACTIONS.REMOVE_MY_SERVICE,\n          data: id\n        });\n        return\n      }\n      dispatch({\n        type: ACTIONS.ADD_MY_SERVICE,\n        data: {id,serviceInfo:service.data}\n      });\n    })\n  });\n  return () => {\n    disconnectRifleSocket(query)\n  }\n}\n\nexport const buyService = (owner,serviceID,servicePrice) => async (dispatch) => {\n  const {data} = await Http.post('/api/lnd/unifiedTrx',{\n    type: 'service',\n    amt:Number(servicePrice),\n    to: owner,\n    memo:\"\",\n    feeLimit:500,\n    ackInfo:serviceID\n  })\n  console.log(data)\n  const orderAck = JSON.parse(data.orderAck.response)\n  dispatch({\n    type:ACTIONS.ADD_BOUGHT_SERVICE,\n    data:{orderAck,owner,serviceID}\n  })\n  return orderAck\n\n}","import Http from \"axios\";\nimport * as Encryption from \"./Encryption\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return response;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n    }\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\").matches\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","export const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\"\n};\n\nexport const setAuthenticated = status => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTHENTICATED,\n    data: status\n  });\n};\n\nexport const setAuthStep = step => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_STEP,\n    data: step\n  });\n};\n\nexport const setAuthMethod = method => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_METHOD,\n    data: method\n  });\n};\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null,\n  userSessionKey: null,\n  APISessionKey: null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: []\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n */\n/**\n * @template S\n * @typedef {import('redux').Reducer<S, AnyAction>} Reducer\n */\n\nimport * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').ReceivedRequest} ReceivedRequest\n * @typedef {import(\"../schema\").SentRequest} SentRequest\n *\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').LoadSentRequestsAction} LoadSentRequestsAction\n */\n\nconst INITIAL_STATE = {\n  contacts: /** @type {Contact[]} */ ([]),\n  /**\n   * @type {Record<string, Schema.ChatMessage[]>}\n   */\n  messages: {},\n  sentRequests: /** @type {SentRequest[]} */ ([]),\n  receivedRequests: /** @type {ReceivedRequest[]} */ ([]),\n  requestBlacklist: []\n};\n\n/**\n * @param {Schema.ChatMessage} oldMessage\n * @param {Schema.ChatMessage} newMessage\n * @returns {boolean}\n */\nconst _identicalMessages = (oldMessage, newMessage) =>\n  oldMessage.id && newMessage.id\n    ? oldMessage.id === newMessage.id\n    : oldMessage.localId === newMessage.localId;\n\n/**\n * @param {Schema.ChatMessage[]} messages\n * @returns {Schema.ChatMessage[]}\n */\nconst _sortMessages = (messages = []) =>\n  messages.sort((a, b) => b.timestamp - a.timestamp);\n\n/**\n * @typedef {object} ProcessNewMessageParams\n * @prop {Schema.ChatMessage} data\n * @prop {Schema.ChatMessageStatus} status\n * @prop {typeof INITIAL_STATE} state\n * @prop {boolean=} outgoing\n */\n\n/**\n * @param {ProcessNewMessageParams} args\n * @returns {typeof INITIAL_STATE}\n */\nconst _processNewMessage = ({ data, status, state, outgoing = false }) => {\n  const userMessages = state.messages[data.recipientPublicKey] ?? [];\n  const [existingMessage] = userMessages.filter(message =>\n    _identicalMessages(message, data)\n  );\n\n  if (existingMessage) {\n    console.warn(\"Duplicate Message:\", existingMessage?.body);\n  }\n\n  if (existingMessage) {\n    const messages = userMessages.map(message =>\n      _identicalMessages(message, existingMessage)\n        ? { ...existingMessage, ...data, status, outgoing }\n        : message\n    );\n    const sortedMessages = _sortMessages(messages);\n\n    return {\n      ...state,\n      messages: {\n        ...state.messages,\n        [data.recipientPublicKey]: sortedMessages\n      }\n    };\n  }\n\n  const messages = [{ ...data, status, outgoing }, ...userMessages];\n  const sortedMessages = _sortMessages(messages);\n\n  return {\n    ...state,\n    messages: {\n      ...state.messages,\n      [data.recipientPublicKey]: sortedMessages\n    }\n  };\n};\n\n/**\n * @type {Reducer<typeof INITIAL_STATE>}\n */\nconst chat = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_CHAT_DATA: {\n      const {\n        data: { contacts, messages }\n      } = /** @type {LoadChatDataAction} */ (action);\n      return {\n        ...state,\n        contacts,\n        // TODO: Could not replacing messages altogether be bad?\n        messages: {\n          ...state.messages,\n          ...messages\n        }\n      };\n    }\n    case ACTIONS.LOAD_SENT_REQUESTS: {\n      const {\n        data: sentRequests\n      } = /** @type {LoadSentRequestsAction} */ (action);\n      const requestPublicKeys = state.sentRequests.map(request => request.pk);\n      const pendingRequests = state.sentRequests.filter(\n        request => request.loading && !requestPublicKeys.includes(request.pk)\n      );\n\n      return {\n        ...state,\n        sentRequests: [...pendingRequests, ...sentRequests]\n      };\n    }\n    case ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      const {\n        data: receivedRequests\n      } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n      return {\n        ...state,\n        receivedRequests\n      };\n    }\n    case ACTIONS.SENT_REQUEST: {\n      const { data: publicKey } = /** @type {SentRequestAction} */ (action);\n      return {\n        ...state,\n        sentRequests: [\n          ...state.sentRequests,\n          {\n            avatar: null,\n            changedAddress: false,\n            displayName: null,\n            id: \"loading/\" + publicKey,\n            pk: publicKey,\n            timestamp: Date.now(),\n            loading: true\n          }\n        ]\n      };\n    }\n    case ACTIONS.ACCEPT_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      return {\n        ...state,\n        receivedRequests: state.receivedRequests.filter(\n          request => request.id !== requestId\n        )\n      };\n    }\n    case ACTIONS.DECLINE_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      if (!requestId || !requestId.trim()) {\n        return state;\n      }\n\n      return {\n        ...state,\n        requestBlacklist: [...state.requestBlacklist, requestId]\n      };\n    }\n    case ACTIONS.SENDING_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENDING,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.SENT_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.FAILED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.FAILED,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.RECEIVED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.RECEIVED,\n        state\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import { ACTIONS } from \"../actions/ContentActions\";\nconst INITIAL_STATE = {\n  seedProviderPub:'qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg',\n  streamUserToken:'',\n  streamLiveToken:'',\n  streamUrl:'',\n  publishedContent:{},\n  unlockedContent:{},\n  seedInfo:{},\n  availableTokens:{},\n  availableStreamTokens:{}\n};\n\nconst content = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n    case ACTIONS.ADD_PUBLISHED_CONTENT:{\n      const {data} = action\n      const {content,res} = data\n      const contentTmp = {...state.publishedContent}\n      if(res.ok){\n        contentTmp[res.id] = content \n      }\n      return { ...state, publishedContent:contentTmp} \n    }\n    case ACTIONS.ADD_UNLOCKED_CONTENT:{\n      const {data} = action\n      const unlockedTmp = {...state.unlockedContent}\n      unlockedTmp[data.contentPath] = data.content\n      return {...state,unlockedContent:unlockedTmp}\n    }\n    case ACTIONS.ADD_STREAM:{\n      const {data} = action\n      return {...state, streamLiveToken:data.liveToken,streamUserToken:data.seedToken,streamUrl:data.streamUrl}\n    }\n    case ACTIONS.REMOVE_STREAM:{\n      return {...state, streamLiveToken:'',streamUserToken:''}\n    }\n    case ACTIONS.SET_SEED_INFO:{\n      const {data} = action\n      return {...state, seedInfo:data}\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableTokens}\n      if(!availableTmp[seedUrl]){\n        availableTmp[seedUrl] = []\n      }\n      availableTmp[seedUrl].push(userToken)\n      return {...state,availableTokens:availableTmp}\n    }\n    case ACTIONS.REMOVE_USED_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableTokens}\n      if(!availableTmp[seedUrl]){\n        return state\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return {...state,availableTokens:availableTmp}\n      }\n      return state\n    }\n    case ACTIONS.ADD_STREAM_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableStreamTokens}\n      if(!availableTmp[seedUrl]){\n        availableTmp[seedUrl] = []\n      }\n      availableTmp[seedUrl].push(userToken)\n      return {...state,availableStreamTokens:availableTmp}\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableStreamTokens}\n      if(!availableTmp[seedUrl]){\n        return state\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return {...state,availableStreamTokens:availableTmp}\n      }\n      return state\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import { ACTIONS } from \"../actions/FeesActions\";\n\nconst INITIAL_STATE = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n  rate: \"halfHourFee\",\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Follow} Follow\n */\n\nimport { ACTIONS } from \"../actions/FeedActions\";\n/**\n * @typedef {import('../schema').Post} Post\n * @typedef {import('../schema').SharedPost} SharedPost\n */\n\nconst INITIAL_STATE = {\n  follows: /** @type {Follow[]} */ ([\n    {\n      user: \"qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg\",\n      status: 'ok',\n      private: false\n    }\n  ]),\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: /** @type {Record<string, Array<Post|SharedPost>>} */ ({})\n};\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst feed = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FOLLOWS: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.ADD_USER_POST: {\n      const { data } = action;\n      const authorId = data.authorId;\n      const userPosts = state.posts[authorId] ?? [];\n      const existingPost = userPosts.find(post => data.id === post.id);\n\n      if (existingPost) {\n        return state;\n      }\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: [...userPosts, data]\n        }\n      };\n    }\n    case ACTIONS.DELETE_USER_POST: {\n      const { id, authorId } = action.data;\n      const userPosts = (state.posts[authorId] ?? []).filter(\n        post => post.id !== id\n      );\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: userPosts\n        }\n      };\n    }\n    case ACTIONS.LOAD_POSTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        posts: data\n      };\n    }\n    case ACTIONS.LOAD_SHARED_POST: {\n      const { data } = action;\n      const { id, sharerId } = data;\n      const userPosts = state.posts[sharerId] ?? [];\n      const updatedPosts = userPosts.map(post => {\n        if (post.id === id && post.type === \"shared\") {\n          return {\n            ...post,\n            originalPost: data\n          };\n        }\n\n        return post;\n      });\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [sharerId]: updatedPosts\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as CHAT_ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import(\"../actions/ChatActions\").LoadSentRequestsAction} LoadSentRequestsAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n */\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_USER_PROFILE: {\n      const { publicKey, profile } = action.data;\n\n      if (!publicKey || !profile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey],\n          ...profile\n        }\n      };\n    }\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { publicKey, profile: newProfile } = action.data;\n      const oldProfile = state[publicKey];\n\n      if (!oldProfile || !newProfile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...oldProfile,\n          ...newProfile\n        }\n      };\n    }\n    case CHAT_ACTIONS.LOAD_CHAT_DATA: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadChatDataAction} */ (action);\n\n        data.contacts.forEach(c => {\n          draft[c.pk] = {\n            ...Common.createEmptyUser(c.pk),\n            ...draft[c.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_SENT_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadSentRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.SENT_REQUEST: {\n      return produce(state, draft => {\n        const { data: pk } = /** @type {SentRequestAction} */ (action);\n\n        if (!draft[pk]) {\n          draft[pk] = Common.createEmptyUser(pk);\n        }\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n    myServices:{},\n    services:{},\n    boughtServices:{}\n};\n\n\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const {id,serviceInfo} = action.data\n      const tmp = {...state.myServices}\n      tmp[id] = serviceInfo\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE:{\n      const id = action.data\n      const tmp = {...state.myServices}\n      delete tmp[id]\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE:{\n      const {orderAck,owner,serviceID} = action.data\n      const servicesTmp = {...state.boughtServices}\n      \n      if(!servicesTmp[owner]){\n        servicesTmp[owner] = {}\n      }\n      const selectedService = servicesTmp[owner]\n      if(!selectedService[serviceID]){\n        selectedService[serviceID] = []\n      }\n      selectedService[serviceID].push(orderAck)\n      return {...state, boughtServices:servicesTmp}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","import { combineReducers } from \"redux\";\nimport * as Common from \"shock-common\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\"\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders:OrdersReducer,\n  users: () => {\n    return {} as Record<string, Common.User>;\n  }\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = (publicKey: string) => (\n  state: State\n): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey);\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n","import { State } from \"../../reducers\";\n\nexport const selectFollows = (state: State) => state.feed.follows;\n","import { createStore, applyMiddleware, compose, AnyAction } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport { useSelector as origUseSelector } from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport * from \"./selectors\";\n","import { GUN_PROPS } from \"../utils/Gun\";\nimport Http from \"../utils/Http\";\nimport { rifle, disconnectRifleSocket } from \"../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const loadSharedPost = (\n  postId,\n  publicKey,\n  sharerPublicKey\n) => async dispatch => {\n  const { data: post } = await Http.get(\n    `/api/gun/otheruser/${publicKey}/load/posts>${postId}`\n  );\n  dispatch(subscribeUserProfile(publicKey));\n\n  dispatch({\n    type: ACTIONS.LOAD_SHARED_POST,\n    data: {\n      ...post.data,\n      authorId: publicKey,\n      sharerId: sharerPublicKey,\n      id: postId\n    }\n  });\n};\n\nconst USER_POSTS_QUERY_SUFFIX = `::posts::on`;\n\nexport const subscribeUserPosts = publicKey => async (dispatch, getState) => {\n  const { hostIP } = getState().node;\n\n  const subscription = await rifle({\n    host: hostIP,\n    query: publicKey + USER_POSTS_QUERY_SUFFIX\n  });\n\n  subscription.on(\"$shock\", posts => {\n    console.debug(`posts from: ${publicKey}: `, posts);\n    const postEntries = Object.entries(posts);\n    const newPosts = postEntries\n      .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n      .map(([key]) => key);\n    const deletedPosts = postEntries\n      .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n      .map(([key]) => key);\n\n    newPosts.map(async id => {\n      const { data: post } = await Http.get(\n        `/api/gun/otheruser/${publicKey}/load/posts>${id}`\n      );\n\n      dispatch({\n        type: ACTIONS.ADD_USER_POST,\n        data: {\n          ...post.data,\n          id,\n          authorId: publicKey,\n          type: \"post\"\n        }\n      });\n    });\n\n    deletedPosts.map(id =>\n      dispatch({\n        type: ACTIONS.DELETE_USER_POST,\n        data: {\n          id,\n          authorId: publicKey,\n          type: \"post\"\n        }\n      })\n    );\n  });\n  return subscription;\n};\n\nexport const unsubUserPosts = publicKey => async () => {\n  disconnectRifleSocket(publicKey + USER_POSTS_QUERY_SUFFIX);\n};\n\nconst USER_SHARED_POSTS_QUERY_SUFFIX = `::sharedPosts::on`;\n\nexport const subscribeSharedUserPosts = publicKey => async (\n  dispatch,\n  getState\n) => {\n  const { hostIP } = getState().node;\n  const subscription = await rifle({\n    host: hostIP,\n    query: publicKey + USER_SHARED_POSTS_QUERY_SUFFIX\n  });\n  subscription.on(\"$shock\", posts => {\n    console.debug(`shared posts from ${publicKey}: `, posts);\n    const postEntries = Object.entries(posts);\n    const newPosts = postEntries\n      .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n      .map(([key]) => key);\n    const deletedPosts = postEntries\n      .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n      .map(([key]) => key);\n\n    newPosts.map(async id => {\n      const { data: post } = await Http.get(\n        `/api/gun/otheruser/${publicKey}/load/sharedPosts>${id}`\n      );\n\n      dispatch({\n        type: ACTIONS.ADD_USER_POST,\n        data: {\n          ...post.data,\n          id,\n          authorId: publicKey,\n          type: \"shared\"\n        }\n      });\n\n      await loadSharedPost(id, post.data.originalAuthor, publicKey)(dispatch);\n    });\n\n    deletedPosts.map(id =>\n      dispatch({\n        type: ACTIONS.DELETE_USER_POST,\n        data: {\n          id,\n          authorId: publicKey\n        }\n      })\n    );\n  });\n  return subscription;\n};\n\nexport const unsubUserSharedPosts = publicKey => () => {\n  disconnectRifleSocket(publicKey + USER_SHARED_POSTS_QUERY_SUFFIX);\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async (dispatch, getState) => {\n  const { hostIP } = getState().node;\n  const subscription = await rifle({\n    host: hostIP,\n    query: FOLLOWS_QUERY,\n    reconnect: true\n  });\n  console.debug(\"subbing follows\");\n\n  subscription.on(\"$shock\", async (follow, key) => {\n    if (typeof key !== \"string\") {\n      console.warn(`Invalid follow key received: ${key}`);\n      return;\n    }\n\n    if (!follow) {\n      dispatch(removeFollow(key));\n      return;\n    }\n\n    if (typeof follow.user !== \"string\") {\n      console.warn(`Invalid follow user received (${follow.user})`);\n      return;\n    }\n\n    dispatch(addFollow(follow));\n  });\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  disconnectRifleSocket(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport FieldError from \"./FieldError\";\n/**\n * @typedef {import('../schema').Contact} Contact\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true\n};\n\nconst rifleSockets = new Map();\n\nexport let GunSocket = null;\n\nexport let LNDSocket = null;\n\nexport const connectSocket = url => {\n  GunSocket = SocketIO.connect(`${url}/gun`, options);\n  LNDSocket = SocketIO.connect(`${url}/lndstreaming`, options);\n  return { GunSocket, LNDSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: data\n    });\n\n    callback(err, decryptedMessage);\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (!Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        if (!response) {\n          return response;\n        }\n\n        if (response && !Encryption.isEncryptedMessage(response)) {\n          console.warn(\"Non-encrypted socket message\", response);\n          return response;\n        }\n\n        return Encryption.decryptMessage({\n          privateKey: localPrivateKey,\n          encryptedMessage: response\n        });\n      })\n    );\n\n    callback(...decryptedResponses);\n  });\n};\n\nconst fetchSocket = ({ hostIP, authToken, namespace, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const { encryption } = store.getState();\n        const DataSocket = SocketIO.connect(`${hostIP}/${namespace}`, {\n          ...options,\n          auth: {\n            token: authToken,\n            encryptionId: encryption.deviceId\n          }\n        });\n        const on = encryptedOn(DataSocket);\n\n        on(\"$shock\", async data => {\n          if (callback) {\n            callback(null, data);\n            return;\n          }\n          resolve(data);\n        });\n\n        on(\"$error\", async error => {\n          if (callback) {\n            callback(error);\n            return;\n          }\n          disconnectSocket(DataSocket);\n          reject(\n            new FieldError({\n              field: \"socket\",\n              message: error\n            })\n          );\n        });\n\n        on(\"error\", error => {\n          console.error(error);\n          if (callback) {\n            callback(error);\n            return;\n          }\n          disconnectSocket(DataSocket);\n          reject(\n            new FieldError({\n              field: \"socket\",\n              message: error\n            })\n          );\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const disconnectRifleSocket = query => {\n  const cachedSocket = rifleSockets.get(query);\n\n  if (cachedSocket) {\n    cachedSocket.off(\"*\");\n    cachedSocket.close();\n    rifleSockets.delete(query);\n  }\n};\n\nexport const rifleSocketExists = query => {\n  const cachedSocket = rifleSockets.get(query);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} host\n * @prop {string} query\n * @prop {string=} publicKeyForDecryption\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {boolean=} reconnect\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.on('$shock')` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map()once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<SocketIOClient.Socket>}\n */\nexport const rifle = async ({ host, query, publicKey, reconnect }) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const opts = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId,\n      $shock: query,\n      publicKeyForDecryption: publicKey ?? \"\"\n    }\n  };\n\n  const cachedSocket = rifleSockets.get(query);\n\n  if (reconnect && cachedSocket) {\n    disconnectRifleSocket(query);\n  }\n\n  if (!cachedSocket || reconnect) {\n    const socket = SocketIO(`${host}/gun`, opts);\n    rifleSockets.set(query, socket);\n    const on = encryptedOn(socket);\n    const emit = encryptedEmit(socket);\n\n    on(\"$error\", err => {\n      console.error(`Gun rifle error (${query})`);\n\n      console.error(err);\n    });\n\n    return {\n      on,\n      emit,\n      off: () => socket.off(),\n      close: () => socket.close()\n    };\n  }\n\n  return cachedSocket;\n};\n\n/**\n * @returns {{ messages: any , contacts: Contact[]}}\n */\nexport const getChats = async ({ hostIP, authToken }) => {\n  try {\n    const chats = await fetchSocket({ hostIP, authToken, namespace: \"chats\" });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\nexport const getSentRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const sentRequests = await fetchSocket({\n      hostIP,\n      authToken,\n      namespace: \"sentReqs\",\n      callback\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getReceivedRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const receivedRequests = await fetchSocket({\n      hostIP,\n      authToken,\n      namespace: \"receivedReqs\",\n      callback\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","// @ts-check\nimport Http from \"../utils/Http\";\nimport { DateTime } from \"luxon\";\nimport { v4 as uuidv4 } from \"uuid\";\n/**\n * @typedef {import('shock-common').Message} RawMessage\n */\n\nimport {\n  getChats,\n  getReceivedRequests,\n  getSentRequests,\n  rifle\n} from \"../utils/WebSocket\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport * as Schema from \"../schema\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').SentRequest} SentRequest\n * @typedef {import(\"../schema\").ReceivedRequest} ReceivedRequest\n * @typedef {import('../schema').ChatMessage} ChatMessage\n */\n\nexport const ACTIONS = {\n  LOAD_CHAT_DATA: /** @type {\"chat/loadData\"} */ (\"chat/loadData\"),\n  LOAD_SENT_REQUESTS: /** @type {\"chat/loadSentRequests\"} */ (\"chat/loadSentRequests\"),\n  LOAD_RECEIVED_REQUESTS: /** @type {\"chat/loadReceivedRequests\"} */ (\"chat/loadReceivedRequests\"),\n  SET_CHAT_CONTACTS: \"chat/contacts\",\n  SET_CHAT_MESSAGES: \"chat/messages\",\n  SENT_REQUEST: /** @type {\"chat/request/sent\"} */ (\"chat/request/sent\"),\n  ACCEPT_HANDSHAKE_REQUEST: \"chat/request/accept\",\n  DECLINE_HANDSHAKE_REQUEST: \"chat/request/decline\",\n  SENDING_MESSAGE: \"chat/message/sending\",\n  SENT_MESSAGE: \"chat/message/sent\",\n  FAILED_MESSAGE: \"chat/message/failed\",\n  RECEIVED_MESSAGE: /** @type {\"chat/message/received\"} */ (\"chat/message/received\")\n};\n\n/**\n * @typedef {object} SentRequestAction\n * @prop {typeof ACTIONS.SENT_REQUEST} type\n * @prop {string} data The public key.\n */\n\n/**\n * @typedef {object} LoadChatDataAction\n * @prop {typeof ACTIONS.LOAD_CHAT_DATA} type\n * @prop {{ messages: Record<string, ChatMessage[]> , contacts: Contact[] }} data\n */\n\n/**\n * @typedef {object} LoadSentRequestsAction\n * @prop {typeof ACTIONS.LOAD_SENT_REQUESTS} type\n * @prop {SentRequest[]} data\n */\n\n/**\n * @typedef {object} LoadReceivedRequestsAction\n * @prop {typeof ACTIONS.LOAD_RECEIVED_REQUESTS} type\n * @prop {ReceivedRequest[]} data\n */\n\n/**\n * @typedef {object} ReceivedMessageAction\n * @prop {typeof ACTIONS.RECEIVED_MESSAGE} type\n * @prop {ChatMessage} data\n */\n\nexport const loadChatData = () => async (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  const data = await getChats({ hostIP, authToken });\n  console.log(\"LOAD_CHAT_DATA:\", data);\n\n  dispatch({\n    type: ACTIONS.LOAD_CHAT_DATA,\n    data\n  });\n};\n\nexport const loadSentRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getSentRequests({ hostIP, authToken }, (err, sentRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"sentRequests:\", sentRequests);\n\n    /** @type {LoadSentRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_SENT_REQUESTS,\n      data: sentRequests.map(request => {\n        /** @type {SentRequest} */\n        const req = {\n          id: request.id,\n          pk: request.recipientPublicKey,\n          avatar: request.recipientAvatar,\n          displayName: request.recipientDisplayName,\n          changedAddress: request.recipientChangedRequestAddress,\n          timestamp: request.timestamp,\n          loading: false\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const loadReceivedRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getReceivedRequests({ hostIP, authToken }, (err, receivedRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"receivedRequests:\", receivedRequests);\n\n    /** @type {LoadReceivedRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n      data: receivedRequests.map(request => {\n        /** @type {ReceivedRequest} */\n        const req = {\n          id: request.id,\n          pk: request.requestorPK,\n          avatar: request.requestorAvatar,\n          displayName: request.requestorDisplayName,\n          timestamp: request.timestamp\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const subscribeChatMessages = (\n  userPublicKey,\n  recipientPublicKey\n) => async (dispatch, getState) => {\n  const { hostIP } = getState().node;\n  const { data: incomingId } = await Http.get(\n    `/api/gun/user/once/userToIncoming>${recipientPublicKey}`,\n    {\n      headers: {\n        \"public-key-for-decryption\": userPublicKey\n      }\n    }\n  );\n\n  if (!incomingId.data) {\n    console.warn(\"Unable to retrieve incoming ID for selected contact\");\n    return null;\n  }\n\n  const incomingMessages = await rifle({\n    host: hostIP,\n    query: `${recipientPublicKey}::outgoings>${incomingId.data}>messages::map.on`,\n    publicKey: recipientPublicKey\n  });\n\n  incomingMessages.on(\"$shock\", (message, id) => {\n    if (!message.body || message.body === initialMessagePrefix) {\n      return;\n    }\n    /** @type {RawMessage} */\n    const rawMsg = message;\n\n    /** @type {ChatMessage} */\n    const msg = {\n      body: rawMsg.body,\n      id,\n      localId: id,\n      outgoing: false,\n      recipientPublicKey,\n      status: Schema.CHAT_MESSAGE_STATUS.SENT,\n      timestamp: rawMsg.timestamp\n    };\n\n    /** @type {ReceivedMessageAction} */\n    const action = {\n      type: ACTIONS.RECEIVED_MESSAGE,\n      data: msg\n    };\n\n    dispatch(action);\n  });\n\n  return incomingMessages;\n};\n\nexport const acceptHandshakeRequest = requestId => async dispatch => {\n  const { data } = await Http.put(`/api/gun/requests/${requestId}`, {\n    accept: true\n  });\n\n  dispatch({\n    type: ACTIONS.ACCEPT_HANDSHAKE_REQUEST,\n    data: requestId\n  });\n\n  return data;\n};\n\nexport const sendHandshakeRequest = publicKey => async (dispatch, getState) => {\n  const { data } = await Http.post(`/api/gun/requests`, {\n    publicKey\n  });\n\n  /** @type {SentRequest[]} */\n  const sentRequests = getState().chat.sentRequests;\n  const [userExists] = sentRequests.filter(request => request.pk === publicKey);\n\n  if (!userExists) {\n    /** @type {SentRequestAction} */\n    const action = {\n      type: ACTIONS.SENT_REQUEST,\n      data: publicKey\n    };\n    dispatch(action);\n  }\n\n  return data;\n};\n\nexport const sendMessage = ({\n  publicKey,\n  message,\n  localId = null\n}) => async dispatch => {\n  const tempId = localId ?? uuidv4();\n  try {\n    dispatch({\n      type: ACTIONS.SENDING_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n    const { data } = await Http.post(`/api/gun/chats/${publicKey}`, {\n      body: message\n    });\n    console.log(data);\n    dispatch({\n      type: ACTIONS.SENT_MESSAGE,\n      data: { ...data, localId: tempId, recipientPublicKey: publicKey }\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIONS.FAILED_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n  }\n};\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Uint8Array;\n  ephemPublicKey: Uint8Array;\n  iv: Uint8Array;\n  mac: Uint8Array;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface DeriveKey {\n  localPrivateKey: Uint8Array | string;\n  remotePublicKey: Uint8Array | string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Uint8Array | string;\n  sharedKey: Uint8Array | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Uint8Array | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Uint8Array) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Uint8Array | string): Uint8Array => {\n  if (key instanceof Uint8Array) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName);\n\nexport const generateKeyPair = () => {\n  const privateKey: Uint8Array = ECCrypto.generatePrivate();\n  const publicKey: Uint8Array = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const deriveKey = async ({\n  localPrivateKey,\n  remotePublicKey\n}: DeriveKey) => {\n  const sharedKey: Uint8Array = await ECCrypto.derive(\n    processKey(localPrivateKey),\n    processKey(remotePublicKey)\n  );\n  const sharedKeyBase64 = convertBufferToBase64(sharedKey);\n\n  return { sharedKey, sharedKeyBase64 };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  const processedPrivateKey = processKey(privateKey);\n  const decryptedMessageBuffer: Uint8Array = await ECCrypto.decrypt(\n    processedPrivateKey,\n    convertToEncryptedMessage(encryptedMessage)\n  );\n  const decryptedMessage = Buffer.from(decryptedMessageBuffer).toString();\n  const parsedMessage = safeParseJSON(decryptedMessage);\n\n  return parsedMessage;\n};\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\"\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  const { data } = await Http.get(`/api/lnd/balance`);\n\n  dispatch({\n    type: ACTIONS.LOAD_BALANCE,\n    data: {\n      channelBalance: data.channel_balance,\n      confirmedBalance: data.confirmed_balance,\n      pendingChannelBalance: data.pending_channel_balance\n    }\n  });\n\n  return data;\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  const { data } = await Http.get(\n    \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n  );\n  const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n  dispatch({\n    type: ACTIONS.LOAD_USD_RATE,\n    data: exchangeRate\n  });\n\n  return exchangeRate;\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { transactions } = getState().wallet;\n\n  if ((transactions.page >= page && !reset) || transactions.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/transactions\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchChannels = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n  dispatch({\n    type: ACTIONS.LOAD_CHANNELS,\n    data: data.channels\n  });\n\n  return data;\n};\n\nexport const fetchPeers = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n  dispatch({\n    type: ACTIONS.LOAD_PEERS,\n    data: data.peers\n  });\n\n  return data;\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { invoices } = getState().wallet;\n\n  if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/invoices\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchPayments = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { payments } = getState().wallet;\n\n  if ((payments.page >= page && !reset) || payments.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/payments\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_PAYMENTS : ACTIONS.LOAD_MORE_PAYMENTS,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n\n    return newPeer;\n  } catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    const data = await fetchChannels()(dispatch);\n\n    return data.channels;\n  } catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n};\n","import * as Common from \"shock-common\";\n\nimport * as Utils from \"../utils\";\nimport { disconnectRifleSocket, rifle } from \"../utils/WebSocket\";\n\nimport { setAuthenticated } from \"./AuthActions\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  LOAD_USER_PROFILE: \"userProfiles/profiles/load\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\",\n  UPDATE_USER_PROFILE: \"userProfiles/profiles/update\"\n};\n\nexport const updateUserProfile = (\n  publicKey: string,\n  profile: Partial<Common.User>\n) => ({\n  type: ACTIONS.UPDATE_USER_PROFILE,\n  data: {\n    publicKey,\n    profile\n  }\n});\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => async (\n  dispatch: (action: object) => void,\n  getState: () => {\n    node: { hostIP: string };\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  const { hostIP } = getState().node;\n  const [subscription, binarySub] = await Promise.all([\n    rifle({\n      host: hostIP,\n      query: `${publicKey}::Profile::on`,\n      reconnect: true\n    }),\n    rifle({\n      host: hostIP,\n      query: `${publicKey}::profileBinary::map.on`,\n      reconnect: true\n    })\n  ]);\n\n  binarySub.on(\"$shock\", (data, key: string) => {\n    if (key === \"avatar\") {\n      if (typeof data !== \"string\" && data !== null) {\n        Utils.logger.error(\n          `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n        );\n        return;\n      }\n      dispatch(\n        updateUserProfile(publicKey, {\n          avatar: data\n        })\n      );\n    } else if (key === \"header\") {\n      if (typeof data !== \"string\" && data !== null) {\n        Utils.logger.error(\n          `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n        );\n        return;\n      }\n      dispatch(\n        updateUserProfile(publicKey, {\n          header: data\n        })\n      );\n    } else {\n      Utils.logger.error(\n        `Unknown key: ${key} for user binary profile data gun RPC socket`\n      );\n    }\n  });\n\n  subscription.on(\"$shock\", profile => {\n    const { [publicKey]: existingUser } = getState().userProfiles;\n\n    if (existingUser) {\n      dispatch({\n        type: ACTIONS.UPDATE_USER_PROFILE,\n        data: { publicKey, profile }\n      });\n      return profile;\n    }\n\n    dispatch({\n      type: ACTIONS.LOAD_USER_PROFILE,\n      data: { publicKey, profile }\n    });\n  });\n\n  const onError = (err: unknown) => {\n    if (err === Common.NOT_AUTH) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    Utils.logger.error(\n      `Error inside user profile subscription ( ${publicKey} )`\n    );\n    Utils.logger.error(err);\n  };\n\n  const onNotAuth = () => {\n    dispatch(setAuthenticated(false));\n  };\n\n  binarySub.on(\"$error\", onError);\n  subscription.on(\"$error\", onError);\n  binarySub.on(Common.NOT_AUTH, onNotAuth);\n  subscription.on(Common.NOT_AUTH, onNotAuth);\n\n  return () => {\n    binarySub.off(\"*\");\n    binarySub.close();\n    subscription.off(\"*\");\n    subscription.close();\n  };\n};\n\nexport const unsubscribeUserProfile = publicKey => async () => {\n  disconnectRifleSocket(`${publicKey}::Profile::on`);\n  disconnectRifleSocket(`${publicKey}::profileBinary::map.on`);\n};\n","import Http from '../utils/Http'\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB:'content/setSeedProviderPub',\n  SET_SEED_INFO:'content/setSeedInfo',\n  ADD_PUBLISHED_CONTENT:'content/addPublishedContent',\n  ADD_UNLOCKED_CONTENT:'content/addUnlocked',\n  ADD_STREAM:'content/addStream',\n  REMOVE_STREAM:'content/removeStream',\n  ADD_AVAILABLE_TOKEN:'content/addToken',\n  REMOVE_USED_TOKEN:'content/removeToken',\n  ADD_STREAM_TOKEN:'content/addStreamToken',\n  REMOVE_STREAM_TOKEN:'content/removeStreamToken',\n};\n\nexport const setSeedProviderPub = pub => async dispatch => {\n  let value = {\n    $$__ENCRYPT__FOR:'me',\n    value:pub\n  }\n  if(!pub){\n    value = \"\"\n  }\n  await Http.post('/api/gun/put',{\n    path:'$user>seedServiceProviderPubKey',\n    value\n  })\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (seedUrl,seedToken) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0,-1) : seedUrl\n  const infoS = JSON.stringify({seedUrl:cleanUrl,seedToken})\n  await Http.post('/api/gun/put',{\n    path:'$user>seedServiceSeedData',\n    value:{\n      $$__ENCRYPT__FOR:'me',\n      value:infoS\n    }\n  })\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: {seedUrl:cleanUrl,seedToken}\n  });\n};\nexport const addPublishedContent = content => async dispatch => {\n  let toSet = content\n  if(typeof content !== 'string'){\n    toSet = JSON.stringify(content)\n  }\n  const {data} = await Http.post('/api/gun/set',{\n    path:'$user>publishedContent',\n    value:{\n      $$__ENCRYPT__FOR:'me',\n      value:toSet\n    }\n  })\n  dispatch({\n    type: ACTIONS.ADD_PUBLISHED_CONTENT,\n    data: {content,res:data}\n  });\n  return data\n};\n\nexport const unlockContent = (amt,owner,postID) => async dispatch => {\n  const {data} = await Http.post('/api/lnd/unifiedTrx',{\n    type: 'contentReveal',\n    amt,\n    to: owner,\n    memo:'',\n    feeLimit:500,\n    ackInfo:postID\n  })\n  const revealRes = JSON.parse(data.orderAck.response)\n  if(revealRes && revealRes.unlockedContents){\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type:ACTIONS.ADD_UNLOCKED_CONTENT,\n          data:{contentPath:`${owner}>posts>${postID}`,content}\n        })\n      }\n    }\n  }\n}\nexport const addStream = (seedToken, liveToken,streamUrl) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {seedToken,liveToken,streamUrl}\n  });\n};\nexport const removeStream = () => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM,\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const removeUnavailableToken = (seedUrl,userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const removeStreamToken = (seedUrl,userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </div>\n        </div>\n        <div className=\"drawer-bottom-section\" >\n          <NavLink className=\"drawer-item\"  to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n        <NavLink  to=\"/QRScanner\" onClick={close}>\n          <i\n            onClick={onClickScan}\n            className=\"icon-solid-scan\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, { Suspense, useEffect, useRef } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { batch, useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\nimport uniq from \"lodash/uniq\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\nimport { loadReceivedRequests, loadSentRequests } from \"./actions/ChatActions\";\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport \"./styles/App.css\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as FeedActions from \"./actions/FeedActions\";\nimport * as Store from \"./store\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/publishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst createPostPage = React.lazy(() => import(\"./pages/Profile/createPost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/goLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst Story = React.lazy(() => import(\"./pages/Story\"));\nconst Stories = React.lazy(() => import(\"./pages/Stories\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const contacts = Store.useSelector(({ chat }) => chat.contacts);\n  const sentRequests = Store.useSelector(({ chat }) => chat.sentRequests);\n  const receivedRequests = Store.useSelector(\n    ({ chat }) => chat.receivedRequests\n  );\n  const followedPublicKeys = Store.useSelector(Store.selectFollows).map(\n    f => f.user\n  );\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated) {\n      dispatch(loadSentRequests());\n      dispatch(loadReceivedRequests());\n      dispatch(subscribeUserProfile(publicKey));\n      dispatch(FeedActions.subscribeUserPosts(publicKey));\n      dispatch(FeedActions.subscribeSharedUserPosts(publicKey));\n    } else {\n      dispatch(unsubscribeUserProfile(publicKey));\n      dispatch(FeedActions.unsubUserPosts(publicKey));\n      dispatch(FeedActions.unsubUserSharedPosts(publicKey));\n    }\n\n    return () => {\n      dispatch(unsubscribeUserProfile(publicKey));\n      dispatch(FeedActions.unsubUserPosts(publicKey));\n      dispatch(FeedActions.unsubUserSharedPosts(publicKey));\n    };\n  }, [authenticated, dispatch, publicKey]);\n\n  // Keep this effect separate from the one above, as having both together\n  // causes an infinite loop due to implicit/explicit dependencies.\n  const subbedUsers = useRef(/** @type {string[]} */ ([]));\n  useEffect(() => {\n    const unsub = () => {\n      const { current: currentlySubbedUsers } = subbedUsers;\n\n      batch(() => {\n        currentlySubbedUsers.forEach(pk => {\n          dispatch(unsubscribeUserProfile(pk));\n        });\n      });\n\n      currentlySubbedUsers.splice(0, currentlySubbedUsers.length);\n    };\n\n    if (authenticated) {\n      const contactPKs = contacts.map(c => c.pk);\n      const sentReqsPKs = sentRequests.map(r => r.pk);\n      const receivedReqsPKs = receivedRequests.map(r => r.pk);\n\n      const publicKeysToSub = uniq(\n        /** @type {string[]} */ ([\n          ...contactPKs,\n          ...sentReqsPKs,\n          ...receivedReqsPKs\n        ])\n      ).filter(pk => !subbedUsers.current.includes(pk));\n\n      publicKeysToSub.forEach(pk => {\n        subbedUsers.current.push(pk);\n      });\n\n      batch(() => {\n        publicKeysToSub.forEach(pk => {\n          dispatch(subscribeUserProfile(pk));\n        });\n      });\n    } else {\n      unsub();\n    }\n\n    return unsub;\n  }, [\n    authenticated,\n    dispatch,\n    publicKey,\n    contacts,\n    sentRequests,\n    receivedRequests\n  ]);\n\n  useEffect(() => {\n    if (authenticated) {\n      dispatch(FeedActions.subscribeFollows());\n    } else {\n      dispatch(FeedActions.unsubscribeFollows());\n    }\n\n    return () => {\n      dispatch(FeedActions.unsubscribeFollows());\n    };\n  }, [authenticated, dispatch]);\n\n  const subbedFollowedKeysRef = useRef(/** @type {string[]} */ ([]));\n\n  useEffect(() => {\n    const unsub = () => {\n      const { current: currentlySubbedFollowedKeys } = subbedFollowedKeysRef;\n\n      batch(() => {\n        currentlySubbedFollowedKeys.forEach(pk => {\n          dispatch(unsubscribeUserProfile(pk));\n          dispatch(FeedActions.unsubUserPosts(pk));\n          dispatch(FeedActions.unsubUserSharedPosts(pk));\n        });\n      });\n      currentlySubbedFollowedKeys.splice(0, currentlySubbedFollowedKeys.length);\n    };\n\n    if (authenticated) {\n      const { current: currentlySubbedFollowedKeys } = subbedFollowedKeysRef;\n      const publicKeysToSub = followedPublicKeys.filter(\n        pk => !currentlySubbedFollowedKeys.includes(pk)\n      );\n\n      batch(() => {\n        publicKeysToSub.forEach(pk => {\n          dispatch(subscribeUserProfile(pk));\n          dispatch(FeedActions.subscribeUserPosts(pk));\n          dispatch(FeedActions.subscribeSharedUserPosts(pk));\n        });\n      });\n\n      subbedFollowedKeysRef.current.push(...followedPublicKeys);\n    } else {\n      unsub();\n    }\n\n    return unsub;\n  }, [followedPublicKeys, authenticated, dispatch]);\n\n  return (\n    <FullHeight className=\"ShockWallet\">\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:publicKey\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={createPostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey\"\n            exact\n            component={OtherUserPage}\n          />\n          <Route path=\"/story\" exact component={Story} />\n          <Route path=\"/stories\" exact component={Stories} />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n    </FullHeight>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Http from \"axios\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nHttp.defaults.timeout = 10000;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { throttledExchangeKeyPair } from \"./EncryptionActions\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_ATTEMPTS_DONE: \"node/attemptsDone\"\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nconst wait = ms => new Promise(r => setTimeout(r, ms));\n\nconst retryOperation = (operation, delay, retries) =>\n  new Promise((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return wait(delay)\n            .then(\n              retryOperation.bind(null, operation, delay * retries, retries - 1)\n            )\n            .then(resolve)\n            .catch(reject);\n        }\n        return reject(reason);\n      });\n  });\n\nexport const fetchNodeHealth = (hostIP, retries) => async dispatch => {\n  try {\n    const { data } = await retryOperation(\n      async () => {\n        const { data } = await Http.get(`${hostIP}/healthz`);\n        if (!data) {\n          throw new Error(\n            `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n          );\n        }\n        return { data };\n      },\n      1000,\n      retries\n    );\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (\n  hostIP,\n  resetData = true,\n  retries = 0\n) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(throttledExchangeKeyPair())\n    ]);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(\n      `https://${sanitizedHostIP}`,\n      retries\n    )(dispatch);\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(\n    `http://${sanitizedHostIP}`,\n    retries\n  )(dispatch);\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/auth\",\n      {\n        alias,\n        password\n      },\n      {\n        // Unlocking can take significantly longer than other endpoints\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/wallet\",\n      {\n        alias,\n        password\n      },\n      {\n        // Creating a wallet can take longer than any other endpoints.\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const SetAttemptsDone = () => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_ATTEMPTS_DONE\n  });\n};\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","import * as Common from \"shock-common\";\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  type: \"post\";\n}\n\n/**\n * Different from the one in shock-common.\n */\nexport interface SharedPost extends Common.SharedPostRaw {\n  authorId: string;\n  sharerId: string;\n  id: string;\n  type: \"shared\";\n  originalPost: Post;\n}\n\nexport const isSharedPost = (post: any): post is SharedPost => {\n  if (!Common.isObj(post)) {\n    return false;\n  }\n\n  const obj = (post as unknown) as SharedPost;\n\n  if (typeof obj.authorId !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.id !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.originalAuthor !== \"string\") {\n    return false;\n  }\n\n  return obj.type === \"shared\";\n};\n","import * as React from \"react\";\nimport * as Common from \"shock-common\";\n\nexport function useForceUpdate(): () => void {\n  const [, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return update;\n}\n\nexport const isOnline = (lastSeen: number): boolean =>\n  Date.now() - lastSeen < Common.SET_LAST_SEEN_APP_INTERVAL * 2;\n","import * as Common from \"shock-common\";\n\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not an url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangingKeypair = null;\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(`/api/encryption/exchange`, {\n      publicKey: keyPair.publicKeyBase64,\n      deviceId\n    });\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n\nexport const throttledExchangeKeyPair = () => async dispatch => {\n  try {\n    if (!exchangingKeypair) {\n      exchangingKeypair = dispatch(exchangeKeyPair());\n    }\n\n    const result = await exchangingKeypair;\n\n    // eslint-disable-next-line require-atomic-updates\n    exchangingKeypair = null;\n\n    return result;\n  } catch (err) {\n    console.error(err);\n    exchangingKeypair = null;\n    throw err;\n  }\n};\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\nexport const setSource = source => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_SOURCE,\n    data: source\n  });\n\n  return source;\n};\n\nexport const setRate = rate => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_RATE,\n    data: rate\n  });\n\n  return rate;\n};\n","export const GUN_PROPS = [\"_\", \"#\"];\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n"],"sourceRoot":""}