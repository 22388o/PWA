{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/BottomBar/index.js","common/Modal/components/ModalSubmit/index.js","utils/Cache.js","utils/Promise.js","utils/Torrents.js","pages/Feed/components/SendTipModal/index.js","pages/Feed/components/UnlockModal/index.js","pages/Feed/components/UserIcon/index.js","pages/Feed/index.js"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","disabled","group","fas","BottomBar","to","activeClassName","ModalSubmit","text","getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","console","log","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","length","forEach","src","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","file","extension","split","slice","supportedFileType","Object","entries","filter","includes","fileType","webTorrentClient","WebTorrent","attachMedia","posts","torrentMode","allowDuplicates","torrentTasks","map","post","contentItems","id","item","key","get","magnetURI","add","torrent","files","target","destroy","torrentElement","contentURL","decodeURIComponent","replace","format","toLowerCase","endsWith","compatibleURL","elementSrc","getAttribute","setAttribute","renderTo","on","getBlob","err","blob","querySelector","dataset","played","reduce","torrents","SendTipModal","tipData","toggleOpen","dispatch","useDispatch","useState","error","setError","loading","setLoading","amount","setAmount","tipSuccess","setTipSuccess","onInputChange","e","submitTip","preventDefault","sendTipPost","publicKey","postId","postID","errorMessage","message","responseError","response","data","useEffect","onSubmit","overlay","UnlockModal","unlockData","unlockSuccess","setUnlockSuccess","submitUnlock","unlockContent","UserIcon","username","avatar","addButton","large","main","backgroundImage","Post","React","lazy","SharedPost","FeedPage","follows","Store","feed","userProfiles","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","subscribeFollows","unsubscribeFollows","followedPosts","useMemo","values","userPosts","p","isSharedPost","find","f","user","sharerId","authorId","sort","b","alpha","shareDate","date","toggleTipModal","toggleUnlockModal","useLayoutEffect","subscriptions","follow","profileSubscription","subscribeUserProfile","postsSubscription","subscribeUserPosts","sharedPostsSubscription","subscribeSharedUserPosts","rifleCleanup","unsubscribe","profile","Common","processDisplayName","displayName","index","sharerProfile","originalPublicKey","originalAuthor","originalProfile","fallback","Loader","originalPost","originalPostProfile","sharedTimestamp","postPublicKey","openTipModal","openUnlockModal","timestamp","tipCounter","undefined","tipValue"],"mappings":"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","file":"static/js/13.015ecab8.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"modal-content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"modal-head\">\n      <p className=\"modal-head-title\">{title}</p>\n      <div className=\"modal-head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"modal-open\": modalOpen })}>\n      <div className=\"modal-backdrop\" onClick={closeModal} />\n      <div className=\"modal-container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst InputGroup = ({\n  label,\n  name,\n  onChange,\n  inputAction,\n  actionIcon,\n  value,\n  inputMode = \"text\",\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst ModalSubmit = ({ text = \"Submit\", onClick }) => {\n  return (\n    <div className=\"modal-submit-btn\" onClick={onClick}>\n      <p className=\"modal-submit-btn-text\">{text}</p>\n    </div>\n  );\n};\n\nexport default ModalSubmit;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = true;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import WebTorrent from \"webtorrent\";\nimport { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nconst supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: true,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nconst _getFileType = file => {\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const supportedFileType = Object.entries(\n    supportedFileTypes\n  ).filter(([type, options]) => options.formats.includes(extension))[0];\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport const webTorrentClient = new WebTorrent();\n\nexport const attachMedia = (\n  posts = [],\n  torrentMode = true,\n  allowDuplicates = false\n) => {\n  const torrentTasks = posts\n    .map(post => {\n      const { contentItems, id } = post;\n      return Object.entries(contentItems)\n        .filter(([key, item]) => supportedFileTypes[item.type])\n        .map(([key, item]) => () =>\n          new Promise(resolve => {\n            const torrentExists = webTorrentClient.get(item.magnetURI);\n\n            if (torrentExists && !allowDuplicates) {\n              resolve(true);\n              return;\n            }\n\n            webTorrentClient.add(item.magnetURI, async torrent => {\n              // Proceed to the next torrent in queue\n              resolve(true);\n\n              const files = torrent.files.filter(file => {\n                const extension = file.name?.split(\".\")?.slice(-1)[0];\n                const supportedFileType = Object.entries(\n                  supportedFileTypes\n                ).filter(([type, options]) =>\n                  options.formats.includes(extension)\n                )[0];\n                if (supportedFileType) {\n                  const [, fileType] = supportedFileType;\n                  const matched = fileType.formats.includes(extension);\n                  return matched;\n                }\n                return false;\n              });\n\n              files.map(async file => {\n                const fileType = _getFileType(file);\n\n                if (!fileType) {\n                  return;\n                }\n\n                const fileName = `${id}-${key}-${file.name}`;\n\n                const element = fileType.element;\n                const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                const cachedFile = await getCachedFile(fileName);\n\n                if (cachedFile) {\n                  const torrent = webTorrentClient.get(item.magnetURI);\n\n                  if (torrent) {\n                    torrent.destroy();\n                  }\n\n                  renderCachedFile(cachedFile, target);\n                  return;\n                }\n\n                const torrentElements = document.querySelectorAll(target);\n                torrentElements.forEach(torrentElement => {\n                  const contentURL = decodeURIComponent(\n                    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n                  );\n                  const [compatibleURL] = fileType.formats.filter(format =>\n                    contentURL\n                      .toLowerCase()\n                      .endsWith(`.${format.toLowerCase()}`)\n                  );\n                  const elementSrc = torrentElement.getAttribute(\"src\");\n\n                  if ((torrentMode || !compatibleURL) && !elementSrc) {\n                    file.renderTo(torrentElement, fileType.options);\n                    return;\n                  }\n\n                  torrentElement.setAttribute(\"src\", contentURL);\n                });\n              });\n\n              torrent.on(\"done\", () => {\n                files.map(file => {\n                  const fileType = _getFileType(file);\n                  const fileName = `${id}-${key}-${file.name}`;\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n\n                  file.getBlob(async (err, blob) => {\n                    if (err) {\n                      console.warn(err);\n                      return;\n                    }\n\n                    await saveFile(fileName, blob);\n                    const element = document.querySelector(target);\n                    if (\n                      element?.dataset.played === \"false\" &&\n                      !element?.getAttribute(\"src\")\n                    ) {\n                      const cachedFile = await getCachedFile(fileName);\n                      renderCachedFile(cachedFile, target);\n                    }\n                  });\n\n                  return file;\n                });\n              });\n            });\n          })\n        );\n    })\n    .reduce((torrents, contentItems) => [...torrents, ...contentItems], []);\n\n  runSerial(torrentTasks);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { sendTipPost } from \"../../../../actions/FeedActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.css\";\n\nconst SendTipModal = ({ tipData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(0);\n  const [tipSuccess, setTipSuccess] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n  }, []);\n\n  const submitTip = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await dispatch(\n          sendTipPost({\n            amount,\n            publicKey: tipData.publicKey,\n            postId: tipData.postID\n          })\n        );\n        setTipSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (tipData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, amount, tipData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!tipData) {\n      setLoading(false);\n      setError(null);\n      setTipSuccess(false);\n    }\n  }, [tipData]);\n\n  return (\n    <Modal toggleModal={toggleOpen} modalOpen={!!tipData} modalTitle=\"Send Tip\">\n      {tipSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post tipped successfully!</p>\n          <p className=\"tip-success-desc\"></p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitTip}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            Please specify the amount of sats you'd like to tip this user with\n            below.\n          </p>\n          <InputGroup\n            name=\"amount\"\n            onChange={onInputChange}\n            value={amount}\n            inputMode=\"decimal\"\n            small\n          />\n          <ModalSubmit text=\"SEND TIP\" onClick={submitTip} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SendTipModal;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { unlockContent } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.css\";\n\nconst UnlockModal = ({ unlockData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [unlockSuccess, setUnlockSuccess] = useState(false);\n\n  const submitUnlock = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await unlockContent(\n          100,\n          unlockData.publicKey,\n          unlockData.postID\n        )(dispatch);\n        setUnlockSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (unlockData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, unlockData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!unlockData) {\n      setLoading(false);\n      setError(null);\n      setUnlockSuccess(false);\n    }\n  }, [unlockData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!unlockData}\n      modalTitle=\"Unlock content\"\n    >\n      {unlockSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Content unlocked successfully!</p>\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitUnlock}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            100 sats will be sent to the owner of the post to unlock the content\n          </p>\n          <ModalSubmit text=\"UNLOCK\" onClick={submitUnlock} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default UnlockModal;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst UserIcon = ({\n  username,\n  avatar,\n  addButton = false,\n  large = false,\n  main = false\n}) => (\n  <div\n    className={classNames({\n      \"followed-user\": true,\n      \"followed-user-large\": large,\n      \"followed-user-main\": main\n    })}\n  >\n    <div\n      className=\"followed-user-avatar\"\n      style={{ backgroundImage: `url(${avatar})` }}\n    >\n      {addButton ? (\n        <div className=\"user-add-btn\">\n          <i className=\"fas fa-plus\" />\n        </div>\n      ) : null}\n    </div>\n    {username ? <p className=\"followed-user-name\">{username}</p> : null}\n  </div>\n);\n\nexport default UserIcon;\n","// @ts-check\nimport React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState\n} from \"react\";\nimport * as Common from \"shock-common\";\n\nimport { processDisplayName } from \"../../utils/String\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport * as Store from \"../../store\";\nimport BottomBar from \"../../common/BottomBar\";\nimport UserIcon from \"./components/UserIcon\";\nimport SendTipModal from \"./components/SendTipModal\";\nimport Loader from \"../../common/Loader\";\n\nimport { isSharedPost } from \"../../schema\";\n\nimport \"./css/index.css\";\nimport UnlockModal from \"./components/UnlockModal\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  subscribeFollows,\n  subscribeSharedUserPosts,\n  subscribeUserPosts,\n  unsubscribeFollows\n} from \"../../actions/FeedActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport { rifleCleanup } from \"../../utils/WebSocket\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst FeedPage = () => {\n  const dispatch = useDispatch();\n  const follows = Store.useSelector(Store.selectFollows);\n  const posts = Store.useSelector(({ feed }) => feed.posts);\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const { avatar } = Store.useSelector(Store.selectSelfUser);\n  // Effect to sub follows\n  useEffect(() => {\n    subscribeFollows()(dispatch);\n    return () => {\n      unsubscribeFollows();\n    };\n  }, []);\n  const followedPosts = useMemo(() => {\n    if (posts) {\n      const feed = Object.values(posts)\n        .reduce((posts, userPosts) => [...posts, ...userPosts], [])\n        .filter(p => {\n          if (isSharedPost(p)) {\n            return !!follows.find(f => f.user === p.sharerId);\n          }\n          return !!follows.find(f => f.user === p.authorId);\n        })\n        .sort((a, b) => {\n          const alpha = isSharedPost(a) ? a.shareDate : a.date;\n          const beta = isSharedPost(b) ? b.shareDate : b.date;\n\n          return beta - alpha;\n        });\n\n      return feed;\n    }\n\n    return [];\n  }, [follows, posts]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      console.log(tipData);\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n      }\n\n      setTipModalOpen(tipData);\n    },\n    [tipModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      console.log(unlockData);\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  useLayoutEffect(() => {\n    attachMedia(\n      followedPosts.filter(post => post.type === \"post\"),\n      false\n    );\n  }, [followedPosts]);\n\n  useEffect(() => {\n    const subscriptions = follows.map(follow => {\n      const profileSubscription = dispatch(subscribeUserProfile(follow.user));\n      const postsSubscription = dispatch(subscribeUserPosts(follow.user));\n      const sharedPostsSubscription = dispatch(\n        subscribeSharedUserPosts(follow.user)\n      );\n\n      return () => {\n        // @ts-ignore\n        profileSubscription();\n        rifleCleanup(postsSubscription, sharedPostsSubscription)();\n      };\n    });\n\n    return () => {\n      subscriptions.map(unsubscribe => unsubscribe());\n    };\n  }, [follows, dispatch]);\n\n  return (\n    <div className=\"page-container feed-page\">\n      <div className=\"following-bar-container\">\n        <UserIcon\n          addButton\n          large\n          main\n          avatar={avatar ? `data:image/jpeg;base64,${avatar}` : null}\n          username={null}\n        />\n        <div className=\"following-bar-list\">\n          {follows?.map(follow => {\n            const publicKey = follow.user;\n            const profile =\n              userProfiles[publicKey] ?? Common.createEmptyUser(publicKey);\n\n            return (\n              <UserIcon\n                username={processDisplayName(publicKey, profile.displayName)}\n                avatar={`data:image/jpeg;base64,${profile.avatar}`}\n                key={publicKey}\n              />\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"tabs-holder\">\n        <p className=\"tab active\">Feed</p>\n        <p className=\"tab\">Saved</p>\n        <p className=\"tab\">Videos</p>\n      </div>\n      <div className=\"posts-holder\">\n        {followedPosts.map((post, index) => {\n          if (post.type === \"shared\") {\n            const sharerProfile =\n              userProfiles[post.sharerId] ||\n              Common.createEmptyUser(post.sharerId);\n            const originalPublicKey = post.originalAuthor;\n            const originalProfile =\n              userProfiles[originalPublicKey] ||\n              Common.createEmptyUser(originalPublicKey);\n            return (\n              <Suspense fallback={<Loader />} key={index}>\n                <SharedPost\n                  originalPost={post.originalPost}\n                  originalPostProfile={originalProfile}\n                  sharedTimestamp={post.shareDate}\n                  sharerProfile={sharerProfile}\n                  postPublicKey={originalPublicKey}\n                  openTipModal={toggleTipModal}\n                  openUnlockModal={toggleUnlockModal}\n                />\n              </Suspense>\n            );\n          }\n\n          const profile =\n            userProfiles[post.authorId] ||\n            Common.createEmptyUser(post.authorId);\n\n          return (\n            <Suspense fallback={<Loader />} key={index}>\n              <Post\n                id={post.id}\n                timestamp={post.date}\n                contentItems={post.contentItems}\n                avatar={`data:image/jpeg;base64,${profile?.avatar}`}\n                username={processDisplayName(\n                  profile?.publicKey,\n                  profile?.displayName\n                )}\n                publicKey={post.authorId}\n                openTipModal={toggleTipModal}\n                openUnlockModal={toggleUnlockModal}\n                tipCounter={undefined}\n                tipValue={undefined}\n              />\n            </Suspense>\n          );\n        })}\n      </div>\n      <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n      <UnlockModal\n        unlockData={unlockModalData}\n        toggleOpen={toggleUnlockModal}\n      />\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default FeedPage;\n"],"sourceRoot":""}