{"version":3,"sources":["common/Post/components/Video/index.js","common/Post/components/Image/index.js","images/share.svg","common/Post/index.js","images/av1.jpg","common/Post/SharedPost.js"],"names":["Video","id","item","index","postId","tipValue","tipCounter","hideRibbon","width","contentURL","decodeURIComponent","magnetURI","replace","videoStyle","className","style","cursor","data-torrent","data-file-key","controls","data-played","src","TipRibbon","Image","useState","zoomed","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","useCallback","value","clearTimeout","timer","setTimeout","mainImageStyle","opacity","Controlled","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","alt","onLoad","display","Post","timestamp","publicKey","openTipModal","openUnlockModal","contentItems","username","openDeleteModal","undefined","openShareModal","_","unlockedContent","Store","content","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","liveStatus","setLiveStatus","isOnlineNode","useEffect","values","Object","videoContent","find","type","streamContent","status","getMediaContent","entries","filter","forEach","k","e","path","parseContent","key","text","finalItem","cached","Stream","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","on","scrollSnapList","length","window","addEventListener","removeEventListener","off","tipPost","targetType","postID","unlockPost","deletePost","shared","sharePost","Tooltip","rebuild","console","log","ShockAvatar","height","Pad","amt","insideRow","to","DateTime","fromMillis","toRelative","onClick","map","Array","from","classNames","scrollTo","ref","data-tip","ShareIcon","color","marginLeft","SharedPost","sharerProfile","originalPostProfile","origPost","originalPost","sharedTimestamp","postPublicKey","loadPostMedia","a","attachMedia","useLayoutEffect","selfPublicKey","Common","lastSeenApp","displayName","date","alias","Loader"],"mappings":"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","file":"static/js/3.ea8c5ffa.chunk.js","sourcesContent":["import React from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\n\nconst Video = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width\n}) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = {};\n  if (width) {\n    videoStyle.width = width;\n  }\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n        {!hideRibbon && (\n          <TipRibbon tipCounter={tipCounter} tipValue={tipValue} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.scoped.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width\n}) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [\n      animationTimer,\n      zoomLoaded,\n      setZoomed,\n      setZoomLoaded,\n      setPreviewVisible,\n      setAnimationTimer\n    ]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { opacity: previewVisible ? 1 : 0 };\n  if (width) {\n    mainImageStyle.width = width;\n  }\n\n  return (\n    <div className=\"media-container\">\n      <ControlledZoom\n        isZoomed={zoomed}\n        onZoomChange={handleZoomChange}\n        overlayBgColorStart=\"#16191c00\"\n        overlayBgColorEnd=\"#16191c\"\n      >\n        <img\n          className={`image torrent-img torrent-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          style={mainImageStyle}\n          src={contentURL}\n        />\n        <img\n          className={`image enlarged-img enlarged-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-file-key={index}\n          onLoad={() => {\n            setZoomLoaded(true);\n          }}\n          style={{\n            opacity: zoomed ? 1 : 0,\n            display: zoomed ? \"block\" : \"none\"\n          }}\n          src={contentURL}\n        />\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={zoomed}\n          />\n        )}\n      </ControlledZoom>\n    </div>\n  );\n};\n\nexport default Image;\n","export default __webpack_public_path__ + \"static/media/share.8ed36b2d.svg\";","// @ts-check\nimport { useEffect, useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../store\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\n\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport \"./css/index.scoped.css\";\n\nimport ShareIcon from \"../../images/share.svg\";\n\nconst Post = ({\n  id,\n  timestamp,\n  tipCounter,\n  tipValue,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  contentItems = {},\n  username,\n  openDeleteModal = undefined,\n  openShareModal = _ => {}\n}) => {\n  const unlockedContent = Store.useSelector(\n    ({ content }) => content.unlockedContent\n  );\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [liveStatus, setLiveStatus] = useState(\"\");\n\n  const isOnlineNode = /*Utils.isOnline(\n    Store.useSelector(Store.selectUser(publicKey)).lastSeenApp\n  );*/ true;\n\n  //effect for liveStatus\n  useEffect(() => {\n    const values = Object.values(contentItems);\n    const videoContent = values.find(\n      item => item.type === \"video/embedded\" && item.liveStatus === \"wasLive\"\n    );\n    const streamContent = values.find(\n      item => item.type === \"stream/embedded\" && item.liveStatus === \"live\"\n    );\n    let status = \"\";\n    if (videoContent) {\n      status = videoContent.liveStatus;\n    }\n    if (streamContent) {\n      status = streamContent.liveStatus;\n    }\n    if (status) {\n      setLiveStatus(status);\n    }\n  }, [contentItems, setLiveStatus]);\n\n  const getMediaContent = useCallback(() => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  }, [contentItems]);\n\n  const getTextContent = () => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(() => {\n    getMediaContent().forEach(([k, e]) => {\n      const path = `${publicKey}>posts>${k}`;\n      if (e.isPrivate && !unlockedContent[path]) {\n        setIsPrivate(true);\n      }\n    });\n  }, [contentItems, getMediaContent, publicKey, unlockedContent]);\n\n  const parseContent = ([key, item], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n    const finalItem = item;\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`;\n      const cached = unlockedContent[path];\n      if (cached) {\n        finalItem.magnetURI = cached;\n      } else {\n        return (\n          <div key={key}>\n            <i className=\"fas fa-lock fa-10x\"></i>\n          </div>\n        );\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n    if (item.type === \"stream/embedded\") {\n      return (\n        <Stream\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  // useEffect(() => {\n  //   attachMedia();\n  // }, [contentItems.length]);\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id, shared: false });\n  }, [id, openDeleteModal]);\n\n  const sharePost = useCallback(() => {\n    openShareModal({\n      targetType: \"share\",\n      postID: id,\n      publicKey\n    });\n  }, [publicKey, id, openShareModal]);\n\n  useEffect(() => {\n    try {\n      Tooltip.rebuild();\n    } catch (e) {\n      console.log(`Error inside <Post />: `, e);\n    }\n  }, []);\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={publicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <div className=\"username\">\n              <Link to={`/otherUser/${publicKey}`}>{username}</Link>\n              {liveStatus && (\n                <p className=\"liveStatus\">\n                  {liveStatus}\n                  <i\n                    className={`fas fa-circle liveStatusIcon ${\n                      liveStatus === \"live\" ? \"liveIcon\" : \"\"\n                    }`}\n                  ></i>\n                </p>\n              )}\n            </div>\n            <p>\n              {timestamp && typeof timestamp === \"number\"\n                ? DateTime.fromMillis(timestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    // TODO: Get the actual ID here. However posts can't be\n                    // edited so index is stable.\n                    key={key}\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div></div>\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n        {openShareModal && (\n          <div className=\"icon-tip-btn\" data-tip={\"share\"} onClick={sharePost}>\n            <img\n              alt=\"Share this post\"\n              src={ShareIcon}\n              style={{ color: \"#4285b9\", marginLeft: \"auto\" }}\n            />\n          </div>\n        )}\n        {!openShareModal && <div></div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","export default __webpack_public_path__ + \"static/media/av1.e1539bb2.jpg\";","// @ts-check\nimport { useCallback, useLayoutEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"react-tooltip\";\nimport * as Common from \"shock-common\";\n\nimport Post from \".\";\n\nimport av1 from \"../../images/av1.jpg\";\nimport \"../Post/css/index.scoped.css\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport Loader from \"../Loader\";\nimport * as Store from \"../../store\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\n/**\n * @typedef {import('../../schema').Post} Post\n */\n\nconst SharedPost = ({\n  sharerProfile,\n  originalPostProfile,\n  originalPost: origPost,\n  sharedTimestamp,\n  postPublicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = undefined,\n  openShareModal = (_)=>{}\n}) => {\n  /** @type {Post|undefined} */\n  const originalPost = origPost;\n  const loadPostMedia = useCallback(async () => {\n    if (originalPost) {\n      attachMedia([originalPost], false);\n    }\n  }, [originalPost]);\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id: originalPost.id, shared: true });\n  }, [originalPost, openDeleteModal]);\n\n  useLayoutEffect(() => {\n    Tooltip.rebuild();\n    loadPostMedia();\n  }, [loadPostMedia]);\n\n  const selfPublicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const isOwn = sharerProfile.publicKey === selfPublicKey;\n  const isAppOnline = Common.isAppOnline(\n    Store.useSelector(Store.selectUser(sharerProfile.publicKey)).lastSeenApp\n  );\n\n  return (\n    <div className=\"post shared-post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={sharerProfile.publicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <p>{sharerProfile?.displayName}</p>\n            <p>\n              {sharedTimestamp && typeof sharedTimestamp === \"number\"\n                ? DateTime.fromMillis(sharedTimestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"shared-content\">\n        {originalPost && originalPostProfile ? (\n          <Post\n            id={originalPost.id}\n            timestamp={originalPost.date}\n            // @ts-expect-error tipCounter not wired right now I think\n            tipCounter={originalPost.tipCounter || 0}\n            // @ts-expect-error tipValue ??\n            tipValue={originalPost.tipValue || 0}\n            publicKey={postPublicKey}\n            openTipModal={openTipModal}\n            openUnlockModal={openUnlockModal}\n            contentItems={originalPost.contentItems ?? {}}\n            username={\n              originalPostProfile.displayName ?? originalPostProfile.alias\n            }\n            openShareModal={openShareModal}\n          />\n        ) : (\n          <Loader text=\"Loading Post...\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SharedPost;\n"],"sourceRoot":""}