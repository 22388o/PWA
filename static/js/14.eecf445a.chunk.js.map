{"version":3,"sources":["common/DialogNav/index.js","common/Post/components/TipRibbon/index.js","utils/Cache.js","utils/Promise.js","utils/Torrents.js","common/Post/components/ImagePreview/index.js","common/Post/components/VideoPreview/index.js","pages/Profile/createPost.tsx"],"names":["DIALOG_NAV_MIN_HEIGHT_PX","CONTAINER_STYLE","minHeight","DialogNav","pageTitle","drawerVisible","onHeight","Utils","goBack","useCallback","window","history","back","divRefCb","el","getBoundingClientRect","height","e","console","log","className","ref","style","onClick","classNames","TipRibbon","tipCounter","tipValue","zoomed","opacity","getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","length","forEach","element","src","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","file","extension","name","split","slice","supportedFileType","Object","entries","filter","includes","fileType","webTorrentClient","WebTorrent","attachMedia","posts","torrentMode","allowDuplicates","torrentTasks","map","post","contentItems","id","item","type","key","get","magnetURI","add","torrent","files","target","destroy","torrentElement","contentURL","decodeURIComponent","replace","format","toLowerCase","endsWith","compatibleURL","elementSrc","getAttribute","setAttribute","renderTo","on","getBlob","err","blob","querySelector","dataset","played","reduce","torrents","ImagePreview","index","postId","width","selected","updateSelection","mainImageStyle","selectThis","position","alt","data-torrent","data-file-key","top","backgroundColor","display","alignItems","justifyContent","class","VideoPreview","videoStyle","cursor","controls","data-played","PublishContentPage","useDispatch","useHistory","publishedContent","useSelector","content","avatar","node","useState","loading","setLoading","error","setError","paragraph","setParagraph","postType","setPostType","isPreview","selectedContent","setSelectedContent","onSubmit","useMemo","preventDefault","push","text","isPrivate","Http","tags","title","errorMessage","message","onDiscard","onInputChange","value","Loader","overlay","fullScreen","onReset","marginBottom","backgroundImage","onChange","placeholder","rows","marginLeft","appearance","color","overflow","whiteSpace","margin"],"mappings":"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","file":"static/js/14.eecf445a.chunk.js","sourcesContent":["// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nexport const DIALOG_NAV_MIN_HEIGHT_PX = 73;\n/** @type {import('react').CSSProperties} */\nconst CONTAINER_STYLE = {\n  minHeight: DIALOG_NAV_MIN_HEIGHT_PX\n};\n\nconst DialogNav = ({\n  pageTitle,\n  drawerVisible = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in DialogNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className=\"dialog-nav-container\"\n      ref={divRefCb}\n      style={CONTAINER_STYLE}\n    >\n      <div className=\"dialog-nav-back\" onClick={goBack}>\n        <i className=\"icon icon-thin-back\"></i>\n      </div>\n      <p className=\"dialog-nav-title\">{pageTitle}</p>\n      <div\n        className={classNames({\n          \"dialog-nav-menu-btn\": true,\n          \"dialog-nav-hidden\": !drawerVisible\n        })}\n      >\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DialogNav;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = true;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import WebTorrent from \"webtorrent\";\nimport { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nconst supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: true,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nconst _getFileType = file => {\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const supportedFileType = Object.entries(\n    supportedFileTypes\n  ).filter(([type, options]) => options.formats.includes(extension))[0];\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport const webTorrentClient = new WebTorrent();\n\nexport const attachMedia = (\n  posts = [],\n  torrentMode = true,\n  allowDuplicates = false\n) => {\n  const torrentTasks = posts\n    .map(post => {\n      const { contentItems, id } = post;\n      return Object.entries(contentItems)\n        .filter(([key, item]) => supportedFileTypes[item.type])\n        .map(([key, item]) => () =>\n          new Promise(resolve => {\n            const torrentExists = webTorrentClient.get(item.magnetURI);\n\n            if (torrentExists && !allowDuplicates) {\n              resolve(true);\n              return;\n            }\n\n            webTorrentClient.add(item.magnetURI, async torrent => {\n              // Proceed to the next torrent in queue\n              resolve(true);\n\n              const files = torrent.files.filter(file => {\n                const extension = file.name?.split(\".\")?.slice(-1)[0];\n                const supportedFileType = Object.entries(\n                  supportedFileTypes\n                ).filter(([type, options]) =>\n                  options.formats.includes(extension)\n                )[0];\n                if (supportedFileType) {\n                  const [, fileType] = supportedFileType;\n                  const matched = fileType.formats.includes(extension);\n                  return matched;\n                }\n                return false;\n              });\n\n              files.map(async file => {\n                const fileType = _getFileType(file);\n\n                if (!fileType) {\n                  return;\n                }\n\n                const fileName = `${id}-${key}-${file.name}`;\n\n                const element = fileType.element;\n                const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                const cachedFile = await getCachedFile(fileName);\n\n                if (cachedFile) {\n                  const torrent = webTorrentClient.get(item.magnetURI);\n\n                  if (torrent) {\n                    torrent.destroy();\n                  }\n\n                  renderCachedFile(cachedFile, target);\n                  return;\n                }\n\n                const torrentElements = document.querySelectorAll(target);\n                torrentElements.forEach(torrentElement => {\n                  const contentURL = decodeURIComponent(\n                    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n                  );\n                  const [compatibleURL] = fileType.formats.filter(format =>\n                    contentURL\n                      .toLowerCase()\n                      .endsWith(`.${format.toLowerCase()}`)\n                  );\n                  const elementSrc = torrentElement.getAttribute(\"src\");\n\n                  if ((torrentMode || !compatibleURL) && !elementSrc) {\n                    file.renderTo(torrentElement, fileType.options);\n                    return;\n                  }\n\n                  torrentElement.setAttribute(\"src\", contentURL);\n                });\n              });\n\n              torrent.on(\"done\", () => {\n                files.map(file => {\n                  const fileType = _getFileType(file);\n                  const fileName = `${id}-${key}-${file.name}`;\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n\n                  file.getBlob(async (err, blob) => {\n                    if (err) {\n                      console.warn(err);\n                      return;\n                    }\n\n                    await saveFile(fileName, blob);\n                    const element = document.querySelector(target);\n                    if (\n                      element?.dataset.played === \"false\" &&\n                      !element?.getAttribute(\"src\")\n                    ) {\n                      const cachedFile = await getCachedFile(fileName);\n                      renderCachedFile(cachedFile, target);\n                    }\n                  });\n\n                  return file;\n                });\n              });\n            });\n          })\n        );\n    })\n    .reduce((torrents, contentItems) => [...torrents, ...contentItems], []);\n\n  runSerial(torrentTasks);\n};\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.scoped.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst ImagePreview = ({\n  id,\n  item,\n  index,\n  postId,\n  width,\n  selected,\n  updateSelection\n}) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { opacity: 1 };\n  if (width) {\n    mainImageStyle.width = width;\n  }\n  const selectThis = useCallback(() => {\n    if (selected !== id) {\n      updateSelection(id);\n    }\n  }, [id, updateSelection, selected]);\n\n  return (\n    <div\n      className=\"media-container\"\n      onClick={selectThis}\n      style={{ position: \"relative\" }}\n    >\n      <img\n        className={`image torrent-img torrent-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-torrent={item.magnetURI}\n        data-file-key={index}\n        style={mainImageStyle}\n        src={contentURL}\n      />\n      {selected === id && (\n        <div\n          style={{\n            ...mainImageStyle,\n            opacity: 1,\n            position: \"absolute\",\n            top: 0,\n            backgroundColor: \"rgb(255,255,255,0.2)\",\n            height: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <i class=\"far fa-check-circle fa-3x\" style={{ opacity: 1 }}></i>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ImagePreview;\n","import React, { useCallback } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\n\nconst VideoPreview = ({\n  id,\n  item,\n  index,\n  postId,\n  width,\n  selected,\n  updateSelection\n}) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = {};\n  if (width) {\n    videoStyle.width = width;\n  }\n  const selectThis = useCallback(() => {\n    if (selected !== id) {\n      updateSelection(id);\n    }\n  }, [id, updateSelection]);\n  return (\n    <div className=\"media-container\" style={{ position: \"relative\" }}>\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n      </div>\n      <div\n        onClick={selectThis}\n        style={{\n          ...videoStyle,\n          opacity: selected === id ? 1 : 0,\n          position: \"absolute\",\n          top: 0,\n          backgroundColor: \"rgb(255,255,255,0.2)\",\n          height: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <i class=\"far fa-check-circle fa-3x\" style={{ opacity: 1 }}></i>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPreview;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Loader from \"../../common/Loader\";\nimport DialogNav from \"../../common/DialogNav\";\nimport Http from \"../../utils/Http\";\nimport Video from \"../../common/Post/components/Video\";\nimport Image from \"../../common/Post/components/Image\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport ImagePreview from \"../../common/Post/components/ImagePreview\";\nimport VideoPreview from \"../../common/Post/components/VideoPreview\";\nimport \"./css/index.scoped.css\";\n\nconst PublishContentPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const publishedContent = useSelector(\n    //@ts-expect-error\n    ({ content }) => content.publishedContent\n  );\n  //@ts-expect-error\n  const avatar = useSelector(({ node }) => node.avatar);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [paragraph, setParagraph] = useState(\"\");\n  const [postType, setPostType] = useState(\"public\");\n  const [isPreview, setIsPreview] = useState(false);\n  const [selectedContent, setSelectedContent] = useState(\"\");\n  const contentToDisplay = useMemo(() => {\n    attachMedia([{ id: \"content\", contentItems: publishedContent }]);\n  }, [publishedContent]);\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n\n      console.log(\"submitting\");\n      if (selectedContent === \"\" && paragraph === \"\") {\n        setError(\"at least one paragraph or one media is required\");\n        return;\n      }\n      setLoading(true);\n      let contentItems = [];\n      if (paragraph !== \"\") {\n        contentItems.push({\n          type: \"text/paragraph\",\n          text: paragraph\n        });\n      }\n      const isPrivate = postType === \"private\";\n      if (selectedContent !== \"\") {\n        const item = publishedContent[selectedContent];\n        if (item) {\n          contentItems.push({\n            type: item.type,\n            width: item.width,\n            height: item.height,\n            magnetURI: item.magnetURI,\n            isPreview: isPreview,\n            isPrivate: isPrivate\n          });\n        }\n      }\n      try {\n        const res = await Http.post(`/api/gun/wall`, {\n          tags: [],\n          title: \"Post\",\n          contentItems\n        });\n        if (res.status === 200) {\n          console.log(\"post created successfully\");\n          setLoading(false);\n          history.push(\"/profile\");\n        } else {\n          setError(\"invalid response status\");\n          setLoading(false);\n        }\n      } catch (err) {\n        console.log(err);\n        setError(err?.errorMessage ?? err?.message);\n        setLoading(false);\n      }\n    },\n    [\n      selectedContent,\n      paragraph,\n      publishedContent,\n      isPreview,\n      postType,\n      history,\n      setLoading,\n      setError\n    ]\n  );\n  const onDiscard = useCallback(async e => {\n    e.preventDefault();\n    setError(null);\n    setParagraph(\"\");\n  }, []);\n  const onInputChange = useCallback(\n    e => {\n      const { value, name } = e.target;\n      switch (name) {\n        case \"paragraph\": {\n          setParagraph(value);\n          return;\n        }\n        case \"postType\": {\n          console.log(value);\n          setPostType(value);\n          return;\n        }\n        default:\n          return;\n      }\n    },\n    [setParagraph]\n  );\n\n  const updateSelection = useCallback(\n    e => {\n      e.preventDefault();\n      setSelectedContent(e.target.getAttribute(\"propid\"));\n    },\n    [selectedContent, setSelectedContent]\n  );\n\n  const parseContent = ([key, item], index) => {\n    if (item.type === \"image/embedded\") {\n      return (\n        <div style={{ width: 100, margin: \"1em\" }}>\n          <ImagePreview\n            id={key}\n            item={item}\n            index={index}\n            postId={\"content\"}\n            key={`${index}`}\n            width=\"100px\"\n            selected={selectedContent}\n            updateSelection={setSelectedContent}\n          />\n        </div>\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <div style={{ width: 100 }}>\n          <VideoPreview\n            id={key}\n            item={item}\n            index={index}\n            postId={\"content\"}\n            key={`${index}`}\n            width=\"100px\"\n            selected={selectedContent}\n            updateSelection={setSelectedContent}\n          />\n        </div>\n      );\n    }\n\n    return null;\n  };\n  console.log(selectedContent);\n  return (\n    <div className=\"publish-content-form-container m-1\">\n      {loading ? <Loader overlay fullScreen text=\"Creating post...\" /> : null}\n      <DialogNav drawerVisible={false} pageTitle=\"CREATE POST\" />\n      <form\n        className=\"publish-content-form\"\n        onSubmit={onSubmit}\n        onReset={onDiscard}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginBottom: \"1rem\"\n          }}\n        >\n          <div\n            className=\"profile-avatar\"\n            style={{ backgroundImage: `url(${avatar})` }}\n          />\n          <div>\n            <h2>Say Something</h2>\n            <div className=\"line\"></div>\n          </div>\n          <div style={{ width: \"122px\" }}></div>\n        </div>\n        <textarea\n          className=\"input-field\"\n          name={\"paragraph\"}\n          value={paragraph}\n          onChange={onInputChange}\n          placeholder=\"What's up?\"\n          rows={4}\n        ></textarea>\n        <div\n          style={{ marginLeft: \"auto\", display: \"flex\", alignItems: \"center\" }}\n        >\n          <strong>\n            Audience:{\" \"}\n            <i\n              className={`fas ${\n                postType === \"public\" ? \"fa-globe-europe\" : \"fa-credit-card\"\n              }`}\n            ></i>\n          </strong>\n          <select\n            name=\"postType\"\n            id=\"postType\"\n            onChange={onInputChange}\n            style={{\n              appearance: \"none\",\n              backgroundColor: \"rgba(0,0,0,0)\",\n              color: \"var(--main-blue)\",\n              marginLeft: \"0.3rem\"\n            }}\n          >\n            <option\n              value=\"public\"\n              style={{\n                backgroundColor: \"rgba(0,0,0,0)\",\n                color: \"var(--main-blue)\"\n              }}\n            >\n              Public\n            </option>\n            <option value=\"private\">Paywall</option>\n          </select>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            overflow: \"auto\",\n            whiteSpace: \"nowrap\"\n          }}\n        >\n          {Object.entries(publishedContent).map(parseContent)}\n        </div>\n        {error ? <p className=\"error-container\">{error}</p> : null}\n        <div className=\"flex-center\">\n          <input type=\"reset\" value=\"reset\" className=\"shock-form-button m-1\" />\n          <input\n            type=\"submit\"\n            value=\"submit\"\n            className=\"shock-form-button-confirm m-1\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PublishContentPage;\n"],"sourceRoot":""}