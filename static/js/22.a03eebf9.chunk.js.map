{"version":3,"sources":["common/Post/components/TipRibbon/index.js","common/Line/index.tsx","common/Post/components/Stream/index.tsx","pages/Profile/GoLive/css/GoLive.module.css","images/obs-2.svg","pages/Profile/GoLive/GoLive.tsx"],"names":["TipRibbon","tipCounter","tipValue","zoomed","className","style","opacity","Line","color","length","type","width","useMemo","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","Stream","id","item","index","postId","hideRibbon","playerDOM","timeout","useRef","useState","isLive","videoStyle","liveStatus","useEffect","player","videojs","current","autoplay","muted","aspectRatio","src","magnetURI","play","console","log","cursor","display","ref","preload","controls","autoPlay","module","exports","GoLive","dispatch","useDispatch","history","useHistory","seedProviderPub","Store","content","seedInfo","seedUrl","seedToken","streamLiveToken","streamUserToken","availableTokens","streamPostId","streamContentId","streamStatusUrl","streamUrl","userProfiles","selectedSource","setSelectedSource","loading","setLoading","streamToken","setStreamToken","setUserToken","paragraph","setParagraph","setIsLive","error","setError","rtmpUri","setRtmpUri","promptInfo","setPromptInfo","starting","setStarting","update","setUpdate","interval","setInterval","a","Http","get","data","clearInterval","setTimeout","info","Date","now","clearTimeout","onSubmitCb","useCallback","servicePrice","serviceID","RequestToken","finalSeedUrl","tokens","latestUserToken","post","token","streamData","obsToken","liveToken","streamPlaybackUrl","rtmp","replace","stUrl","contentItems","push","text","isPreview","isPrivate","userToken","statusUrl","tags","title","res","status","newPost","Object","entries","find","contentId","addStream","errorMessage","message","closePrompt","submitPrompt","onSubmit","e","preventDefault","availableToken","key","prototype","hasOwnProperty","call","SeedServiceProvided","service","copyToken","navigator","clipboard","writeText","copyUri","onInputChange","target","value","name","stopStream","path","removeStream","fetch","then","r","json","j","magnet","catch","StreamRender","undefined","btnClass","c","gStyles","styles","DarkPage","pageTitle","scrolls","onClick","bind","Pad","amt","alt","obsLogo","border","padding","justifyContent","marginBottom","substring","onChange","disabled","Modal","modalOpen","toggleModal","contentStyle","Loader","overlay","fullScreen"],"mappings":"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","file":"static/js/22.a03eebf9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst REACT_APP_SL_SEED_URI = \"https://webtorrent.shock.network\";\nconst STREAM_STATUS_URI = `${REACT_APP_SL_SEED_URI}/rtmpapi/api/streams/live`;\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const {liveStatus} = item\n  useEffect(() =>{\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  },[item])\n  useEffect(()=>{\n    console.log(\"status:\",liveStatus)\n  },[item])\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {!isLive && liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!isLive && !liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stream-type-btn\":\"GoLive_stream-type-btn__3sNtJ\",\"stream-type-btn-icon\":\"GoLive_stream-type-btn-icon__2p9-P\",\"obs-logo\":\"GoLive_obs-logo__1p3Hh\"};","export default __webpack_public_path__ + \"static/media/obs-2.7c61e78e.svg\";","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport c from \"classnames\";\n\nimport \"../css/index.scoped.css\";\nimport { addStream, removeStream } from \"../../../actions/ContentActions\";\nimport Loader from \"../../../common/Loader\";\nimport Http from \"../../../utils/Http\";\nimport obsLogo from \"../../../images/obs-2.svg\";\nimport Stream from \"../../../common/Post/components/Stream\";\nimport { RequestToken } from \"../../../utils/seed\";\nimport { useHistory } from \"react-router\";\nimport Modal from \"../../../common/Modal\";\nimport * as Store from \"../../../store\";\nimport DarkPage from \"../../../common/DarkPage\";\nimport * as gStyles from \"../../../styles\";\nimport Line from \"../../../common/Line\";\nimport Pad from \"../../../common/Pad\";\n\nimport Static from \"./components/Static\";\nimport CamFeed from \"./components/CamFeed\";\nimport styles from \"./css/GoLive.module.css\";\n\nconst GoLive = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const seedProviderPub = Store.useSelector(\n    ({ content }) => content.seedProviderPub\n  );\n  const { seedUrl, seedToken } = Store.useSelector(\n    ({ content }) => content.seedInfo\n  );\n  const streamLiveToken = Store.useSelector(\n    ({ content }) => content.streamLiveToken\n  );\n  const streamUserToken = Store.useSelector(\n    ({ content }) => content.streamUserToken\n  );\n  const availableTokens = Store.useSelector(\n    ({ content }) => content.availableTokens\n  );\n  const streamPostId = Store.useSelector(\n    ({ content }) => content.streamPostId\n  );\n  const streamContentId = Store.useSelector(\n    ({ content }) => content.streamContentId\n  );\n  const streamStatusUrl = Store.useSelector(\n    ({ content }) => content.streamStatusUrl\n  );\n  const streamUrl = Store.useSelector(({ content }) => content.streamUrl);\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const [selectedSource, setSelectedSource] = useState<\"camera\" | \"obs\">(\"obs\");\n  const [loading, setLoading] = useState(false);\n  const [streamToken, setStreamToken] = useState(streamLiveToken);\n  const [, setUserToken] = useState(streamUserToken);\n  const [paragraph, setParagraph] = useState(\"Look I'm streaming!\");\n  const [isLive,setIsLive] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [rtmpUri, setRtmpUri] = useState(\"\");\n  const [promptInfo, setPromptInfo] = useState(null);\n  const [starting, setStarting] = useState(false);\n  const [update,setUpdate] = useState(0)\n  // effect to update live status\n  useEffect(() => {\n    if(!streamStatusUrl){\n      return\n    }\n    let timeout\n    const interval = setInterval(async ()=>{\n      try{\n        const res = await Http.get(streamStatusUrl);\n        if (!res.data.isLive) {\n          return\n        }\n        setIsLive(true)\n        clearInterval(interval)\n        timeout = setTimeout(()=>{\n          console.info(\"upp\")\n          setUpdate(Date.now())\n        },5000)\n      }catch(e){\n      }\n\n    },2000)\n    return () => {\n      clearInterval(interval)\n      clearTimeout(timeout)\n    }\n  },[streamStatusUrl,setIsLive])\n  const onSubmitCb = useCallback(\n    async (servicePrice?, serviceID?) => {\n      try {\n        setLoading(true);\n        const { seedUrl: finalSeedUrl, tokens } = await RequestToken({\n          availableTokens,\n          seedProviderPub,\n          seedToken,\n          seedUrl,\n          serviceID,\n          servicePrice\n        });\n        const [latestUserToken] = tokens;\n        setUserToken(latestUserToken);\n        const { data: streamData } = await Http.post(\n          `${finalSeedUrl}/api/stream/auth`,\n          {\n            token: latestUserToken\n          }\n        );\n        const { token: obsToken } = streamData.data;\n        console.log(obsToken);\n        const liveToken = `${latestUserToken}?key=${obsToken}`;\n        setStreamToken(`${latestUserToken}?key=${obsToken}`);\n        const streamPlaybackUrl = `${finalSeedUrl}/rtmpapi/live/${latestUserToken}/index.m3u8`;\n        const rtmp = finalSeedUrl.replace(\"https\", \"rtmp\");\n        setRtmpUri(`${rtmp}/live`);\n        const stUrl = `${finalSeedUrl}/rtmpapi/api/streams/live/${latestUserToken}`\n        let contentItems = [];\n        if (paragraph !== \"\") {\n          contentItems.push({\n            type: \"text/paragraph\",\n            text: paragraph\n          });\n        }\n        contentItems.push({\n          type: \"stream/embedded\",\n          width: 0,\n          height: 0,\n          magnetURI: streamPlaybackUrl,\n          isPreview: false,\n          isPrivate: false,\n          userToken: latestUserToken,\n          liveStatus:'waiting',\n          statusUrl: stUrl\n        });\n        \n        const res = await Http.post(`/api/gun/wall`, {\n          tags: [],\n          title: \"Post\",\n          contentItems\n        });\n        if (res.status === 200) {\n          const {data} = res\n          const [postId,newPost] = data\n          console.log(newPost.contentItems)\n          //@ts-expect-error\n          const [contentId] = Object.entries(newPost.contentItems).find(([_,item]) => item.magnetURI === streamPlaybackUrl)\n          addStream({\n            seedToken:latestUserToken, \n            liveToken, \n            streamUrl:streamPlaybackUrl,\n            streamPostId:postId,\n            streamContentId:contentId,\n            streamStatusUrl:stUrl})(dispatch);\n          await Http.post(`/api/listenStream`,{\n            postId,\n            contentId,\n            statusUrl: `${finalSeedUrl}/rtmpapi/api/streams/live/${latestUserToken}`\n          })\n          console.log(\"post created successfully\");\n          setLoading(false);\n        } else {\n          setError(\"invalid response status\");\n          setLoading(false);\n        }\n      } catch (err) {\n        console.log(err);\n        setError(err?.errorMessage ?? err?.message);\n        setLoading(false);\n      }\n    },\n    [availableTokens, seedProviderPub, seedToken, seedUrl, dispatch, paragraph]\n  );\n  const closePrompt = useCallback(() => {\n    setPromptInfo(null);\n  }, [setPromptInfo]);\n\n  const submitPrompt = useCallback(() => {\n    const { servicePrice, serviceID } = promptInfo;\n    onSubmitCb(servicePrice, serviceID);\n    setPromptInfo(null);\n  }, [promptInfo, onSubmitCb, setPromptInfo]);\n\n  const onSubmit = useCallback(\n    async e => {\n      try {\n        if (starting) {\n          return;\n        }\n        setStarting(true);\n        e.preventDefault();\n        let availableToken = false;\n        for (const key in availableTokens) {\n          if (Object.prototype.hasOwnProperty.call(availableTokens, key)) {\n            const element = availableTokens[key];\n            if (element[0]) {\n              availableToken = true;\n              break;\n            }\n          }\n        }\n        let serviceID = \"\";\n        if (userProfiles[seedProviderPub]) {\n          //@ts-expect-error\n          serviceID = userProfiles[seedProviderPub].SeedServiceProvided;\n        }\n        if (availableToken || (seedUrl && seedToken)) {\n          onSubmitCb();\n        } else if (serviceID && seedProviderPub) {\n          const { data: service } = await Http.get(\n            `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${serviceID}`\n          );\n          const { servicePrice } = service.data;\n          console.log(service);\n          setPromptInfo({ servicePrice, serviceID });\n        } else {\n          setError(\"No way found to publish content\");\n        }\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setStarting(false);\n      }\n    },\n    [\n      starting,\n      userProfiles,\n      seedProviderPub,\n      seedUrl,\n      seedToken,\n      availableTokens,\n      onSubmitCb\n    ]\n  );\n  const copyToken = useCallback(() => {\n    navigator.clipboard.writeText(streamToken);\n  }, [streamToken]);\n  const copyUri = useCallback(() => {\n    navigator.clipboard.writeText(rtmpUri);\n  }, [rtmpUri]);\n  const onInputChange = useCallback(\n    e => {\n      const { value, name } = e.target;\n      switch (name) {\n        case \"paragraph\": {\n          setParagraph(value);\n          return;\n        }\n        case \"source\": {\n          setSelectedSource(value);\n          return;\n        }\n        default:\n          return;\n      }\n    },\n    [setParagraph, setSelectedSource]\n  );\n  const stopStream = useCallback(() => {\n    Http.post(\"/api/gun/put\", {\n      path: `$user>posts>${streamPostId}>contentItems>${streamContentId}>liveStatus`,\n      value: 'wasLive'\n    });\n    removeStream()(dispatch);\n    console.info(\"doing it!!\")\n    console.info(streamUserToken)\n    fetch(`https://webtorrent.shock.network/api/stream/torrent/${streamUserToken}`)\n    .then(r => r.json())\n    .then(j => {\n      const {magnet} = j\n      if(!magnet){\n        return\n      }\n      Http.post(\"/api/gun/put\", {\n        path: `$user>posts>${streamPostId}>contentItems>${streamContentId}>playbackMagnet`,\n        value: magnet\n      });\n    })\n    .catch(e => console.info(e))\n    history.push(\"/profile\");\n  }, [dispatch, history,streamUserToken]);\n\n  const StreamRender = useMemo(() => {\n    return (\n      <Stream\n        hideRibbon={true}\n        item={{ magnetURI: streamUrl,liveStatus:'live' }}\n        timeout={1500}\n        id={undefined}\n        index={undefined}\n        postId={undefined}\n        tipCounter={undefined}\n        tipValue={undefined}\n        width={undefined}\n      />\n    );\n  }, [streamUrl,update]);\n\n  const btnClass = c(\n    gStyles.col,\n    gStyles.centerJustify,\n    gStyles.centerAlign,\n    styles[\"stream-type-btn\"]\n  );\n\n  return (\n    <>\n      <DarkPage pageTitle=\"GO LIVE\" scrolls>\n      {isLive && <div>{StreamRender}</div>}\n        {/*hide for now since it's not implemented and causes a duplication*/ }\n        {/*!isLive && selectedSource === \"camera\" ? <CamFeed /> : <Static /> */}\n\n        <div className={c(gStyles.rowCentered, gStyles.width100)}>\n          <div\n            className={btnClass}\n            onClick={setSelectedSource.bind(null, \"camera\")}\n          >\n            <i\n              className={c(styles[\"stream-type-btn-icon\"], \"fas\", \"fa-camera\")}\n            ></i>\n\n            <Pad amt={16} />\n            <Line\n              color={selectedSource === \"camera\" ? \"#4285b9\" : \"white\"}\n              length={36}\n              type=\"horizontal\"\n              width={2}\n            />\n          </div>\n\n          <div\n            className={btnClass}\n            onClick={setSelectedSource.bind(null, \"obs\")}\n          >\n            <img alt=\"\" className={styles[\"obs-logo\"]} src={obsLogo} />\n\n            <Pad amt={16} />\n            <Line\n              color={selectedSource === \"obs\" ? \"#4285b9\" : \"white\"}\n              length={36}\n              type=\"horizontal\"\n              width={2}\n            />\n          </div>\n        </div>\n\n        <div className={gStyles.commonPaddingH}>\n          {(() => {\n            if (error) {\n              return (\n                <>\n                  <p> An error ocurred: </p>\n\n                  <br />\n\n                  <p className=\"error-container\">{error}</p>\n\n                  <button\n                    className=\"shock-form-button\"\n                    onClick={setError.bind(null, null)}\n                  >\n                    Dismiss\n                  </button>\n                </>\n              );\n            }\n\n            if (streamToken) {\n              return (\n                <>\n                  {selectedSource === \"obs\" && (\n                    <p className=\"m-b-1\">\n                      You are ready to go! setup the stream with OBS and watch\n                      it from your profile\n                    </p>\n                  )}\n\n                  <p>Broadcaster:</p>\n\n                  <div\n                    style={{\n                      border: \"1px solid var(--main-blue)\",\n                      padding: \"0.5rem\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"1rem\"\n                    }}\n                  >\n                    <p>\n                      {rtmpUri.substring(0, 20) +\n                        (rtmpUri.length > 21 ? \"...\" : \"\")}\n                    </p>\n                    <i className=\"far fa-copy\" onClick={copyUri}></i>\n                  </div>\n                  <p>Stream Key:</p>\n                  <div\n                    style={{\n                      border: \"1px solid var(--main-blue)\",\n                      padding: \"0.5rem\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"1rem\"\n                    }}\n                  >\n                    <p>\n                      {streamToken.substring(0, 20) +\n                        (streamToken.length > 21 ? \"...\" : \"\")}\n                    </p>\n                    <i className=\"far fa-copy\" onClick={copyToken}></i>\n                  </div>\n                  <div className=\"flex-center\">\n                    <button\n                      onClick={stopStream}\n                      className=\"shock-form-button-confirm\"\n                    >\n                      STOP\n                    </button>\n                  </div>\n                </>\n              );\n            }\n\n            return (\n              <>\n                <input\n                  className=\"input-field\"\n                  type=\"text\"\n                  name=\"paragraph\"\n                  id=\"paragraph\"\n                  value={paragraph}\n                  onChange={onInputChange}\n                />\n                <button\n                  onClick={onSubmit}\n                  className={c(gStyles.width100, \"shock-form-button-confirm\")}\n                  disabled={selectedSource === \"camera\" || starting}\n                >\n                  {starting ? \"...\" : \"START NOW\"}\n                </button>\n              </>\n            );\n          })()}\n        </div>\n      </DarkPage>\n\n      {promptInfo && (\n        <Modal\n          modalOpen={promptInfo && !loading}\n          toggleModal={closePrompt}\n          contentStyle={{\n            padding: \"1rem\"\n          }}\n        >\n          <p>\n            The service from the default service provider will cost:{\" \"}\n            <strong>{promptInfo.servicePrice} sats</strong>\n          </p>\n\n          <div className={gStyles.rowCentered}>\n            <button className=\"shock-form-button m-1\" onClick={closePrompt}>\n              Cancel\n            </button>\n            <button\n              className=\"shock-form-button-confirm m-1\"\n              onClick={submitPrompt}\n            >\n              Confirm\n            </button>\n          </div>\n        </Modal>\n      )}\n\n      {loading ? <Loader overlay fullScreen text=\"Creating stream...\" /> : null}\n    </>\n  );\n};\n\nexport default GoLive;\n"],"sourceRoot":""}