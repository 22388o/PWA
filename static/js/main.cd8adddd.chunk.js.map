{"version":3,"sources":["actions/OrdersActions.js","utils/Http.js","utils/WebSocket.js","actions/AuthActions.ts","common/Loader/index.js","common/Post/components/TipRibbon/index.js","common/Post/components/Stream/index.tsx","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.js","reducers/DrawerReducer.js","reducers/ContentReducer.ts","reducers/FeesReducer.ts","reducers/FeedReducer.js","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/AppReducer.ts","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/selectors/publishedContent.ts","store/selectors/feed.ts","store/selectors/index.ts","store/index.ts","utils/Date.ts","utils/index.ts","actions/ContentActions.ts","actions/ChatActions.js","actions/WalletActions.js","utils/JSON.ts","utils/Encryption.ts","actions/NodeActions.js","schema/index.ts","actions/UserProfilesActions.ts","actions/FeedActions.js","utils/dialogCallback.ts","actions/AppActions.ts","common/Drawer/index.js","App.js","utils/ui.tsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js","utils/Error.ts","utils/FieldError.ts","actions/EncryptionActions.js","actions/DrawerActions.js","utils/String.js","actions/FeesActions.js","utils/Gun.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","serviceID","dispatch","a","id","Http","post","path","value","data","ok","newID","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","rifle","query","publicKey","reconnect","onData","services","servicesEntries","forEach","get","service","type","serviceInfo","buyService","owner","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","store","hostKeys","getState","encryption","hostId","node","remotePublicKey","process","REACT_APP_SHOCK_ENCRYPTION_ECC","warn","Encryption","message","stringify","encryptedMessage","decryptResponse","userKeys","localPrivateKey","privateKey","decryptedMessage","interceptors","request","use","authToken","deviceId","relayId","localRequest","url","indexOf","headers","common","Authorization","method","toUpperCase","includes","error","reject","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","transports","rifleSubscriptions","Map","GunSocket","LNDSocket","connectSocket","host","socketOptions","auth","encryptionId","connected","disconnectSocket","SocketIO","emit","GunOn","encryptedOn","event","subscription","subscriptionId","key","onError","on","Common","setAuthenticated","err","field","cachedNodeIP","hostIP","connectHost","socket","off","close","decryptEventCallback","callback","encryptedEmit","eventName","encryptedData","responses","decryptedResponses","subscribeSocket","resolve","then","token","unsubscribeRifleById","unsubscribeEvent","delete","unsubscribeRifleByQuery","Array","from","debug","$shock","set","rifleCleanup","subscriptions","unsubscribe","getChats","res","_","sub","chats","contacts","chat","pk","recipientPublicKey","avatar","recipientAvatar","displayName","recipientDisplayName","didDisconnect","messages","reduce","filter","body","trim","initialMessagePrefix","sort","b","timestamp","getSentRequests","sentRequests","getReceivedRequests","receivedRequests","changedAddress","recipientChangedRequestAddress","RESET_AUTH_INFO","SET_AUTH_STEP","SET_AUTHENTICATED","SET_AUTH_METHOD","LOGOUT","SAVE_INVITE","SET_RELAY_ID","status","setAuthStep","step","setAuthMethod","logout","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","window","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","TipRibbon","tipCounter","tipValue","zoomed","opacity","Stream","item","index","postId","hideRibbon","width","playerDOM","timeout","useRef","useState","isLive","videoStyle","liveStatus","useEffect","player","videojs","current","autoplay","muted","aspectRatio","src","magnetURI","play","cursor","display","ref","preload","controls","autoPlay","INITIAL_STATE","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","webClientPrefix","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","SET_ATTEMPTS_DONE","AUTH_ACTIONS","SET_WEBCLIENT_PREFIX","authenticated","authStep","invite","defaultSteps","manual","shockWizard","shockCloud","hostingTiers","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","lightningInfo","_getUnifiedTransactionDate","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","LOAD_LIGHTNING_INFO","requestBlacklist","_identicalMessages","oldMessage","newMessage","localId","_sortMessages","_processNewMessage","outgoing","userMessages","existingMessage","sortedMessages","LOAD_CHAT_DATA","LOAD_SENT_REQUESTS","requestPublicKeys","pendingRequests","loading","LOAD_RECEIVED_REQUESTS","SENT_REQUEST","Date","now","ACCEPT_HANDSHAKE_REQUEST","requestId","DECLINE_HANDSHAKE_REQUEST","SENDING_MESSAGE","Schema","SENDING","SENT_MESSAGE","SENT","FAILED_MESSAGE","FAILED","RECEIVED_MESSAGE","RECEIVED","CHAT_WAS_DELETED","produce","draft","idx","findIndex","c","splice","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","streamPostId","streamContentId","streamStatusUrl","streamBroadcasterUrl","publishedContent","publicContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","publicContentAdded","match","payload","publishedContentAdded","publishedContentRemoved","SET_SEED_PROVIDER_PUB","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","userToken","availableTmp","push","REMOVE_USED_TOKEN","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","user","private","posts","reloadDone","feed","RESET_FOLLOWS","ADD_FOLLOW","existingFollow","find","follow","REMOVE_FOLLOW","UPDATE_FOLLOW","profile","ADD_USER_POST","receivedPost","authorId","userPosts","existingPostIndex","tmp","DELETE_USER_POST","LOAD_POSTS","LOAD_SHARED_POST","sharerId","updatedPosts","originalPost","RELOAD_FEED","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","NODE_ACTIONS","RESET_USER_PROFILES","LOAD_USER_PROFILE","REMOVE_USER_PROFILE","profiles","UPDATE_USER_PROFILE","newProfile","oldProfile","CHAT_ACTIONS","req","myServices","boughtServices","orders","servicesTmp","selectedService","dialogText","dialogHasCallback","app","OPEN_DIALOG","hasCallback","CLOSE_DIALOG","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","AppReducer","users","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectFollows","createSelector","f","selectOwnPublishedContent","privateContent","selectFeedPosts","pickBy","selectRoot","selectIsInContact","isContact","hasSentReq","r","hasReceivedReq","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","useDispatch","originalUseDispatch","useForceUpdate","React","setTick","useCallback","tick","formatTimestamp","relativeTime","DateTime","fromMillis","toRelative","logger","resizeImage","img","desiredLongEdge","compression","canvas","document","createElement","Math","round","getContext","drawImage","toDataURL","processImageFile","file","startsWith","TypeError","size","rej","reader","FileReader","onload","e","target","result","ArrayBuffer","onFail","Error","onerror","onabort","readAsArrayBuffer","imageBuffer","URL","webkitURL","createObjectURL","Blob","_image","Image","image","resizedImage","normalizeURL","_url","__url","protocol","href","getContact","contact","EMPTY_FN","useBooleanState","initialState","setState","_state","parseJson","o","PUBLISHED_CONTENT_ADDED","PUBLISHED_CONTENT_REMOVED","setSeedProviderPub","pub","dontBackup","setSeedInfo","cleanUrl","endsWith","slice","infoS","createAction","addPublishedContent","isPublicContentItem","unlockContent","postID","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","noDialog","openDialog","addAvailableToken","removeUnavailableToken","addStreamToken","OWN_PUBLISHED_CONTENT_QUERY","subOwnPublishedContent","parsed","isPublishedContent","unsubOwnPublishedContent","subOwnPublicContent","alert","SET_CHAT_CONTACTS","SET_CHAT_MESSAGES","loadChatData","loadSentRequests","loadReceivedRequests","requestorPK","requestorAvatar","requestorDisplayName","subscribeChatMessages","userPublicKey","incomingId","rawMsg","msg","incomingMessages","Utils","acceptHandshakeRequest","put","accept","sendHandshakeRequest","sendMessage","tempId","utc","toMillis","chatWasDeleted","subChats","subReceivedRequests","subSentRequests","fetchWalletBalance","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","FetchLightningInfo","safeParseJSON","nonEncryptedEvents","convertBase64ToBuffer","Buffer","convertBufferToBase64","processKey","Uint8Array","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","FieldError","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","fetchNodeHealth","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","resetData","done","health","baseURL","setRelayId","throttledExchangeKeyPair","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","decodedToken","jwtDecode","authorization","exp","parseError","createAlias","createWallet","setWebclientPrefix","prefix","CHAT_MESSAGE_STATUS","isSharedPost","obj","originalAuthor","description","title","author","subscribedProfiles","Set","updateUserProfile","subscribeUserProfile","has","info","binarySub","header","unsubscribeUserProfile","RESET_FEED","POST_TIPPED","removeFollow","addFollow","loadSharedPost","originalPostId","originalPublicKey","sharerPublicKey","tipSet","tipsSet","values","lenSet","length","tot","acc","val","USER_POSTS_QUERY_SUFFIX","subscribeUserPosts","postEntries","newPosts","GUN_PROPS","deletedPosts","USER_SHARED_POSTS_QUERY_SUFFIX","subscribeSharedUserPosts","shared","processedPost","shareDate","undefined","FOLLOWS_QUERY","subscribeFollows","unsubscribeFollows","sendTipPost","deleteUserPost","reloadFeed","dialogCallback","callDialogCallBack","cb","addDialogCallback","closeDialog","executeCb","Drawer","Store","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","lazy","AdvancedPage","WalletSettingsPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","CreatePostPage","GoLivePage","OtherUserPage","Story","Stories","QRScannerPage","BackupsPage","PublicContentItemPage","PrivateRoute","component","authorizedComponent","App","history","useHistory","update","setUpdate","setIsLive","showFloatingPlayer","setShowFloatingPlayer","interval","setInterval","clearInterval","setTimeout","clearTimeout","StreamRender","useMemo","stopStream","contentId","endUrl","urlForMagnet","obsToken","addLanguage","tokenExpired","JWTDecode","elementId","elmnt","getElementById","pos1","pos2","pos3","pos4","onpointerdown","preventDefault","clientX","clientY","onpointerup","closeDragElement","onpointermove","elementDrag","top","offsetTop","left","offsetLeft","dragElement","loadContentInfo","serviceProvider","seedData","JObject","loadStreamInfo","streamData","DialogClose","ConfirmDialog","fallback","exact","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","errorMessage","stack","exchangingKeypair","addUserKeyPair","addHostKey","getDeviceId","APIPublicKey","openDrawer","capitalizeText","split","word","toLowerCase","join","processDisplayName","suffix","loadFeeRates","setSource","setRate"],"mappings":"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","file":"static/js/main.cd8adddd.chunk.js","sourcesContent":["import Http from \"../utils/Http\";\nimport {\n  rifle,\n  rifleSocketExists,\n  unsubscribeRifleById\n} from \"../utils/WebSocket\";\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE: \"service/add/bought\"\n};\n\nexport const createService = (\n  clear,\n  encrypted,\n  serviceID\n) => async dispatch => {\n  let id = serviceID;\n  if (serviceID) {\n    const { data } = await Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}`,\n      value: clear\n    });\n    const { ok } = data;\n    if (!ok) {\n      return \"\";\n    }\n  } else {\n    const { data } = await Http.post(\"/api/gun/set\", {\n      path: \"$user>offeredServices\",\n      value: clear\n    });\n    const { ok, id: newID } = data;\n    if (!ok) {\n      return \"\";\n    }\n    id = newID;\n  }\n\n  const all = Object.entries(encrypted).map(([name, value]) => {\n    if (!value) {\n      return;\n    }\n    console.log(`setting: ${name} to ${value}`);\n    return Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}>${name}`,\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value\n      }\n    });\n  });\n  await Promise.all(all);\n  const { serviceType } = clear;\n  //update the offered service\n  if (serviceType === \"torrentSeed\" || serviceType === \"streamSeed\") {\n    console.log(\"updating profile with service\");\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>Profile>SeedServiceProvided`,\n      value: id\n    });\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id;\n};\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post(\"/api/gun/put\", {\n    path: `$user>offeredServices>${id}`,\n    value: null\n  });\n};\n\nexport const subscribeMyServices = () => dispatch => {\n  const query = `$user::offeredServices::on`;\n  const subscription = rifle({\n    query,\n    publicKey: \"\",\n    reconnect: false,\n    onData: async services => {\n      const servicesEntries = Object.entries(services);\n      console.log(servicesEntries);\n\n      servicesEntries.forEach(async ([id]) => {\n        if (id === \"_\") {\n          return;\n        }\n        const { data: service } = await Http.get(\n          `/api/gun/user/load/offeredServices>${id}`\n        );\n        console.log(service.data);\n        if (service.data === null) {\n          dispatch({\n            type: ACTIONS.REMOVE_MY_SERVICE,\n            data: id\n          });\n          return;\n        }\n        dispatch({\n          type: ACTIONS.ADD_MY_SERVICE,\n          data: { id, serviceInfo: service.data }\n        });\n      });\n    }\n  });\n\n  return subscription;\n};\n\nexport const buyService = (\n  owner,\n  serviceID,\n  servicePrice\n) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"service\",\n    amt: Number(servicePrice),\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: serviceID\n  });\n  console.log(data);\n  const orderAck = JSON.parse(data.orderAck.response);\n  dispatch({\n    type: ACTIONS.ADD_BOUGHT_SERVICE,\n    data: { orderAck, owner, serviceID }\n  });\n  return orderAck;\n};\n","import Http from \"axios\";\nimport * as Encryption from \"./Encryption\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\") {\n    return config;\n  }\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return response;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const { relayId } = store.getState().node;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n      if(relayId){\n        /////\n        config.headers.common[\"x-shock-hybrid-relay-id-x\"] = relayId;\n        /////\n      }\n    }\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Common from \"shock-common\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"./String\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\nimport { connectHost } from \"../actions/NodeActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').Subscription} Subscription\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true,\n  transports: [\"websocket\"]\n};\n\nconst rifleSubscriptions = new Map();\n\n/** @type {import(\"socket.io-client\").Socket<import(\"socket.io-client/build/typed-events\").DefaultEventsMap, import(\"socket.io-client/build/typed-events\").DefaultEventsMap>} */\nexport let GunSocket = null;\n\n/** @type {import(\"socket.io-client\").Socket<import(\"socket.io-client/build/typed-events\").DefaultEventsMap, import(\"socket.io-client/build/typed-events\").DefaultEventsMap>} */\nexport let LNDSocket = null;\n\nexport const connectSocket = async (host = \"\", reconnect = false) => {\n  const { store } = await import(\"../store\");\n  const socketOptions = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId\n    }\n  };\n\n  if (GunSocket?.connected && LNDSocket?.connected && !reconnect) {\n    return { GunSocket, LNDSocket };\n  }\n\n  if (GunSocket && LNDSocket && reconnect) {\n    disconnectSocket(GunSocket);\n    disconnectSocket(LNDSocket);\n  }\n\n  GunSocket = SocketIO(`${host}/gun`, socketOptions);\n  LNDSocket = SocketIO(`${host}/lndstreaming`, socketOptions);\n  \n  const relayId = store.getState().node.relayId\n  if(relayId){\n    GunSocket.emit('hybridRelayId',{id:relayId})\n    LNDSocket.emit('hybridRelayId',{id:relayId})\n  }\n\n  const GunOn = encryptedOn(GunSocket);\n\n  // Subscribe to Rifle query events as soon as the socket is connected\n  GunOn(\"query:data\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onData?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunOn(\"query:error\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onError?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunSocket.on(Common.NOT_AUTH, () => {\n    store.dispatch(setAuthenticated(false));\n  });\n  //TODO listen on relay error\n  GunSocket.on(\"encryption:error\", async err => {\n    if (err.field === \"deviceId\" || err.message === \"Bad Mac\") {\n      const {hostIP:cachedNodeIP,relayId} = store.getState().node;\n      await store.dispatch(connectHost(cachedNodeIP, false,relayId));\n      store.dispatch(setAuthenticated(false));\n    }\n  });\n\n  return { GunSocket, LNDSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: data\n    });\n\n    callback(err, decryptedMessage);\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.emit(eventName, message, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message: JSON.stringify(message)\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        if (!response) {\n          return response;\n        }\n\n        if (response && !Encryption.isEncryptedMessage(response)) {\n          console.warn(\"Non-encrypted socket message\", response);\n          return response;\n        }\n\n        return Encryption.decryptMessage({\n          privateKey: localPrivateKey,\n          encryptedMessage: response\n        });\n      })\n    );\n\n    callback(...decryptedResponses);\n  });\n};\n\n/**\n * @returns {Promise<Subscription>}\n */\nexport const subscribeSocket = ({ eventName, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const on = encryptedOn(GunSocket);\n        const emit = encryptedEmit(GunSocket);\n\n        emit(\n          `subscribe:${eventName}`,\n          {\n            token: store.getState().node.authToken\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              reject(err);\n              return;\n            }\n          }\n        );\n\n        if (callback) {\n          on(eventName, data => {\n            callback(null, data);\n          });\n        }\n\n        resolve({\n          off() {\n            emit(`unsubscribe:${eventName}`);\n          }\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const unsubscribeRifleById = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n\n  if (cachedSocket) {\n    unsubscribeEvent(subscriptionId);\n    rifleSubscriptions.delete(subscriptionId);\n  }\n};\n\nexport const unsubscribeRifleByQuery = query => {\n  const subscriptionEntries = Array.from(rifleSubscriptions.entries());\n\n  subscriptionEntries.map(([id, subscription]) => {\n    if (subscription.query === query) {\n      console.log(\"Unsubscribing by query:\", subscription);\n      unsubscribeRifleById(id);\n      return true;\n    }\n\n    return false;\n  });\n};\n\nexport const unsubscribeEvent = subscriptionId =>\n  new Promise(resolve => {\n    const emit = encryptedEmit(GunSocket);\n    emit(\n      \"unsubscribe\",\n      {\n        subscriptionId\n      },\n      () => {\n        console.debug(\n          `[SOCKET] Unsubscribed from event successfully! (${subscriptionId})`\n        );\n        resolve(true);\n      }\n    );\n  });\n\nexport const rifleSocketExists = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} query\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {boolean=} reconnect\n * @prop {(data, key) => void} onData\n * @prop {((error) => void)=} onError\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.onData(callback)` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map().once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<{ off: () => void }>}\n */\nexport const rifle = ({ query, publicKey, reconnect, onData, onError }) =>\n  new Promise((resolve, reject) => {\n    import(\"../store\").then(({ store }) => {\n      if (reconnect) {\n        unsubscribeRifleByQuery(query);\n      }\n\n      const emit = encryptedEmit(GunSocket);\n\n      emit(\n        \"subscribe:query\",\n        {\n          $shock: query,\n          token: store.getState().node.authToken,\n          publicKey\n        },\n        (err, data) => {\n          if (err) {\n            console.error(`Gun rifle error (${query})`);\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          rifleSubscriptions.set(data.subscriptionId, {\n            onData,\n            onError,\n            query\n          });\n\n          resolve({\n            off: () => unsubscribeRifleById(data.subscriptionId)\n          });\n        }\n      );\n    });\n  });\n\n/**\n * @param {Promise<Subscription>[]} subscriptions\n */\nexport const rifleCleanup = (...subscriptions) => () => {\n  subscriptions.map(subscription =>\n    subscription.then(unsubscribe => {\n      unsubscribe.off();\n    })\n  );\n};\n\n/**\n * @returns {Promise<{ messages: any , contacts: Contact[]}>}\n */\nexport const getChats = async () => {\n  try {\n    const chats = await new Promise(res => {\n      const subscription = subscribeSocket({\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        },\n        eventName: \"chats\"\n      });\n    });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName,\n      didDisconnect: chat.didDisconnect\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleSentRequest[]>}\n */\nexport const getSentRequests = async () => {\n  try {\n    const sentRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"sentRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleReceivedRequest[]>}\n */\nexport const getReceivedRequests = async () => {\n  try {\n    const receivedRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"receivedRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","// @ts-check\nexport const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\",\n  SAVE_INVITE: \"auth/save/invite\",\n  SET_RELAY_ID: \"auth/relay/set\"\n\n};\n\nexport const setAuthenticated = status => ({\n  type: ACTIONS.SET_AUTHENTICATED,\n  data: status\n});\n\nexport const setAuthStep = step => ({\n  type: ACTIONS.SET_AUTH_STEP,\n  data: step\n});\n\nexport const setAuthMethod = method => ({\n  type: ACTIONS.SET_AUTH_METHOD,\n  data: method\n});\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\n\nexport const saveInvite = (invite) => ({\n  type: ACTIONS.SAVE_INVITE,\n  data:invite\n});\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.scoped.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\")\n    .matches;\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","import \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const {liveStatus} = item\n  useEffect(() =>{\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  },[item])\n  useEffect(()=>{\n    console.log(\"status:\",liveStatus)\n  },[item])\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {!isLive && liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!isLive && !liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false,\n  webClientPrefix:\"https://lightning.page\",\n  relayId:null\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n    case ACTIONS.SET_RELAY_ID:{\n      return {\n        ...state,\n        relayId:action.data\n      }\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    case ACTIONS.SET_WEBCLIENT_PREFIX:{\n      return {...state, webClientPrefix:action.data}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null,\n  invite:null,\n  relayId:null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\",\n  hostingTiers: \"chooseTier\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.SAVE_INVITE: {\n      return {\n        ...state,\n        invite:action.data\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: [],\n  lightningInfo:{},\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    case ACTIONS.LOAD_LIGHTNING_INFO:{\n      const {data}  = action\n      return {\n        ...state,\n        lightningInfo:data\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\nimport produce from \"immer\";\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n */\n/**\n * @template S\n * @typedef {import('redux').Reducer<S, AnyAction>} Reducer\n */\n\nimport * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').ReceivedRequest} ReceivedRequest\n * @typedef {import(\"../schema\").SentRequest} SentRequest\n *\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').LoadSentRequestsAction} LoadSentRequestsAction\n */\n\nconst INITIAL_STATE = {\n  contacts: /** @type {Contact[]} */ ([]),\n  /**\n   * @type {Record<string, Schema.ChatMessage[]>}\n   */\n  messages: {},\n  sentRequests: /** @type {SentRequest[]} */ ([]),\n  receivedRequests: /** @type {ReceivedRequest[]} */ ([]),\n  requestBlacklist: []\n};\n\n/**\n * @param {Schema.ChatMessage} oldMessage\n * @param {Schema.ChatMessage} newMessage\n * @returns {boolean}\n */\nconst _identicalMessages = (oldMessage, newMessage) =>\n  oldMessage.id && newMessage.id\n    ? oldMessage.id === newMessage.id\n    : oldMessage.localId === newMessage.localId;\n\n/**\n * @param {Schema.ChatMessage[]} messages\n * @returns {Schema.ChatMessage[]}\n */\nconst _sortMessages = (messages = []) =>\n  messages.sort((a, b) => b.timestamp - a.timestamp);\n\n/**\n * @typedef {object} ProcessNewMessageParams\n * @prop {Schema.ChatMessage} data\n * @prop {Schema.ChatMessageStatus} status\n * @prop {typeof INITIAL_STATE} state\n * @prop {boolean=} outgoing\n */\n\n/**\n * @param {ProcessNewMessageParams} args\n * @returns {typeof INITIAL_STATE}\n */\nconst _processNewMessage = ({ data, status, state, outgoing = false }) => {\n  const userMessages = state.messages[data.recipientPublicKey] ?? [];\n  const [existingMessage] = userMessages.filter(message =>\n    _identicalMessages(message, data)\n  );\n\n  if (existingMessage) {\n    console.warn(\"Duplicate Message:\", existingMessage?.body);\n  }\n\n  if (existingMessage) {\n    const messages = userMessages.map(message =>\n      _identicalMessages(message, existingMessage)\n        ? { ...existingMessage, ...data, status, outgoing }\n        : message\n    );\n    const sortedMessages = _sortMessages(messages);\n\n    return {\n      ...state,\n      messages: {\n        ...state.messages,\n        [data.recipientPublicKey]: sortedMessages\n      }\n    };\n  }\n\n  const messages = [{ ...data, status, outgoing }, ...userMessages];\n  const sortedMessages = _sortMessages(messages);\n\n  return {\n    ...state,\n    messages: {\n      ...state.messages,\n      [data.recipientPublicKey]: sortedMessages\n    }\n  };\n};\n\n/**\n * @type {Reducer<typeof INITIAL_STATE>}\n */\nconst chat = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_CHAT_DATA: {\n      const {\n        data: { contacts, messages }\n      } = /** @type {LoadChatDataAction} */ (action);\n      return {\n        ...state,\n        contacts,\n        // TODO: Could not replacing messages altogether be bad?\n        messages: {\n          ...state.messages,\n          ...messages\n        }\n      };\n    }\n    case ACTIONS.LOAD_SENT_REQUESTS: {\n      const {\n        data: sentRequests\n      } = /** @type {LoadSentRequestsAction} */ (action);\n      const requestPublicKeys = state.sentRequests.map(request => request.pk);\n      const pendingRequests = state.sentRequests.filter(\n        request => request.loading && !requestPublicKeys.includes(request.pk)\n      );\n\n      return {\n        ...state,\n        sentRequests: [...pendingRequests, ...sentRequests]\n      };\n    }\n    case ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      const {\n        data: receivedRequests\n      } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n      return {\n        ...state,\n        receivedRequests\n      };\n    }\n    case ACTIONS.SENT_REQUEST: {\n      const { data: publicKey } = /** @type {SentRequestAction} */ (action);\n      return {\n        ...state,\n        sentRequests: [\n          ...state.sentRequests,\n          {\n            avatar: null,\n            changedAddress: false,\n            displayName: null,\n            id: \"loading/\" + publicKey,\n            pk: publicKey,\n            timestamp: Date.now(),\n            loading: true\n          }\n        ]\n      };\n    }\n    case ACTIONS.ACCEPT_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      return {\n        ...state,\n        receivedRequests: state.receivedRequests.filter(\n          request => request.id !== requestId\n        )\n      };\n    }\n    case ACTIONS.DECLINE_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      if (!requestId || !requestId.trim()) {\n        return state;\n      }\n\n      return {\n        ...state,\n        requestBlacklist: [...state.requestBlacklist, requestId]\n      };\n    }\n    case ACTIONS.SENDING_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENDING,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.SENT_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.FAILED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.FAILED,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.RECEIVED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.RECEIVED,\n        state\n      });\n    }\n    case ACTIONS.CHAT_WAS_DELETED: {\n      const {\n        data: { publicKey }\n      } = action;\n      return produce(state, draft => {\n        const idx = draft.contacts.findIndex(c => c.pk === publicKey);\n        idx > -1 && draft.contacts.splice(idx, 1);\n        delete draft.messages[publicKey];\n        draft.messages[publicKey] = [];\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import produce from \"immer\";\n\nimport {\n  ACTIONS,\n  publishedContentAdded,\n  publishedContentRemoved,\n  publicContentAdded\n} from \"../actions/ContentActions\";\nimport { PublishedContent, PublicContentItem } from \"../schema\";\n\nconst INITIAL_STATE = {\n  seedProviderPub:\n    \"JVz7h3yUnbgMwwKxSddGenBlrE9eeDJVYWlmOr941mI.LW5PEWM3Y-DRf-UApdSN76wH6id6zR4mXNyBApihoAA\",\n  streamUserToken: \"\",\n  streamLiveToken: \"\",\n  streamUrl: \"\",\n  streamPostId: \"\",\n  streamContentId: \"\",\n  streamStatusUrl: \"\",\n  streamBroadcasterUrl: \"\",\n  publishedContent: {} as Record<string, PublishedContent>,\n  publicContent: {} as Record<string, PublicContentItem>,\n  unlockedContent: {},\n  seedInfo: {} as { seedUrl?: string; seedToken?: string },\n  availableTokens: {},\n  availableStreamTokens: {}\n};\n\nconst content = (state = INITIAL_STATE, action): typeof INITIAL_STATE => {\n  if (publicContentAdded.match(action)) {\n    return produce(state, draft => {\n      const { item } = action.payload;\n      if (!draft.publicContent[item.id]) {\n        draft.publicContent[item.id] = item;\n      }\n    });\n  }\n  if (publishedContentAdded.match(action)) {\n    return produce(state, draft => {\n      const {\n        payload: { content, res }\n      } = action;\n      if (res.ok) {\n        draft.publishedContent[res.id] = content;\n      }\n    });\n  }\n\n  if (publishedContentRemoved.match(action)) {\n    return produce(state, draft => {\n      delete draft.publishedContent[action.payload.id];\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n\n    case ACTIONS.ADD_UNLOCKED_CONTENT: {\n      const { data } = action;\n      const unlockedTmp = { ...state.unlockedContent };\n      unlockedTmp[data.contentPath] = data.content;\n      return { ...state, unlockedContent: unlockedTmp };\n    }\n    case ACTIONS.ADD_STREAM: {\n      const { data } = action;\n      return {\n        ...state,\n        streamLiveToken: data.liveToken,\n        streamUserToken: data.seedToken,\n        streamUrl: data.streamUrl,\n        streamPostId: data.streamPostId,\n        streamContentId: data.streamContentId,\n        streamStatusUrl: data.streamStatusUrl,\n        streamBroadcasterUrl: data.streamBroadcasterUrl\n      };\n    }\n    case ACTIONS.REMOVE_STREAM: {\n      return {\n        ...state,\n        streamLiveToken: \"\",\n        streamUserToken: \"\",\n        streamUrl: \"\",\n        streamPostId: \"\",\n        streamContentId: \"\",\n        streamStatusUrl: \"\",\n        streamBroadcasterUrl: \"\"\n      };\n    }\n    case ACTIONS.SET_SEED_INFO: {\n      const { data } = action;\n      return { ...state, seedInfo: data };\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_USED_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableTokens: availableTmp };\n      }\n      return state;\n    }\n    case ACTIONS.ADD_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableStreamTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableStreamTokens: availableTmp };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/FeesActions\";\n\nexport interface FeesState {\n  source: string;\n\n  rate: Schema.FeeRate;\n\n  feeRates: Record<Schema.FeeRate, number>;\n}\n\nconst INITIAL_STATE: FeesState = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n\n  rate: \"halfHourFee\",\n\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (\n  state: FeesState = INITIAL_STATE,\n  action: { type: string; data: any }\n): FeesState => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        feeRates: INITIAL_STATE[\"feeRates\"],\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Follow} Follow\n */\n\nimport { ACTIONS } from \"../actions/FeedActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n/**\n * @typedef {import('../schema').Post} Post\n * @typedef {import('../schema').SharedPost} SharedPost\n */\n\nconst INITIAL_STATE = {\n  follows: /** @type {Follow[]} */ ([\n    {\n      user:\n        \"JVz7h3yUnbgMwwKxSddGenBlrE9eeDJVYWlmOr941mI.LW5PEWM3Y-DRf-UApdSN76wH6id6zR4mXNyBApihoAA\",\n      status: \"ok\",\n      private: false\n    }\n  ]),\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: /** @type {Record<string, Array<Post|SharedPost>>} */ ({}),\n  reloadDone: false\n};\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst feed = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FOLLOWS: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.ADD_USER_POST: {\n      const { data } = action;\n      /** @type {SharedPost} */\n      const receivedPost = data;\n      const authorId = receivedPost.authorId;\n      const userPosts = state.posts[authorId] ?? [];\n      const existingPostIndex = userPosts.findIndex(\n        post => receivedPost.id === post.id\n      );\n\n      const tmp = [...userPosts];\n\n      if (existingPostIndex !== -1) {\n        tmp[existingPostIndex] = receivedPost;\n      } else {\n        tmp.push(receivedPost);\n      }\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: tmp\n        }\n      };\n    }\n    case ACTIONS.DELETE_USER_POST: {\n      const { id, authorId } = action.data;\n      const userPosts = (state.posts[authorId] ?? []).filter(\n        post => post.id !== id\n      );\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: userPosts\n        }\n      };\n    }\n    case ACTIONS.LOAD_POSTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        posts: data\n      };\n    }\n    case ACTIONS.LOAD_SHARED_POST: {\n      const { data } = action;\n      const { id, sharerId } = data;\n      const userPosts = state.posts[sharerId] ?? [];\n      const updatedPosts = userPosts.map(post => {\n        if (post.id === id && post.type === \"shared\") {\n          return {\n            ...post,\n            originalPost: data\n          };\n        }\n\n        return post;\n      });\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [sharerId]: updatedPosts\n        }\n      };\n    }\n    case ACTIONS.RELOAD_FEED: {\n      return { ...state, reloadDone: true };\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as CHAT_ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import(\"../actions/ChatActions\").LoadSentRequestsAction} LoadSentRequestsAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n */\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_USER_PROFILE: {\n      const { publicKey, profile } = action.data;\n\n      if (!publicKey || !profile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey],\n          ...profile\n        }\n      };\n    }\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { publicKey, profile: newProfile } = action.data;\n      const oldProfile = state[publicKey];\n\n      if (!oldProfile || !newProfile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...oldProfile,\n          ...newProfile\n        }\n      };\n    }\n    case CHAT_ACTIONS.LOAD_CHAT_DATA: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadChatDataAction} */ (action);\n\n        data.contacts.forEach(({ pk }) => {\n          if (!draft[pk]) {\n            draft[pk] = Common.createEmptyUser(pk);\n          }\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_SENT_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadSentRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.SENT_REQUEST: {\n      return produce(state, draft => {\n        const { data: pk } = /** @type {SentRequestAction} */ (action);\n\n        if (!draft[pk]) {\n          draft[pk] = Common.createEmptyUser(pk);\n        }\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n  myServices: {},\n  services: {},\n  boughtServices: {}\n};\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const { id, serviceInfo } = action.data;\n      const tmp = { ...state.myServices };\n      tmp[id] = serviceInfo;\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE: {\n      const id = action.data;\n      const tmp = { ...state.myServices };\n      delete tmp[id];\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE: {\n      const { orderAck, owner, serviceID } = action.data;\n      const servicesTmp = { ...state.boughtServices };\n\n      if (!servicesTmp[owner]) {\n        servicesTmp[owner] = {};\n      }\n      const selectedService = servicesTmp[owner];\n      if (!selectedService[serviceID]) {\n        selectedService[serviceID] = [];\n      }\n      selectedService[serviceID].push(orderAck);\n      return { ...state, boughtServices: servicesTmp };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/AppActions\";\n\nconst INITIAL_STATE = {\n  dialogText: '',\n  dialogHasCallback:false\n};\nconst app = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.OPEN_DIALOG: {\n      const {text,hasCallback} = action.data\n      return { ...state, dialogText: text,dialogHasCallback:hasCallback };\n    }\n    case ACTIONS.CLOSE_DIALOG: {\n      return {...state, dialogText: '',dialogHasCallback: false}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","import { combineReducers } from \"redux\";\nimport * as Common from \"shock-common\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\";\nimport AppReducer from \"./AppReducer\";\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders: OrdersReducer,\n  app:AppReducer,\n  users: () => {\n    return {} as Record<string, Common.User>;\n  }\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = (publicKey: string) => (\n  state: State\n): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey);\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectFollows = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.follows,\n  (selfPublicKey, follows) => {\n    return follows.filter(f => f.user !== selfPublicKey);\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { PublishedContent } from \"../../schema\";\n\nexport const selectOwnPublishedContent = createSelector(\n  (state: State) => state.content.publishedContent,\n  (state: State) => state.content.publicContent,\n  (privateContent, publicContent): Record<string, PublishedContent> => {\n    return {\n      ...privateContent,\n      ...publicContent\n    };\n  }\n);\n","import pickBy from \"lodash/pickBy\";\nimport { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectFeedPosts = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.posts,\n  (selfPublicKey, posts) => {\n    // TODO: fix self-follow bug\n    return pickBy(posts, (_, publicKey) => publicKey !== selfPublicKey);\n  }\n);\n","import {\n  useSelector as originalUseSelector,\n  TypedUseSelectorHook\n} from \"react-redux\";\n\nimport { State } from \"../../reducers\";\n\nexport const useSelector: TypedUseSelectorHook<State> = (selector, eqFn) =>\n  originalUseSelector(selector, eqFn);\n\nexport const selectRoot = (state: State) => state;\n\nexport const selectIsInContact = (publicKey: string) => (\n  state: State\n): boolean => {\n  const {\n    chat: { contacts, sentRequests, receivedRequests }\n  } = state;\n\n  const isContact = !!contacts.find(c => c.pk === publicKey);\n  const hasSentReq = !!sentRequests.find(r => r.pk === publicKey);\n  const hasReceivedReq = !!receivedRequests.find(r => r.pk === publicKey);\n\n  return isContact || hasSentReq || hasReceivedReq;\n};\n\nexport * from \"./auth\";\nexport * from \"./users\";\nexport * from \"./follows\";\nexport * from \"./publishedContent\";\nexport * from \"./feed\";\n","import {\n  createStore,\n  applyMiddleware,\n  compose,\n  AnyAction,\n  Action\n} from \"redux\";\nimport thunk, { ThunkDispatch } from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport {\n  useSelector as origUseSelector,\n  useDispatch as originalUseDispatch\n} from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport const useDispatch = (): ThunkDispatch<State, undefined, Action> => {\n  return originalUseDispatch() as ThunkDispatch<State, undefined, Action>;\n};\n\nexport * from \"./selectors\";\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\n\nexport function useForceUpdate(): () => void {\n  const [, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return update;\n}\n\n/**\n * Handle the ugly \"in 0 seconds\" cases (returning \"Just now\"), returns an empty\n * string if the timestamp is -1.\n */\nexport const formatTimestamp = (timestamp: number): string => {\n  if (timestamp === -1) {\n    return \"\";\n  }\n  const relativeTime = DateTime.fromMillis(timestamp).toRelative();\n  return relativeTime === \"in 0 seconds\" ? \"Just now\" : relativeTime;\n};\n","import * as Common from \"shock-common\";\nimport { useCallback, useState } from \"react\";\n\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args),\n  debug: (...args: any[]) => console.debug(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not a url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n\nexport const useBooleanState = (initialState: boolean) => {\n  const [state, setState] = useState<boolean>(initialState);\n  const toggle = useCallback(() => {\n    setState(_state => !_state);\n  }, []);\n\n  return [state, toggle] as const;\n};\n\nexport const parseJson = (o: string) => JSON.parse(o) as unknown;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\nimport {\n  PublishedContent,\n  isPublishedContent,\n  PublicContentItem,\n  isPublicContentItem\n} from \"../schema\";\nimport { parseJson, logger } from \"../utils\";\nimport { openDialog } from \"./AppActions\";\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB: \"content/setSeedProviderPub\",\n  SET_SEED_INFO: \"content/setSeedInfo\",\n\n  PUBLISHED_CONTENT_ADDED: \"content/publishedContentAdded\",\n  PUBLISHED_CONTENT_REMOVED: \"content/publishedContentRemoved\",\n\n  ADD_UNLOCKED_CONTENT: \"content/addUnlocked\",\n  ADD_STREAM: \"content/addStream\",\n  REMOVE_STREAM: \"content/removeStream\",\n  ADD_AVAILABLE_TOKEN: \"content/addToken\",\n  REMOVE_USED_TOKEN: \"content/removeToken\",\n  ADD_STREAM_TOKEN: \"content/addStreamToken\",\n  REMOVE_STREAM_TOKEN: \"content/removeStreamToken\"\n} as const;\n\nexport const setSeedProviderPub = (\n  pub,\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    let value: string | Record<string, any> = {\n      $$__ENCRYPT__FOR: \"me\",\n      value: pub\n    };\n    if (!pub) {\n      value = \"\";\n    }\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>seedServiceProviderPubKey\",\n      value\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (\n  seedUrl: string,\n  seedToken: string,\n  dontBackup = false\n) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0, -1) : seedUrl;\n  if (!dontBackup) {\n    const infoS = JSON.stringify({ seedUrl: cleanUrl, seedToken });\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>seedServiceSeedData\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: infoS\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: { seedUrl: cleanUrl, seedToken }\n  });\n};\n\nexport const publishedContentAdded = createAction<{\n  content: PublishedContent;\n  res: { ok: boolean; id: string };\n}>(ACTIONS.PUBLISHED_CONTENT_ADDED);\n\nexport const publicContentAdded = createAction<{\n  item: PublicContentItem;\n}>(\"content/publicContentAdded\");\n\nexport const addPublishedContent = (\n  content: PublishedContent | PublicContentItem,\n  type: \"public\" | \"private\"\n) => async dispatch => {\n  if (type === \"public\") {\n    if (!isPublicContentItem(content)) {\n      throw new TypeError(\n        `Expected content to upload to be a PublicContentItem`\n      );\n    }\n\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>publishedContentPublic>${content.id}`,\n      value: content\n    });\n\n    dispatch(\n      publicContentAdded({\n        item: content\n      })\n    );\n\n    return content;\n  } else {\n    const { data } = await Http.post<{ ok: boolean; id: string }>(\n      \"/api/gun/set\",\n      {\n        path: \"$user>publishedContent\",\n        value: {\n          $$__ENCRYPT__FOR: \"me\",\n          value: JSON.stringify(content)\n        }\n      }\n    );\n    dispatch(\n      publishedContentAdded({\n        content,\n        res: data\n      })\n    );\n    return data;\n  }\n};\n\nexport const publishedContentRemoved = createAction<{ id: string }>(\n  ACTIONS.PUBLISHED_CONTENT_REMOVED\n);\n\nexport const unlockContent = (amt, owner, postID) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"contentReveal\",\n    amt,\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: postID\n  });\n  const revealRes = data.orderAck.response;\n  if (revealRes && revealRes.unlockedContents) {\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type: ACTIONS.ADD_UNLOCKED_CONTENT,\n          data: { contentPath: `${owner}>posts>${postID}`, content }\n        });\n      }\n    }\n  }\n};\nexport const addStream = (\n  {\n    seedToken,\n    liveToken,\n    streamUrl,\n    streamPostId,\n    streamContentId,\n    streamStatusUrl,\n    streamBroadcasterUrl\n  },\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: JSON.stringify({\n          seedToken,\n          liveToken,\n          streamUrl,\n          streamPostId,\n          streamContentId,\n          streamStatusUrl,\n          streamBroadcasterUrl\n        })\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {\n      seedToken,\n      liveToken,\n      streamUrl,\n      streamPostId,\n      streamContentId,\n      streamStatusUrl,\n      streamBroadcasterUrl\n    }\n  });\n};\nexport const removeStream = (\n  dontBackup = false,\n  noDialog = false\n) => async dispatch => {\n  if (!noDialog) {\n    openDialog({\n      text: \"The recording of the stream will be published in a few moments.\"\n    })(dispatch);\n  }\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: \"NO DATA\"\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeUnavailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\n\nconst OWN_PUBLISHED_CONTENT_QUERY = \"$user::publishedContent::map.on\";\n\nexport const subOwnPublishedContent = () => async (\n  dispatch: (action: any) => void,\n  getState: () => { node: { publicKey: string } }\n) => {\n  console.debug(`Subscribing to own published content`);\n  const subscription = await rifle({\n    query: OWN_PUBLISHED_CONTENT_QUERY,\n    reconnect: true,\n    publicKey: getState().node.publicKey,\n    onData: async (content: string, key) => {\n      try {\n        console.debug(`Received own content:`);\n        console.debug(content);\n\n        if (typeof key !== \"string\") {\n          throw new TypeError(`Invalid content key received: ${key}`);\n        }\n\n        if (!content) {\n          dispatch(\n            publishedContentRemoved({\n              id: key\n            })\n          );\n          return;\n        }\n\n        if (typeof content !== \"string\") {\n          throw new TypeError(`Invalid content received (${content})`);\n        }\n\n        const parsed = parseJson(content);\n\n        if (!isPublishedContent(parsed)) {\n          throw new TypeError(\n            `Invalid content received (might be incomplete replication): ${JSON.stringify(\n              parsed,\n              null,\n              2\n            )}`\n          );\n        }\n\n        dispatch(\n          publishedContentAdded({\n            content: parsed,\n            res: {\n              id: key,\n              ok: true\n            }\n          })\n        );\n      } catch (e) {\n        console.error(`Error inside own published content sub:`);\n        console.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n\nexport const unsubOwnPublishedContent = () => () => {\n  console.debug(`Unsubbing own published content.`);\n  unsubscribeRifleByQuery(OWN_PUBLISHED_CONTENT_QUERY);\n};\n\nexport const subOwnPublicContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  logger.debug(`Subscribing to own public content`);\n  const subscription = await rifle({\n    query: \"$user::publishedContentPublic::map.on\",\n    reconnect: true,\n    onError(e) {\n      alert(`Error inside own public content rifle: ${JSON.stringify(e)}`);\n      logger.error(`Error inside own public content rifle: `, e);\n    },\n    onData: async (item: unknown) => {\n      try {\n        if (item === null) {\n          return; // was deleted\n        }\n        logger.debug(`Received own public item:`);\n        logger.debug(item);\n\n        if (!isPublicContentItem(item)) {\n          throw new TypeError(\n            `Invalid public content item: ${JSON.stringify(item, null, 2)}`\n          );\n        }\n\n        dispatch(\n          publicContentAdded({\n            item\n          })\n        );\n      } catch (e) {\n        logger.error(`Error inside own public content sub:`);\n        logger.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n","// @ts-check\nimport Http from \"../utils/Http\";\nimport { DateTime } from \"luxon\";\nimport { v4 as uuidv4 } from \"uuid\";\n/**\n * @typedef {import('shock-common').Message} RawMessage\n */\n\nimport {\n  getChats,\n  getReceivedRequests,\n  getSentRequests,\n  rifle,\n  subscribeSocket\n} from \"../utils/WebSocket\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport * as Schema from \"../schema\";\nimport * as Utils from \"../utils\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').SentRequest} SentRequest\n * @typedef {import(\"../schema\").ReceivedRequest} ReceivedRequest\n * @typedef {import('../schema').ChatMessage} ChatMessage\n */\n\nexport const ACTIONS = {\n  LOAD_CHAT_DATA: /** @type {\"chat/loadData\"} */ (\"chat/loadData\"),\n  LOAD_SENT_REQUESTS: /** @type {\"chat/loadSentRequests\"} */ (\"chat/loadSentRequests\"),\n  LOAD_RECEIVED_REQUESTS: /** @type {\"chat/loadReceivedRequests\"} */ (\"chat/loadReceivedRequests\"),\n  SET_CHAT_CONTACTS: \"chat/contacts\",\n  SET_CHAT_MESSAGES: \"chat/messages\",\n  SENT_REQUEST: /** @type {\"chat/request/sent\"} */ (\"chat/request/sent\"),\n  ACCEPT_HANDSHAKE_REQUEST: \"chat/request/accept\",\n  DECLINE_HANDSHAKE_REQUEST: \"chat/request/decline\",\n  SENDING_MESSAGE: \"chat/message/sending\",\n  SENT_MESSAGE: \"chat/message/sent\",\n  FAILED_MESSAGE: \"chat/message/failed\",\n  RECEIVED_MESSAGE: /** @type {\"chat/message/received\"} */ (\"chat/message/received\"),\n  CHAT_WAS_DELETED: /** @type {'chat/deleted'} */ (\"chat/deleted\")\n};\n\n/**\n * @typedef {object} SentRequestAction\n * @prop {typeof ACTIONS.SENT_REQUEST} type\n * @prop {string} data The public key.\n */\n\n/**\n * @typedef {object} LoadChatDataAction\n * @prop {typeof ACTIONS.LOAD_CHAT_DATA} type\n * @prop {{ messages: Record<string, ChatMessage[]> , contacts: Contact[] }} data\n */\n\n/**\n * @typedef {object} LoadSentRequestsAction\n * @prop {typeof ACTIONS.LOAD_SENT_REQUESTS} type\n * @prop {SentRequest[]} data\n */\n\n/**\n * @typedef {object} LoadReceivedRequestsAction\n * @prop {typeof ACTIONS.LOAD_RECEIVED_REQUESTS} type\n * @prop {ReceivedRequest[]} data\n */\n\n/**\n * @typedef {object} ReceivedMessageAction\n * @prop {typeof ACTIONS.RECEIVED_MESSAGE} type\n * @prop {ChatMessage} data\n */\n\nexport const loadChatData = () => async dispatch => {\n  const data = await getChats();\n  console.log(\"LOAD_CHAT_DATA:\", data);\n\n  dispatch({\n    type: ACTIONS.LOAD_CHAT_DATA,\n    data\n  });\n};\n\nexport const loadSentRequests = () => async dispatch => {\n  const sentRequests = await getSentRequests();\n\n  /** @type {LoadSentRequestsAction} */\n  const action = {\n    type: ACTIONS.LOAD_SENT_REQUESTS,\n    data: sentRequests.map(request => {\n      /** @type {SentRequest} */\n      const req = {\n        id: request.id,\n        pk: request.recipientPublicKey,\n        avatar: request.recipientAvatar,\n        displayName: request.recipientDisplayName,\n        changedAddress: request.recipientChangedRequestAddress,\n        timestamp: request.timestamp,\n        loading: false\n      };\n\n      return req;\n    })\n  };\n\n  dispatch(action);\n};\n\nexport const loadReceivedRequests = () => async (dispatch, getState) => {\n  const receivedRequests = await getReceivedRequests();\n\n  /** @type {LoadReceivedRequestsAction} */\n  const action = {\n    type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n    data: receivedRequests.map(request => {\n      /** @type {ReceivedRequest} */\n      const req = {\n        id: request.id,\n        pk: request.requestorPK,\n        avatar: request.requestorAvatar,\n        displayName: request.requestorDisplayName,\n        timestamp: request.timestamp\n      };\n\n      return req;\n    })\n  };\n\n  dispatch(action);\n};\n\n/**\n * @param {string} userPublicKey\n * @param {string} recipientPublicKey\n * @returns {(dispatch: (action: any) => void) => Promise<{off(): void}>}\n */\nexport const subscribeChatMessages = (\n  userPublicKey,\n  recipientPublicKey\n) => async dispatch => {\n  try {\n    const { data: incomingId } = await Http.get(\n      `/api/gun/user/once/userToIncoming>${recipientPublicKey}`,\n      {\n        headers: {\n          \"public-key-for-decryption\": userPublicKey\n        }\n      }\n    );\n\n    if (!incomingId.data) {\n      throw new Error(`Unable to retrieve incoming ID for selected contact.`);\n    }\n\n    const incomingMessages = await rifle({\n      query: `${recipientPublicKey}::outgoings>${incomingId.data}>messages::map.on`,\n      publicKey: recipientPublicKey,\n      onData: (message, id) => {\n        if (!message.body || message.body === initialMessagePrefix) {\n          return;\n        }\n        /** @type {RawMessage} */\n        const rawMsg = message;\n\n        /** @type {ChatMessage} */\n        const msg = {\n          body: rawMsg.body,\n          id,\n          localId: id,\n          outgoing: false,\n          recipientPublicKey,\n          status: Schema.CHAT_MESSAGE_STATUS.SENT,\n          timestamp: rawMsg.timestamp\n        };\n\n        /** @type {ReceivedMessageAction} */\n        const action = {\n          type: ACTIONS.RECEIVED_MESSAGE,\n          data: msg\n        };\n\n        dispatch(action);\n      }\n    });\n\n    return incomingMessages;\n  } catch (e) {\n    Utils.logger.error(\n      `Error inside subscribeChatMessages, recipient public key: ${recipientPublicKey}: `,\n      e\n    );\n    return Promise.resolve({\n      off() {}\n    });\n  }\n};\n\nexport const acceptHandshakeRequest = requestId => async dispatch => {\n  const { data } = await Http.put(`/api/gun/requests/${requestId}`, {\n    accept: true\n  });\n\n  dispatch({\n    type: ACTIONS.ACCEPT_HANDSHAKE_REQUEST,\n    data: requestId\n  });\n\n  return data;\n};\n\nexport const sendHandshakeRequest = publicKey => async (dispatch, getState) => {\n  const { data } = await Http.post(`/api/gun/requests`, {\n    publicKey\n  });\n\n  /** @type {SentRequest[]} */\n  const sentRequests = getState().chat.sentRequests;\n  const [userExists] = sentRequests.filter(request => request.pk === publicKey);\n\n  if (!userExists) {\n    /** @type {SentRequestAction} */\n    const action = {\n      type: ACTIONS.SENT_REQUEST,\n      data: publicKey\n    };\n    dispatch(action);\n  }\n\n  return data;\n};\n\nexport const sendMessage = ({\n  publicKey,\n  message,\n  localId = null\n}) => async dispatch => {\n  const tempId = localId ?? uuidv4();\n  try {\n    dispatch({\n      type: ACTIONS.SENDING_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n    const { data } = await Http.post(`/api/gun/chats/${publicKey}`, {\n      body: message\n    });\n    console.log(data);\n    dispatch({\n      type: ACTIONS.SENT_MESSAGE,\n      data: { ...data, localId: tempId, recipientPublicKey: publicKey }\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIONS.FAILED_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n  }\n};\n\n/**\n * @param {string} publicKey\n */\nexport const chatWasDeleted = publicKey => ({\n  type: ACTIONS.CHAT_WAS_DELETED,\n  data: {\n    publicKey\n  }\n});\n\nexport const subChats = () => async dispatch => {\n  try {\n    console.debug(`Subbing to chats`);\n    const sub = await subscribeSocket({\n      callback(err, chats) {\n        if (err) {\n          console.error(`Error in chats subscription: `, err);\n        } else {\n          console.debug(`sub chat data received: `, chats);\n\n          const contacts = chats.map(chat => ({\n            pk: chat.recipientPublicKey,\n            avatar: chat.recipientAvatar,\n            displayName: chat.recipientDisplayName,\n            didDisconnect: chat.didDisconnect\n          }));\n\n          const messages = chats.reduce(\n            (messages, chat) => ({\n              ...messages,\n              [chat.recipientPublicKey]: chat.messages\n                ?.filter(\n                  message =>\n                    message.body &&\n                    message.body.trim() &&\n                    message.body !== initialMessagePrefix\n                )\n                .sort((a, b) => b.timestamp - a.timestamp)\n            }),\n            {}\n          );\n\n          dispatch({\n            type: ACTIONS.LOAD_CHAT_DATA,\n            data: { contacts, messages }\n          });\n        }\n      },\n      eventName: \"chats\"\n    });\n\n    return sub;\n  } catch (e) {\n    alert(`Could not subscribe to chats: ${e.message}`);\n    console.error(`Could not subscribe to chats: `, e);\n  }\n};\n\nexport const subReceivedRequests = () => async dispatch => {\n  try {\n    console.debug(`Subbing to received requests`);\n    const sub = await subscribeSocket({\n      callback(err, receivedRequests) {\n        if (err) {\n          console.error(`Error in received requests subscription: `, err);\n        } else {\n          console.debug(\n            `sub received requests data received: `,\n            receivedRequests\n          );\n\n          /** @type {LoadReceivedRequestsAction} */\n          const action = {\n            type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n            data: receivedRequests.map(request => {\n              /** @type {ReceivedRequest} */\n              const req = {\n                id: request.id,\n                pk: request.requestorPK,\n                avatar: request.requestorAvatar,\n                displayName: request.requestorDisplayName,\n                timestamp: request.timestamp\n              };\n\n              return req;\n            })\n          };\n\n          dispatch(action);\n        }\n      },\n      eventName: \"receivedRequests\"\n    });\n\n    return sub;\n  } catch (e) {\n    alert(`Could not subscribe to received requests: ${e.message}`);\n    console.error(`Could not subscribe to received requests: `, e);\n  }\n};\n\nexport const subSentRequests = () => async dispatch => {\n  try {\n    console.debug(`Subbing to sent requests`);\n    const sub = await subscribeSocket({\n      callback(err, sentRequests) {\n        if (err) {\n          console.error(`Error in sent requests subscription: `, err);\n        } else {\n          console.debug(`sub sent requests data received: `, sentRequests);\n\n          /** @type {LoadSentRequestsAction} */\n          const action = {\n            type: ACTIONS.LOAD_SENT_REQUESTS,\n            data: sentRequests.map(request => {\n              /** @type {SentRequest} */\n              const req = {\n                id: request.id,\n                pk: request.recipientPublicKey,\n                avatar: request.recipientAvatar,\n                displayName: request.recipientDisplayName,\n                changedAddress: request.recipientChangedRequestAddress,\n                timestamp: request.timestamp,\n                loading: false\n              };\n\n              return req;\n            })\n          };\n\n          dispatch(action);\n        }\n      },\n      eventName: \"sentRequests\"\n    });\n\n    return sub;\n  } catch (e) {\n    alert(`Could not subscribe to sent requests: ${e.message}`);\n    console.error(`Could not subscribe to sent requests: `, e);\n  }\n};\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\",\n  LOAD_LIGHTNING_INFO: \"wallet/lightningInfo/load\",\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  try {\n    const { data } = await Http.get(`/api/lnd/balance`);\n\n    dispatch({\n      type: ACTIONS.LOAD_BALANCE,\n      data: {\n        channelBalance: data.channel_balance,\n        confirmedBalance: data.confirmed_balance,\n        pendingChannelBalance: data.pending_channel_balance\n      }\n    });\n  } catch (e) {\n    console.error(\n      `When trying to fetch the balance for the wallet, an error ocurred:`,\n      e\n    );\n  }\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\n      \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n    );\n    const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n    dispatch({\n      type: ACTIONS.LOAD_USD_RATE,\n      data: exchangeRate\n    });\n  } catch (e) {\n    console.error(`An error happened when trying to fetch the USD rate:`, e);\n  }\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { transactions } = getState().wallet;\n\n    if (\n      (transactions.page >= page && !reset) ||\n      transactions.totalPages < page\n    ) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/transactions\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred when fetching transactions (fetchTransactions()):`,\n      e\n    );\n  }\n};\n\nexport const fetchChannels = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n    dispatch({\n      type: ACTIONS.LOAD_CHANNELS,\n      data: data.channels\n    });\n  } catch (e) {\n    console.error(\n      `An ocurred ocurred when fetching channels (fetchChannels()):`,\n      e\n    );\n  }\n};\n\nexport const fetchPeers = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n    dispatch({\n      type: ACTIONS.LOAD_PEERS,\n      data: data.peers\n    });\n\n    return data;\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching peers (fetchPeers()) (will be re-thrown):`,\n      e\n    );\n    throw e;\n  }\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { invoices } = getState().wallet;\n\n    if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/invoices\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching invoices (fetchInvoices()):`,\n      e\n    );\n  }\n};\n\nconst fetchPayments = ({ page, itemsPerPage = 10, reset = false }) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    const { payments } = getState().wallet;\n\n    if ((payments.page >= page && !reset) || payments.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/payments\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_PAYMENTS : ACTIONS.LOAD_MORE_PAYMENTS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching payments (fetchPayments()):`,\n      e\n    );\n  }\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n  } catch (err) {\n    console.error(\n      `An error ocurred while connecting peer --| ${host} |-- with public key --| ${publicKey} |-- in connectPeer()`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    dispatch(fetchChannels());\n  } catch (err) {\n    console.error(\n      `An error ocurred while opening a channel (openChannel()) with public key --| ${publicKey} |--, channel capacity: --| ${channelCapacity} |-- and push amount: --| ${pushAmount} |--:`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const FetchLightningInfo = () =>async dispatch => {\n  \n  try{\n    const {data}= await Http.get(\"/api/lnd/getinfo\");\n    dispatch({\n      type:ACTIONS.LOAD_LIGHTNING_INFO,\n      data\n    })\n  }catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n}\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Uint8Array;\n  ephemPublicKey: Uint8Array;\n  iv: Uint8Array;\n  mac: Uint8Array;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Uint8Array | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Uint8Array | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Uint8Array) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Uint8Array | string): Uint8Array => {\n  if (key instanceof Uint8Array) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName) ||\n  process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\";\n\nexport const generateKeyPair = () => {\n  const privateKey: Uint8Array = ECCrypto.generatePrivate();\n  const publicKey: Uint8Array = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  const processedPrivateKey = processKey(privateKey);\n  const decryptedMessageBuffer: Uint8Array = await ECCrypto.decrypt(\n    processedPrivateKey,\n    convertToEncryptedMessage(encryptedMessage)\n  );\n  const decryptedMessage = Buffer.from(decryptedMessageBuffer).toString();\n  const parsedMessage = safeParseJSON(decryptedMessage);\n\n  return parsedMessage;\n};\n","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { throttledExchangeKeyPair } from \"./EncryptionActions\";\nimport { connectSocket } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_WEBCLIENT_PREFIX:'node/setWebClientPrefix',\n  SET_RELAY_ID: 'auth/relay/set'\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nconst wait = ms => new Promise(r => setTimeout(r, ms));\n\nexport const fetchNodeHealth = (hostIP,relayId) => async dispatch => {\n  try {\n    const headers = {}\n    if(relayId){\n      headers['x-shock-hybrid-relay-id-x'] = relayId\n    }\n    const { data } = await Http.get(`${hostIP}/healthz`,{\n      headers\n    });\n    if (!data) {\n      throw new Error(\n        `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n      );\n    }\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (hostIP, resetData = true, relayId = null) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n    if(relayId){\n      dispatch(setRelayId(relayId))\n    }\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(throttledExchangeKeyPair())\n    ]);\n\n    connectSocket(host, true);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(`https://${sanitizedHostIP}`,relayId)(\n      dispatch\n    );\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(`http://${sanitizedHostIP}`,relayId)(\n    dispatch\n  );\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({ alias, password,invite = null }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/auth\",\n      {\n        alias,\n        password,\n        invite\n      },\n      {\n        // Unlocking can take significantly longer than other endpoints\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({ alias, password,invite = null }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password,\n      invite\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({ alias, password,invite = null }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/wallet\",\n      {\n        alias,\n        password,\n        invite\n      },\n      {\n        // Creating a wallet can take longer than any other endpoints.\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const setWebclientPrefix = prefix => dispatch => {\n  dispatch({\n    type:ACTIONS.SET_WEBCLIENT_PREFIX,\n    data:prefix\n  })\n}\n\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});","import * as Common from \"shock-common\";\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  didDisconnect: boolean;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  type: \"post\";\n}\n\n/**\n * Different from the one in shock-common.\n */\nexport interface SharedPost extends Common.SharedPostRaw {\n  authorId: string;\n  sharerId: string;\n  id: string;\n  type: \"shared\";\n  /**\n   * Undefined when loading it.\n   */\n  originalPost?: Post;\n}\n\nexport const isSharedPost = (post: any): post is SharedPost => {\n  if (!Common.isObj(post)) {\n    return false;\n  }\n\n  const obj = (post as unknown) as SharedPost;\n\n  if (typeof obj.authorId !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.id !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.originalAuthor !== \"string\") {\n    return false;\n  }\n\n  return obj.type === \"shared\";\n};\n\nexport interface PublishedContent {\n  type: \"image/embedded\" | \"video/embedded\";\n  magnetURI: string;\n  width: number;\n  height: number;\n  title: string;\n  description: string;\n}\n\nexport const isPublishedContent = (o: unknown): o is PublishedContent => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublishedContent;\n\n  if (typeof obj.description !== \"string\") {\n    return false;\n  }\n  if (typeof obj.height !== \"number\") {\n    return false;\n  }\n  if (typeof obj.width !== \"number\") {\n    return false;\n  }\n  if (!Common.isPopulatedString(obj.title)) {\n    return false;\n  }\n  if (obj.type !== \"image/embedded\" && obj.type !== \"video/embedded\") {\n    return false;\n  }\n  return true;\n};\n\nexport interface Subscription {\n  off(): void;\n}\n\nexport interface PublicContentItem extends PublishedContent {\n  id: string;\n  author: string;\n  timestamp: number;\n}\n\nexport const isPublicContentItem = (o: unknown): o is PublicContentItem => {\n  if (!isPublishedContent(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublicContentItem;\n\n  if (!Common.isPopulatedString(obj.author)) {\n    return false;\n  }\n\n  return typeof obj.timestamp === \"number\";\n};\n\nexport type FeeRate = \"hourFee\" | \"halfHourFee\" | \"fastestFee\";\n","import * as Common from \"shock-common\";\n\nimport * as Utils from \"../utils\";\nimport {\n  rifle,\n  rifleCleanup,\n  unsubscribeRifleByQuery\n} from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  LOAD_USER_PROFILE: \"userProfiles/profiles/load\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\",\n  UPDATE_USER_PROFILE: \"userProfiles/profiles/update\"\n};\n\nconst subscribedProfiles = new Set();\n\nexport const updateUserProfile = (\n  publicKey: string,\n  profile: Partial<Common.User>\n) => ({\n  type: ACTIONS.UPDATE_USER_PROFILE,\n  data: {\n    publicKey,\n    profile\n  }\n});\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => (\n  dispatch: (action: object) => void,\n  getState: () => {\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  if (subscribedProfiles.has(publicKey)) {\n    return () => {};\n  }\n\n  console.info(\"subbing user...\" + publicKey);\n  subscribedProfiles.add(publicKey);\n\n  const subscription = rifle({\n    query: `${publicKey}::Profile::on`,\n    reconnect: true,\n    onData: profile => {\n      const { [publicKey]: existingUser } = getState().userProfiles;\n\n      if (existingUser) {\n        dispatch({\n          type: ACTIONS.UPDATE_USER_PROFILE,\n          data: { publicKey, profile }\n        });\n        return profile;\n      }\n\n      dispatch({\n        type: ACTIONS.LOAD_USER_PROFILE,\n        data: { publicKey, profile }\n      });\n    }\n  });\n\n  const binarySub = rifle({\n    query: `${publicKey}::profileBinary::map.on`,\n    reconnect: true,\n    onData: (data, key: string) => {\n      if (key === \"avatar\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updateUserProfile(publicKey, {\n            avatar: data\n          })\n        );\n      } else if (key === \"header\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updateUserProfile(publicKey, {\n            header: data\n          })\n        );\n      } else {\n        Utils.logger.error(\n          `Unknown key: ${key} for user binary profile data gun RPC socket`\n        );\n      }\n    }\n  });\n\n  return () => {\n    rifleCleanup(subscription, binarySub)();\n    subscribedProfiles.delete(publicKey);\n  };\n};\n\nexport const unsubscribeUserProfile = (publicKey: string) => async () => {\n  unsubscribeRifleByQuery(`${publicKey}::Profile::on`);\n  unsubscribeRifleByQuery(`${publicKey}::profileBinary::map.on`);\n};\n","// @ts-check\nimport { GUN_PROPS } from \"../utils/Gun\";\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\",\n  RELOAD_FEED: \"feed/reload\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const loadSharedPost = (\n  originalPostId,\n  originalPublicKey,\n  sharerPublicKey\n) => async dispatch => {\n  const { data: post } = await Http.get(\n    `/api/gun/otheruser/${originalPublicKey}/load/posts>${originalPostId}`\n  );\n  dispatch(subscribeUserProfile(originalPublicKey));\n  const tipSet = post.data.tipsSet ? Object.values(post.data.tipsSet) : [];\n  const lenSet = tipSet.length;\n  const tot =\n    lenSet > 0 ? tipSet.reduce((acc, val) => Number(val) + Number(acc)) : 0;\n  dispatch({\n    type: ACTIONS.LOAD_SHARED_POST,\n    data: {\n      ...post.data,\n      authorId: originalPublicKey,\n      sharerId: sharerPublicKey,\n      id: originalPostId,\n      tipCounter: lenSet,\n      tipValue: tot\n    }\n  });\n};\n\nconst USER_POSTS_QUERY_SUFFIX = `::posts::on`;\n\nexport const subscribeUserPosts = publicKey => async dispatch => {\n  console.info(\"subbing to posts from:\" + publicKey);\n  const subscription = await rifle({\n    query: publicKey + USER_POSTS_QUERY_SUFFIX,\n    onData: posts => {\n      console.debug(`posts from: ${publicKey}: `, posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n      const deletedPosts = postEntries\n        .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      newPosts.forEach(async function fetchAndDispatchPost(id) {\n        try {\n          const { data: post } = await Http.get(\n            `/api/gun/otheruser/${publicKey}/load/posts>${id}`\n          );\n          console.info(`processing post: ${id} from ${publicKey}`);\n          const tipSet = post.data.tipsSet\n            ? Object.values(post.data.tipsSet)\n            : [];\n          const lenSet = tipSet.length;\n          const tot =\n            lenSet > 0\n              ? tipSet.reduce((acc, val) => Number(val) + Number(acc))\n              : 0;\n          dispatch({\n            type: ACTIONS.ADD_USER_POST,\n            data: {\n              ...post.data,\n              id,\n              authorId: publicKey,\n              type: \"post\",\n              tipCounter: lenSet,\n              tipValue: tot\n            }\n          });\n        } catch (e) {\n          console.error(\n            `When subscribed to posts from public key --| ${publicKey} |-- and trying to download the post with id: --| ${id} |-- an error ocurred:`,\n            e\n          );\n        }\n      });\n\n      deletedPosts.forEach(id =>\n        dispatch({\n          type: ACTIONS.DELETE_USER_POST,\n          data: {\n            id,\n            authorId: publicKey,\n            type: \"post\"\n          }\n        })\n      );\n    }\n  });\n  return subscription;\n};\n\nexport const unsubUserPosts = publicKey => async () => {\n  console.info(\"unsubbing to posts from:\" + publicKey);\n  unsubscribeRifleByQuery(publicKey + USER_POSTS_QUERY_SUFFIX);\n};\n\nconst USER_SHARED_POSTS_QUERY_SUFFIX = `::sharedPosts::on`;\n\nexport const subscribeSharedUserPosts = publicKey => async dispatch => {\n  const subscription = await rifle({\n    query: publicKey + USER_SHARED_POSTS_QUERY_SUFFIX,\n    onData: posts => {\n      console.debug(`shared posts from ${publicKey}: `, posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n      const deletedPosts = postEntries\n        .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      newPosts.forEach(async function fetchAndDispatchSharedPost(id) {\n        try {\n          const res = await Http.get(\n            `/api/gun/otheruser/${publicKey}/load/sharedPosts>${id}`\n          );\n          const { data: shared } = res;\n          if (!shared.data || !shared.data.originalAuthor) {\n            throw new Error(\n              `invalid shared post provided for user ${publicKey}`\n            );\n          }\n          /** @type {import('shock-common').SharedPostRaw} */\n          const post = res.data.data;\n\n          /** @type {import('../schema').SharedPost} */\n          const processedPost = {\n            authorId: publicKey,\n            id,\n            originalAuthor: post.originalAuthor,\n            shareDate: post.shareDate,\n            sharerId: publicKey,\n            originalPost: undefined,\n            type: \"shared\"\n          };\n          dispatch({\n            type: ACTIONS.ADD_USER_POST,\n            data: processedPost\n          });\n\n          console.debug(\"dispatching shared post load\");\n          dispatch(loadSharedPost(id, post.originalAuthor, publicKey));\n        } catch (e) {\n          console.error(`User: ${publicKey}\\npostID: ${id}\\n error:`, e);\n        }\n      });\n\n      deletedPosts.forEach(id =>\n        dispatch({\n          type: ACTIONS.DELETE_USER_POST,\n          data: {\n            id,\n            authorId: publicKey\n          }\n        })\n      );\n    }\n  });\n  return subscription;\n};\n\nexport const unsubUserSharedPosts = publicKey => () => {\n  unsubscribeRifleByQuery(publicKey + USER_SHARED_POSTS_QUERY_SUFFIX);\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async dispatch => {\n  const subscription = await rifle({\n    query: FOLLOWS_QUERY,\n    reconnect: true,\n    onData: async (follow, key) => {\n      console.info(`processing follow`);\n      console.info(follow);\n      if (typeof key !== \"string\") {\n        console.warn(`Invalid follow key received: ${key}`);\n        return;\n      }\n\n      if (!follow) {\n        dispatch(removeFollow(key));\n        return;\n      }\n\n      if (typeof follow.user !== \"string\") {\n        console.warn(`Invalid follow user received (${follow.user})`);\n        return;\n      }\n\n      dispatch(addFollow(follow));\n    }\n  });\n\n  console.debug(\"subbing follows\");\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  unsubscribeRifleByQuery(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n\nexport const reloadFeed = () => ({\n  type: ACTIONS.RELOAD_FEED\n});\n","let dialogCallback = null\nexport const addDialogCallback = cb => {\n    dialogCallback = cb\n}\n\nexport const callDialogCallBack = async () => {\n    if(!dialogCallback){\n        return Promise.resolve()\n    }\n    return dialogCallback()\n}","import {\n  addDialogCallback,\n  callDialogCallBack\n} from '../utils/dialogCallback'\nexport const ACTIONS = {\n  OPEN_DIALOG: \"app/openDialog\",\n  CLOSE_DIALOG:\"app/closeDialog\"\n};\nexport const openDialog = ({text,cb = null}) => dispatch => {\n  addDialogCallback(cb)\n  dispatch({\n    type: ACTIONS.OPEN_DIALOG,\n    data: {text,hasCallback: !!cb}\n  });\n};\n\nexport const closeDialog = executeCb => dispatch => {\n  if(executeCb){\n    callDialogCallBack()\n  }\n  dispatch({\n    type: ACTIONS.CLOSE_DIALOG\n  });\n}","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <NavLink to=\"/Backups\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </NavLink>\n          <NavLink to=\"/walletSettings\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\" />\n            </div>\n            <p className=\"drawer-item-title unselectable\">Wallet Settings</p>\n          </NavLink>\n        </div>\n        <div className=\"drawer-bottom-section\">\n          {/*<NavLink className=\"drawer-item\" to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>*/}\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n          <NavLink to=\"/QRScanner\" onClick={close}>\n            <i\n              onClick={onClickScan}\n              className=\"icon-solid-scan\"\n              style={{ color: \"var(--main-blue)\" }}\n            ></i>\n          </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\n\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as Store from \"./store\";\nimport \"./styles/App.global.css\";\nimport Stream from \"./common/Post/components/Stream\";\nimport { dragElement } from \"./utils/ui\";\nimport { Http } from \"./utils\";\nimport {\n  addStream,\n  removeStream,\n  setSeedInfo,\n  setSeedProviderPub\n} from \"./actions/ContentActions\";\nimport { closeDialog } from \"./actions/AppActions\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst WalletSettingsPage = React.lazy(() => import(\"./pages/WalletSettings\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/PublishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst CreatePostPage = React.lazy(() => import(\"./pages/Profile/CreatePost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/GoLive/GoLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst Story = React.lazy(() => import(\"./pages/Story\"));\nconst Stories = React.lazy(() => import(\"./pages/Stories\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\nconst BackupsPage = React.lazy(() => import(\"./pages/Backups\"));\nconst PublicContentItemPage = React.lazy(() =>\n  import(\"./pages/PublicContentItem\")\n);\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const streamUrl = Store.useSelector(({ content }) => content.streamUrl);\n  const streamStatusUrl = Store.useSelector(\n    ({ content }) => content.streamStatusUrl\n  );\n  const streamContentId = Store.useSelector(\n    ({ content }) => content.streamContentId\n  );\n  const streamPostId = Store.useSelector(({ content }) => content.streamPostId);\n  const streamUserToken = Store.useSelector(\n    ({ content }) => content.streamUserToken\n  );\n  const streamLiveToken = Store.useSelector(\n    ({ content }) => content.streamLiveToken\n  );\n  const dialogText = Store.useSelector(({ app }) => app.dialogText);\n  const dialogHasCallback = Store.useSelector(\n    ({ app }) => app.dialogHasCallback\n  );\n  const [update, setUpdate] = useState(0);\n  const [isLive, setIsLive] = useState(false);\n  const [showFloatingPlayer, setShowFloatingPlayer] = useState(false);\n  // effect to update live status\n  useEffect(() => {\n    if (!streamStatusUrl) {\n      return;\n    }\n    let timeout;\n    const interval = setInterval(async () => {\n      try {\n        const res = await Http.get(streamStatusUrl);\n        if (!res.data.isLive) {\n          return;\n        }\n        setIsLive(true);\n        clearInterval(interval);\n        timeout = setTimeout(() => {\n          console.info(\"upp\");\n          setUpdate(Date.now());\n        }, 5000);\n      } catch (e) {}\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, [streamStatusUrl, setIsLive, setUpdate]);\n  const StreamRender = useMemo(() => {\n    return (\n      <Stream\n        hideRibbon={true}\n        item={{ magnetURI: streamUrl, liveStatus: \"live\" }}\n        timeout={1500}\n        id={undefined}\n        index={undefined}\n        postId={undefined}\n        tipCounter={undefined}\n        tipValue={undefined}\n        width={undefined}\n      />\n    );\n  }, [streamUrl, update]);\n\n  const stopStream = useCallback(() => {\n    Http.post(\"/api/stopStream\", {\n      postId: streamPostId,\n      contentId: streamContentId,\n      endUrl: `https://stream.shock.network/api/stream/end`,\n      urlForMagnet: `https://stream.shock.network/api/stream/torrent/${streamUserToken}`,\n      obsToken: streamLiveToken\n    });\n    removeStream()(dispatch);\n    console.info(streamUserToken);\n    history.push(\"/profile\");\n  }, [\n    dispatch,\n    history,\n    streamContentId,\n    streamLiveToken,\n    streamPostId,\n    streamUserToken\n  ]);\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated) {\n      // Get current user's profile on login\n      dispatch(subscribeUserProfile(publicKey));\n    } else {\n      dispatch(unsubscribeUserProfile(publicKey));\n    }\n  }, [authenticated, dispatch, publicKey]);\n\n  useEffect(() => {\n    const tmp = !!(authenticated && isLive && streamUrl);\n    if (tmp !== showFloatingPlayer) {\n      setShowFloatingPlayer(tmp);\n    }\n  }, [\n    authenticated,\n    isLive,\n    streamUrl,\n    showFloatingPlayer,\n    setShowFloatingPlayer\n  ]);\n  useEffect(() => {\n    if (showFloatingPlayer) {\n      dragElement(\"floatyVideo\");\n    }\n  }, [showFloatingPlayer]);\n\n  //load info about content provider stored into gun\n  const loadContentInfo = useCallback(async () => {\n    try {\n      const { data: serviceProvider } = await Http.get(\n        `/api/gun/user/load/seedServiceProviderPubKey`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        serviceProvider &&\n        typeof serviceProvider.data === \"string\" &&\n        serviceProvider.data !== \"\"\n      ) {\n        setSeedProviderPub(serviceProvider.data, true)(dispatch);\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n    try {\n      const { data: seedData } = await Http.get(\n        `/api/gun/user/load/seedServiceSeedData`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        seedData &&\n        typeof seedData.data === \"string\" &&\n        seedData.data !== \"\"\n      ) {\n        const JObject = JSON.parse(seedData.data);\n        if (JObject && JObject.seedUrl && JObject.seedToken) {\n          setSeedInfo(JObject.seedUrl, JObject.seedToken, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated) {\n      return;\n    }\n    loadContentInfo();\n  }, [authenticated, loadContentInfo]);\n\n  //load info about current stream stored into gun\n  const loadStreamInfo = useCallback(async () => {\n    try {\n      const { data: streamData } = await Http.get(\n        `/api/gun/user/load/currentStreamInfo`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        streamData &&\n        typeof streamData.data === \"string\" &&\n        streamData.data !== \"\"\n      ) {\n        if (streamData.data === \"NO DATA\") {\n          removeStream(true, true)(dispatch);\n          return;\n        }\n        const JObject = JSON.parse(streamData.data);\n\n        if (JObject) {\n          addStream(JObject, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated) {\n      return;\n    }\n    loadStreamInfo();\n  }, [authenticated, loadStreamInfo]);\n\n  const DialogClose = useCallback(() => {\n    closeDialog(false)(dispatch);\n  }, [closeDialog, dispatch]);\n\n  const ConfirmDialog = useCallback(() => {\n    closeDialog(dialogHasCallback)(dispatch);\n  }, [dialogHasCallback, closeDialog, dispatch]);\n  return (\n    <FullHeight className=\"ShockWallet\">\n      {showFloatingPlayer && (\n        <div id=\"floatyVideo\" className=\"floaty-container\">\n          <i id=\"floatyVideoHeader\" className=\"fas fa-grip-vertical\"></i>\n          {StreamRender}\n          <button onClick={stopStream}>CLOSE STREAM</button>\n        </div>\n      )}\n      {dialogText && (\n        <div className=\"fixed-container\">\n          <div className=\"global-dialog\">\n            <p>{dialogText}</p>\n            <div className=\"d-flex flex-justify-center w-80\">\n              {dialogHasCallback && (\n                <button\n                  className=\"shock-form-button m-t-1 w-50\"\n                  onClick={DialogClose}\n                >\n                  Cancel\n                </button>\n              )}\n              {dialogHasCallback && <div style={{ width: \"1rem\" }}></div>}\n              <button\n                className=\"shock-form-button-confirm m-t-1 w-50\"\n                onClick={ConfirmDialog}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute\n            path=\"/walletSettings\"\n            exact\n            component={WalletSettingsPage}\n          />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:publicKey\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={CreatePostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey/:selectedView?\"\n            exact\n            component={OtherUserPage}\n          />\n          <PrivateRoute path=\"/Backups\" exact component={BackupsPage} />\n          <Route path=\"/story\" exact component={Story} />\n          <Route path=\"/stories\" exact component={Stories} />\n          <PrivateRoute\n            path=\"/item/:publicKey/:id\"\n            exact\n            component={PublicContentItemPage}\n          />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n    </FullHeight>\n  );\n};\n\nexport default App;\n","export function dragElement(elementId) {\n  const elmnt = document.getElementById(elementId)\n  if(!elmnt){\n    console.log(\"draggable set fail\")\n    return\n      \n  }\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  document.getElementById(elmnt.id + \"Header\").onpointerdown = dragMouseDown;\n\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onpointerup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onpointermove = elementDrag;\n  }\n\n  function elementDrag(e) {\n      console.log(\"dragging yooo\")\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n  }\n\n  function closeDragElement() {\n      console.log(\"not anymore!\")\n    // stop moving when mouse button is released:\n    document.onpointerup = null;\n    document.onpointermove = null;\n  }\n  }\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Http from \"axios\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./styles/index.global.css\";\n\nHttp.defaults.timeout = 20000;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangingKeypair = null;\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(`/api/encryption/exchange`, {\n      publicKey: keyPair.publicKeyBase64,\n      deviceId\n    });\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n\nexport const throttledExchangeKeyPair = () => async dispatch => {\n  try {\n    if (!exchangingKeypair) {\n      exchangingKeypair = dispatch(exchangeKeyPair());\n    }\n\n    const result = await exchangingKeypair;\n\n    // eslint-disable-next-line require-atomic-updates\n    exchangingKeypair = null;\n\n    return result;\n  } catch (err) {\n    console.error(err);\n    exchangingKeypair = null;\n    throw err;\n  }\n};\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\n/**\n * @param {string} source\n */\nexport const setSource = source => ({\n  type: ACTIONS.SET_SOURCE,\n  data: source\n});\n\n/**\n * @param {import('../schema').FeeRate} rate\n */\nexport const setRate = rate => ({\n  type: ACTIONS.SET_RATE,\n  data: rate\n});\n","export const GUN_PROPS = [\"_\", \"#\"];\n"],"sourceRoot":""}