{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/BottomBar/index.js","common/AddBtn/index.js","images/clipboard.svg","images/qrcode.svg","common/ContentHostInput/components/ContentHostInputView.module.css","common/ContentHostInput/components/Host.module.css","common/ContentHostInput/components/Host.tsx","common/ContentHostInput/components/ContentHostInputView.tsx","common/ContentHostInput/index.ts","common/ContentHostInput/ContentHostInput.tsx","pages/Profile/index.tsx"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","BottomBar","to","activeClassName","AddBtn","label","icon","iconURL","undefined","nestedMode","large","small","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","module","exports","Host","hostError","error","isBeingAddedOrDeleted","isDefault","onClickRemove","onClickWarning","price","publicKey","URI","user","Store","isConfirmingRemoval","setIsConfirmingRemoval","toggleConfirmingRemoval","confirming","handleClickOnWarning","handleRemovalConfirmation","malformedHost","JSON","stringify","gStyles","styles","container","pill","ShockAvatar","height","toLowerCase","displayName","Common","fontSize","yellow","blue","BUTTON_HOLDER_CLASS_NAME","ContentHostInputView","unorderedHosts","hosts","onAddHost","onRemoveHost","onRetryHost","publicKeyOrServerURI","URIHostAwaitingForToken","setPublicKeyOrServerURIData","hostForErrorDialog","setHostForErrorDialog","open","setOpen","input","useRef","isPasting","setIsPasting","token","setToken","tokenInput","isPastingToken","setIsPastingToken","sortedHosts","slice","sort","a","b","dateAdded","defaultHosts","filter","h","nonDefaultHosts","handleFocus","onClickPaste","navigator","clipboard","readText","then","txt","produce","data","catch","e","alert","message","finally","current","focus","document","execCommand","blur","onClickAdd","url","Utils","handleTokenPaste","handleTokenAdd","handleHostRemoval","publicKeyOrURI","closeErrorDialog","handleRemovalOfHostWithError","handleHostRetry","onChange","target","value","type","onKeyUp","key","keyCode","autoCapitalize","autoCorrect","placeholder","ref","onFocus","length","disabled","map","host","find","ContentHostInput","dispatch","useDispatch","seedProviderPub","content","userProfiles","seedInfo","seedUrl","seedToken","setHosts","useEffect","pair","Date","now","console","log","SeedServiceProvided","Http","get","service","servicePrice","addHost","startsWith","setSeedInfo","setSeedProviderPub","removeHost","subscribeUserProfile","unsubscribeUserProfile","filteredHosts","Post","React","lazy","SharedPost","AVAILABLE_WEB_CLIENT_PREFIXES","ProfilePage","profileModalOpen","setProfileModalOpen","deletePostModalData","setDeletePostModalData","posts","feed","node","hostIP","myServices","orders","availableTokens","availableStreamTokens","selectedView","setSelectedView","useSelector","myPosts","date","processedDisplayName","processDisplayName","subscription","subscribeMyServices","cancel","profileConfigModalOpen","setProfileConfigModalOpen","newDisplayName","setNewDisplayName","bio","newBio","setNewBio","currWebClientPrefix","setWebClientPrefix","newWebClientPrefix","setNewWebClientPrefix","copyWebClientUrlToClipboard","writeText","placeholderEl","querySelector","display","select","query","rifle","socket","on","webClientPrefixReceived","post","path","errorMessage","disconnectRifleSocket","somethingInsideConfigModalChanged","toggleConfigModal","onConfigCancel","onConfigSubmit","put","headerImageFileInput","settingHeader","setSettingHeader","onSelectedHeaderFile","preventDefault","files","file","imageObtained","base64","onPressHeader","click","toggleDeleteModal","deleteData","deletePost","id","shared","deleteUserPost","authorId","copyClipboard","Object","entries","tokens","index","paddingLeft","header","width","setsAvatar","greyBorder","backgroundColor","color","flexDirection","justifyContent","alignItems","padding","borderRadius","fontWeight","name","profile","originalPublicKey","originalAuthor","originalProfile","fallback","Loader","originalPost","originalPostProfile","sharedTimestamp","shareDate","sharerProfile","postPublicKey","openTipModal","openUnlockModal","isOnlineNode","openDeleteModal","timestamp","contentItems","avatar","username","tipCounter","tipValue","serviceType","serviceTitle","serviceDescription","serviceCondition","deleteService","bgColor","fgColor","size","readOnly","ClipboardIcon","htmlFor","prefix","marginTop","QRCodeIcon","hidden","accept"],"mappings":"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","file":"static/js/18.0834696d.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"modal-content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"modal-head\">\n      <p className=\"modal-head-title\">{title}</p>\n      <div className=\"modal-head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"modal-open\": modalOpen })}>\n      <div className=\"modal-backdrop\" onClick={closeModal} />\n      <div className=\"modal-container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentHostInputView_container__1CVAn\",\"uri-or-token-input\":\"ContentHostInputView_uri-or-token-input__3vg5h\",\"plus-or-paste-btn\":\"ContentHostInputView_plus-or-paste-btn__3z_k0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container-base\":\"Host_container-base__r5EJP\",\"remove-or-cancel\":\"Host_remove-or-cancel__2sHhe Host_container-base__r5EJP\",\"container\":\"Host_container__2hPww Host_container-base__r5EJP\",\"pill\":\"Host_pill__1WzlY\",\"display-name-or-uri\":\"Host_display-name-or-uri__2eaUy\",\"price-and-status\":\"Host_price-and-status__3Q4n3\",\"price\":\"Host_price__2oEgL\",\"red\":\"Host_red__1kS00\",\"yellow\":\"Host_yellow__3DLEG\",\"blue\":\"Host_blue__3m2Kb\"};","import { useCallback, useState } from \"react\";\nimport * as Common from \"shock-common\";\nimport classNames from \"classnames\";\n\nimport ShockAvatar from \"../../ShockAvatar\";\nimport * as gStyles from \"../../../styles\";\nimport * as Store from \"../../../store\";\n\nimport styles from \"./Host.module.css\";\n\nexport interface IHost {\n  /**\n   * Can be empty if publicKey is provided.\n   */\n  URI: string | null;\n  /**\n   * Unix timestamp.\n   */\n  dateAdded: number;\n  /**\n   * An empty string means no error. If there's an error adding the host,\n   * instead of making it disappear, have it show up with a warning the user can\n   * interact with, after the user clicks on it the actual error message will\n   * show up in a dialog.\n   */\n  error: string;\n  /**\n   * The host will be rendered with an indication that it is being added as\n   * opposed to being added already.\n   */\n  isBeingAddedOrDeleted: boolean;\n  /**\n   * Will render a check mark.\n   */\n  isDefault: boolean;\n  /**\n   * In sats.\n   */\n  price: number;\n  /**\n   * Can be empty if URI is provided.\n   */\n  publicKey: string | null;\n  /**\n   * Token for the service.\n   */\n  token: string;\n}\n\nexport interface HostProps extends IHost {\n  onClickRemove(publicKeyOrURI: string): void;\n  /**\n   * Called when clicking on the warning icon on a host with an error set.\n   */\n  onClickWarning(publicKeyOrURI: string): void;\n}\n\nconst Host = ({\n  error: hostError,\n  isBeingAddedOrDeleted,\n  isDefault,\n  onClickRemove,\n  onClickWarning,\n  price,\n  publicKey,\n  URI\n}: HostProps) => {\n  const user = Store.useSelector(Store.selectUser(publicKey));\n  const [isConfirmingRemoval, setIsConfirmingRemoval] = useState<boolean>(\n    false\n  );\n  const toggleConfirmingRemoval = useCallback(() => {\n    setIsConfirmingRemoval(confirming => !confirming);\n  }, []);\n\n  const handleClickOnWarning = useCallback(() => {\n    onClickWarning(publicKey || URI);\n  }, [onClickWarning, publicKey, URI]);\n\n  const handleRemovalConfirmation = useCallback(() => {\n    onClickRemove(publicKey || URI);\n  }, [onClickRemove, publicKey, URI]);\n\n  const malformedHost =\n    (hostError && isBeingAddedOrDeleted) ||\n    (publicKey && URI) ||\n    (!publicKey && !URI);\n\n  let error = hostError;\n\n  if (malformedHost) {\n    error = `Malformed host provided to <Host />, it must have either a public key or an URI (though not both), and it must not have both truthy error and isAdding props at the same time: ${JSON.stringify(\n      malformedHost\n    )}`;\n  }\n\n  if (isConfirmingRemoval) {\n    return (\n      <div\n        className={classNames(\n          gStyles.rowCentered,\n          gStyles.centerJustify,\n          gStyles.width100\n        )}\n      >\n        <button\n          onClick={handleRemovalConfirmation}\n          className={classNames(gStyles.flatBtnFullWidth)}\n        >\n          Remove\n        </button>\n\n        <button\n          onClick={toggleConfirmingRemoval}\n          className={classNames(gStyles.flatBtnFullWidth)}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classNames(\n        gStyles.rowCentered,\n        gStyles.spaceBetween,\n        gStyles.childrenSpaced24,\n        styles.container\n      )}\n    >\n      <div\n        className={classNames(\n          gStyles.rowCentered,\n          gStyles.spaceBetween,\n          gStyles.childrenSpaced8,\n          styles.pill\n        )}\n      >\n        {publicKey ? (\n          <ShockAvatar height={24} publicKey={publicKey} />\n        ) : (\n          <i className={classNames(\"fas fa-globe\")}></i>\n        )}\n\n        <span className={styles[\"display-name-or-uri\"]}>\n          {(URI && URI.toLowerCase()) ||\n            user.displayName ||\n            Common.defaultName(publicKey)}\n        </span>\n\n        {isBeingAddedOrDeleted || error ? (\n          <div />\n        ) : (\n          <span\n            className=\"fas fa-times\"\n            onClick={toggleConfirmingRemoval}\n            style={{\n              fontSize: 12\n            }}\n          />\n        )}\n      </div>\n\n      <div\n        className={classNames(\n          gStyles.flex,\n          gStyles.childrenSpaced24,\n          styles[\"price-and-status\"]\n        )}\n      >\n        <span className={classNames(gStyles.flex, styles.price)}>\n          {price} sats\n        </span>\n\n        {(() => {\n          if (error) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-exclamation-triangle\",\n                  gStyles.fontSize12,\n                  styles.yellow\n                )}\n                onClick={handleClickOnWarning}\n              />\n            );\n          }\n\n          if (isBeingAddedOrDeleted) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-hourglass-half\",\n                  gStyles.fontSize12,\n                  styles.yellow\n                )}\n              />\n            );\n          }\n\n          if (isDefault) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-check\",\n                  gStyles.fontSize12,\n                  styles.blue\n                )}\n              />\n            );\n          }\n\n          return (\n            <i\n              className={classNames(\n                \"fas fa-link\",\n                gStyles.fontSize12,\n                styles.blue\n              )}\n            ></i>\n          );\n        })()}\n      </div>\n    </div>\n  );\n};\n\nexport default Host;\n","import { useCallback, useMemo, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport produce from \"immer\";\n\nimport * as gStyles from \"../../../styles\";\nimport Modal from \"../../Modal\";\nimport * as Utils from \"../../../utils\";\n\nimport styles from \"./ContentHostInputView.module.css\";\nimport Host, { IHost as _IHost } from \"./Host\";\n\nexport type IHost = _IHost;\n\nexport interface ContentHostInputViewProps {\n  hosts: IHost[];\n  /**\n   * A token will be provided if the content host being added is a URI, the\n   * token will be required from the user before calling this callback.\n   */\n  onAddHost(publicKeyOrServerURI: string, token?: string): void;\n  onRemoveHost(publicKeyOrServerURI: string): void;\n  /**\n   * If a host has an error set, the user will be offered to retry adding it.\n   */\n  onRetryHost(publicKeyOrServerURI: string): void;\n}\n\nconst ContentHostInputView = ({\n  hosts: unorderedHosts,\n  onAddHost,\n  onRemoveHost,\n  onRetryHost\n}: ContentHostInputViewProps) => {\n  type PublicKeyOrServerURIData = {\n    publicKeyOrServerURI: string;\n    URIHostAwaitingForToken: string;\n  };\n  const [\n    { publicKeyOrServerURI, URIHostAwaitingForToken },\n    setPublicKeyOrServerURIData\n  ] = useState<PublicKeyOrServerURIData>({\n    publicKeyOrServerURI: \"\",\n    URIHostAwaitingForToken: \"\"\n  });\n  const [hostForErrorDialog, setHostForErrorDialog] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const input = useRef<HTMLInputElement>(null);\n  const [isPasting, setIsPasting] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const tokenInput = useRef<HTMLInputElement>(null);\n  const [isPastingToken, setIsPastingToken] = useState(false);\n\n  const sortedHosts = useMemo(\n    () =>\n      unorderedHosts.slice().sort((a, b) => {\n        return b.dateAdded - a.dateAdded;\n      }),\n    [unorderedHosts]\n  );\n\n  const defaultHosts = useMemo(() => sortedHosts.filter(h => h.isDefault), [\n    sortedHosts\n  ]);\n\n  const nonDefaultHosts = useMemo(() => sortedHosts.filter(h => !h.isDefault), [\n    sortedHosts\n  ]);\n\n  const hosts = useMemo(() => [...defaultHosts, ...nonDefaultHosts], [\n    defaultHosts,\n    nonDefaultHosts\n  ]);\n\n  const handleFocus = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const onClickPaste = useCallback(() => {\n    if (isPasting) {\n      return;\n    }\n\n    if (navigator.clipboard) {\n      setIsPasting(true);\n      navigator.clipboard\n        .readText()\n        .then(txt => {\n          setPublicKeyOrServerURIData(\n            produce((data: PublicKeyOrServerURIData) => {\n              data.publicKeyOrServerURI = txt;\n            })\n          );\n        })\n        .catch(e => {\n          alert(`Could not paste: ${e.message}`);\n        })\n        .finally(() => {\n          setIsPasting(false);\n        });\n    } else {\n      if (input.current) {\n        input.current.focus();\n        document.execCommand(\"paste\");\n        input.current.blur();\n      }\n    }\n  }, [isPasting, setIsPasting]);\n\n  const onClickAdd = useCallback(() => {\n    setPublicKeyOrServerURIData(\n      produce((data: PublicKeyOrServerURIData) => {\n        const url = Utils.normalizeURL(data.publicKeyOrServerURI);\n\n        if (url) {\n          data.publicKeyOrServerURI = url;\n          data.URIHostAwaitingForToken = url;\n        }\n      })\n    );\n\n    const url = Utils.normalizeURL(publicKeyOrServerURI);\n\n    if (!url) {\n      onAddHost(publicKeyOrServerURI);\n    }\n  }, [setPublicKeyOrServerURIData, publicKeyOrServerURI, onAddHost]);\n\n  const handleTokenPaste = useCallback(() => {\n    if (isPastingToken) {\n      return;\n    }\n\n    if (navigator.clipboard) {\n      setIsPastingToken(true);\n      navigator.clipboard\n        .readText()\n        .then(txt => {\n          setToken(txt);\n        })\n        .catch(e => {\n          alert(`Could not paste: ${e.message}`);\n        })\n        .finally(() => {\n          setIsPastingToken(false);\n        });\n    } else {\n      if (tokenInput.current) {\n        tokenInput.current.focus();\n        document.execCommand(\"paste\");\n        tokenInput.current.blur();\n      }\n    }\n  }, [isPastingToken, setIsPastingToken, setToken]);\n\n  const handleTokenAdd = useCallback(() => {\n    setPublicKeyOrServerURIData(\n      produce((data: PublicKeyOrServerURIData) => {\n        data.publicKeyOrServerURI = \"\";\n        data.URIHostAwaitingForToken = \"\";\n      })\n    );\n\n    onAddHost(publicKeyOrServerURI, token);\n  }, [setPublicKeyOrServerURIData, onAddHost, publicKeyOrServerURI, token]);\n\n  const handleHostRemoval = useCallback(\n    (publicKeyOrURI: string) => {\n      onRemoveHost(publicKeyOrURI);\n    },\n    [onRemoveHost]\n  );\n\n  const closeErrorDialog = useCallback(() => {\n    setHostForErrorDialog(\"\");\n  }, [setHostForErrorDialog]);\n\n  const handleRemovalOfHostWithError = useCallback(() => {\n    onRemoveHost(hostForErrorDialog);\n    closeErrorDialog();\n  }, [onRemoveHost, hostForErrorDialog, closeErrorDialog]);\n\n  const handleHostRetry = useCallback(() => {\n    onRetryHost(hostForErrorDialog);\n    setHostForErrorDialog(\"\");\n  }, [onRetryHost, hostForErrorDialog, setHostForErrorDialog]);\n\n  return (\n    <>\n      <div\n        className={classNames(gStyles.col, gStyles.width100, styles.container)}\n      >\n        <div className={(gStyles.row, gStyles.centerJustify)}>\n          {/* https://stackoverflow.com/a/15314433 */}\n          <input\n            className={classNames(\"input-field\", styles[\"uri-or-token-input\"])}\n            onChange={e => {\n              setPublicKeyOrServerURIData(\n                produce((data: PublicKeyOrServerURIData) => {\n                  data.publicKeyOrServerURI = e.target.value;\n                  data.URIHostAwaitingForToken = \"\";\n                })\n              );\n\n              setToken(\"\");\n            }}\n            type=\"text\"\n            value={publicKeyOrServerURI}\n            onKeyUp={e => {\n              if (e.key === \"Enter\" || e.keyCode === 13) {\n                onClickAdd();\n              }\n            }}\n            autoCapitalize=\"off\"\n            autoCorrect=\"none\"\n            placeholder=\"Provider Pubkey or Server URI (include https or http)\"\n            ref={input}\n            onFocus={handleFocus}\n          />\n\n          {publicKeyOrServerURI.length === 0 && (\n            <button\n              className={classNames(\n                gStyles.flatBtn,\n                styles[\"plus-or-paste-btn\"]\n              )}\n              disabled={isPasting}\n              onClick={onClickPaste}\n            >\n              <i className=\"fas fa-paste\"></i>\n            </button>\n          )}\n\n          {publicKeyOrServerURI.length > 0 &&\n            publicKeyOrServerURI !== URIHostAwaitingForToken && (\n              <button\n                className={classNames(\n                  gStyles.flatBtn,\n                  styles[\"plus-or-paste-btn\"]\n                )}\n                disabled={publicKeyOrServerURI.length === 0}\n                onClick={onClickAdd}\n              >\n                +\n              </button>\n            )}\n        </div>\n\n        {publicKeyOrServerURI.length > 0 &&\n          publicKeyOrServerURI === URIHostAwaitingForToken && (\n            <div className={(gStyles.row, gStyles.centerJustify)}>\n              <input\n                className={classNames(\n                  \"input-field\",\n                  styles[\"uri-or-token-input\"]\n                )}\n                onChange={e => {\n                  setToken(e.target.value);\n                }}\n                type=\"text\"\n                value={token}\n                onKeyUp={e => {\n                  if (e.key === \"Enter\" || e.keyCode === 13) {\n                    handleTokenAdd();\n                  }\n                }}\n                autoCapitalize=\"off\"\n                autoCorrect=\"none\"\n                placeholder=\"Token (required)\"\n                ref={tokenInput}\n              />\n\n              {token.length === 0 && (\n                <button\n                  className={classNames(\n                    gStyles.flatBtn,\n                    styles[\"plus-or-paste-btn\"]\n                  )}\n                  disabled={isPastingToken}\n                  onClick={handleTokenPaste}\n                >\n                  <i className=\"fas fa-paste\"></i>\n                </button>\n              )}\n\n              {token.length > 0 && (\n                <button\n                  className={classNames(\n                    gStyles.flatBtn,\n                    styles[\"plus-or-paste-btn\"]\n                  )}\n                  disabled={token.length === 0}\n                  onClick={handleTokenAdd}\n                >\n                  +\n                </button>\n              )}\n            </div>\n          )}\n\n        <div className={classNames(gStyles.col)}>\n          {(open ? hosts : defaultHosts).map(host => (\n            <Host\n              URI={host.URI}\n              dateAdded={0}\n              error={host.error}\n              isBeingAddedOrDeleted={host.isBeingAddedOrDeleted}\n              isDefault={host.isDefault}\n              key={host.publicKey || host.URI}\n              onClickRemove={handleHostRemoval}\n              onClickWarning={setHostForErrorDialog}\n              price={host.price}\n              publicKey={host.publicKey}\n              token={host.token}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* TODO: change to global modal */}\n      <Modal\n        modalOpen={!!hostForErrorDialog}\n        modalTitle={\n          hosts.find(\n            h =>\n              h.publicKey === hostForErrorDialog || h.URI === hostForErrorDialog\n          )?.error\n        }\n        toggleModal={closeErrorDialog}\n      >\n        <div className={BUTTON_HOLDER_CLASS_NAME}>\n          <button\n            onClick={handleRemovalOfHostWithError}\n            className=\"shock-form-button m-1\"\n          >\n            REMOVE\n          </button>\n\n          <button\n            onClick={handleHostRetry}\n            className=\"shock-form-button-confirm m-1\"\n          >\n            RETRY\n          </button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nconst BUTTON_HOLDER_CLASS_NAME = classNames(\n  gStyles.rowCentered,\n  gStyles.width100,\n  gStyles.centerJustify,\n  gStyles.childrenSpaced16,\n  gStyles.padding12\n);\n\nexport default ContentHostInputView;\n","import ContentHostInput from \"./ContentHostInput\";\n\nexport default ContentHostInput;\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport produce from \"immer\";\nimport { useDispatch } from \"react-redux\";\nimport * as Store from \"../../store\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"../../actions/UserProfilesActions\";\n\nimport ContentHostInputView, { IHost } from \"./components/ContentHostInputView\";\nimport { Http } from \"../../utils\";\nimport {setSeedInfo,setSeedProviderPub} from '../../actions/ContentActions'\n\nconst ContentHostInput = () => {\n  const dispatch = useDispatch();\n  const seedProviderPub = Store.useSelector(\n    ({ content }) => content.seedProviderPub\n  );\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const { seedUrl, seedToken } = Store.useSelector(\n    ({ content }) => content.seedInfo\n  );\n  const [hosts, setHosts] = useState<IHost[]>([]);\n  useEffect(()=>{\n    let pair = null\n    if(seedUrl && seedToken){\n      pair = {\n        URI:seedUrl,\n        token:seedToken,\n        price:0,\n        isBeingAddedOrDeleted:false,\n        dateAdded:Date.now(),\n        isDefault:true,\n        error:null,\n        publicKey:null\n      }\n      setHosts([pair])\n    }\n    console.log(userProfiles)\n    if(seedProviderPub && !userProfiles[seedProviderPub]){\n      setHosts([pair,{\n        dateAdded:Date.now(),\n        isBeingAddedOrDeleted:true,\n        isDefault:true,\n        publicKey:seedProviderPub,\n        price:0,\n        URI:null,\n        token:null,\n        error:null\n      }])\n    }\n\n\n    if(seedProviderPub && userProfiles[seedProviderPub]){\n      //@ts-expect-error\n      const {SeedServiceProvided} = userProfiles[seedProviderPub]\n      if(SeedServiceProvided){\n        setHosts([pair,{\n          dateAdded:Date.now(),\n          isBeingAddedOrDeleted:true,\n          isDefault:true,\n          publicKey:seedProviderPub,\n          price:0,\n          URI:null,\n          token:null,\n          error:null\n        }])\n        Http.get(\n          `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${SeedServiceProvided}`\n        ).then(({data})=>{\n          const {data:service} = data\n          console.log(service)\n          setHosts([pair,{\n            dateAdded:Date.now(),\n            isBeingAddedOrDeleted:false,\n            isDefault:true,\n            publicKey:seedProviderPub,\n            price:service.servicePrice,\n            URI:null,\n            token:null,\n            error:null\n          }])\n        })\n        .catch(e => {\n          setHosts([pair,{\n            dateAdded:Date.now(),\n            isBeingAddedOrDeleted:false,\n            isDefault:true,\n            publicKey:seedProviderPub,\n            price:0,\n            URI:null,\n            token:null,\n            error:e.message || e\n          }])\n        })\n      }\n    }\n  },[seedUrl,seedToken,seedProviderPub,setHosts])\n  \n  const addHost = useCallback((publicKeyOrURI, token)=>{\n    if(publicKeyOrURI.startsWith(\"http\")){\n      setSeedInfo(publicKeyOrURI,token)(dispatch)\n    } else {\n      setSeedProviderPub(publicKeyOrURI)(dispatch)\n    }\n  },[setSeedInfo,setSeedProviderPub])\n\n  const removeHost = useCallback((publicKeyOrURI) => {\n    if(publicKeyOrURI.startsWith(\"http\")){\n      setSeedInfo(\"\",\"\")(dispatch)\n    } else {\n      setSeedProviderPub(\"\")(dispatch)\n    }\n  },[setSeedInfo,setSeedProviderPub])\n  const subbedUsers = useMemo<string[]>(() => [], []);\n\n  useEffect(() => {\n    dispatch(subscribeUserProfile(seedProviderPub));\n    return () => {\n      dispatch(unsubscribeUserProfile(seedProviderPub));\n    };\n  }, [seedProviderPub, dispatch]);\n  const filteredHosts = useMemo(()=>{\n    return hosts.filter(h => h)\n  },[hosts])\n  return (\n    <ContentHostInputView\n      hosts={filteredHosts}\n      onAddHost={addHost}\n      onRemoveHost={removeHost}\n      onRetryHost={()=>{}}\n    />\n  );\n};\n\nexport default ContentHostInput;\n","import React, {\n  Suspense,\n  useCallback,\n  useMemo,\n  useState,\n  useEffect,\n  useRef,\n  InputHTMLAttributes\n} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport QRCode from \"qrcode.react\";\nimport { Link } from \"react-router-dom\";\nimport { processDisplayName } from \"../../utils/String\";\n\nimport * as Utils from \"../../utils\";\nimport { setSeedInfo, setSeedProviderPub } from \"../../actions/ContentActions\";\nimport {\n  deleteService,\n  subscribeMyServices\n} from \"../../actions/OrdersActions\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ContentHostInput from \"../../common/ContentHostInput\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport * as Store from \"../../store\";\nimport { rifle, disconnectRifleSocket } from \"../../utils/WebSocket\";\n\nimport \"./css/index.css\";\nimport { deleteUserPost } from \"../../actions/FeedActions\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nexport type WebClientPrefix =\n  | \"https://shock.page\"\n  | \"https://shock.pub\"\n  | \"https://lightning.page\"\n  | \"https://satoshi.watch\";\n\nconst ProfilePage = () => {\n  const dispatch = useDispatch();\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n  const [deletePostModalData,setDeletePostModalData] = useState(null)\n\n  const posts = Store.useSelector(({ feed }) => feed.posts);\n  const publicKey = Store.useSelector(({ node }) => node.publicKey);\n  const hostIP = Store.useSelector(({ node }) => node.hostIP);\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n\n  const myServices = Store.useSelector(({ orders }) => orders.myServices);\n  const availableTokens = Store.useSelector(\n    ({ content }) => content.availableTokens\n  );\n  const availableStreamTokens = Store.useSelector(\n    ({ content }) => content.availableStreamTokens\n  );\n  const [selectedView, setSelectedView] = useState(\"posts\");\n  const user = useSelector(Store.selectSelfUser);\n  const myPosts = useMemo(() => {\n    if (posts && posts[publicKey]) {\n      const myP = posts[publicKey].sort((a, b) => b.date - a.date);\n      return myP;\n    }\n    return [];\n  }, [posts, publicKey]);\n  console.log(posts);\n  console.log(myPosts);\n  const processedDisplayName = useMemo(\n    () => processDisplayName(publicKey, user.displayName),\n    [publicKey, user.displayName]\n  );\n\n  useEffect(() => {\n    const subscription = subscribeMyServices(hostIP)(dispatch);\n\n    return () => {\n      subscription.then(cancel => cancel());\n    };\n  }, [hostIP, dispatch]);\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  // ------------------------------------------------------------------------ //\n  // CONFIG MODAL\n\n  const [profileConfigModalOpen, setProfileConfigModalOpen] = useState(false);\n  const [newDisplayName, setNewDisplayName] = useState(user.displayName);\n  const [newBio, setNewBio] = useState(user.bio);\n  const [currWebClientPrefix, setWebClientPrefix] = useState<WebClientPrefix>(\n    AVAILABLE_WEB_CLIENT_PREFIXES[0]\n  );\n  const [newWebClientPrefix, setNewWebClientPrefix] = useState<WebClientPrefix>(\n    AVAILABLE_WEB_CLIENT_PREFIXES[0]\n  );\n\n  const copyWebClientUrlToClipboard = useCallback(() => {\n    // some browsers/platforms don't support navigator.clipboard\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(newWebClientPrefix + \"/\" + publicKey);\n    } else {\n      const placeholderEl = document.querySelector(\n        \"#web-client-url-holder\"\n      ) as HTMLInputElement;\n      placeholderEl.style.display = \"block\";\n      placeholderEl.select();\n      document.execCommand(\"copy\");\n      placeholderEl.blur();\n      placeholderEl.style.display = \"none\";\n    }\n  }, [newWebClientPrefix, publicKey]);\n\n  useEffect(() => {\n    const query = `$user::Profile>webClientPrefix::on`;\n\n    (async () => {\n      const socket = await rifle({\n        host: hostIP,\n        query\n      });\n\n      socket.on(\"$shock\", (webClientPrefixReceived: unknown) => {\n        if (typeof webClientPrefixReceived === \"string\") {\n          setWebClientPrefix(webClientPrefixReceived as WebClientPrefix);\n        } else {\n          Utils.Http.post(`/api/gun/put`, {\n            path: \"$user>Profile>webClientPrefix\",\n            value: AVAILABLE_WEB_CLIENT_PREFIXES[0]\n          }).catch(e => {\n            alert(`Error setting default web client prefix: ${e.message}`);\n          });\n        }\n      });\n\n      socket.on(\"$error\", (errorMessage: string) => {\n        alert(`There was an error fetching web client prefix: ${errorMessage}`);\n      });\n    })();\n\n    return () => {\n      disconnectRifleSocket(query);\n    };\n  }, [hostIP, publicKey /* handles alias switch */]);\n\n  const onInputChange = (e: { target: { name: string; value: any } }) => {\n    const { value, name } = e.target;\n    switch (name) {\n      case \"selectedView\": {\n        setSelectedView(value);\n        return;\n      }\n      default:\n        return;\n    }\n  };\n\n  const somethingInsideConfigModalChanged =\n    newDisplayName !== user.displayName ||\n    newBio !== user.bio ||\n    newWebClientPrefix !== currWebClientPrefix;\n\n  const toggleConfigModal = useCallback(() => {\n    setProfileConfigModalOpen(open => !open);\n    setNewDisplayName(user.displayName);\n    setNewBio(user.bio);\n    setNewWebClientPrefix(currWebClientPrefix);\n  }, [\n    setProfileConfigModalOpen,\n    setNewDisplayName,\n    user.displayName,\n    setNewBio,\n    user.bio,\n    currWebClientPrefix\n  ]);\n\n  const onConfigCancel = useCallback(() => {\n    setNewDisplayName(user.displayName);\n    setNewBio(user.bio);\n    toggleConfigModal();\n  }, [user.displayName, user.bio, toggleConfigModal]);\n\n  const onConfigSubmit = useCallback(() => {\n    if (newDisplayName !== user.displayName) {\n      Utils.Http.put(`/api/gun/me`, {\n        displayName: newDisplayName\n      }).catch(e => {\n        alert(`There was an error setting a new display name: ${e.message}`);\n      });\n    }\n    if (newBio !== user.bio) {\n      Utils.Http.put(\"/api/gun/me\", {\n        bio: newBio\n      }).catch(e => {\n        alert(`There was an error setting a new bio: ${e.message}`);\n      });\n    }\n    if (newWebClientPrefix !== currWebClientPrefix) {\n      Utils.Http.post(`/api/gun/put`, {\n        path: \"$user>Profile>webClientPrefix\",\n        value: newWebClientPrefix\n      }).catch(e => {\n        alert(\n          `There was an error setting your web client prefix: ${e.message}`\n        );\n      });\n    }\n    toggleConfigModal();\n  }, [\n    dispatch,\n    newDisplayName,\n    user.displayName,\n    user.bio,\n    newBio,\n    toggleConfigModal,\n    newWebClientPrefix,\n    currWebClientPrefix\n  ]);\n\n  // ------------------------------------------------------------------------ //\n  // HEADER IMAGE SET ------------------------------------------------------- //\n  const headerImageFileInput = useRef<HTMLInputElement>(null);\n  const [settingHeader, setSettingHeader] = useState<boolean>(false);\n\n  const onSelectedHeaderFile: InputHTMLAttributes<{}>[\"onChange\"] = async e => {\n    try {\n      e.preventDefault();\n      if (settingHeader) {\n        return;\n      }\n\n      setSettingHeader(true);\n\n      const { files } = (e.target as unknown) as {\n        files: readonly Utils.File[];\n      };\n\n      if (files.length === 0) {\n        return;\n      }\n\n      if (files.length !== 1) {\n        Utils.logger.error(`Profile -> files.length !== 1`);\n        alert(\n          `An error occurred while trying to set a header. This has been logged.`\n        );\n        return;\n      }\n\n      const [file] = files;\n\n      const imageObtained = await Utils.processImageFile(file, 320, 0.7);\n\n      const DATA_URL_TYPE_PREFIX = \"data:image/jpeg;base64,\";\n      const base64 = imageObtained.slice(DATA_URL_TYPE_PREFIX.length);\n\n      await Utils.Http.post(`/api/gun/put`, {\n        path: \"$user>profileBinary>header\",\n        value: base64\n      });\n    } catch (e) {\n      Utils.logger.error(`Error while trying to load new header.`);\n      Utils.logger.error(e);\n      alert(\n        \"There was an error loading the new header, this has error has been logged.\"\n      );\n    } finally {\n      setSettingHeader(false);\n    }\n  };\n\n  const onPressHeader = useCallback(e => {\n    e.preventDefault();\n    const { current } = headerImageFileInput;\n    if (!current) {\n      Utils.logger.error(\"File input element for avatar is falsy.\");\n      alert(\"There was an error and it was logged.\");\n    }\n    current.click();\n  }, []);\n  // ------------------------------------------------------------------------ //\n\n  const toggleDeleteModal = useCallback(\n    deleteData => {\n      console.log(deleteData);\n      if (deletePostModalData || !deleteData) {\n        setDeletePostModalData(null);\n      }\n      setDeletePostModalData(deleteData);\n    },\n    [deletePostModalData]\n  );\n\n  const deletePost = useCallback(async ()=>{\n    if(!deletePostModalData || !deletePostModalData.id){\n      return\n    }\n    console.log(\"deleting:\")\n    console.log(deletePostModalData)\n    const key = deletePostModalData.shared ? \"sharedPosts\" :\"posts\"\n    await Utils.Http.post('/api/gun/put',{\n      path:`$user>${key}>${deletePostModalData.id}`,\n      value:null\n    })\n    deleteUserPost({\n      id:deletePostModalData.id,\n      authorId:publicKey\n    })\n    toggleDeleteModal(null)\n  },[deletePostModalData])\n  const copyClipboard = useCallback(() => {\n    try {\n      // some browsers/platforms don't support navigator.clipboard\n      if (navigator.clipboard) {\n        navigator.clipboard.writeText(publicKey);\n      } else {\n        const placeholderEl = document.querySelector(\n          \"#public-key-holder\"\n        ) as HTMLInputElement;\n        placeholderEl.style.display = \"block\";\n        placeholderEl.select();\n        document.execCommand(\"copy\");\n        placeholderEl.blur();\n        placeholderEl.style.display = \"none\";\n        setProfileModalOpen(false);\n      }\n    } catch (e) {\n      alert(`Could not copy to clipboard: ${e.message}`);\n    }\n  }, [publicKey]);\n\n  const AVATAR_SIZE = 122;\n\n  const renderPosts = () => {\n    return myPosts.map((post, index) => {\n      const profile = userProfiles[post.authorId];\n      if (post.type === \"shared\") {\n        const originalPublicKey = post.originalAuthor;\n        const originalProfile = userProfiles[originalPublicKey];\n        return (\n          <Suspense fallback={<Loader />} key={index}>\n            <SharedPost\n              originalPost={post.originalPost}\n              originalPostProfile={originalProfile}\n              sharedTimestamp={post.shareDate}\n              sharerProfile={profile}\n              postPublicKey={originalPublicKey}\n              openTipModal={() => {}}\n              openUnlockModal={() => {}}\n              // TODO: User online status handling\n              isOnlineNode\n              openDeleteModal={toggleDeleteModal}\n            />\n          </Suspense>\n        );\n      }\n\n      return (\n        <Suspense fallback={<Loader />} key={index}>\n          <Post\n            id={post.id}\n            timestamp={post.date}\n            contentItems={post.contentItems}\n            avatar={`data:image/jpeg;base64,${profile?.avatar}`}\n            username={processDisplayName(\n              profile?.publicKey,\n              profile?.displayName\n            )}\n            publicKey={post.authorId}\n            openTipModal={() => {}}\n            openUnlockModal={() => {}}\n            tipCounter={0}\n            tipValue={0}\n            // TODO: User online status handling\n            isOnlineNode\n            openDeleteModal={toggleDeleteModal}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    console.log(myServices);\n    return Object.entries(myServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, serv]) => {\n        const service = serv as Record<string, string>;\n        const deleteCB = () => {\n          console.log(\"delete wtf\");\n          deleteService(id)(dispatch);\n        };\n        return (\n          <div className=\"post\" key={id}>\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            <p>{service.serviceType || \"\"}</p>\n            <strong>Service Title</strong>\n            <p>{service.serviceTitle || \"\"}</p>\n            <strong>Service Description</strong>\n            <p>{service.serviceDescription || \"\"}</p>\n            <strong>Service Condition</strong>\n            <p>{service.serviceCondition || \"\"}</p>\n            <strong>Service Price</strong>\n            <p>{service.servicePrice || \"\"}</p>\n            <button onClick={deleteCB}>DELETE SERVICE</button>\n          </div>\n        );\n      });\n  };\n  const tokensView = useMemo(() => {\n    return Object.entries(availableTokens).map(([seedUrl, tokens]) => {\n      return (\n        <div key={`${seedUrl}`}>\n          URL: {seedUrl}\n          {\n            // @ts-expect-error\n            tokens.map((token, index) => {\n              return (\n                <div\n                  key={`${index}-${seedUrl}`}\n                  style={{ paddingLeft: \"1rem\" }}\n                >\n                  <p>{token}</p>\n                </div>\n              );\n            })\n          }\n        </div>\n      );\n    });\n  }, [availableTokens]);\n\n  const streamTokensView = useMemo(() => {\n    return Object.entries(availableStreamTokens).map(([seedUrl, tokens]) => {\n      return (\n        <div key={`${seedUrl}`}>\n          URL: {seedUrl}\n          {\n            // @ts-expect-error\n            tokens.map((token, index) => {\n              return (\n                <div\n                  key={`${index}-${seedUrl}`}\n                  style={{ paddingLeft: \"1rem\" }}\n                >\n                  <p>{token}</p>\n                </div>\n              );\n            })\n          }\n        </div>\n      );\n    });\n  }, [availableStreamTokens]);\n  return (\n    <>\n      <div className=\"page-container profile-page\">\n        <div className=\"profile-container\">\n          <div className=\"profile-cover\" onClick={onPressHeader}>\n            {user.header && (\n              <img\n                alt=\"User set profile header.\"\n                src={`data:image/jpeg;base64,${user.header}`}\n              />\n            )}\n          </div>\n          <div className=\"profile-info-container\">\n            <div\n              className=\"profile-avatar\"\n              style={{\n                height: `${AVATAR_SIZE}px`,\n                width: `${AVATAR_SIZE}px`\n              }}\n            >\n              <ShockAvatar\n                height={AVATAR_SIZE}\n                publicKey={publicKey}\n                setsAvatar\n                greyBorder\n              />\n            </div>\n\n            <div className=\"profile-info\">\n              <p className=\"profile-name\" onClick={() => {}}>\n                {processedDisplayName}\n              </p>\n              <p className=\"profile-desc\">{user.bio || \"Shockwallet user\"}</p>\n              <div className=\"config-btn\" onClick={toggleConfigModal}>\n                <i className=\"config-btn-icon icon-solid-spending-rule\" />\n                <p className=\"config-btn-text\">Config</p>\n              </div>\n            </div>\n          </div>\n          <div>\n            <Link to={\"/goLive\"} className=\"profile-choice-container\">\n              <div\n                style={{\n                  backgroundColor: \"red\",\n                  color: \"white\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  padding: \"0.2em 0.5em\",\n                  borderRadius: \"0.7em\",\n                  fontSize: \"16px\",\n                  fontWeight: 600\n                }}\n              >\n                <i className=\"fas fa-video\"></i>\n                <p>GO LIVE</p>\n              </div>\n            </Link>\n            <Link to={\"/createPost\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-pen-square\"></i>\n              <p className=\"profile-choice-text\">Create Post</p>\n            </Link>\n            <Link to={\"/publishContent\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fab fa-youtube\"></i>\n              <p className=\"profile-choice-text\">Publish Content</p>\n            </Link>\n            <button className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-shopping-cart\"></i>\n              <p className=\"profile-choice-text\">Offer a Product</p>\n            </button>\n            <Link to={\"/offerService\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-running\"></i>\n              <p className=\"profile-choice-text\">Offer a Service</p>\n            </Link>\n          </div>\n          <div className=\"\">\n            <select\n              value={selectedView}\n              name=\"selectedView\"\n              onChange={onInputChange}\n            >\n              <option value=\"posts\">POSTS</option>\n              <option value=\"services\">SERVICES</option>\n            </select>\n            {selectedView === \"posts\" && renderPosts()}\n            {selectedView === \"services\" && renderServices()}\n          </div>\n          <Modal\n            toggleModal={toggleModal}\n            modalOpen={profileModalOpen}\n            contentStyle={{\n              padding: \"40px 30px\"\n            }}\n          >\n            <QRCode\n              bgColor=\"#23282d\"\n              fgColor=\"#4285b9\"\n              value={publicKey}\n              size={180}\n              className=\"profile-qrcode\"\n            />\n            <p className=\"profile-qrcode-desc\">\n              Other users can scan this code to contact you\n            </p>\n\n            {!navigator.clipboard && (\n              <input\n                className=\"hidden-input\"\n                id=\"public-key-holder\"\n                readOnly\n                type=\"text\"\n                value={publicKey}\n              ></input>\n            )}\n            <div\n              className=\"profile-clipboard-container\"\n              onClick={copyClipboard}\n            >\n              <img\n                src={ClipboardIcon}\n                className=\"profile-clipboard-icon\"\n                alt=\"\"\n              />\n              <p className=\"profile-clipboard-text\">Tap to copy to clipboard</p>\n            </div>\n          </Modal>\n\n          <Modal\n            toggleModal={toggleConfigModal}\n            modalOpen={profileConfigModalOpen}\n            contentStyle={{\n              padding: \"2em 2em\"\n            }}\n          >\n            <label htmlFor=\"newDisplayName\">Display Name</label>\n            <input\n              autoCapitalize=\"none\"\n              autoCorrect=\"off\"\n              type=\"text\"\n              className=\"input-field\"\n              placeholder={user.displayName || \"new display name\"}\n              name=\"newDisplayName\"\n              onChange={({ target: { value } }) => {\n                setNewDisplayName(value);\n              }}\n            />\n\n            <label htmlFor=\"newBio\">New Bio</label>\n            <input\n              type=\"text\"\n              className=\"input-field\"\n              placeholder={user.displayName || \"new bio\"}\n              name=\"newBio\"\n              onChange={({ target: { value } }) => {\n                setNewBio(value);\n              }}\n            />\n\n            <label htmlFor=\"new-web-client-prefix\">Web Client</label>\n\n            <div className=\"web-client-prefix-picker\">\n              <i\n                className=\"far fa-copy\"\n                onClick={copyWebClientUrlToClipboard}\n                style={{ fontSize: 24 }}\n              />\n\n              <select\n                onChange={e => {\n                  setNewWebClientPrefix(e.target.value as WebClientPrefix);\n                }}\n                name=\"new-web-client-prefix\"\n                id=\"new-web-client-prefix\"\n                value={newWebClientPrefix}\n              >\n                {AVAILABLE_WEB_CLIENT_PREFIXES.map(prefix => (\n                  <option key={prefix} value={prefix}>\n                    {prefix}\n                  </option>\n                ))}\n              </select>\n\n              <span>/</span>\n\n              <span style={{ fontSize: 12 }}>{publicKey}</span>\n            </div>\n\n            {!navigator.clipboard && (\n              <input\n                className=\"hidden-input\"\n                id=\"web-client-url-holder\"\n                readOnly\n                type=\"text\"\n                value={newWebClientPrefix + \"/\" + publicKey}\n              ></input>\n            )}\n\n            <br></br>\n\n            <label htmlFor=\"content-host\">Content Host</label>\n\n            <ContentHostInput />\n\n            <br></br>\n\n            {somethingInsideConfigModalChanged && (\n              <div className=\"flex-center\" style={{ marginTop: \"auto\" }}>\n                <button\n                  onClick={onConfigCancel}\n                  className=\"shock-form-button m-1\"\n                >\n                  CANCEL\n                </button>\n                <button\n                  onClick={onConfigSubmit}\n                  className=\"shock-form-button-confirm m-1\"\n                >\n                  SUBMIT\n                </button>\n              </div>\n            )}\n          </Modal>\n\n          <Modal\n            toggleModal={toggleDeleteModal}\n            modalOpen={deletePostModalData}\n            \n            contentStyle={{\n              padding: \"2em 2em\"\n            }}\n          >\n            <div>You sure delete</div>\n            <div className=\"flex-center\" style={{ marginTop: \"auto\" }}>\n              <button\n                onClick={toggleDeleteModal}\n                className=\"shock-form-button m-1\"\n              >\n                CANCEL\n              </button>\n              <button\n                onClick={deletePost}\n                className=\"shock-form-button-confirm m-1\"\n              >\n                DELETE\n              </button>\n            </div>\n          </Modal>\n          <AddBtn\n            onClick={toggleModal}\n            large\n            iconURL={QRCodeIcon}\n            style={{ backgroundColor: \"var(--yellow)\" }}\n            icon={null}\n            label={null}\n          />\n        </div>\n\n        <BottomBar />\n      </div>\n\n      <input\n        type=\"file\"\n        id=\"avatar-file\"\n        ref={headerImageFileInput}\n        hidden\n        accept=\"image/*\"\n        onChange={onSelectedHeaderFile}\n      />\n    </>\n  );\n};\n\nconst AVAILABLE_WEB_CLIENT_PREFIXES: readonly WebClientPrefix[] = [\n  \"https://shock.pub\",\n  \"https://shock.page\",\n  \"https://lightning.page\",\n  \"https://satoshi.watch\"\n];\n\nexport default ProfilePage;\n"],"sourceRoot":""}