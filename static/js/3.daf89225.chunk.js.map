{"version":3,"sources":["common/Post/components/TipRibbon/index.js","common/Post/components/Stream/index.tsx","common/Post/components/Video/index.js","common/Post/components/Image/index.js","images/share.svg","common/Post/index.js","images/av1.jpg","common/Post/SharedPost.js"],"names":["TipRibbon","tipCounter","tipValue","zoomed","className","style","opacity","Stream","id","item","index","postId","hideRibbon","width","playerDOM","timeout","useRef","useState","isLive","videoStyle","liveStatus","useEffect","player","videojs","current","autoplay","muted","aspectRatio","src","magnetURI","type","play","console","log","cursor","display","ref","preload","controls","autoPlay","Video","contentURL","decodeURIComponent","replace","data-torrent","data-file-key","data-played","Image","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","useCallback","value","clearTimeout","timer","setTimeout","mainImageStyle","Controlled","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","alt","onLoad","Post","timestamp","avatar","publicKey","openTipModal","openUnlockModal","contentItems","username","openDeleteModal","undefined","openShareModal","_","unlockedContent","Store","content","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","selfPublicKey","setLiveStatus","isOwn","isOnlineNode","values","Object","videoContent","find","streamContent","status","getMediaContent","entries","filter","forEach","k","e","path","parseContent","key","text","finalItem","cached","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","on","scrollSnapList","length","window","addEventListener","removeEventListener","off","tipPost","targetType","postID","unlockPost","deletePost","shared","sharePost","Tooltip","rebuild","to","borderWidth","borderStyle","borderColor","backgroundImage","DateTime","fromMillis","toRelative","onClick","map","Array","from","classNames","scrollTo","data-tip","ShareIcon","color","marginLeft","SharedPost","sharerProfile","originalPostProfile","origPost","originalPost","sharedTimestamp","postPublicKey","loadPostMedia","a","attachMedia","useLayoutEffect","isAppOnline","Common","lastSeenApp","displayName","date","av1","alias","Loader"],"mappings":"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","file":"static/js/3.daf89225.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst REACT_APP_SL_SEED_URI = \"https://webtorrent.shock.network\";\nconst STREAM_STATUS_URI = `${REACT_APP_SL_SEED_URI}/rtmpapi/api/streams/live`;\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const {liveStatus} = item\n  useEffect(() =>{\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  },[item])\n  useEffect(()=>{\n    console.log(\"status:\",liveStatus)\n  },[item])\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {!isLive && liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!isLive && !liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","import React from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\n\nconst Video = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width\n}) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = {};\n  if (width) {\n    videoStyle.width = width;\n  }\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n        {!hideRibbon && (\n          <TipRibbon tipCounter={tipCounter} tipValue={tipValue} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.scoped.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width\n}) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [\n      animationTimer,\n      zoomLoaded,\n      setZoomed,\n      setZoomLoaded,\n      setPreviewVisible,\n      setAnimationTimer\n    ]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { opacity: previewVisible ? 1 : 0 };\n  if (width) {\n    mainImageStyle.width = width;\n  }\n\n  return (\n    <div className=\"media-container\">\n      <ControlledZoom\n        isZoomed={zoomed}\n        onZoomChange={handleZoomChange}\n        overlayBgColorStart=\"#16191c00\"\n        overlayBgColorEnd=\"#16191c\"\n      >\n        <img\n          className={`image torrent-img torrent-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          style={mainImageStyle}\n          src={contentURL}\n        />\n        <img\n          className={`image enlarged-img enlarged-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-file-key={index}\n          onLoad={() => {\n            setZoomLoaded(true);\n          }}\n          style={{\n            opacity: zoomed ? 1 : 0,\n            display: zoomed ? \"block\" : \"none\"\n          }}\n          src={contentURL}\n        />\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={zoomed}\n          />\n        )}\n      </ControlledZoom>\n    </div>\n  );\n};\n\nexport default Image;\n","export default __webpack_public_path__ + \"static/media/share.8ed36b2d.svg\";","// @ts-check\nimport { useEffect, useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../store\";\nimport * as Utils from \"../../utils\";\n\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport \"./css/index.scoped.css\";\n\nimport ShareIcon from \"../../images/share.svg\"\n\nconst Post = ({\n  id,\n  timestamp,\n  avatar,\n  tipCounter,\n  tipValue,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  contentItems = {},\n  username,\n  openDeleteModal = undefined,\n  openShareModal = (_)=>{},\n}) => {\n  const unlockedContent = Store.useSelector(\n    ({ content }) => content.unlockedContent\n  );\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n\n  const selfPublicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const [liveStatus,setLiveStatus] = useState('')\n  const isOwn = selfPublicKey === publicKey;\n\n  const isOnlineNode = /*Utils.isOnline(\n    Store.useSelector(Store.selectUser(publicKey)).lastSeenApp\n  );*/ true;\n\n  //effect for liveStatus\n  useEffect(() =>{\n    const values = Object.values(contentItems)\n    const videoContent = values.find(item => item.type === 'video/embedded' && item.liveStatus === 'wasLive')\n    const streamContent = values.find(item => item.type === 'stream/embedded' && item.liveStatus === 'live')\n    let status = ''\n    if(videoContent){\n      status = videoContent.liveStatus\n    }\n    if(streamContent){\n      status = streamContent.liveStatus\n    }\n    if(status){\n      setLiveStatus(status)\n    }\n  },[contentItems,setLiveStatus])\n\n  const getMediaContent = useCallback(() => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  }, [contentItems]);\n\n  const getTextContent = () => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(() => {\n    getMediaContent().forEach(([k, e]) => {\n      const path = `${publicKey}>posts>${k}`;\n      if (e.isPrivate && !unlockedContent[path]) {\n        setIsPrivate(true);\n      }\n    });\n  }, [contentItems, getMediaContent, publicKey, unlockedContent]);\n\n  const parseContent = ([key, item], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n    const finalItem = item;\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`;\n      const cached = unlockedContent[path];\n      if (cached) {\n        finalItem.magnetURI = cached;\n      } else {\n        return (\n          <div key={key}>\n            <i  className=\"fas fa-lock fa-10x\"></i>\n          </div>\n        );\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n    if (item.type === \"stream/embedded\") {\n      return (\n        <Stream\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  // useEffect(() => {\n  //   attachMedia();\n  // }, [contentItems.length]);\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id, shared: false });\n  }, [id, openDeleteModal]);\n\n  const sharePost = useCallback(()=>{  \n    openShareModal({\n      targetType: \"share\",\n      postID: id,\n      publicKey\n    })\n  },[publicKey,id,openShareModal])\n\n  useEffect(() => {\n    try {\n      Tooltip.rebuild();\n    } catch (e) {\n      console.log(`Error inside <Post />: `, e);\n    }\n  }, []);\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <Link\n            className=\"av\"\n            to={isOwn ? `/profile` : `/otherUser/${publicKey}`}\n            style={{\n              borderWidth: isOnlineNode && !isOwn ? 2 : undefined,\n              borderStyle: isOnlineNode && !isOwn ? \"solid\" : undefined,\n              borderColor: isOnlineNode && !isOwn ? \"#39B54A\" : undefined,\n              backgroundImage: `url(${avatar})`\n            }}\n          />\n          <div className=\"details\">\n            <div className=\"username\">\n              <Link to={`/otherUser/${publicKey}`}>{username}</Link>\n              {liveStatus && <p className=\"liveStatus\">\n                {liveStatus} \n                <i className={`fas fa-circle liveStatusIcon ${liveStatus === 'live' ? \"liveIcon\" : \"\"}`}></i>\n                </p>\n              }\n            </div>\n            <p>\n              {timestamp && typeof timestamp === \"number\"\n                ? DateTime.fromMillis(timestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    // TODO: Get the actual ID here. However posts can't be\n                    // edited so index is stable.\n                    key={key}\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div></div>\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n        {openShareModal && <div\n          className=\"icon-tip-btn\"\n          data-tip={\"share\"}\n          onClick={sharePost}\n          >\n            <img src={ShareIcon} style={{color:\"#4285b9\",marginLeft:\"auto\"}}/>\n        </div>}\n        {!openShareModal && <div></div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","export default __webpack_public_path__ + \"static/media/av1.e1539bb2.jpg\";","// @ts-check\nimport { useCallback, useLayoutEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"react-tooltip\";\nimport * as Common from \"shock-common\";\n\nimport Post from \".\";\n\nimport av1 from \"../../images/av1.jpg\";\nimport \"../Post/css/index.scoped.css\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport Loader from \"../Loader\";\nimport * as Store from \"../../store\";\nimport * as Utils from \"../../utils\";\n/**\n * @typedef {import('../../schema').Post} Post\n */\n\nconst SharedPost = ({\n  sharerProfile,\n  originalPostProfile,\n  originalPost: origPost,\n  sharedTimestamp,\n  postPublicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = undefined,\n  openShareModal = (_)=>{}\n}) => {\n  /** @type {Post|undefined} */\n  const originalPost = origPost;\n  const loadPostMedia = useCallback(async () => {\n    if (originalPost) {\n      attachMedia([originalPost], false);\n    }\n  }, [originalPost]);\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id: originalPost.id, shared: true });\n  }, [originalPost, openDeleteModal]);\n\n  useLayoutEffect(() => {\n    Tooltip.rebuild();\n    loadPostMedia();\n  }, [loadPostMedia]);\n\n  const selfPublicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const isOwn = sharerProfile.publicKey === selfPublicKey;\n  const isAppOnline = Common.isAppOnline(\n    Store.useSelector(Store.selectUser(sharerProfile.publicKey)).lastSeenApp\n  );\n\n  return (\n    <div className=\"post shared-post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <Link\n            to={isOwn ? `/profile` : `/otherUser/${sharerProfile.publicKey}`}\n            className=\"av\"\n            style={{\n              borderWidth: isAppOnline && !isOwn ? 2 : undefined,\n              borderStyle: isAppOnline && !isOwn ? \"solid\" : undefined,\n              borderColor: isAppOnline && !isOwn ? \"#39B54A\" : undefined,\n              backgroundImage: `url(data:image/jpeg;base64,${sharerProfile?.avatar})`\n            }}\n          ></Link>\n          <div className=\"details\">\n            <p>{sharerProfile?.displayName}</p>\n            <p>\n              {sharedTimestamp && typeof sharedTimestamp === \"number\"\n                ? DateTime.fromMillis(sharedTimestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"shared-content\">\n        {originalPost && originalPostProfile ? (\n          <Post\n            id={originalPost.id}\n            timestamp={originalPost.date}\n            avatar={\n              originalPostProfile.avatar\n                ? `data:image/jpeg;base64,${originalPostProfile.avatar}`\n                : av1\n            }\n            // @ts-expect-error tipCounter not wired right now I think\n            tipCounter={originalPost.tipCounter || 0}\n            // @ts-expect-error tipValue ??\n            tipValue={originalPost.tipValue || 0}\n            publicKey={postPublicKey}\n            openTipModal={openTipModal}\n            openUnlockModal={openUnlockModal}\n            contentItems={originalPost.contentItems ?? {}}\n            username={\n              originalPostProfile.displayName ?? originalPostProfile.alias\n            }\n            openShareModal={openShareModal}\n          />\n        ) : (\n          <Loader text=\"Loading Post...\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SharedPost;\n"],"sourceRoot":""}