{"version":3,"sources":["common/DialogNav/index.js","common/DialogPageContainer/index.js","utils/Platform.ts","common/QRCodeScanner/index.tsx","pages/Auth/components/HostStep/index.js","pages/Auth/components/UnlockStep/index.js","pages/Auth/components/CreateWalletStep/index.js","images/shocklogo-dark.png","pages/Auth/components/LogoSection/index.js","pages/Auth/components/ChoiceMethod/index.js","pages/Auth/components/ChoicesStep/index.js","pages/Auth/components/InviteStep/index.js","pages/Auth/components/ScanStep/index.js","pages/Auth/index.js"],"names":["DialogNav","pageTitle","drawerVisible","goBack","useCallback","window","history","back","className","onClick","classNames","DialogPageContainer","containerClassName","contentClassName","title","children","disableNav","style","paddingTop","isDesktop","navigator","userAgent","match","modeContents","wizard","target","description","invoice","QRCodeScanner","mode","onScan","onError","onClose","content","facingMode","constraints","video","exact","HostStep","dispatch","useDispatch","useState","error","setError","hostIP","setHostIP","connecting","setConnecting","onInputChange","e","value","name","onSubmit","a","preventDefault","noProtocolHostIP","replace","connectHost","withProtocolHostIP","connectSocket","chooseAnotherMethod","setAuthMethod","setAuthStep","type","placeholder","onChange","UnlockStep","alias","setAlias","cachedAlias","Store","node","cachedAliasDismissed","setCachedAliasDismissed","password","setPassword","loading","setLoading","unlockWallet","wallet","console","log","message","Loader","overlay","fullScreen","text","display","justifyContent","alignItems","flexDirection","width","marginTop","height","autoCorrect","autoCapitalize","CreateWalletStep","confirmPassword","setConfirmPassword","length","createWallet","LogoSection","src","shockLogo","alt","ChoiceMethod","icon","details","method","chooseMethod","ChoicesStep","selectCloudChoice","InviteStep","hostingAttemptsDone","useSelector","inviteCode","setInviteCode","Http","get","headers","Accept","Authorization","response","data","nodeURL","address","retries","SetAttemptsDone","ScanStep","connectHostIP","walletPort","JSON","parse","internalIP","externalIP","closeScanner","AuthPage","cachedHostIP","authTokenExpirationDate","authToken","authStep","auth","authMethod","currentStep","useMemo","loadCachedNode","DateTime","fromSeconds","diffNow","milliseconds","authenticated","walletStatus","setAuthenticated","useEffect"],"mappings":"qHAAA,4CA4BeA,IAxBG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cACxBC,EAASC,uBAAY,WACzBC,OAAOC,QAAQC,SACd,IACH,OACE,sBAAKC,UAAU,uBAAf,UACE,qBAAKA,UAAU,kBAAkBC,QAASN,EAA1C,SACE,mBAAGK,UAAU,0BAEf,mBAAGA,UAAU,mBAAb,SAAiCP,IACjC,sBACEO,UAAWE,IAAW,CACpB,uBAAuB,EACvB,qBAAsBR,IAH1B,UAME,qBAAKM,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,iC,uDCtBvB,kCA8BeG,IA1Ba,SAAC,GAMtB,IAAD,IALJC,0BAKI,MALiB,GAKjB,MAJJC,wBAII,MAJe,GAIf,EAHJC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SAEI,IADJC,kBACI,SACJ,OACE,sBACER,UAAS,qCAAgCI,GACzCK,MACED,EACI,CACEE,WAAY,GAEd,GAPR,UAUIF,EAA+C,KAAlC,cAAC,IAAD,CAAWf,UAAWa,IACrC,qBAAKN,UAAS,mCAA8BK,GAA5C,SACGE,S,0FCrBII,EAAY,kBAFrBC,UAAUC,UAAUC,MAAM,8C,gBCWxBC,EAAe,CACnBC,OAAQ,CACNV,MAAO,SACPW,OAAQ,UACRC,YAAa,8CAEfC,QAAS,CACPb,MAAO,UACPW,OAAQ,UACRC,YAAa,wCA8CFE,IA1CO,SAAC,GAKT,IAAD,IAJXC,YAIW,MAJJ,SAII,EAHXC,EAGW,EAHXA,OACAC,EAEW,EAFXA,QACAC,EACW,EADXA,QAEMC,EAAUV,EAAaM,GACvBK,EAAaf,IAAc,OAAS,cAE1C,OACE,sBAAKX,UAAU,4BAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,mBAAGA,UAAU,eAAeC,QAASuB,MAGvC,cAAC,IAAD,CACEG,YAAa,CACXC,MAAO,CACLF,WAAY,CAAEG,MAAOH,KAGzBJ,OAAQA,EACRC,QAASA,IAGX,qBAAKvB,UAAU,sBACf,sBAAKA,UAAU,4BAAf,UACE,oBAAGA,UAAU,0BAAb,UACGyB,EAAQnB,MAAO,IAChB,sBAAMN,UAAU,oCAAhB,SACGyB,EAAQR,YAGb,mBAAGjB,UAAU,gCAAb,SAA8CyB,EAAQP,cACtD,qBAAKlB,UAAU,iBAAiBC,QAASuB,EAAzC,iC,4PCyBOM,EA7EE,WACf,IAAMC,EAAWC,cADI,EAEKC,qBAFL,mBAEdC,EAFc,KAEPC,EAFO,OAGOF,mBAAS,IAHhB,mBAGdG,EAHc,KAGNC,EAHM,OAIeJ,oBAAS,GAJxB,mBAIdK,EAJc,KAIFC,EAJE,KAMfC,EAAgB5C,uBAAY,SAAA6C,GAAM,IAAD,EACbA,EAAExB,OAAlByB,EAD6B,EAC7BA,MACR,OAFqC,EACtBC,MAEb,IAAK,SAEH,YADAN,EAAUK,GAGZ,QACE,UAEH,IAEGE,EAAQ,uCAAG,WAAMH,GAAN,mBAAAI,EAAA,kEAEbJ,EAAEK,kBACER,EAHS,wDAMbC,GAAc,GACdJ,EAAS,MACHY,EAAmBX,EAAOY,QAAQ,mBAAoB,IAR/C,SASwBC,YAAYF,EAAZE,CACnClB,GAVW,gBASLmB,EATK,EASLA,mBAGRC,YAAcD,GAZD,kDAcbX,GAAc,GACdJ,EAAS,6BAfI,0DAAH,sDAmBRiB,EAAsBxD,uBAAY,WACtCmC,EAASsB,YAAc,OACvBtB,EAASuB,YAAY,SACpB,CAACvB,IAEJ,OACE,sBAAK/B,UAAU,sBAAf,WACIsC,GACA,mBAAGtC,UAAU,4BAAb,6BAEF,sBAAMA,UAAU,YAAY4C,SAAUA,EAAtC,SACGN,EACC,8CAEA,qCACE,uBACEiB,KAAK,OACLZ,KAAK,SACLa,YAAY,mCACZd,MAAON,EACPqB,SAAUjB,EACVxC,UAAWE,IAAW,CACpB,eAAe,EACf,sBAAuBgC,MAG1BA,EAAQ,mBAAGlC,UAAU,kBAAb,SAAgCkC,IAAa,KACtD,wBAAQlC,UAAU,aAAauD,KAAK,SAApC,qBAGA,mBAAGvD,UAAU,cAAcC,QAASmD,EAApC,4C,iBCsDGM,EAxHI,WACjB,IAAM3B,EAAWC,cADM,EAEGC,qBAFH,mBAEhBC,EAFgB,KAETC,EAFS,OAGGF,mBAAS,IAHZ,mBAGhB0B,EAHgB,KAGTC,EAHS,KAIjBC,EAAcC,eAAkB,qBAAGC,KAAgBJ,SAJlC,EAKiC1B,oBAAS,GAL1C,mBAKhB+B,EALgB,KAKMC,EALN,OAMShC,mBAAS,IANlB,mBAMhBiC,EANgB,KAMNC,EANM,OAOOlC,oBAAS,GAPhB,mBAOhBmC,EAPgB,KAOPC,EAPO,KASjB7B,EAAgB5C,uBAAY,SAAA6C,GAAM,IAAD,EACbA,EAAExB,OAAlByB,EAD6B,EAC7BA,MACR,OAFqC,EACtBC,MAEb,IAAK,QAEH,YADAiB,EAASlB,GAGX,IAAK,WAEH,YADAyB,EAAYzB,GAGd,QACE,UAEH,IAEGE,EAAWhD,sBAAW,uCAC1B,WAAM6C,GAAN,eAAAI,EAAA,6DACEJ,EAAEK,iBACFuB,GAAW,GAFb,kBAIyBtC,EACnBuC,YAAa,CAEXX,MAAOA,GAASE,EAChBK,cARR,OAIUK,EAJV,OAWIC,QAAQC,IAAI,mBAAoBF,GAXpC,gDAaIpC,EAAS,KAAIuC,SACbL,GAAW,GAdf,yDAD0B,sDAkB1B,CAACV,EAAOK,EAAsBH,EAAaK,EAAUnC,EAAUI,IAG3DiB,EAAsBxD,uBAAY,WACtCmC,EAASsB,YAAc,OACvBtB,EAASuB,YAAY,SACpB,CAACvB,IAEJ,OACE,sBAAK/B,UAAU,sBAAf,UACGoE,EACC,cAACO,EAAA,EAAD,CAAQC,SAAO,EAACC,YAAU,EAACC,KAAK,wBAC9B,KACJ,mBAAG9E,UAAU,4BAAb,2BACA,uBAAMA,UAAU,YAAY4C,SAAUA,EAAtC,UACGiB,IAAgBG,EACf,qCACE,sBACEvD,MAAO,CACLsE,QAAS,OACTC,eAAgB,eAChBC,WAAY,SACZC,cAAe,MACfC,MAAO,QANX,UASE,2CAActB,KAEd,sBACE7D,UAAU,cACVS,MAAO,CAEL2E,UAAW,OAEbnF,QAAS,WACPgE,GAAwB,IAP5B,uBAcF,qBAAKxD,MAAO,CAAE4E,OAAQ,SAGxB,uBACE9B,KAAK,OACLZ,KAAK,QACLa,YAAY,eACZd,MAAOiB,EACPF,SAAUjB,EACVxC,UAAU,cACVsF,YAAY,MACZC,eAAe,SAGnB,uBACEhC,KAAK,WACLZ,KAAK,WACLa,YAAY,kBACZd,MAAOwB,EACPT,SAAUjB,EACVxC,UAAU,gBAEXkC,EAAQ,mBAAGlC,UAAU,kBAAb,SAAgCkC,IAAa,KACtD,wBAAQlC,UAAU,aAAlB,oBACA,mBAAGA,UAAU,cAAcC,QAASmD,EAApC,gCAGA,mBAAGpD,UAAU,cAAcC,QAASmD,EAApC,0CCNOoC,EA5GU,WACvB,IAAMzD,EAAWC,cADY,EAEHC,qBAFG,mBAEtBC,EAFsB,KAEfC,EAFe,OAGHF,mBAAS,IAHN,mBAGtB0B,EAHsB,KAGfC,EAHe,OAIG3B,mBAAS,IAJZ,mBAItBiC,EAJsB,KAIZC,EAJY,OAKiBlC,mBAAS,IAL1B,mBAKtBwD,EALsB,KAKLC,EALK,OAMCzD,oBAAS,GANV,mBAMtBmC,EANsB,KAMbC,EANa,KAQvB7B,EAAgB5C,uBAAY,SAAA6C,GAAM,IAAD,EACbA,EAAExB,OAAlByB,EAD6B,EAC7BA,MACR,OAFqC,EACtBC,MAEb,IAAK,QAEH,YADAiB,EAASlB,GAGX,IAAK,WAEH,YADAyB,EAAYzB,GAGd,IAAK,kBAEH,YADAgD,EAAmBhD,GAGrB,QACE,UAEH,IAEGE,EAAWhD,sBAAW,uCAC1B,WAAM6C,GAAN,eAAAI,EAAA,yDACEJ,EAAEK,mBAEEa,EAAMgC,OAAS,GAAKhC,EAAMgC,OAAS,IAHzC,uBAIIxD,EAAS,wDAJb,6BAQM+B,IAAauB,EARnB,uBASItD,EAAS,mDATb,+BAaM+B,EAASyB,OAAS,GAAKzB,EAASyB,OAAS,IAb/C,wBAcIxD,EAAS,kDAdb,4CAmBIkC,GAAW,GAnBf,UAoByBtC,EAAS6D,YAAa,CAAEjC,QAAOO,cApBxD,QAoBUK,EApBV,OAqBIC,QAAQC,IAAI,mBAAoBF,GArBpC,mDAuBIpC,EAAS,KAAIuC,SAvBjB,yBAyBIL,GAAW,GAzBf,8EAD0B,sDA6B1B,CAACV,EAAOO,EAAUuB,EAAiB1D,IAG/BqB,EAAsBxD,uBAAY,WACtCmC,EAASsB,YAAc,OACvBtB,EAASuB,YAAY,SACpB,CAACvB,IAEJ,OACE,sBAAK/B,UAAU,sBAAf,UACGoE,EACC,cAACO,EAAA,EAAD,CAAQC,SAAO,EAACC,YAAU,EAACC,KAAK,2BAC9B,KACJ,mBAAG9E,UAAU,4BAAb,+BACA,uBAAMA,UAAU,YAAY4C,SAAUA,EAAtC,UACE,uBACEW,KAAK,OACLZ,KAAK,QACLa,YAAY,eACZd,MAAOiB,EACPF,SAAUjB,EACVxC,UAAU,cACVsF,YAAY,MACZC,eAAe,SAEjB,uBACEhC,KAAK,WACLZ,KAAK,WACLa,YAAY,kBACZd,MAAOwB,EACPT,SAAUjB,EACVxC,UAAU,gBAEZ,uBACEuD,KAAK,WACLZ,KAAK,kBACLa,YAAY,0BACZd,MAAO+C,EACPhC,SAAUjB,EACVxC,UAAU,gBAEXkC,EAAQ,mBAAGlC,UAAU,kBAAb,SAAgCkC,IAAa,KACtD,wBAAQlC,UAAU,aAAlB,oBACA,mBAAGA,UAAU,cAAcC,QAASmD,EAApC,0CC1GO,MAA0B,2CCU1ByC,G,OANK,kBAClB,qBAAK7F,UAAU,mBAAf,SACE,qBAAKA,UAAU,YAAY8F,IAAKC,EAAWC,IAAI,yBCepCC,G,OAhBM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC/BrE,EAAWC,cACXqE,EAAezG,uBAAY,WAC/BmC,EAASsB,YAAc+C,MACtB,CAACrE,EAAUqE,IAEd,OACE,sBAAKpG,UAAU,mBAAmBC,QAASoG,EAA3C,UACE,qBAAKrG,UAAU,wBAAf,SACE,mBAAGA,UAAS,6BAAwBkG,OAEtC,mBAAGlG,UAAU,cAAb,SAA4BmG,SC0BnBG,G,OApCK,WAClB,IAAMvE,EAAWC,cACXuE,EAAoB3G,uBAAY,WACpCmC,EAASsB,YAAc,iBACtB,CAACtB,IAEJ,OACE,sBAAK/B,UAAU,yBAAf,UACE,mBAAGA,UAAU,gBAAb,qBACA,mBAAGA,UAAU,eAAb,iHAGA,sBAAKA,UAAU,oBAAf,UACE,cAAC,EAAD,CACEkG,KAAK,cACLC,QAAQ,6DACRC,OAAO,WAET,cAAC,EAAD,CACEF,KAAK,SACLC,QAAQ,sDACRC,OAAO,gBAET,cAAC,EAAD,CACEF,KAAK,QACLC,QAAQ,uDACRC,OAAO,eAET,mBAAGpG,UAAU,cAAcC,QAASsG,EAApC,2CC8DOC,EArFI,WACjB,IAAMzE,EAAWC,cACXyE,EAAsBC,aAAY,qBAAE3C,KAAe0C,uBAFlC,EAGOxE,oBAAS,GAHhB,mBAGhBmC,EAHgB,KAGPC,EAHO,OAIGpC,mBAAS,IAJZ,mBAIhBC,EAJgB,KAITC,EAJS,OAKaF,mBAAS,IALtB,mBAKhB0E,EALgB,KAKJC,EALI,KAOjBpE,EAAgB5C,uBAAY,SAAA6C,GAAM,IAAD,EACbA,EAAExB,OAAlByB,EAD6B,EAC7BA,MACR,OAFqC,EACtBC,MAEb,IAAK,aAEH,YADAiE,EAAclE,GAGhB,QACE,UAEH,IAEGE,EAAWhD,sBAAW,uCAC1B,WAAM6C,GAAN,2BAAAI,EAAA,sEAEIJ,EAAEK,iBACFX,EAAS,MACTkC,GAAW,GAJf,SAKqCwC,IAAKC,IAAL,kBA3BlB,qBA2BkB,YAE/B,CACEC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYN,MAVnC,uBAKkBO,EALlB,EAKYC,KASFC,EAAUF,EAASC,KAAKE,QACxBtE,EAAmBqE,EAAQpE,QAAQ,mBAAoB,IACvDsE,EAAUb,EAAsB,EAAI,EAhB9C,UAiByCxD,YAAYF,GAAiB,EAAKuE,EAAlCrE,CACnClB,GAlBN,iBAiBYmB,EAjBZ,EAiBYA,mBAGLuD,GACDc,cAAkBxF,GAEpBoB,YAAcD,GAvBlB,kDAyBImB,GAAW,GACXlC,EAAS,6BA1Bb,0DAD0B,sDA8B1B,CAACJ,EAASwF,IAAgBd,EAAqBE,IAG3CvD,EAAsBxD,uBAAY,WACtCmC,EAASsB,YAAc,OACvBtB,EAASuB,YAAY,SACpB,CAACvB,IAEJ,OACE,sBAAK/B,UAAU,sBAAf,UACE,mBAAGA,UAAU,4BAAb,6BACA,uBAAMA,UAAU,YAAY4C,SAAUA,EAAtC,UACGwB,EAAU,cAACO,EAAA,EAAD,CAAQE,YAAU,EAACD,SAAO,IAAM,KAC3C,uBACErB,KAAK,OACLZ,KAAK,aACLa,YAAY,6BACZd,MAAOiE,EACPlD,SAAUjB,EACVxC,UAAWE,IAAW,CACpB,eAAe,EACf,sBAAuBgC,MAG1BA,EAAQ,mBAAGlC,UAAU,kBAAb,SAAgCkC,IAAa,KACtD,wBAAQlC,UAAU,aAAauD,KAAK,SAApC,qBAGA,mBAAGvD,UAAU,cAAcC,QAASmD,EAApC,0C,SCIOoE,EAnFE,WACf,IAAMzF,EAAWC,cADI,EAEKC,qBAFL,mBAEPE,GAFO,aAGSF,oBAAS,GAHlB,mBAGdmC,EAHc,KAGLC,EAHK,KAKfoD,EAAgB7H,sBAAW,uCAC/B,WAAOwC,EAAQsF,GAAf,mBAAA7E,EAAA,sEAEI2B,QAAQC,IAAI,iBAAkBrC,GACxBW,EAAmBX,EAAOY,QAAQ,mBAAoB,IAHhE,SAIyCC,YAAY,GAAD,OAC3CF,EAD2C,YACvB2E,GADYzE,CAEnClB,GANN,uBAIYmB,EAJZ,EAIYA,mBAGRC,YAAcD,GAPlB,mBAQW,GARX,4DAUW,GAVX,0DAD+B,wDAc/B,CAACnB,IAGGT,EAAS1B,sBAAW,uCACxB,WAAMuH,GAAN,qBAAAtE,EAAA,kEAESsE,EAFT,wDAKI9C,GAAW,GACXG,QAAQC,IAAI,gBAAiB0C,GAC7BhF,EAAS,MAPb,EAQmDwF,KAAKC,MAAMT,EAAKrC,MAAvD+C,EARZ,EAQYA,WAAYC,EARxB,EAQwBA,WAAYJ,EARpC,EAQoCA,WARpC,SASqCD,EAAcI,EAAYH,GAT/D,0CAYMrD,GAAW,GAZjB,mBAaa,GAbb,yBAgBqCoD,EAAcK,EAAYJ,GAhB/D,2CAmBMrD,GAAW,GAnBjB,mBAoBa,GApBb,QAuBIlC,EAAS,iHAvBb,kDA2BIkC,GAAW,GACXG,QAAQtC,MAAR,MACAC,EAAS,KAAMuC,SA7BnB,0DADwB,sDAiCxB,CAAC+C,IAGGlG,EAAU3B,uBAAY,SAAAsC,GAC1BsC,QAAQtC,MAAMA,GACdC,EACE,4HAED,IAEG4F,EAAenI,uBAAY,WAC/BmC,EAASsB,YAAc,OACvBtB,EAASuB,YAAY,SACpB,CAACvB,IAEJ,OACE,sBAAK/B,UAAU,sBAAf,UACGoE,EAAU,cAACO,EAAA,EAAD,CAAQE,YAAU,EAACD,SAAO,EAACE,KAAK,oBAAuB,KAClE,cAAC1D,EAAA,EAAD,CACEC,KAAK,SACLC,OAAQA,EACRC,QAASA,EACTC,QAASuG,Q,OCkCFC,UAvGE,WACf,IAAMjG,EAAWC,cACXiG,EAAevB,aAAY,qBAAG3C,KAAgB3B,UAF/B,EAGSH,qBAAWgG,GAHpB,mBAGd7D,EAHc,KAGLC,EAHK,OAIKpC,mBAAS,MAJd,mBAIdC,EAJc,KAIPC,EAJO,KAKf+F,EAA0BxB,aAC9B,qBAAG3C,KAAgBmE,2BAEfC,EAAYzB,aAAY,qBAAG3C,KAAgBoE,aAC3CC,EAAW1B,aAAY,qBAAG2B,KAAgBD,YAC1CE,EAAa5B,aAAY,qBAAG2B,KAAgBC,cAE5CC,EAAcC,mBAAQ,WAC1B,MAAmB,WAAfF,GACe,SAAbF,EACK,cAAC,EAAD,IAIQ,gBAAfE,GACe,SAAbF,EACK,cAAC,EAAD,IAIQ,eAAfE,GACe,eAAbF,EACK,cAAC,EAAD,IAIM,iBAAbA,GAA4C,YAAbA,EAC1B,cAAC,EAAD,IAGQ,iBAAbA,EACK,cAAC,EAAD,IAGF,cAAC,EAAD,MACN,CAACA,EAAUE,IAERG,EAAiB7I,sBAAW,sBAAC,kCAAAiD,EAAA,mEAE3BoF,EAF2B,wBAG7BzD,QAAQC,IAAI,0BAHiB,SAKFxB,YAAYgF,GAAc,EAA1BhF,CAAiClB,GAL/B,oBAQ3BsC,GAAW,KAIX8D,GACAO,WAASC,YAAYT,GAAyBU,UAAUC,aACtD,GAdyB,wBAgB3BxE,GAAW,GAhBgB,UAiBWwC,IAAKC,IAAL,iBAjBX,qBAiBbgC,EAjBa,EAiBnB3B,MACWA,KAlBQ,kCAmBYN,IAAKC,IAAL,0BAnBZ,iBAmBXiC,EAnBW,EAmBjB5B,KAGR3C,QAAQC,IAAIsE,GAtBa,eAwB3BzF,YAAY,gBACZH,YAAc8E,GACd5D,GAAW,GACXtC,EAASiH,YAAiBF,EAAc3B,OA3Bb,2BA+BzBgB,IACF9D,GAAW,GACXf,YAAY,gBACZe,GAAW,IAlCgB,0DAsC/BlC,EACE,6FAEFkC,GAAW,GAzCoB,0DA2ChC,CAAC4D,EAAclG,EAAUoG,EAAWD,IAMvC,OAJAe,qBAAU,WACRR,MACC,CAACA,IAGF,eAACtI,EAAA,EAAD,CAAqBK,YAAU,EAACH,iBAAiB,oBAAjD,UACE,cAAC,EAAD,IACC+D,GAAW,8CAEXlC,GAAS,wDAA2BA,MAEnCkC,IAAYlC,GAASqG","file":"static/js/19.161f919b.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst DialogNav = ({ pageTitle, drawerVisible }) => {\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n  return (\n    <div className=\"dialog-nav-container\">\n      <div className=\"dialog-nav-back\" onClick={goBack}>\n        <i className=\"icon icon-thin-back\"></i>\n      </div>\n      <p className=\"dialog-nav-title\">{pageTitle}</p>\n      <div\n        className={classNames({\n          \"dialog-nav-menu-btn\": true,\n          \"dialog-nav-hidden\": !drawerVisible\n        })}\n      >\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DialogNav;\n","import React from \"react\";\nimport DialogNav from \"../../common/DialogNav\";\nimport \"./css/index.css\";\n\nconst DialogPageContainer = ({\n  containerClassName = \"\",\n  contentClassName = \"\",\n  title,\n  children,\n  disableNav = false\n}) => {\n  return (\n    <div\n      className={`page-container dialog-page ${containerClassName}`}\n      style={\n        disableNav\n          ? {\n              paddingTop: 0\n            }\n          : {}\n      }\n    >\n      {!disableNav ? <DialogNav pageTitle={title} /> : null}\n      <div className={`dialog-content-container ${contentClassName}`}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default DialogPageContainer;\n","export const isMobile = (): boolean =>\n  !!navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n\nexport const isDesktop = (): boolean => (!isMobile() ? true : false);\n","import QRScanner from \"react-qr-scanner\";\nimport { isDesktop } from \"../../utils/Platform\";\nimport \"./css/index.css\";\n\ntype ScannerMode = \"wizard\" | \"invoice\";\ninterface Props {\n  mode: ScannerMode;\n  onScan: (result: string | null) => void;\n  onError: (error: Error) => void;\n  onClose: () => void;\n}\n\nconst modeContents = {\n  wizard: {\n    title: \"SCAN A\",\n    target: \"QR CODE\",\n    description: \"Point your camera at a ShockWizard QR Code\"\n  },\n  invoice: {\n    title: \"SCAN AN\",\n    target: \"INVOICE\",\n    description: \"Point your camera at an LND Invoice\"\n  }\n};\n\nconst QRCodeScanner = ({\n  mode = \"wizard\",\n  onScan,\n  onError,\n  onClose\n}: Props) => {\n  const content = modeContents[mode];\n  const facingMode = isDesktop() ? \"user\" : \"environment\";\n\n  return (\n    <div className=\"qr-code-scanner-container\">\n      <div className=\"qr-scanner-top-section\">\n        <i className=\"fas fa-times\" onClick={onClose}></i>\n      </div>\n\n      <QRScanner\n        constraints={{\n          video: {\n            facingMode: { exact: facingMode }\n          }\n        }}\n        onScan={onScan}\n        onError={onError}\n      />\n\n      <div className=\"qr-scanner-target\" />\n      <div className=\"qr-scanner-bottom-section\">\n        <p className=\"qr-scanner-bottom-title\">\n          {content.title}{\" \"}\n          <span className=\"qr-scanner-bottom-title-highlight\">\n            {content.target}\n          </span>\n        </p>\n        <p className=\"qr-scanner-bottom-description\">{content.description}</p>\n        <div className=\"qr-scanner-btn\" onClick={onClose}>\n          Cancel Scan\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QRCodeScanner;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { connectHost } from \"../../../../actions/NodeActions\";\nimport { connectSocket } from \"../../../../utils/WebSocket\";\nimport { setAuthMethod, setAuthStep } from \"../../../../actions/AuthActions\";\n\nconst HostStep = () => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState();\n  const [hostIP, setHostIP] = useState(\"\");\n  const [connecting, setConnecting] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    const { value, name } = e.target;\n    switch (name) {\n      case \"hostIP\": {\n        setHostIP(value);\n        return;\n      }\n      default:\n        return;\n    }\n  }, []);\n\n  const onSubmit = async e => {\n    try {\n      e.preventDefault();\n      if (connecting) {\n        return;\n      }\n      setConnecting(true);\n      setError(null);\n      const noProtocolHostIP = hostIP.replace(/^http(s)?:\\/\\//gi, \"\");\n      const { withProtocolHostIP } = await connectHost(noProtocolHostIP)(\n        dispatch\n      );\n      connectSocket(withProtocolHostIP);\n    } catch (error) {\n      setConnecting(false);\n      setError(\"Unable to connect to host\");\n    }\n  };\n\n  const chooseAnotherMethod = useCallback(() => {\n    dispatch(setAuthMethod(null));\n    dispatch(setAuthStep(null));\n  }, [dispatch]);\n\n  return (\n    <div className=\"auth-form-container\">\n      {!connecting && (\n        <p className=\"auth-form-container-title\">Connect to Node</p>\n      )}\n      <form className=\"auth-form\" onSubmit={onSubmit}>\n        {connecting ? (\n          <p>Connecting...</p>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              name=\"hostIP\"\n              placeholder=\"Host Address (in IP or DNS form)\"\n              value={hostIP}\n              onChange={onInputChange}\n              className={classNames({\n                \"input-field\": true,\n                \"input-field-error\": !!error\n              })}\n            />\n            {error ? <p className=\"error-container\">{error}</p> : null}\n            <button className=\"submit-btn\" type=\"submit\">\n              Connect\n            </button>\n            <p className=\"inline-link\" onClick={chooseAnotherMethod}>\n              Choose another method\n            </p>\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default HostStep;\n","// @ts-check\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Loader from \"../../../../common/Loader\";\nimport { unlockWallet } from \"../../../../actions/NodeActions\";\nimport { setAuthMethod, setAuthStep } from \"../../../../actions/AuthActions\";\nimport * as Store from \"../../../../store\";\n\nconst UnlockStep = () => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState();\n  const [alias, setAlias] = useState(\"\");\n  const cachedAlias = Store.useSelector(({ node }) => node.alias);\n  const [cachedAliasDismissed, setCachedAliasDismissed] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    const { value, name } = e.target;\n    switch (name) {\n      case \"alias\": {\n        setAlias(value);\n        return;\n      }\n      case \"password\": {\n        setPassword(value);\n        return;\n      }\n      default:\n        return;\n    }\n  }, []);\n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      setLoading(true);\n      try {\n        const wallet = await dispatch(\n          unlockWallet({\n            // Do not replace \"||\" with \"??\"\n            alias: alias || cachedAlias,\n            password\n          })\n        );\n        console.log(\"Wallet Response:\", wallet);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    },\n    [alias, cachedAliasDismissed, cachedAlias, password, dispatch, setError]\n  );\n\n  const chooseAnotherMethod = useCallback(() => {\n    dispatch(setAuthMethod(null));\n    dispatch(setAuthStep(null));\n  }, [dispatch]);\n\n  return (\n    <div className=\"auth-form-container\">\n      {loading ? (\n        <Loader overlay fullScreen text=\"Unlocking Wallet...\" />\n      ) : null}\n      <p className=\"auth-form-container-title\">Unlock Wallet</p>\n      <form className=\"auth-form\" onSubmit={onSubmit}>\n        {cachedAlias && !cachedAliasDismissed ? (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                alignItems: \"center\",\n                flexDirection: \"row\",\n                width: \"100%\"\n              }}\n            >\n              <span>Alias: {cachedAlias}</span>\n\n              <span\n                className=\"inline-link\"\n                style={{\n                  // TODO: why would a link class have marginTop? Unset it:\n                  marginTop: \"0px\"\n                }}\n                onClick={() => {\n                  setCachedAliasDismissed(true);\n                }}\n              >\n                change\n              </span>\n            </div>\n\n            <div style={{ height: 24 }} />\n          </>\n        ) : (\n          <input\n            type=\"text\"\n            name=\"alias\"\n            placeholder=\"Wallet Alias\"\n            value={alias}\n            onChange={onInputChange}\n            className=\"input-field\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n          />\n        )}\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Wallet Password\"\n          value={password}\n          onChange={onInputChange}\n          className=\"input-field\"\n        />\n        {error ? <p className=\"error-container\">{error}</p> : null}\n        <button className=\"submit-btn\">Unlock</button>\n        <p className=\"inline-link\" onClick={chooseAnotherMethod}>\n          Create a new alias\n        </p>\n        <p className=\"inline-link\" onClick={chooseAnotherMethod}>\n          Choose another method\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default UnlockStep;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setAuthMethod, setAuthStep } from \"../../../../actions/AuthActions\";\nimport { createWallet } from \"../../../../actions/NodeActions\";\nimport Loader from \"../../../../common/Loader\";\n\nconst CreateWalletStep = () => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState();\n  const [alias, setAlias] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    const { value, name } = e.target;\n    switch (name) {\n      case \"alias\": {\n        setAlias(value);\n        return;\n      }\n      case \"password\": {\n        setPassword(value);\n        return;\n      }\n      case \"confirmPassword\": {\n        setConfirmPassword(value);\n        return;\n      }\n      default:\n        return;\n    }\n  }, []);\n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n\n      if (alias.length < 3 || alias.length > 32) {\n        setError(\"Please specify an alias that is 3-32 characters long\");\n        return;\n      }\n\n      if (password !== confirmPassword) {\n        setError(\"Password and Confirm password fields must match\");\n        return;\n      }\n\n      if (password.length < 8 || password.length > 32) {\n        setError(\"Password length should be 8-32 characters long\");\n        return;\n      }\n\n      try {\n        setLoading(true);\n        const wallet = await dispatch(createWallet({ alias, password }));\n        console.log(\"Wallet Response:\", wallet);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [alias, password, confirmPassword, dispatch]\n  );\n\n  const chooseAnotherMethod = useCallback(() => {\n    dispatch(setAuthMethod(null));\n    dispatch(setAuthStep(null));\n  }, [dispatch]);\n\n  return (\n    <div className=\"auth-form-container\">\n      {loading ? (\n        <Loader overlay fullScreen text=\"Creating New Wallet...\" />\n      ) : null}\n      <p className=\"auth-form-container-title\">Create New Wallet</p>\n      <form className=\"auth-form\" onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"alias\"\n          placeholder=\"Wallet Alias\"\n          value={alias}\n          onChange={onInputChange}\n          className=\"input-field\"\n          autoCorrect=\"off\"\n          autoCapitalize=\"none\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Wallet Password\"\n          value={password}\n          onChange={onInputChange}\n          className=\"input-field\"\n        />\n        <input\n          type=\"password\"\n          name=\"confirmPassword\"\n          placeholder=\"Confirm Wallet Password\"\n          value={confirmPassword}\n          onChange={onInputChange}\n          className=\"input-field\"\n        />\n        {error ? <p className=\"error-container\">{error}</p> : null}\n        <button className=\"submit-btn\">Create</button>\n        <p className=\"inline-link\" onClick={chooseAnotherMethod}>\n          Choose another method\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateWalletStep;\n","export default __webpack_public_path__ + \"static/media/shocklogo-dark.ebc8cee3.png\";","import React from \"react\";\nimport shockLogo from \"../../../../images/shocklogo-dark.png\";\nimport \"./css/index.css\";\n\nconst LogoSection = () => (\n  <div className=\"auth-logo-header\">\n    <img className=\"auth-logo\" src={shockLogo} alt=\"ShockWallet Logo\" />\n  </div>\n);\n\nexport default LogoSection;\n","import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setAuthMethod } from \"../../../../actions/AuthActions\";\nimport \"./css/index.css\";\n\nconst ChoiceMethod = ({ icon, details, method }) => {\n  const dispatch = useDispatch();\n  const chooseMethod = useCallback(() => {\n    dispatch(setAuthMethod(method));\n  }, [dispatch, method]);\n\n  return (\n    <div className=\"choice-container\" onClick={chooseMethod}>\n      <div className=\"choice-icon-container\">\n        <i className={`choice-icon fas fa-${icon}`} />\n      </div>\n      <p className=\"choice-info\">{details}</p>\n    </div>\n  );\n};\n\nexport default ChoiceMethod;\n","import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport ChoiceMethod from \"../ChoiceMethod\";\nimport { setAuthMethod } from \"../../../../actions/AuthActions\";\nimport \"./css/index.css\";\n\nconst ChoicesStep = () => {\n  const dispatch = useDispatch();\n  const selectCloudChoice = useCallback(() => {\n    dispatch(setAuthMethod(\"shockCloud\"));\n  }, [dispatch]);\n\n  return (\n    <div className=\"choices-step-container\">\n      <p className=\"choices-title\">Node Up</p>\n      <p className=\"choices-desc\">\n        In a decentralized network, a node is like a personal server that works even as your mobile sleeps.\n      </p>\n      <div className=\"choices-container\">\n        <ChoiceMethod\n          icon=\"code-branch\"\n          details=\"I already have a node, and want to enter a network address\"\n          method=\"manual\"\n        />\n        <ChoiceMethod\n          icon=\"qrcode\"\n          details=\"I'll install the ShockNode Wizard app on a computer\"\n          method=\"shockWizard\"\n        />\n        <ChoiceMethod\n          icon=\"cloud\"\n          details=\"I'd like a personal cloud node provided as a service\"\n          method=\"shockCloud\"\n        />\n        <p className=\"inline-link\" onClick={selectCloudChoice}>\n          I have a guest invite\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ChoicesStep;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { connectHost,SetAttemptsDone } from \"../../../../actions/NodeActions\";\nimport { connectSocket } from \"../../../../utils/WebSocket\";\nimport Http from \"../../../../utils/Http\";\nimport Loader from \"../../../../common/Loader\";\nimport { setAuthMethod, setAuthStep } from \"../../../../actions/AuthActions\";\n\nconst HOSTING_SERVER = \"pool.shock.network\";\n\nconst InviteStep = () => {\n  const dispatch = useDispatch();\n  const hostingAttemptsDone = useSelector(({node}) => node.hostingAttemptsDone)\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [inviteCode, setInviteCode] = useState(\"\");\n\n  const onInputChange = useCallback(e => {\n    const { value, name } = e.target;\n    switch (name) {\n      case \"inviteCode\": {\n        setInviteCode(value);\n        return;\n      }\n      default:\n        return;\n    }\n  }, []);\n\n  const onSubmit = useCallback(\n    async e => {\n      try {\n        e.preventDefault();\n        setError(null);\n        setLoading(true);\n        const { data: response } = await Http.get(\n          `https://${HOSTING_SERVER}/mainnet`,\n          {\n            headers: {\n              Accept: \"application/json\",\n              Authorization: `Bearer ${inviteCode}`\n            }\n          }\n        );\n        const nodeURL = response.data.address;\n        const noProtocolHostIP = nodeURL.replace(/^http(s)?:\\/\\//gi, \"\");\n        const retries = hostingAttemptsDone ? 0 : 4\n        const { withProtocolHostIP } = await connectHost(noProtocolHostIP,true,retries)(\n          dispatch\n        );\n        if(hostingAttemptsDone){\n          SetAttemptsDone()(dispatch)\n        }\n        connectSocket(withProtocolHostIP);\n      } catch (error) {\n        setLoading(false);\n        setError(\"Unable to connect to host\");\n      }\n    },\n    [dispatch,SetAttemptsDone,hostingAttemptsDone, inviteCode]\n  );\n\n  const chooseAnotherMethod = useCallback(() => {\n    dispatch(setAuthMethod(null));\n    dispatch(setAuthStep(null));\n  }, [dispatch]);\n\n  return (\n    <div className=\"auth-form-container\">\n      <p className=\"auth-form-container-title\">Invitation Code</p>\n      <form className=\"auth-form\" onSubmit={onSubmit}>\n        {loading ? <Loader fullScreen overlay /> : null}\n        <input\n          type=\"text\"\n          name=\"inviteCode\"\n          placeholder=\"Enter your invitation code\"\n          value={inviteCode}\n          onChange={onInputChange}\n          className={classNames({\n            \"input-field\": true,\n            \"input-field-error\": !!error\n          })}\n        />\n        {error ? <p className=\"error-container\">{error}</p> : null}\n        <button className=\"submit-btn\" type=\"submit\">\n          Connect\n        </button>\n        <p className=\"inline-link\" onClick={chooseAnotherMethod}>\n          Choose another method\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default InviteStep;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { connectHost } from \"../../../../actions/NodeActions\";\nimport { connectSocket } from \"../../../../utils/WebSocket\";\nimport QRCodeScanner from \"../../../../common/QRCodeScanner\";\nimport Loader from \"../../../../common/Loader\";\nimport { setAuthMethod, setAuthStep } from \"../../../../actions/AuthActions\";\n\nconst ScanStep = () => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const connectHostIP = useCallback(\n    async (hostIP, walletPort) => {\n      try {\n        console.log(\"connectHostIP:\", hostIP);\n        const noProtocolHostIP = hostIP.replace(/^http(s)?:\\/\\//gi, \"\");\n        const { withProtocolHostIP } = await connectHost(\n          `${noProtocolHostIP}:${walletPort}`\n        )(dispatch);\n        connectSocket(withProtocolHostIP);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    [dispatch]\n  );\n\n  const onScan = useCallback(\n    async data => {\n      try {\n        if (!data) {\n          return;\n        }\n        setLoading(true);\n        console.log(\"Scanned Code:\", data);\n        setError(null);\n        const { internalIP, externalIP, walletPort } = JSON.parse(data.text);\n        const internalConnection = await connectHostIP(internalIP, walletPort);\n\n        if (internalConnection) {\n          setLoading(false);\n          return true;\n        }\n\n        const externalConnection = await connectHostIP(externalIP, walletPort);\n\n        if (externalConnection) {\n          setLoading(false);\n          return true;\n        }\n\n        setError(\n          `Unable to connect to host, please ensure that your ShockWizard node is up and fully synced to the blockchain.`\n        );\n      } catch (error) {\n        setLoading(false);\n        console.error(error);\n        setError(error.message);\n      }\n    },\n    [connectHostIP]\n  );\n\n  const onError = useCallback(error => {\n    console.error(error);\n    setError(\n      \"Unable to detect a camera, please make sure that the Camera permission is allowed in order to be able to scan QR Codes\"\n    );\n  }, []);\n\n  const closeScanner = useCallback(() => {\n    dispatch(setAuthMethod(null));\n    dispatch(setAuthStep(null));\n  }, [dispatch]);\n\n  return (\n    <div className=\"auth-form-container\">\n      {loading ? <Loader fullScreen overlay text=\"Loading Host...\" /> : null}\n      <QRCodeScanner\n        mode=\"wizard\"\n        onScan={onScan}\n        onError={onError}\n        onClose={closeScanner}\n      />\n    </div>\n  );\n};\n\nexport default ScanStep;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DateTime } from \"luxon\";\nimport { connectSocket } from \"../../utils/WebSocket\";\nimport Http from \"../../utils/Http\";\nimport { connectHost } from \"../../actions/NodeActions\";\nimport { setAuthenticated, setAuthStep } from \"../../actions/AuthActions\";\nimport DialogPageContainer from \"../../common/DialogPageContainer\";\nimport HostStep from \"./components/HostStep\";\nimport UnlockStep from \"./components/UnlockStep\";\nimport CreateWalletStep from \"./components/CreateWalletStep\";\nimport LogoSection from \"./components/LogoSection\";\nimport ChoicesStep from \"./components/ChoicesStep\";\nimport InviteStep from \"./components/InviteStep\";\nimport ScanStep from \"./components/ScanStep\";\nimport \"./css/index.css\";\n\nconst AuthPage = () => {\n  const dispatch = useDispatch();\n  const cachedHostIP = useSelector(({ node }) => node.hostIP);\n  const [loading, setLoading] = useState(!!cachedHostIP);\n  const [error, setError] = useState(null);\n  const authTokenExpirationDate = useSelector(\n    ({ node }) => node.authTokenExpirationDate\n  );\n  const authToken = useSelector(({ node }) => node.authToken);\n  const authStep = useSelector(({ auth }) => auth.authStep);\n  const authMethod = useSelector(({ auth }) => auth.authMethod);\n\n  const currentStep = useMemo(() => {\n    if (authMethod === \"manual\") {\n      if (authStep === \"host\") {\n        return <HostStep />;\n      }\n    }\n\n    if (authMethod === \"shockWizard\") {\n      if (authStep === \"scan\") {\n        return <ScanStep />;\n      }\n    }\n\n    if (authMethod === \"shockCloud\") {\n      if (authStep === \"inviteCode\") {\n        return <InviteStep />;\n      }\n    }\n\n    if (authStep === \"unlockWallet\" || authStep === \"gunAuth\") {\n      return <UnlockStep />;\n    }\n\n    if (authStep === \"createWallet\") {\n      return <CreateWalletStep />;\n    }\n\n    return <ChoicesStep />;\n  }, [authStep, authMethod]);\n\n  const loadCachedNode = useCallback(async () => {\n    try {\n      if (cachedHostIP) {\n        console.log(\"Loading cached node IP\");\n\n        const connected = !!(await connectHost(cachedHostIP, false)(dispatch));\n\n        if (connected) {\n          setLoading(false);\n        }\n\n        if (\n          authToken &&\n          DateTime.fromSeconds(authTokenExpirationDate).diffNow().milliseconds >\n            0\n        ) {\n          setLoading(true);\n          const { data: authenticated } = await Http.get(`/api/gun/auth`);\n          if (!authenticated.data) {\n            const { data: walletStatus } = await Http.get(\n              `/api/lnd/wallet/status`\n            );\n            console.log(walletStatus);\n          }\n          setAuthStep(\"unlockWallet\");\n          connectSocket(cachedHostIP);\n          setLoading(false);\n          dispatch(setAuthenticated(authenticated.data));\n          return;\n        }\n\n        if (authToken) {\n          setLoading(true);\n          setAuthStep(\"unlockWallet\");\n          setLoading(false);\n        }\n      }\n    } catch (err) {\n      setError(\n        \"Unable to connect to cached Node IP, make sure ShockAPI is up and running on your machine\"\n      );\n      setLoading(false);\n    }\n  }, [cachedHostIP, dispatch, authToken, authTokenExpirationDate]);\n\n  useEffect(() => {\n    loadCachedNode();\n  }, [loadCachedNode]);\n\n  return (\n    <DialogPageContainer disableNav contentClassName=\"auth-page-content\">\n      <LogoSection />\n      {loading && <span>Loading...</span>}\n\n      {error && <span>There was an error: {error}</span>}\n\n      {!loading && !error && currentStep}\n    </DialogPageContainer>\n  );\n};\n\nexport default AuthPage;\n"],"sourceRoot":""}