{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/MainNav/index.js","common/BottomBar/index.js","common/AddBtn/index.js","pages/Messages/components/common.ts","pages/Messages/components/Message/index.js","pages/Messages/components/Request/index.js","pages/Messages/index.js"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","MainNav","pageTitle","absolute","solid","enableBackButton","onHeight","Utils","dispatch","useDispatch","goBack","window","history","back","open","openDrawer","gunPublicKey","useSelector","node","publicKey","divRefCb","el","getBoundingClientRect","height","e","console","log","ref","BottomBar","to","activeClassName","AddBtn","label","icon","iconURL","undefined","nestedMode","large","small","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","AVATAR_CONTAINER_STYLE","AVATAR_SIZE","width","Message","subtitle","time","chatLoaded","Store","user","subscribeMessages","subscription","subscribeChatMessages","rifleCleanup","useEffect","ShockAvatar","displayName","Request","sent","MessagesPage","addModalOpen","setAddModalOpen","sendError","setSendError","sendRequestLoading","setSendRequestLoading","setChatLoaded","contacts","chat","messages","sentRequests","receivedRequests","loadChat","a","loadChatData","subscriptions","map","entry","subscribeUserProfile","pk","unsubscribe","sendRequest","shockUser","startsWith","split","slice","length","FieldError","field","message","test","sendHandshakeRequest","errMsg","error","sendRequestClipboard","navigator","clipboard","readText","clipboardText","alert","request","id","contact","contactMessages","lastMessage","didDisconnect","body","timestamp","Date","now","DateTime","fromMillis","toRelative","Loader","text","overlay","borderRadius"],"mappings":"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","file":"static/js/19.958f921c.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      <div className=\"head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"open\": modalOpen })}>\n      <div className=\"backdrop\" onClick={closeModal} />\n      <div className=\"container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","// @ts-check\nimport { useCallback } from \"react\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as Utils from \"../../utils\";\nimport { openDrawer } from \"../../actions/DrawerActions\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport { useSelector } from \"../../store\";\n\nconst MainNav = ({\n  pageTitle,\n  absolute = false,\n  solid = false,\n  enableBackButton = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const dispatch = useDispatch();\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  const open = useCallback(() => {\n    dispatch(openDrawer());\n  }, [dispatch]);\n\n  const gunPublicKey = useSelector(({ node }) => node.publicKey);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in MainNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className={classNames({\n        \"main-nav-container\": true,\n        \"main-nav-absolute\": absolute,\n        \"main-nav-solid\": solid\n      })}\n      ref={divRefCb}\n    >\n      {enableBackButton ? (\n        <div className=\"main-nav-back\" onClick={goBack}>\n          <i className=\"icon icon-thin-back\"></i>\n        </div>\n      ) : (\n        <ShockAvatar height={40} publicKey={gunPublicKey} />\n      )}\n      <p className=\"main-nav-title unselectable\">{pageTitle}</p>\n      <div className=\"main-nav-menu-btn\" onClick={open}>\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default MainNav;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import { CSSProperties } from \"react\";\n\nexport const AVATAR_SIZE = 55;\n\nexport const AVATAR_CONTAINER_STYLE: CSSProperties = {\n  height: AVATAR_SIZE + \"px\",\n  width: AVATAR_SIZE + \"px\"\n};\n","// @ts-check\nimport { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { subscribeChatMessages } from \"../../../../actions/ChatActions\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport { AVATAR_CONTAINER_STYLE, AVATAR_SIZE } from \"../common\";\nimport * as Store from \"../../../../store\";\n\nimport \"./css/index.scoped.css\";\nimport { rifleCleanup } from \"../../../../utils/WebSocket\";\n\nconst Message = ({ subtitle = \"\", time, publicKey, chatLoaded = false }) => {\n  const dispatch = useDispatch();\n  const gunPublicKey = Store.useSelector(({ node }) => node.publicKey);\n  const user = Store.useSelector(Store.selectUser(publicKey));\n\n  const subscribeMessages = useCallback(() => {\n    const subscription = dispatch(\n      subscribeChatMessages(gunPublicKey, publicKey)\n    );\n\n    return rifleCleanup(subscription);\n  }, [dispatch, gunPublicKey, publicKey]);\n\n  useEffect(() => {\n    if (chatLoaded) {\n      const unsubscribe = subscribeMessages();\n\n      return unsubscribe;\n    }\n  }, [subscribeMessages, publicKey, chatLoaded]);\n\n  return (\n    <Link to={`/chat/${publicKey}`} className=\"container\">\n      <div className=\"author-container\">\n        <div className=\"author-avatar\" style={AVATAR_CONTAINER_STYLE}>\n          <ShockAvatar publicKey={publicKey} height={AVATAR_SIZE} />\n        </div>\n\n        <div className=\"author-details\">\n          <p className=\"author-username\">{user.displayName}</p>\n          <p className=\"author-text\">{subtitle}</p>\n        </div>\n      </div>\n      <p className=\"timestamp\">{time}</p>\n    </Link>\n  );\n};\n\nexport default Message;\n","// @ts-check\nimport { Link } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport { AVATAR_CONTAINER_STYLE, AVATAR_SIZE } from \"../common\";\n\nimport \"./css/index.scoped.css\";\n\nconst Request = ({ publicKey = \"\", time, sent }) => {\n  const user = Store.useSelector(Store.selectUser(publicKey));\n\n  return (\n    <Link to={`/chat/${publicKey}`} className=\"request-container\">\n      <div className=\"request-author-container\">\n        <div className=\"request-author-avatar\" style={AVATAR_CONTAINER_STYLE}>\n          <ShockAvatar publicKey={publicKey} height={AVATAR_SIZE} />\n        </div>\n        <div className=\"request-author-details\">\n          <p className=\"request-author-username\">\n            {sent ? \"Sent Request\" : \"Received Request\"} - {user.displayName}\n          </p>\n          <p className=\"request-author-text\">Request pending acceptance...</p>\n        </div>\n      </div>\n      <p className=\"request-timestamp\">{time}</p>\n    </Link>\n  );\n};\n\nexport default Request;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { DateTime } from \"luxon\";\n\nimport { loadChatData, sendHandshakeRequest } from \"../../actions/ChatActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport BottomBar from \"../../common/BottomBar\";\nimport Message from \"./components/Message\";\nimport Request from \"./components/Request\";\nimport MainNav from \"../../common/MainNav\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Loader from \"../../common/Loader\";\nimport FieldError from \"../../utils/FieldError\";\nimport \"./css/index.scoped.css\";\nimport Modal from \"../../common/Modal\";\nimport * as Store from \"../../store\";\n\nconst MessagesPage = () => {\n  const dispatch = useDispatch();\n  const [addModalOpen, setAddModalOpen] = useState(false);\n  const [sendError, setSendError] = useState(\"\");\n  const [sendRequestLoading, setSendRequestLoading] = useState(false);\n  const [chatLoaded, setChatLoaded] = useState(false);\n  const contacts = Store.useSelector(({ chat }) => chat.contacts);\n  const messages = Store.useSelector(({ chat }) => chat.messages);\n  const sentRequests = Store.useSelector(({ chat }) => chat.sentRequests);\n  const receivedRequests = Store.useSelector(\n    ({ chat }) => chat.receivedRequests\n  );\n\n  const loadChat = useCallback(async () => {\n    await dispatch(loadChatData());\n    setChatLoaded(true);\n  }, [dispatch]);\n\n  useEffect(() => {\n    loadChat();\n  }, [loadChat]);\n\n  useEffect(() => {\n    const subscriptions = [\n      ...contacts,\n      ...sentRequests,\n      ...receivedRequests\n    ].map(entry => dispatch(subscribeUserProfile(entry.pk)));\n\n    return () => {\n      // @ts-ignore\n      subscriptions.map(unsubscribe => unsubscribe());\n    };\n  }, [contacts, sentRequests, receivedRequests, dispatch]);\n\n  const toggleModal = useCallback(() => {\n    setAddModalOpen(!addModalOpen);\n  }, [addModalOpen]);\n\n  const sanitizePublicKey = publicKey => {\n    if (publicKey.startsWith(\"http\")) {\n      const parts = publicKey.split(\"/\");\n      return parts.slice(-1)[0];\n    }\n\n    return publicKey;\n  };\n\n  const sendRequest = useCallback(\n    async shockUser => {\n      try {\n        setSendError(null);\n        setSendRequestLoading(true);\n        const pk = sanitizePublicKey(shockUser);\n\n        if (!pk?.length) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Please specify a public key\"\n          });\n        }\n\n        if (!/^[0-9A-Za-z\\-_.+/]+[=]{0,3}/.test(pk)) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Invalid public key format specified\"\n          });\n        }\n\n        await dispatch(sendHandshakeRequest(shockUser));\n\n        setAddModalOpen(false);\n      } catch (err) {\n        const errMsg =\n          err instanceof FieldError\n            ? err.message\n            : \"An unknown error has occurred\";\n\n        console.error(err);\n\n        setSendError(errMsg);\n      } finally {\n        setSendRequestLoading(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const sendRequestClipboard = useCallback(async () => {\n    try {\n      const clipboardText = await navigator.clipboard.readText();\n      return sendRequest(clipboardText);\n    } catch (e) {\n      alert(e.message);\n    }\n  }, [sendRequest]);\n\n  return (\n    <div className=\"page-container messages-page\">\n      <MainNav solid pageTitle=\"MESSAGES\" />\n      <div className=\"messages-container\">\n        <div className=\"message-list-container\">\n          {sentRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Sent Requests</p>\n          ) : null}\n          {sentRequests.map(request => (\n            <Request\n              publicKey={request.pk}\n              sent\n              key={request.id}\n              time={undefined}\n            />\n          ))}\n          {receivedRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Received Requests</p>\n          ) : null}\n          {receivedRequests.map(request => (\n            <Request\n              publicKey={request.pk}\n              key={request.id}\n              sent={false}\n              time={undefined}\n            />\n          ))}\n          {contacts.length > 0 ? (\n            <p className=\"messages-section-title\">Messages</p>\n          ) : null}\n          {contacts.map(contact => {\n            const contactMessages = messages[contact.pk] ?? [];\n            const lastMessage = (() => {\n              if (contact.didDisconnect) {\n                return {\n                  body: \"User disconnected from you.\",\n                  timestamp: Date.now()\n                };\n              }\n\n              return (\n                contactMessages[0] ?? {\n                  body: \"Unable to preview last message...\",\n                  timestamp: Date.now()\n                }\n              );\n            })();\n\n            return (\n              <Message\n                key={contact.pk}\n                publicKey={contact.pk}\n                subtitle={lastMessage.body}\n                time={DateTime.fromMillis(lastMessage.timestamp).toRelative()}\n                chatLoaded={chatLoaded}\n              />\n            );\n          })}\n        </div>\n        <AddBtn onClick={toggleModal} label=\"REQUEST\" />\n        {/* TODO: Extract to a separate component */}\n        <Modal\n          modalTitle=\"SEND REQUEST\"\n          toggleModal={toggleModal}\n          modalOpen={addModalOpen}\n        >\n          {sendRequestLoading ? (\n            <Loader\n              text=\"Sending Request...\"\n              overlay\n              style={{\n                borderRadius: \"0 0 15px 15px\"\n              }}\n            />\n          ) : null}\n          {sendError ? (\n            <div className=\"send-request-error\">{sendError}</div>\n          ) : null}\n          <div className=\"send-request-cards\">\n            <div className=\"send-request-card\" onClick={sendRequest}>\n              <i className=\"send-request-card-icon fas fa-qrcode\" />\n              <p className=\"send-request-card-title\">SCAN QR</p>\n              <p className=\"send-request-card-desc\">\n                Scan another users QR to send a message request.\n              </p>\n            </div>\n            <div className=\"send-request-card\" onClick={sendRequestClipboard}>\n              <i className=\"send-request-card-icon fas fa-clipboard\" />\n              <p className=\"send-request-card-title\">PASTE CLIPBOARD</p>\n              <p className=\"send-request-card-desc\">\n                Paste another users Public Key to send a message request.\n              </p>\n            </div>\n          </div>\n        </Modal>\n      </div>\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default MessagesPage;\n"],"sourceRoot":""}