{"version":3,"sources":["actions/FeesActions.js","actions/OrdersActions.js","utils/JSON.ts","utils/WebSocket.js","actions/CoordinateActions.ts","actions/AuthActions.ts","common/Loader/index.js","common/Post/components/TipRibbon/index.js","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.ts","reducers/DrawerReducer.js","reducers/ContentReducer.ts","reducers/FeesReducer.ts","reducers/FeedReducer.ts","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/GuestReducer.ts","reducers/OrdersReducer.js","reducers/AppReducer.ts","reducers/settings.ts","reducers/CoordinatesReducer.ts","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/selectors/publishedContent.ts","store/selectors/chat.ts","store/selectors/feed.ts","store/selectors/coordinates.ts","store/selectors/index.ts","store/index.ts","utils/String.js","../node_modules/gun sync","actions/SettingsActions.ts","actions/ContentActions.ts","common/Post/components/Stream/index.tsx","utils/Http.js","actions/WalletActions.js","utils/Prerender.ts","utils/Gun.ts","utils/Encryption.ts","actions/FeedActions.ts","actions/NodeActions.js","schema/index.ts","actions/GuestActions.ts","actions/ChatActions.ts","common/Drawer/index.js","App.js","utils/ui.tsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js","utils/FieldError.ts","actions/EncryptionActions.js","utils/dialogCallback.ts","actions/AppActions.ts","actions/UserProfilesActions.ts","utils/Date.ts","utils/index.ts","utils/Error.ts","actions/DrawerActions.js"],"names":["ACTIONS","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","loadFeeRates","dispatch","getState","a","source","fees","fetch","res","json","data","type","setSource","setRate","rate","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","Http","post","path","value","ok","newID","id","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","providedServiceId","query","rifle","publicKey","reconnect","onData","serviceNode","serviceInfo","buyService","owner","serviceID","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","safeParseJSON","err","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","transports","rifleSubscriptions","Map","GunSocket","reconnectRifleSubscriptions","Array","from","forEach","key","unsubscribeRifleById","delete","connectSocket","host","store","socketOptions","auth","encryptionId","encryption","deviceId","isInitial","connected","disconnectSocket","SocketIO","relayId","node","emit","GunOn","encryptedOn","event","subscription","get","subscriptionId","onError","on","Common","setAuthenticated","field","message","onlineListener","window","removeEventListener","addEventListener","socket","off","close","decryptEventCallback","callback","privateKey","Encryption","encryptedMessage","decryptedMessage","undefined","encryptedEmit","eventName","hostKeys","userKeys","hostId","remotePublicKey","localPrivateKey","error","stringify","encryptedData","responses","warn","decryptedResponses","sanitized","filter","Error","errors","length","unsubscribeEvent","unsubscribeRifleByQuery","listener","resolve","debug","epubForDecryption","epubField","reject","then","authenticated","authToken","listenPath","uniqueId","set","$shock","token","rifleCleanup","subscriptions","unsubscribe","coordinateDeleted","createAction","coordinateReceived","subCoordinates","Utils","unparsed","coordinateSHA256","coordinate","fetchWalletBalance","sub","e","alert","RESET_AUTH_INFO","SET_AUTH_STEP","SET_AUTHENTICATED","SET_AUTH_METHOD","LOGOUT","SET_RELAY_ID","status","setAuthStep","step","setAuthMethod","method","logout","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","TipRibbon","tipCounter","tipValue","zoomed","opacity","INITIAL_STATE","hostIP","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","webClientPrefix","accessSecret","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","headers","common","Authorization","SET_ATTEMPTS_DONE","AUTH_ACTIONS","SET_WEBCLIENT_PREFIX","SET_ACCESS_SECRET","authStep","defaultSteps","manual","shockWizard","shockCloud","hostingTiers","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","lightningInfo","_getUnifiedTransactionDate","item","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","sort","b","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","LOAD_LIGHTNING_INFO","chat","produce","draft","handshakeAddressUpdated","match","handshakeAddress","payload","currentHandshakeAddress","receivedRequests","receivedHandshakeRequest","receivedRequest","convoReceived","convo","convos","convoToMessages","convoDeleted","messageTransmissionFailed","convoID","errorMessage","messageID","messageTransmissionRequested","body","timestamp","Date","now","messageTransmissionRetried","messageTransmissionSucceeded","handshakeRequestDeleted","receivedConvoMessage","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","streamPostId","streamContentId","streamStatusUrl","streamBroadcasterUrl","publishedContent","publicContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","tipOverlayUrl","publicContentAdded","publishedContentAdded","publishedContentRemoved","SET_SEED_PROVIDER_PUB","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","userToken","availableTmp","push","REMOVE_USED_TOKEN","index","indexOf","splice","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","feeRates","fastestFee","halfHourFee","hourFee","follows","posts","sharedPosts","reloadDone","feed","postDeleted","author","idx","findIndex","p","postReceived","newPost","authorId","contentItems","tags","title","tips","contentItemReceived","contentItem","postID","slice","sharedPostDeleted","sharerPublicKey","sharedPostReceived","originalAuthor","shareDate","originalPostID","shareID","sharedBy","postTipReceived","tipAmt","tipID","find","ADD_FOLLOW","existingFollow","follow","user","REMOVE_FOLLOW","UPDATE_FOLLOW","profile","RELOAD_FEED","RESET_DEFAULT_FOLLOWS","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","updatedUserProfile","assign","NODE_ACTIONS","RESET_USER_PROFILES","REMOVE_USER_PROFILE","profiles","paymentRequest","guest","RESET_GUEST","CREATE_GUEST_USER","TIP_USER","SET_PAYMENT_RESPONSE","FOLLOW_USER","UNFOLLOW_USER","myServices","services","boughtServices","orders","tmp","servicesTmp","selectedService","dialogText","dialogHasCallback","app","OPEN_DIALOG","hasCallback","CLOSE_DIALOG","settings","coordinates","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","AppReducer","GuestReducer","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","Schema","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectAllOtherUsers","createSelector","users","values","selectFollows","f","selectOwnPublishedContent","privateContent","selectConvos","selectSingleConvo","selectIsInContact","with","selectCurrentHandshakeAddress","selectReceivedRequests","req","receiverConvoID","selectAllMessages","selectContacts","_publicKeys","uniq","selectCommunication","convoIDOrRequestID","maybeConvo","maybeRequest","selectConvoMessages","selectFeedPosts","pickBy","_","selectAllPosts","selectAllSharedPosts","selectSinglePost","selectPostsNewestToOldest","sharedPostsMap","allPosts","alpha","selectSharedPost","sharer","selectAllPostsFromFollowedNewestToOldest","followedPublicKeys","filteredPosts","pick","filteredShared","allNonShared","flat","allShared","records","selectAllCoordinates","selectAllCoordinatesNewestToOldest","coords","selectSingleCoordinate","selectRoot","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","process","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","useDispatch","originalUseDispatch","initialMessagePrefix","processDisplayName","displayName","suffix","webpackEmptyContext","code","module","exports","PUBLISHED_CONTENT_ADDED","PUBLISHED_CONTENT_REMOVED","setSeedProviderPub","pub","dontBackup","setSeedInfo","cleanUrl","endsWith","infoS","addPublishedContent","isPublicContentItem","TypeError","unlockContent","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","noDialog","openDialog","addAvailableToken","removeUnavailableToken","addStreamToken","OWN_PUBLISHED_CONTENT_QUERY","subOwnPublishedContent","parsed","parseJson","isPublishedContent","unsubOwnPublishedContent","subOwnPublicContent","logger","Stream","hideRibbon","width","playerDOM","useRef","videoStyle","liveStatus","useEffect","player","videojs","current","autoplay","muted","aspectRatio","src","magnetURI","play","viewersSocketUrl","WebSocket","cursor","display","ref","preload","controls","autoPlay","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","REACT_APP_SHOCK_ENCRYPTION_ECC","decryptResponse","interceptors","request","use","localRequest","url","originalData","toUpperCase","includes","retries","exchangeKeyPair","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","FetchLightningInfo","isCrawler","navigator","userAgent","peersConfig","safeParse","PEERS","wait","ms","setTimeout","randomString","randomChar","n","Math","floor","random","String","fromCharCode","filterGunProps","isIncompleteGunResponse","isArray","reduce","empty","filteredGunProps","parseGunPath","gunPointer","root","Gun","gunUser","getNode","split","gun","GunDB","axe","fetchPath","retryDelay","retryLimit","retryCondition","_retryCount","_fallbackResult","parsedRetryLimit","parsedRetryDelay","retryResult","setPath","GunContext","once","createRandomGunUser","randomAlias","randomPass","create","_error","_event","pass","authUser","$$_SHOCKWALLET__ENCRYPTED__","$$__SHOCKWALLET__MSG__","nonEncryptedEvents","convertBase64ToBuffer","Buffer","convertBufferToBase64","processKey","isBuffer","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","FieldError","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","toLowerCase","RESET_FEED","LOAD_POSTS","ADD_USER_POST","DELETE_USER_POST","LOAD_SHARED_POST","POST_TIPPED","removeFollow","addFollow","subSinglePost","subscribeUserPosts","subPostContent","FOLLOWS_QUERY","subscribeFollows","info","unsubscribeFollows","sendTipPost","postId","deleteUserPost","reloadFeed","reloadFollows","GUEST_ACTIONS","subSharedPosts","sharedPost","subPostTips","nTipAmount","isNaN","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","fetchNodeHealth","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","connectHost","resetData","done","health","baseURL","setRelayId","setAccessSecret","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","decodedToken","jwtDecode","authorization","exp","parseError","createAlias","createWallet","setWebclientPrefix","prefix","isHandshakeReqNew","o","obj","epub","senderConvoID","isConvo","counterpartConvoID","isConvoMsg","description","isPostRaw","valMap","baseValidator","every","validator","createValidator","isFinite","val","SET_PAYMENT_METADATA","resetPaymentResponse","createGuestUser","newUser","newUserEpub","payUser","senderPair","recipientPublicKey","metadata","me","recipientUserEPub","orderAddress","SEA","secret","sea","encryptedAmount","encryptedMemo","order","newOrder","newOrderId","encryptedOrderListener","encryptedOrder","decryptedResponse","decryptedOrder","ackNode","followUser","private","subCurrentHandshakeAddress","subHandshakeNode","handshakeRequest","createOutgoingConversationFeed","outgoingConvoID","incomingConvoID","msgID","withEpub","messages","$$__EPUB__FOR","acceptHandshakeRequest","requestId","sendHandshakeRequest","epubP","rej","handshakeAddressP","selfEpubP","requestID","selfEpub","handshakeReqForGun","subConvos","sendMessage","messageBody","trim","subConvoMessages","outgoingSub","incomingSub","subs","Drawer","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","WalletSettingsPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","CreatePostPage","GoLivePage","OtherUserPage","QRScannerPage","BackupsPage","PublicContentItemPage","PrivateRoute","component","authorizedComponent","GuestRoute","allowedComponent","App","history","useHistory","useState","setUpdate","isLive","setIsLive","showFloatingPlayer","setShowFloatingPlayer","timeout","interval","setInterval","clearInterval","clearTimeout","StreamRender","useMemo","stopStream","contentId","endUrl","urlForMagnet","obsToken","addLanguage","tokenExpired","JWTDecode","subscribeUserProfile","unsubscribeUserProfile","elementId","elmnt","document","getElementById","pos1","pos2","pos3","pos4","onpointerdown","preventDefault","clientX","clientY","onpointerup","closeDragElement","onpointermove","elementDrag","top","offsetTop","left","offsetLeft","dragElement","loadContentInfo","serviceProvider","msg","startsWith","toast","dark","seedData","JObject","loadStreamInfo","streamData","DialogClose","closeDialog","ConfirmDialog","fallback","exact","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","closeButton","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","loading","StrictMode","URL","href","origin","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","stack","exchangeSource","CancelToken","addUserKeyPair","addHostKey","getDeviceId","cancel","cancelToken","APIPublicKey","dialogCallback","callDialogCallBack","cb","addDialogCallback","executeCb","subscribedProfiles","Set","has","bio","offerSeedService","binarySub","avatar","header","useForceUpdate","tick","setTick","forceUpdate","formatTimestamp","relativeTime","DateTime","fromMillis","toRelative","resizeImage","img","desiredLongEdge","compression","canvas","createElement","round","getContext","drawImage","toDataURL","processImageFile","file","size","reader","FileReader","onload","target","result","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","image","resizedImage","normalizeURL","_url","__url","protocol","EMPTY_FN","EMPTY_ARR","EMPTY_OBJ","useBooleanState","initialState","setState","_state","safeParseJson","useLastSeen","lastSeenApp","setLastSeenApp","lastSeenNode","setLastSeenNode","appSub","lastSeen","nodeSub","memoize","extractErrorMessage","openDrawer"],"mappings":"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","file":"static/js/main.8a0a657d.chunk.js","sourcesContent":["export const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n\n  const res = await fetch(source);\n  const data = await res.json();\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\n/**\n * @param {string} source\n */\nexport const setSource = source => ({\n  type: ACTIONS.SET_SOURCE,\n  data: source\n});\n\n/**\n * @param {import('../schema').FeeRate} rate\n */\nexport const setRate = rate => ({\n  type: ACTIONS.SET_RATE,\n  data: rate\n});\n","import Http from \"../utils/Http\";\nimport { rifle } from \"../utils/WebSocket\";\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE: \"service/add/bought\"\n};\n\nexport const createService = (clear, encrypted) => async dispatch => {\n  const { data } = await Http.post(\"/api/gun/set\", {\n    path: \"$user>offeredServices\",\n    value: clear\n  });\n  const { ok, id: newID } = data;\n  if (!ok) {\n    return \"\";\n  }\n  const id = newID;\n\n  const all = Object.entries(encrypted).map(([name, value]) => {\n    if (!value) {\n      return null;\n    }\n    console.log(`setting: ${name} to ${value}`);\n    return Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}>${name}`,\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value\n      }\n    });\n  });\n  await Promise.all(all);\n  const { serviceType } = clear;\n  //update the offered service\n  if (serviceType === \"torrentSeed\" || serviceType === \"streamSeed\") {\n    console.log(\"updating profile with service\");\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>Profile>offerSeedService`,\n      value: id\n    });\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id;\n};\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post(\"/api/gun/put\", {\n    path: `$user>offeredServices>${id}`,\n    value: null\n  });\n};\nexport const subscribeMyServices = providedServiceId => dispatch => {\n  const query = `$user::offeredServices>${providedServiceId}::on`;\n  console.log(query);\n  const subscription = rifle({\n    query,\n    publicKey: \"me\",\n    reconnect: false,\n\n    onData: async (serviceNode, id) => {\n      console.log(serviceNode);\n      if (serviceNode === null) {\n        dispatch({\n          type: ACTIONS.REMOVE_MY_SERVICE,\n          data: id\n        });\n        return;\n      }\n      dispatch({\n        type: ACTIONS.ADD_MY_SERVICE,\n        data: { id, serviceInfo: serviceNode }\n      });\n      console.log(\"got service data\");\n    }\n  });\n\n  return subscription;\n};\n\nexport const buyService = (\n  owner,\n  serviceID,\n  servicePrice\n) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"service\",\n    amt: Number(servicePrice),\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: serviceID\n  });\n  console.log(data);\n  const orderAck = JSON.parse(data.orderAck.response);\n  dispatch({\n    type: ACTIONS.ADD_BOUGHT_SERVICE,\n    data: { orderAck, owner, serviceID }\n  });\n  return orderAck;\n};\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Common from \"shock-common\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"./String\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\nimport { listenPath } from \"./Gun\";\nimport { uniqueId } from \"lodash\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').Subscription} Subscription\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true,\n  transports: [\"websocket\"]\n};\n\nconst rifleSubscriptions = new Map();\n\n/** @type {import(\"socket.io-client\").Socket<import(\"socket.io-client/build/typed-events\").DefaultEventsMap, import(\"socket.io-client/build/typed-events\").DefaultEventsMap>} */\nexport let GunSocket = null;\n\nconst reconnectRifleSubscriptions = () => {\n  Array.from(rifleSubscriptions.entries()).forEach(([key, value]) => {\n    unsubscribeRifleById(key);\n    rifle(value);\n    rifleSubscriptions.delete(key);\n  });\n};\n\nexport const connectSocket = async (host = \"\", reconnect = false) => {\n  const { store } = await import(\"../store\");\n  const socketOptions = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId,\n      /**\n       * Signals LND rpc socket handling that this is just the intial handshake\n       * and to not try to process non-existent arguments.\n       */\n      isInitial: true\n    }\n  };\n\n  if (GunSocket?.connected && !reconnect) {\n    return { GunSocket };\n  }\n\n  if (GunSocket && reconnect) {\n    disconnectSocket(GunSocket);\n  }\n\n  GunSocket = SocketIO(`${host}/gun`, socketOptions);\n\n  const relayId = store.getState().node.relayId;\n  if (relayId) {\n    GunSocket.emit(\"hybridRelayId\", { id: relayId });\n  }\n\n  const GunOn = encryptedOn(GunSocket);\n\n  // Subscribe to Rifle query events as soon as the socket is connected\n  GunOn(\"query:data\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onData?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunOn(\"query:error\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onError?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunSocket.on(Common.NOT_AUTH, () => {\n    store.dispatch(setAuthenticated(false));\n  });\n  //TODO listen on relay error\n  GunSocket.on(\"encryption:error\", async err => {\n    if (err.field === \"deviceId\" || err.message === \"Bad Mac\") {\n      store.dispatch(setAuthenticated(false));\n    }\n  });\n\n  reconnectRifleSubscriptions();\n\n  GunSocket.on(\"connect\", () => {\n    console.log(\"Connected to new socket\");\n    reconnectRifleSubscriptions();\n  });\n\n  const onlineListener = () => {\n    connectSocket(host, true);\n    window.removeEventListener(\"online resume\", onlineListener);\n  };\n\n  window.addEventListener(\"online resume\", onlineListener);\n\n  return { GunSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    try {\n      const decryptedMessage = await Encryption.decryptMessage({\n        privateKey,\n        encryptedMessage: data\n      });\n\n      callback(err, decryptedMessage);\n    } catch (e) {\n      callback(e, undefined);\n    }\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.emit(eventName, message, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message: JSON.stringify(message)\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        try {\n          if (!response) {\n            return response;\n          }\n\n          if (response && !Encryption.isEncryptedMessage(response)) {\n            console.warn(\"Non-encrypted socket message\", response);\n            return response;\n          }\n\n          const res = await Encryption.decryptMessage({\n            privateKey: localPrivateKey,\n            encryptedMessage: response\n          });\n          return res;\n        } catch (e) {\n          return e;\n        }\n      })\n    );\n\n    const sanitized = decryptedResponses.filter(\n      data => !(data instanceof Error)\n    );\n    const errors = decryptedResponses.filter(data => data instanceof Error);\n\n    if (errors.length) {\n      console.log(\"Errors inside socket.on:\", errors);\n    }\n\n    if (sanitized.length) {\n      callback(...sanitized);\n    }\n  });\n};\n\n/**\n * @returns {Promise<Subscription>}\n */\nexport const subscribeSocket = ({ eventName, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const on = encryptedOn(GunSocket);\n        const emit = encryptedEmit(GunSocket);\n\n        emit(\n          `subscribe:${eventName}`,\n          {\n            token: store.getState().node.authToken\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              reject(err);\n              return;\n            }\n          }\n        );\n\n        if (callback) {\n          on(eventName, data => {\n            callback(null, data);\n          });\n        }\n\n        resolve({\n          off() {\n            emit(`unsubscribe:${eventName}`);\n          }\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const unsubscribeRifleById = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n\n  if (cachedSocket) {\n    unsubscribeEvent(subscriptionId);\n    rifleSubscriptions.delete(subscriptionId);\n  }\n};\n\nexport const unsubscribeRifleByQuery = query => {\n  const subscriptionEntries = Array.from(rifleSubscriptions.entries());\n\n  subscriptionEntries.map(([id, subscription]) => {\n    if (subscription.query === query) {\n      console.log(\"Unsubscribing by query:\", subscription);\n      if (subscription.listener && subscription.listener.off) {\n        subscription.listener.off();\n        return true;\n      }\n      unsubscribeRifleById(id);\n      return true;\n    }\n\n    return false;\n  });\n};\n\nexport const unsubscribeEvent = subscriptionId =>\n  new Promise(resolve => {\n    const subscription = rifleSubscriptions.get(subscriptionId);\n\n    if (subscription.listener && subscription.listener.off) {\n      subscription.listener.off();\n      resolve(true);\n    }\n\n    const emit = encryptedEmit(GunSocket);\n    emit(\n      \"unsubscribe\",\n      {\n        subscriptionId\n      },\n      () => {\n        console.debug(\n          `[SOCKET] Unsubscribed from event successfully! (${subscriptionId})`\n        );\n        resolve(true);\n      }\n    );\n  });\n\nexport const rifleSocketExists = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} query\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {string=} epubForDecryption If epub is known before hand.\n * @prop {string=} epubField If the epub is included in the received data\n * itself. Handshake requests for example, have an epub field.\n * @prop {boolean=} reconnect\n * @prop {(data, key) => void} onData\n * @prop {((error) => void)=} onError\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.onData(callback)` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map().once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<Subscription>}\n */\nexport const rifle = ({\n  query,\n  publicKey,\n  epubForDecryption,\n  epubField,\n  reconnect,\n  onData,\n  onError\n}) =>\n  new Promise((resolve, reject) => {\n    import(\"../store\").then(({ store }) => {\n      const { authenticated } = store.getState().auth;\n      const { authToken } = store.getState().node;\n\n      if (!authenticated) {\n        return listenPath({\n          query,\n          callback: onData\n        }).then(listener => {\n          const id = uniqueId();\n\n          rifleSubscriptions.set(id, {\n            publicKey,\n            onData,\n            query,\n            listener\n          });\n\n          return listener;\n        });\n      }\n\n      if (reconnect) {\n        unsubscribeRifleByQuery(query);\n      }\n\n      const emit = encryptedEmit(GunSocket);\n\n      emit(\n        \"subscribe:query\",\n        {\n          $shock: query,\n          token: authToken,\n          publicKey,\n          epubForDecryption,\n          epubField\n        },\n        (err, data) => {\n          if (err) {\n            console.error(`Gun rifle error (${query})`);\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          rifleSubscriptions.set(data.subscriptionId, {\n            publicKey,\n            epubForDecryption,\n            epubField,\n            reconnect,\n            onData,\n            onError,\n            query\n          });\n\n          resolve({\n            off: () => unsubscribeRifleById(data.subscriptionId)\n          });\n        }\n      );\n    });\n  });\n\n/**\n * @param {Promise<Subscription>[]} subscriptions\n */\nexport const rifleCleanup = (...subscriptions) => () => {\n  subscriptions.map(subscription =>\n    subscription.then(unsubscribe => {\n      unsubscribe.off();\n    })\n  );\n};\n\n/**\n * @returns {Promise<{ messages: any , contacts: Contact[]}>}\n */\nexport const getChats = async () => {\n  try {\n    const chats = await new Promise(res => {\n      const subscription = subscribeSocket({\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        },\n        eventName: \"chats\"\n      });\n    });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName,\n      didDisconnect: chat.didDisconnect\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleSentRequest[]>}\n */\nexport const getSentRequests = async () => {\n  try {\n    const sentRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"sentRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleReceivedRequest[]>}\n */\nexport const getReceivedRequests = async () => {\n  try {\n    const receivedRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"receivedRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Utils from \"../utils\";\nimport { fetchWalletBalance } from \"./WalletActions\";\n\nexport const coordinateDeleted = createAction<{\n  coordinateSHA256: string;\n}>(\"coordinates/deleted\");\n\nexport const coordinateReceived = createAction<{\n  coordinate: Common.Coordinate;\n  coordinateSHA256: string;\n}>(\"coordinates/received\");\n\nexport const subCoordinates = () => (dispatch: (action: any) => void) => {\n  Utils.logger.debug(`Subscribing to coordinates.`);\n  try {\n    const subscription = Utils.rifle({\n      query: `$user::coordinates::map.on`,\n      publicKey: \"me\",\n      onData: (unparsed, coordinateSHA256) => {\n        const coordinate = Utils.safeParseJson(unparsed);\n\n        if (Common.isCoordinate(coordinate)) {\n          dispatch(\n            coordinateReceived({\n              coordinate,\n              coordinateSHA256\n            })\n          );\n          fetchWalletBalance()(dispatch)\n        } else if (coordinate === null) {\n          dispatch(\n            coordinateDeleted({\n              coordinateSHA256\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Coordinate subscription invalid (or incomplete) value -> `,\n            coordinate\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    alert(`Could not establish a subscription to coordinates: ${e.message}`);\n    Utils.logger.error(\n      `Could not establish a subscription to coordinates -> `,\n      e\n    );\n  }\n};\n","// @ts-check\nexport const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\",\n  SET_RELAY_ID: \"auth/relay/set\"\n\n};\n\nexport const setAuthenticated = status => ({\n  type: ACTIONS.SET_AUTHENTICATED,\n  data: status\n});\n\nexport const setAuthStep = step => ({\n  type: ACTIONS.SET_AUTH_STEP,\n  data: step\n});\n\nexport const setAuthMethod = method => ({\n  type: ACTIONS.SET_AUTH_METHOD,\n  data: method\n});\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n","import { memo } from \"react\";\nimport classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.scoped.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\")\n    .matches;\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default memo(Loader);\n","import { memo } from \"react\";\n\nimport \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed = false }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default memo(TipRibbon);\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false,\n  webClientPrefix:\"https://lightning.page\",\n  relayId:null,\n  accessSecret:null\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n    case ACTIONS.SET_RELAY_ID:{\n      return {\n        ...state,\n        relayId:action.data\n      }\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    case ACTIONS.SET_WEBCLIENT_PREFIX:{\n      return {...state, webClientPrefix:action.data}\n    }\n\n    case ACTIONS.SET_ACCESS_SECRET:{\n      return {...state, accessSecret:action.data}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null,\n  relayId:null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\",\n  hostingTiers: \"chooseTier\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n * @typedef {import('shock-common').Peer} Peer\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Peer[]}\n   */\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: [],\n  lightningInfo: {}\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    case ACTIONS.LOAD_LIGHTNING_INFO:{\n      const {data}  = action\n      return {\n        ...state,\n        lightningInfo:data\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\nimport produce from \"immer\";\nimport * as Common from \"shock-common\";\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n * @typedef {import(\"shock-common\").StoredRequest} StoredReq\n */\n\nimport * as Schema from \"../schema\";\nimport {\n  handshakeAddressUpdated,\n  receivedHandshakeRequest,\n  convoReceived,\n  convoDeleted,\n  messageTransmissionFailed,\n  messageTransmissionRequested,\n  messageTransmissionRetried,\n  messageTransmissionSucceeded,\n  handshakeRequestDeleted,\n  receivedConvoMessage\n} from \"../actions/ChatActions\";\n\nconst INITIAL_STATE = {\n  currentHandshakeAddress: \"DOES_NOT_EXIST\" as string,\n  convos: {} as Record<string, Schema.Convo>,\n  /**\n   * Maps convo id to a set of the messages corresponding to it.\n   */\n  convoToMessages: {} as Record<string, Record<string, Schema.ConvoMsg>>,\n  receivedRequests: {} as Record<string, Schema.HandshakeReqNew>\n};\n\nconst chat = produce((draft, action) => {\n  if (handshakeAddressUpdated.match(action)) {\n    const { handshakeAddress } = action.payload;\n    if (\n      draft.currentHandshakeAddress !== handshakeAddress &&\n      Common.isPopulatedString(handshakeAddress)\n    ) {\n      draft.receivedRequests = {};\n      draft.currentHandshakeAddress = handshakeAddress;\n    }\n  }\n\n  if (receivedHandshakeRequest.match(action)) {\n    const { receivedRequest } = action.payload;\n    if (!draft.receivedRequests[receivedRequest.id]) {\n      draft.receivedRequests[receivedRequest.id] = receivedRequest;\n    }\n  }\n\n  if (convoReceived.match(action)) {\n    const { convo } = action.payload;\n    if (!draft.convos[convo.id]) {\n      draft.convoToMessages[convo.id] = {};\n      draft.convos[convo.id] = convo;\n    }\n  }\n\n  if (convoDeleted.match(action)) {\n    const { id } = action.payload;\n    if (draft.convos[id]) {\n      delete draft.convos[id];\n    }\n  }\n\n  if (messageTransmissionFailed.match(action)) {\n    const { convoID, errorMessage, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = errorMessage;\n    draft.convoToMessages[convoID][messageID].state = \"error\";\n  }\n  if (messageTransmissionRequested.match(action)) {\n    const { convoID, message, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID] = {\n      body: message,\n      convoID,\n      err: \"\",\n      id: messageID,\n      state: \"sending\",\n      timestamp: Date.now()\n    };\n  }\n  if (messageTransmissionRetried.match(action)) {\n    const { convoID, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = \"\";\n    draft.convoToMessages[convoID][messageID].state = \"sending\";\n  }\n  if (messageTransmissionSucceeded.match(action)) {\n    const { convoID, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = \"\";\n    draft.convoToMessages[convoID][messageID].state = \"ok\";\n  }\n  if (handshakeRequestDeleted.match(action)) {\n    const { id } = action.payload;\n    if (draft.receivedRequests[id]) {\n      delete draft.receivedRequests[id];\n    }\n  }\n  if (receivedConvoMessage.match(action)) {\n    const { message } = action.payload;\n    if (!draft.convoToMessages[message.convoID]) {\n      draft.convoToMessages[message.convoID] = {};\n    }\n    if (!draft.convoToMessages[message.convoID][message.id]) {\n      draft.convoToMessages[message.convoID][message.id] = {\n        ...message,\n        err: \"\"\n      };\n    }\n  }\n}, INITIAL_STATE);\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import produce from \"immer\";\n\nimport {\n  ACTIONS,\n  publishedContentAdded,\n  publishedContentRemoved,\n  publicContentAdded\n} from \"../actions/ContentActions\";\nimport { PublishedContent, PublicContentItem } from \"../schema\";\n\nconst INITIAL_STATE = {\n  seedProviderPub:\n    \"tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\",\n  streamUserToken: \"\",\n  streamLiveToken: \"\",\n  streamUrl: \"\",\n  streamPostId: \"\",\n  streamContentId: \"\",\n  streamStatusUrl: \"\",\n  streamBroadcasterUrl: \"\",\n  publishedContent: {} as Record<string, PublishedContent>,\n  publicContent: {} as Record<string, PublicContentItem>,\n  unlockedContent: {},\n  seedInfo: {} as { seedUrl?: string; seedToken?: string },\n  availableTokens: {},\n  availableStreamTokens: {},\n  tipOverlayUrl:\"\"\n};\n\nconst content = (state = INITIAL_STATE, action): typeof INITIAL_STATE => {\n  if (publicContentAdded.match(action)) {\n    return produce(state, draft => {\n      const { item } = action.payload;\n      if (!draft.publicContent[item.id]) {\n        draft.publicContent[item.id] = item;\n      }\n    });\n  }\n  if (publishedContentAdded.match(action)) {\n    return produce(state, draft => {\n      const {\n        payload: { content, res }\n      } = action;\n      if (res.ok) {\n        draft.publishedContent[res.id] = content;\n      }\n    });\n  }\n\n  if (publishedContentRemoved.match(action)) {\n    return produce(state, draft => {\n      delete draft.publishedContent[action.payload.id];\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n\n    case ACTIONS.ADD_UNLOCKED_CONTENT: {\n      const { data } = action;\n      const unlockedTmp = { ...state.unlockedContent };\n      unlockedTmp[data.contentPath] = data.content;\n      return { ...state, unlockedContent: unlockedTmp };\n    }\n    case ACTIONS.ADD_STREAM: {\n      const { data } = action;\n      return {\n        ...state,\n        streamLiveToken: data.liveToken,\n        streamUserToken: data.seedToken,\n        streamUrl: data.streamUrl,\n        streamPostId: data.streamPostId,\n        streamContentId: data.streamContentId,\n        streamStatusUrl: data.streamStatusUrl,\n        streamBroadcasterUrl: data.streamBroadcasterUrl,\n        tipOverlayUrl:data.tipOverlayUrl,\n      };\n    }\n    case ACTIONS.REMOVE_STREAM: {\n      return {\n        ...state,\n        streamLiveToken: \"\",\n        streamUserToken: \"\",\n        streamUrl: \"\",\n        streamPostId: \"\",\n        streamContentId: \"\",\n        streamStatusUrl: \"\",\n        streamBroadcasterUrl: \"\"\n      };\n    }\n    case ACTIONS.SET_SEED_INFO: {\n      const { data } = action;\n      return { ...state, seedInfo: data };\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_USED_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableTokens: availableTmp };\n      }\n      return state;\n    }\n    case ACTIONS.ADD_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableStreamTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableStreamTokens: availableTmp };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/FeesActions\";\n\nexport interface FeesState {\n  source: string;\n\n  rate: Schema.FeeRate;\n\n  feeRates: Record<Schema.FeeRate, number>;\n}\n\nconst INITIAL_STATE: FeesState = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n\n  rate: \"halfHourFee\",\n\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (\n  state: FeesState = INITIAL_STATE,\n  action: { type: string; data: any }\n): FeesState => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        feeRates: INITIAL_STATE[\"feeRates\"],\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport * as Utils from \"../utils\";\nimport * as Schema from \"../schema\";\nimport {\n  ACTIONS,\n  postDeleted,\n  postReceived,\n  contentItemReceived,\n  sharedPostDeleted,\n  sharedPostReceived,\n  postTipReceived\n} from \"../actions/FeedActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  follows: [],\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: {} as Record<string, Schema.Post[]>,\n  sharedPosts: {} as Record<string, Record<string, Common.SharedPost>>,\n  reloadDone: false\n};\n\nconst feed = (state = INITIAL_STATE, action: any): typeof INITIAL_STATE => {\n  if (postDeleted.match(action)) {\n    const {\n      payload: { author, id }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx > -1) {\n        draft.posts[author].splice(idx, 1);\n      }\n    });\n  }\n  if (postReceived.match(action)) {\n    const {\n      payload: { author, id, post }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx === -1) {\n        const newPost: Schema.Post = {\n          authorId: author,\n          contentItems: {},\n          date: post.date,\n          id,\n          status: post.status,\n          tags: post.tags,\n          title: post.title,\n          tips: {},\n          type: \"post\"\n        };\n        draft.posts[author].push(newPost);\n      }\n    });\n  }\n  if (contentItemReceived.match(action)) {\n    const {\n      payload: { author, contentItem, id, postID }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state (no author found), post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === postID);\n      if (idx === -1) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state, post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      (draft.posts[author][idx] as Schema.Post).contentItems[id] = contentItem;\n    });\n  }\n  if (sharedPostDeleted.match(action)) {\n    const { postID, sharerPublicKey } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      if (draft.sharedPosts[sharerPublicKey][postID]) {\n        delete draft.sharedPosts[sharerPublicKey][postID];\n      }\n    });\n  }\n  if (sharedPostReceived.match(action)) {\n    const {\n      originalAuthor,\n      postID,\n      shareDate,\n      sharerPublicKey\n    } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      draft.sharedPosts[sharerPublicKey][postID] = {\n        originalAuthor,\n        originalPostID: postID,\n        shareDate,\n        shareID: sharerPublicKey + postID,\n        sharedBy: sharerPublicKey\n      };\n    });\n  }\n\n  if (postTipReceived.match(action)) {\n    const { author, postID, tipAmt, tipID } = action.payload;\n\n    return produce(state, draft => {\n      const post = draft.posts[author].find(p => p.id === postID);\n      if (!post) {\n        Utils.logger.error(\n          `Got tip for non existent post ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n      }\n      if (!post.tips) {\n        // cached data from previous app version won't have the tips object\n        post.tips = {};\n      }\n      if (!post.tips[tipID]) {\n        post.tips[tipID] = tipAmt;\n      }\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.RELOAD_FEED: {\n      return { ...state, reloadDone: true };\n    }\n    case ACTIONS.RESET_DEFAULT_FOLLOWS: {\n      const {data} = action\n      return {...state, follows:data}\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS, updatedUserProfile } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { sharedPostReceived } from \"../actions/FeedActions\";\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  if (sharedPostReceived.match(action)) {\n    const { originalAuthor } = action.payload;\n    return produce(state, draft => {\n      if (!draft[originalAuthor]) {\n        draft[originalAuthor] = Common.createEmptyUser(originalAuthor);\n      }\n    });\n  }\n  if (updatedUserProfile.match(action)) {\n    return produce(state, draft => {\n      const { profile, publicKey } = action.payload;\n\n      if (!draft[publicKey]) {\n        draft[publicKey] = Common.createEmptyUser(publicKey);\n      }\n\n      Object.assign(draft[publicKey], profile);\n    });\n  }\n\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/GuestActions\";\nimport * as Common from \"shock-common\";\n\nexport interface GuestState {\n  user?: {\n    alias: string;\n    pass: string;\n    pub: string;\n    epub: string;\n    ok: 0;\n  };\n  follows: Common.Follow[];\n  paymentRequest?: {\n    response: string;\n    metadata: object;\n  };\n  tips: string[];\n}\n\nconst INITIAL_STATE: GuestState = {\n  user: null,\n  paymentRequest: null,\n  follows: [],\n  tips: []\n};\n\nconst guest = (\n  state: GuestState = INITIAL_STATE,\n  action: { type: string; data: any }\n): GuestState => {\n  const { data } = action;\n\n  switch (action.type) {\n    case ACTIONS.RESET_GUEST: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.CREATE_GUEST_USER: {\n      return {\n        ...state,\n        user: data\n      };\n    }\n    case ACTIONS.TIP_USER: {\n      return {\n        ...state,\n        tips: [...state.tips, data]\n      };\n    }\n    case ACTIONS.SET_PAYMENT_RESPONSE: {\n      return {\n        ...state,\n        paymentRequest: data\n      };\n    }\n    case ACTIONS.FOLLOW_USER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.UNFOLLOW_USER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.RESET_DEFAULT_FOLLOWS: {\n      const { data } = action;\n\n      if (state.follows.length > 0) {\n        return state;\n      }\n\n      return { ...state, follows: data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default guest;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n  myServices: {},\n  services: {},\n  boughtServices: {}\n};\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const { id, serviceInfo } = action.data;\n      const tmp = { ...state.myServices };\n      tmp[id] = serviceInfo;\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE: {\n      const id = action.data;\n      const tmp = { ...state.myServices };\n      delete tmp[id];\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE: {\n      const { orderAck, owner, serviceID } = action.data;\n      const servicesTmp = { ...state.boughtServices };\n\n      if (!servicesTmp[owner]) {\n        servicesTmp[owner] = {};\n      }\n      const selectedService = servicesTmp[owner];\n      if (!selectedService[serviceID]) {\n        selectedService[serviceID] = [];\n      }\n      selectedService[serviceID].push(orderAck);\n      return { ...state, boughtServices: servicesTmp };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/AppActions\";\n\nconst INITIAL_STATE = {\n  dialogText: '',\n  dialogHasCallback:false\n};\nconst app = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.OPEN_DIALOG: {\n      const {text,hasCallback} = action.data\n      return { ...state, dialogText: text,dialogHasCallback:hasCallback };\n    }\n    case ACTIONS.CLOSE_DIALOG: {\n      return {...state, dialogText: '',dialogHasCallback: false}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","import produce from \"immer\";\n\nimport * as Utils from \"../utils\";\nimport { set } from \"../actions/SettingsActions\";\n\nconst INITIAL_STATE: Record<string, string | number | boolean> = {};\n\nconst settings = produce((draft, action) => {\n  try {\n    if (set.match(action)) {\n      const { key, value } = action.payload;\n      draft[key] = value;\n    }\n  } catch (e) {\n    Utils.logger.error(`Error inside settings reducer:`);\n    Utils.logger.error(e);\n  }\n}, INITIAL_STATE);\n\nexport default settings;\n","import produce from \"immer\";\n\nimport { CoordinateWithHash } from \"../schema\";\n\nimport {\n  coordinateDeleted,\n  coordinateReceived\n} from \"../actions/CoordinateActions\";\n\nconst INITIAL_STATE = {} as Record<string, CoordinateWithHash>;\n\nconst coordinates = produce((draft, action) => {\n  if (coordinateDeleted.match(action)) {\n    const { coordinateSHA256 } = action.payload;\n    delete draft[coordinateSHA256];\n  }\n  if (coordinateReceived.match(action)) {\n    const { coordinate, coordinateSHA256 } = action.payload;\n    draft[coordinateSHA256] = { ...coordinate, coordinateSHA256 };\n  }\n}, INITIAL_STATE);\n\nexport default coordinates;\n","import { combineReducers } from \"redux\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport GuestReducer from \"./GuestReducer\";\nimport OrdersReducer from \"./OrdersReducer\";\nimport AppReducer from \"./AppReducer\";\nimport settings from \"./settings\";\nimport coordinates from \"./CoordinatesReducer\";\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders: OrdersReducer,\n  app: AppReducer,\n  guest: GuestReducer,\n  settings,\n  coordinates\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\nimport { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state) ?? \"\";\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = publicKey => (state: State): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey ?? \"\");\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n\nexport const selectAllOtherUsers = createSelector(\n  (state: State) => state.userProfiles,\n  (state: State) => state.node.publicKey,\n  (users, selfPublicKey): Schema.User[] => {\n    return Object.values(users).filter(\n      user => user.publicKey !== selfPublicKey\n    );\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectFollows = createSelector(\n  selectSelfPublicKey,\n  (state: State) => {\n    if (!state.auth.authenticated) {\n      return state.guest.follows;\n    }\n\n    return state.feed.follows;\n  },\n  (selfPublicKey, follows) => {\n    return follows.filter(f => f.user !== selfPublicKey);\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { PublishedContent } from \"../../schema\";\n\nexport const selectOwnPublishedContent = createSelector(\n  (state: State) => state.content.publishedContent,\n  (state: State) => state.content.publicContent,\n  (privateContent, publicContent): Record<string, PublishedContent> => {\n    return {\n      ...privateContent,\n      ...publicContent\n    };\n  }\n);\n","import { createSelector } from \"reselect\";\nimport uniq from \"lodash/uniq\";\nimport * as Common from \"shock-common\";\n\nimport { State } from \"../../reducers\";\nimport * as Schema from \"../../schema\";\n\nexport const selectConvos: (state: State) => Schema.Convo[] = createSelector(\n  (state: State) => state.chat.convos,\n  convos => {\n    return Object.values(convos);\n  }\n);\n\nexport const selectSingleConvo = (convoID: string) => (\n  state: State\n): Schema.Convo | null => {\n  const convo = state.chat.convos[convoID];\n  return convo ?? null;\n};\n\n/**\n * TODO: Memoize.\n */\nexport const selectIsInContact = (publicKey: string) => (\n  state: State\n): boolean => {\n  return !!Object.values(state.chat.convos).find(\n    convo => convo.with === publicKey\n  );\n};\n\nexport const selectCurrentHandshakeAddress = (state: State) =>\n  state.chat.currentHandshakeAddress;\n\nexport const selectReceivedRequests: (\n  state: State\n) => Schema.HandshakeReqNew[] = createSelector(\n  (state: State) => state.chat.receivedRequests,\n  selectConvos,\n  (receivedRequests, convos) => {\n    return Object.values(receivedRequests).filter(\n      req => !convos.find(convo => convo.id === req.receiverConvoID)\n    );\n  }\n);\n\nexport const selectAllMessages = (state: State) => state.chat.convoToMessages;\n\nexport const selectContacts = createSelector(\n  (state: State) => state.chat.convos,\n  (state: State) => state.userProfiles,\n  (convos, users): Common.User[] => {\n    const _publicKeys = Object.values(convos).map(convo => convo.with);\n    const publicKeys = uniq(_publicKeys);\n    return publicKeys.map(publicKey => {\n      const user = users[publicKey];\n      if (!user) {\n        return Common.createEmptyUser(publicKey);\n      }\n      return user;\n    });\n  }\n);\n\nexport const selectCommunication = (convoIDOrRequestID: string) => (\n  state: State\n): Schema.Convo | Schema.HandshakeReqNew | null => {\n  const maybeConvo = state.chat.convos[convoIDOrRequestID];\n  const maybeRequest = state.chat.receivedRequests[convoIDOrRequestID];\n\n  if (maybeRequest) {\n    return maybeRequest;\n  }\n\n  if (maybeConvo) {\n    return maybeConvo;\n  }\n\n  return null;\n};\n\nexport const selectConvoMessages = (convoID: string) => (\n  state: State\n): Schema.ConvoMsg[] => {\n  return Object.values(state.chat.convoToMessages[convoID]).sort((a, b) => {\n    return b.timestamp - a.timestamp;\n  });\n};\n","import * as Common from \"shock-common\";\nimport pick from \"lodash/pick\";\nimport pickBy from \"lodash/pickBy\";\nimport { createSelector } from \"reselect\";\n\nimport * as Schema from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\nimport { selectFollows } from \"./follows\";\n\nexport const selectFeedPosts = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.posts,\n  (selfPublicKey, posts) => {\n    // TODO: fix self-follow bug\n    return pickBy(posts, (_, publicKey) => publicKey !== selfPublicKey);\n  }\n);\n\nexport const selectAllPosts = (state: State) => state.feed.posts;\n\nexport const selectAllSharedPosts = (state: State) => state.feed.sharedPosts;\n\nexport const selectSinglePost = (authorId: string, postID: string) => (\n  state: State\n): Schema.Post | null => {\n  return state.feed.posts[authorId]?.find(post => post.id === postID) || null;\n};\n\nexport const selectPostsNewestToOldest = (publicKey: string) => (\n  state: State\n): Array<Schema.Post | Common.SharedPost> => {\n  const posts = state.feed.posts[publicKey]?.slice() || [];\n  const sharedPostsMap = state.feed.sharedPosts[publicKey] || {};\n  const sharedPosts = Object.values(sharedPostsMap);\n  const allPosts = [...posts, ...sharedPosts];\n\n  allPosts.sort((a, b) => {\n    const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n    const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n    return beta - alpha;\n  });\n\n  return allPosts;\n};\n\nexport const selectSharedPost = (sharer: string, postID: string) => (\n  state: State\n): Common.SharedPost | null => {\n  const sharedPostsMap = state.feed.sharedPosts[sharer] || {};\n  return sharedPostsMap[postID] || null;\n};\n\nexport const selectAllPostsFromFollowedNewestToOldest = createSelector(\n  selectAllPosts,\n  selectAllSharedPosts,\n  selectFollows,\n  (posts, sharedPosts, follows): Array<Schema.Post | Common.SharedPost> => {\n    const followedPublicKeys = follows.map(f => f.user);\n    const filteredPosts = pick(posts, followedPublicKeys);\n    const filteredShared = pick(sharedPosts, followedPublicKeys);\n\n    const allNonShared = Object.values(filteredPosts).flat();\n    const allShared = Object.values(filteredShared)\n      .map(records => Object.values(records))\n      .flat();\n\n    const all = [...allNonShared, ...allShared].sort((a, b) => {\n      const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n      const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n      return beta - alpha;\n    });\n\n    return all;\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { CoordinateWithHash } from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nexport const selectAllCoordinates = createSelector(\n  (state: State) => state.coordinates,\n  (coordinates): CoordinateWithHash[] => {\n    return Object.values(coordinates);\n  }\n);\n\nexport const selectAllCoordinatesNewestToOldest = createSelector(\n  selectAllCoordinates,\n  (coords): CoordinateWithHash[] => {\n    return coords.slice().sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  }\n);\n\nexport const selectSingleCoordinate = (coordinateSHA256: string) => (\n  state: State\n) => state.coordinates[coordinateSHA256];\n","import {\n  useSelector as originalUseSelector,\n  TypedUseSelectorHook\n} from \"react-redux\";\n\nimport { State } from \"../../reducers\";\n\nexport const useSelector: TypedUseSelectorHook<State> = (selector, eqFn) =>\n  originalUseSelector(selector, eqFn);\n\nexport const selectRoot = (state: State) => state;\n\nexport * from \"./auth\";\nexport * from \"./users\";\nexport * from \"./follows\";\nexport * from \"./publishedContent\";\nexport * from \"./chat\";\nexport * from \"./feed\";\nexport * from \"./coordinates\";\n","import {\n  createStore,\n  applyMiddleware,\n  compose,\n  AnyAction,\n  Action\n} from \"redux\";\nimport thunk, { ThunkDispatch } from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport {\n  useSelector as origUseSelector,\n  useDispatch as originalUseDispatch\n} from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport const useDispatch = (): ThunkDispatch<State, undefined, Action> => {\n  return originalUseDispatch() as ThunkDispatch<State, undefined, Action>;\n};\n\nexport * from \"./selectors\";\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 269;","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const set = createAction<{\n  key: string;\n  value: string | number | boolean;\n}>(\"settings/set\");\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\nimport {\n  PublishedContent,\n  isPublishedContent,\n  PublicContentItem,\n  isPublicContentItem\n} from \"../schema\";\nimport { parseJson, logger } from \"../utils\";\nimport { openDialog } from \"./AppActions\";\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB: \"content/setSeedProviderPub\",\n  SET_SEED_INFO: \"content/setSeedInfo\",\n\n  PUBLISHED_CONTENT_ADDED: \"content/publishedContentAdded\",\n  PUBLISHED_CONTENT_REMOVED: \"content/publishedContentRemoved\",\n\n  ADD_UNLOCKED_CONTENT: \"content/addUnlocked\",\n  ADD_STREAM: \"content/addStream\",\n  REMOVE_STREAM: \"content/removeStream\",\n  ADD_AVAILABLE_TOKEN: \"content/addToken\",\n  REMOVE_USED_TOKEN: \"content/removeToken\",\n  ADD_STREAM_TOKEN: \"content/addStreamToken\",\n  REMOVE_STREAM_TOKEN: \"content/removeStreamToken\"\n} as const;\n\nexport const setSeedProviderPub = (\n  pub,\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    let value: string | Record<string, any> = {\n      $$__ENCRYPT__FOR: \"me\",\n      value: pub\n    };\n    if (!pub) {\n      value = \"\";\n    }\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>preferencesSeedServiceProvider\",\n      value\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (\n  seedUrl: string,\n  seedToken: string,\n  dontBackup = false\n) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0, -1) : seedUrl;\n  if (!dontBackup) {\n    const infoS = JSON.stringify({ seedUrl: cleanUrl, seedToken });\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>preferencesSeedServiceData\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: infoS\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: { seedUrl: cleanUrl, seedToken }\n  });\n};\n\nexport const publishedContentAdded = createAction<{\n  content: PublishedContent;\n  res: { ok: boolean; id: string };\n}>(ACTIONS.PUBLISHED_CONTENT_ADDED);\n\nexport const publicContentAdded = createAction<{\n  item: PublicContentItem;\n}>(\"content/publicContentAdded\");\n\nexport const addPublishedContent = (\n  content: PublishedContent | PublicContentItem,\n  type: \"public\" | \"private\"\n) => async dispatch => {\n  if (type === \"public\") {\n    if (!isPublicContentItem(content)) {\n      throw new TypeError(\n        `Expected content to upload to be a PublicContentItem`\n      );\n    }\n\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>publishedContentPublic>${content.id}`,\n      value: content\n    });\n\n    dispatch(\n      publicContentAdded({\n        item: content\n      })\n    );\n\n    return content;\n  } else {\n    const { data } = await Http.post<{ ok: boolean; id: string }>(\n      \"/api/gun/set\",\n      {\n        path: \"$user>publishedContent\",\n        value: {\n          $$__ENCRYPT__FOR: \"me\",\n          value: JSON.stringify(content)\n        }\n      }\n    );\n    dispatch(\n      publishedContentAdded({\n        content,\n        res: data\n      })\n    );\n    return data;\n  }\n};\n\nexport const publishedContentRemoved = createAction<{ id: string }>(\n  ACTIONS.PUBLISHED_CONTENT_REMOVED\n);\n\nexport const unlockContent = (amt, owner, postID) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"contentReveal\",\n    amt,\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: postID\n  });\n  const revealRes = data.orderAck.response;\n  if (revealRes && revealRes.unlockedContents) {\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type: ACTIONS.ADD_UNLOCKED_CONTENT,\n          data: { contentPath: `${owner}>posts>${postID}`, content }\n        });\n      }\n    }\n  }\n};\nexport const addStream = (\n  {\n    seedToken,\n    liveToken,\n    streamUrl,\n    streamPostId,\n    streamContentId,\n    streamStatusUrl,\n    streamBroadcasterUrl,\n    tipOverlayUrl\n  },\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: JSON.stringify({\n          seedToken,\n          liveToken,\n          streamUrl,\n          streamPostId,\n          streamContentId,\n          streamStatusUrl,\n          streamBroadcasterUrl,\n          tipOverlayUrl\n        })\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {\n      seedToken,\n      liveToken,\n      streamUrl,\n      streamPostId,\n      streamContentId,\n      streamStatusUrl,\n      streamBroadcasterUrl,\n      tipOverlayUrl\n    }\n  });\n};\nexport const removeStream = (\n  dontBackup = false,\n  noDialog = false\n) => async dispatch => {\n  if (!noDialog) {\n    openDialog({\n      text: \"The recording of the stream will be published in a few moments.\"\n    })(dispatch);\n  }\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: \"NO DATA\"\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeUnavailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\n\nconst OWN_PUBLISHED_CONTENT_QUERY = \"$user::publishedContent::map.on\";\n\nexport const subOwnPublishedContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  console.debug(`Subscribing to own published content`);\n  const subscription = await rifle({\n    query: OWN_PUBLISHED_CONTENT_QUERY,\n    reconnect: true,\n    publicKey: \"me\",\n    onData: async (content: string, key) => {\n      try {\n        console.debug(`Received own content:`);\n        console.debug(content);\n\n        if (typeof key !== \"string\") {\n          throw new TypeError(`Invalid content key received: ${key}`);\n        }\n\n        if (!content) {\n          dispatch(\n            publishedContentRemoved({\n              id: key\n            })\n          );\n          return;\n        }\n\n        if (typeof content !== \"string\") {\n          throw new TypeError(\n            `Invalid content (in key ${key}) received (${JSON.stringify(\n              content\n            )})`\n          );\n        }\n\n        const parsed = parseJson(content);\n\n        if (!isPublishedContent(parsed)) {\n          throw new TypeError(\n            `Invalid content received (might be incomplete replication): ${JSON.stringify(\n              parsed,\n              null,\n              2\n            )}`\n          );\n        }\n\n        dispatch(\n          publishedContentAdded({\n            content: parsed,\n            res: {\n              id: key,\n              ok: true\n            }\n          })\n        );\n      } catch (e) {\n        console.error(`Error inside own published content sub:`);\n        console.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n\nexport const unsubOwnPublishedContent = () => () => {\n  console.debug(`Unsubbing own published content.`);\n  unsubscribeRifleByQuery(OWN_PUBLISHED_CONTENT_QUERY);\n};\n\nexport const subOwnPublicContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  logger.debug(`Subscribing to own public content`);\n  const subscription = await rifle({\n    query: \"$user::publishedContentPublic::map.on\",\n    reconnect: true,\n    onError(e) {\n      alert(`Error inside own public content rifle: ${JSON.stringify(e)}`);\n      logger.error(`Error inside own public content rifle: `, e);\n    },\n    onData: async (item: unknown) => {\n      try {\n        if (item === null) {\n          return; // was deleted\n        }\n        logger.debug(`Received own public item:`);\n        logger.debug(item);\n\n        if (!isPublicContentItem(item)) {\n          throw new TypeError(\n            `Invalid public content item: ${JSON.stringify(item, null, 2)}`\n          );\n        }\n\n        dispatch(\n          publicContentAdded({\n            item\n          })\n        );\n      } catch (e) {\n        logger.error(`Error inside own public content sub:`);\n        logger.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n","import { useRef, useEffect, memo } from \"react\";\n\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\n\nconst Stream = ({\n  item,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n}) => {\n  const playerDOM = useRef(null);\n  const isLive = false // TODO\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const { liveStatus } = item\n  useEffect(() => {\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  }, [item])\n  useEffect(() => {\n    if (item.viewersSocketUrl) {\n      const socket = new WebSocket(`${item.viewersSocketUrl}/stream/watch/${item.userToken}`);\n      socket.addEventListener(\"open\", () => {\n        console.log(\"viewer socket open\")\n      });\n      return () => {\n        socket.close()\n      }\n    }\n  }, [item])\n\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {!isLive && liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!isLive && !liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Stream);\n","import Http from \"axios\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\nimport { exchangeKeyPair } from \"../actions/EncryptionActions\";\nimport * as Encryption from \"./Encryption\";\nimport { safeParseJSON } from \"./JSON\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\") {\n    return config;\n  }\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return { ...response, data: safeParseJSON(response.data) };\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const { relayId } = store.getState().node;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n      if (relayId) {\n        /////\n        config.headers.common[\"x-shock-hybrid-relay-id-x\"] = relayId;\n        /////\n      }\n    }\n\n    // @ts-ignore\n    config.originalData = config.originalData || config.data;\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const { store } = await import(\"../store\");\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      console.error(\"Error status:\", error.response);\n      if (!response) {\n        store.dispatch(setAuthenticated(false));\n      }\n      if (\n        response?.data.field === \"deviceId\" &&\n        (error.config.retries ?? 0) < 2\n      ) {\n        store.dispatch(setAuthenticated(false));\n        const keyPair = await exchangeKeyPair()(store.dispatch);\n        error.config.retries = (error.config.retries ?? 0) + 1;\n        return Http({\n          ...error.config,\n          data: error.config.originalData,\n          headers: {\n            ...error.config.headers,\n            \"encryption-device-id\": keyPair.deviceId\n          }\n        });\n      }\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\",\n  LOAD_LIGHTNING_INFO: \"wallet/lightningInfo/load\"\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  try {\n    const { data } = await Http.get(`/api/lnd/balance`);\n\n    dispatch({\n      type: ACTIONS.LOAD_BALANCE,\n      data: {\n        channelBalance: data.channel_balance,\n        confirmedBalance: data.confirmed_balance,\n        pendingChannelBalance: data.pending_channel_balance\n      }\n    });\n  } catch (e) {\n    console.error(\n      `When trying to fetch the balance for the wallet, an error ocurred:`,\n      e\n    );\n  }\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\n      \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n    );\n    const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n    dispatch({\n      type: ACTIONS.LOAD_USD_RATE,\n      data: exchangeRate\n    });\n  } catch (e) {\n    console.error(`An error happened when trying to fetch the USD rate:`, e);\n  }\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { transactions } = getState().wallet;\n\n    if (\n      (transactions.page >= page && !reset) ||\n      transactions.totalPages < page\n    ) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/transactions\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred when fetching transactions (fetchTransactions()):`,\n      e\n    );\n  }\n};\n\nexport const fetchChannels = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n    dispatch({\n      type: ACTIONS.LOAD_CHANNELS,\n      data: data.channels\n    });\n  } catch (e) {\n    console.error(\n      `An ocurred ocurred when fetching channels (fetchChannels()):`,\n      e\n    );\n  }\n};\n\nexport const fetchPeers = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n    dispatch({\n      type: ACTIONS.LOAD_PEERS,\n      data: data.peers\n    });\n\n    return data;\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching peers (fetchPeers()) (will be re-thrown):`,\n      e\n    );\n    throw e;\n  }\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { invoices } = getState().wallet;\n\n    if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/invoices\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching invoices (fetchInvoices()):`,\n      e\n    );\n  }\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n  } catch (err) {\n    console.error(\n      `An error ocurred while connecting peer --| ${host} |-- with public key --| ${publicKey} |-- in connectPeer()`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = '0',\n  pushAmount = '0'\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity,\n      channelPushAmount: pushAmount,\n      satPerByte: feeRates[rate]\n    });\n\n    dispatch(fetchChannels());\n  } catch (err) {\n    console.error(\n      `An error ocurred while opening a channel (openChannel()) with public key --| ${publicKey} |--, channel capacity: --| ${channelCapacity} |-- and push amount: --| ${pushAmount} |--:`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const FetchLightningInfo = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/getinfo\");\n    dispatch({\n      type: ACTIONS.LOAD_LIGHTNING_INFO,\n      data\n    });\n  } catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n};\n","export const isCrawler = () => navigator.userAgent.includes(\"Prerender\");\n","import GunDB from \"gun/gun\";\nimport { isCrawler } from \"./Prerender\";\nimport \"gun/sea\";\nimport \"gun/lib/load\";\nimport { IGunCryptoKeyPair, IGunRecordNodeRaw } from \"gun/types/types\";\n\ninterface GunPath {\n  path: string;\n  root: string;\n}\n\ninterface GunDBQuery {\n  query: string;\n  retryDelay?: number;\n  retryLimit?: number;\n  retryCondition?: (data: any) => boolean;\n  // Private arguments for recursive retries\n  _retryCount?: number;\n  _fallbackResult?: any;\n}\n\ninterface GunDBUser {\n  ack: 2;\n  get: string;\n  on: (args_0: unknown, args_1: unknown, args_2: unknown) => unknown;\n  put: {\n    alias: string;\n    auth: any;\n    epub: string;\n    pub: string;\n  };\n  sea: IGunCryptoKeyPair;\n  soul: string;\n}\n\nconst safeParse = (data: string) => {\n  try {\n    return JSON.parse(data);\n  } catch (err) {\n    return null;\n  }\n};\n\nconst peersConfig = safeParse(process.env.PEERS);\n\nconst peers = peersConfig\n  ? peersConfig\n  : [\"https://gun.shock.network/gun\", \"https://gun-eu.shock.network/gun\"];\n\nconst wait = (ms: number) =>\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(true);\n    }, ms);\n  });\n\nconst randomString = (length: number) => {\n  let randomString = \"\";\n  const randomChar = function () {\n    const n = Math.floor(Math.random() * 62);\n    if (n < 10) return n; //1-10\n    if (n < 36) return String.fromCharCode(n + 55); //A-Z\n    return String.fromCharCode(n + 61); //a-z\n  };\n  while (randomString.length < length) randomString += randomChar();\n  return randomString;\n};\n\nconst filterGunProps = ([key, item]) => item && key !== \"_\" && key !== \"#\";\n\nconst isIncompleteGunResponse = (data: any) => {\n  try {\n    console.log(\"Incomplete Gun Response Check:\", typeof data, data);\n    if (data === null || data === undefined) {\n      return true;\n    }\n\n    if (Array.isArray(data)) {\n      if (!data.length) {\n        return true;\n      }\n\n      const incompleteCollection = data.reduce((empty, item) => {\n        if (empty) {\n          return empty;\n        }\n\n        return isIncompleteGunResponse(item);\n      });\n\n      return incompleteCollection;\n    }\n\n    if (typeof data === \"object\") {\n      if (!data || typeof data.err === \"number\") {\n        return true;\n      }\n\n      const stringifiedData = JSON.stringify(data);\n\n      if (stringifiedData === \"{}\") {\n        return true;\n      }\n\n      const filteredGunProps = Object.entries(data).filter(filterGunProps);\n\n      if (!filteredGunProps?.length) {\n        return true;\n      }\n    }\n\n    return false;\n  } catch (err) {\n    console.warn(\"An error has occurred:\", err);\n    return true;\n  }\n};\n\nconst getNode = (root: string) => {\n  if (root === \"$gun\") {\n    return Gun;\n  }\n\n  return gunUser(root);\n};\n\nconst parseGunPath = ({ path, root }: GunPath) => {\n  const gunPointer = getNode(root);\n  const GunContext = path\n    .split(\">\")\n    .reduce((gun, path) => gun.get(path), gunPointer);\n  return GunContext;\n};\n\nexport const Gun = GunDB({ axe: false, peers: peers });\n\nexport const fetchPath = ({\n  query,\n  retryDelay = 500,\n  retryLimit = 3,\n  retryCondition = isIncompleteGunResponse,\n  // Private arguments for recursive retries\n  _retryCount = 0,\n  _fallbackResult = null\n}: GunDBQuery) =>\n  new Promise<any>(resolve => {\n    const parsedRetryLimit = isCrawler() ? 1 : retryLimit;\n    const parsedRetryDelay = isCrawler() ? 200 : retryDelay;\n    const [root, path, method = \"once\"] = query.split(\"::\");\n\n    if (_retryCount > parsedRetryLimit) {\n      resolve(_fallbackResult);\n      return;\n    }\n\n    if (_retryCount > 0) {\n      console.log(\n        \"Retrying event:\",\n        path,\n        `${_retryCount}/${parsedRetryLimit}`\n      );\n    }\n\n    const GunContext = parseGunPath({ path, root });\n    GunContext[method](async event => {\n      console.log(path + \" Response:\", event);\n      if (retryCondition && retryCondition(event)) {\n        await wait(parsedRetryDelay);\n        const retryResult = await fetchPath({\n          query,\n          retryDelay: parsedRetryDelay,\n          retryLimit: parsedRetryLimit,\n          retryCondition,\n\n          _retryCount: _retryCount + 1,\n          _fallbackResult: event\n        });\n        resolve(retryResult);\n        return;\n      }\n\n      resolve(event);\n    });\n  });\n\n// Wraps GunDB data callbacks to provide better error handling\nexport const wrap = callback => event => {\n  console.log(\"Event received!\", event);\n  if (event?.err) {\n    console.error(\"[GunDB] Event error:\", event?.err, event);\n  }\n\n  if (!event?.put) {\n    console.warn(\"[GunDB] Item not found:\", event?.put, event);\n  }\n\n  return callback(\n    event,\n    event.err || !event.put\n      ? {\n          field: !event.put ? \"key\" : \"unknown\",\n          message: event.err\n            ? event.err\n            : !event.put\n            ? \"Key not found\"\n            : \"Unknown\",\n          gunErr: event.err\n        }\n      : null\n  );\n};\n\nexport const putPath = ({ query = \"\", data = {} }) =>\n  new Promise((resolve, reject) => {\n    const [root, path] = query.split(\"::\");\n    const GunContext = parseGunPath({ path, root });\n    GunContext.put(\n      // @ts-ignore\n      data,\n      wrap((event, err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(event);\n      })\n    );\n  });\n\nexport const setPath = ({ query = \"\", data = {} }) =>\n  new Promise<IGunRecordNodeRaw<string>>((resolve, reject) => {\n    const [root, path] = query.split(\"::\");\n    const GunContext = parseGunPath({ path, root });\n    const response = GunContext.set(data, event => {\n      // @ts-ignore\n      resolve(response);\n    });\n  });\n\nexport const listenPath = ({ query = \"\", callback }) => {\n  const [root, path, method] = query.split(\"::\");\n  const GunContext = parseGunPath({ path, root });\n\n  if (method === \"open\") {\n    return GunContext.open(callback);\n  }\n\n  if (method === \"map.on\") {\n    return GunContext.map().on(callback);\n  }\n\n  if (method === \"map.once\") {\n    return GunContext.map().once(callback);\n  }\n\n  return GunContext.on(callback);\n};\n\nexport interface RandomGunUser {\n  alias: string;\n  pass: string;\n  ok: 0;\n  pub: string;\n}\n\nexport const createRandomGunUser = () =>\n  new Promise<RandomGunUser>((resolve, reject) => {\n    const randomAlias = randomString(10);\n    const randomPass = randomString(10);\n    Gun.user().create(randomAlias, randomPass, event => {\n      if (\"err\" in event) {\n        console.error(\"An error has occurred while initializing a new user\");\n        reject({\n          field: \"gundb\",\n          message: \"An error has occurred while initializing a new user\",\n          _error: event.err,\n          _event: event\n        });\n        return;\n      }\n\n      resolve({ ...event, alias: randomAlias, pass: randomPass });\n    });\n  });\n\nexport const authUser = (alias: string, pass: string) =>\n  new Promise<GunDBUser>((resolve, reject) => {\n    Gun.user().auth(alias, pass, user => {\n      if (\"err\" in user) {\n        reject(user);\n        return;\n      }\n      resolve(user);\n    });\n  });\n\nexport const gunUser = (publicKey: string) => {\n  console.log(\"Getting Gun User:\", publicKey);\n  if (!publicKey) {\n    throw new Error(\"Undefined public key\");\n  }\n  return Gun.user(publicKey);\n};\n\n// Magic number provided from GunDB docs\nexport const DEFAULT_ONCE_WAIT_MS = 99;\n\nexport const $$_SHOCKWALLET__ENCRYPTED__ = \"$$_SHOCKWALLET__ENCRYPTED__\";\n\nexport const $$__SHOCKWALLET__MSG__ = \"$$__SHOCKWALLET__MSG__\";\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Buffer;\n  ephemPublicKey: Buffer;\n  iv: Buffer;\n  mac: Buffer;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Buffer | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Buffer | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Buffer) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Buffer | string): Buffer => {\n  if (Buffer.isBuffer(key)) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    Buffer.isBuffer(encryptedMessage.ciphertext) &&\n    Buffer.isBuffer(encryptedMessage.iv) &&\n    Buffer.isBuffer(encryptedMessage.mac) &&\n    Buffer.isBuffer(encryptedMessage.ephemPublicKey)\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    Buffer.isBuffer(encryptedMessage.ciphertext) &&\n    Buffer.isBuffer(encryptedMessage.iv) &&\n    Buffer.isBuffer(encryptedMessage.mac) &&\n    Buffer.isBuffer(encryptedMessage.ephemPublicKey)\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName) ||\n  process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\";\n\nexport const generateKeyPair = () => {\n  const privateKey: Buffer = ECCrypto.generatePrivate();\n  const publicKey: Buffer = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  try {\n    const processedPrivateKey = processKey(privateKey);\n    const decryptedMessageBuffer: Buffer = await ECCrypto.decrypt(\n      processedPrivateKey,\n      convertToEncryptedMessage(encryptedMessage)\n    );\n    const decryptedMessage = decryptedMessageBuffer.toString(\"utf-8\");\n    const parsedMessage = safeParseJSON(decryptedMessage);\n\n    return parsedMessage;\n  } catch (err) {\n    if (err.message?.toLowerCase() === \"bad mac\") {\n      console.warn(\n        \"Bad Mac!\",\n        err,\n        convertToEncryptedMessage(encryptedMessage)\n      );\n    }\n\n    throw err;\n  }\n};\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Schema from \"../schema\";\nimport * as Utils from \"../utils\";\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nimport { ACTIONS as GUEST_ACTIONS } from \"./GuestActions\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { State } from \"../reducers/index\";\nimport { Action } from \"redux\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\",\n  RELOAD_FEED: \"feed/reload\",\n  RESET_DEFAULT_FOLLOWS: \"follows/reload\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const postDeleted = createAction<{\n  author: string;\n  id: string;\n}>(\"feed/postDeleted\");\n\nexport const postReceived = createAction<{\n  author: string;\n  id: string;\n  post: Schema.PostRaw;\n}>(\"feed/postReceived\");\n\nexport const subSinglePost = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}::on`,\n      onData(post: string) {\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author,\n              id: postID\n            })\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )}: ${e.message}`\n        );\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nexport const subscribeUserPosts = (publicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${publicKey}::posts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside posts subscription for ...${publicKey.slice(-8)} -> `,\n          e\n        );\n        alert(\n          `Error inside posts subscription for ...${publicKey.slice(-8)}: ${\n            e.message\n          }`\n        );\n      },\n      onData: (post: unknown, postID: string) => {\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author: publicKey,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author: publicKey,\n              id: postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In posts subscription for user ...${publicKey.slice(\n              -8\n            )}, invalid data -> `,\n            post\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to posts for ...${publicKey.slice(-8)} -> `,\n      e\n    );\n    alert(`Could not sub to posts for ...${publicKey.slice(-8)}: ${e.message}`);\n\n    return () => {};\n  }\n};\n\nexport const contentItemReceived = createAction<{\n  author: string;\n  contentItem: Common.ContentItem;\n  id: string;\n  postID: string;\n}>(\"feed/contentItemReceived\");\n\nexport const subPostContent = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}>contentItems::map.on`,\n      onData(contentItem: unknown, id: string) {\n        // CAST: unfortunate isContentItem typings\n        if (Common.isContentItem(contentItem)) {\n          dispatch(\n            contentItemReceived({\n              author,\n              contentItem,\n              id,\n              postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Invalid content item (${id}) in post content subscription from ..${author.slice(\n              -8\n            )} for post ${postID} -> `,\n            contentItem\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID} -> `,\n          e\n        );\n        alert(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID}: ${e.message}`\n        );\n      }\n    });\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to post content from ...${author.slice(\n        -8\n      )} for post ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not sub to posts from ...${author.slice(-8)} for post ${postID}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async dispatch => {\n  const subscription = await rifle({\n    query: FOLLOWS_QUERY,\n    reconnect: true,\n    onData: async (follow, key) => {\n      console.info(`processing follow`);\n      console.info(follow);\n      if (typeof key !== \"string\") {\n        console.warn(`Invalid follow key received: ${key}`);\n        return;\n      }\n\n      if (!follow) {\n        dispatch(removeFollow(key));\n        return;\n      }\n\n      if (typeof follow.user !== \"string\") {\n        console.warn(`Invalid follow user received (${follow.user})`);\n        return;\n      }\n\n      dispatch(addFollow(follow));\n    }\n  });\n\n  console.debug(\"subbing follows\");\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  unsubscribeRifleByQuery(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n\nexport const reloadFeed = () => ({\n  type: ACTIONS.RELOAD_FEED\n});\n\nexport const reloadFollows =\n  (\n    follows: Common.Follow[]\n  ): ThunkAction<Promise<Common.Follow[]>, State, unknown, Action<string>> =>\n  async (dispatch, getState) => {\n    const { authenticated } = getState().auth;\n\n    dispatch({\n      type: authenticated\n        ? ACTIONS.RESET_DEFAULT_FOLLOWS\n        : GUEST_ACTIONS.RESET_DEFAULT_FOLLOWS,\n      data: follows\n    });\n\n    return follows;\n  };\n\n// #region sharedPosts\n\nexport const sharedPostDeleted = createAction<{\n  postID: string;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostDeleted\");\n\nexport const sharedPostReceived = createAction<{\n  originalAuthor: string;\n  postID: string;\n  shareDate: number;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostReceived\");\n\nexport const subSharedPosts = (sharerPublicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${sharerPublicKey}::sharedPosts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )}: ${e.message}`\n        );\n      },\n      onData: (sharedPost: unknown, postID: string) => {\n        if (Common.isSharedPostRaw(sharedPost)) {\n          dispatch(\n            sharedPostReceived({\n              originalAuthor: sharedPost.originalAuthor,\n              postID,\n              shareDate: sharedPost.shareDate,\n              sharerPublicKey\n            })\n          );\n        } else if (sharedPost === null) {\n          dispatch(\n            sharedPostDeleted({\n              postID,\n              sharerPublicKey\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In shared posts subscription for user ...${sharerPublicKey.slice(\n              -8\n            )}, invalid data -> `,\n            sharedPost\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\n// #endregion sharedPosts\n\nexport const postTipReceived = createAction<{\n  author: string;\n  postID: string;\n  tipAmt: number;\n  tipID: string;\n}>(\"feed/postTipReceived\");\n\nexport const subPostTips = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}>tipsSet::map.on`,\n      onData(tipAmt: unknown, tipID: string) {\n        const nTipAmount = Number(tipAmt);\n        if (!isNaN(nTipAmount)) {\n          dispatch(\n            postTipReceived({\n              author,\n              postID,\n              tipAmt: nTipAmount,\n              tipID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Post ${postID} tips sub, tipID ${tipID} got non number value -> `,\n            tipAmt\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID}: ${e.message}`\n    );\n    return () => {};\n  }\n};\n","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { exchangeKeyPair } from \"./EncryptionActions\";\nimport { connectSocket } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_WEBCLIENT_PREFIX: \"node/setWebClientPrefix\",\n  SET_RELAY_ID: \"auth/relay/set\",\n  SET_ACCESS_SECRET: \"auth/accessSecret/set\"\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nexport const fetchNodeHealth = (hostIP, relayId) => async dispatch => {\n  try {\n    const headers = {};\n    if (relayId) {\n      headers[\"x-shock-hybrid-relay-id-x\"] = relayId;\n    }\n    const { data } = await Http.get(`${hostIP}/healthz`, {\n      headers\n    });\n    if (!data) {\n      throw new Error(\n        `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n      );\n    }\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (\n  hostIP,\n  resetData = true,\n  relayId = null,\n  accessSecret = null\n) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n    if (relayId) {\n      dispatch(setRelayId(relayId));\n    }\n    if (accessSecret) {\n      dispatch(setAccessSecret(accessSecret));\n    }\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(exchangeKeyPair())\n    ]);\n\n    connectSocket(host, true);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(\n      `https://${sanitizedHostIP}`,\n      relayId\n    )(dispatch);\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(\n    `http://${sanitizedHostIP}`,\n    relayId\n  )(dispatch);\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({\n  alias,\n  password,\n  accessSecret\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/auth\", {\n      alias,\n      password,\n      accessSecret\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({\n  alias,\n  password,\n  accessSecret\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password,\n      accessSecret\n    });\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    await Http.post(\"/api/initUserInformation\", {});\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet\", {\n      alias,\n      password\n    });\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    await Http.post(\"/api/initUserInformation\", {});\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const setWebclientPrefix = prefix => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_WEBCLIENT_PREFIX,\n    data: prefix\n  });\n};\n\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n\nexport const setAccessSecret = accessSecret => ({\n  type: ACTIONS.SET_ACCESS_SECRET,\n  data: accessSecret\n});\n","import * as Common from \"shock-common\";\nimport isFinite from \"lodash/isFinite\";\n\nconst createValidator = <T extends Record<string, unknown>>(\n  valMap: Record<keyof T, (val: any) => void>,\n  baseValidator: (o: unknown) => boolean = () => true\n) => (o: unknown): o is T => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  if (!baseValidator(o)) {\n    return false;\n  }\n\n  return Object.entries(valMap).every(([key, validator]) => {\n    return validator(o[key]);\n  });\n};\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface HandshakeReqNew {\n  /**\n   * Sender's epub.\n   */\n  epub: string;\n  /**\n   * Sender's public key.\n   */\n  from: string;\n  /**\n   * Handshake address where the request was written to.\n   */\n  handshakeAddress: string;\n  /**\n   * The request's unique id.\n   */\n  id: string;\n\n  /**\n   * The ID for the receiver's conversation feed in their user graph. The sender\n   * will preemptively watch for messages in the receiver's conversation part of\n   * their user graph under this ID. When the receiver accepts, they will create\n   * the conversation feed under this ID and start sending messages. The initial\n   * $$__INITIAL__MSG sentinel message signals to the sender the request was\n   * accepted.\n   */\n  receiverConvoID: string;\n\n  /**\n   * The ID for the sender's conversation feed in their user graph. This\n   * conversation feed is already present upon sending the request.\n   */\n  senderConvoID: string;\n\n  /**\n   * Timestamp.\n   */\n  timestamp: number;\n}\n\nexport const isHandshakeReqNew = (o: unknown): o is HandshakeReqNew => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as HandshakeReqNew;\n\n  if (!Common.isPopulatedString(obj.epub)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.from)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.handshakeAddress)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.receiverConvoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.senderConvoID)) {\n    return false;\n  }\n\n  if (typeof obj.timestamp !== \"number\") {\n    return false;\n  }\n\n  return true;\n};\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Convo {\n  /**\n   * The id for the conversation in the recipient's user graph.\n   */\n  counterpartConvoID: string;\n  /**\n   * The id.\n   */\n  id: string;\n  /**\n   * The recipient's public key.\n   */\n  with: string;\n  /**\n   * The recipient's epub.\n   */\n  withEpub: string;\n}\n\nexport const isConvo = (o: unknown): o is Convo => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as Convo;\n\n  if (!Common.isPopulatedString(obj.counterpartConvoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  return Common.isPopulatedString(obj.with);\n};\n\nexport interface ConvoMsg {\n  body: string;\n  convoID: string;\n  err: string;\n  id: string;\n  state: \"ok\" | \"error\" | \"received\" | \"sending\";\n  timestamp: number;\n}\n\nexport const isConvoMsg = (o: unknown): o is ConvoMsg => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as ConvoMsg;\n\n  if (!Common.isPopulatedString(obj.body)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.convoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  if (typeof obj.timestamp !== \"number\") {\n    return false;\n  }\n\n  return true;\n};\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  tips: Record<string, number>;\n  type: \"post\";\n}\n\nexport interface PublishedContent {\n  type: \"image/embedded\" | \"video/embedded\";\n  magnetURI: string;\n  width: number;\n  height: number;\n  title: string;\n  description: string;\n}\n\nexport const isPublishedContent = (o: unknown): o is PublishedContent => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublishedContent;\n\n  if (typeof obj.description !== \"string\") {\n    return false;\n  }\n  if (typeof obj.height !== \"number\") {\n    return false;\n  }\n  if (typeof obj.width !== \"number\") {\n    return false;\n  }\n  if (!Common.isPopulatedString(obj.title)) {\n    return false;\n  }\n  if (obj.type !== \"image/embedded\" && obj.type !== \"video/embedded\") {\n    return false;\n  }\n  return true;\n};\n\nexport interface Subscription {\n  off(): void;\n}\n\n/**\n * Sentinel value that signals the recipient disconnected inside the user to\n * incoming map.\n */\nexport const DID_DISCONNECT = \"DID_DISCONNECT\";\nexport interface PublicContentItem extends PublishedContent {\n  id: string;\n  author: string;\n  timestamp: number;\n}\n\nexport const isPublicContentItem = (o: unknown): o is PublicContentItem => {\n  if (!isPublishedContent(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublicContentItem;\n\n  if (!Common.isPopulatedString(obj.author)) {\n    return false;\n  }\n\n  return typeof obj.timestamp === \"number\";\n};\n\nexport type FeeRate = \"hourFee\" | \"halfHourFee\" | \"fastestFee\";\n\nexport interface CoordinateWithHash extends Common.Coordinate {\n  coordinateSHA256: string;\n}\n\nexport interface ContentRevealCoordinateMetadataInbound {\n  /**\n   * The post ID.\n   */\n  ackInfo: string;\n  /**\n   * Content ID to magnet URI.\n   */\n  unlockedContents: Record<string, string>;\n}\n\nexport interface ContentRevealCoordinateMetadataOutbound {\n  /**\n   * Same as ContentRevealCoordinateMetadataInbound.\n   */\n  response: ContentRevealCoordinateMetadataInbound;\n  /**\n   * Order type.\n   */\n  type: \"orderAck\";\n}\n\n/**\n * Post as stored in Gun. Without `contentItems`.\n */\nexport type PostRaw = Omit<Common.RawPost, \"contentItems\">;\n\nexport const isPostRaw = createValidator<PostRaw>({\n  date: isFinite,\n  status: Common.isPopulatedString,\n  tags: (val: string) => typeof val === \"string\",\n  title: Common.isPopulatedString\n});\n\nexport interface NodeInfo {\n  uris: string[];\n  synced_to_chain: boolean;\n  synced_to_graph: boolean;\n  identity_pubkey: string;\n  best_header_timestamp: string;\n  block_height: number;\n  num_pending_channels: number;\n  version: string;\n}\n","import SEA from \"gun/sea\";\nimport { Action } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { State } from \"../reducers\";\nimport FieldError from \"../utils/FieldError\";\nimport * as Common from \"shock-common\";\nimport {\n  $$_SHOCKWALLET__ENCRYPTED__,\n  $$__SHOCKWALLET__MSG__,\n  authUser,\n  createRandomGunUser,\n  fetchPath,\n  RandomGunUser,\n  setPath\n} from \"../utils/Gun\";\n\ninterface EncryptedOrder {\n  response?: string;\n  type?: \"err\" | \"invoice\" | \"orderAck\";\n  ackNode?: string;\n}\n\nexport const ACTIONS = {\n  RESET_GUEST: \"guest/reset\",\n  CREATE_GUEST_USER: \"guest/user/create\",\n  TIP_USER: \"guest/user/tip\",\n  FOLLOW_USER: \"guest/user/follow\",\n  UNFOLLOW_USER: \"guest/user/unfollow\",\n  SET_PAYMENT_RESPONSE: \"guest/paymentRequest/response\",\n  SET_PAYMENT_METADATA: \"guest/paymentRequest/metadata\",\n  RESET_DEFAULT_FOLLOWS: \"guest/follows/reset\"\n};\n\nexport const resetGuestUser = () => ({\n  type: ACTIONS.RESET_GUEST\n});\n\nexport const resetPaymentResponse = () => ({\n  type: ACTIONS.SET_PAYMENT_RESPONSE\n});\n\nexport const setPaymentMetadata = data => ({\n  type: ACTIONS.SET_PAYMENT_METADATA,\n  data\n});\n\nexport const createGuestUser =\n  (): ThunkAction<void, State, unknown, Action<string>> =>\n  async (dispatch, getState) => {\n    const { guest } = getState();\n\n    if (!guest.user) {\n      const newUser = await createRandomGunUser();\n      const newUserEpub = await fetchPath({\n        query: `${newUser.pub}::epub`\n      });\n\n      dispatch({\n        type: ACTIONS.CREATE_GUEST_USER,\n        data: { ...newUser, epub: newUserEpub }\n      });\n    }\n  };\n\ninterface TipParams {\n  senderPair: RandomGunUser;\n  recipientPublicKey: string;\n  amount: number;\n  metadata: Record<string, any>;\n}\n\ninterface TipResponse {\n  paymentRequest: string;\n  ackNode: string;\n}\n\nexport const payUser =\n  ({\n    senderPair,\n    recipientPublicKey,\n    amount,\n    metadata\n  }: TipParams): ThunkAction<\n    Promise<TipResponse>,\n    State,\n    unknown,\n    Action<string>\n  > =>\n  async (dispatch, getState) => {\n    const me = await authUser(senderPair.alias, senderPair.pass);\n    const [recipientUserEPub, orderAddress] = await Promise.all([\n      fetchPath({\n        query: `${recipientPublicKey}::epub`\n      }),\n      fetchPath({\n        query: `${recipientPublicKey}::currentOrderAddress`\n      })\n    ]);\n\n    const secret = await SEA.secret(recipientUserEPub, me.sea);\n\n    const [encryptedAmount, encryptedMemo] = await Promise.all([\n      SEA.encrypt($$__SHOCKWALLET__MSG__ + amount.toString(), secret),\n      SEA.encrypt($$__SHOCKWALLET__MSG__ + \"Tipped user!\", secret)\n    ]);\n\n    const order = {\n      amount: $$_SHOCKWALLET__ENCRYPTED__ + encryptedAmount,\n      from: me.sea.pub,\n      memo: $$_SHOCKWALLET__ENCRYPTED__ + encryptedMemo,\n      timestamp: Date.now(),\n      // Tip type\n      ...metadata\n    };\n\n    const newOrder = await setPath({\n      query: `$gun::orderNodes>${orderAddress}`,\n      data: order\n    });\n\n    const newOrderId = newOrder._[\"#\"].split(\"/\").slice(-1)[0];\n\n    const encryptedOrderListener = await fetchPath({\n      query: `${recipientPublicKey}::orderToResponse>${newOrderId}::on`\n    });\n\n    console.log(\"encryptedOrderListener:\", encryptedOrderListener);\n\n    const encryptedOrder: EncryptedOrder = await fetchPath({\n      query: `${recipientPublicKey}::orderToResponse>${newOrderId}`\n    });\n\n    const decryptedResponse = await SEA.decrypt(\n      encryptedOrder.response.replace($$_SHOCKWALLET__ENCRYPTED__, \"\"),\n      secret\n    );\n\n    const decryptedOrder = {\n      response: decryptedResponse\n        ?.replace?.($$__SHOCKWALLET__MSG__, \"\")\n        .replace?.($$_SHOCKWALLET__ENCRYPTED__, \"\"),\n      type: encryptedOrder.type\n    };\n\n    console.log(\"[ORDER] Decrypted order:\", decryptedOrder);\n\n    if (decryptedOrder.type === \"err\") {\n      throw new FieldError({\n        field: \"order\",\n        message: \"An error has occurred while retrieving the order\",\n        data: decryptedOrder.response\n      });\n    }\n\n    dispatch({\n      type: ACTIONS.SET_PAYMENT_RESPONSE,\n      data: {\n        response: decryptedOrder.response\n      }\n    });\n\n    return {\n      paymentRequest: decryptedOrder.response,\n      ackNode: encryptedOrder.ackNode\n    };\n  };\n\nexport const followUser =\n  ({\n    publicKey = \"\"\n  }): ThunkAction<Promise<void>, State, unknown, Action<string>> =>\n  async (dispatch, getState) => {\n    const [followedUser] = getState().guest.follows.filter(\n      follow => follow.user === publicKey\n    );\n\n    if (followedUser) {\n      dispatch({\n        type: ACTIONS.UNFOLLOW_USER,\n        data: publicKey\n      });\n      return;\n    }\n\n    const follow: Common.Follow = {\n      user: publicKey,\n      status: \"ok\",\n      private: false\n    };\n\n    dispatch({\n      type: ACTIONS.FOLLOW_USER,\n      data: follow\n    });\n  };\n","import { createAction } from \"@reduxjs/toolkit\";\nimport * as Common from \"shock-common\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport * as Utils from \"../utils\";\nimport * as Schema from \"../schema\";\nimport { rifle } from \"../utils/WebSocket\";\n\n//#region receivedRequests\n\n/**\n * Dispatched when the handshake address changes.\n */\nexport const handshakeAddressUpdated = createAction<{\n  handshakeAddress: string;\n}>(\"handshakeAddressUpdated\");\n\n/**\n * Subscribe to the current handshake address stored in gun.\n * @returns A thunk that returns a subscription.\n */\nexport const subCurrentHandshakeAddress = () => (\n  dispatch: (action: any) => void\n) => {\n  Utils.logger.debug(`Subscribing to current handshake address.`);\n  try {\n    return rifle({\n      query: `$user::currentHandshakeAddress::on`,\n      onData: handshakeAddress => {\n        Utils.logger.debug(\n          `Received current handshake address: ${handshakeAddress}`\n        );\n\n        if (!Common.isPopulatedString(handshakeAddress)) {\n          Utils.logger.error(\n            `Current handshake address not an string -> `,\n            JSON.stringify(handshakeAddress)\n          );\n          return;\n        }\n\n        dispatch(\n          handshakeAddressUpdated({\n            handshakeAddress\n          })\n        );\n      }\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to current handshake address: ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to current handshake address:`,\n      e\n    );\n  }\n};\n\n/**\n * Dispatched when a handshake request is received inside the current handshake\n * node.\n */\nexport const receivedHandshakeRequest = createAction<{\n  receivedRequest: Schema.HandshakeReqNew;\n}>(\"chat/receivedHandshakeRequest\");\n\n/**\n * Dispatched when a handshake request is deleted after accepting  it.\n */\nexport const handshakeRequestDeleted = createAction<{\n  id: string;\n}>(\"chat/handshakeRequestDeleted\");\n\n/**\n * Subscribe to received requests inside the specified handshake node.\n * @returns A thunk that returns a subscription.\n */\nexport const subHandshakeNode = (handshakeAddress: string) => (\n  dispatch: (action: any) => void,\n  getState: () => { chat: { currentHandshakeAddress: string } }\n): Promise<Schema.Subscription> => {\n  Utils.logger.debug(`Subscribing to handshake node: ${handshakeAddress} .`);\n  try {\n    return rifle({\n      query: `$gun::handshakeNodes>${handshakeAddress}::map.on`,\n      epubField: \"epub\",\n      onData: (handshakeRequest: Schema.HandshakeReqNew, id: string) => {\n        Utils.logger.debug(\n          `Subscription to handshake node: ${handshakeAddress} -> `,\n          handshakeRequest\n        );\n        const {\n          chat: { currentHandshakeAddress }\n        } = getState();\n        Utils.logger.debug(`Current address: ${currentHandshakeAddress}`);\n        if (handshakeAddress !== currentHandshakeAddress) {\n          return;\n        }\n        if (Schema.isHandshakeReqNew(handshakeRequest)) {\n          dispatch(\n            receivedHandshakeRequest({\n              receivedRequest: handshakeRequest\n            })\n          );\n        } else if (handshakeRequest === null) {\n          dispatch(\n            handshakeRequestDeleted({\n              id\n            })\n          );\n        } else {\n          Utils.logger.debug(`Not a handshake request -> `, handshakeRequest);\n        }\n      }\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to handshake node with address: ${handshakeAddress} : ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to handshake node with address: ${handshakeAddress} : `,\n      e\n    );\n  }\n};\n\n//#endregion receivedRequests\n\n//#endregion sentRequests\n\nconst createOutgoingConversationFeed = (\n  outgoingConvoID: string,\n  publicKey: string,\n  epub: string,\n  incomingConvoID: string\n) => {\n  const msgID = uuidv4();\n\n  const newOutgoingConvo: {\n    [K in keyof Schema.Convo]: any;\n  } & {\n    messages: Record<\n      string,\n      {\n        [K in keyof Schema.ConvoMsg]: any;\n      }\n    >;\n  } = {\n    id: outgoingConvoID,\n\n    with: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: publicKey\n    },\n\n    withEpub: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: epub\n    },\n\n    counterpartConvoID: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: incomingConvoID\n    },\n\n    messages: {\n      [msgID]: {\n        id: msgID,\n        body: {\n          $$__ENCRYPT__FOR: publicKey,\n          $$__EPUB__FOR: epub,\n          value: Common.INITIAL_MSG\n        },\n        timestamp: Date.now(),\n        convoID: outgoingConvoID,\n        state: \"ok\",\n        err: \"\"\n      }\n    }\n  };\n\n  return newOutgoingConvo;\n};\n\nexport const acceptHandshakeRequest = (requestId: string) => async (\n  _: unknown,\n  getState: () => {\n    chat: { receivedRequests: Record<string, Schema.HandshakeReqNew> };\n  }\n) => {\n  const req: Schema.HandshakeReqNew = getState().chat.receivedRequests[\n    requestId\n  ];\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$user>convos>${req.receiverConvoID}`,\n    value: createOutgoingConversationFeed(\n      req.receiverConvoID,\n      req.from,\n      req.epub,\n      req.senderConvoID\n    )\n  });\n\n  Utils.Http.post(`/api/gun/put`, {\n    path: `$gun>handshakeNodes>${req.handshakeAddress}>${req.id}`,\n    value: null\n  });\n};\n\nexport const sendHandshakeRequest = (publicKey: string) => async (\n  _: unknown,\n  getState: () => { node: { publicKey: string } }\n) => {\n  Utils.logger.debug(\n    `Sending handshake request to ${publicKey.slice(0, 8)}...`\n  );\n  const epubP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(epub) {\n        Utils.logger.debug(\n          `Got epub for public Key ${publicKey.slice(0, 8)}... : ${epub}`\n        );\n        if (Common.isPopulatedString(epub)) {\n          subscription.then(sub => sub.off());\n          res(epub);\n        } else {\n          Utils.logger.debug(\n            `Could not fetch epub for public Key ${publicKey.slice(\n              0,\n              8\n            )}... : ${epub}`\n          );\n          subscription.then(sub => sub.off());\n          rej(new TypeError(`Could not fetch epub`));\n        }\n      },\n      query: `${publicKey}::epub::on`,\n      onError(e) {\n        Utils.logger.debug(\n          `Error when fetch epub for public Key ${publicKey.slice(\n            0,\n            8\n          )}... : ${epub}`\n        );\n        Utils.logger.error(e);\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const handshakeAddressP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(handshakeAddress) {\n        if (Common.isPopulatedString(handshakeAddress)) {\n          res(handshakeAddress);\n          subscription.then(sub => sub.off());\n        } else {\n          rej(new TypeError(`Could not fetch epub`));\n          subscription.then(sub => sub.off());\n        }\n      },\n      query: `${publicKey}::currentHandshakeAddress::on`,\n      onError(e) {\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const selfEpubP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(epub) {\n        if (Common.isPopulatedString(epub)) {\n          res(epub);\n          subscription.then(sub => sub.off());\n        } else {\n          rej(new TypeError(`Could not fetch self epub`));\n          subscription.then(sub => sub.off());\n        }\n      },\n      query: `$user::epub::on`,\n      onError(e) {\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const outgoingConvoID = uuidv4();\n  const incomingConvoID = uuidv4();\n  const requestID = uuidv4();\n  const [epub, handshakeAddress, selfEpub] = await Promise.all([\n    epubP,\n    handshakeAddressP,\n    selfEpubP\n  ]);\n\n  Utils.logger.debug(\n    `Got epub/handshakeaddress/selfEpub, sending request to public Key ${publicKey.slice(\n      0,\n      8\n    )}...`\n  );\n\n  const handshakeReqForGun: {\n    [K in keyof Schema.HandshakeReqNew]: any;\n  } = {\n    id: requestID,\n    from: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: getState().node.publicKey\n    },\n    epub: selfEpub,\n    timestamp: Date.now(),\n    receiverConvoID: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: incomingConvoID\n    },\n    senderConvoID: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: outgoingConvoID\n    },\n    handshakeAddress\n  };\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$gun>handshakeNodes>${handshakeAddress}>${requestID}`,\n    value: handshakeReqForGun\n  });\n\n  // after request was sent let's now create our outgoing feed\n\n  Utils.logger.debug(\n    `Sent request to public Key ${publicKey.slice(\n      0,\n      8\n    )}... will now create outgoing conversation feed`\n  );\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$user>convos>${outgoingConvoID}`,\n    value: createOutgoingConversationFeed(\n      outgoingConvoID,\n      publicKey,\n      epub,\n      incomingConvoID\n    )\n  });\n};\n\nexport const convoReceived = createAction<{ convo: Schema.Convo }>(\n  \"chat/convoReceived\"\n);\n\nexport const convoDeleted = createAction<{ id: string }>(\"chat/convoDeleted\");\n\nexport const subConvos = () => async (\n  dispatch: (action: any) => void,\n  getState: () => { node: { publicKey: string } }\n) => {\n  try {\n    return rifle({\n      query: `$user::convos::map.on`,\n      onData: (convo: Schema.Convo, id: string) => {\n        console.log(\"--------------\");\n        console.log(convo);\n        console.log(\"--------------\");\n        if (convo === null) {\n          dispatch(\n            convoDeleted({\n              id\n            })\n          );\n          return;\n        }\n        if (!Schema.isConvo(convo)) {\n          return;\n        }\n        // @ts-expect-error\n        delete convo._;\n        // @ts-expect-error\n        delete convo.messages;\n        dispatch(\n          convoReceived({\n            convo\n          })\n        );\n      },\n      publicKey: getState().node.publicKey\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to outgoing conversation feeds: ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to outgoing conversation feeds -> `,\n      e\n    );\n  }\n};\n\nexport const messageTransmissionRequested = createAction<{\n  convoID: string;\n  messageID: string;\n  message: string;\n}>(\"chat/messageTransmissionRequested\");\n\nexport const messageTransmissionSucceeded = createAction<{\n  convoID: string;\n  messageID: string;\n}>(\"chat/messageTransmissionSucceeded\");\n\nexport const messageTransmissionFailed = createAction<{\n  convoID: string;\n  errorMessage: string;\n  messageID: string;\n}>(\"chat/messageTransmissionFailed\");\n\nexport const sendMessage = (convoID: string, messageBody: string) => async (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n    };\n  }\n) => {\n  const messageID = uuidv4(); // does not throw, ever...?\n\n  try {\n    const convo = getState().chat.convos[convoID];\n\n    if (messageBody.trim().length === 0) {\n      return;\n    }\n\n    dispatch(\n      messageTransmissionRequested({\n        convoID,\n        messageID,\n        message: messageBody.trim()\n      })\n    );\n\n    const message: Schema.ConvoMsg = {\n      body: ({\n        $$__ENCRYPT__FOR: convo.with,\n        $$__EPUB__FOR: convo.withEpub,\n        value: messageBody\n      } as unknown) as string,\n      convoID,\n      id: messageID,\n      timestamp: Date.now(),\n      state: \"ok\",\n      err: \"\"\n    };\n\n    await Utils.Http.post(`/api/gun/put`, {\n      path: `$user>convos>${convoID}>messages>${messageID}`,\n      value: message\n    });\n\n    dispatch(\n      messageTransmissionSucceeded({\n        convoID,\n        messageID\n      })\n    );\n  } catch (e) {\n    Utils.logger.error(`Error inside sendMessage() -> `, e);\n    dispatch(\n      messageTransmissionFailed({\n        convoID,\n        errorMessage: e.message,\n        messageID\n      })\n    );\n  }\n};\n\nexport const messageTransmissionRetried = createAction<{\n  convoID: string;\n  messageID: string;\n}>(\"chat/messageTransmissionRetried\");\n\nexport const retryMessage = (convoID: string, messageID: string) => async (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n      convoToMessages: Record<\n        string,\n        Record<\n          string,\n          Schema.ConvoMsg & { err: string; state: \"ok\" | \"sending\" | \"error\" }\n        >\n      >;\n    };\n  }\n) => {\n  try {\n    const convo = getState().chat.convos[convoID];\n    const existingMessage = getState().chat.convoToMessages[convoID][messageID];\n\n    if (!existingMessage) {\n      throw new ReferenceError(\n        `Tried to retry sending a message that was not found in redux convoID: ${convoID} & messageID: ${messageID}`\n      );\n    }\n\n    dispatch(\n      messageTransmissionRetried({\n        convoID,\n        messageID\n      })\n    );\n\n    const message: Schema.ConvoMsg = {\n      body: ({\n        $$__ENCRYPT__FOR: convo.with,\n        $$__EPUB__FOR: convo.withEpub\n      } as unknown) as string,\n      convoID,\n      id: messageID,\n      timestamp: Date.now(),\n      state: \"ok\",\n      err: \"\"\n    };\n\n    await Utils.Http.post(`/api/gun/put`, {\n      path: `$user>convos>${convoID}>messages>${messageID}`,\n      value: message\n    });\n\n    dispatch(\n      messageTransmissionSucceeded({\n        convoID,\n        messageID\n      })\n    );\n  } catch (e) {\n    Utils.logger.error(`Error inside retryMessage() -> `, e);\n    dispatch(\n      messageTransmissionFailed({\n        convoID,\n        errorMessage: e.message,\n        messageID\n      })\n    );\n  }\n};\n\nexport const receivedConvoMessage = createAction<{\n  message: Schema.ConvoMsg;\n}>(\"chat/receivedConvoMessage\");\n\nexport const subConvoMessages = (convoID: string) => (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n    };\n  }\n) => {\n  try {\n    Utils.logger.debug(`Subscribing to messages for convo: ${convoID}`);\n\n    const convo = getState().chat.convos[convoID];\n\n    const outgoingSub = rifle({\n      query: `$user::convos>${convoID}>messages::map.on`,\n      onData: (message: unknown) => {\n        Utils.logger.debug(\n          `Outgoing subscription for convo: ${convoID} -> `,\n          message\n        );\n        if (Schema.isConvoMsg(message)) {\n          dispatch(\n            receivedConvoMessage({\n              message\n            })\n          );\n        } else if (message === null) {\n          // TODO: message deleted\n        } else {\n          Utils.logger.warn(\n            `Outgoing message in convo ${convo.id} does not correspond to schema -> `,\n            message\n          );\n        }\n      },\n      epubForDecryption: convo.withEpub,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside subConvoMessages() outgoing sub -> `,\n          e\n        );\n        alert(`Error inside outgoing messages subscription: ${e.message}`);\n      }\n    });\n\n    const incomingSub = rifle({\n      query: `${convo.with}::convos>${convo.counterpartConvoID}>messages::map.on`,\n      onData: (message: unknown) => {\n        Utils.logger.debug(\n          `Incoming subscription for convo: ${convoID} -> `,\n          message\n        );\n        if (Schema.isConvoMsg(message)) {\n          dispatch(\n            receivedConvoMessage({\n              message: {\n                ...message,\n                state: \"received\",\n                // Otherwise it will reference the other user's convo\n                convoID: convo.id\n              }\n            })\n          );\n        } else if (message === null) {\n          // TODO: message deleted\n        } else {\n          Utils.logger.warn(\n            `Incoming message in convo ${convo.id} does not correspond to schema -> `,\n            message\n          );\n        }\n      },\n      epubForDecryption: convo.withEpub,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside subConvoMessages() incoming sub -> `,\n          e\n        );\n        alert(`Error inside incoming messages subscription: ${e.message}`);\n      }\n    });\n\n    return () => {\n      Promise.all([outgoingSub, incomingSub]).then(subs =>\n        subs.forEach(sub => sub.off())\n      );\n    };\n  } catch (e) {\n    Utils.logger.error(`Error inside subConvoMessages() -> `, e);\n    alert(`Could not subscribe to conversation messages: ${e.message}`);\n  }\n};\n","// @ts-check\nimport { memo, useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport GitInfo from \"react-git-info/macro\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nimport \"./css/index.scoped.css\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <NavLink to=\"/Backups\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </NavLink>\n          <NavLink to=\"/walletSettings\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\" />\n            </div>\n            <p className=\"drawer-item-title unselectable\">Wallet Settings</p>\n          </NavLink>\n        </div>\n\n        <span className=\"drawer-commit-hash\">{GitInfo().commit.shortHash}</span>\n        <div className=\"drawer-bottom-section\">\n          <NavLink className=\"drawer-item\" to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>\n\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n          <NavLink to=\"/QRScanner\" onClick={close}>\n            <i\n              onClick={onClickScan}\n              className=\"icon-solid-scan\"\n              style={{ color: \"var(--main-blue)\" }}\n            ></i>\n          </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default memo(Drawer);\n","// @ts-check\nimport React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\nimport { toast } from \"react-toastify\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\n\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as Store from \"./store\";\nimport \"./styles/App.global.css\";\nimport Stream from \"./common/Post/components/Stream\";\nimport { dragElement } from \"./utils/ui\";\nimport * as Utils from \"./utils\";\nimport { Http } from \"./utils\";\nimport {\n  addStream,\n  removeStream,\n  setSeedInfo,\n  setSeedProviderPub\n} from \"./actions/ContentActions\";\nimport { closeDialog } from \"./actions/AppActions\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport { createGuestUser } from \"./actions/GuestActions\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst WalletSettingsPage = React.lazy(() => import(\"./pages/WalletSettings\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/PublishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst CreatePostPage = React.lazy(() => import(\"./pages/Profile/CreatePost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/GoLive/GoLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\nconst BackupsPage = React.lazy(() => import(\"./pages/Backups\"));\nconst PublicContentItemPage = React.lazy(() =>\n  import(\"./pages/PublicContentItem\")\n);\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst GuestRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const allowedComponent = authenticated ? OverviewPage : component;\n\n  return <Route {...options} component={allowedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const streamUrl = Store.useSelector(({ content }) => content.streamUrl);\n  const streamStatusUrl = Store.useSelector(\n    ({ content }) => content.streamStatusUrl\n  );\n  const streamContentId = Store.useSelector(\n    ({ content }) => content.streamContentId\n  );\n  const streamPostId = Store.useSelector(({ content }) => content.streamPostId);\n  const streamUserToken = Store.useSelector(\n    ({ content }) => content.streamUserToken\n  );\n  const streamLiveToken = Store.useSelector(\n    ({ content }) => content.streamLiveToken\n  );\n  const dialogText = Store.useSelector(({ app }) => app.dialogText);\n  const dialogHasCallback = Store.useSelector(\n    ({ app }) => app.dialogHasCallback\n  );\n  const [, setUpdate] = useState(0);\n  const [isLive, setIsLive] = useState(false);\n  const [showFloatingPlayer, setShowFloatingPlayer] = useState(false);\n  // effect to update live status\n  useEffect(() => {\n    if (!streamStatusUrl) {\n      return;\n    }\n    let timeout;\n    const interval = setInterval(async () => {\n      try {\n        const res = await Http.get(streamStatusUrl);\n        if (!res.data.isLive) {\n          return;\n        }\n        setIsLive(true);\n        clearInterval(interval);\n        timeout = setTimeout(() => {\n          console.info(\"upp\");\n          setUpdate(Date.now());\n        }, 5000);\n      } catch (e) {}\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, [streamStatusUrl, setIsLive, setUpdate]);\n  const StreamRender = useMemo(() => {\n    return (\n      <Stream\n        hideRibbon={true}\n        item={{ magnetURI: streamUrl, liveStatus: \"live\" }}\n        tipCounter={undefined}\n        tipValue={undefined}\n        width={undefined}\n      />\n    );\n  }, [streamUrl]);\n\n  const stopStream = useCallback(() => {\n    Http.post(\"/api/stopStream\", {\n      postId: streamPostId,\n      contentId: streamContentId,\n      endUrl: `https://stream.shock.network/api/stream/end`,\n      urlForMagnet: `https://stream.shock.network/api/stream/torrent/${streamUserToken}`,\n      obsToken: streamLiveToken\n    });\n    removeStream()(dispatch);\n    console.info(streamUserToken);\n    history.push(\"/profile\");\n  }, [\n    dispatch,\n    history,\n    streamContentId,\n    streamLiveToken,\n    streamPostId,\n    streamUserToken\n  ]);\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated && publicKey) {\n      // Get current user's profile on login\n      dispatch(subscribeUserProfile(publicKey));\n\n      return () => {\n        dispatch(unsubscribeUserProfile(publicKey));\n      };\n    }\n  }, [authenticated, dispatch, publicKey]);\n\n  useEffect(() => {\n    const tmp = !!(authenticated && isLive && streamUrl);\n    if (tmp !== showFloatingPlayer) {\n      setShowFloatingPlayer(tmp);\n    }\n  }, [\n    authenticated,\n    isLive,\n    streamUrl,\n    showFloatingPlayer,\n    setShowFloatingPlayer\n  ]);\n  useEffect(() => {\n    if (showFloatingPlayer) {\n      dragElement(\"floatyVideo\");\n    }\n  }, [showFloatingPlayer]);\n\n  //load info about content provider stored into gun\n  const loadContentInfo = useCallback(async () => {\n    try {\n      if (!publicKey) {\n        return;\n      }\n      const { data: serviceProvider } = await Http.get(\n        `/api/gun/user/once/preferencesSeedServiceProvider`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        serviceProvider &&\n        typeof serviceProvider.data === \"string\" &&\n        serviceProvider.data !== \"\"\n      ) {\n        setSeedProviderPub(serviceProvider.data, true)(dispatch);\n      }\n    } catch (err) {\n      const msg = Utils.extractErrorMessage(err);\n\n      if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n        Utils.logger.warn(\n          `Could not fetch seed service provider due to a timeout error, this can be expected if the data hasn't been populated yet.`\n        );\n      } else {\n        toast.dark(\n          `There was an error fetching your seed service provider: ${msg}`\n        );\n        Utils.logger.error(err);\n      }\n    }\n    try {\n      if (!publicKey) {\n        return;\n      }\n      const { data: seedData } = await Http.get(\n        `/api/gun/user/once/preferencesSeedServiceData`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        seedData &&\n        typeof seedData.data === \"string\" &&\n        seedData.data !== \"\"\n      ) {\n        const JObject = JSON.parse(seedData.data);\n        if (JObject && JObject.seedUrl && JObject.seedToken) {\n          setSeedInfo(JObject.seedUrl, JObject.seedToken, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      const msg = Utils.extractErrorMessage(err);\n\n      if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n        Utils.logger.warn(\n          `Could not fetch seed service data due to a timeout error, this can be expected if the data hasn't been populated yet.`\n        );\n      } else {\n        toast.dark(\n          `There was an error fetching your seed service data: ${msg}`\n        );\n        Utils.logger.error(err);\n      }\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated || !publicKey) {\n      return;\n    }\n    loadContentInfo();\n  }, [authenticated, loadContentInfo, publicKey]);\n\n  //load info about current stream stored into gun\n  const loadStreamInfo = useCallback(async () => {\n    try {\n      if (!publicKey) {\n        return;\n      }\n      const { data: streamData } = await Http.get(\n        `/api/gun/user/once/currentStreamInfo`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        streamData &&\n        typeof streamData.data === \"string\" &&\n        streamData.data !== \"\"\n      ) {\n        if (streamData.data === \"NO DATA\") {\n          removeStream(true, true)(dispatch);\n          return;\n        }\n        const JObject = JSON.parse(streamData.data);\n\n        if (JObject) {\n          addStream(JObject, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      const msg = Utils.extractErrorMessage(err);\n\n      if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n        Utils.logger.warn(\n          `Could not fetch current stream info due to a timeout error, this can be expected if the data hasn't been populated yet.`\n        );\n      } else {\n        toast.dark(\n          `There was an error fetching your current stream info: ${msg}`\n        );\n        Utils.logger.error(err);\n      }\n    }\n  }, [dispatch, publicKey]);\n\n  useEffect(() => {\n    if (!authenticated) {\n      dispatch(createGuestUser());\n    }\n  }, [authenticated, dispatch]);\n\n  useEffect(() => {\n    if (!authenticated || !publicKey) {\n      return;\n    }\n    loadStreamInfo();\n  }, [authenticated, loadStreamInfo, publicKey]);\n\n  const DialogClose = useCallback(() => {\n    closeDialog(false)(dispatch);\n  }, [dispatch]);\n\n  const ConfirmDialog = useCallback(() => {\n    closeDialog(dialogHasCallback)(dispatch);\n  }, [dialogHasCallback, dispatch]);\n\n  return (\n    <FullHeight className=\"root-container\">\n      {showFloatingPlayer && (\n        <div id=\"floatyVideo\" className=\"floaty-container\">\n          <i id=\"floatyVideoHeader\" className=\"fas fa-grip-vertical\"></i>\n          {StreamRender}\n          <button onClick={stopStream}>CLOSE STREAM</button>\n        </div>\n      )}\n      {dialogText && (\n        <div className=\"fixed-container\">\n          <div className=\"global-dialog\">\n            <p>{dialogText}</p>\n            <div className=\"d-flex flex-justify-center w-80\">\n              {dialogHasCallback && (\n                <button\n                  className=\"shock-form-button m-t-1 w-50\"\n                  onClick={DialogClose}\n                >\n                  Cancel\n                </button>\n              )}\n              {dialogHasCallback && <div style={{ width: \"1rem\" }}></div>}\n              <button\n                className=\"shock-form-button-confirm m-t-1 w-50\"\n                onClick={ConfirmDialog}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <GuestRoute path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute\n            path=\"/walletSettings\"\n            exact\n            component={WalletSettingsPage}\n          />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:convoOrReqID\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={CreatePostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute path=\"/Backups\" exact component={BackupsPage} />\n          <PrivateRoute\n            path=\"/item/:publicKey/:id\"\n            exact\n            component={PublicContentItemPage}\n          />\n          <Route path=\"/feed\" exact component={FeedPage} />\n          <Route\n            path=\"/otherUser/:publicKey/:selectedView?\"\n            exact\n            component={OtherUserPage}\n          />\n\n          {authenticated ? (\n            <Redirect to=\"/overview\" />\n          ) : (\n            <Redirect to=\"/feed\" />\n          )}\n        </Switch>\n      </Suspense>\n\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover={false}\n        closeButton={false}\n      />\n    </FullHeight>\n  );\n};\n\nexport default App;\n","export function dragElement(elementId) {\n  const elmnt = document.getElementById(elementId)\n  if(!elmnt){\n    console.log(\"draggable set fail\")\n    return\n      \n  }\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  document.getElementById(elmnt.id + \"Header\").onpointerdown = dragMouseDown;\n\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onpointerup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onpointermove = elementDrag;\n  }\n\n  function elementDrag(e) {\n      console.log(\"dragging yooo\")\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n  }\n\n  function closeDragElement() {\n      console.log(\"not anymore!\")\n    // stop moving when mouse button is released:\n    document.onpointerup = null;\n    document.onpointermove = null;\n  }\n  }\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./wdyr\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./styles/index.global.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  data?: any;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n  data: any;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.data = error?.data;\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangeSource = Http.CancelToken.source();\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    if (exchangeSource) {\n      exchangeSource.cancel(\n        \"Key Pair exchange operation is preceded by another one\"\n      );\n      exchangeSource = null;\n    }\n\n    exchangeSource = Http.CancelToken.source();\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(\n      `/api/encryption/exchange`,\n      {\n        publicKey: keyPair.publicKeyBase64,\n        deviceId\n      },\n      {\n        cancelToken: exchangeSource.token\n      }\n    );\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      deviceId,\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n","let dialogCallback = null\nexport const addDialogCallback = cb => {\n    dialogCallback = cb\n}\n\nexport const callDialogCallBack = async () => {\n    if(!dialogCallback){\n        return Promise.resolve()\n    }\n    return dialogCallback()\n}","import {\n  addDialogCallback,\n  callDialogCallBack\n} from '../utils/dialogCallback'\nexport const ACTIONS = {\n  OPEN_DIALOG: \"app/openDialog\",\n  CLOSE_DIALOG:\"app/closeDialog\"\n};\nexport const openDialog = ({text,cb = null}) => dispatch => {\n  addDialogCallback(cb)\n  dispatch({\n    type: ACTIONS.OPEN_DIALOG,\n    data: {text,hasCallback: !!cb}\n  });\n};\n\nexport const closeDialog = executeCb => dispatch => {\n  if(executeCb){\n    callDialogCallBack()\n  }\n  dispatch({\n    type: ACTIONS.CLOSE_DIALOG\n  });\n}","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Utils from \"../utils\";\nimport {\n  rifle,\n  rifleCleanup,\n  unsubscribeRifleByQuery\n} from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\"\n};\n\nconst subscribedProfiles = new Set();\n\nexport const updatedUserProfile = createAction<{\n  profile: Partial<Common.User & {offerSeedService:string}>;\n  publicKey: string;\n}>(\"userProfiles/profiles/update\");\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => (\n  dispatch: (action: object) => void,\n  getState: () => {\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  if (subscribedProfiles.has(publicKey)) {\n    return () => {};\n  }\n\n  console.info(\"subbing user...\" + publicKey);\n  subscribedProfiles.add(publicKey);\n\n  const subscription = rifle({\n    query: `${publicKey}::Profile::map.on`,\n    reconnect: true,\n    onData: (data: any, key: string) => {\n      if (key === \"bio\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              bio: data\n            },\n            publicKey\n          })\n        );\n      }\n      if (key === \"displayName\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              displayName: data\n            },\n            publicKey\n          })\n        );\n      }\n      if (key === \"offerSeedService\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              offerSeedService: data\n            },\n            publicKey\n          })\n        );\n      }\n    }\n  });\n\n  const binarySub = rifle({\n    query: `${publicKey}::profileBinary::map.on`,\n    reconnect: true,\n    onData: (data, key: string) => {\n      if (key === \"avatar\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              avatar: data\n            },\n            publicKey\n          })\n        );\n      } else if (key === \"header\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              header: data\n            },\n            publicKey\n          })\n        );\n      } else {\n        Utils.logger.error(\n          `Unknown key: ${key} for user binary profile data gun RPC socket`\n        );\n      }\n    }\n  });\n\n  return () => {\n    rifleCleanup(subscription, binarySub)();\n    subscribedProfiles.delete(publicKey);\n  };\n};\n\nexport const unsubscribeUserProfile = (publicKey: string) => async () => {\n  unsubscribeRifleByQuery(`${publicKey}::Profile::on`);\n  unsubscribeRifleByQuery(`${publicKey}::profileBinary::map.on`);\n};\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\nimport * as Common from \"shock-common\";\n\nexport function useForceUpdate() {\n  const [tick, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return { forceUpdate: update, tick };\n}\n\n/**\n * Handle the ugly \"in 0 seconds\" cases (returning \"Just now\"), returns an empty\n * string if the timestamp is -1.\n */\nexport const formatTimestamp = (timestamp: number): string => {\n  if (timestamp === -1) {\n    return \"\";\n  }\n  const relativeTime = DateTime.fromMillis(\n    Common.normalizeTimestampToMs(timestamp)\n  ).toRelative();\n  return relativeTime === \"in 0 seconds\" ? \"Just now\" : relativeTime;\n};\n","import * as Common from \"shock-common\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Action } from \"redux\";\nimport { useDispatch as originalUseDispatch } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { useBetween } from \"use-between\";\nimport { memoize } from \"lodash\";\n\nimport { State } from \"../reducers\";\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nimport { rifle } from \"./WebSocket\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\nexport * from \"./WebSocket\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args),\n  debug: (...args: any[]) => console.debug(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not a url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n\nexport const EMPTY_ARR = [] as readonly Readonly<any>[];\n\nexport const EMPTY_OBJ = {} as const;\n\nexport const useBooleanState = (initialState: boolean) => {\n  const [state, setState] = useState<boolean>(initialState);\n  const toggle = useCallback(() => {\n    setState(_state => !_state);\n  }, []);\n\n  return [state, toggle] as const;\n};\n\nexport const parseJson = (o: string) => JSON.parse(o) as unknown;\n\n/**\n * Returns null if the value provided is not a valid JSON string.\n * @param o\n */\nexport const safeParseJson = (o: unknown): unknown => {\n  if (!Common.isPopulatedString(o)) {\n    return null;\n  }\n  try {\n    return JSON.parse(o);\n  } catch (e) {\n    logger.warn(`Error inside safeParseJson() -> `, e);\n    logger.log(`Error inside safeParseJson(), string provided -> `, o);\n    return null;\n  }\n};\n\nexport const useDispatch = (): ThunkDispatch<State, undefined, Action> => {\n  return originalUseDispatch() as ThunkDispatch<State, undefined, Action>;\n};\n\nexport const useLastSeen = (publicKey: string) => {\n  const [lastSeenApp, setLastSeenApp] = useState(0);\n  const [lastSeenNode, setLastSeenNode] = useState(0);\n\n  useEffect(() => {\n    const appSub = rifle({\n      query: `${publicKey}::Profile>lastSeenApp::on`,\n      onData(lastSeen) {\n        if (typeof lastSeen === \"number\") {\n          setLastSeenApp(lastSeen);\n        } else {\n          logger.error(`useLastSeen() -> got non-number lastSeenApp`);\n        }\n      },\n      onError(e) {\n        logger.error(`useLastSeen() -> lastSeenApp rifle -> `, e);\n      }\n    });\n\n    const nodeSub = rifle({\n      query: `${publicKey}::Profile>lastSeenNode::on`,\n      onData(lastSeen) {\n        if (typeof lastSeen === \"number\") {\n          setLastSeenNode(lastSeen);\n        } else {\n          logger.error(`useLastSeen() -> got non-number lastSeenNode`);\n        }\n      },\n      onError(e) {\n        logger.error(`useLastSeen() -> lastSeenNode rifle -> `, e);\n      }\n    });\n\n    return () => {\n      appSub.then(sub => {\n        sub.off();\n      });\n      nodeSub.then(sub => {\n        sub.off();\n      });\n    };\n  }, [publicKey]);\n\n  return { lastSeenApp, lastSeenNode };\n};\n\nconst useLastSeenMemo = memoize((publicKey: string) => {\n  return () => useLastSeen(publicKey);\n});\n\nexport const useLastSeenShared = (publicKey: string) =>\n  useBetween(useLastSeenMemo(publicKey));\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n\nexport const extractErrorMessage = (error: any): string => {\n  return (\n    error?.response?.data?.errorMessage || error.message || \"Unknown error\"\n  );\n};\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n"],"sourceRoot":""}