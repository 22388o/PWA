{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/BottomBar/index.js","common/AddBtn/index.js","common/Modal/components/ModalSubmit/index.js","common/Line/index.tsx","common/ProfileDivider/index.tsx","common/ProfileDivider/css/ProfileDivider.module.css","images/clipboard.svg","images/qrcode.svg","pages/Feed/components/SendTipModal/index.js","pages/Feed/components/UnlockModal/index.js","pages/OtherUser/css/OtherUser.module.css","pages/OtherUser/components/FollowBtn/FollowBtn.module.css","pages/Feed/components/BuyServiceModal/index.js","pages/OtherUser/components/FollowBtn/FollowBtn.tsx","pages/OtherUser/index.tsx"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","disabled","group","fas","BottomBar","to","activeClassName","AddBtn","icon","iconURL","undefined","nestedMode","large","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","ModalSubmit","text","Line","color","length","width","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","ProfileDivider","selected","gStyles","styles","container","unselected","module","exports","SendTipModal","tipData","toggleOpen","dispatch","useDispatch","error","setError","loading","setLoading","amount","setAmount","tipSuccess","setTipSuccess","onInputChange","e","target","submitTip","a","preventDefault","sendTipPost","publicKey","postId","postID","console","errorMessage","message","responseError","response","data","useEffect","onSubmit","overlay","UnlockModal","unlockData","unlockSuccess","setUnlockSuccess","submitUnlock","unlockContent","BuyServiceModal","service","buySuccess","setBuySuccess","copied","setCopied","submitBuy","servicePrice","owner","serviceID","serviceType","Number","buyService","revealRes","log","addAvailableToken","seedUrl","tokens","addStreamToken","copyRes","navigator","clipboard","writeText","JSON","stringify","Loader","FollowBtn","isFollowed","Store","find","f","user","changingStatus","setChangingStatus","handleFollow","res","status","Utils","delete","put","Error","alert","c","Post","React","lazy","SharedPost","OtherUserPage","myGunPub","node","profileModalOpen","setProfileModalOpen","userProfiles","useSelector","userPublicKey","useParams","userPosts","setUserPosts","userSharedPosts","setUserSharedPosts","finalPosts","setFinalPosts","userServices","setUserServices","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","buyServiceModalData","setBuyServiceModalOpen","selectedView","setSelectedView","isMe","subscribeFollows","unsubscribeFollows","subscribeUserPosts","query","subscription","rifle","reconnect","onData","posts","postEntries","Object","entries","newPosts","filter","key","GUN_PROPS","includes","map","proms","id","Http","get","post","tipSet","tipsSet","values","lenSet","tot","reduce","acc","val","authorId","tipCounter","tipValue","Promise","allSettled","postsAlmostReady","postsReady","maybeOk","rifleCleanup","subscribeSharedPosts","shared","originalAuthor","originalPost","subscribeUserProfile","final","sort","b","date","unSubProfiles","pub","unsubscribeUserProfile","forEach","unSub","then","toggleTipModal","toggleBuyServiceModal","buyData","toggleUnlockModal","copyClipboard","handleViewChange","header","ShockAvatar","greyBorder","displayName","bio","index","profile","streamContentId","streamItem","item","contentItems","liveStatus","playbackMagnet","magnetURI","originalPublicKey","originalProfile","fallback","originalPostProfile","sharedTimestamp","shareDate","sharerProfile","postPublicKey","openTipModal","openUnlockModal","openDeleteModal","timestamp","avatar","username","processDisplayName","serviceTitle","serviceDescription","serviceCondition","Pad","amt","padding","bgColor","fgColor","size","ClipboardIcon","QRCodeIcon"],"mappings":"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","file":"static/js/15.8d7f9da8.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      <div className=\"head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"open\": modalOpen })}>\n      <div className=\"backdrop\" onClick={closeModal} />\n      <div className=\"container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label,\n  name,\n  onChange,\n  inputAction,\n  actionIcon,\n  value,\n  inputMode = \"text\",\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst ModalSubmit = ({ text = \"Submit\", onClick }) => {\n  return (\n    <div className=\"submit-btn\" onClick={onClick}>\n      <p className=\"submit-btn-text\">{text}</p>\n    </div>\n  );\n};\n\nexport default ModalSubmit;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","import classNames from \"classnames\";\n\nimport * as gStyles from \"../../styles\";\nimport Line from \"../Line\";\n\nimport styles from \"./css/ProfileDivider.module.css\";\n\nexport interface ProfileDividerProps {\n  onChange(newlySelected: \"posts\" | \"services\"): void;\n  selected: \"posts\" | \"services\";\n}\n\nconst ProfileDivider = ({ onChange, selected }: ProfileDividerProps) => {\n  return (\n    <div\n      className={classNames(\n        gStyles.width100,\n        gStyles.rowCentered,\n        gStyles.spaceAround,\n        gStyles.padding12,\n        styles.container\n      )}\n    >\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"posts\" && styles.selected,\n          selected === \"services\" && styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"posts\");\n        }}\n      >\n        Posts\n      </span>\n\n      <div className={gStyles.absolute /* centers it, keeps texts in place */}>\n        <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n      </div>\n\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"services\" && styles.selected,\n          selected === \"posts\" && styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"services\");\n        }}\n      >\n        Services\n      </span>\n    </div>\n  );\n};\n\nexport default ProfileDivider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileDivider_container__3ob9k\",\"selected\":\"ProfileDivider_selected__3U98y\",\"unselected\":\"ProfileDivider_unselected__1Z_qd\",\"divider\":\"ProfileDivider_divider__1IzYV\"};","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { sendTipPost } from \"../../../../actions/FeedActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst SendTipModal = ({ tipData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(0);\n  const [tipSuccess, setTipSuccess] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n  }, []);\n\n  const submitTip = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await dispatch(\n          sendTipPost({\n            amount,\n            publicKey: tipData.publicKey,\n            postId: tipData.postID\n          })\n        );\n        setTipSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (tipData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, amount, tipData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!tipData) {\n      setLoading(false);\n      setError(null);\n      setTipSuccess(false);\n    }\n  }, [tipData]);\n\n  return (\n    <Modal toggleModal={toggleOpen} modalOpen={!!tipData} modalTitle=\"Send Tip\">\n      {tipSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post tipped successfully!</p>\n          <p className=\"tip-success-desc\"></p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitTip}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            Please specify the amount of sats you'd like to tip this user with\n            below.\n          </p>\n          <InputGroup\n            name=\"amount\"\n            onChange={onInputChange}\n            value={amount}\n            inputMode=\"decimal\"\n            small\n          />\n          <ModalSubmit text=\"SEND TIP\" onClick={submitTip} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SendTipModal;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { unlockContent } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst UnlockModal = ({ unlockData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [unlockSuccess, setUnlockSuccess] = useState(false);\n\n  const submitUnlock = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await unlockContent(\n          100,\n          unlockData.publicKey,\n          unlockData.postID\n        )(dispatch);\n        setUnlockSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (unlockData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, unlockData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!unlockData) {\n      setLoading(false);\n      setError(null);\n      setUnlockSuccess(false);\n    }\n  }, [unlockData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!unlockData}\n      modalTitle=\"Unlock content\"\n    >\n      {unlockSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Content unlocked successfully!</p>\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitUnlock}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            100 sats will be sent to the owner of the post to unlock the content\n          </p>\n          <ModalSubmit text=\"UNLOCK\" onClick={submitUnlock} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default UnlockModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"OtherUser_profile-page__OhC-_\",\"profile-container\":\"OtherUser_profile-container__2oq7s\",\"profile-cover\":\"OtherUser_profile-cover__3Fq6P\",\"profile-info-container\":\"OtherUser_profile-info-container__3qnqN\",\"profile-avatar\":\"OtherUser_profile-avatar__S6INq\",\"profile-name\":\"OtherUser_profile-name__3chmC\",\"profile-desc\":\"OtherUser_profile-desc__f9Dsj\",\"config-btn\":\"OtherUser_config-btn__t33_B\",\"config-btn-icon\":\"OtherUser_config-btn-icon__1p_6O\",\"config-btn-text\":\"OtherUser_config-btn-text__1Wg_T\",\"profile-choice-container\":\"OtherUser_profile-choice-container__3-xgF\",\"profile-choice-icon\":\"OtherUser_profile-choice-icon__3iOE1\",\"profile-choice-text\":\"OtherUser_profile-choice-text__deYLl\",\"profile-qrcode\":\"OtherUser_profile-qrcode__2Ok54\",\"profile-qrcode-desc\":\"OtherUser_profile-qrcode-desc__3cp0P\",\"profile-clipboard-container\":\"OtherUser_profile-clipboard-container__1P_p8\",\"profile-clipboard-icon\":\"OtherUser_profile-clipboard-icon__1nW2U\",\"profile-clipboard-text\":\"OtherUser_profile-clipboard-text__2g4AC\",\"publish-content-form\":\"OtherUser_publish-content-form__1YdVa\",\"publish-content-title\":\"OtherUser_publish-content-title__3EsYE\",\"publish-content-icon\":\"OtherUser_publish-content-icon__291ch\",\"m-1\":\"OtherUser_m-1__1dpvP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FollowBtn_container__2c7Cj\",\"icon\":\"FollowBtn_icon__3orep\",\"text\":\"FollowBtn_text__1o7CS\"};","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { buyService } from \"../../../../actions/OrdersActions\";\nimport {\n  addAvailableToken,\n  addStreamToken\n} from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst BuyServiceModal = ({ service, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [buySuccess, setBuySuccess] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const submitBuy = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        const { servicePrice, owner, serviceID, serviceType } = service;\n        if (!owner || !serviceID || typeof Number(servicePrice) !== \"number\") {\n          console.error(\"invalid service provided\");\n          console.error(service);\n          return;\n        }\n        setLoading(true);\n        const revealRes = await buyService(\n          owner,\n          serviceID,\n          servicePrice\n        )(dispatch);\n        console.log(revealRes);\n        setBuySuccess(revealRes);\n        if (serviceType === \"torrentSeed\") {\n          addAvailableToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n        if (serviceType === \"streamSeed\") {\n          addStreamToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n      } catch (err) {\n        console.error(err);\n        if (service) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, service]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!service) {\n      setLoading(false);\n      setError(null);\n      setBuySuccess(null);\n    }\n  }, [buySuccess]);\n  const copyRes = useCallback(() => {\n    navigator.clipboard.writeText(JSON.stringify(buySuccess));\n    setCopied(true);\n  }, [buySuccess, setCopied]);\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!service}\n      modalTitle=\"Buy Service\"\n    >\n      {buySuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">\n            You successfully bought this service!\n          </p>\n          <p>{JSON.stringify(buySuccess)}</p>\n          <button onClick={copyRes}>COPY TO CLIPBOARD</button>\n          {copied && <p>Copied!</p>}\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitBuy}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            {service && service.servicePrice} sats will be sent to the owner of\n            the service provider\n          </p>\n          <ModalSubmit text=\"BUY\" onClick={submitBuy} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default BuyServiceModal;\n","import { useCallback, useState } from \"react\";\nimport c from \"classnames\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\n\nimport styles from \"./FollowBtn.module.css\";\n\nexport interface FollowBtnProps {\n  publicKey: string;\n}\n\nconst FollowBtn = ({ publicKey }: FollowBtnProps) => {\n  const isFollowed = !!Store.useSelector(Store.selectFollows).find(\n    f => f.user === publicKey\n  );\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleFollow = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n      setChangingStatus(true);\n\n      let res = { status: -1, data: { errorMessage: \"\" } };\n\n      if (isFollowed) {\n        res = await Utils.Http.delete(`/api/gun/follows/${publicKey}`);\n      } else {\n        res = await Utils.Http.put(`/api/gun/follows/${publicKey}`, {});\n      }\n\n      if (res.status !== 200) {\n        throw new Error(res.data.errorMessage);\n      }\n    } catch (e) {\n      if (isFollowed) {\n        alert(`Could not unfollow: ${e.message}`);\n      } else {\n        alert(`Could not follow: ${e.message}`);\n      }\n    } finally {\n      setChangingStatus(false);\n    }\n  }, [changingStatus, setChangingStatus, isFollowed, publicKey]);\n\n  return (\n    <div className={styles.container} onClick={handleFollow}>\n      <i className={c(styles.icon, \"fas\", \"fa-user-plus\")} />\n\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isFollowed ? \"Unfollow\" : \"Follow\"}\n      </p>\n    </div>\n  );\n};\n\nexport default FollowBtn;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport QRCode from \"qrcode.react\";\nimport { useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { GUN_PROPS } from \"../../utils/Gun\";\nimport Http from \"../../utils/Http\";\nimport { processDisplayName } from \"../../utils/String\";\n\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"../../actions/UserProfilesActions\";\nimport { rifle, rifleCleanup } from \"../../utils/WebSocket\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport SendTipModal from \"../Feed/components/SendTipModal\";\nimport UnlockModal from \"../Feed/components/UnlockModal\";\nimport BuyServiceModal from \"../Feed/components/BuyServiceModal\";\nimport * as Store from \"../../store\";\n\nimport styles from \"./css/OtherUser.module.css\";\nimport FollowBtn from \"./components/FollowBtn\";\nimport {\n  subscribeFollows,\n  unsubscribeFollows\n} from \"../../actions/FeedActions\";\nimport node from \"../../reducers/NodeReducer\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst AVATAR_SIZE = 122;\n\nconst OtherUserPage = () => {\n  //#region controller\n  const dispatch = useDispatch();\n  const myGunPub = Store.useSelector(({node}) => node.publicKey);\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n  //@ts-expect-error\n  const userProfiles = useSelector(({ userProfiles }) => userProfiles);\n  const { publicKey: userPublicKey } = useParams<{ publicKey: string }>();\n  const user = Store.useSelector(Store.selectUser(userPublicKey));\n  const [userPosts, setUserPosts] = useState([]);\n  const [userSharedPosts, setUserSharedPosts] = useState([]);\n  const [finalPosts, setFinalPosts] = useState([]);\n  const [userServices, setUserServices] = useState({});\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [buyServiceModalData, setBuyServiceModalOpen] = useState(null);\n  const [selectedView, setSelectedView] = useState<\"posts\" | \"services\">(\n    \"posts\"\n  );\n  const isMe = myGunPub === user.publicKey\n  // Effect to sub follows\n  useEffect(() => {\n    subscribeFollows()(dispatch);\n    return () => {\n      unsubscribeFollows();\n    };\n  }, []);\n  const subscribeUserPosts = useCallback(() => {\n    const query = `${userPublicKey}::posts::on`;\n    const subscription = rifle({\n      query,\n      reconnect: false,\n      onData: async posts => {\n        const postEntries = Object.entries(posts);\n        const newPosts = postEntries\n          .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n          .map(([key]) => key);\n\n        const proms = newPosts.map(async id => {\n          const { data: post } = await Http.get(\n            `/api/gun/otheruser/${userPublicKey}/load/posts>${id}`\n          );\n          const tipSet = post.data.tipsSet\n            ? Object.values(post.data.tipsSet)\n            : [];\n          const lenSet = tipSet.length;\n          const tot =\n            lenSet > 0\n              ? tipSet.reduce((acc, val) => Number(val) + Number(acc))\n              : 0;\n          return {\n            ...post.data,\n            id,\n            authorId: userPublicKey,\n            tipCounter: lenSet,\n            tipValue: tot\n          };\n        });\n        const postsAlmostReady = await Promise.allSettled(proms);\n        const postsReady = postsAlmostReady\n          .filter(maybeOk => maybeOk.status === \"fulfilled\")\n          //@ts-expect-error\n          .map(res => res.value);\n        setUserPosts(postsReady);\n      }\n    });\n\n    return rifleCleanup(subscription);\n  }, [userPublicKey]);\n\n  const subscribeSharedPosts = useCallback(() => {\n    const query = `${userPublicKey}::sharedPosts::on`;\n    const subscription = rifle({\n      query,\n      reconnect: false,\n      onData: async posts => {\n        const postEntries = Object.entries(posts);\n        const newPosts = postEntries\n          .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n          .map(([key]) => key);\n\n        const proms = newPosts.map(async id => {\n          const { data: shared } = await Http.get(\n            `/api/gun/otheruser/${userPublicKey}/load/sharedPosts>${id}`\n          );\n          if (!shared.data || !shared.data.originalAuthor) {\n            throw new Error(\n              \"invalid shared post provided for user \" + userPublicKey\n            );\n          }\n          const { data: post } = await Http.get(\n            `/api/gun/otheruser/${shared.data.originalAuthor}/load/posts>${id}`\n          );\n          const tipSet = post.data.tipsSet\n            ? Object.values(post.data.tipsSet)\n            : [];\n          const lenSet = tipSet.length;\n          const tot =\n            lenSet > 0\n              ? tipSet.reduce((acc, val) => Number(val) + Number(acc))\n              : 0;\n          return {\n            ...shared.data,\n            originalPost: {\n              ...post.data,\n              id,\n              tipCounter: lenSet,\n              tipValue: tot\n            },\n            authorId: userPublicKey,\n            type: \"shared\"\n          };\n        });\n        const postsAlmostReady = await Promise.allSettled(proms);\n        const postsReady = postsAlmostReady\n          .filter(maybeOk => maybeOk.status === \"fulfilled\")\n          // @ts-expect-error\n          .map(res => res.value);\n        setUserSharedPosts(postsReady);\n      }\n    });\n\n    return rifleCleanup(subscription);\n  }, [userPublicKey]);\n\n  // effect for user profile\n  // @ts-ignore\n  useEffect(() => {\n    const unsubscribe = dispatch(subscribeUserProfile(userPublicKey));\n\n    return unsubscribe;\n  }, [dispatch, userPublicKey]);\n  //effect for user posts\n  useEffect(() => {\n    const unsubscribe = subscribeUserPosts();\n\n    return unsubscribe;\n  }, [subscribeUserPosts]);\n  //effect for shared posts\n  useEffect(() => {\n    const unsubscribe = subscribeSharedPosts();\n\n    return unsubscribe;\n  }, [subscribeSharedPosts]);\n  //effect for merge posts and shared posts\n  useEffect(() => {\n    const final = [...userPosts, ...userSharedPosts].sort(\n      (a, b) => b.date - a.date\n    );\n    setFinalPosts(final);\n    const unSubProfiles = userSharedPosts\n      .filter(post => !userProfiles[post.originalAuthor])\n      .map(post => {\n        const pub = post.originalAuthor;\n        dispatch(subscribeUserProfile(pub));\n        return () => {\n          dispatch(unsubscribeUserProfile(pub));\n        };\n      });\n    return () => {\n      unSubProfiles.forEach(unSub => unSub());\n    };\n  }, [dispatch, userPosts, userProfiles, userSharedPosts]);\n  //effect for services\n  useEffect(() => {\n    Http.get(`/api/gun/otheruser/${userPublicKey}/load/offeredServices`).then(\n      ({ data }) => {\n        setUserServices(data.data);\n      }\n    );\n  }, [userPublicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n      }\n\n      setTipModalOpen(tipData);\n    },\n    [tipModalData]\n  );\n  const toggleBuyServiceModal = useCallback(\n    buyData => {\n      if (buyServiceModalData || !buyData) {\n        setBuyServiceModalOpen(null);\n      }\n\n      setBuyServiceModalOpen(buyData);\n    },\n    [buyServiceModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const copyClipboard = useCallback(() => {\n    navigator.clipboard.writeText(userPublicKey);\n  }, [userPublicKey]);\n  const renderPosts = () => {\n    if(finalPosts.length === 0){\n      return <Loader text=\"loading posts...\" />\n    }\n    return finalPosts.map((post, index) => {\n      const profile = userProfiles[post.authorId];\n      if (post.type === \"shared\") {\n        if (!post.originalPost) {\n          return null;\n        }\n        //@ts-expect-error\n        const item = Object.entries(post.originalPost.contentItems).find(([_,item]) => item.type === 'stream/embedded')\n        let streamContentId,streamItem\n        if(item){\n          [streamContentId,streamItem] = item\n        }\n        if(streamItem){\n          if(!streamItem.liveStatus){\n            return\n          }\n          if(streamItem.liveStatus === 'waiting'){\n            return\n          }\n          if(streamItem.liveStatus === 'wasLive'){\n            if(!streamItem.playbackMagnet){\n              return\n            }\n            post.originalPost.contentItems[streamContentId].type = 'video/embedded'\n            post.originalPost.contentItems[streamContentId].magnetURI = streamItem.playbackMagnet\n          }\n          \n        }\n        const originalPublicKey = post.originalAuthor;\n        const originalProfile = userProfiles[originalPublicKey];\n        return (\n          <Suspense fallback={<Loader />} key={index}>\n            <SharedPost\n              originalPost={post.originalPost}\n              originalPostProfile={originalProfile}\n              sharedTimestamp={post.shareDate}\n              sharerProfile={profile}\n              postPublicKey={originalPublicKey}\n              openTipModal={toggleTipModal}\n              openUnlockModal={toggleUnlockModal}\n              openDeleteModal={null}\n            />\n          </Suspense>\n        );\n      }\n      //@ts-expect-error\n      const item = Object.entries(post.contentItems).find(([_,item]) => item.type === 'stream/embedded')\n      let streamContentId,streamItem\n      if(item){\n        [streamContentId,streamItem] = item\n      }\n      if(streamItem){\n        if(!streamItem.liveStatus){\n          return\n        }\n        if(streamItem.liveStatus === 'waiting'){\n          return\n        }\n        if(streamItem.liveStatus === 'wasLive'){\n          if(!streamItem.playbackMagnet){\n            return\n          }\n          post.contentItems[streamContentId].type = 'video/embedded'\n          post.contentItems[streamContentId].magnetURI = streamItem.playbackMagnet\n        }\n      }\n      return (\n        <Suspense fallback={<Loader />} key={index}>\n          <Post\n            id={post.id}\n            timestamp={post.date}\n            contentItems={post.contentItems}\n            avatar={`data:image/jpeg;base64,${profile?.avatar}`}\n            username={processDisplayName(profile?.user, profile?.displayName)}\n            publicKey={post.authorId}\n            openTipModal={toggleTipModal}\n            openUnlockModal={toggleUnlockModal}\n            tipCounter={post.tipCounter || 0}\n            tipValue={post.tipValue || 0}\n            openDeleteModal={null}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    return Object.entries(userServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, service]) => {\n        const buyCB = () => {\n          setBuyServiceModalOpen({\n            //@ts-expect-error\n            ...service,\n            serviceID: id,\n            owner: userPublicKey\n          });\n        };\n        return (\n          <div className={styles.post}>\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceType}</p>\n            <strong>Service Title</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceTitle}</p>\n            <strong>Service Description</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceDescription}</p>\n            <strong>Service Condition</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceCondition}</p>\n            <strong>Service Price</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.servicePrice}</p>\n            <button onClick={buyCB}>BUY SERVICE</button>\n          </div>\n        );\n      });\n  };\n  const handleViewChange = useCallback((selected: \"posts\" | \"services\") => {\n    setSelectedView(selected);\n  }, []);\n  //#endregion controller\n\n  return (\n    <div className={classNames(\"page-container\", styles[\"profile-page\"])}>\n      <div className={styles[\"profile-container\"]}>\n        <div className=\"profile-cover\">\n          {user.header && (\n            <img\n              className=\"w-100\"\n              alt=\"User set profile header.\"\n              src={`data:image/jpeg;base64,${user.header}`}\n            />\n          )}\n        </div>\n\n        <div className={styles[\"profile-info-container\"]}>\n          <div\n            className={styles[\"profile-avatar\"]}\n            style={{\n              height: `${AVATAR_SIZE}px`,\n              width: `${AVATAR_SIZE}px`\n            }}\n          >\n            <ShockAvatar\n              height={AVATAR_SIZE}\n              publicKey={userPublicKey}\n              greyBorder\n            />\n          </div>\n          <div className={styles[\"profile-info\"]}>\n            <p className={styles[\"profile-name\"]}>{user.displayName}</p>\n            <p className={styles[\"profile-desc\"]}>\n              {user.bio || \"Shockwallet user\"}\n            </p>\n\n            {!isMe && <FollowBtn publicKey={userPublicKey} />}\n          </div>\n        </div>\n\n        <ProfileDivider onChange={handleViewChange} selected={selectedView} />\n\n        <div>\n          {selectedView === \"posts\" && renderPosts()}\n          {selectedView === \"services\" && renderServices()}\n        </div>\n\n        {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n        <Pad amt={200} />\n\n        <Modal\n          toggleModal={toggleModal}\n          modalOpen={profileModalOpen}\n          contentStyle={{\n            padding: \"40px 30px\"\n          }}\n        >\n          <QRCode\n            bgColor=\"#23282d\"\n            fgColor=\"#4285b9\"\n            value={userPublicKey}\n            size={180}\n            className={styles[\"profile-qrcode\"]}\n          />\n          <p className={styles[\"profile-qrcode-desc\"]}>\n            Scan this code to contact this user\n          </p>\n          <div\n            className={styles[\"profile-clipboard-container\"]}\n            onClick={copyClipboard}\n          >\n            <img\n              src={ClipboardIcon}\n              className={styles[\"profile-clipboard-icon\"]}\n              alt=\"\"\n            />\n            <p className={styles[\"profile-clipboard-text\"]}>\n              Tap to copy to clipboard\n            </p>\n          </div>\n        </Modal>\n        <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n        <UnlockModal\n          unlockData={unlockModalData}\n          toggleOpen={toggleUnlockModal}\n        />\n        <BuyServiceModal\n          service={buyServiceModalData}\n          toggleOpen={toggleBuyServiceModal}\n        />\n\n        <AddBtn\n          onClick={toggleModal}\n          large\n          iconURL={QRCodeIcon}\n          icon={null}\n          label={null}\n        />\n      </div>\n\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default OtherUserPage;\n"],"sourceRoot":""}