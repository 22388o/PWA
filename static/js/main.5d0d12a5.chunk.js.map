{"version":3,"sources":["actions/OrdersActions.js","utils/Http.js","common/Loader/index.js","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.js","reducers/DrawerReducer.js","reducers/ContentReducer.js","reducers/FeesReducer.js","reducers/FeedReducer.js","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/index.ts","actions/AuthActions.ts","utils/WebSocket.js","actions/ChatActions.js","utils/JSON.ts","utils/Encryption.ts","actions/WalletActions.js","actions/ContentActions.js","actions/NodeActions.js","actions/UserProfilesActions.ts","common/Drawer/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js","actions/FeedActions.js","schema/index.ts","utils/FieldError.ts","utils/Error.ts","actions/EncryptionActions.js","actions/DrawerActions.js","actions/FeesActions.js","utils/Gun.js","utils/Date.ts","utils/index.ts","utils/String.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","serviceID","dispatch","a","id","Http","post","path","value","data","ok","newID","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","rifle","query","publicKey","reconnect","onData","services","servicesEntries","forEach","get","service","type","serviceInfo","buyService","owner","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","store","hostKeys","getState","encryption","hostId","node","remotePublicKey","process","REACT_APP_SHOCK_ENCRYPTION_ECC","warn","Encryption","message","stringify","encryptedMessage","decryptResponse","userKeys","localPrivateKey","privateKey","decryptedMessage","interceptors","request","use","authToken","deviceId","localRequest","url","indexOf","headers","common","Authorization","method","toUpperCase","includes","error","reject","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","window","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","INITIAL_STATE","hostIP","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","SET_ATTEMPTS_DONE","AUTH_ACTIONS","LOGOUT","authenticated","authStep","defaultSteps","manual","shockWizard","shockCloud","auth","SET_AUTHENTICATED","SET_AUTH_STEP","SET_AUTH_METHOD","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","_getUnifiedTransactionDate","item","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","filter","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","sort","b","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","contacts","messages","sentRequests","receivedRequests","requestBlacklist","_identicalMessages","oldMessage","newMessage","localId","_sortMessages","timestamp","_processNewMessage","status","outgoing","userMessages","recipientPublicKey","existingMessage","body","sortedMessages","chat","LOAD_CHAT_DATA","LOAD_SENT_REQUESTS","requestPublicKeys","pk","pendingRequests","loading","LOAD_RECEIVED_REQUESTS","SENT_REQUEST","avatar","changedAddress","displayName","Date","now","ACCEPT_HANDSHAKE_REQUEST","requestId","DECLINE_HANDSHAKE_REQUEST","trim","SENDING_MESSAGE","Schema","SENDING","SENT_MESSAGE","SENT","FAILED_MESSAGE","FAILED","RECEIVED_MESSAGE","RECEIVED","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","publishedContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","SET_SEED_PROVIDER_PUB","ADD_PUBLISHED_CONTENT","res","contentTmp","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","userToken","availableTmp","push","REMOVE_USED_TOKEN","index","splice","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","user","private","posts","feed","RESET_FOLLOWS","ADD_FOLLOW","existingFollow","find","follow","REMOVE_FOLLOW","UPDATE_FOLLOW","key","profile","ADD_USER_POST","receivedPost","authorId","userPosts","existingPostIndex","findIndex","tmp","DELETE_USER_POST","LOAD_POSTS","LOAD_SHARED_POST","sharerId","updatedPosts","originalPost","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","NODE_ACTIONS","Common","RESET_USER_PROFILES","LOAD_USER_PROFILE","REMOVE_USER_PROFILE","profiles","UPDATE_USER_PROFILE","newProfile","oldProfile","CHAT_ACTIONS","produce","draft","c","req","myServices","boughtServices","orders","servicesTmp","selectedService","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","users","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectFollows","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","debug","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","RESET_AUTH_INFO","setAuthenticated","setAuthStep","step","setAuthMethod","logout","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","transports","rifleSubscriptions","Map","GunSocket","LNDSocket","connectSocket","host","disconnectSocket","socketOptions","encryptionId","SocketIO","connect","GunOn","encryptedOn","event","subscription","subscriptionId","onError","on","socket","off","close","decryptEventCallback","err","callback","encryptedEmit","eventName","emit","encryptedData","responses","decryptedResponses","subscribeSocket","resolve","then","token","unsubscribeRifleById","unsubscribeEvent","delete","unsubscribeRifleByQuery","Array","from","$shock","set","rifleCleanup","subscriptions","unsubscribe","getChats","chats","recipientAvatar","recipientDisplayName","reduce","initialMessagePrefix","getSentRequests","getReceivedRequests","recipientChangedRequestAddress","SET_CHAT_CONTACTS","SET_CHAT_MESSAGES","loadChatData","loadSentRequests","loadReceivedRequests","requestorPK","requestorAvatar","requestorDisplayName","subscribeChatMessages","userPublicKey","incomingId","rawMsg","msg","incomingMessages","acceptHandshakeRequest","put","accept","sendHandshakeRequest","sendMessage","tempId","DateTime","utc","toMillis","safeParseJSON","nonEncryptedEvents","convertBase64ToBuffer","Buffer","convertBufferToBase64","processKey","Uint8Array","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","FieldError","field","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","fetchWalletBalance","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","setSeedProviderPub","pub","setSeedInfo","cleanUrl","endsWith","slice","infoS","addPublishedContent","toSet","unlockContent","postID","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","addAvailableToken","removeUnavailableToken","addStreamToken","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","fetchNodeHealth","Error","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","connectHost","resetData","done","health","baseURL","throttledExchangeKeyPair","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","timeout","decodedToken","jwtDecode","authorization","exp","parseError","createWallet","subscribedProfiles","Set","updateUserProfile","subscribeUserProfile","has","info","binarySub","Utils","header","unsubscribeUserProfile","Drawer","useDispatch","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","createPostPage","GoLivePage","OtherUserPage","Story","Stories","QRScannerPage","PrivateRoute","component","authorizedComponent","App","f","useEffect","videojs","addLanguage","tokenExpired","JWTDecode","fallback","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","RESET_FEED","POST_TIPPED","loadSharedPost","originalPostId","originalPublicKey","sharerPublicKey","USER_POSTS_QUERY_SUFFIX","subscribeUserPosts","postEntries","newPosts","GUN_PROPS","deletedPosts","USER_SHARED_POSTS_QUERY_SUFFIX","subscribeSharedUserPosts","processedPost","originalAuthor","shareDate","undefined","sendTipPost","postId","deleteUserPost","CHAT_MESSAGE_STATUS","isSharedPost","obj","stack","errorMessage","exchangingKeypair","addUserKeyPair","addHostKey","getDeviceId","APIPublicKey","result","openDrawer","loadFeeRates","useForceUpdate","setTick","tick","logger","resizeImage","img","desiredLongEdge","compression","canvas","createElement","width","Math","round","getContext","drawImage","toDataURL","processImageFile","file","startsWith","TypeError","size","rej","reader","FileReader","onload","e","target","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","src","image","resizedImage","normalizeURL","_url","__url","_","protocol","getContact","contact","EMPTY_FN","capitalizeText","split","word","toLowerCase","join","processDisplayName","suffix"],"mappings":"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","file":"static/js/main.5d0d12a5.chunk.js","sourcesContent":["import Http from \"../utils/Http\";\nimport {\n  rifle,\n  rifleSocketExists,\n  unsubscribeRifleById\n} from \"../utils/WebSocket\";\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE: \"service/add/bought\"\n};\n\nexport const createService = (\n  clear,\n  encrypted,\n  serviceID\n) => async dispatch => {\n  let id = serviceID;\n  if (serviceID) {\n    const { data } = await Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}`,\n      value: clear\n    });\n    const { ok } = data;\n    if (!ok) {\n      return \"\";\n    }\n  } else {\n    const { data } = await Http.post(\"/api/gun/set\", {\n      path: \"$user>offeredServices\",\n      value: clear\n    });\n    const { ok, id: newID } = data;\n    if (!ok) {\n      return \"\";\n    }\n    id = newID;\n  }\n\n  const all = Object.entries(encrypted).map(([name, value]) => {\n    if (!value) {\n      return;\n    }\n    console.log(`setting: ${name} to ${value}`);\n    return Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}>${name}`,\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value\n      }\n    });\n  });\n  await Promise.all(all);\n  const { serviceType } = clear;\n  //update the offered service\n  if (serviceType === \"torrentSeed\" || serviceType === \"streamSeed\") {\n    console.log(\"updating profile with service\");\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>Profile>SeedServiceProvided`,\n      value: id\n    });\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id;\n};\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post(\"/api/gun/put\", {\n    path: `$user>offeredServices>${id}`,\n    value: null\n  });\n};\n\nexport const subscribeMyServices = () => dispatch => {\n  const query = `$user::offeredServices::on`;\n  const subscription = rifle({\n    query,\n    publicKey: \"\",\n    reconnect: false,\n    onData: async services => {\n      const servicesEntries = Object.entries(services);\n      console.log(servicesEntries);\n\n      servicesEntries.forEach(async ([id]) => {\n        if (id === \"_\") {\n          return;\n        }\n        const { data: service } = await Http.get(\n          `/api/gun/user/load/offeredServices>${id}`\n        );\n        console.log(service.data);\n        if (service.data === null) {\n          dispatch({\n            type: ACTIONS.REMOVE_MY_SERVICE,\n            data: id\n          });\n          return;\n        }\n        dispatch({\n          type: ACTIONS.ADD_MY_SERVICE,\n          data: { id, serviceInfo: service.data }\n        });\n      });\n    }\n  });\n\n  return subscription;\n};\n\nexport const buyService = (\n  owner,\n  serviceID,\n  servicePrice\n) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"service\",\n    amt: Number(servicePrice),\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: serviceID\n  });\n  console.log(data);\n  const orderAck = JSON.parse(data.orderAck.response);\n  dispatch({\n    type: ACTIONS.ADD_BOUGHT_SERVICE,\n    data: { orderAck, owner, serviceID }\n  });\n  return orderAck;\n};\n","import Http from \"axios\";\nimport * as Encryption from \"./Encryption\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\") {\n    return config;\n  }\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return response;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n    }\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\").matches\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: []\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n */\n/**\n * @template S\n * @typedef {import('redux').Reducer<S, AnyAction>} Reducer\n */\n\nimport * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').ReceivedRequest} ReceivedRequest\n * @typedef {import(\"../schema\").SentRequest} SentRequest\n *\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').LoadSentRequestsAction} LoadSentRequestsAction\n */\n\nconst INITIAL_STATE = {\n  contacts: /** @type {Contact[]} */ ([]),\n  /**\n   * @type {Record<string, Schema.ChatMessage[]>}\n   */\n  messages: {},\n  sentRequests: /** @type {SentRequest[]} */ ([]),\n  receivedRequests: /** @type {ReceivedRequest[]} */ ([]),\n  requestBlacklist: []\n};\n\n/**\n * @param {Schema.ChatMessage} oldMessage\n * @param {Schema.ChatMessage} newMessage\n * @returns {boolean}\n */\nconst _identicalMessages = (oldMessage, newMessage) =>\n  oldMessage.id && newMessage.id\n    ? oldMessage.id === newMessage.id\n    : oldMessage.localId === newMessage.localId;\n\n/**\n * @param {Schema.ChatMessage[]} messages\n * @returns {Schema.ChatMessage[]}\n */\nconst _sortMessages = (messages = []) =>\n  messages.sort((a, b) => b.timestamp - a.timestamp);\n\n/**\n * @typedef {object} ProcessNewMessageParams\n * @prop {Schema.ChatMessage} data\n * @prop {Schema.ChatMessageStatus} status\n * @prop {typeof INITIAL_STATE} state\n * @prop {boolean=} outgoing\n */\n\n/**\n * @param {ProcessNewMessageParams} args\n * @returns {typeof INITIAL_STATE}\n */\nconst _processNewMessage = ({ data, status, state, outgoing = false }) => {\n  const userMessages = state.messages[data.recipientPublicKey] ?? [];\n  const [existingMessage] = userMessages.filter(message =>\n    _identicalMessages(message, data)\n  );\n\n  if (existingMessage) {\n    console.warn(\"Duplicate Message:\", existingMessage?.body);\n  }\n\n  if (existingMessage) {\n    const messages = userMessages.map(message =>\n      _identicalMessages(message, existingMessage)\n        ? { ...existingMessage, ...data, status, outgoing }\n        : message\n    );\n    const sortedMessages = _sortMessages(messages);\n\n    return {\n      ...state,\n      messages: {\n        ...state.messages,\n        [data.recipientPublicKey]: sortedMessages\n      }\n    };\n  }\n\n  const messages = [{ ...data, status, outgoing }, ...userMessages];\n  const sortedMessages = _sortMessages(messages);\n\n  return {\n    ...state,\n    messages: {\n      ...state.messages,\n      [data.recipientPublicKey]: sortedMessages\n    }\n  };\n};\n\n/**\n * @type {Reducer<typeof INITIAL_STATE>}\n */\nconst chat = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_CHAT_DATA: {\n      const {\n        data: { contacts, messages }\n      } = /** @type {LoadChatDataAction} */ (action);\n      return {\n        ...state,\n        contacts,\n        // TODO: Could not replacing messages altogether be bad?\n        messages: {\n          ...state.messages,\n          ...messages\n        }\n      };\n    }\n    case ACTIONS.LOAD_SENT_REQUESTS: {\n      const {\n        data: sentRequests\n      } = /** @type {LoadSentRequestsAction} */ (action);\n      const requestPublicKeys = state.sentRequests.map(request => request.pk);\n      const pendingRequests = state.sentRequests.filter(\n        request => request.loading && !requestPublicKeys.includes(request.pk)\n      );\n\n      return {\n        ...state,\n        sentRequests: [...pendingRequests, ...sentRequests]\n      };\n    }\n    case ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      const {\n        data: receivedRequests\n      } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n      return {\n        ...state,\n        receivedRequests\n      };\n    }\n    case ACTIONS.SENT_REQUEST: {\n      const { data: publicKey } = /** @type {SentRequestAction} */ (action);\n      return {\n        ...state,\n        sentRequests: [\n          ...state.sentRequests,\n          {\n            avatar: null,\n            changedAddress: false,\n            displayName: null,\n            id: \"loading/\" + publicKey,\n            pk: publicKey,\n            timestamp: Date.now(),\n            loading: true\n          }\n        ]\n      };\n    }\n    case ACTIONS.ACCEPT_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      return {\n        ...state,\n        receivedRequests: state.receivedRequests.filter(\n          request => request.id !== requestId\n        )\n      };\n    }\n    case ACTIONS.DECLINE_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      if (!requestId || !requestId.trim()) {\n        return state;\n      }\n\n      return {\n        ...state,\n        requestBlacklist: [...state.requestBlacklist, requestId]\n      };\n    }\n    case ACTIONS.SENDING_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENDING,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.SENT_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.FAILED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.FAILED,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.RECEIVED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.RECEIVED,\n        state\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import { ACTIONS } from \"../actions/ContentActions\";\nconst INITIAL_STATE = {\n  seedProviderPub:'qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg',\n  streamUserToken:'',\n  streamLiveToken:'',\n  streamUrl:'',\n  publishedContent:{},\n  unlockedContent:{},\n  seedInfo:{},\n  availableTokens:{},\n  availableStreamTokens:{}\n};\n\nconst content = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n    case ACTIONS.ADD_PUBLISHED_CONTENT:{\n      const {data} = action\n      const {content,res} = data\n      const contentTmp = {...state.publishedContent}\n      if(res.ok){\n        contentTmp[res.id] = content \n      }\n      return { ...state, publishedContent:contentTmp} \n    }\n    case ACTIONS.ADD_UNLOCKED_CONTENT:{\n      const {data} = action\n      const unlockedTmp = {...state.unlockedContent}\n      unlockedTmp[data.contentPath] = data.content\n      return {...state,unlockedContent:unlockedTmp}\n    }\n    case ACTIONS.ADD_STREAM:{\n      const {data} = action\n      return {...state, streamLiveToken:data.liveToken,streamUserToken:data.seedToken,streamUrl:data.streamUrl}\n    }\n    case ACTIONS.REMOVE_STREAM:{\n      return {...state, streamLiveToken:'',streamUserToken:''}\n    }\n    case ACTIONS.SET_SEED_INFO:{\n      const {data} = action\n      return {...state, seedInfo:data}\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableTokens}\n      if(!availableTmp[seedUrl]){\n        availableTmp[seedUrl] = []\n      }\n      availableTmp[seedUrl].push(userToken)\n      return {...state,availableTokens:availableTmp}\n    }\n    case ACTIONS.REMOVE_USED_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableTokens}\n      if(!availableTmp[seedUrl]){\n        return state\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return {...state,availableTokens:availableTmp}\n      }\n      return state\n    }\n    case ACTIONS.ADD_STREAM_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableStreamTokens}\n      if(!availableTmp[seedUrl]){\n        availableTmp[seedUrl] = []\n      }\n      availableTmp[seedUrl].push(userToken)\n      return {...state,availableStreamTokens:availableTmp}\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableStreamTokens}\n      if(!availableTmp[seedUrl]){\n        return state\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return {...state,availableStreamTokens:availableTmp}\n      }\n      return state\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import { ACTIONS } from \"../actions/FeesActions\";\n\nconst INITIAL_STATE = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n  rate: \"halfHourFee\",\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Follow} Follow\n */\n\nimport { ACTIONS } from \"../actions/FeedActions\";\n/**\n * @typedef {import('../schema').Post} Post\n * @typedef {import('../schema').SharedPost} SharedPost\n */\n\nconst INITIAL_STATE = {\n  follows: /** @type {Follow[]} */ ([\n    {\n      user:\n        \"qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg\",\n      status: \"ok\",\n      private: false\n    }\n  ]),\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: /** @type {Record<string, Array<Post|SharedPost>>} */ ({})\n};\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst feed = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FOLLOWS: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.ADD_USER_POST: {\n      const { data } = action;\n      /** @type {SharedPost} */\n      const receivedPost = data;\n      const authorId = receivedPost.authorId;\n      const userPosts = state.posts[authorId] ?? [];\n      const existingPostIndex = userPosts.findIndex(post => receivedPost.id === post.id);\n\n      const tmp = [...userPosts]\n\n      if(existingPostIndex !== -1){\n        tmp[existingPostIndex] = receivedPost\n      } else {\n        tmp.push(receivedPost)\n      }\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: tmp\n        }\n      };\n    }\n    case ACTIONS.DELETE_USER_POST: {\n      const { id, authorId } = action.data;\n      const userPosts = (state.posts[authorId] ?? []).filter(\n        post => post.id !== id\n      );\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: userPosts\n        }\n      };\n    }\n    case ACTIONS.LOAD_POSTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        posts: data\n      };\n    }\n    case ACTIONS.LOAD_SHARED_POST: {\n      const { data } = action;\n      const { id, sharerId } = data;\n      const userPosts = state.posts[sharerId] ?? [];\n      const updatedPosts = userPosts.map(post => {\n        if (post.id === id && post.type === \"shared\") {\n          return {\n            ...post,\n            originalPost: data\n          };\n        }\n\n        return post;\n      });\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [sharerId]: updatedPosts\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as CHAT_ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import(\"../actions/ChatActions\").LoadSentRequestsAction} LoadSentRequestsAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n */\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_USER_PROFILE: {\n      const { publicKey, profile } = action.data;\n\n      if (!publicKey || !profile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey],\n          ...profile\n        }\n      };\n    }\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { publicKey, profile: newProfile } = action.data;\n      const oldProfile = state[publicKey];\n\n      if (!oldProfile || !newProfile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...oldProfile,\n          ...newProfile\n        }\n      };\n    }\n    case CHAT_ACTIONS.LOAD_CHAT_DATA: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadChatDataAction} */ (action);\n\n        data.contacts.forEach(c => {\n          draft[c.pk] = {\n            ...Common.createEmptyUser(c.pk),\n            ...draft[c.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_SENT_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadSentRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.SENT_REQUEST: {\n      return produce(state, draft => {\n        const { data: pk } = /** @type {SentRequestAction} */ (action);\n\n        if (!draft[pk]) {\n          draft[pk] = Common.createEmptyUser(pk);\n        }\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n    myServices:{},\n    services:{},\n    boughtServices:{}\n};\n\n\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const {id,serviceInfo} = action.data\n      const tmp = {...state.myServices}\n      tmp[id] = serviceInfo\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE:{\n      const id = action.data\n      const tmp = {...state.myServices}\n      delete tmp[id]\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE:{\n      const {orderAck,owner,serviceID} = action.data\n      const servicesTmp = {...state.boughtServices}\n      \n      if(!servicesTmp[owner]){\n        servicesTmp[owner] = {}\n      }\n      const selectedService = servicesTmp[owner]\n      if(!selectedService[serviceID]){\n        selectedService[serviceID] = []\n      }\n      selectedService[serviceID].push(orderAck)\n      return {...state, boughtServices:servicesTmp}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","import { combineReducers } from \"redux\";\nimport * as Common from \"shock-common\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\"\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders:OrdersReducer,\n  users: () => {\n    return {} as Record<string, Common.User>;\n  }\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = (publicKey: string) => (\n  state: State\n): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey);\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n","import { State } from \"../../reducers\";\n\nexport const selectFollows = (state: State) => state.feed.follows;\n","import { createStore, applyMiddleware, compose, AnyAction } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport { useSelector as origUseSelector } from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport * from \"./selectors\";\n","export const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\"\n};\n\nexport const setAuthenticated = status => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTHENTICATED,\n    data: status\n  });\n};\n\nexport const setAuthStep = step => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_STEP,\n    data: step\n  });\n};\n\nexport const setAuthMethod = method => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_METHOD,\n    data: method\n  });\n};\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Common from \"shock-common\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true,\n  transports: [\"websocket\"]\n};\n\nconst rifleSubscriptions = new Map();\n\nexport let GunSocket = null;\n\nexport let LNDSocket = null;\n\nexport const connectSocket = async (host = \"\", reconnect = false) => {\n  if (GunSocket && LNDSocket && !reconnect) {\n    return { GunSocket, LNDSocket };\n  }\n\n  if (GunSocket && LNDSocket && reconnect) {\n    disconnectSocket(GunSocket);\n    disconnectSocket(LNDSocket);\n  }\n\n  const { store } = await import(\"../store\");\n  const socketOptions = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId\n    }\n  };\n  GunSocket = SocketIO.connect(`${host}/gun`, socketOptions);\n  LNDSocket = SocketIO.connect(`${host}/lndstreaming`, socketOptions);\n\n  const GunOn = encryptedOn(GunSocket);\n\n  // Subscribe to Rifle query events as soon as the socket is connected\n  GunOn(\"query:data\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onData?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunOn(\"query:error\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onError?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunSocket.on(Common.NOT_AUTH, () => {\n    store.dispatch(setAuthenticated(false));\n  });\n\n  return { GunSocket, LNDSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: data\n    });\n\n    callback(err, decryptedMessage);\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.emit(eventName, message, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message: JSON.stringify(message)\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        if (!response) {\n          return response;\n        }\n\n        if (response && !Encryption.isEncryptedMessage(response)) {\n          console.warn(\"Non-encrypted socket message\", response);\n          return response;\n        }\n\n        return Encryption.decryptMessage({\n          privateKey: localPrivateKey,\n          encryptedMessage: response\n        });\n      })\n    );\n\n    callback(...decryptedResponses);\n  });\n};\n\nconst subscribeSocket = ({ eventName, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const on = encryptedOn(GunSocket);\n        const emit = encryptedEmit(GunSocket);\n\n        emit(\n          `subscribe:${eventName}`,\n          {\n            token: store.getState().node.authToken\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              reject(err);\n              return;\n            }\n          }\n        );\n\n        on(eventName, data => {\n          if (callback) {\n            callback(null, data);\n            return;\n          }\n          resolve(data);\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const unsubscribeRifleById = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n\n  if (cachedSocket) {\n    unsubscribeEvent(subscriptionId);\n    rifleSubscriptions.delete(subscriptionId);\n  }\n};\n\nexport const unsubscribeRifleByQuery = query => {\n  const subscriptionEntries = Array.from(rifleSubscriptions.entries());\n\n  subscriptionEntries.map(([id, subscription]) => {\n    if (subscription.query === query) {\n      console.log(\"Unsubscribing by query:\", subscription)\n      unsubscribeRifleById(id);\n      return true;\n    }\n\n    return false;\n  });\n};\n\nexport const unsubscribeEvent = subscriptionId =>\n  new Promise(resolve => {\n    const emit = encryptedEmit(GunSocket);\n    emit(\n      \"unsubscribe\",\n      {\n        subscriptionId\n      },\n      () => {\n        console.debug(\n          `[SOCKET] Unsubscribed from event successfully! (${subscriptionId})`\n        );\n        resolve(true);\n      }\n    );\n  });\n\nexport const rifleSocketExists = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} query\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {boolean=} reconnect\n * @prop {(data, key) => void} onData\n * @prop {((error) => void)=} onError\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.onData(callback)` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map().once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<{ off: () => void }>}\n */\nexport const rifle = ({ query, publicKey, reconnect, onData, onError }) =>\n  new Promise((resolve, reject) => {\n    import(\"../store\").then(({ store }) => {\n      if (reconnect) {\n        unsubscribeRifleByQuery(query);\n      }\n\n      const emit = encryptedEmit(GunSocket);\n\n      emit(\n        \"subscribe:query\",\n        {\n          $shock: query,\n          token: store.getState().node.authToken,\n          publicKey\n        },\n        (err, data) => {\n          if (err) {\n            console.error(`Gun rifle error (${query})`);\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          rifleSubscriptions.set(data.subscriptionId, {\n            onData,\n            onError,\n            query\n          });\n\n          resolve({\n            off: () => unsubscribeRifleById(data.subscriptionId)\n          });\n        }\n      );\n    });\n  });\n\n/**\n *\n * @param {Promise<() => void>} subscription\n */\nexport const rifleCleanup = (...subscriptions) => () => {\n  subscriptions.map(subscription =>\n    subscription.then(unsubscribe => {\n      unsubscribe.off();\n    })\n  );\n};\n\n/**\n * @returns {{ messages: any , contacts: Contact[]}}\n */\nexport const getChats = async ({ authToken }) => {\n  try {\n    const chats = await subscribeSocket({ authToken, eventName: \"chats\" });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\nexport const getSentRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const sentRequests = await subscribeSocket({\n      hostIP,\n      authToken,\n      eventName: \"sentRequests\",\n      callback\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getReceivedRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const receivedRequests = await subscribeSocket({\n      hostIP,\n      authToken,\n      eventName: \"receivedRequests\",\n      callback\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","// @ts-check\nimport Http from \"../utils/Http\";\nimport { DateTime } from \"luxon\";\nimport { v4 as uuidv4 } from \"uuid\";\n/**\n * @typedef {import('shock-common').Message} RawMessage\n */\n\nimport {\n  getChats,\n  getReceivedRequests,\n  getSentRequests,\n  rifle\n} from \"../utils/WebSocket\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport * as Schema from \"../schema\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').SentRequest} SentRequest\n * @typedef {import(\"../schema\").ReceivedRequest} ReceivedRequest\n * @typedef {import('../schema').ChatMessage} ChatMessage\n */\n\nexport const ACTIONS = {\n  LOAD_CHAT_DATA: /** @type {\"chat/loadData\"} */ (\"chat/loadData\"),\n  LOAD_SENT_REQUESTS: /** @type {\"chat/loadSentRequests\"} */ (\"chat/loadSentRequests\"),\n  LOAD_RECEIVED_REQUESTS: /** @type {\"chat/loadReceivedRequests\"} */ (\"chat/loadReceivedRequests\"),\n  SET_CHAT_CONTACTS: \"chat/contacts\",\n  SET_CHAT_MESSAGES: \"chat/messages\",\n  SENT_REQUEST: /** @type {\"chat/request/sent\"} */ (\"chat/request/sent\"),\n  ACCEPT_HANDSHAKE_REQUEST: \"chat/request/accept\",\n  DECLINE_HANDSHAKE_REQUEST: \"chat/request/decline\",\n  SENDING_MESSAGE: \"chat/message/sending\",\n  SENT_MESSAGE: \"chat/message/sent\",\n  FAILED_MESSAGE: \"chat/message/failed\",\n  RECEIVED_MESSAGE: /** @type {\"chat/message/received\"} */ (\"chat/message/received\")\n};\n\n/**\n * @typedef {object} SentRequestAction\n * @prop {typeof ACTIONS.SENT_REQUEST} type\n * @prop {string} data The public key.\n */\n\n/**\n * @typedef {object} LoadChatDataAction\n * @prop {typeof ACTIONS.LOAD_CHAT_DATA} type\n * @prop {{ messages: Record<string, ChatMessage[]> , contacts: Contact[] }} data\n */\n\n/**\n * @typedef {object} LoadSentRequestsAction\n * @prop {typeof ACTIONS.LOAD_SENT_REQUESTS} type\n * @prop {SentRequest[]} data\n */\n\n/**\n * @typedef {object} LoadReceivedRequestsAction\n * @prop {typeof ACTIONS.LOAD_RECEIVED_REQUESTS} type\n * @prop {ReceivedRequest[]} data\n */\n\n/**\n * @typedef {object} ReceivedMessageAction\n * @prop {typeof ACTIONS.RECEIVED_MESSAGE} type\n * @prop {ChatMessage} data\n */\n\nexport const loadChatData = () => async (dispatch, getState) => {\n  const { authToken } = getState().node;\n  const data = await getChats({ authToken });\n  console.log(\"LOAD_CHAT_DATA:\", data);\n\n  dispatch({\n    type: ACTIONS.LOAD_CHAT_DATA,\n    data\n  });\n};\n\nexport const loadSentRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getSentRequests({ hostIP, authToken }, (err, sentRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"sentRequests:\", sentRequests);\n\n    /** @type {LoadSentRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_SENT_REQUESTS,\n      data: sentRequests.map(request => {\n        /** @type {SentRequest} */\n        const req = {\n          id: request.id,\n          pk: request.recipientPublicKey,\n          avatar: request.recipientAvatar,\n          displayName: request.recipientDisplayName,\n          changedAddress: request.recipientChangedRequestAddress,\n          timestamp: request.timestamp,\n          loading: false\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const loadReceivedRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getReceivedRequests({ hostIP, authToken }, (err, receivedRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"receivedRequests:\", receivedRequests);\n\n    /** @type {LoadReceivedRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n      data: receivedRequests.map(request => {\n        /** @type {ReceivedRequest} */\n        const req = {\n          id: request.id,\n          pk: request.requestorPK,\n          avatar: request.requestorAvatar,\n          displayName: request.requestorDisplayName,\n          timestamp: request.timestamp\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const subscribeChatMessages = (\n  userPublicKey,\n  recipientPublicKey\n) => async (dispatch) => {\n  const { data: incomingId } = await Http.get(\n    `/api/gun/user/once/userToIncoming>${recipientPublicKey}`,\n    {\n      headers: {\n        \"public-key-for-decryption\": userPublicKey\n      }\n    }\n  );\n\n  if (!incomingId.data) {\n    console.warn(\"Unable to retrieve incoming ID for selected contact\");\n    return null;\n  }\n\n  const incomingMessages = await rifle({\n    query: `${recipientPublicKey}::outgoings>${incomingId.data}>messages::map.on`,\n    publicKey: recipientPublicKey,\n    onData: (message, id) => {\n      if (!message.body || message.body === initialMessagePrefix) {\n        return;\n      }\n      /** @type {RawMessage} */\n      const rawMsg = message;\n  \n      /** @type {ChatMessage} */\n      const msg = {\n        body: rawMsg.body,\n        id,\n        localId: id,\n        outgoing: false,\n        recipientPublicKey,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        timestamp: rawMsg.timestamp\n      };\n  \n      /** @type {ReceivedMessageAction} */\n      const action = {\n        type: ACTIONS.RECEIVED_MESSAGE,\n        data: msg\n      };\n  \n      dispatch(action);\n    }\n  });\n\n  return incomingMessages;\n};\n\nexport const acceptHandshakeRequest = requestId => async dispatch => {\n  const { data } = await Http.put(`/api/gun/requests/${requestId}`, {\n    accept: true\n  });\n\n  dispatch({\n    type: ACTIONS.ACCEPT_HANDSHAKE_REQUEST,\n    data: requestId\n  });\n\n  return data;\n};\n\nexport const sendHandshakeRequest = publicKey => async (dispatch, getState) => {\n  const { data } = await Http.post(`/api/gun/requests`, {\n    publicKey\n  });\n\n  /** @type {SentRequest[]} */\n  const sentRequests = getState().chat.sentRequests;\n  const [userExists] = sentRequests.filter(request => request.pk === publicKey);\n\n  if (!userExists) {\n    /** @type {SentRequestAction} */\n    const action = {\n      type: ACTIONS.SENT_REQUEST,\n      data: publicKey\n    };\n    dispatch(action);\n  }\n\n  return data;\n};\n\nexport const sendMessage = ({\n  publicKey,\n  message,\n  localId = null\n}) => async dispatch => {\n  const tempId = localId ?? uuidv4();\n  try {\n    dispatch({\n      type: ACTIONS.SENDING_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n    const { data } = await Http.post(`/api/gun/chats/${publicKey}`, {\n      body: message\n    });\n    console.log(data);\n    dispatch({\n      type: ACTIONS.SENT_MESSAGE,\n      data: { ...data, localId: tempId, recipientPublicKey: publicKey }\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIONS.FAILED_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n  }\n};\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Uint8Array;\n  ephemPublicKey: Uint8Array;\n  iv: Uint8Array;\n  mac: Uint8Array;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface DeriveKey {\n  localPrivateKey: Uint8Array | string;\n  remotePublicKey: Uint8Array | string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Uint8Array | string;\n  sharedKey: Uint8Array | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Uint8Array | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Uint8Array) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Uint8Array | string): Uint8Array => {\n  if (key instanceof Uint8Array) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName) ||\n  process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\";\n\nexport const generateKeyPair = () => {\n  const privateKey: Uint8Array = ECCrypto.generatePrivate();\n  const publicKey: Uint8Array = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const deriveKey = async ({\n  localPrivateKey,\n  remotePublicKey\n}: DeriveKey) => {\n  const sharedKey: Uint8Array = await ECCrypto.derive(\n    processKey(localPrivateKey),\n    processKey(remotePublicKey)\n  );\n  const sharedKeyBase64 = convertBufferToBase64(sharedKey);\n\n  return { sharedKey, sharedKeyBase64 };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  const processedPrivateKey = processKey(privateKey);\n  const decryptedMessageBuffer: Uint8Array = await ECCrypto.decrypt(\n    processedPrivateKey,\n    convertToEncryptedMessage(encryptedMessage)\n  );\n  const decryptedMessage = Buffer.from(decryptedMessageBuffer).toString();\n  const parsedMessage = safeParseJSON(decryptedMessage);\n\n  return parsedMessage;\n};\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\"\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  const { data } = await Http.get(`/api/lnd/balance`);\n\n  dispatch({\n    type: ACTIONS.LOAD_BALANCE,\n    data: {\n      channelBalance: data.channel_balance,\n      confirmedBalance: data.confirmed_balance,\n      pendingChannelBalance: data.pending_channel_balance\n    }\n  });\n\n  return data;\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  const { data } = await Http.get(\n    \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n  );\n  const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n  dispatch({\n    type: ACTIONS.LOAD_USD_RATE,\n    data: exchangeRate\n  });\n\n  return exchangeRate;\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { transactions } = getState().wallet;\n\n  if ((transactions.page >= page && !reset) || transactions.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/transactions\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchChannels = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n  dispatch({\n    type: ACTIONS.LOAD_CHANNELS,\n    data: data.channels\n  });\n\n  return data;\n};\n\nexport const fetchPeers = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n  dispatch({\n    type: ACTIONS.LOAD_PEERS,\n    data: data.peers\n  });\n\n  return data;\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { invoices } = getState().wallet;\n\n  if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/invoices\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchPayments = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { payments } = getState().wallet;\n\n  if ((payments.page >= page && !reset) || payments.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/payments\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_PAYMENTS : ACTIONS.LOAD_MORE_PAYMENTS,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n\n    return newPeer;\n  } catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    const data = await fetchChannels()(dispatch);\n\n    return data.channels;\n  } catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n};\n","import Http from '../utils/Http'\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB:'content/setSeedProviderPub',\n  SET_SEED_INFO:'content/setSeedInfo',\n  ADD_PUBLISHED_CONTENT:'content/addPublishedContent',\n  ADD_UNLOCKED_CONTENT:'content/addUnlocked',\n  ADD_STREAM:'content/addStream',\n  REMOVE_STREAM:'content/removeStream',\n  ADD_AVAILABLE_TOKEN:'content/addToken',\n  REMOVE_USED_TOKEN:'content/removeToken',\n  ADD_STREAM_TOKEN:'content/addStreamToken',\n  REMOVE_STREAM_TOKEN:'content/removeStreamToken',\n};\n\nexport const setSeedProviderPub = pub => async dispatch => {\n  let value = {\n    $$__ENCRYPT__FOR:'me',\n    value:pub\n  }\n  if(!pub){\n    value = \"\"\n  }\n  await Http.post('/api/gun/put',{\n    path:'$user>seedServiceProviderPubKey',\n    value\n  })\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (seedUrl,seedToken) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0,-1) : seedUrl\n  const infoS = JSON.stringify({seedUrl:cleanUrl,seedToken})\n  await Http.post('/api/gun/put',{\n    path:'$user>seedServiceSeedData',\n    value:{\n      $$__ENCRYPT__FOR:'me',\n      value:infoS\n    }\n  })\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: {seedUrl:cleanUrl,seedToken}\n  });\n};\nexport const addPublishedContent = content => async dispatch => {\n  let toSet = content\n  if(typeof content !== 'string'){\n    toSet = JSON.stringify(content)\n  }\n  const {data} = await Http.post('/api/gun/set',{\n    path:'$user>publishedContent',\n    value:{\n      $$__ENCRYPT__FOR:'me',\n      value:toSet\n    }\n  })\n  dispatch({\n    type: ACTIONS.ADD_PUBLISHED_CONTENT,\n    data: {content,res:data}\n  });\n  return data\n};\n\nexport const unlockContent = (amt,owner,postID) => async dispatch => {\n  const {data} = await Http.post('/api/lnd/unifiedTrx',{\n    type: 'contentReveal',\n    amt,\n    to: owner,\n    memo:'',\n    feeLimit:500,\n    ackInfo:postID\n  })\n  const revealRes = JSON.parse(data.orderAck.response)\n  if(revealRes && revealRes.unlockedContents){\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type:ACTIONS.ADD_UNLOCKED_CONTENT,\n          data:{contentPath:`${owner}>posts>${postID}`,content}\n        })\n      }\n    }\n  }\n}\nexport const addStream = (seedToken, liveToken,streamUrl) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {seedToken,liveToken,streamUrl}\n  });\n};\nexport const removeStream = () => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM,\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const removeUnavailableToken = (seedUrl,userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const removeStreamToken = (seedUrl,userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { throttledExchangeKeyPair } from \"./EncryptionActions\";\nimport { connectSocket } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\"\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nconst wait = ms => new Promise(r => setTimeout(r, ms));\n\nexport const fetchNodeHealth = hostIP => async dispatch => {\n  try {\n    const { data } = await Http.get(`${hostIP}/healthz`);\n    if (!data) {\n      throw new Error(\n        `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n      );\n    }\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (hostIP, resetData = true) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(throttledExchangeKeyPair())\n    ]);\n\n    connectSocket(host, true);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(`https://${sanitizedHostIP}`)(\n      dispatch\n    );\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(`http://${sanitizedHostIP}`)(\n    dispatch\n  );\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/auth\",\n      {\n        alias,\n        password\n      },\n      {\n        // Unlocking can take significantly longer than other endpoints\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/wallet\",\n      {\n        alias,\n        password\n      },\n      {\n        // Creating a wallet can take longer than any other endpoints.\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n","import * as Common from \"shock-common\";\n\nimport * as Utils from \"../utils\";\nimport { rifle, rifleCleanup, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  LOAD_USER_PROFILE: \"userProfiles/profiles/load\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\",\n  UPDATE_USER_PROFILE: \"userProfiles/profiles/update\"\n};\n\nconst subscribedProfiles = new Set();\n\nexport const updateUserProfile = (\n  publicKey: string,\n  profile: Partial<Common.User>\n) => ({\n  type: ACTIONS.UPDATE_USER_PROFILE,\n  data: {\n    publicKey,\n    profile\n  }\n});\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => (\n  dispatch: (action: object) => void,\n  getState: () => {\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  if (subscribedProfiles.has(publicKey)) {\n    return () => {}\n  }\n\n  console.info(\"subbing user...\"+publicKey)\n  subscribedProfiles.add(publicKey)\n\n  const subscription = rifle({\n    query: `${publicKey}::Profile::on`,\n    reconnect: true,\n    onData: profile => {\n      console.log(\"up on profile:\")\n      console.log(profile)\n      const { [publicKey]: existingUser } = getState().userProfiles;\n  \n      if (existingUser) {\n        dispatch({\n          type: ACTIONS.UPDATE_USER_PROFILE,\n          data: { publicKey, profile }\n        });\n        return profile;\n      }\n  \n      dispatch({\n        type: ACTIONS.LOAD_USER_PROFILE,\n        data: { publicKey, profile }\n      });\n    }\n  });\n\n  const binarySub = rifle({\n    query: `${publicKey}::profileBinary::map.on`,\n    reconnect: true,\n    onData: (data, key: string) => {\n      if (key === \"avatar\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updateUserProfile(publicKey, {\n            avatar: data\n          })\n        );\n      } else if (key === \"header\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updateUserProfile(publicKey, {\n            header: data\n          })\n        );\n      } else {\n        Utils.logger.error(\n          `Unknown key: ${key} for user binary profile data gun RPC socket`\n        );\n      }\n    }\n  });\n\n  return () => {\n    rifleCleanup(subscription, binarySub)();\n    subscribedProfiles.delete(publicKey);\n  };\n};\n\nexport const unsubscribeUserProfile = (publicKey: string) => async () => {\n  unsubscribeRifleByQuery(`${publicKey}::Profile::on`);\n  unsubscribeRifleByQuery(`${publicKey}::profileBinary::map.on`);\n};\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </div>\n        </div>\n        <div className=\"drawer-bottom-section\" >\n          <NavLink className=\"drawer-item\"  to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n        <NavLink  to=\"/QRScanner\" onClick={close}>\n          <i\n            onClick={onClickScan}\n            className=\"icon-solid-scan\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, { Suspense, useEffect, useRef } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { batch, useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\nimport uniq from \"lodash/uniq\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\nimport { loadReceivedRequests, loadSentRequests } from \"./actions/ChatActions\";\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport \"./styles/App.css\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as FeedActions from \"./actions/FeedActions\";\nimport * as Store from \"./store\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/publishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst createPostPage = React.lazy(() => import(\"./pages/Profile/createPost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/GoLive/GoLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst Story = React.lazy(() => import(\"./pages/Story\"));\nconst Stories = React.lazy(() => import(\"./pages/Stories\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const contacts = Store.useSelector(({ chat }) => chat.contacts);\n  const sentRequests = Store.useSelector(({ chat }) => chat.sentRequests);\n  const receivedRequests = Store.useSelector(\n    ({ chat }) => chat.receivedRequests\n  );\n  const followedPublicKeys = Store.useSelector(Store.selectFollows).map(\n    f => f.user\n  );\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated) {\n      // TODO: Move to messages screen\n      dispatch(loadSentRequests());\n      dispatch(loadReceivedRequests());\n      // Get current user's profile on login\n      dispatch(subscribeUserProfile(publicKey))\n    } else {\n      dispatch(unsubscribeUserProfile(publicKey))\n    }\n  }, [authenticated, dispatch, publicKey]);\n\n\n\n  return (\n    <FullHeight className=\"ShockWallet\">\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:publicKey\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={createPostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey\"\n            exact\n            component={OtherUserPage}\n          />\n          <Route path=\"/story\" exact component={Story} />\n          <Route path=\"/stories\" exact component={Stories} />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n    </FullHeight>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Http from \"axios\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nHttp.defaults.timeout = 10000;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","// @ts-check\nimport { GUN_PROPS } from \"../utils/Gun\";\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const loadSharedPost = (\n  originalPostId,\n  originalPublicKey,\n  sharerPublicKey\n) => async dispatch => {\n  const { data: post } = await Http.get(\n    `/api/gun/otheruser/${originalPublicKey}/load/posts>${originalPostId}`\n  );\n  dispatch(subscribeUserProfile(originalPublicKey));\n\n  dispatch({\n    type: ACTIONS.LOAD_SHARED_POST,\n    data: {\n      ...post.data,\n      authorId: originalPublicKey,\n      sharerId: sharerPublicKey,\n      id: originalPostId\n    }\n  });\n};\n\nconst USER_POSTS_QUERY_SUFFIX = `::posts::on`;\n\nexport const subscribeUserPosts = publicKey => async dispatch => {\n  console.info('subbing to posts from:'+publicKey)\n  const subscription = await rifle({\n    query: publicKey + USER_POSTS_QUERY_SUFFIX,\n    onData: posts => {\n      console.debug(`posts from: ${publicKey}: `, posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n      const deletedPosts = postEntries\n        .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      newPosts.forEach(async function fetchAndDispatchPost(id) {\n        try {\n          const { data: post } = await Http.get(\n            `/api/gun/otheruser/${publicKey}/load/posts>${id}`\n          );\n          console.info(`processing post: ${id} from ${publicKey}`)\n          console.info(post)\n\n          dispatch({\n            type: ACTIONS.ADD_USER_POST,\n            data: {\n              ...post.data,\n              id,\n              authorId: publicKey,\n              type: \"post\"\n            }\n          });\n        } catch (e) {\n          console.error(\n            `When subscribed to posts from public key --| ${publicKey} |-- and trying to download the post with id: --| ${id} |-- an error ocurred:`,\n            e\n          );\n        }\n      });\n\n      deletedPosts.forEach(id =>\n        dispatch({\n          type: ACTIONS.DELETE_USER_POST,\n          data: {\n            id,\n            authorId: publicKey,\n            type: \"post\"\n          }\n        })\n      );\n    }\n  });\n  return subscription;\n};\n\nexport const unsubUserPosts = publicKey => async () => {\n  console.info('unsubbing to posts from:'+publicKey)\n  unsubscribeRifleByQuery(publicKey + USER_POSTS_QUERY_SUFFIX);\n};\n\nconst USER_SHARED_POSTS_QUERY_SUFFIX = `::sharedPosts::on`;\n\nexport const subscribeSharedUserPosts = publicKey => async dispatch => {\n  const subscription = await rifle({\n    query: publicKey + USER_SHARED_POSTS_QUERY_SUFFIX,\n    onData: posts => {\n      console.debug(`shared posts from ${publicKey}: `, posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n      const deletedPosts = postEntries\n        .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      newPosts.forEach(async function fetchAndDispatchSharedPost(id) {\n        try {\n          const res = await Http.get(\n            `/api/gun/otheruser/${publicKey}/load/sharedPosts>${id}`\n          );\n\n          /** @type {import('shock-common').SharedPostRaw} */\n          const post = res.data.data;\n\n          /** @type {import('../schema').SharedPost} */\n          const processedPost = {\n            authorId: publicKey,\n            id,\n            originalAuthor: post.originalAuthor,\n            shareDate: post.shareDate,\n            sharerId: publicKey,\n            originalPost: undefined,\n            type: \"shared\"\n          };\n          dispatch({\n            type: ACTIONS.ADD_USER_POST,\n            data: processedPost\n          });\n\n          console.debug(\"dispatching shared post load\");\n          dispatch(loadSharedPost(id, post.originalAuthor, publicKey));\n        } catch (e) {\n          console.error(\n            `When subscribed to shared posts from public key --| ${publicKey} |-- and trying to download the shared post with id: --| ${id} |-- an error ocurred:`,\n            e\n          );\n        }\n      });\n\n      deletedPosts.forEach(id =>\n        dispatch({\n          type: ACTIONS.DELETE_USER_POST,\n          data: {\n            id,\n            authorId: publicKey\n          }\n        })\n      );\n    }\n  });\n  return subscription;\n};\n\nexport const unsubUserSharedPosts = publicKey => () => {\n  unsubscribeRifleByQuery(publicKey + USER_SHARED_POSTS_QUERY_SUFFIX);\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async dispatch => {\n  const subscription = await rifle({\n    query: FOLLOWS_QUERY,\n    reconnect: true,\n    onData: async (follow, key) => {\n      console.info(`processing follow`)\n      console.info(follow)\n      if (typeof key !== \"string\") {\n        console.warn(`Invalid follow key received: ${key}`);\n        return;\n      }\n\n      if (!follow) {\n        dispatch(removeFollow(key));\n        return;\n      }\n\n      if (typeof follow.user !== \"string\") {\n        console.warn(`Invalid follow user received (${follow.user})`);\n        return;\n      }\n\n      dispatch(addFollow(follow));\n    }\n  });\n\n  console.debug(\"subbing follows\");\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  unsubscribeRifleByQuery(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n","import * as Common from \"shock-common\";\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  type: \"post\";\n}\n\n/**\n * Different from the one in shock-common.\n */\nexport interface SharedPost extends Common.SharedPostRaw {\n  authorId: string;\n  sharerId: string;\n  id: string;\n  type: \"shared\";\n  /**\n   * Undefined when loading it.\n   */\n  originalPost?: Post;\n}\n\nexport const isSharedPost = (post: any): post is SharedPost => {\n  if (!Common.isObj(post)) {\n    return false;\n  }\n\n  const obj = (post as unknown) as SharedPost;\n\n  if (typeof obj.authorId !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.id !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.originalAuthor !== \"string\") {\n    return false;\n  }\n\n  return obj.type === \"shared\";\n};\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangingKeypair = null;\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(`/api/encryption/exchange`, {\n      publicKey: keyPair.publicKeyBase64,\n      deviceId\n    });\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n\nexport const throttledExchangeKeyPair = () => async dispatch => {\n  try {\n    if (!exchangingKeypair) {\n      exchangingKeypair = dispatch(exchangeKeyPair());\n    }\n\n    const result = await exchangingKeypair;\n\n    // eslint-disable-next-line require-atomic-updates\n    exchangingKeypair = null;\n\n    return result;\n  } catch (err) {\n    console.error(err);\n    exchangingKeypair = null;\n    throw err;\n  }\n};\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\nexport const setSource = source => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_SOURCE,\n    data: source\n  });\n\n  return source;\n};\n\nexport const setRate = rate => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_RATE,\n    data: rate\n  });\n\n  return rate;\n};\n","export const GUN_PROPS = [\"_\", \"#\"];\n","import * as React from \"react\";\n\nexport function useForceUpdate(): () => void {\n  const [, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return update;\n}\n","import * as Common from \"shock-common\";\n\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not a url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n"],"sourceRoot":""}