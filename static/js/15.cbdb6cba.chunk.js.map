{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/MainNav/index.js","utils/Number.js","common/AddBtn/index.js","pages/Advanced/components/Transaction/index.js","pages/Advanced/components/Channel/index.js","pages/Advanced/components/Peer/index.js","pages/Advanced/components/AddPeerModal/index.js","pages/Advanced/components/AddChannelModal/index.js","pages/Advanced/components/InfoModal/InfoModal.tsx","pages/Advanced/index.js"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","disableBackdropClose","closeModal","useCallback","handleBackdropClick","classNames","modal","open","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","disabled","group","fas","MainNav","pageTitle","absolute","solid","enableBackButton","onHeight","Utils","dispatch","useDispatch","goBack","window","history","back","openDrawer","gunPublicKey","useSelector","node","publicKey","divRefCb","el","getBoundingClientRect","height","e","console","log","ref","COMMA_REGEX","SAT_DENOMINATION","_addCommas","number","test","replace","formatNumber","split","decimal","formattedNumber","formattedDecimal","convertSatsToUSD","sats","USDRate","confirmedBalanceBTC","Big","div","toString","times","AddBtn","icon","iconURL","undefined","nestedMode","large","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","Transaction","hash","date","unconfirmed","wallet","sanitizedValue","USDValue","toFixed","formattedDate","DateTime","fromSeconds","parseInt","toRelative","display","marginLeft","color","Channel","address","sendable","receivable","active","pendingStatus","formattedSendable","formattedReceivable","Peer","sent","received","formattedSent","formattedReceived","AddPeerModal","loading","setLoading","host","setHost","setPublicKey","error","setError","onInputChange","target","onSubmit","a","preventDefault","connectPeer","errorMessage","message","Loader","overlay","text","AddChannelModal","channelCapacity","setChannelCapacity","pushAmount","setPushAmount","loadFeeRates","openChannel","InfoModal","React","nodeInfo","setNodeInfo","useEffect","get","then","res","data","LNDStatus","catch","alert","modalContent","synced_to_chain","Pad","amt","synced_to_graph","navigator","clipboard","writeText","identity_pubkey","toast","dark","slice","uris","join","length","num_pending_channels","block_height","best_header_timestamp","version","AdvancedPage","selectedAccordion","setSelectedAccordion","page","addPeerOpen","setAddPeerOpen","addChannelOpen","setAddChannelOpen","infoModalOpen","toggleInfoModal","pendingChannels","setPendingChannels","confirmedBalance","Store","channelBalance","transactions","channels","peers","reset","fetchTransactions","fetchInvoices","fetchChannels","fetchPeers","Http","makeChanObj","ch","remote_pubkey","remote_node_pub","remote_balance","local_balance","ip","pending","pending_open_channels","forEach","chan","channel","push","waiting_close_channels","pending_force_closing_channels","confirmedBalanceUSD","channelBalanceUSD","openAccordion","accordion","toggleAddPeerOpen","toggleAddChannelOpen","openTransactionsAccordion","openPeersAccordion","openChannelsAccordion","paddingBottom","content","map","transaction","time_stamp","tx_hash","amount","num_confirmations","peer","pub_key","sat_sent","sat_recv","chan_id"],"mappings":"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","file":"static/js/15.cbdb6cba.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      <div className=\"head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {},\n  disableBackdropClose = false\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  const handleBackdropClick = useCallback(() => {\n    if (!disableBackdropClose) {\n      toggleModal();\n    }\n  }, [disableBackdropClose, toggleModal]);\n  return (\n    <div className={classNames({ modal: true, open: modalOpen })}>\n      <div className=\"backdrop\" onClick={handleBackdropClick} />\n      <div className=\"container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label,\n  name,\n  onChange,\n  inputAction,\n  actionIcon,\n  value,\n  inputMode = \"text\",\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","// @ts-check\nimport { useCallback } from \"react\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as Utils from \"../../utils\";\nimport { openDrawer } from \"../../actions/DrawerActions\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport { useSelector } from \"../../store\";\n\nconst MainNav = ({\n  pageTitle,\n  absolute = false,\n  solid = false,\n  enableBackButton = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const dispatch = useDispatch();\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  const open = useCallback(() => {\n    dispatch(openDrawer());\n  }, [dispatch]);\n\n  const gunPublicKey = useSelector(({ node }) => node.publicKey);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in MainNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className={classNames({\n        \"main-nav-container\": true,\n        \"main-nav-absolute\": absolute,\n        \"main-nav-solid\": solid\n      })}\n      ref={divRefCb}\n    >\n      {enableBackButton ? (\n        <div className=\"main-nav-back\" onClick={goBack}>\n          <i className=\"icon icon-thin-back\"></i>\n        </div>\n      ) : (\n        <ShockAvatar height={40} publicKey={gunPublicKey} />\n      )}\n      <p className=\"main-nav-title unselectable\">{pageTitle}</p>\n      <div className=\"main-nav-menu-btn\" onClick={open}>\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default MainNav;\n","// Use Big.js to avoid large number inaccuracy issues\nimport Big from \"big.js\";\n\nconst COMMA_REGEX = /(\\d+)(\\d{3})/gi;\n\nexport const SAT_DENOMINATION = 100000000;\n\nconst _addCommas = number => {\n  const test = COMMA_REGEX.test(number);\n\n  if (test) {\n    const newNumber = number.replace(COMMA_REGEX, \"$1,$2\");\n    return _addCommas(newNumber);\n  }\n\n  return number;\n};\n\nexport const formatNumber = (value = \"\") => {\n  const [number, decimal] = value.split(\".\");\n  const formattedNumber = _addCommas(number);\n  const formattedDecimal = decimal ? \".\" + decimal : \"\";\n\n  return formattedNumber + formattedDecimal;\n};\n\nexport const convertSatsToUSD = (sats, USDRate = \"0\") => {\n  //console.debug(`Converting ${sats} Sats to USD (${USDRate})`);\n  const confirmedBalanceBTC = Big(sats).div(SAT_DENOMINATION).toString();\n\n  return Big(USDRate?.toString() || \"0\").times(confirmedBalanceBTC);\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import { DateTime } from \"luxon\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { convertSatsToUSD, formatNumber } from \"../../../../utils/Number\";\nimport \"./css/index.scoped.css\";\n\nconst Transaction = ({ hash, value, date, unconfirmed }) => {\n  const USDRate = useSelector(({ wallet }) => wallet.USDRate ?? \"0\");\n  const sanitizedValue = value.replace(/,/g, \"\");\n  const USDValue = formatNumber(\n    convertSatsToUSD(sanitizedValue, USDRate).toFixed(2)\n  );\n  const formattedDate = date\n    ? DateTime.fromSeconds(parseInt(date, 10)).toRelative()\n    : \"unknown\";\n\n  return (\n    <div className=\"advanced-transaction-container\">\n      <div className=\"advanced-transaction-info\">\n        <div className=\"advanced-transaction-avatar\"></div>\n        <div className=\"advanced-transaction-author\">\n          <p className=\"advanced-transaction-author-name\">{hash}</p>\n          <div style={{ display: \"flex\" }}>\n            <p className=\"advanced-transaction-type\">Payment</p>\n            {unconfirmed && (\n              <i\n                className=\"far fa-clock\"\n                style={{ marginLeft: \"0.5rem\", color: \"red\" }}\n              ></i>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"advanced-transaction-value-container\">\n        <p className=\"advanced-transaction-time\">{formattedDate}</p>\n        <p className=\"advanced-transaction-value\">{value}</p>\n        <p className=\"advanced-transaction-usd\">{USDValue} USD</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Transaction;\n","// @ts-check\nimport { useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport { formatNumber } from \"../../../../utils/Number\";\nimport \"./css/index.scoped.css\";\n\nconst Channel = ({\n  address,\n  // ip = null,\n  sendable,\n  receivable,\n  active,\n  pendingStatus = \"\"\n}) => {\n  const formattedSendable = useMemo(() => formatNumber(sendable), [sendable]);\n  const formattedReceivable = useMemo(() => formatNumber(receivable), [\n    receivable\n  ]);\n  return (\n    <div className=\"advanced-channel-container\">\n      {/* <div className=\"advanced-channel-ip\"></div> */}\n      <div className=\"advanced-channel-name-container\">\n        {/* <p className=\"advanced-channel-name\">IP: {ip ?? \"N/A\"}</p> */}\n        <div\n          className={classNames({\n            \"advanced-channel-status\": true,\n            \"advanced-channel-status-offline\": !active\n          })}\n        ></div>\n        <p style={{ marginLeft: \"0.5rem\" }}>{pendingStatus}</p>\n      </div>\n      <p className=\"advanced-channel-address\">Address: {address}</p>\n      <div className=\"advanced-channel-capacity-container\">\n        <div className=\"advanced-channel-capacity\">\n          Sendable: {formattedSendable} sats\n        </div>\n        <div className=\"advanced-channel-capacity\">\n          Receivable: {formattedReceivable} sats\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Channel;\n","import React from \"react\";\nimport { formatNumber } from \"../../../../utils/Number\";\nimport \"./css/index.scoped.css\";\n\nconst Peer = ({ sent, received, address, publicKey }) => {\n  const formattedSent = formatNumber(sent.toString());\n  const formattedReceived = formatNumber(received.toString());\n\n  return (\n    <div className=\"advanced-transaction-container\">\n      <div className=\"advanced-transaction-info\">\n        <div className=\"advanced-transaction-avatar\"></div>\n        <div className=\"advanced-transaction-author\">\n          <p className=\"advanced-peer-address\">{address}</p>\n          <p className=\"advanced-peer-public-key\">\n            {publicKey ?? \"Unknown public key\"}\n          </p>\n        </div>\n      </div>\n      <div className=\"advanced-peer-value-container\">\n        <p className=\"advanced-peer-value\">\n          <span className=\"peer-value-title\">Sent:</span> {formattedSent}\n        </p>\n        <p className=\"advanced-peer-value\">\n          <span className=\"peer-value-title\">Received:</span>{\" \"}\n          {formattedReceived}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Peer;\n","import React, { useCallback, useState } from \"react\";\nimport Modal from \"../../../../common/Modal\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport \"./css/index.scoped.css\";\nimport { connectPeer } from \"../../../../actions/WalletActions\";\nimport { useDispatch } from \"react-redux\";\nimport Loader from \"../../../../common/Loader\";\n\nconst AddPeerModal = ({ open = false, toggleModal }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [host, setHost] = useState(\"\");\n  const [publicKey, setPublicKey] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onInputChange = useCallback(e => {\n    const { name, value } = e.target;\n    if (name === \"publicKey\") {\n      setPublicKey(value);\n    }\n\n    if (name === \"host\") {\n      setHost(value);\n    }\n  }, []);\n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      setLoading(true);\n      try {\n        await dispatch(connectPeer({ publicKey, host }));\n        toggleModal();\n      } catch (err) {\n        setError(err?.errorMessage ?? err?.message);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, publicKey, host, toggleModal]\n  );\n\n  return (\n    <Modal toggleModal={toggleModal} modalOpen={open} modalTitle=\"ADD PEER\">\n      <form className=\"modal-form\" onSubmit={onSubmit}>\n        {error ? <div className=\"form-error\">{error}</div> : null}\n        {loading ? <Loader overlay text=\"Adding Peer...\" /> : null}\n        <InputGroup\n          onChange={onInputChange}\n          name=\"publicKey\"\n          label=\"Public Key\"\n          value={publicKey}\n          small\n        />\n        <InputGroup\n          onChange={onInputChange}\n          name=\"host\"\n          label=\"Host IP\"\n          value={host}\n          small\n        />\n        <div className=\"modal-submit-container\">\n          <button className=\"modal-submit-btn\" type=\"submit\">\n            ADD PEER\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default AddPeerModal;\n","import React, { useCallback, useState } from \"react\";\nimport Modal from \"../../../../common/Modal\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport \"./css/index.scoped.css\";\nimport { connectPeer, openChannel } from \"../../../../actions/WalletActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../../../common/Loader\";\nimport { loadFeeRates } from \"../../../../actions/FeesActions\";\n\nconst AddChannelModal = ({ open = false, toggleModal }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [channelCapacity, setChannelCapacity] = useState(\"\");\n  const [pushAmount, setPushAmount] = useState(\"\");\n  const [publicKey, setPublicKey] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onInputChange = useCallback(e => {\n    const { name, value } = e.target;\n    if (name === \"publicKey\") {\n      setPublicKey(value);\n    }\n\n    if (name === \"pushAmount\") {\n      setPushAmount(value);\n    }\n\n    if (name === \"channelCapacity\") {\n      setChannelCapacity(value);\n    }\n  }, []);\n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      setLoading(true);\n      try {\n        await dispatch(loadFeeRates());\n        await dispatch(openChannel({ publicKey, channelCapacity, pushAmount }));\n        toggleModal();\n      } catch (err) {\n        setError(err?.errorMessage ?? err?.message);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, publicKey, channelCapacity, pushAmount, toggleModal]\n  );\n\n  return (\n    <Modal toggleModal={toggleModal} modalOpen={open} modalTitle=\"OPEN CHANNEL\">\n      <form className=\"modal-form\" onSubmit={onSubmit}>\n        {error ? <div className=\"form-error\">{error}</div> : null}\n        {loading ? <Loader overlay text=\"Adding Peer...\" /> : null}\n        <InputGroup\n          onChange={onInputChange}\n          name=\"publicKey\"\n          label=\"Node Public Key\"\n          value={publicKey}\n          small\n        />\n        <InputGroup\n          onChange={onInputChange}\n          name=\"channelCapacity\"\n          label=\"Channel Capacity (sats)\"\n          value={channelCapacity}\n          inputMode=\"number\"\n          small\n        />\n        <InputGroup\n          onChange={onInputChange}\n          name=\"pushAmount\"\n          label=\"Push Amount (sats)\"\n          value={pushAmount}\n          inputMode=\"number\"\n          small\n        />\n        <div className=\"modal-submit-container\">\n          <button className=\"modal-submit-btn\" type=\"submit\">\n            OPEN CHANNEL\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default AddChannelModal;\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport * as Schema from \"../../../../schema\";\nimport * as Utils from \"../../../../utils\";\nimport ShockModal from \"../../../../common/Modal\";\nimport Pad from \"../../../../common/Pad\";\n\nimport \"./InfoModal.scoped.css\";\n\nexport interface InfoModalProps {\n  modalOpen: boolean;\n  toggleModal(): void;\n}\n\nconst InfoModal = ({ modalOpen, toggleModal }: InfoModalProps) => {\n  const [nodeInfo, setNodeInfo] = React.useState<Schema.NodeInfo | null>(null);\n\n  React.useEffect(() => {\n    if (modalOpen) {\n      Utils.Http.get(\"/healthz\")\n        .then(res => {\n          setNodeInfo(res.data.LNDStatus.message);\n        })\n        .catch(e => {\n          Utils.logger.error(\n            `Error while fetching node info inside <InfoModal /> -> `,\n            e\n          );\n          alert(`Error while fetching node info: ${e.message}`);\n        });\n    }\n  }, [modalOpen]);\n\n  let modalContent = <span>Loading...</span>;\n\n  if (nodeInfo) {\n    modalContent = (\n      <div className=\"container\">\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Synced to Chain</span>\n\n          {nodeInfo.synced_to_chain ? (\n            <i className=\"fas fa-check icon\" />\n          ) : (\n            <i className=\"far fa-clock icon\" />\n          )}\n        </div>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Synced to Graph</span>\n\n          {nodeInfo.synced_to_graph ? (\n            <i className=\"fas fa-check icon\" />\n          ) : (\n            <i className=\"far fa-clock icon\" />\n          )}\n        </div>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Lightning PubKey:</span>\n\n          <i\n            className=\"far fa-copy icon cursor-pointer\"\n            onClick={() => {\n              try {\n                navigator.clipboard.writeText(nodeInfo.identity_pubkey);\n                toast.dark(\"Copied to clipboard\");\n              } catch (e) {\n                alert(e.message);\n              }\n            }}\n          />\n        </div>\n\n        <span className=\"data pubKey\">\n          {/* poor man's ellipsis */}\n          ...{nodeInfo.identity_pubkey.slice(-14)}\n        </span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Uris</span>\n\n          <i\n            className=\"far fa-copy icon cursor-pointer\"\n            onClick={() => {\n              try {\n                navigator.clipboard.writeText(nodeInfo.uris.join(\" , \"));\n                toast.dark(\"Copied to clipboard\");\n              } catch (e) {\n                alert(e.message);\n              }\n            }}\n          />\n        </div>\n\n        <span className=\"data\">\n          {`Number of Uris: ${nodeInfo.uris.length.toString()}`}\n        </span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Pending Channels:</span>\n        </div>\n\n        <span className=\"data\">{nodeInfo.num_pending_channels.toString()}</span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Block Height:</span>\n        </div>\n\n        <span className=\"data\">{nodeInfo.block_height.toString()}</span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Block Height:</span>\n        </div>\n\n        <span className=\"data\">{nodeInfo.block_height.toString()}</span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">Best Header Timestamp:</span>\n        </div>\n\n        <span className=\"data\">{nodeInfo.best_header_timestamp}</span>\n\n        <Pad amt={45} />\n\n        <div className=\"subtitle-and-icon-holder\">\n          <span className=\"subtitle\">LND Version</span>\n        </div>\n\n        <span className=\"data\">{nodeInfo.version}</span>\n\n        <Pad amt={45} />\n\n        <div\n          className=\"btn\"\n          onClick={() => {\n            alert(\"Coming soon\");\n          }}\n        >\n          <span className=\"btn-text\">Download Backup</span>\n        </div>\n\n        <Pad amt={18} />\n\n        <span className=\"footer\">\n          <span className=\"warning\">Warning: </span> Consult documentation\n          before use.\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <ShockModal\n      modalOpen={modalOpen}\n      toggleModal={toggleModal}\n      modalTitle=\"Node Info\"\n    >\n      <Pad amt={50} />\n\n      {modalContent}\n    </ShockModal>\n  );\n};\n\nexport default InfoModal;\n","// @ts-check\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\nimport {\n  fetchChannels,\n  fetchInvoices,\n  fetchPeers,\n  fetchTransactions\n} from \"../../actions/WalletActions\";\nimport { convertSatsToUSD, formatNumber } from \"../../utils/Number\";\nimport MainNav from \"../../common/MainNav\";\nimport AddBtn from \"../../common/AddBtn\";\n// import Invoice from \"./components/Invoice\";\nimport Transaction from \"./components/Transaction\";\nimport Channel from \"./components/Channel\";\nimport Peer from \"./components/Peer\";\nimport AddPeerModal from \"./components/AddPeerModal\";\nimport AddChannelModal from \"./components/AddChannelModal\";\nimport InfoModal from \"./components/InfoModal\";\nimport * as Utils from \"../../utils\";\nimport Http from \"../../utils/Http\";\nimport * as Store from \"../../store\";\nimport \"./css/index.scoped.css\";\n\n/**\n * @typedef {Channel & { pendingStatus: string , ip: string }} PendingChannel\n */\n\nconst AdvancedPage = () => {\n  const [selectedAccordion, setSelectedAccordion] = useState(\"transactions\");\n  const [page] = useState(1);\n  const [addPeerOpen, setAddPeerOpen] = useState(false);\n  const [addChannelOpen, setAddChannelOpen] = useState(false);\n  const [infoModalOpen, toggleInfoModal] = Utils.useBooleanState(false);\n\n  const [pendingChannels, setPendingChannels] = useState(\n    /** @type {readonly PendingChannel[]} */ ([])\n  );\n\n  const dispatch = useDispatch();\n  const confirmedBalance = Store.useSelector(\n    ({ wallet }) => wallet.confirmedBalance\n  );\n  const channelBalance = Store.useSelector(\n    ({ wallet }) => wallet.channelBalance\n  );\n  const transactions = Store.useSelector(({ wallet }) => wallet.transactions);\n  // const invoices = Store.useSelector(({ wallet }) => wallet.invoices);\n  const channels = Store.useSelector(({ wallet }) => wallet.channels);\n  const peers = Store.useSelector(({ wallet }) => wallet.peers);\n  const USDRate = Store.useSelector(({ wallet }) => wallet.USDRate);\n\n  useEffect(() => {\n    const reset = page === 1;\n    dispatch(fetchTransactions({ page, reset }));\n    dispatch(fetchInvoices({ page, reset }));\n    dispatch(fetchChannels());\n    dispatch(fetchPeers());\n  }, [page, dispatch]);\n\n  //effect to load pending channels, no need to keep them in redux\n  useEffect(() => {\n    Http.get(\"/api/lnd/pendingchannels\").then(({ data }) => {\n      console.log(\"pending channels:\");\n      console.log(data);\n      const makeChanObj = (ch, pendingStatus) => ({\n        remote_pubkey: ch.remote_node_pub,\n        remote_balance: ch.remote_balance,\n        local_balance: ch.local_balance,\n        ip: \"\",\n        active: false,\n        pendingStatus\n      });\n      const pending = [];\n      data.pending_open_channels.forEach(chan => {\n        const { channel } = chan;\n        pending.push(makeChanObj(channel, \"Pending Open\"));\n      });\n      data.waiting_close_channels.forEach(chan => {\n        const { channel } = chan;\n        pending.push(makeChanObj(channel, \"Pending Close\"));\n      });\n      data.pending_force_closing_channels.forEach(chan => {\n        const { channel } = chan;\n        pending.push(makeChanObj(channel, \"Pending Force Close\"));\n      });\n      setPendingChannels(pending);\n    });\n  }, []);\n\n  const confirmedBalanceUSD = useMemo(\n    () => formatNumber(convertSatsToUSD(confirmedBalance, USDRate).toFixed(2)),\n    [USDRate, confirmedBalance]\n  );\n  const channelBalanceUSD = useMemo(\n    () => formatNumber(convertSatsToUSD(channelBalance, USDRate).toFixed(2)),\n    [USDRate, channelBalance]\n  );\n\n  const openAccordion = useCallback(accordion => {\n    setSelectedAccordion(accordion);\n  }, []);\n\n  const toggleAddPeerOpen = useCallback(() => {\n    setAddPeerOpen(!addPeerOpen);\n  }, [addPeerOpen]);\n\n  const toggleAddChannelOpen = useCallback(() => {\n    setAddChannelOpen(!addChannelOpen);\n  }, [addChannelOpen]);\n\n  const openTransactionsAccordion = useCallback(() => {\n    openAccordion(\"transactions\");\n  }, [openAccordion]);\n\n  const openPeersAccordion = useCallback(() => {\n    openAccordion(\"peers\");\n  }, [openAccordion]);\n\n  // const openInvoicesAccordion = useCallback(() => {\n  //   openAccordion(\"invoices\");\n  // }, [openAccordion]);\n\n  const openChannelsAccordion = useCallback(() => {\n    openAccordion(\"channels\");\n  }, [openAccordion]);\n\n  return (\n    <div className=\"page-container advanced-page\">\n      <div className=\"advanced-header\">\n        <MainNav absolute pageTitle=\"ADVANCED\" enableBackButton={false} />\n        <div className=\"advanced-balance-container\">\n          <div className=\"advanced-balance-icon-container\">\n            <i className=\"advanced-balance-icon fas fa-link\"></i>\n          </div>\n          <div className=\"advanced-balance-btc-container\">\n            <p className=\"advanced-balance-btc\">\n              {formatNumber(confirmedBalance)}\n            </p>\n            <p className=\"advanced-balance-usd\">{confirmedBalanceUSD} USD</p>\n          </div>\n        </div>\n        <div\n          className=\"advanced-balance-container\"\n          style={{ paddingBottom: 25 }}\n        >\n          <div className=\"advanced-balance-icon-container\">\n            <i className=\"advanced-balance-icon fas fa-bolt\"></i>\n          </div>\n          <div className=\"advanced-balance-btc-container\">\n            <p className=\"advanced-balance-btc\">\n              {formatNumber(channelBalance)}\n            </p>\n            <p className=\"advanced-balance-usd\">{channelBalanceUSD} USD</p>\n          </div>\n        </div>\n        <span className=\"open-info-btn\" onClick={toggleInfoModal}>\n          Node Info <i className=\"fas fa-info-circle\" />\n        </span>\n      </div>\n      <div className=\"advanced-accordions-container\">\n        <div\n          className={classNames({\n            \"advanced-accordion-container\": true,\n            \"accordion-open\": selectedAccordion === \"transactions\"\n          })}\n        >\n          <div\n            className=\"advanced-accordion-header\"\n            onClick={openTransactionsAccordion}\n          >\n            <p className=\"advanced-accordion-title\">Transactions</p>\n          </div>\n          <div className=\"advanced-accordion-content-container\">\n            <div className=\"advanced-accordion-content\">\n              {transactions.content.map(transaction => (\n                <Transaction\n                  date={transaction.time_stamp}\n                  hash={transaction.tx_hash}\n                  value={formatNumber(transaction.amount)}\n                  key={transaction.tx_hash}\n                  unconfirmed={transaction.num_confirmations === 0}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n        <div\n          className={classNames({\n            \"advanced-accordion-container\": true,\n            \"accordion-open\": selectedAccordion === \"peers\"\n          })}\n        >\n          <div\n            className=\"advanced-accordion-header\"\n            onClick={openPeersAccordion}\n          >\n            <p className=\"advanced-accordion-title\">Peers</p>\n          </div>\n          <div className=\"advanced-accordion-content-container\">\n            <div className=\"advanced-accordion-content\">\n              {peers.map(peer => (\n                <Peer\n                  address={peer.address}\n                  publicKey={peer.pub_key}\n                  sent={peer.sat_sent}\n                  received={peer.sat_recv}\n                  key={peer.address + peer.pub_key}\n                />\n              ))}\n            </div>\n            <AddBtn nestedMode relative>\n              <AddBtn\n                label=\"ADD PEER\"\n                onClick={toggleAddPeerOpen}\n                icon=\"link\"\n              />\n            </AddBtn>\n          </div>\n        </div>\n        {/* <div\n          className={classNames({\n            \"advanced-accordion-container\": true,\n            \"accordion-open\": selectedAccordion === \"invoices\"\n          })}\n        >\n          <div\n            className=\"advanced-accordion-header\"\n            onClick={openInvoicesAccordion}\n          >\n            <p className=\"advanced-accordion-title\">Invoices</p>\n          </div>\n          <div className=\"advanced-accordion-content-container\">\n            <div className=\"advanced-accordion-content\">\n              {invoices.content\n                .slice()\n                .reverse()\n                .map(invoice => (\n                  <Invoice\n                    paymentRequest={invoice.payment_request}\n                    date={invoice.creation_date}\n                    value={formatNumber(invoice.value)}\n                    message={invoice.memo}\n                    key={invoice.payment_request}\n                  />\n                ))}\n            </div>\n          </div>\n        </div> */}\n        <div\n          className={classNames({\n            \"advanced-accordion-container\": true,\n            \"accordion-open\": selectedAccordion === \"channels\"\n          })}\n        >\n          <div\n            className=\"advanced-accordion-header\"\n            onClick={openChannelsAccordion}\n          >\n            <p className=\"advanced-accordion-title\">Channels</p>\n          </div>\n          <div className=\"advanced-accordion-content-container\">\n            <div className=\"advanced-accordion-content\">\n              {channels.map(channel => (\n                <Channel\n                  address={channel.remote_pubkey}\n                  receivable={channel.remote_balance}\n                  sendable={channel.local_balance}\n                  active={channel.active}\n                  key={channel.chan_id}\n                />\n              ))}\n              {pendingChannels.map(channel => (\n                <Channel\n                  address={channel.remote_pubkey}\n                  receivable={channel.remote_balance}\n                  sendable={channel.local_balance}\n                  active={channel.active}\n                  key={channel.chan_id}\n                  pendingStatus={channel.pendingStatus}\n                />\n              ))}\n              <AddBtn nestedMode relative>\n                <AddBtn\n                  label=\"ADD CHANNEL\"\n                  small\n                  onClick={toggleAddChannelOpen}\n                  icon=\"exchange-alt\"\n                />\n              </AddBtn>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AddPeerModal open={addPeerOpen} toggleModal={toggleAddPeerOpen} />\n      <AddChannelModal\n        open={addChannelOpen}\n        toggleModal={toggleAddChannelOpen}\n      />\n      <InfoModal modalOpen={infoModalOpen} toggleModal={toggleInfoModal} />\n    </div>\n  );\n};\n\nexport default AdvancedPage;\n"],"sourceRoot":""}