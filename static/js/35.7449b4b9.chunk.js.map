{"version":3,"sources":["utils/Cache.js","utils/Promise.js","utils/Torrents.js","utils/Constants.ts","pages/Feed/css/Feed.module.css","pages/Feed/index.js"],"names":["getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","console","log","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","length","forEach","element","src","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","Object","values","reduce","supportedFormats","fileType","file","extension","name","split","slice","entries","filter","includes","supportedFileType","webTorrentClient","initializeClient","WebTorrent","default","showDynamicThumbnail","thumbnailFile","item","thumbnailFileType","thumbnailTarget","magnetURI","dynamicThumbnailTarget","querySelector","classList","add","remove","getCacheId","id","key","renderTorrent","type","torrentMode","torrent","target","torrentElements","torrentElement","contains","contentURL","decodeURIComponent","replace","format","toLowerCase","endsWith","compatibleURL","setAttribute","renderTo","getThumbnailRenderer","thumbnailFileNames","getCacheFileName","thumbnails","sanitizedName","join","thumbnailName","thumbnailIndex","indexOf","cachedThumbnail","attachMedia","posts","all","map","post","contentItems","supportedItems","get","files","match","renderThumbnail","destroy","on","getBlob","err","blob","dataset","played","getAttribute","torrentTasks","torrents","detachTorrent","DEFAULT_FOLLOWS","user","private","module","exports","Post","React","lazy","SharedPost","FeedPage","dispatch","Store","history","useHistory","authenticated","auth","authToken","node","follows","useState","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","shareModalData","setShareModalData","tipPublicKey","setTipPublicKey","selfPublicKey","publicKey","reloadDone","feed","useEffect","subscribeFollows","unsubscribeFollows","reloadFollows","toggleTipModal","useCallback","tipData","toggleUnlockModal","unlockData","toggleShareModal","shareData","redirectAuth","push","subscriptions","follow","profileSubscription","subscribeUserProfile","postsSubscription","subscribeUserPosts","sharedPostsSubscription","subSharedPosts","unsubscribe","reloadFeed","setTimeout","go","className","styles","followed","forceAddBtn","height","createsPost","nameAtBottom","text","Common","fallback","openTipModal","openUnlockModal","openShareModal","postID","originalPostID","sharerPublicKey","sharedBy","shareID","authorId","toggleOpen","onClick","large","icon","label"],"mappings":"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","file":"static/js/35.7449b4b9.chunk.js","sourcesContent":["import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = false;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nexport const supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: false,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nexport const supportedFormats = Object.values(supportedFileTypes).reduce(\n  (supportedFormats, fileType) => [...supportedFormats, ...fileType.formats],\n  []\n);\n\nconst _getFileType = file => {\n  if (!file) {\n    return null;\n  }\n\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const [supportedFileType] = Object.entries(supportedFileTypes).filter(\n    ([type, options]) => options.formats.includes(extension)\n  );\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport let webTorrentClient = null;\n\nexport const initializeClient = async () => {\n  if (!webTorrentClient) {\n    const WebTorrent = await import(\"webtorrent\");\n    webTorrentClient = new WebTorrent.default();\n  }\n\n  return webTorrentClient;\n};\n\nconst showDynamicThumbnail = ({ thumbnailFile, fileType, item }) => {\n  const thumbnailFileType = _getFileType(thumbnailFile);\n  const thumbnailTarget = `${\n    thumbnailFileType?.element ?? \"img\"\n  }[data-torrent=\"${item.magnetURI}\"]`;\n  const dynamicThumbnailTarget = `.dynamic-thumbnail[data-torrent=\"${item.magnetURI}\"]`;\n\n  if (!thumbnailFile && fileType.element === \"video\") {\n    document.querySelector(thumbnailTarget)?.classList.add(\"hidden\");\n    document.querySelector(dynamicThumbnailTarget)?.classList.remove(\"hidden\");\n  }\n};\n\nconst getCacheId =\n  ({ id, key }) =>\n  file =>\n    `${id}-${key}-${file.name}`;\n\nconst renderTorrent = ({ file, type, torrentMode, torrent }) => {\n  const element = type.element;\n  const target = `${element}[data-torrent=\"${torrent.magnetURI}\"]`;\n  const torrentElements = document.querySelectorAll(target);\n  console.log(\"Torrent Elements:\", torrentElements);\n  torrentElements.forEach(torrentElement => {\n    // Don't render hidden videos\n    if (torrentElement.classList.contains(\"hidden\")) {\n      return;\n    }\n    const contentURL = decodeURIComponent(\n      torrent.magnetURI.replace(/.*(ws=)/gi, \"\")\n    );\n    const [compatibleURL] = type.formats.filter(format =>\n      contentURL.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n    );\n\n    if (torrentMode || !compatibleURL) {\n      file.renderTo(torrentElement, type.options);\n      return;\n    }\n\n    torrentElement.setAttribute(\"src\", contentURL);\n  });\n};\n\nexport const isURLCompatible = ({ url, type = \"video/embedded\" }) => {\n  const fileType = supportedFileTypes[type];\n  const [compatibleURL] = fileType.formats.filter(format =>\n    url.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n  );\n\n  return !!compatibleURL;\n};\n\nconst getThumbnailRenderer =\n  ({ thumbnailFileNames, getCacheFileName, torrentMode }) =>\n  async ({ fileName, thumbnails, item, fileType }) => {\n    const sanitizedName = fileName.split(\".\").slice(0, -1).join(\".\");\n    const thumbnailName = `${sanitizedName}-thumb`;\n    const thumbnailIndex = thumbnailFileNames.indexOf(thumbnailName);\n    const thumbnailFile = thumbnails[thumbnailIndex];\n    const thumbnailFileType = thumbnailFile\n      ? _getFileType(thumbnailFile)\n      : null;\n    const thumbnailTarget = `${\n      thumbnailFileType?.element ?? \"img\"\n    }[data-torrent=\"${item.magnetURI}\"]`;\n\n    if (fileType.element === \"video\" && thumbnailFile) {\n      const cachedThumbnail = await getCachedFile(\n        getCacheFileName(thumbnailFile)\n      );\n\n      document.querySelector(thumbnailTarget)?.classList.remove(\"hidden\");\n\n      if (cachedThumbnail) {\n        renderCachedFile(cachedThumbnail, thumbnailTarget);\n        return;\n      }\n\n      renderTorrent({\n        file: thumbnailFile,\n        type: thumbnailFileType,\n        torrentMode,\n        torrent: item\n      });\n\n      return;\n    }\n\n    if (fileType.element === \"video\" && !thumbnailFile) {\n      showDynamicThumbnail({\n        thumbnailFile,\n        fileType,\n        item\n      });\n\n      return;\n    }\n\n    return {\n      thumbnailFile\n    };\n  };\n\nexport const attachMedia = async (posts = [], torrentMode = true) => {\n  const torrentTasks = await Promise.all(\n    posts.map(async post => {\n      const { contentItems, id } = post;\n      const supportedItems = Object.entries(contentItems).filter(\n        ([, item]) => supportedFileTypes[item.type]\n      );\n\n      if (!supportedItems) {\n        return [];\n      }\n\n      const webTorrentClient = await initializeClient();\n\n      return supportedItems.map(\n        ([key, item]) =>\n          () =>\n            new Promise(resolve => {\n              const getCacheFileName = getCacheId({ id, key });\n              const torrentExists = webTorrentClient.get(item.magnetURI);\n\n              if (torrentExists) {\n                resolve(true);\n                return;\n              }\n\n              webTorrentClient.add(item.magnetURI, async torrent => {\n                // Proceed to the next torrent in queue\n                resolve(true);\n\n                const files = torrent.files.filter(file => {\n                  const extension = file.name?.split(\".\")?.slice(-1)[0];\n                  const supportedFileType = Object.values(\n                    supportedFileTypes\n                  ).filter(options => options.formats.includes(extension))[0];\n                  if (supportedFileType) {\n                    const fileType = supportedFileType;\n                    const matched = fileType.formats.includes(extension);\n                    return matched;\n                  }\n                  return false;\n                });\n\n                const thumbnails = files.filter(file =>\n                  file.name.match(/-thumb\\.([\\w\\d]){2,4}$/gi)\n                );\n                const thumbnailFileNames = thumbnails.map(file =>\n                  file.name.replace(/\\.([\\w\\d]){2,4}$/gi, \"\")\n                );\n                const renderThumbnail = getThumbnailRenderer({\n                  getCacheFileName,\n                  thumbnailFileNames,\n                  torrentMode\n                });\n\n                files.map(async file => {\n                  // Skip thumbnails\n                  if (thumbnailFileNames.includes(file.name)) {\n                    return;\n                  }\n\n                  const fileType = _getFileType(file);\n\n                  if (!fileType) {\n                    return;\n                  }\n\n                  const fileName = getCacheFileName(file);\n\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                  const cachedFile = await getCachedFile(fileName);\n\n                  renderThumbnail({\n                    fileName: file.name,\n                    thumbnails,\n                    fileType,\n                    item\n                  });\n\n                  if (cachedFile) {\n                    const torrent = webTorrentClient.get(item.magnetURI);\n\n                    if (torrent) {\n                      torrent.destroy();\n                    }\n\n                    renderCachedFile(cachedFile, target);\n                    return;\n                  }\n\n                  renderTorrent({\n                    file,\n                    type: fileType,\n                    torrentMode,\n                    torrent: item\n                  });\n                });\n\n                torrent.on(\"done\", () => {\n                  files.map(file => {\n                    const fileType = _getFileType(file);\n                    const fileName = getCacheFileName(file);\n                    const element = fileType.element;\n                    const target = `${element}.torrent-video[data-torrent=\"${item.magnetURI}\"]`;\n\n                    file.getBlob(async (err, blob) => {\n                      if (err) {\n                        console.warn(err);\n                        return;\n                      }\n\n                      console.log(\"Caching loaded file...\", fileName, blob);\n                      await saveFile(fileName, blob);\n                      const element = document.querySelector(target);\n                      if (\n                        element?.dataset.played === \"false\" &&\n                        !element?.getAttribute(\"src\")\n                      ) {\n                        const cachedFile = await getCachedFile(fileName);\n                        renderCachedFile(cachedFile, target);\n                      }\n                    });\n                  });\n                });\n              });\n            })\n      );\n    })\n  );\n  const contentItems = torrentTasks.reduce(\n    (torrents, contentItems) => [...torrents, ...contentItems],\n    []\n  );\n\n  runSerial(contentItems);\n};\n\nexport const detachTorrent = async ({ magnetURI }) => {\n  const webTorrentClient = await initializeClient();\n  const torrent = webTorrentClient.get(magnetURI);\n\n  if (torrent) {\n    torrent.destroy();\n    return true;\n  }\n\n  return false;\n};\n","import * as Common from \"shock-common\";\n\nexport const DEFAULT_FOLLOWS: Common.Follow[] = [\n  {\n    // Lightning.Page\n    user: \"tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\",\n    status: \"ok\",\n    private: false\n  },\n  {\n    // Guy Swann\n    user: \"CDfURSDaABun7sbzxt1LvUrTrtgLza_3NrCKrmUWIYU.Ssr3U9JN6cpFI9BZLL-1HLM2vS0ECEt-H4iUXvhkGzU\",\n    status: \"ok\",\n    private: false\n  },\n  {\n    // JohnOnChain\n    user: \"Fd_7lUhwH7JoHbg6UKnGO9rYsZBOuR1KSbpZz8-Sbcw.fUu68TPuBWl83LBKgAbuiy0r1hMqnUevzyEgqPYu0B4\",\n    status: \"ok\",\n    private: false\n  }\n];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followed\":\"Feed_followed__1ZWr5\"};","// @ts-check\nimport React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useState\n} from \"react\";\nimport * as Common from \"shock-common\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { attachMedia } from \"../../utils/Torrents\";\nimport * as Store from \"../../store\";\nimport BottomBar from \"../../common/BottomBar\";\n\nimport SendTipModal from \"./components/SendTipModal\";\nimport ShareModal from \"../Feed/components/ShareModal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\n\nimport \"./css/index.scoped.css\";\nimport UnlockModal from \"./components/UnlockModal\";\nimport {\n  subscribeFollows,\n  subscribeUserPosts,\n  unsubscribeFollows,\n  reloadFeed,\n  subSharedPosts,\n  reloadFollows\n} from \"../../actions/FeedActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport styles from \"./css/Feed.module.css\";\nimport { DEFAULT_FOLLOWS } from \"../../utils/Constants\";\nimport GuestTipModal from \"../../common/TipModal\";\nimport AddBtn from \"../../common/AddBtn\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst FeedPage = () => {\n  const dispatch = Store.useDispatch();\n  const history = useHistory();\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const follows = Store.useSelector(Store.selectFollows);\n  const posts = Store.useSelector(\n    Store.selectAllPostsFromFollowedNewestToOldest\n  );\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [shareModalData, setShareModalData] = useState(null);\n  const [tipPublicKey, setTipPublicKey] = useState(null);\n  const { publicKey: selfPublicKey } = Store.useSelector(Store.selectSelfUser);\n  const reloadDone = Store.useSelector(({ feed }) => feed.reloadDone);\n  // Effect to sub follows\n  useEffect(() => {\n    dispatch(subscribeFollows());\n    return () => {\n      dispatch(unsubscribeFollows());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!authenticated) {\n      dispatch(reloadFollows(DEFAULT_FOLLOWS));\n    }\n  }, [authenticated, dispatch]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      console.log(tipData);\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n        setTipPublicKey(null);\n        return;\n      }\n\n      setTipModalOpen(tipData);\n      setTipPublicKey(tipData.publicKey);\n    },\n    [tipModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      console.log(unlockData);\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const toggleShareModal = useCallback(\n    shareData => {\n      console.log(shareData);\n      if (shareModalData || !shareData) {\n        setShareModalData(null);\n      }\n\n      setShareModalData(shareData);\n    },\n    [shareModalData]\n  );\n\n  const redirectAuth = useCallback(() => {\n    history.push(\"/auth\");\n  }, [history]);\n\n  useEffect(() => {\n    const subscriptions = follows.map(follow => {\n      const profileSubscription = dispatch(subscribeUserProfile(follow.user));\n      const postsSubscription = dispatch(subscribeUserPosts(follow.user));\n      const sharedPostsSubscription = dispatch(subSharedPosts(follow.user));\n\n      return () => {\n        profileSubscription();\n        postsSubscription();\n        sharedPostsSubscription();\n      };\n    });\n\n    return () => {\n      subscriptions.map(unsubscribe => unsubscribe());\n    };\n  }, [follows, dispatch]);\n\n  //effect to reload the feed once after a cache clear\n  useEffect(() => {\n    if (posts.length > 0 && !reloadDone) {\n      dispatch(reloadFeed());\n      setTimeout(() => {\n        history.go(0);\n      }, 3000);\n    }\n  }, [reloadDone, history, dispatch, posts.length]);\n\n  return (\n    <div className=\"page-container feed-page\">\n      <div className={styles.followed}>\n        {authenticated && (\n          <ShockAvatar\n            forceAddBtn\n            height={60}\n            publicKey={selfPublicKey}\n            createsPost\n          />\n        )}\n\n        {follows?.map(follow => {\n          return (\n            <ShockAvatar\n              height={60}\n              key={follow.user}\n              nameAtBottom\n              publicKey={follow.user}\n            />\n          );\n        })}\n      </div>\n\n      <div className=\"tabs-holder\">\n        <p className=\"tab active\">Feed</p>\n        <p className=\"tab\">Saved</p>\n        <p className=\"tab\">Videos</p>\n      </div>\n      <div className=\"posts-holder\">\n        {posts.length === 0 && <Loader text=\"loading posts...\" />}\n        {posts.map(post => {\n          if (Common.isSharedPost(post)) {\n            return (\n              <Suspense fallback={<Loader />} key={post.shareID}>\n                <SharedPost\n                  openTipModal={toggleTipModal}\n                  openUnlockModal={toggleUnlockModal}\n                  openShareModal={toggleShareModal}\n                  postID={post.originalPostID}\n                  sharerPublicKey={post.sharedBy}\n                />\n              </Suspense>\n            );\n          }\n\n          return (\n            <Suspense fallback={<Loader />} key={post.id}>\n              <Post\n                id={post.id}\n                publicKey={post.authorId}\n                openTipModal={toggleTipModal}\n                openUnlockModal={toggleUnlockModal}\n                openShareModal={toggleShareModal}\n              />\n            </Suspense>\n          );\n        })}\n      </div>\n      <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n      <GuestTipModal\n        publicKey={tipPublicKey}\n        tipData={tipModalData}\n        toggleOpen={toggleTipModal}\n      />\n      <UnlockModal\n        unlockData={unlockModalData}\n        toggleOpen={toggleUnlockModal}\n      />\n      <ShareModal shareData={shareModalData} toggleOpen={toggleShareModal} />\n      {!authToken && (\n        <AddBtn\n          onClick={redirectAuth}\n          large\n          icon=\"user\"\n          label=\"Create a Lightning Page\"\n        />\n      )}\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default FeedPage;\n"],"sourceRoot":""}