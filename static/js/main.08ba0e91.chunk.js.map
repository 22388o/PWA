{"version":3,"sources":["actions/OrdersActions.js","utils/WebSocket.js","actions/CoordinateActions.ts","common/Loader/index.js","common/Post/components/TipRibbon/index.js","common/Post/components/Stream/index.tsx","utils/String.js","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.ts","reducers/DrawerReducer.js","reducers/ContentReducer.ts","reducers/FeesReducer.ts","reducers/FeedReducer.ts","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/AppReducer.ts","reducers/settings.ts","reducers/CoordinatesReducer.ts","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/selectors/publishedContent.ts","store/selectors/chat.ts","store/selectors/feed.ts","store/selectors/coordinates.ts","store/selectors/index.ts","store/index.ts","actions/AuthActions.ts","utils/Http.js","actions/SettingsActions.ts","actions/ContentActions.ts","actions/WalletActions.js","utils/JSON.ts","utils/Encryption.ts","actions/FeedActions.ts","actions/NodeActions.js","schema/index.ts","actions/ChatActions.ts","utils/dialogCallback.ts","actions/AppActions.ts","actions/UserProfilesActions.ts","common/Drawer/index.js","App.js","utils/ui.tsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js","utils/Error.ts","utils/FieldError.ts","utils/Date.ts","utils/index.ts","actions/EncryptionActions.js","actions/DrawerActions.js","actions/FeesActions.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","serviceID","dispatch","a","id","Http","post","path","value","data","ok","newID","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","rifle","query","publicKey","reconnect","onData","services","servicesEntries","forEach","get","service","type","serviceInfo","buyService","owner","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","transports","rifleSubscriptions","Map","GunSocket","LNDSocket","connectSocket","host","store","socketOptions","auth","encryptionId","getState","encryption","deviceId","connected","disconnectSocket","SocketIO","relayId","node","emit","GunOn","encryptedOn","event","subscription","subscriptionId","key","onError","on","Common","setAuthenticated","err","field","message","hostIP","socket","off","close","decryptEventCallback","callback","privateKey","Encryption","encryptedMessage","decryptedMessage","encryptedEmit","eventName","hostKeys","userKeys","hostId","remotePublicKey","localPrivateKey","error","stringify","encryptedData","responses","warn","decryptedResponses","unsubscribeRifleById","unsubscribeEvent","delete","unsubscribeRifleByQuery","Array","from","resolve","debug","epubForDecryption","epubField","reject","then","$shock","token","authToken","set","rifleCleanup","subscriptions","unsubscribe","coordinateDeleted","createAction","coordinateReceived","subCoordinates","Utils","unparsed","coordinateSHA256","coordinate","sub","e","alert","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","window","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","TipRibbon","tipCounter","tipValue","zoomed","opacity","Stream","item","index","postId","hideRibbon","width","playerDOM","timeout","useRef","useState","isLive","videoStyle","liveStatus","useEffect","player","videojs","current","autoplay","muted","aspectRatio","src","magnetURI","play","viewersSocketUrl","WebSocket","userToken","addEventListener","cursor","display","ref","preload","controls","autoPlay","initialMessagePrefix","processDisplayName","displayName","suffix","slice","INITIAL_STATE","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","webClientPrefix","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","headers","common","Authorization","SET_ATTEMPTS_DONE","SET_RELAY_ID","AUTH_ACTIONS","LOGOUT","SET_WEBCLIENT_PREFIX","authenticated","authStep","defaultSteps","manual","shockWizard","shockCloud","hostingTiers","SET_AUTHENTICATED","SET_AUTH_STEP","SET_AUTH_METHOD","method","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","lightningInfo","_getUnifiedTransactionDate","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","filter","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","sort","b","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","LOAD_LIGHTNING_INFO","chat","produce","draft","handshakeAddressUpdated","match","handshakeAddress","payload","currentHandshakeAddress","receivedRequests","receivedHandshakeRequest","receivedRequest","convoReceived","convo","convos","convoToMessages","convoDeleted","messageTransmissionFailed","convoID","errorMessage","messageID","messageTransmissionRequested","body","timestamp","Date","now","messageTransmissionRetried","messageTransmissionSucceeded","handshakeRequestDeleted","receivedConvoMessage","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","streamPostId","streamContentId","streamStatusUrl","streamBroadcasterUrl","publishedContent","publicContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","tipOverlayUrl","publicContentAdded","publishedContentAdded","res","publishedContentRemoved","SET_SEED_PROVIDER_PUB","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","availableTmp","push","REMOVE_USED_TOKEN","indexOf","splice","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","user","status","private","posts","sharedPosts","reloadDone","feed","postDeleted","author","idx","findIndex","p","postReceived","newPost","authorId","contentItems","tags","title","tips","contentItemReceived","contentItem","postID","sharedPostDeleted","sharerPublicKey","sharedPostReceived","originalAuthor","shareDate","originalPostID","shareID","sharedBy","postTipReceived","tipAmt","tipID","find","ADD_FOLLOW","existingFollow","follow","REMOVE_FOLLOW","UPDATE_FOLLOW","profile","RELOAD_FEED","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","updatedUserProfile","assign","NODE_ACTIONS","RESET_USER_PROFILES","REMOVE_USER_PROFILE","profiles","myServices","boughtServices","orders","tmp","servicesTmp","selectedService","dialogText","dialogHasCallback","app","OPEN_DIALOG","hasCallback","CLOSE_DIALOG","settings","coordinates","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","AppReducer","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","Schema","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectAllOtherUsers","createSelector","users","values","selectFollows","f","selectOwnPublishedContent","privateContent","selectConvos","selectSingleConvo","selectIsInContact","with","selectCurrentHandshakeAddress","selectReceivedRequests","req","receiverConvoID","selectAllMessages","selectContacts","_publicKeys","uniq","selectCommunication","convoIDOrRequestID","maybeConvo","maybeRequest","selectConvoMessages","selectFeedPosts","pickBy","_","selectAllPosts","selectAllSharedPosts","selectSinglePost","selectPostsNewestToOldest","sharedPostsMap","allPosts","alpha","selectSharedPost","sharer","selectAllPostsFromFollowedNewestToOldest","followedPublicKeys","filteredPosts","pick","filteredShared","allNonShared","flat","allShared","records","selectAllCoordinates","selectAllCoordinatesNewestToOldest","coords","selectSingleCoordinate","selectRoot","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","process","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","useDispatch","originalUseDispatch","RESET_AUTH_INFO","setAuthStep","step","setAuthMethod","logout","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","REACT_APP_SHOCK_ENCRYPTION_ECC","decryptResponse","interceptors","request","use","localRequest","url","toUpperCase","includes","PUBLISHED_CONTENT_ADDED","PUBLISHED_CONTENT_REMOVED","setSeedProviderPub","pub","dontBackup","setSeedInfo","cleanUrl","endsWith","infoS","addPublishedContent","isPublicContentItem","TypeError","unlockContent","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","noDialog","openDialog","addAvailableToken","removeUnavailableToken","addStreamToken","OWN_PUBLISHED_CONTENT_QUERY","subOwnPublishedContent","parsed","parseJson","isPublishedContent","unsubOwnPublishedContent","subOwnPublicContent","logger","fetchWalletBalance","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","FetchLightningInfo","safeParseJSON","nonEncryptedEvents","convertBase64ToBuffer","Buffer","convertBufferToBase64","processKey","isBuffer","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","FieldError","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","toLowerCase","RESET_FEED","LOAD_POSTS","ADD_USER_POST","DELETE_USER_POST","LOAD_SHARED_POST","POST_TIPPED","removeFollow","addFollow","subSinglePost","subscribeUserPosts","subPostContent","FOLLOWS_QUERY","subscribeFollows","info","unsubscribeFollows","sendTipPost","deleteUserPost","reloadFeed","subSharedPosts","sharedPost","subPostTips","nTipAmount","NaN","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","fetchNodeHealth","Error","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","connectHost","resetData","done","health","baseURL","setRelayId","exchangeKeyPair","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","decodedToken","jwtDecode","authorization","exp","parseError","createAlias","createWallet","setWebclientPrefix","prefix","isHandshakeReqNew","o","obj","epub","senderConvoID","isConvo","counterpartConvoID","isConvoMsg","description","isPostRaw","valMap","baseValidator","every","validator","createValidator","isFinite","val","subCurrentHandshakeAddress","subHandshakeNode","handshakeRequest","createOutgoingConversationFeed","outgoingConvoID","incomingConvoID","msgID","withEpub","messages","$$__EPUB__FOR","acceptHandshakeRequest","requestId","sendHandshakeRequest","epubP","rej","handshakeAddressP","selfEpubP","requestID","selfEpub","handshakeReqForGun","subConvos","sendMessage","messageBody","trim","length","subConvoMessages","outgoingSub","incomingSub","subs","dialogCallback","callDialogCallBack","cb","addDialogCallback","closeDialog","executeCb","subscribedProfiles","Set","subscribeUserProfile","has","bio","binarySub","avatar","header","unsubscribeUserProfile","Drawer","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","WalletSettingsPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","CreatePostPage","GoLivePage","OtherUserPage","QRScannerPage","BackupsPage","PublicContentItemPage","PrivateRoute","component","authorizedComponent","App","history","useHistory","update","setUpdate","setIsLive","showFloatingPlayer","setShowFloatingPlayer","interval","setInterval","clearInterval","setTimeout","clearTimeout","StreamRender","useMemo","undefined","stopStream","contentId","endUrl","urlForMagnet","obsToken","addLanguage","tokenExpired","JWTDecode","elementId","elmnt","document","getElementById","pos1","pos2","pos3","pos4","onpointerdown","preventDefault","clientX","clientY","onpointerup","closeDragElement","onpointermove","elementDrag","top","offsetTop","left","offsetLeft","dragElement","loadContentInfo","serviceProvider","seedData","JObject","loadStreamInfo","streamData","DialogClose","ConfirmDialog","fallback","exact","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","closeButton","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","loading","StrictMode","URL","href","origin","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","stack","useForceUpdate","setTick","tick","formatTimestamp","relativeTime","DateTime","fromMillis","toRelative","resizeImage","img","desiredLongEdge","compression","canvas","createElement","Math","round","getContext","drawImage","toDataURL","processImageFile","file","startsWith","size","reader","FileReader","onload","target","result","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","image","resizedImage","normalizeURL","_url","__url","protocol","EMPTY_FN","EMPTY_ARR","useBooleanState","initialState","setState","_state","safeParseJson","useLastSeen","lastSeenApp","setLastSeenApp","lastSeenNode","setLastSeenNode","appSub","lastSeen","nodeSub","exchangeSource","CancelToken","addUserKeyPair","addHostKey","getDeviceId","cancel","cancelToken","APIPublicKey","openDrawer","loadFeeRates","setSource","setRate"],"mappings":"iVAMaA,EAAU,CACrBC,eAAgB,cAChBC,kBAAmB,iBACnBC,mBAAoB,sBAGTC,EAAgB,SAC3BC,EACAC,EACAC,GAH2B,8CAIxB,WAAMC,GAAN,+BAAAC,EAAA,yDACCC,EAAKH,GACLA,EAFD,iCAGsBI,IAAKC,KAAK,eAAgB,CAC/CC,KAAK,yBAAD,OAA2BH,GAC/BI,MAAOT,IALR,mBAGOU,EAHP,EAGOA,KAIOA,EAAPC,GAPP,yCASQ,IATR,gDAYsBL,IAAKC,KAAK,eAAgB,CAC/CC,KAAM,wBACNC,MAAOT,IAdR,oBAYOU,EAZP,EAYOA,KAIAC,EAAkBD,EAAlBC,GAAQC,EAAUF,EAAdL,GACPM,EAjBJ,0CAkBQ,IAlBR,QAoBDN,EAAKO,EApBJ,eAuBGC,EAAMC,OAAOC,QAAQd,GAAWe,KAAI,YAAoB,IAAD,mBAAjBC,EAAiB,KAAXR,EAAW,KAC3D,GAAKA,EAIL,OADAS,QAAQC,IAAR,mBAAwBF,EAAxB,eAAmCR,IAC5BH,IAAKC,KAAK,eAAgB,CAC/BC,KAAK,yBAAD,OAA2BH,EAA3B,YAAiCY,GACrCR,MAAO,CACLW,iBAAkB,KAClBX,cAhCH,UAoCGY,QAAQR,IAAIA,GApCf,WAuCiB,iBAFZS,EAAgBtB,EAAhBsB,cAE6C,eAAhBA,EAvClC,wBAwCDJ,QAAQC,IAAI,iCAxCX,UAyCKb,IAAKC,KAAK,eAAgB,CAC9BC,KAAK,oCACLC,MAAOJ,IA3CR,iCAmDIA,GAnDJ,4CAJwB,uDA0DhBkB,EAAgB,SAAAlB,GAAE,8CAAI,WAAMF,GAAN,SAAAC,EAAA,sEACpBE,IAAKC,KAAK,eAAgB,CACrCC,KAAK,yBAAD,OAA2BH,GAC/BI,MAAO,OAHwB,mFAAJ,uDAOlBe,EAAsB,kBAAM,SAAArB,GAiCvC,OA/BqBsB,YAAM,CACzBC,MAFS,6BAGTC,UAAW,GACXC,WAAW,EACXC,OAAO,WAAD,4BAAE,WAAMC,GAAN,eAAA1B,EAAA,sDACA2B,EAAkBjB,OAAOC,QAAQe,GACvCZ,QAAQC,IAAIY,GAEZA,EAAgBC,QAAhB,uCAAwB,mCAAA5B,EAAA,4EACX,OADmBC,EAAR,uEAIUC,IAAK2B,IAAL,6CACQ5B,IALlB,mBAIR6B,EAJQ,EAIdxB,KAGRQ,QAAQC,IAAIe,EAAQxB,MACC,OAAjBwB,EAAQxB,KARU,wBASpBP,EAAS,CACPgC,KAAMxC,EAAQE,kBACda,KAAML,IAXY,2BAetBF,EAAS,CACPgC,KAAMxC,EAAQC,eACdc,KAAM,CAAEL,KAAI+B,YAAaF,EAAQxB,QAjBb,4CAAxB,uDAJM,2CAAF,mDAAC,OA8BE2B,EAAa,SACxBC,EACApC,EACAqC,GAHwB,8CAIrB,WAAMpC,GAAN,mBAAAC,EAAA,sEACoBE,IAAKC,KAAK,sBAAuB,CACtD4B,KAAM,UACNK,IAAKC,OAAOF,GACZG,GAAIJ,EACJK,KAAM,GACNC,SAAU,IACVC,QAAS3C,IAPR,uBACKQ,EADL,EACKA,KAQRQ,QAAQC,IAAIT,GACNoC,EAAWC,KAAKC,MAAMtC,EAAKoC,SAASG,UAC1C9C,EAAS,CACPgC,KAAMxC,EAAQG,mBACdY,KAAM,CAAEoC,WAAUR,QAAOpC,eAbxB,kBAeI4C,GAfJ,2CAJqB,wD,oSCrGpBI,G,MAAU,CACdC,cAAc,EACdC,oBAAoB,EACpBC,OAAQC,IACRC,iBAAiB,EACjBC,WAAY,CAAC,eAGTC,EAAqB,IAAIC,IAGpBC,EAAY,KAGZC,EAAY,KAEVC,EAAa,uCAAG,wDAAAzD,EAAA,6DAAO0D,EAAP,+BAAc,GAAIlC,EAAlB,yCACH,wCADG,mBACnBmC,EADmB,EACnBA,MACFC,EAFqB,2BAGtBd,GAHsB,IAIzBe,KAAM,CACJC,aAAcH,EAAMI,WAAWC,WAAWC,cAIjC,QAAT,EAAAV,SAAA,eAAWW,cAAX,UAAwBV,SAAxB,aAAwB,EAAWU,YAAc1C,EAT1B,yCAUlB,CAAE+B,YAAWC,cAVK,cAavBD,GAAaC,GAAahC,IAC5B2C,EAAiBZ,GACjBY,EAAiBX,IAGnBD,EAAYa,IAAS,GAAD,OAAIV,EAAJ,QAAgBE,GACpCJ,EAAYY,IAAS,GAAD,OAAIV,EAAJ,iBAAyBE,IAEvCS,EAAUV,EAAMI,WAAWO,KAAKD,WAEpCd,EAAUgB,KAAK,gBAAgB,CAACtE,GAAGoE,IACnCb,EAAUe,KAAK,gBAAgB,CAACtE,GAAGoE,MAG/BG,EAAQC,EAAYlB,IAGpB,cAAc,SAAAmB,GAClB,IAEkB,EAFZC,EAAetB,EAAmBxB,IAAI6C,EAAME,gBAE9CD,IACF,UAAAA,EAAalD,cAAb,cAAAkD,EAAsBD,EAAM7B,SAASvC,KAAMoE,EAAM7B,SAASgC,SAI9DL,EAAM,eAAe,SAAAE,GACnB,IAEkB,EAFZC,EAAetB,EAAmBxB,IAAI6C,EAAME,gBAE9CD,IACF,UAAAA,EAAaG,eAAb,cAAAH,EAAuBD,EAAM7B,SAASvC,KAAMoE,EAAM7B,SAASgC,SAI/DtB,EAAUwB,GAAGC,KAAiB,WAC5BrB,EAAM5D,SAASkF,aAAiB,OAGlC1B,EAAUwB,GAAG,mBAAb,uCAAiC,WAAMG,GAAN,eAAAlF,EAAA,sDACb,aAAdkF,EAAIC,OAAwC,YAAhBD,EAAIE,UAAwB,EACpBzB,EAAMI,WAAWO,KADE,EAClDe,OADkD,EAC9BhB,QAC3BV,EAAM5D,SAASkF,aAAiB,KAHH,2CAAjC,uDAlD2B,kBAyDpB,CAAE1B,YAAWC,cAzDO,4CAAH,qDA4DbW,EAAmB,SAAAmB,GAC9BA,EAAOC,IAAI,KACXD,EAAOE,SAGHC,EAAoB,uCAAG,uCAAAzF,EAAA,yDAASkF,EAAT,EAASA,IAAK5E,EAAd,EAAcA,KAAMoF,EAApB,EAAoBA,SAAUC,EAA9B,EAA8BA,aAEtDT,IAAQU,IAA8BV,IACtC5E,IAASsF,IAA8BtF,IAHf,uBAKzBoF,EAASR,EAAK5E,GALW,8BASvB4E,EATuB,iCAUMU,IAA0B,CACvDD,aACAE,iBAAkBX,IAZK,cAUnBY,EAVmB,OAezBJ,EAASI,EAAkBxF,GAfF,+BAmBvBA,EAnBuB,kCAoBMsF,IAA0B,CACvDD,aACAE,iBAAkBvF,IAtBK,eAoBnBwF,EApBmB,OAyBzBJ,EAASR,EAAKY,GAzBW,+DAAH,sDA8BpBC,EAAgB,SAAAT,GAAM,8CAAI,WAAOU,EAAWZ,EAASM,GAA3B,iCAAA1F,EAAA,sEAEN,wCAFM,mBAEtB2D,EAFsB,EAEtBA,MAFsB,EAGCA,EAAMI,WAAWC,WAAxCiC,EAHsB,EAGtBA,SAAUC,EAHY,EAGZA,SACVC,EAAWxC,EAAMI,WAAWO,KAA5B6B,QAEJP,IAA0BI,GANA,uBAO5BV,EAAOf,KAAKyB,EAAWZ,EAASM,GAPJ,6BAWxBU,EAAkBH,EAASE,GAC3BE,EAZwB,UAYNH,EAASC,UAZH,aAYN,EAAkBR,WAErCS,GAAoBC,EAdK,wBAe5BvF,QAAQwF,MAAM,qDAAsDH,GAfxC,4CAoBDf,EACzBQ,IAA0B,CACxBrE,UAAW6E,EACXhB,QAASzC,KAAK4D,UAAUnB,KAE1B,KAzB0B,QAoBxBoB,EApBwB,OA2B9BlB,EAAOf,KAAKyB,EAAWQ,GAAe,SAACtB,EAAK5E,GAC1CmF,EAAqB,CACnBP,MACA5E,OACAoF,WACAC,WAAYU,OAhCc,4CAAJ,2DAqCtB5B,EAAc,SAAAa,GAAM,8CAAI,WAAOU,EAAWN,GAAlB,yBAAA1F,EAAA,sEAEJ,wCAFI,mBAEpB2D,EAFoB,EAEpBA,MACAuC,EAAavC,EAAMI,WAAWC,WAA9BkC,SACAC,EAAWxC,EAAMI,WAAWO,KAA5B6B,QAEJP,IAA0BI,GANF,uBAO1BV,EAAOP,GAAGiB,EAAWN,GAPK,6BAWtBW,EAXsB,UAWJH,EAASC,UAXL,aAWJ,EAAkBR,WAXd,wBAc1B7E,QAAQwF,MAAM,qDAAsDH,GAd1C,2BAmB5Bb,EAAOP,GAAGiB,EAAV,sBAAqB,8CAAAhG,EAAA,qEAAUyG,EAAV,yBAAUA,EAAV,wBACcxF,QAAQR,IACvCgG,EAAU7F,IAAV,uCAAc,WAAMiC,GAAN,SAAA7C,EAAA,yDACP6C,EADO,yCAEHA,GAFG,WAKRA,GAAa+C,IAA8B/C,GALnC,uBAMV/B,QAAQ4F,KAAK,+BAAgC7D,GANnC,kBAOHA,GAPG,gCAUL+C,IAA0B,CAC/BD,WAAYU,EACZR,iBAAkBhD,KAZR,2CAAd,wDAFiB,OACb8D,EADa,OAmBnBjB,EAAQ,WAAR,cAAYiB,IAnBO,4CAnBO,4CAAJ,yDAmFbC,EAAuB,SAAAhC,GACbvB,EAAmBxB,IAAI+C,KAG1CiC,EAAiBjC,GACjBvB,EAAmByD,OAAOlC,KAIjBmC,EAA0B,SAAAzF,GACT0F,MAAMC,KAAK5D,EAAmB1C,WAEtCC,KAAI,YAAyB,IAAD,mBAAtBX,EAAsB,KAAlB0E,EAAkB,KAC9C,OAAIA,EAAarD,QAAUA,IACzBR,QAAQC,IAAI,0BAA2B4D,GACvCiC,EAAqB3G,IACd,OAOA4G,EAAmB,SAAAjC,GAAc,OAC5C,IAAI3D,SAAQ,SAAAiG,GACGnB,EAAcxC,EAC3BgB,CACE,cACA,CACEK,mBAEF,WACE9D,QAAQqG,MAAR,0DACqDvC,EADrD,MAGAsC,GAAQ,UA2CH7F,EAAQ,SAAC,GAAD,IACnBC,EADmB,EACnBA,MACAC,EAFmB,EAEnBA,UACA6F,EAHmB,EAGnBA,kBACAC,EAJmB,EAInBA,UACA7F,EALmB,EAKnBA,UACAC,EANmB,EAMnBA,OACAqD,EAPmB,EAOnBA,QAPmB,OASnB,IAAI7D,SAAQ,SAACiG,EAASI,GACpB,wCAAmBC,MAAK,YAAgB,IAAb5D,EAAY,EAAZA,MACrBnC,GACFuF,EAAwBzF,GAGbyE,EAAcxC,EAE3BgB,CACE,kBACA,CACEiD,OAAQlG,EACRmG,MAAO9D,EAAMI,WAAWO,KAAKoD,UAC7BnG,YACA6F,oBACAC,cAEF,SAACnC,EAAK5E,GACJ,GAAI4E,EAIF,OAHApE,QAAQwF,MAAR,2BAAkChF,EAAlC,MACAR,QAAQwF,MAAMpB,QACdoC,EAAOpC,GAIT7B,EAAmBsE,IAAIrH,EAAKsE,eAAgB,CAC1CnD,SACAqD,UACAxD,UAGF4F,EAAQ,CACN3B,IAAK,kBAAMqB,EAAqBtG,EAAKsE,6BAUpCgD,EAAe,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAsB,WAChDA,EAAcjH,KAAI,SAAA+D,GAAY,OAC5BA,EAAa4C,MAAK,SAAAO,GAChBA,EAAYvC,e,iCCvXlB,gIAKawC,EAAoBC,YAE9B,uBAEUC,EAAqBD,YAG/B,wBAEUE,EAAiB,kBAAM,SAACnI,GACnCoI,IAAahB,MAAb,+BACA,IACE,IAAMxC,EAAewD,IAAY,CAC/B7G,MAAM,6BACNC,UAAW,KACXE,OAAQ,SAAC2G,EAAUC,GACjB,IAAMC,EAAaH,IAAoBC,GAEnCpD,IAAoBsD,GACtBvI,EACEkI,EAAmB,CACjBK,aACAD,sBAGoB,OAAfC,EACTvI,EACEgI,EAAkB,CAChBM,sBAIJF,IAAa7B,MAAb,4DAEEgC,MAMR,OAAO,WACL3D,EAAa4C,MAAK,SAAAgB,GAChBA,EAAIhD,UAGR,MAAOiD,GACPC,MAAM,sDAAD,OAAuDD,EAAEpD,UAC9D+C,IAAa7B,MAAb,wDAEEkC,O,sFCDSE,IAjDA,SAAC,GAOT,IAAD,MANJC,YAMI,MANG,aAMH,MALJC,kBAKI,aAJJC,aAII,aAHJC,eAGI,aAFJC,yBAEI,MAFgB,yBAEhB,MADJC,aACI,MADI,GACJ,EACEC,EAAM,UAAGC,qBAAH,QAAiB,QAEvBC,EAAiBC,OAAOC,WAAW,8BACtCC,QACGC,EAAmBX,EACrB,CAAEK,OAAQE,EAAiB,OAASF,EAAQO,aAAc,GAC1D,GACEC,EAAgBX,EAClB,CACEY,gBAAiBX,GAEnB,GACJ,OACE,sBACEY,UAAWC,IAAW,CACpB,gBAAgB,EAChB,gBAAiBf,EACjB,kBAAmBC,IAErBE,MAAK,uCACAO,GACAE,GACAT,GATP,+BAYE,sBAAKW,UAAU,oBAAf,+BACE,sBAAMA,UAAU,kCAAhB,uBACA,sBAAMA,UAAU,kCAAhB,uBACA,sBAAMA,UAAU,kCAAhB,uBACEd,EAKE,KAJF,qCACE,sBAAMc,UAAU,kCAAhB,uBACA,sBAAMA,UAAU,kCAAhB,6BAILhB,EAAO,qBAAKgB,UAAU,oBAAf,8BAAoChB,IAAc,U,iCChDhE,kBAYekB,IAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,OAAzB,OAChBD,EAAW,EACT,sBAAKJ,UAAU,mBAAmBX,MAAO,CAAEiB,QAAUD,EAAa,EAAJ,GAA9D,+BACE,mBAAGL,UAAU,eAAb,6CACA,oBAAGA,UAAU,eAAb,+BACGG,EADH,IAC+B,IAAfA,EAAmB,MAAQ,aAG3C,O,sFCiFSI,IArFA,SAAC,GAUV,EATJjK,GASK,IARLkK,EAQI,EARJA,KAGAJ,GAKI,EAPJK,MAOI,EANJC,OAMI,EALJN,UACAD,EAII,EAJJA,WACAQ,EAGI,EAHJA,WACAC,EAEI,EAFJA,MAGMC,GADF,EADJC,QAEkBC,iBAAO,OADrB,EAEwBC,oBAAS,GAFjC,mBAEGC,EAFH,KAGEC,GAHF,KAGe,CAAEN,MAAO,SACxBA,IACFM,EAAWN,MAAQA,GALjB,IAOGO,EAAcX,EAAdW,WA6BP,OA5BAC,qBAAU,WACR,IAAMC,EAASC,YAAQT,EAAUU,QAAS,CACxCC,UAAU,EACVC,OAAO,EACPC,YAAa,SAEfL,EAAOM,IAAI,CACTA,IAAKnB,EAAKoB,UACVxJ,KAAM,0BAMRiJ,EAAOQ,SACP,CAACrB,IACHY,qBAAU,WACR,GAAGZ,EAAKsB,iBAAiB,CACvB,IAAMnG,EAAS,IAAIoG,UAAJ,UAAiBvB,EAAKsB,iBAAtB,yBAAuDtB,EAAKwB,YAI3E,OAHArG,EAAOsG,iBAAiB,QAAQ,WAC9B9K,QAAQC,IAAI,yBAEP,WACLuE,EAAOE,YAGX,CAAC2E,IAGD,qBAAKR,UAAU,wBAAf,8BACE,sBACEA,UAAU,wBACVX,MAAO,CACL6C,OAAQ,UACRtB,MAAO,QAJX,gCAOIK,GAAyB,YAAfE,GAA4B,oFACtCF,GAAyB,YAAfE,GAA4B,yEACtCF,IAAWE,GAAc,oFAC3B,qBACE9B,MACiB,SAAf8B,EAAwB,CAAEP,MAAO,QAAW,CAAEuB,QAAS,OAAQvB,MAAO,QAF1E,8BAKE,uBACEZ,UAAU,4BACVoC,IAAKvB,EACLxB,MAAO6B,EACPmB,QAAQ,OACRC,UAAQ,EACRb,OAAK,EACLc,UAAQ,EAPV,0BAUA5B,GACA,cAAC,IAAD,CACER,WAAYA,EACZC,SAAUA,EACVC,QAAQ,EAHV,8B,iCChFV,oEAAO,IAAMmC,EAAuB,oCAcvBC,EAAqB,WAAuC,IAAtC7K,EAAqC,uDAAzB,GAAI8K,EAAqB,uDAAP,GAC/D,GAAIA,EACF,OAAOA,EAGT,IAAMC,EAAS/K,EAAUgL,OAAO,GAEhC,MAAM,OAAN,OAAcD,K,yzDCjBVE,EAAgB,CACpBrG,OAAQ,KACRd,OAAQ,KACRoH,MAAO,KACP/E,UAAW,KACXnG,UAAW,KACXmL,wBAAyB,KACzBC,WAAY,KACZC,qBAAqB,EACrBC,gBAAgB,yBAChBxI,QAAQ,MAqEKC,EAlEF,WAAoC,IAAnCwI,EAAkC,uDAA1BN,EAAeO,EAAW,uCAC9C,OAAQA,EAAOhL,MACb,KAAKxC,IAAQyN,gBACX,OAAOR,EAET,KAAKjN,IAAQ0N,YACX,IAAM5H,EAAS0H,EAAOzM,KACtB,OAAO,2BACFwM,GADL,IAEEzH,WAGJ,KAAK9F,IAAQ2N,YACX,IAAM/G,EAAS4G,EAAOzM,KACtB,OAAO,2BACFwM,GADL,IAEE3G,WAGJ,KAAK5G,IAAQ4N,uBAAyB,IAAD,EAO/BJ,EAAOzM,KALToH,EAFiC,EAEjCA,UACA+E,EAHiC,EAGjCA,MACAlL,EAJiC,EAIjCA,UACAmL,EALiC,EAKjCA,wBACAC,EANiC,EAMjCA,WAKF,OAFAzM,IAAKkN,SAASC,QAAQC,OAAOC,cAA7B,iBAAuD7F,GAEhD,2BACFoF,GADL,IAEEpF,YACAgF,0BACAD,QACAlL,YACAoL,eAGJ,KAAKpN,IAAQiO,kBACX,OAAO,2BAAKV,GAAZ,IAAmBF,qBAAqB,IAE1C,KAAKrN,IAAQkO,aACX,OAAO,2BACFX,GADL,IAEEzI,QAAQ0I,EAAOzM,OAGnB,KAAKoN,IAAaC,OAChB,OAAO,2BACFb,GADL,IAEEpF,UAAW,KACXnG,UAAW,KACXmL,wBAAyB,KACzBC,WAAY,KACZC,qBAAqB,IAGzB,KAAKrN,IAAQqO,qBACX,OAAO,2BAAId,GAAX,IAAkBD,gBAAgBE,EAAOzM,OAE3C,QACE,OAAOwM,IC7EPN,EAAgB,CACpBqB,eAAe,EACfC,SAAU,OACVnB,WAAY,KACZtI,QAAQ,MAGJ0J,EAAe,CACnBC,OAAQ,OACRC,YAAa,OACbC,WAAY,aACZC,aAAc,cA8BDtK,EA3BF,WAAoC,IAAnCiJ,EAAkC,uDAA1BN,EAAeO,EAAW,uCAC9C,OAAQA,EAAOhL,MACb,KAAKxC,IAAQ6O,kBACX,OAAO,2BAAKtB,GAAZ,IAAmBe,cAAed,EAAOzM,OAE3C,KAAKf,IAAQ8O,cACX,OAAO,2BACFvB,GADL,IAEEgB,SAAUf,EAAOzM,OAGrB,KAAKf,IAAQ+O,gBACX,IAAMC,EAASxB,EAAOzM,KACtB,OAAO,2BACFwM,GADL,IAEEH,WAAY4B,EACZT,SAAUC,EAAaQ,KAG3B,KAAKhP,IAAQoO,OACX,OAAOnB,EAET,QACE,OAAOM,I,kCC/BPN,EAAgB,CAEpBgC,aAAc,IACdC,eAAgB,IAChBC,iBAAkB,IAClBC,sBAAuB,IACvBC,QAAS,KAETC,aAAc,CAAEC,QAAS,GAAIC,MAAO,EAAGC,WAAY,EAAGC,WAAY,GAClEC,SAAU,CAAEJ,QAAS,GAAIC,MAAO,EAAGC,WAAY,EAAGC,WAAY,GAI9DE,SAAU,GACVC,SAAU,CAAEN,QAAS,GAAIC,MAAO,EAAGC,WAAY,EAAGC,WAAY,GAC9DI,MAAO,GAGPC,mBAAoB,GACpBC,cAAc,IAGVC,EAA6B,SAAArF,GAAI,OACrCsF,SAAStF,EAAKuF,eAAiBvF,EAAKwF,aAAexF,EAAKyF,WAAY,KAuMvDC,EAlMA,WAAoC,IAAnC/C,EAAkC,uDAA1BN,EAAeO,EAAW,uCAChD,OAAQA,EAAOhL,MACb,KAAKxC,IAAQuQ,aAAe,IAAD,EAKrB/C,EAAOzM,KAHTmO,EAFuB,EAEvBA,eACAC,EAHuB,EAGvBA,iBACAC,EAJuB,EAIvBA,sBAEIH,EAAe,IAAIuB,IAAIrB,GAC1BsB,IAAIvB,GACJuB,IAAIrB,GACJsB,WAEH,OAAO,2BACFnD,GADL,IAEE0B,eACAC,iBACAC,mBACAC,0BAGJ,KAAKpP,IAAQ2Q,cAAgB,IACnB5P,EAASyM,EAATzM,KAER,OAAO,2BACFwM,GADL,IAEE8B,QAAStO,IAGb,KAAKf,IAAQ4Q,WAAa,IAChB7P,EAASyM,EAATzM,KAER,OAAO,2BACFwM,GADL,IAEEuC,MAAO/O,IAGX,KAAKf,IAAQ6Q,SAAW,IACd9P,EAASyM,EAATzM,KAER,OAAO,2BACFwM,GADL,IAEEuC,MAAM,CAAE/O,GAAH,mBAAYwM,EAAMuC,UAG3B,KAAK9P,IAAQ8Q,YAAc,IACjB/P,EAASyM,EAATzM,KAER,OAAO,2BACFwM,GADL,IAEEuC,MAAOvC,EAAMuC,MAAMiB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,UAAYlQ,EAAKiB,eAG5D,KAAKhC,IAAQkR,cAAgB,IACnBnQ,EAASyM,EAATzM,KAER,OAAO,2BACFwM,GADL,IAEEqC,SAAU7O,IAGd,KAAKf,IAAQmR,kBAAoB,IACvBpQ,EAASyM,EAATzM,KAER,OAAO,2BACFwM,GADL,IAEE+B,aAAcvO,IAGlB,KAAKf,IAAQoR,uBAAyB,IAC5BrQ,EAASyM,EAATzM,KAER,OAAO,2BACFwM,GADL,IAEE+B,aAAa,2BACRvO,GADO,IAEVwO,QAAQ,GAAD,mBAAMhC,EAAM+B,aAAaC,SAAzB,YAAqCxO,EAAKwO,cAIvD,KAAKvP,IAAQqR,cAAgB,IACnBtQ,EAASyM,EAATzM,KAER,OAAO,2BACFwM,GADL,IAEEsC,SAAU9O,IAGd,KAAKf,IAAQsR,mBAAqB,IACxBvQ,EAASyM,EAATzM,KAER,OAAO,2BACFwM,GADL,IAEEsC,SAAS,2BACJ9O,GADG,IAENwO,QAAQ,GAAD,mBAAMhC,EAAMsC,SAASN,SAArB,YAAiCxO,EAAKwO,cAInD,KAAKvP,IAAQuR,cAAgB,IACnBxQ,EAASyM,EAATzM,KAER,OAAO,2BACFwM,GADL,IAEEoC,SAAU5O,IAGd,KAAKf,IAAQwR,mBAAqB,IACxBzQ,EAASyM,EAATzM,KAER,OAAO,2BACFwM,GADL,IAEEoC,SAAS,2BACJ5O,GADG,IAENwO,QAAQ,GAAD,mBAAMhC,EAAMoC,SAASJ,SAArB,YAAiCxO,EAAKwO,cAInD,KAAKvP,IAAQyR,yBAA2B,IAAD,EACQjE,EAAOzM,KAA5CuO,EAD6B,EAC7BA,aAAcK,EADe,EACfA,SAAUE,EADK,EACLA,SAC1B6B,EAAwB,sBACzBpC,EAAaC,SADY,YAEzBI,EAASJ,SAFgB,YAGzBM,EAASN,UAEXoC,MAAK,SAAClR,EAAGmR,GACR,IAAMC,EAAQ5B,EAA2BxP,GACnCqR,EAAQ7B,EAA2B2B,GAEzC,OAAOC,EAAQC,EAAQ,EAAID,EAAQC,GAAS,EAAI,KAEjDzQ,KAAI,SAAAuJ,GACH,IAAMmH,EAAO9B,EAA2BrF,GAExC,OAAIA,EAAKoH,aACA,CACLxP,KAAM,UACNyP,KAAMrH,EAAKoH,aACXlR,MAAO8J,EAAK9J,MACZiR,QAIAnH,EAAKsH,gBACA,CACL1P,KAAM,UACNyP,KAAMrH,EAAKsH,gBACXpR,MAAO8J,EAAK9J,MACZiR,OACAlM,QAAS+E,EAAK5H,MAId4H,EAAKuH,QACA,CACL3P,KAAM,QACNyP,KAAMrH,EAAKuH,QACXrR,MAAO8J,EAAKwH,OACZL,OACAlM,QAAS+E,EAAKyH,QAIlB9Q,QAAQ4F,KAAK,+BAAgCyD,GACtC,SAERmG,QAAO,SAAAnG,GAAI,OAAa,OAATA,KAElB,OAAO,2BACF2C,GADL,IAEE+B,eACAK,WACAE,WACAE,mBAAoB2B,IAGxB,KAAK1R,IAAQsS,0BACX,OAAO,2BACF/E,GADL,IAEEwC,mBAAoB,KAGxB,KAAK/P,IAAQuS,oBAAqB,IACzBxR,EAASyM,EAATzM,KACP,OAAO,2BACFwM,GADL,IAEEyC,cAAcjP,IAGlB,QACE,OAAOwM,I,uBC/GEiF,EAhFFC,aAAQ,SAACC,EAAOlF,GAC3B,GAAImF,IAAwBC,MAAMpF,GAAS,CAAC,IAClCqF,EAAqBrF,EAAOsF,QAA5BD,iBAENH,EAAMK,0BAA4BF,GAClCpN,IAAyBoN,KAEzBH,EAAMM,iBAAmB,GACzBN,EAAMK,wBAA0BF,GAIpC,GAAII,IAAyBL,MAAMpF,GAAS,CAAC,IACnC0F,EAAoB1F,EAAOsF,QAA3BI,gBACHR,EAAMM,iBAAiBE,EAAgBxS,MAC1CgS,EAAMM,iBAAiBE,EAAgBxS,IAAMwS,GAIjD,GAAIC,IAAcP,MAAMpF,GAAS,CAAC,IACxB4F,EAAU5F,EAAOsF,QAAjBM,MACHV,EAAMW,OAAOD,EAAM1S,MACtBgS,EAAMY,gBAAgBF,EAAM1S,IAAM,GAClCgS,EAAMW,OAAOD,EAAM1S,IAAM0S,GAI7B,GAAIG,IAAaX,MAAMpF,GAAS,CAAC,IACvB9M,EAAO8M,EAAOsF,QAAdpS,GACJgS,EAAMW,OAAO3S,WACRgS,EAAMW,OAAO3S,GAIxB,GAAI8S,IAA0BZ,MAAMpF,GAAS,CAAC,IAAD,EACEA,EAAOsF,QAA5CW,EADmC,EACnCA,QAASC,EAD0B,EAC1BA,aAAcC,EADY,EACZA,UAC/BjB,EAAMY,gBAAgBG,GAASE,GAAWhO,IAAM+N,EAChDhB,EAAMY,gBAAgBG,GAASE,GAAWpG,MAAQ,QAEpD,GAAIqG,IAA6BhB,MAAMpF,GAAS,CAAC,IAAD,EACNA,EAAOsF,QAAvCW,EADsC,EACtCA,QAAS5N,EAD6B,EAC7BA,QAAS8N,EADoB,EACpBA,UAC1BjB,EAAMY,gBAAgBG,GAASE,GAAa,CAC1CE,KAAMhO,EACN4N,UACA9N,IAAK,GACLjF,GAAIiT,EACJpG,MAAO,UACPuG,UAAWC,KAAKC,OAGpB,GAAIC,IAA2BrB,MAAMpF,GAAS,CAAC,IAAD,EACbA,EAAOsF,QAA9BW,EADoC,EACpCA,QAASE,EAD2B,EAC3BA,UACjBjB,EAAMY,gBAAgBG,GAASE,GAAWhO,IAAM,GAChD+M,EAAMY,gBAAgBG,GAASE,GAAWpG,MAAQ,UAEpD,GAAI2G,IAA6BtB,MAAMpF,GAAS,CAAC,IAAD,EACfA,EAAOsF,QAA9BW,EADsC,EACtCA,QAASE,EAD6B,EAC7BA,UACjBjB,EAAMY,gBAAgBG,GAASE,GAAWhO,IAAM,GAChD+M,EAAMY,gBAAgBG,GAASE,GAAWpG,MAAQ,KAEpD,GAAI4G,IAAwBvB,MAAMpF,GAAS,CAAC,IAClC9M,EAAO8M,EAAOsF,QAAdpS,GACJgS,EAAMM,iBAAiBtS,WAClBgS,EAAMM,iBAAiBtS,GAGlC,GAAI0T,IAAqBxB,MAAMpF,GAAS,CAAC,IAC/B3H,EAAY2H,EAAOsF,QAAnBjN,QACH6M,EAAMY,gBAAgBzN,EAAQ4N,WACjCf,EAAMY,gBAAgBzN,EAAQ4N,SAAW,IAEtCf,EAAMY,gBAAgBzN,EAAQ4N,SAAS5N,EAAQnF,MAClDgS,EAAMY,gBAAgBzN,EAAQ4N,SAAS5N,EAAQnF,IAA/C,2BACKmF,GADL,IAEEF,IAAK,SApFS,CACpBoN,wBAAyB,iBACzBM,OAAQ,GAIRC,gBAAiB,GACjBN,iBAAkB,K,QC3Bd/F,EAAgB,CACpBoH,MAAM,GAaOC,EAVA,WAAoC,IAAnC/G,EAAkC,uDAA1BN,EAAeO,EAAW,uCAChD,OAAQA,EAAOhL,MACb,KAAKxC,IAAQuU,gBACX,OAAO,2BAAKhH,GAAZ,IAAmB8G,KAAM7G,EAAOzM,OAElC,QACE,OAAOwM,I,QCLPN,EAAgB,CACpBuH,gBACE,0FACFC,gBAAiB,GACjBC,gBAAiB,GACjBC,UAAW,GACXC,aAAc,GACdC,gBAAiB,GACjBC,gBAAiB,GACjBC,qBAAsB,GACtBC,iBAAkB,GAClBC,cAAe,GACfC,gBAAiB,GACjBC,SAAU,GACVC,gBAAiB,GACjBC,sBAAuB,GACvBC,cAAc,IA2HD/F,EAxHC,WAA0D,IAAzDhC,EAAwD,uDAAhDN,EAAeO,EAAiC,uCACvE,GAAI+H,IAAmB3C,MAAMpF,GAC3B,OAAOiF,YAAQlF,GAAO,SAAAmF,GAAU,IACtB9H,EAAS4C,EAAOsF,QAAhBlI,KACH8H,EAAMuC,cAAcrK,EAAKlK,MAC5BgS,EAAMuC,cAAcrK,EAAKlK,IAAMkK,MAIrC,GAAI4K,IAAsB5C,MAAMpF,GAC9B,OAAOiF,YAAQlF,GAAO,SAAAmF,GAAU,IAAD,EAGzBlF,EADFsF,QAAWvD,EAFgB,EAEhBA,QAASkG,EAFO,EAEPA,IAElBA,EAAIzU,KACN0R,EAAMsC,iBAAiBS,EAAI/U,IAAM6O,MAKvC,GAAImG,IAAwB9C,MAAMpF,GAChC,OAAOiF,YAAQlF,GAAO,SAAAmF,UACbA,EAAMsC,iBAAiBxH,EAAOsF,QAAQpS,OAIjD,OAAQ8M,EAAOhL,MACb,KAAKxC,IAAQ2V,sBACX,OAAO,2BAAKpI,GAAZ,IAAmBiH,gBAAiBhH,EAAOzM,OAG7C,KAAKf,IAAQ4V,qBAAuB,IAC1B7U,EAASyM,EAATzM,KACF8U,EAAW,eAAQtI,EAAM2H,iBAE/B,OADAW,EAAY9U,EAAK+U,aAAe/U,EAAKwO,QAC9B,2BAAKhC,GAAZ,IAAmB2H,gBAAiBW,IAEtC,KAAK7V,IAAQ+V,WAAa,IAChBhV,EAASyM,EAATzM,KACR,OAAO,2BACFwM,GADL,IAEEmH,gBAAiB3T,EAAKiV,UACtBvB,gBAAiB1T,EAAKkV,UACtBtB,UAAW5T,EAAK4T,UAChBC,aAAc7T,EAAK6T,aACnBC,gBAAiB9T,EAAK8T,gBACtBC,gBAAiB/T,EAAK+T,gBACtBC,qBAAsBhU,EAAKgU,qBAC3BO,cAAcvU,EAAKuU,gBAGvB,KAAKtV,IAAQkW,cACX,OAAO,2BACF3I,GADL,IAEEmH,gBAAiB,GACjBD,gBAAiB,GACjBE,UAAW,GACXC,aAAc,GACdC,gBAAiB,GACjBC,gBAAiB,GACjBC,qBAAsB,KAG1B,KAAK/U,IAAQmW,cAAgB,IACnBpV,EAASyM,EAATzM,KACR,OAAO,2BAAKwM,GAAZ,IAAmB4H,SAAUpU,IAE/B,KAAKf,IAAQoW,oBAAsB,IACzBrV,EAASyM,EAATzM,KACAsV,EAAuBtV,EAAvBsV,QAASjK,EAAcrL,EAAdqL,UACXkK,EAAY,eAAQ/I,EAAM6H,iBAKhC,OAJKkB,EAAaD,KAChBC,EAAaD,GAAW,IAE1BC,EAAaD,GAASE,KAAKnK,GACpB,2BAAKmB,GAAZ,IAAmB6H,gBAAiBkB,IAEtC,KAAKtW,IAAQwW,kBAAoB,IACvBzV,EAASyM,EAATzM,KACAsV,EAAuBtV,EAAvBsV,QAASjK,EAAcrL,EAAdqL,UACXkK,EAAY,eAAQ/I,EAAM6H,iBAChC,IAAKkB,EAAaD,GAChB,OAAO9I,EAET,IAAM1C,EAAQyL,EAAaD,GAASI,QAAQrK,GAC5C,OAAIvB,GAAS,GACXyL,EAAaD,GAASK,OAAO7L,EAAO,GAC7B,2BAAK0C,GAAZ,IAAmB6H,gBAAiBkB,KAE/B/I,EAET,KAAKvN,IAAQ2W,iBAAmB,IACtB5V,EAASyM,EAATzM,KACAsV,EAAuBtV,EAAvBsV,QAASjK,EAAcrL,EAAdqL,UACXkK,EAAY,eAAQ/I,EAAM8H,uBAKhC,OAJKiB,EAAaD,KAChBC,EAAaD,GAAW,IAE1BC,EAAaD,GAASE,KAAKnK,GACpB,2BAAKmB,GAAZ,IAAmB8H,sBAAuBiB,IAE5C,KAAKtW,IAAQ4W,oBAAsB,IACzB7V,EAASyM,EAATzM,KACAsV,EAAuBtV,EAAvBsV,QAASjK,EAAcrL,EAAdqL,UACXkK,EAAY,eAAQ/I,EAAM8H,uBAChC,IAAKiB,EAAaD,GAChB,OAAO9I,EAET,IAAM1C,EAAQyL,EAAaD,GAASI,QAAQrK,GAC5C,OAAIvB,GAAS,GACXyL,EAAaD,GAASK,OAAO7L,EAAO,GAC7B,2BAAK0C,GAAZ,IAAmB8H,sBAAuBiB,KAErC/I,EAET,QACE,OAAOA,I,QCtIPN,EAA2B,CAC/B4J,OAAQ,gDAERC,KAAM,cAENC,SAAU,CACRC,WAAY,EACZC,YAAa,EACbC,QAAS,IAuCEC,EAnCF,WAGI,IAFf5J,EAEc,uDAFKN,EACnBO,EACc,uCACd,OAAQA,EAAOhL,MACb,KAAKxC,IAAQoX,WACX,OAAOnK,EAET,KAAKjN,IAAQqX,eACX,IAAMN,EAAWvJ,EAAOzM,KACxB,OAAO,2BACFwM,GADL,IAEEwJ,aAGJ,KAAK/W,IAAQsX,WACX,IAAMT,EAASrJ,EAAOzM,KACtB,OAAO,2BACFwM,GADL,IAEEwJ,SAAU9J,EAAa,SACvB4J,WAGJ,KAAK7W,IAAQuX,SACX,IAAMT,EAAOtJ,EAAOzM,KACpB,OAAO,2BACFwM,GADL,IAEEuJ,SAGJ,QACE,OAAOvJ,I,eCtCPN,EAAgB,CACpBuK,QAAS,CACP,CACEC,KACE,0FACFC,OAAQ,KACRC,SAAS,IAMbC,MAAO,GACPC,YAAa,GACbC,YAAY,GAyLCC,EAtLF,WAA+D,IAA9DxK,EAA6D,uDAArDN,EAAeO,EAAsC,uCACzE,GAAIwK,IAAYpF,MAAMpF,GAAS,CAAC,IAAD,EAGzBA,EADFsF,QAAWmF,EAFgB,EAEhBA,OAAQvX,EAFQ,EAERA,GAErB,OAAO+R,YAAQlF,GAAO,SAAAmF,GACfA,EAAMkF,MAAMK,KACfvF,EAAMkF,MAAMK,GAAU,IAGxB,IAAMC,EAAMxF,EAAMkF,MAAMK,GAAQE,WAAU,SAAAC,GAAC,OAAIA,EAAE1X,KAAOA,KAEpDwX,GAAO,GACTxF,EAAMkF,MAAMK,GAAQvB,OAAOwB,EAAK,MAItC,GAAIG,IAAazF,MAAMpF,GAAS,CAAC,IAAD,EAG1BA,EADFsF,QAAWmF,EAFiB,EAEjBA,OAAQvX,EAFS,EAETA,GAAIE,EAFK,EAELA,KAEzB,OAAO6R,YAAQlF,GAAO,SAAAmF,GAMpB,GALKA,EAAMkF,MAAMK,KACfvF,EAAMkF,MAAMK,GAAU,KAIX,IAFDvF,EAAMkF,MAAMK,GAAQE,WAAU,SAAAC,GAAC,OAAIA,EAAE1X,KAAOA,KAExC,CACd,IAAM4X,EAAuB,CAC3BC,SAAUN,EACVO,aAAc,GACdzG,KAAMnR,EAAKmR,KACXrR,KACAgX,OAAQ9W,EAAK8W,OACbe,KAAM7X,EAAK6X,KACXC,MAAO9X,EAAK8X,MACZC,KAAM,GACNnW,KAAM,QAERkQ,EAAMkF,MAAMK,GAAQ1B,KAAK+B,OAI/B,GAAIM,IAAoBhG,MAAMpF,GAAS,CAAC,IAAD,EAGjCA,EADFsF,QAAWmF,EAFwB,EAExBA,OAAQY,EAFgB,EAEhBA,YAAanY,EAFG,EAEHA,GAAIoY,EAFD,EAECA,OAEtC,OAAOrG,YAAQlF,GAAO,SAAAmF,GACpB,GAAKA,EAAMkF,MAAMK,GAAjB,CAQA,IAAMC,EAAMxF,EAAMkF,MAAMK,GAAQE,WAAU,SAAAC,GAAC,OAAIA,EAAE1X,KAAOoY,MAC3C,IAATZ,EAQHxF,EAAMkF,MAAMK,GAAQC,GAAqBM,aAAa9X,GAAMmY,EAP3DjQ,IAAa7B,MAAb,wGACmG+R,EADnG,2BAC4Hb,EAAOjL,OAC9H,UAXLpE,IAAa7B,MAAb,0HACqH+R,EADrH,2BAC8Ib,EAAOjL,OAChJ,QAiBX,GAAI+L,IAAkBnG,MAAMpF,GAAS,CAAC,IAAD,EACCA,EAAOsF,QAAnCgG,EAD2B,EAC3BA,OAAQE,EADmB,EACnBA,gBAEhB,OAAOvG,YAAQlF,GAAO,SAAAmF,GACfA,EAAMmF,YAAYmB,KACrBtG,EAAMmF,YAAYmB,GAAmB,IAEnCtG,EAAMmF,YAAYmB,GAAiBF,WAC9BpG,EAAMmF,YAAYmB,GAAiBF,MAIhD,GAAIG,IAAmBrG,MAAMpF,GAAS,CAAC,IAAD,EAMhCA,EAAOsF,QAJToG,EAFkC,EAElCA,eACAJ,EAHkC,EAGlCA,OACAK,EAJkC,EAIlCA,UACAH,EALkC,EAKlCA,gBAGF,OAAOvG,YAAQlF,GAAO,SAAAmF,GACfA,EAAMmF,YAAYmB,KACrBtG,EAAMmF,YAAYmB,GAAmB,IAEvCtG,EAAMmF,YAAYmB,GAAiBF,GAAU,CAC3CI,iBACAE,eAAgBN,EAChBK,YACAE,QAASL,EAAkBF,EAC3BQ,SAAUN,MAKhB,GAAIO,IAAgB3G,MAAMpF,GAAS,CAAC,IAAD,EACSA,EAAOsF,QAAzCmF,EADyB,EACzBA,OAAQa,EADiB,EACjBA,OAAQU,EADS,EACTA,OAAQC,EADC,EACDA,MAEhC,OAAOhH,YAAQlF,GAAO,SAAAmF,GACpB,IAAM9R,EAAO8R,EAAMkF,MAAMK,GAAQyB,MAAK,SAAAtB,GAAC,OAAIA,EAAE1X,KAAOoY,KAC/ClY,GACHgI,IAAa7B,MAAb,wCACmC+R,EADnC,2BAC4Db,EAAOjL,OAC9D,KAIFpM,EAAK+X,OAER/X,EAAK+X,KAAO,IAET/X,EAAK+X,KAAKc,KACb7Y,EAAK+X,KAAKc,GAASD,MAKzB,OAAQhM,EAAOhL,MACb,KAAKxC,IAAQ2Z,WAAa,IAChB5Y,EAASyM,EAATzM,KACF6Y,EAAiBrM,EAAMiK,QAAQkC,MACnC,SAAAG,GAAM,OAAI9Y,EAAK0W,OAASoC,EAAOpC,QAGjC,OAAImC,EACK,2BACFrM,GADL,IAEEiK,QAASjK,EAAMiK,QAAQnW,KAAI,SAAAwY,GAAM,OAC/BA,EAAOpC,OAAS1W,EAAK0W,KAAO1W,EAAO8Y,OAKlC,2BACFtM,GADL,IAEEiK,QAAQ,GAAD,mBAAMjK,EAAMiK,SAAZ,CAAqBzW,MAGhC,KAAKf,IAAQ8Z,cAAgB,IACnB/Y,EAASyM,EAATzM,KACR,OAAO,2BACFwM,GADL,IAEEiK,QAASjK,EAAMiK,QAAQzG,QAAO,SAAA8I,GAAM,OAAIA,EAAOpC,OAAS1W,OAG5D,KAAKf,IAAQ+Z,cAAgB,IACnBhZ,EAASyM,EAATzM,KAEFyW,EAAUjK,EAAMiK,QAAQnW,KAAI,SAAAwY,GAChC,OAAIA,EAAOpC,OAAS1W,EAAKuE,IAChB,2BACFuU,GADL,IAEEG,QAASjZ,IAIN8Y,KAGT,OAAO,2BACFtM,GADL,IAEEiK,YAGJ,KAAKxX,IAAQia,YACX,OAAO,2BAAK1M,GAAZ,IAAmBuK,YAAY,IAEjC,KAAK3J,IAAaC,OAChB,OAAOnB,EAET,QACE,OAAOM,I,wBChNPN,EAAgB,CACpBvI,SAAUwV,cACVvT,SAAU,GACVD,SAAU,IAyBGjC,EAtBI,WAAoC,IAAnC8I,EAAkC,uDAA1BN,EAAeO,EAAW,uCACpD,OAAQA,EAAOhL,MACb,KAAKxC,IAAQma,cACX,IAAMzV,EAAW8I,EAAOzM,KACxB,OAAO,2BACFwM,GADL,IAEE7I,aAGJ,KAAK1E,IAAQoa,kBAAoB,IAAD,EACF5M,EAAOzM,KAA3B6F,EADsB,EACtBA,OAAQyT,EADc,EACdA,QAChB,OAAO,2BAAK9M,GAAZ,IAAmB5G,SAAS,2BAAM4G,EAAM5G,UAAb,kBAAwBC,EAASyT,MAE9D,KAAKra,IAAQsa,aAAe,IAAD,EACK9M,EAAOzM,KAA7B6F,EADiB,EACjBA,OAAQ5E,EADS,EACTA,UAChB,OAAO,2BAAKuL,GAAZ,IAAmB7G,SAAS,2BAAM6G,EAAM7G,UAAb,kBAAwBE,EAAS5E,MAE9D,QACE,OAAOuL,I,0BCbPN,EAAgB,GAwDPsN,EAjDM,WAAoC,IAAnChN,EAAkC,uDAA1BN,EAAeO,EAAW,uCACtD,GAAIyL,IAAmBrG,MAAMpF,GAAS,CAAC,IAC7B0L,EAAmB1L,EAAOsF,QAA1BoG,eACR,OAAOzG,YAAQlF,GAAO,SAAAmF,GACfA,EAAMwG,KACTxG,EAAMwG,GAAkBzT,IAAuByT,OAIrD,GAAIsB,IAAmB5H,MAAMpF,GAC3B,OAAOiF,YAAQlF,GAAO,SAAAmF,GAAU,IAAD,EACElF,EAAOsF,QAA9BkH,EADqB,EACrBA,QAAShY,EADY,EACZA,UAEZ0Q,EAAM1Q,KACT0Q,EAAM1Q,GAAayD,IAAuBzD,IAG5Cb,OAAOsZ,OAAO/H,EAAM1Q,GAAYgY,MAIpC,OAAQxM,EAAOhL,MACb,KAAKkY,IAAa9M,uBAAyB,IACjC5L,EAAcwL,EAAOzM,KAArBiB,UACR,OAAO,2BACFuL,GADL,kBAEGvL,EAFH,2BAGOyD,IAAuBzD,IACvBuL,EAAMvL,MAIf,KAAKhC,IAAQ2a,oBACX,OAAO1N,EAGT,KAAKjN,IAAQ4a,oBAAsB,IACzB5Y,EAAcwL,EAAOzM,KAArBiB,UAEgC6Y,GAAatN,EAA5CvL,GAHuB,YAGqBuL,EAHrB,CAGvBvL,GAHuB,WAKhC,OAAO6Y,EAGT,QACE,OAAOtN,I,SChEPN,EAAgB,CACpB6N,WAAY,GACZ3Y,SAAU,GACV4Y,eAAgB,IAoCHC,EAjCA,WAAoC,IAAnCzN,EAAkC,uDAA1BN,EAAeO,EAAW,uCAChD,OAAQA,EAAOhL,MACb,KAAKxC,IAAQC,eAAiB,IAAD,EACCuN,EAAOzM,KAA3BL,EADmB,EACnBA,GAAI+B,EADe,EACfA,YACNwY,EAAG,eAAQ1N,EAAMuN,YAEvB,OADAG,EAAIva,GAAM+B,EACH,2BAAK8K,GAAZ,IAAmBuN,WAAYG,IAEjC,KAAKjb,IAAQE,kBACX,IAAMQ,EAAK8M,EAAOzM,KACZka,EAAG,eAAQ1N,EAAMuN,YAEvB,cADOG,EAAIva,GACJ,2BAAK6M,GAAZ,IAAmBuN,WAAYG,IAEjC,KAAKjb,IAAQG,mBAAqB,IAAD,EACQqN,EAAOzM,KAAtCoC,EADuB,EACvBA,SAAUR,EADa,EACbA,MAAOpC,EADM,EACNA,UACnB2a,EAAW,eAAQ3N,EAAMwN,gBAE1BG,EAAYvY,KACfuY,EAAYvY,GAAS,IAEvB,IAAMwY,EAAkBD,EAAYvY,GAKpC,OAJKwY,EAAgB5a,KACnB4a,EAAgB5a,GAAa,IAE/B4a,EAAgB5a,GAAWgW,KAAKpT,GACzB,2BAAKoK,GAAZ,IAAmBwN,eAAgBG,IAErC,QACE,OAAO3N,I,QChCPN,EAAgB,CACpBmO,WAAY,GACZC,mBAAkB,GAgBLC,GAdH,WAAoC,IAAnC/N,EAAkC,uDAA1BN,EAAeO,EAAW,uCAC7C,OAAQA,EAAOhL,MACb,KAAKxC,IAAQub,YAAc,IAAD,EACG/N,EAAOzM,KAA3BqI,EADiB,EACjBA,KAAKoS,EADY,EACZA,YACZ,OAAO,2BAAKjO,GAAZ,IAAmB6N,WAAYhS,EAAKiS,kBAAkBG,IAExD,KAAKxb,IAAQyb,aACX,OAAO,2BAAIlO,GAAX,IAAkB6N,WAAY,GAAGC,mBAAmB,IAEtD,QACE,OAAO9N,I,UCAEmO,GAZEjJ,aAAQ,SAACC,EAAOlF,GAC/B,IACE,GAAIpF,KAAIwK,MAAMpF,GAAS,CAAC,IAAD,EACEA,EAAOsF,QAAtBxN,EADa,EACbA,IAAKxE,EADQ,EACRA,MACb4R,EAAMpN,GAAOxE,GAEf,MAAOmI,GACPL,IAAa7B,MAAb,kCACA6B,IAAa7B,MAAMkC,MAV0C,I,UCiBlD0S,GAXKlJ,aAAQ,SAACC,EAAOlF,GAC9BhF,KAAkBoK,MAAMpF,WAEnBkF,EADsBlF,EAAOsF,QAA5BhK,kBAGV,GAAIJ,KAAmBkK,MAAMpF,GAAS,CAAC,IAAD,EACKA,EAAOsF,QAAxC/J,EAD4B,EAC5BA,WAAYD,EADgB,EAChBA,iBACpB4J,EAAM5J,GAAN,2BAA+BC,GAA/B,IAA2CD,wBATzB,IC2BP8S,GAnBEC,YAAgB,CAC/B9W,KAAM+W,EACNxX,KAAMyX,EACNtX,WAAYuX,EACZ1L,OAAQ2L,EACRzJ,KAAM0J,EACN5H,OAAQ6H,EACR5M,QAAS6M,EACTjF,KAAMkF,EACNtE,KAAMuE,EACN/B,aAAcgC,EACdvB,OAAQwB,EACRlB,IAAKmB,GACLf,YACAC,iB,wCCzBae,GAJI,CACjBC,ECHoB,SAAApP,GACpBhM,QAAQC,IAAI,iCACZ,IAAMob,EAAQ,2BACTrP,GADS,IAEZ+C,OAAO,2BACF/C,EAAM+C,QADL,IAEJR,MAAO,OAIX,OADAvO,QAAQC,IAAI,8BAA+Bob,GACpCA,I,oBCRIC,GAAsB,SAACtP,GAAD,OACjCA,EAAMxI,KAAK/C,WAEA8a,GAAS,SAACvP,GAAD,QAA6BA,EAAMxI,KAAK/C,WAEjD+a,GAAa,SAACxP,GAAD,OAA0BA,EAAMxI,KAAKe,Q,SCAlDkX,GAAiB,SAACzP,GAC7B,IAAM0P,EAAgBJ,GAAoBtP,GACpC2P,EAAY3P,EAAMgN,aAAa0C,GACrC,OAAIC,IAGF3b,QAAQwF,MAAM,iCACPoW,IAAOC,gBAAgBH,KAIrBI,GAAa,SAACrb,GAAD,OAAuB,SAC/CuL,GAEA,IAAM2P,EAAY3P,EAAMgN,aAAavY,GAErC,OAAIkb,GAGKC,IAAOC,gBAAgBpb,KAIrBsb,GAAsB,SAAC/P,GAClC,OAAOpM,OAAOoc,KAAKhQ,EAAMgN,eAGdiD,GAA2B,SAACjQ,GACvC,IAAM0P,EAAgBJ,GAAoBtP,GAC1C,OAAO+P,GAAoB/P,GAAOwD,QAAO,SAAAzL,GAAG,OAAIA,IAAQ2X,MAG7CQ,GAAsBC,cACjC,SAACnQ,GAAD,OAAkBA,EAAMgN,gBACxB,SAAChN,GAAD,OAAkBA,EAAMxI,KAAK/C,aAC7B,SAAC2b,EAAOV,GACN,OAAO9b,OAAOyc,OAAOD,GAAO5M,QAC1B,SAAA0G,GAAI,OAAIA,EAAKzV,YAAcib,QCtCpBY,GAAgBH,aAC3Bb,IACA,SAACtP,GAAD,OAAkBA,EAAMwK,KAAKP,WAC7B,SAACyF,EAAezF,GACd,OAAOA,EAAQzG,QAAO,SAAA+M,GAAC,OAAIA,EAAErG,OAASwF,QCJ7Bc,GAA4BL,cACvC,SAACnQ,GAAD,OAAkBA,EAAMgC,QAAQyF,oBAChC,SAACzH,GAAD,OAAkBA,EAAMgC,QAAQ0F,iBAChC,SAAC+I,EAAgB/I,GACf,OAAO,2BACF+I,GACA/I,M,qBCLIgJ,GAAiDP,cAC5D,SAACnQ,GAAD,OAAkBA,EAAMiF,KAAKa,UAC7B,SAAAA,GACE,OAAOlS,OAAOyc,OAAOvK,MAIZ6K,GAAoB,SAACzK,GAAD,OAAqB,SACpDlG,GAEA,IAAM6F,EAAQ7F,EAAMiF,KAAKa,OAAOI,GAChC,cAAOL,QAAP,IAAOA,IAAS,OAML+K,GAAoB,SAACnc,GAAD,OAAuB,SACtDuL,GAEA,QAASpM,OAAOyc,OAAOrQ,EAAMiF,KAAKa,QAAQqG,MACxC,SAAAtG,GAAK,OAAIA,EAAMgL,OAASpc,OAIfqc,GAAgC,SAAC9Q,GAAD,OAC3CA,EAAMiF,KAAKO,yBAEAuL,GAEmBZ,cAC9B,SAACnQ,GAAD,OAAkBA,EAAMiF,KAAKQ,mBAC7BiL,IACA,SAACjL,EAAkBK,GACjB,OAAOlS,OAAOyc,OAAO5K,GAAkBjC,QACrC,SAAAwN,GAAG,OAAKlL,EAAOqG,MAAK,SAAAtG,GAAK,OAAIA,EAAM1S,KAAO6d,EAAIC,yBAKvCC,GAAoB,SAAClR,GAAD,OAAkBA,EAAMiF,KAAKc,iBAEjDoL,GAAiBhB,cAC5B,SAACnQ,GAAD,OAAkBA,EAAMiF,KAAKa,UAC7B,SAAC9F,GAAD,OAAkBA,EAAMgN,gBACxB,SAAClH,EAAQsK,GACP,IAAMgB,EAAcxd,OAAOyc,OAAOvK,GAAQhS,KAAI,SAAA+R,GAAK,OAAIA,EAAMgL,QAE7D,OADmBQ,KAAKD,GACNtd,KAAI,SAAAW,GACpB,IAAMyV,EAAOkG,EAAM3b,GACnB,OAAKyV,GACIhS,IAAuBzD,SAOzB6c,GAAsB,SAACC,GAAD,OAAgC,SACjEvR,GAEA,IAAMwR,EAAaxR,EAAMiF,KAAKa,OAAOyL,GAC/BE,EAAezR,EAAMiF,KAAKQ,iBAAiB8L,GAEjD,OAAIE,IAIAD,GAIG,QAGIE,GAAsB,SAACxL,GAAD,OAAqB,SACtDlG,GAEA,OAAOpM,OAAOyc,OAAOrQ,EAAMiF,KAAKc,gBAAgBG,IAAU9B,MAAK,SAAClR,EAAGmR,GACjE,OAAOA,EAAEkC,UAAYrT,EAAEqT,e,0CC3EdoL,GAAkBxB,aAC7Bb,IACA,SAACtP,GAAD,OAAkBA,EAAMwK,KAAKH,SAC7B,SAACqF,EAAerF,GAEd,OAAOuH,KAAOvH,GAAO,SAACwH,EAAGpd,GAAJ,OAAkBA,IAAcib,QAI5CoC,GAAiB,SAAC9R,GAAD,OAAkBA,EAAMwK,KAAKH,OAE9C0H,GAAuB,SAAC/R,GAAD,OAAkBA,EAAMwK,KAAKF,aAEpD0H,GAAmB,SAAChH,EAAkBO,GAAnB,OAAsC,SACpEvL,GACwB,IAAD,EACvB,OAAO,UAAAA,EAAMwK,KAAKH,MAAMW,UAAjB,eAA4BmB,MAAK,SAAA9Y,GAAI,OAAIA,EAAKF,KAAOoY,OAAW,OAG5D0G,GAA4B,SAACxd,GAAD,OAAuB,SAC9DuL,GAC4C,IAAD,EACrCqK,GAAQ,UAAArK,EAAMwK,KAAKH,MAAM5V,UAAjB,eAA6BgL,UAAW,GAChDyS,EAAiBlS,EAAMwK,KAAKF,YAAY7V,IAAc,GACtD6V,EAAc1W,OAAOyc,OAAO6B,GAC5BC,EAAQ,sBAAO9H,GAAP,YAAiBC,IAS/B,OAPA6H,EAAS/N,MAAK,SAAClR,EAAGmR,GAChB,IAAM+N,EAAQla,IAAoBhF,GAAKA,EAAE0Y,UAAY1Y,EAAEsR,KAGvD,OAFatM,IAAoBmM,GAAKA,EAAEuH,UAAYvH,EAAEG,MAExC4N,KAGTD,IAGIE,GAAmB,SAACC,EAAgB/G,GAAjB,OAAoC,SAClEvL,GAGA,OADuBA,EAAMwK,KAAKF,YAAYgI,IAAW,IACnC/G,IAAW,OAGtBgH,GAA2CpC,aACtD2B,GACAC,GACAzB,IACA,SAACjG,EAAOC,EAAaL,GACnB,IAAMuI,EAAqBvI,EAAQnW,KAAI,SAAAyc,GAAC,OAAIA,EAAErG,QACxCuI,EAAgBC,KAAKrI,EAAOmI,GAC5BG,EAAiBD,KAAKpI,EAAakI,GAEnCI,EAAehf,OAAOyc,OAAOoC,GAAeI,OAC5CC,EAAYlf,OAAOyc,OAAOsC,GAC7B7e,KAAI,SAAAif,GAAO,OAAInf,OAAOyc,OAAO0C,MAC7BF,OASH,MAPY,sBAAID,GAAJ,YAAqBE,IAAW1O,MAAK,SAAClR,EAAGmR,GACnD,IAAM+N,EAAQla,IAAoBhF,GAAKA,EAAE0Y,UAAY1Y,EAAEsR,KAGvD,OAFatM,IAAoBmM,GAAKA,EAAEuH,UAAYvH,EAAEG,MAExC4N,QCpEPY,GAAuB7C,cAClC,SAACnQ,GAAD,OAAkBA,EAAMoO,eACxB,SAACA,GACC,OAAOxa,OAAOyc,OAAOjC,MAIZ6E,GAAqC9C,aAChD6C,IACA,SAACE,GACC,OAAOA,EAAOzT,QAAQ2E,MAAK,SAAClR,EAAGmR,GAC7B,OAAOA,EAAEkC,UAAYrT,EAAEqT,gBAKhB4M,GAAyB,SAAC5X,GAAD,OAA8B,SAClEyE,GADkE,OAE/DA,EAAMoO,YAAY7S,KCbV6X,GAAa,SAACpT,GAAD,OAAkBA,GCStCqT,GAAgB,CACpBtb,IAAK,OACLub,aACAC,UAAW,CAAC,QACZC,QAAS,EACTC,gBAAiBC,KACjBC,QAASC,aAAczE,GAAY,CACjC9U,OAAOwZ,KAILC,GAAmBC,aACvBV,GACAW,IAiBIC,GAdkB,WACtB,IAAMC,EAAoBC,YAAgBC,KAEpCvd,EAAQyF,OAAO+X,6BACjBC,YACER,GAEAS,YAAQL,EAAmB5X,OAAO+X,iCAEpCC,YAAYR,GAAkBI,GAElC,MAAO,CAAErd,QAAO2d,UADAC,aAAa5d,IAIN6d,GAEZ7d,GAAQod,GAAiBpd,MAEzB2d,GAAYP,GAAiBO,UAK7BG,GAAc,SACzBC,GADyB,OAEXC,aAAkCD,IAErCE,GAAc,WACzB,OAAOC,iB,gCC/DT,0KACO,IAAMtiB,EAAU,CACrBuiB,gBAAiB,aACjBzT,cAAe,gBACfD,kBAAmB,yBACnBE,gBAAiB,kBACjBX,OAAQ,cACRF,aAAc,kBAIHxI,EAAmB,SAAAgS,GAAM,MAAK,CACzClV,KAAMxC,EAAQ6O,kBACd9N,KAAM2W,IAGK8K,EAAc,SAAAC,GAAI,MAAK,CAClCjgB,KAAMxC,EAAQ8O,cACd/N,KAAM0hB,IAGKC,EAAgB,SAAA1T,GAAM,MAAK,CACtCxM,KAAMxC,EAAQ+O,gBACdhO,KAAMiO,IAGK2T,EAAS,iBAAO,CAC3BngB,KAAMxC,EAAQoO,U,2FCxBVwU,EAAoB,CACxBC,IAAK,CACH,WACA,QAEA,eACA,0BAEFC,KAAM,CAAC,6BAA8B,4BACrCC,IAAK,GACLC,OAAQ,IAGJC,EAAc,uCAAG,WAAMC,GAAN,2BAAAziB,EAAA,sEACG,wCADH,mBACb2D,EADa,EACbA,MACAsC,EAAatC,EAAMI,WAAWC,WAA9BiC,SACAE,EAAWxC,EAAMI,WAAWO,KAA5B6B,OAEA7F,EAASmiB,EAATniB,KAEF8F,EAAkBH,EAASE,GAEkB,UAA/Cwa,mIAAY+B,+BATK,0CAUZD,GAVY,WAahBrc,EAbgB,wBAcnBtF,QAAQ4F,KACN,6DACAP,EACAF,GAjBiB,kBAmBZwc,GAnBY,yBAsBU7c,IAA0B,CACvDrE,UAAW6E,EACXhB,QAASzC,KAAK4D,UAAUjG,KAxBL,eAsBfuF,EAtBe,oDA4BhB4c,GA5BgB,IA6BnBniB,KAAMuF,KA7Ba,4CAAH,sDAiCd8c,EAAe,uCAAG,WAAM9f,GAAN,6BAAA7C,EAAA,yDACjB6C,EADiB,yCAEbA,GAFa,uBAKE,wCALF,mBAKdc,EALc,EAKdA,MACAuC,EAAavC,EAAMI,WAAWC,WAA9BkC,SACAC,EAAWxC,EAAMI,WAAWO,KAA5B6B,OAEA7F,EAASuC,EAATvC,KAEHsF,IAA8BtF,GAXb,0CAYbuC,GAZa,WAehBwD,EAfgB,UAeEH,EAASC,UAfX,aAeE,EAAkBR,WAfpB,wBAkBpB7E,QAAQ4F,KACN,6DACAP,EACAD,GArBkB,kBAuBbrD,GAvBa,yBA0BS+C,IAA0B,CACvDD,WAAYU,EACZR,iBAAkBvF,IA5BE,eA0BhBwF,EA1BgB,oDA+BVjD,GA/BU,IA+BAvC,KAAMwF,KA/BN,4CAAH,sDAkCrB5F,IAAK0iB,aAAaC,QAAQC,IAA1B,uCAA8B,WAAML,GAAN,yBAAAziB,EAAA,+EAEF,wCAFE,mBAElB2D,EAFkB,EAElBA,MACA+D,EAAc/D,EAAMI,WAAWO,KAA/BoD,UACAzD,EAAaN,EAAMI,WAAWC,WAA9BC,SACAI,EAAYV,EAAMI,WAAWO,KAA7BD,SACF0e,EAA2C,IAA5BN,EAAOO,IAAIhN,QAAQ,QAGtCyM,EAAOpV,QAAQC,OAAOC,cAAtB,iBAAgD7F,GAChD+a,EAAOpV,QAAQC,OAAO,wBAA0BrJ,EAC7CI,IAEDoe,EAAOpV,QAAQC,OAAO,6BAA+BjJ,KAMvD0e,GACCZ,EAAkBM,EAAOlU,OAAO0U,eAAeC,SAAST,EAAOO,KApBxC,kCAsBXR,EAAeC,GAtBJ,0EAyBnBA,GAzBmB,kCA2B1B3hB,QAAQwF,MAAR,MA3B0B,0DAA9B,uDA+BApG,IAAK0iB,aAAa/f,SAASigB,IAA3B,uCACE,WAAMjgB,GAAN,SAAA7C,EAAA,+EACS2iB,EAAgB9f,IADzB,2CADF,6FAIE,WAAMyD,GAAN,eAAAtG,EAAA,+EAE2B2iB,EAAgBrc,EAAMzD,UAFjD,cAEUA,EAFV,OAGIyD,EAAMzD,SAAWA,EAHrB,kBAIW5B,QAAQqG,OAAOhB,IAJ1B,sCAMIxF,QAAQwF,MAAR,MACMA,EAPV,yDAJF,uDAgBepG,MAAf,G,iCClIA,8CAEayH,EAAMK,YAGhB,iB,0oBCQUzI,EAAU,CACrB2V,sBAAuB,6BACvBQ,cAAe,sBAEfyN,wBAAyB,gCACzBC,0BAA2B,kCAE3BjO,qBAAsB,sBACtBG,WAAY,oBACZG,cAAe,uBACfE,oBAAqB,mBACrBI,kBAAmB,sBACnBG,iBAAkB,yBAClBC,oBAAqB,6BAGVkN,EAAqB,SAChCC,GADgC,IAEhCC,EAFgC,sGAG7B,WAAMxjB,GAAN,eAAAC,EAAA,yDACEujB,EADF,uBAEGljB,EAAsC,CACxCW,iBAAkB,KAClBX,MAAOijB,GAEJA,IACHjjB,EAAQ,IAPT,SASKH,IAAKC,KAAK,eAAgB,CAC9BC,KAAM,kCACNC,UAXD,OAcHN,EAAS,CACPgC,KAAMxC,EAAQ2V,sBACd5U,KAAMgjB,IAhBL,2CAH6B,uDAsBrBE,EAAc,SACzB5N,EACAJ,GAFyB,IAGzB+N,EAHyB,sGAItB,WAAMxjB,GAAN,iBAAAC,EAAA,yDACGyjB,EAAW7N,EAAQ8N,SAAS,KAAO9N,EAAQrJ,MAAM,GAAI,GAAKqJ,EAC3D2N,EAFF,uBAGKI,EAAQhhB,KAAK4D,UAAU,CAAEqP,QAAS6N,EAAUjO,cAHjD,SAIKtV,IAAKC,KAAK,eAAgB,CAC9BC,KAAM,4BACNC,MAAO,CACLW,iBAAkB,KAClBX,MAAOsjB,KARV,OAYH5jB,EAAS,CACPgC,KAAMxC,EAAQmW,cACdpV,KAAM,CAAEsV,QAAS6N,EAAUjO,eAd1B,2CAJsB,uDAsBdT,EAAwB/M,YAGlCzI,EAAQ4jB,yBAEErO,EAAqB9M,YAE/B,8BAEU4b,EAAsB,SACjC9U,EACA/M,GAFiC,8CAG9B,WAAMhC,GAAN,iBAAAC,EAAA,yDACU,WAAT+B,EADD,mBAEI8hB,YAAoB/U,GAFxB,sBAGO,IAAIgV,UAAJ,wDAHP,uBAQK5jB,IAAKC,KAAK,eAAgB,CAC9BC,KAAK,gCAAD,OAAkC0O,EAAQ7O,IAC9CI,MAAOyO,IAVR,cAaD/O,EACE+U,EAAmB,CACjB3K,KAAM2E,KAfT,kBAmBMA,GAnBN,wBAqBsB5O,IAAKC,KAC1B,eACA,CACEC,KAAM,yBACNC,MAAO,CACLW,iBAAkB,KAClBX,MAAOsC,KAAK4D,UAAUuI,MA3B3B,wBAqBOxO,EArBP,EAqBOA,KAURP,EACEgV,EAAsB,CACpBjG,UACAkG,IAAK1U,KAlCR,kBAqCMA,GArCN,4CAH8B,uDA4CtB2U,EAA0BjN,YACrCzI,EAAQ6jB,2BAGGW,EAAgB,SAAC3hB,EAAKF,EAAOmW,GAAb,8CAAwB,WAAMtY,GAAN,uBAAAC,EAAA,sEAC5BE,IAAKC,KAAK,sBAAuB,CACtD4B,KAAM,gBACNK,MACAE,GAAIJ,EACJK,KAAM,GACNC,SAAU,IACVC,QAAS4V,IAPwC,OAUnD,GAVmD,SAC3C/X,EAD2C,EAC3CA,MAQF0jB,EAAY1jB,EAAKoC,SAASG,WACfmhB,EAAUC,iBACzB,IAAWC,KAAaF,EAAUC,iBAC5BvjB,OAAOyjB,eAAeC,KAAKJ,EAAUC,iBAAkBC,KACnDpV,EAAUkV,EAAUC,iBAAiBC,GAC3CnkB,EAAS,CACPgC,KAAMxC,EAAQ4V,qBACd7U,KAAM,CAAE+U,YAAY,GAAD,OAAKnT,EAAL,kBAAoBmW,GAAUvJ,cAhBN,2CAAxB,uDAsBhBuV,EAAY,SAAC,GAAD,IAErB7O,EAFqB,EAErBA,UACAD,EAHqB,EAGrBA,UACArB,EAJqB,EAIrBA,UACAC,EALqB,EAKrBA,aACAC,EANqB,EAMrBA,gBACAC,EAPqB,EAOrBA,gBACAC,EARqB,EAQrBA,qBACAO,EATqB,EASrBA,cAEF0O,EAXuB,sGAYpB,WAAMxjB,GAAN,SAAAC,EAAA,yDACEujB,EADF,gCAEKrjB,IAAKC,KAAK,eAAgB,CAC9BC,KAAM,0BACNC,MAAO,CACLW,iBAAkB,KAClBX,MAAOsC,KAAK4D,UAAU,CACpBiP,YACAD,YACArB,YACAC,eACAC,kBACAC,kBACAC,uBACAO,qBAdL,OAmBH9U,EAAS,CACPgC,KAAMxC,EAAQ+V,WACdhV,KAAM,CACJkV,YACAD,YACArB,YACAC,eACAC,kBACAC,kBACAC,uBACAO,mBA7BD,2CAZoB,uDA6CZyP,EAAe,eAC1Bf,EAD0B,wDAE1BgB,EAF0B,sGAGvB,WAAMxkB,GAAN,SAAAC,EAAA,yDACEukB,GACHC,YAAW,CACT7b,KAAM,mEADR6b,CAEGzkB,GAEAwjB,EANF,gCAOKrjB,IAAKC,KAAK,eAAgB,CAC9BC,KAAM,0BACNC,MAAO,CACLW,iBAAkB,KAClBX,MAAO,aAXV,OAeHN,EAAS,CACPgC,KAAMxC,EAAQkW,gBAhBb,2CAHuB,uDAsBfgP,EAAoB,SAAC7O,EAASjK,GAAV,OAAwB,SAAA5L,GACvDA,EAAS,CACPgC,KAAMxC,EAAQoW,oBACdrV,KAAM,CAAEsV,UAASjK,iBAGR+Y,EAAyB,SAAC9O,EAASjK,GAAV,OAAwB,SAAA5L,GAC5DA,EAAS,CACPgC,KAAMxC,EAAQwW,kBACdzV,KAAM,CAAEsV,UAASjK,iBAGRgZ,EAAiB,SAAC/O,EAASjK,GAAV,OAAwB,SAAA5L,GACpDA,EAAS,CACPgC,KAAMxC,EAAQ2W,iBACd5V,KAAM,CAAEsV,UAASjK,iBAUfiZ,EAA8B,kCAEvBC,EAAyB,yDAAM,WAC1C9kB,GAD0C,eAAAC,EAAA,6DAG1Cc,QAAQqG,MAAR,wCAH0C,SAIf9F,YAAM,CAC/BC,MAAOsjB,EACPpjB,WAAW,EACXD,UAAW,KACXE,OAAO,WAAD,4BAAE,WAAOqN,EAAiBjK,GAAxB,eAAA7E,EAAA,kEAEJc,QAAQqG,MAAR,yBACArG,QAAQqG,MAAM2H,GAEK,kBAARjK,EALP,sBAMI,IAAIif,UAAJ,wCAA+Cjf,IANnD,UASCiK,EATD,uBAUF/O,EACEkV,EAAwB,CACtBhV,GAAI4E,KAZN,6BAkBmB,kBAAZiK,EAlBP,uBAmBI,IAAIgV,UAAJ,kCACuBjf,EADvB,uBACyClC,KAAK4D,UAChDuI,GAFE,MAnBJ,WA0BEgW,EAASC,YAAUjW,GAEpBkW,YAAmBF,GA5BpB,uBA6BI,IAAIhB,UAAJ,sEAC2DnhB,KAAK4D,UAClEue,EACA,KACA,KAjCF,QAsCJ/kB,EACEgV,EAAsB,CACpBjG,QAASgW,EACT9P,IAAK,CACH/U,GAAI4E,EACJtE,IAAI,MA3CN,kDAgDJO,QAAQwF,MAAR,2CACAxF,QAAQwF,MAAR,MAjDI,0DAAF,qDAAC,KARiC,cAIpC3B,EAJoC,yBA8DnCA,GA9DmC,2CAAN,uDAiEzBsgB,EAA2B,kBAAM,WAC5CnkB,QAAQqG,MAAR,oCACAJ,YAAwB6d,KAGbM,EAAsB,yDAAM,WACvCnlB,GADuC,eAAAC,EAAA,6DAGvCmlB,IAAOhe,MAAP,qCAHuC,SAIZ9F,YAAM,CAC/BC,MAAO,wCACPE,WAAW,EACXsD,QAH+B,SAGvB0D,GACNC,MAAM,0CAAD,OAA2C9F,KAAK4D,UAAUiC,KAC/D2c,IAAO7e,MAAP,0CAAwDkC,IAE1D/G,OAAO,WAAD,4BAAE,WAAO0I,GAAP,SAAAnK,EAAA,kEAES,OAATmK,EAFA,oDAKJgb,IAAOhe,MAAP,6BACAge,IAAOhe,MAAMgD,GAER0Z,YAAoB1Z,GARrB,sBASI,IAAI2Z,UAAJ,uCAC4BnhB,KAAK4D,UAAU4D,EAAM,KAAM,KAV3D,OAcJpK,EACE+U,EAAmB,CACjB3K,UAhBA,kDAoBJgb,IAAO7e,MAAP,wCACA6e,IAAO7e,MAAP,MArBI,0DAAF,mDAAC,KAX8B,cAIjC3B,EAJiC,yBAqChCA,GArCgC,2CAAN,wD,kcC1TtBpF,EAAU,CACrBuQ,aAAc,sBACdI,cAAe,sBACfQ,kBAAmB,2BACnBC,uBAAwB,+BACxBF,cAAe,uBACfG,cAAe,uBACfC,mBAAoB,2BACpBC,cAAe,uBACfC,mBAAoB,2BACpBZ,WAAY,oBACZC,SAAU,mBACVC,YAAa,sBACbW,yBAA0B,iCAC1Ba,0BAA2B,kCAC3BC,oBAAqB,6BAGVsT,EAAqB,yDAAM,WAAMrlB,GAAN,iBAAAC,EAAA,+EAEbE,IAAK2B,IAAL,oBAFa,gBAE5BvB,EAF4B,EAE5BA,KAERP,EAAS,CACPgC,KAAMxC,EAAQuQ,aACdxP,KAAM,CACJmO,eAAgBnO,EAAK+kB,gBACrB3W,iBAAkBpO,EAAKglB,kBACvB3W,sBAAuBrO,EAAKilB,2BATI,gDAapCzkB,QAAQwF,MAAR,2EAboC,yDAAN,uDAoBrBkf,EAAe,yDAAM,WAAMzlB,GAAN,mBAAAC,EAAA,+EAEPE,IAAK2B,IAC1B,wDAH4B,gBAEtBvB,EAFsB,EAEtBA,KAGFmlB,EAAenlB,EAAKA,KAAKqR,OAAO+T,QAAQ,KAAM,IAEpD3lB,EAAS,CACPgC,KAAMxC,EAAQ2Q,cACd5P,KAAMmlB,IATsB,gDAY9B3kB,QAAQwF,MAAR,6DAZ8B,yDAAN,uDAgBfqf,EAAoB,SAAC,GAAD,IAC/B5W,EAD+B,EAC/BA,KAD+B,IAE/B6W,oBAF+B,MAEhB,GAFgB,MAG/BC,aAH+B,uDAI3B,WAAO9lB,EAAUgE,GAAjB,mBAAA/D,EAAA,qEAEM6O,EAAiB9K,IAAW8L,OAA5BhB,cAGQE,MAAQA,IAAS8W,GAC/BhX,EAAaG,WAAaD,GAN1B,iEAWqB7O,IAAK2B,IAAI,wBAAyB,CACvDikB,OAAQ,CACN/W,OACA6W,kBAdF,gBAWMtlB,EAXN,EAWMA,KAORP,EAAS,CACPgC,KAAM8jB,EAAQtmB,EAAQmR,kBAAoBnR,EAAQoR,uBAClDrQ,SApBA,kDAuBFQ,QAAQwF,MAAR,2EAvBE,0DAJ2B,yDAkCpByf,EAAgB,yDAAM,WAAMhmB,GAAN,iBAAAC,EAAA,+EAERE,IAAK2B,IAAI,yBAFD,gBAEvBvB,EAFuB,EAEvBA,KAERP,EAAS,CACPgC,KAAMxC,EAAQkR,cACdnQ,KAAMA,EAAK6O,WANkB,gDAS/BrO,QAAQwF,MAAR,qEAT+B,yDAAN,uDAgBhB0f,EAAa,yDAAM,WAAMjmB,GAAN,iBAAAC,EAAA,+EAELE,IAAK2B,IAAI,sBAFJ,uBAEpBvB,EAFoB,EAEpBA,KAERP,EAAS,CACPgC,KAAMxC,EAAQ4Q,WACd7P,KAAMA,EAAK+O,QANe,kBASrB/O,GATqB,sCAW5BQ,QAAQwF,MAAR,kFAX4B,8DAAN,uDAmBb2f,EAAgB,SAAC,GAAD,IAC3BlX,EAD2B,EAC3BA,KAD2B,IAE3B6W,oBAF2B,MAEZ,GAFY,MAG3BC,aAH2B,uDAIvB,WAAO9lB,EAAUgE,GAAjB,mBAAA/D,EAAA,qEAEMoP,EAAarL,IAAW8L,OAAxBT,UAEML,MAAQA,IAAS8W,GAAUzW,EAASJ,WAAaD,GAJ7D,iEAQqB7O,IAAK2B,IAAI,oBAAqB,CACnDikB,OAAQ,CACN/W,OACA6W,kBAXF,gBAQMtlB,EARN,EAQMA,KAORP,EAAS,CACPgC,KAAM8jB,EAAQtmB,EAAQqR,cAAgBrR,EAAQsR,mBAC9CvQ,SAjBA,kDAoBFQ,QAAQwF,MAAR,oEApBE,0DAJuB,yDA6DhB4f,EAA2B,yDAAM,WAAMnmB,GAAN,iBAAAC,EAAA,sEACrBE,IAAK2B,IAAI,uBADY,uBACpCvB,EADoC,EACpCA,KAERP,EAAS,CACPgC,KAAMxC,EAAQyR,yBACd1Q,SAL0C,kBAQrCA,GARqC,2CAAN,uDAW3B6lB,EAAc,SAAC,GAAD,IAAG5kB,EAAH,EAAGA,UAAWmC,EAAd,EAAcA,KAAd,8CAAyB,WAAM3D,GAAN,mBAAAC,EAAA,+EAE1CE,IAAKC,KAAK,uBAAwB,CACtCimB,OAAQ7kB,EACRmC,KAAMA,IAJwC,OAO1C2iB,EAAU,CACd7V,QAASjP,EACT+kB,QAAS5iB,EACT6iB,WAAY,EACZC,WAAY,EACZC,SAAU,EACVC,SAAU,EACVC,SAAS,GAGX5mB,EAAS,CACPgC,KAAMxC,EAAQ6Q,SACd9P,KAAM+lB,IAnBwC,sDAsBhDvlB,QAAQwF,MAAR,qDACgD5C,EADhD,oCACgFnC,EADhF,+BAtBgD,gDA0B1C,KAAKsB,gBA1BqC,aA0B1C,EAAevC,YA1B2B,sEAAzB,uDA8BdsmB,EAAc,SAAC,GAAD,QACzBrlB,iBADyB,MACb,GADa,MAEzBslB,uBAFyB,MAEP,EAFO,MAGzBC,kBAHyB,MAGZ,EAHY,gDAIrB,WAAO/mB,EAAUgE,GAAjB,uBAAA/D,EAAA,wEAEyB+D,IAAW2S,KAA9BJ,EAFN,EAEMA,SAAUD,EAFhB,EAEgBA,KAFhB,SAGInW,IAAKC,KAAK,uBAAwB,CACtCimB,OAAQ7kB,EACRslB,gBAAiBA,EAAgB5W,WACjC8W,kBAAmBD,EAAW7W,WAC9B+W,WAAY1Q,EAASD,KAPrB,OAUFtW,EAASgmB,KAVP,sDAYFjlB,QAAQwF,MAAR,uFACkF/E,EADlF,uCAC0HslB,EAD1H,qCACsKC,EADtK,eAZE,gDAgBI,KAAKjkB,gBAhBT,aAgBI,EAAevC,YAhBnB,sEAJqB,yDAwBd2mB,EAAqB,yDAAK,WAAMlnB,GAAN,qBAAAC,EAAA,+EAGfE,IAAK2B,IAAI,oBAHM,gBAG5BvB,EAH4B,EAG5BA,KACPP,EAAS,CACPgC,KAAKxC,EAAQuS,oBACbxR,SANiC,sDASnCQ,QAAQwF,MAAR,MATmC,gDAU7B,KAAKzD,gBAVwB,aAU7B,EAAevC,YAVc,sEAAL,wD,uQC3PrB4mB,EAAgB,SAAC5mB,GAC5B,IAEE,OADmBqC,KAAKC,MAAMtC,GAE9B,MAAO4E,GACP,OAAO5E,ICwBL6mB,EAAqB,CACzB,OACA,aACA,cACA,oBACA,YAOWC,EAAwB,SAAC/mB,GACpC,OAAOgnB,SAAOpgB,KAAK5G,EAAO,WAOfinB,EAAwB,SAACjnB,GACpC,OAAOgnB,SAAOpgB,KAAK5G,GAAO4P,SAAS,WAGxBsX,EAAa,SAAC1iB,GACzB,OAAIwiB,SAAOG,SAAS3iB,GACXA,EAGYuiB,EAAsBviB,IAIhC4iB,EAAoC,SAC/C5hB,GAEA,GACyC,kBAAhCA,EAAiB6hB,YACO,kBAAxB7hB,EAAiB8hB,IACQ,kBAAzB9hB,EAAiB+hB,KACmB,kBAApC/hB,EAAiBgiB,eAGxB,OAAOhiB,EAGT,GACEwhB,SAAOG,SAAS3hB,EAAiB6hB,aACjCL,SAAOG,SAAS3hB,EAAiB8hB,KACjCN,SAAOG,SAAS3hB,EAAiB+hB,MACjCP,SAAOG,SAAS3hB,EAAiBgiB,gBAEjC,MAAO,CACLH,WAAYJ,EAAsBzhB,EAAiB6hB,YACnDC,GAAIL,EAAsBzhB,EAAiB8hB,IAC3CC,IAAKN,EAAsBzhB,EAAiB+hB,KAC5CC,eAAgBP,EAAsBzhB,EAAiBgiB,iBAI3D,MAAM,IAAIC,IAAW,CACnB3iB,MAAO,mBACPC,QAAS,sCAIA2iB,EAA4B,SACvCliB,GAEA,GACEwhB,SAAOG,SAAS3hB,EAAiB6hB,aACjCL,SAAOG,SAAS3hB,EAAiB8hB,KACjCN,SAAOG,SAAS3hB,EAAiB+hB,MACjCP,SAAOG,SAAS3hB,EAAiBgiB,gBAGjC,OAAOhiB,EAGT,GACyC,kBAAhCA,EAAiB6hB,YACO,kBAAxB7hB,EAAiB8hB,IACQ,kBAAzB9hB,EAAiB+hB,KACmB,kBAApC/hB,EAAiBgiB,eAExB,MAAO,CACLH,WAAYN,EAAsBvhB,EAAiB6hB,YACnDC,GAAIP,EAAsBvhB,EAAiB8hB,IAC3CC,IAAKR,EAAsBvhB,EAAiB+hB,KAC5CC,eAAgBT,EAAsBvhB,EAAiBgiB,iBAI3D,MAAM,IAAIC,IAAW,CACnB3iB,MAAO,mBACPC,QAAS,sCAIA4iB,EAAqB,SAAC5iB,GAAD,OACzB,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASsiB,cAAT,OAAuBtiB,QAAvB,IAAuBA,OAAvB,EAAuBA,EAASuiB,MAAhC,OAAsCviB,QAAtC,IAAsCA,OAAtC,EAAsCA,EAASwiB,OAA/C,OAAsDxiB,QAAtD,IAAsDA,OAAtD,EAAsDA,EAASyiB,iBAEpDI,EAAiB,SAACjiB,GAAD,OAC5BmhB,EAAmBjE,SAASld,IACmB,UAA/C2a,mIAAY+B,gCAEDwF,EAAkB,WAC7B,IAAMviB,EAAqBwiB,IAASC,kBAC9B7mB,EAAoB4mB,IAASE,UAAU1iB,GAK7C,MAAO,CACLA,aACApE,YACA+mB,iBANuBhB,EAAsB3hB,GAO7C4iB,gBANsBjB,EAAsB/lB,KAUnCinB,EAAc,uCAAG,yCAAAxoB,EAAA,6DAC5BuB,EAD4B,EAC5BA,UAD4B,IAE5B6D,eAF4B,MAElB,GAFkB,EAItBqjB,EAAqBlB,EAAWhmB,GA7GJlB,EA8GQ+E,EAApCsjB,EA7GCrB,SAAOpgB,KAAK5G,EAAO,SAwGE,SAMqB8nB,IAASQ,QACxDF,EACAC,GAR0B,cAMtB7iB,EANsB,OAUtB+iB,EAA2B,CAC/BlB,WAAY7hB,EAAiB6hB,WAC7BC,GAAI9hB,EAAiB8hB,GACrBC,IAAK/hB,EAAiB+hB,IACtBC,eAAgBhiB,EAAiBgiB,gBAdP,kBAiBrBJ,EAAkCmB,IAjBb,iCAzGK,IAACvoB,IAyGN,OAAH,sDAoBdwoB,EAAc,uCAAG,yCAAA7oB,EAAA,6DAC5B2F,EAD4B,EAC5BA,WACAE,EAF4B,EAE5BA,iBAF4B,SAKpBijB,EAAsBvB,EAAW5hB,GALb,SAMmBwiB,IAASY,QACpDD,EACAf,EAA0BliB,IARF,cAMpBmjB,EANoB,OAUpBljB,EAAmBkjB,EAAuB/Y,SAAS,SACnDgZ,EAAgB/B,EAAcphB,GAXV,kBAanBmjB,GAbmB,wCAeS,aAA/B,eAAI7jB,eAAJ,eAAa8jB,gBACfpoB,QAAQ4F,KACN,WADF,KAGEqhB,EAA0BliB,IAnBJ,+DAAH,uD,8yBChKdtG,G,MAAU,CACrB4pB,WAAY,aACZjQ,WAAY,mBACZG,cAAe,sBACfC,cAAe,sBACf8P,WAAY,kBACZC,cAAe,iBACfC,iBAAkB,oBAClBC,iBAAkB,wBAClBC,YAAa,oBACbhQ,YAAa,gBAGFiQ,EAAe,SAAA5kB,GAAG,OAAI,SAAA9E,GAAQ,OACzCA,EAAS,CACPgC,KAAMxC,EAAQ8Z,cACd/Y,KAAMuE,MAGG6kB,EAAY,SAAAtQ,GAAM,OAAI,SAAArZ,GAAQ,OACzCA,EAAS,CACPgC,KAAMxC,EAAQ2Z,WACd5Y,KAAM8Y,MA6BG7B,EAAcvP,YAGxB,oBAEU4P,EAAe5P,YAIzB,qBAEU2hB,EAAgB,SAACnS,EAAgBa,GAAjB,OAAoC,SAC/DtY,GAEA,IACE,IAAM4E,EAAetD,YAAM,CACzBC,MAAM,GAAD,OAAKkW,EAAL,mBAAsBa,EAAtB,QACL5W,OAFyB,SAElBtB,GAEDuc,IAAiBvc,GACnBJ,EACE6X,EAAa,CACXJ,SACAvX,GAAIoY,EACJlY,UAGc,OAATA,GACTJ,EACEwX,EAAY,CACVC,SACAvX,GAAIoY,MAKZvT,QArByB,SAqBjB0D,GACNL,IAAa7B,MAAb,uCACkC+R,EADlC,oBACoDb,EAAOjL,OACtD,GAFL,QAIE/D,GAEFC,MAAM,gCAAD,OAC6B4P,EAD7B,oBAC+Cb,EAAOjL,OACtD,GAFA,aAGG/D,EAAEpD,aAKd,OAAO,WACLT,EAAa4C,MAAK,SAAAgB,GAChBA,EAAIhD,UAGR,MAAOiD,GAWP,OAVAL,IAAa7B,MAAb,uCACkC+R,EADlC,oBACoDb,EAAOjL,OAAO,GADlE,QAEE/D,GAEFC,MAAM,gCAAD,OAC6B4P,EAD7B,oBAC+Cb,EAAOjL,OAAO,GAD7D,aAED/D,EAAEpD,UAIC,gBAIEwkB,EAAqB,SAACroB,GAAD,OAAuB,SACvDxB,GAEA,IAEE,IAAM4E,EAAetD,YAAM,CACzBC,MAAM,GAAD,OAAKC,EAAL,mBACLuD,QAFyB,SAEjB0D,GACNL,IAAa7B,MAAb,iDAC4C/E,EAAUgL,OAAO,GAD7D,QAEE/D,GAEFC,MAAM,0CAAD,OACuClH,EAAUgL,OAAO,GADxD,aAED/D,EAAEpD,WAIR3D,OAAQ,SAACtB,EAAekY,GAElBqE,IAAiBvc,GACnBJ,EACE6X,EAAa,CACXJ,OAAQjW,EACRtB,GAAIoY,EACJlY,UAGc,OAATA,EACTJ,EACEwX,EAAY,CACVC,OAAQjW,EACRtB,GAAIoY,KAIRlQ,IAAa7B,MAAb,4CACuC/E,EAAUgL,OAC5C,GAFL,sBAIEpM,MAMR,OAAO,WACLwE,EAAa4C,MAAK,SAAAgB,GAChBA,EAAIhD,UAGR,MAAOiD,GAOP,OANAL,IAAa7B,MAAb,wCACmC/E,EAAUgL,OAAO,GADpD,QAEE/D,GAEFC,MAAM,iCAAD,OAAkClH,EAAUgL,OAAO,GAAnD,aAA0D/D,EAAEpD,UAE1D,gBAIE+S,EAAsBnQ,YAKhC,4BAEU6hB,EAAiB,SAACrS,EAAgBa,GAAjB,OAAoC,SAChEtY,GAEA,IAEE,IAAM4E,EAAetD,YAAM,CACzBC,MAAM,GAAD,OAAKkW,EAAL,mBAAsBa,EAAtB,yBACL5W,OAFyB,SAElB2W,EAAsBnY,GAGvB+E,IAAqBoT,GACvBrY,EACEoY,EAAoB,CAClBX,SACAY,cACAnY,KACAoY,YAIJlQ,IAAa7B,MAAb,mEAC8DkR,EAAOjL,OAChE,GAFL,qBAGgB8L,EAHhB,QAIED,IAINtT,QAvByB,SAuBjB0D,GACNL,IAAa7B,MAAb,yDACoDkR,EAAOjL,OACtD,GAFL,qBAGgB8L,EAHhB,QAIE7P,GAEFC,MAAM,kDAAD,OAC+C+O,EAAOjL,OACtD,GAFA,qBAGW8L,EAHX,aAGsB7P,EAAEpD,aAIjC,OAAO,WACLT,EAAa4C,MAAK,SAAAgB,GAChBA,EAAIhD,UAGR,MAAOiD,GAaP,OAZAL,IAAa7B,MAAb,gDAC2CkR,EAAOjL,OAC7C,GAFL,qBAGgB8L,EAHhB,QAIE7P,GAEFC,MAAM,kCAAD,OAC+B+O,EAAOjL,OAAO,GAD7C,qBAC4D8L,EAD5D,aAED7P,EAAEpD,UAIC,gBAIL0kB,EAAgB,yBAETC,EAAmB,yDAAM,WAAMhqB,GAAN,eAAAC,EAAA,sEACTqB,YAAM,CAC/BC,MAAOwoB,EACPtoB,WAAW,EACXC,OAAO,WAAD,4BAAE,WAAO2X,EAAQvU,GAAf,SAAA7E,EAAA,yDACNc,QAAQkpB,KAAR,qBACAlpB,QAAQkpB,KAAK5Q,GACM,kBAARvU,EAHL,uBAIJ/D,QAAQ4F,KAAR,uCAA6C7B,IAJzC,6BAQDuU,EARC,uBASJrZ,EAAS0pB,EAAa5kB,IATlB,6BAaqB,kBAAhBuU,EAAOpC,KAbZ,wBAcJlW,QAAQ4F,KAAR,wCAA8C0S,EAAOpC,KAArD,MAdI,2BAkBNjX,EAAS2pB,EAAUtQ,IAlBb,4CAAF,qDAAC,KAJ2B,cAC9BzU,EAD8B,OA0BpC7D,QAAQqG,MAAM,mBA1BsB,kBA4B7BxC,GA5B6B,2CAAN,uDA+BnBslB,EAAqB,kBAAM,WACtCnpB,QAAQqG,MAAM,qBACdJ,YAAwB+iB,KAGbI,EAAc,SAAC,GAAD,IACzB3oB,EADyB,EACzBA,UACA8I,EAFyB,EAEzBA,OACAsH,EAHyB,EAGzBA,OAHyB,8CAIrB,WAAM5R,GAAN,iBAAAC,EAAA,sEACmBE,IAAKC,KAAK,sBAAuB,CACtD4B,KAAM,MACNK,IAAKuP,EACLrP,GAAIf,EACJgB,KAAM,eACNC,SAAmB,KAATmP,EAAiB,GAC3BlP,QAAS4H,IAPP,gBACI/J,EADJ,EACIA,KAQRQ,QAAQC,IAAIT,GACZP,EAAS,CACPgC,KAAMxC,EAAQiqB,YACdlpB,KAAM,CACJiB,YACA8I,SACAsH,YAfA,2CAJqB,uDAwBdwY,EAAiB,SAAC,GAAD,IAAGlqB,EAAH,EAAGA,GAAI6X,EAAP,EAAOA,SAAP,MAAuB,CACnD/V,KAAMxC,EAAQ+pB,iBACdhpB,KAAM,CACJL,KACA6X,cAISsS,EAAa,iBAAO,CAC/BroB,KAAMxC,EAAQia,cAKHlB,EAAoBtQ,YAG9B,0BAEUwQ,EAAqBxQ,YAK/B,2BAEUqiB,EAAiB,SAAC9R,GAAD,OAA6B,SACzDxY,GAEA,IAEE,IAAM4E,EAAetD,YAAM,CACzBC,MAAM,GAAD,OAAKiX,EAAL,yBACLzT,QAFyB,SAEjB0D,GACNL,IAAa7B,MAAb,wDACmDiS,EAAgBhM,OAC9D,GAFL,QAIE/D,GAEFC,MAAM,iDAAD,OAC8C8P,EAAgBhM,OAC9D,GAFA,aAGG/D,EAAEpD,WAGZ3D,OAAQ,SAAC6oB,EAAqBjS,GAExBrT,IAAuBslB,GACzBvqB,EACEyY,EAAmB,CACjBC,eAAgB6R,EAAW7R,eAC3BJ,SACAK,UAAW4R,EAAW5R,UACtBH,qBAGoB,OAAf+R,EACTvqB,EACEuY,EAAkB,CAChBD,SACAE,qBAIJpQ,IAAa7B,MAAb,mDAC8CiS,EAAgBhM,OACzD,GAFL,sBAIE+d,MAMR,OAAO,WACL3lB,EAAa4C,MAAK,SAAAgB,GAChBA,EAAIhD,UAGR,MAAOiD,GAWP,OAVAL,IAAa7B,MAAb,+CAC0CiS,EAAgBhM,OAAO,GADjE,QAEE/D,GAEFC,MAAM,wCAAD,OACqC8P,EAAgBhM,OAAO,GAD5D,aAED/D,EAAEpD,UAIC,gBAME0T,EAAkB9Q,YAK5B,wBAEUuiB,EAAc,SAAC/S,EAAgBa,GAAjB,OAAoC,SAC7DtY,GAEA,IACE,IAAM4E,EAAetD,YAAM,CACzBC,MAAM,GAAD,OAAKkW,EAAL,mBAAsBa,EAAtB,oBACL5W,OAFyB,SAElBsX,EAAiBC,GACpB,IAAMwR,EAAanoB,OAAO0W,GACT0R,MAAfD,EACFzqB,EACE+Y,EAAgB,CACdtB,SACAa,SACAU,OAAOyR,EACPxR,WAIJ7Q,IAAa7B,MAAb,eACU+R,EADV,4BACoCW,EADpC,6BAEED,MAMR,OAAO,WACLpU,EAAa4C,MAAK,SAAAgB,GAChBA,EAAIhD,UAGR,MAAOiD,GAYP,OAXAL,IAAa7B,MAAb,0DACqDkR,EAAOjL,OACvD,GAFL,oBAGe8L,EAHf,QAIE7P,GAEFC,MAAM,mDAAD,OACgD+O,EAAOjL,OACvD,GAFA,oBAGU8L,EAHV,aAGqB7P,EAAEpD,UAErB,iB,sXCldE7F,EAAU,CACrByN,gBAAiB,aACjBC,YAAa,cACbC,YAAa,cACbC,uBAAwB,yBACxBud,sBAAuB,wBACvBC,gBAAiB,cACjB/c,qBAAsB,0BACtBH,aAAc,kBASHmd,EAAY,SAAAzkB,GAAM,OAAI,SAAApG,GACjCA,EAAS,CACPgC,KAAMxC,EAAQ2N,YACd5M,KAAM6F,MAIG0kB,EAAkB,SAACxlB,EAAQhB,GAAT,8CAAqB,WAAMtE,GAAN,qBAAAC,EAAA,sEAE1CqN,EAAU,GACZhJ,IACFgJ,EAAQ,6BAA+BhJ,GAJO,SAMzBnE,IAAK2B,IAAL,UAAYwD,EAAZ,YAA8B,CACnDgI,YAP8C,mBAMxC/M,EANwC,EAMxCA,KANwC,sBAUxC,IAAIwqB,MAAJ,0EAVwC,cAehD,UAAIxqB,EAAKyqB,iBAAT,aAAI,EAAgB3lB,UAClBrF,EAAS,CACPgC,KAAMxC,EAAQmrB,sBACdpqB,MAAM,IAlBsC,kBAsBzCA,GAtByC,kCAwBhDQ,QAAQC,IAAR,sDACAD,QAAQC,IAAR,MACAhB,EAAS,CACPgC,KAAMxC,EAAQmrB,sBACdpqB,MAAM,IA5BwC,0DAArB,uDAiClB0qB,EAAwB,yDAAM,WAAMjrB,GAAN,qBAAAC,EAAA,sEAClBE,IAAK2B,IAAI,0BADS,mBACjCvB,EADiC,EACjCA,KACA2qB,EAA+B3qB,EAA/B2qB,aAAcC,EAAiB5qB,EAAjB4qB,cAElBD,EAJqC,uBAKvClrB,EAAS,CACPgC,KAAM2L,IAAaW,cACnB/N,KAAuB,WAAjB4qB,EAA4B,eAAiB,YAPd,kBAShCA,GATgC,cAYzCnrB,EAAS,CACPgC,KAAM2L,IAAaW,cACnB/N,KAAM,iBAdiC,kBAiBlC,gBAjBkC,4CAAN,uDAoBxB6qB,EAAc,SACzB9lB,GADyB,IAEzB+lB,IAFyB,yDAGzB/mB,EAHyB,uDAGf,KAHe,8CAItB,WAAMtE,GAAN,qBAAAC,EAAA,6DACCorB,IACFrrB,EAAS,CACPgC,KAAMxC,EAAQyN,kBAEhBjN,EAAS,CACPgC,KAAM2L,IAAaoU,mBAGjBuJ,EATH,+BAAArrB,EAAA,MASU,WAAO0D,EAAM4nB,GAAb,SAAAtrB,EAAA,6DACXE,IAAKkN,SAASme,QAAd,UAA2B7nB,GACvBW,GACFtE,EAASyrB,EAAWnnB,IAEtBtE,EAAS,CACPgC,KAAMxC,EAAQ0N,YACd3M,KAAMoD,IAPG,SAULzC,QAAQR,IAAI,CAChBV,EAASirB,KACTjrB,EAAS0rB,iBAZA,OAeXhoB,YAAcC,GAAM,GAfT,2CATV,wDA4BGgoB,EAAkBrmB,EAAOqgB,QAAQ,iBAAkB,IA5BtD,kBA8BuBmF,EAAgB,WAAD,OAC1Ba,GACXrnB,EAFsBwmB,CAGtB9qB,GAjCD,YA8BD4rB,EA9BC,gCAmCCA,EAAgBC,mBAAhB,kBAAgDF,GAnCjD,UAoCOL,EAAK,WAAD,OAAYK,GAAmBC,GApC1C,iCAqCQA,GArCR,0DAwCD7qB,QAAQC,IAAR,MAxCC,eA2CHD,QAAQwF,MAAM,oDA3CX,UA4CsBukB,EAAgB,UAAD,OAC5Ba,GACVrnB,EAFuBwmB,CAGvB9qB,GA/CC,eA4CG8rB,EA5CH,QAgDQD,mBAAX,iBAA0CF,GAhDvC,UAiDGL,EAAK,UAAD,OAAWK,GAAmBG,GAjDrC,iCAkDIF,GAAmBE,GAlDvB,0DAJsB,uDAyDdC,EAAe,SAAC,GAAD,IAC1Brf,EAD0B,EAC1BA,MACAsf,EAF0B,EAE1BA,SAF0B,8CAGtB,WAAMhsB,GAAN,mBAAAC,EAAA,+EAEqBE,IAAKC,KAC1B,gBACA,CACEsM,QACAsf,YAEF,CAEEthB,QAAS,MAVX,uBAEMnK,EAFN,EAEMA,KAYRP,EAASkF,aAAiB,IACpB+mB,EAAeC,YAAU3rB,EAAK4rB,eACpCnsB,EAAS,CACPgC,KAAMxC,EAAQ4N,uBACd7M,KAAM,CACJmM,MAAOnM,EAAK0W,KAAKvK,MACjB/E,UAAWpH,EAAK4rB,cAChB3qB,UAAWjB,EAAK0W,KAAKzV,UAErBmL,wBAAyBsf,EAAaG,OAvBxC,kBA0BK7rB,GA1BL,wCA4BFP,EAASkF,aAAiB,IACpBmnB,YAAW,EAAD,IA7Bd,0DAHsB,uDAoCfC,EAAc,SAAC,GAAD,IACzB5f,EADyB,EACzBA,MACAsf,EAFyB,EAEzBA,SAFyB,8CAGrB,WAAMhsB,GAAN,mBAAAC,EAAA,+EAEqBE,IAAKC,KAAK,2BAA4B,CAC3DsM,QACAsf,aAJA,uBAEMzrB,EAFN,EAEMA,KAKRP,EAASkF,aAAiB,IACpB+mB,EAAeC,YAAU3rB,EAAK4rB,eACpCnsB,EAAS,CACPgC,KAAMxC,EAAQ4N,uBACd7M,KAAM,CACJmM,MAAOnM,EAAK0W,KAAKvK,MACjB/E,UAAWpH,EAAK4rB,cAChB3qB,UAAWjB,EAAK0W,KAAKzV,UAErBmL,wBAAyBsf,EAAaG,OAhBxC,kBAmBK7rB,GAnBL,wCAqBFP,EAASkF,aAAiB,IACpBmnB,YAAW,EAAD,IAtBd,0DAHqB,uDA6BdE,EAAe,SAAC,GAAD,IAC1B7f,EAD0B,EAC1BA,MACAsf,EAF0B,EAE1BA,SAF0B,8CAGtB,WAAMhsB,GAAN,mBAAAC,EAAA,+EAEqBE,IAAKC,KAC1B,kBACA,CACEsM,QACAsf,YAEF,CAEEthB,QAAS,MAVX,uBAEMnK,EAFN,EAEMA,KAYRP,EAASkF,aAAiB,IACpB+mB,EAAeC,YAAU3rB,EAAK4rB,eACpCnsB,EAAS,CACPgC,KAAMxC,EAAQ4N,uBACd7M,KAAM,CACJmM,MAAOnM,EAAK0W,KAAKvK,MACjB/E,UAAWpH,EAAK4rB,cAChB3qB,UAAWjB,EAAK0W,KAAKzV,UAErBmL,wBAAyBsf,EAAaG,OAvBxC,kBA0BK7rB,GA1BL,wCA4BFP,EAASkF,aAAiB,IACpBmnB,YAAW,EAAD,IA7Bd,0DAHsB,uDAoCfG,EAAqB,SAAAC,GAAM,OAAI,SAAAzsB,GAC1CA,EAAS,CACPgC,KAAMxC,EAAQqO,qBACdtN,KAAMksB,MAIGhB,EAAa,SAAAnnB,GAAO,MAAK,CACpCtC,KAAMxC,EAAQkO,aACdnN,KAAM+D,K,+XClLKooB,EAAoB,SAACC,GAChC,IAAK1nB,IAAa0nB,GAChB,OAAO,EAGT,IAAMC,EAAOD,EAEb,QAAK1nB,IAAyB2nB,EAAIC,UAI7B5nB,IAAyB2nB,EAAI1lB,UAI7BjC,IAAyB2nB,EAAIva,sBAI7BpN,IAAyB2nB,EAAI1sB,QAI7B+E,IAAyB2nB,EAAI5O,qBAI7B/Y,IAAyB2nB,EAAIE,gBAIL,kBAAlBF,EAAItZ,gBAuDJyZ,EAAU,SAACJ,GACtB,IAAK1nB,IAAa0nB,GAChB,OAAO,EAGT,IAAMC,EAAOD,EAEb,QAAK1nB,IAAyB2nB,EAAII,wBAI7B/nB,IAAyB2nB,EAAI1sB,KAI3B+E,IAAyB2nB,EAAIhP,QAYzBqP,EAAa,SAACN,GACzB,IAAK1nB,IAAa0nB,GAChB,OAAO,EAGT,IAAMC,EAAOD,EAEb,QAAK1nB,IAAyB2nB,EAAIvZ,UAI7BpO,IAAyB2nB,EAAI3Z,aAI7BhO,IAAyB2nB,EAAI1sB,KAIL,kBAAlB0sB,EAAItZ,aAuBJ2R,EAAqB,SAAC0H,GACjC,IAAK1nB,IAAa0nB,GAChB,OAAO,EAET,IAAMC,EAAOD,EAEb,MAA+B,kBAApBC,EAAIM,cAGW,kBAAfN,EAAI1jB,SAGU,kBAAd0jB,EAAIpiB,UAGVvF,IAAyB2nB,EAAI1U,SAGjB,mBAAb0U,EAAI5qB,MAA0C,mBAAb4qB,EAAI5qB,UAqB9B8hB,EAAsB,SAAC6I,GAClC,IAAK1H,EAAmB0H,GACtB,OAAO,EAET,IAAMC,EAAOD,EAEb,QAAK1nB,IAAyB2nB,EAAInV,SAIF,kBAAlBmV,EAAItZ,WAoCP6Z,EAvTW,SACtBC,GADsB,IAEtBC,EAFsB,uDAEmB,kBAAM,GAFzB,OAGnB,SAACV,GACJ,QAAK1nB,IAAa0nB,OAIbU,EAAcV,IAIZhsB,OAAOC,QAAQwsB,GAAQE,OAAM,YAAuB,IAAD,mBAApBxoB,EAAoB,KACxD,OAAOyoB,EADiD,MACvCZ,EAAE7nB,SA0SE0oB,CAAyB,CAChDjc,K,OAAMkc,EACNvW,OAAQjS,IACRgT,KAAM,SAACyV,GAAD,MAAgC,kBAARA,GAC9BxV,MAAOjT,O,8vBCjTIkN,EAA0BlK,YAEpC,2BAMU0lB,EAA6B,kBAAM,SAC9C3tB,GAEAoI,IAAahB,MAAb,6CACA,IACE,OAAO9F,YAAM,CACXC,MAAM,qCACNG,OAAQ,SAAA2Q,GACNjK,IAAahB,MAAb,8CACyCiL,IAGpCpN,IAAyBoN,GAQ9BrS,EACEmS,EAAwB,CACtBE,sBATFjK,IAAa7B,MAAb,8CAEE3D,KAAK4D,UAAU6L,OAYvB,MAAO5J,GACPC,MAAM,oEAAD,OACiED,EAAEpD,UAExE+C,IAAa7B,MAAb,mEAEEkC,MASOgK,EAA2BxK,YAErC,iCAKU0L,EAA0B1L,YAEpC,gCAMU2lB,EAAmB,SAACvb,GAAD,OAA8B,SAC5DrS,EACAgE,GAEAoE,IAAahB,MAAb,yCAAqDiL,EAArD,OACA,IACE,OAAO/Q,YAAM,CACXC,MAAM,wBAAD,OAA0B8Q,EAA1B,YACL/K,UAAW,OACX5F,OAAQ,SAACmsB,EAA0C3tB,GACjDkI,IAAahB,MAAb,0CACqCiL,EADrC,QAEEwb,GAH8D,IAMtDtb,EACNvO,IADFgO,KAAQO,wBAEVnK,IAAahB,MAAb,2BAAuCmL,IACnCF,IAAqBE,IAGrBoK,IAAyBkR,GAC3B7tB,EACEyS,EAAyB,CACvBC,gBAAiBmb,KAGS,OAArBA,EACT7tB,EACE2T,EAAwB,CACtBzT,QAIJkI,IAAahB,MAAb,8BAAkDymB,OAIxD,MAAOplB,GACPC,MAAM,sEAAD,OACmE2J,EADnE,cACyF5J,EAAEpD,UAEhG+C,IAAa7B,MAAb,6EACwE8L,EADxE,OAEE5J,MASAqlB,EAAiC,SACrCC,EACAvsB,EACAqrB,EACAmB,GAEA,IAAMC,EAAQvU,cA6Cd,MAlCI,CACFxZ,GAAI6tB,EAEJnQ,KAAM,CACJ3c,iBAAkB,KAClBX,MAAOkB,GAGT0sB,SAAU,CACRjtB,iBAAkB,KAClBX,MAAOusB,GAGTG,mBAAoB,CAClB/rB,iBAAkB,KAClBX,MAAO0tB,GAGTG,SAAS,eACNF,EAAQ,CACP/tB,GAAI+tB,EACJ5a,KAAM,CACJpS,iBAAkBO,EAClB4sB,cAAevB,EACfvsB,MAAO2E,KAETqO,UAAWC,KAAKC,MAChBP,QAAS8a,EACThhB,MAAO,KACP5H,IAAK,OAQAkpB,EAAyB,SAACC,GAAD,8CAAuB,WAC3D1P,EACA5a,GAF2D,eAAA/D,EAAA,6DAMrD8d,EAA8B/Z,IAAWgO,KAAKQ,iBAClD8b,GAPyD,SAUrDlmB,IAAWhI,KAAX,eAAgC,CACpCC,KAAK,gBAAD,OAAkB0d,EAAIC,iBAC1B1d,MAAOwtB,EACL/P,EAAIC,gBACJD,EAAI7W,KACJ6W,EAAI8O,KACJ9O,EAAI+O,iBAhBmD,OAoB3D1kB,IAAWhI,KAAX,eAAgC,CAC9BC,KAAK,uBAAD,OAAyB0d,EAAI1L,iBAA7B,YAAiD0L,EAAI7d,IACzDI,MAAO,OAtBkD,2CAAvB,yDA0BzBiuB,EAAuB,SAAC/sB,GAAD,8CAAuB,WACzDod,EACA5a,GAFyD,qCAAA/D,EAAA,6DAIzDmI,IAAahB,MAAb,uCACkC5F,EAAUgL,MAAM,EAAG,GADrD,QAGMgiB,EAAQvpB,KAA2B,SAACgQ,EAAKwZ,GAC7C,IAAM7pB,EAAetD,YAAM,CACzBI,OADyB,SAClBmrB,GACLzkB,IAAahB,MAAb,kCAC6B5F,EAAUgL,MAAM,EAAG,GADhD,iBAC2DqgB,IAEvD5nB,IAAyB4nB,IAC3BjoB,EAAa4C,MAAK,SAAAgB,GAAG,OAAIA,EAAIhD,SAC7ByP,EAAI4X,KAEJzkB,IAAahB,MAAb,8CACyC5F,EAAUgL,MAC/C,EACA,GAHJ,iBAIYqgB,IAEZjoB,EAAa4C,MAAK,SAAAgB,GAAG,OAAIA,EAAIhD,SAC7BipB,EAAI,IAAI1K,UAAJ,2BAGRxiB,MAAM,GAAD,OAAKC,EAAL,cACLuD,QApByB,SAoBjB0D,GACNL,IAAahB,MAAb,+CAC0C5F,EAAUgL,MAChD,EACA,GAHJ,iBAIYqgB,IAEZzkB,IAAa7B,MAAMkC,GAEjBgmB,EADe,kBAANhmB,EACL,IAAIsiB,MAAMtiB,GAEVA,SAMNimB,EAAoBzpB,KAA2B,SAACgQ,EAAKwZ,GACzD,IAAM7pB,EAAetD,YAAM,CACzBI,OADyB,SAClB2Q,GACDpN,IAAyBoN,IAC3B4C,EAAI5C,GACJzN,EAAa4C,MAAK,SAAAgB,GAAG,OAAIA,EAAIhD,WAE7BipB,EAAI,IAAI1K,UAAJ,yBACJnf,EAAa4C,MAAK,SAAAgB,GAAG,OAAIA,EAAIhD,WAGjCjE,MAAM,GAAD,OAAKC,EAAL,iCACLuD,QAXyB,SAWjB0D,GAEJgmB,EADe,kBAANhmB,EACL,IAAIsiB,MAAMtiB,GAEVA,SAMNkmB,EAAY1pB,KAA2B,SAACgQ,EAAKwZ,GACjD,IAAM7pB,EAAetD,YAAM,CACzBI,OADyB,SAClBmrB,GACD5nB,IAAyB4nB,IAC3B5X,EAAI4X,GACJjoB,EAAa4C,MAAK,SAAAgB,GAAG,OAAIA,EAAIhD,WAE7BipB,EAAI,IAAI1K,UAAJ,8BACJnf,EAAa4C,MAAK,SAAAgB,GAAG,OAAIA,EAAIhD,WAGjCjE,MAAM,kBACNwD,QAXyB,SAWjB0D,GAEJgmB,EADe,kBAANhmB,EACL,IAAIsiB,MAAMtiB,GAEVA,SAMNslB,EAAkBrU,cAClBsU,EAAkBtU,cAClBkV,EAAYlV,cA3FuC,SA4FRxY,QAAQR,IAAI,CAC3D8tB,EACAE,EACAC,IA/FuD,0CA4FlD9B,EA5FkD,KA4F5Cxa,EA5F4C,KA4F1Bwc,EA5F0B,KAkGzDzmB,IAAahB,MAAb,4EACuE5F,EAAUgL,MAC7E,EACA,GAHJ,QAOMsiB,EAEF,CACF5uB,GAAI0uB,EACJ1nB,KAAM,CACJjG,iBAAkBO,EAClB4sB,cAAevB,EACfvsB,MAAO0D,IAAWO,KAAK/C,WAEzBqrB,KAAMgC,EACNvb,UAAWC,KAAKC,MAChBwK,gBAAiB,CACf/c,iBAAkBO,EAClB4sB,cAAevB,EACfvsB,MAAO0tB,GAETlB,cAAe,CACb7rB,iBAAkBO,EAClB4sB,cAAevB,EACfvsB,MAAOytB,GAET1b,oBA9HuD,UAiInDjK,IAAWhI,KAAX,eAAgC,CACpCC,KAAK,uBAAD,OAAyBgS,EAAzB,YAA6Cuc,GACjDtuB,MAAOwuB,IAnIgD,eAwIzD1mB,IAAahB,MAAb,qCACgC5F,EAAUgL,MACtC,EACA,GAHJ,mDAxIyD,UA+InDpE,IAAWhI,KAAX,eAAgC,CACpCC,KAAK,gBAAD,OAAkB0tB,GACtBztB,MAAOwtB,EACLC,EACAvsB,EACAqrB,EACAmB,KArJqD,4CAAvB,yDA0JvBrb,EAAgB1K,YAC3B,sBAGW8K,EAAe9K,YAA6B,qBAE5C8mB,EAAY,yDAAM,WAC7B/uB,EACAgE,GAF6B,SAAA/D,EAAA,wFAKpBqB,YAAM,CACXC,MAAM,wBACNG,OAAQ,SAACkR,EAAqB1S,GAC5Ba,QAAQC,IAAI,kBACZD,QAAQC,IAAI4R,GACZ7R,QAAQC,IAAI,kBACE,OAAV4R,EAQC+J,IAAe/J,YAIbA,EAAMgM,SAENhM,EAAMub,SACbnuB,EACE2S,EAAc,CACZC,YAhBF5S,EACE+S,EAAa,CACX7S,SAkBRsB,UAAWwC,IAAWO,KAAK/C,aAhCF,gCAmC3BkH,MAAM,sEAAD,OACmE,KAAErD,UAE1E+C,IAAa7B,MAAb,8EAtC2B,wDAAN,yDA6CZ6M,EAA+BnL,YAIzC,qCAEUyL,EAA+BzL,YAGzC,qCAEU+K,EAA4B/K,YAItC,kCAEU+mB,EAAc,SAAC/b,EAAiBgc,GAAlB,8CAA0C,WACnEjvB,EACAgE,GAFmE,mBAAA/D,EAAA,yDAQ7DkT,EAAYuG,cARiD,SAW3D9G,EAAQ5O,IAAWgO,KAAKa,OAAOI,GAEH,IAA9Bgc,EAAYC,OAAOC,OAb0C,wDAiBjEnvB,EACEoT,EAA6B,CAC3BH,UACAE,YACA9N,QAAS4pB,EAAYC,UAInB7pB,EAA2B,CAC/BgO,KAAO,CACLpS,iBAAkB2R,EAAMgL,KACxBwQ,cAAexb,EAAMsb,SACrB5tB,MAAO2uB,GAEThc,UACA/S,GAAIiT,EACJG,UAAWC,KAAKC,MAChBzG,MAAO,KACP5H,IAAK,IAnC0D,SAsC3DiD,IAAWhI,KAAX,eAAgC,CACpCC,KAAK,gBAAD,OAAkB4S,EAAlB,qBAAsCE,GAC1C7S,MAAO+E,IAxCwD,OA2CjErF,EACE0T,EAA6B,CAC3BT,UACAE,eA9C6D,kDAkDjE/K,IAAa7B,MAAb,uCACAvG,EACEgT,EAA0B,CACxBC,UACAC,aAAc,KAAE7N,QAChB8N,eAvD6D,0DAA1C,yDA6DdM,EAA6BxL,YAGvC,mCAqEU2L,EAAuB3L,YAEjC,6BAEUmnB,EAAmB,SAACnc,GAAD,OAAqB,SACnDjT,EACAgE,GAMA,IACEoE,IAAahB,MAAb,6CAAyD6L,IAEzD,IAAML,EAAQ5O,IAAWgO,KAAKa,OAAOI,GAE/Boc,EAAc/tB,YAAM,CACxBC,MAAM,iBAAD,OAAmB0R,EAAnB,qBACLvR,OAAQ,SAAC2D,GACP+C,IAAahB,MAAb,2CACsC6L,EADtC,QAEE5N,GAEEsX,IAAkBtX,GACpBrF,EACE4T,EAAqB,CACnBvO,aAGiB,OAAZA,GAGT+C,IAAazB,KAAb,oCAC+BiM,EAAM1S,GADrC,sCAEEmF,IAINgC,kBAAmBuL,EAAMsb,SACzBnpB,QAvBwB,SAuBhB0D,GACNL,IAAa7B,MAAb,mDAEEkC,GAEFC,MAAM,gDAAD,OAAiDD,EAAEpD,aAItDiqB,EAAchuB,YAAM,CACxBC,MAAM,GAAD,OAAKqR,EAAMgL,KAAX,oBAA2BhL,EAAMoa,mBAAjC,qBACLtrB,OAAQ,SAAC2D,GACP+C,IAAahB,MAAb,2CACsC6L,EADtC,QAEE5N,GAEEsX,IAAkBtX,GACpBrF,EACE4T,EAAqB,CACnBvO,QAAQ,2BACHA,GADE,IAEL0H,MAAO,WAEPkG,QAASL,EAAM1S,QAIA,OAAZmF,GAGT+C,IAAazB,KAAb,oCAC+BiM,EAAM1S,GADrC,sCAEEmF,IAINgC,kBAAmBuL,EAAMsb,SACzBnpB,QA5BwB,SA4BhB0D,GACNL,IAAa7B,MAAb,mDAEEkC,GAEFC,MAAM,gDAAD,OAAiDD,EAAEpD,aAI5D,OAAO,WACLnE,QAAQR,IAAI,CAAC2uB,EAAaC,IAAc9nB,MAAK,SAAA+nB,GAAI,OAC/CA,EAAK1tB,SAAQ,SAAA2G,GAAG,OAAIA,EAAIhD,aAG5B,MAAOiD,GACPL,IAAa7B,MAAb,sCAA0DkC,GAC1DC,MAAM,iDAAD,OAAkDD,EAAEpD,c,iKCnpBzDmqB,EAAiB,KAKRC,EAAkB,uCAAG,sBAAAxvB,EAAA,yDAC1BuvB,EAD0B,yCAEnBtuB,QAAQiG,WAFW,gCAIvBqoB,KAJuB,2CAAH,qDCDlBhwB,EAAU,CACrBub,YAAa,iBACbE,aAAa,mBAEFwJ,EAAa,SAAC,GAAD,IAAE7b,EAAF,EAAEA,KAAF,IAAO8mB,UAAP,MAAY,KAAZ,SAAsB,SAAA1vB,IDPf,SAAA0vB,GAC7BF,EAAiBE,ECOnBC,CAAkBD,GAClB1vB,EAAS,CACPgC,KAAMxC,EAAQub,YACdxa,KAAM,CAACqI,OAAKoS,cAAe0U,OAIlBE,EAAc,SAAAC,GAAS,OAAI,SAAA7vB,GACnC6vB,GACDJ,IAEFzvB,EAAS,CACPgC,KAAMxC,EAAQyb,kB,0NCXLzb,EAAU,CACrB2a,oBAAqB,8BACrBC,oBAAqB,gCAGjB0V,EAAqB,IAAIC,IAElB/V,EAAqB/R,YAG/B,gCAKU+nB,EAAuB,SAACxuB,GAAD,OAAuB,SACzDxB,EACAgE,GAIA,GAAI8rB,EAAmBG,IAAIzuB,GACzB,OAAO,aAGTT,QAAQkpB,KAAK,kBAAoBzoB,GACjCsuB,EAAmB7f,IAAIzO,GAEvB,IAAMoD,EAAetD,YAAM,CACzBC,MAAM,GAAD,OAAKC,EAAL,qBACLC,WAAW,EACXC,OAAQ,SAACnB,EAAWuE,GACN,QAARA,GACF9E,EACEga,EAAmB,CACjBR,QAAS,CACP0W,IAAK3vB,GAEPiB,eAIM,gBAARsD,GACF9E,EACEga,EAAmB,CACjBR,QAAS,CACPlN,YAAa/L,GAEfiB,kBAOJ2uB,EAAY7uB,YAAM,CACtBC,MAAM,GAAD,OAAKC,EAAL,2BACLC,WAAW,EACXC,OAAQ,SAACnB,EAAMuE,GACb,GAAY,WAARA,EAAkB,CACpB,GAAoB,kBAATvE,GAA8B,OAATA,EAI9B,YAHA6H,IAAa7B,MAAb,yEACoEhG,EADpE,yBACyFiB,IAI3FxB,EACEga,EAAmB,CACjBR,QAAS,CACP4W,OAAQ7vB,GAEViB,oBAGC,GAAY,WAARsD,EAAkB,CAC3B,GAAoB,kBAATvE,GAA8B,OAATA,EAI9B,YAHA6H,IAAa7B,MAAb,yEACoEhG,EADpE,yBACyFiB,IAI3FxB,EACEga,EAAmB,CACjBR,QAAS,CACP6W,OAAQ9vB,GAEViB,oBAIJ4G,IAAa7B,MAAb,uBACkBzB,EADlB,oDAON,OAAO,WACL+C,YAAajD,EAAcurB,EAA3BtoB,GACAioB,EAAmB/oB,OAAOvF,MAIjB8uB,EAAyB,SAAC9uB,GAAD,6BAAuB,sBAAAvB,EAAA,sDAC3D+G,YAAwB,GAAD,OAAIxF,EAAJ,kBACvBwF,YAAwB,GAAD,OAAIxF,EAAJ,4BAFoC,6C,yVCP9C+uB,EAhGA,WACb,IAAMvwB,EAAW6hB,cACXhO,EAAO2c,eAAkB,qBAAG1c,OAAoBD,QAChDpO,EAAQgrB,uBAAY,WACxBzwB,EAAS0wB,iBACR,CAAC1wB,IACE2wB,EAAgBF,uBAAY,WAC5BpnB,OAAOunB,QAAQ,uCACjB5wB,EAASmiB,eACTniB,EAAS0wB,kBAEV,CAAC1wB,IAEE6wB,EAAcJ,uBAAY,cAAU,IAE1C,OACE,qCACE,qBACE7mB,UAAWC,IAAW,CACpB,kBAAkB,EAClB,sBAAuBgK,IAEzBid,QAASrrB,EALX,uBAOA,sBACEmE,UAAWC,IAAW,CACpB,oBAAoB,EACpB,wBAAyBgK,IAH7B,+BAME,sBAAKjK,UAAU,qBAAf,+BAaE,eAAC,IAAD,CAASA,UAAU,cAAcrH,GAAG,YAAYuuB,QAASrrB,EAAzD,+BACE,qBAAKmE,UAAU,mBAAf,8BACE,mBAAGA,UAAU,2BAAb,yBAEF,mBAAGA,UAAU,iCAAb,wDAEF,eAAC,IAAD,CAASrH,GAAG,WAAWqH,UAAU,cAAcknB,QAASrrB,EAAxD,+BACE,qBAAKmE,UAAU,mBAAf,8BACE,mBAAGA,UAAU,iBAAb,yBAEF,mBAAGA,UAAU,iCAAb,iDAEF,eAAC,IAAD,CAASrH,GAAG,kBAAkBqH,UAAU,cAAcknB,QAASrrB,EAA/D,+BACE,qBAAKmE,UAAU,mBAAf,8BACE,mBAAGA,UAAU,2BAAb,yBAEF,mBAAGA,UAAU,iCAAb,wDAGJ,qBAAKA,UAAU,wBAAf,8BAOE,sBAAKA,UAAU,cAAf,+BACE,qBAAKA,UAAU,mBAAf,8BACE,mBAAGA,UAAU,kBAAb,yBAEF,mBAAGA,UAAU,iCAAb,4CAIJ,sBAAKA,UAAU,yBAAf,+BACE,cAAC,IAAD,CAASrH,GAAG,aAAauuB,QAASrrB,EAAlC,8BACE,mBACEqrB,QAASD,EACTjnB,UAAU,kBACVX,MAAO,CAAE8nB,MAAO,oBAHlB,yBAMF,mBACED,QAASH,EACT/mB,UAAU,mBACVX,MAAO,CAAE8nB,MAAO,oBAHlB,iC,8DC1DJC,EAAeC,IAAMC,MAAK,kBAAM,wDAChCC,EAAeF,IAAMC,MAAK,kBAAM,wDAChCE,EAAqBH,IAAMC,MAAK,kBAAM,kCACtCG,EAAeJ,IAAMC,MAAK,kBAAM,+DAChCI,EAAcL,IAAMC,MAAK,kBAAM,+DAC/BK,EAAWN,IAAMC,MAAK,kBAAM,wDAC5BM,EAAWP,IAAMC,MAAK,kBAAM,wDAC5BO,EAAcR,IAAMC,MAAK,kBAAM,+DAC/BQ,EAAWT,IAAMC,MAAK,kBAAM,wDAC5BS,EAAWV,IAAMC,MAAK,kBAAM,+DAC5BU,EAAcX,IAAMC,MAAK,kBAAM,wDAC/BW,EAAqBZ,IAAMC,MAAK,kBACpC,wDAEIY,EAAmBb,IAAMC,MAAK,kBAClC,kCAEIa,EAAiBd,IAAMC,MAAK,kBAAM,kCAClCc,EAAaf,IAAMC,MAAK,kBAAM,wDAC9Be,EAAgBhB,IAAMC,MAAK,kBAAM,sEACjCgB,EAAgBjB,IAAMC,MAAK,kBAAM,gEACjCiB,EAAclB,IAAMC,MAAK,kBAAM,wDAC/BkB,EAAwBnB,IAAMC,MAAK,kBACvC,+DAGImB,GAAe,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAcvvB,EAAc,6BAE5CwvB,EADgB/B,eAAkB,qBAAG1sB,KAAgBgK,iBACfwkB,EAAYZ,EAExD,OAAO,cAAC,IAAD,2BAAW3uB,GAAX,IAAoBuvB,UAAWC,MA6UzBC,GA1UH,WACV,IAAMxyB,EAAW6hB,cACX4Q,EAAUC,cACV/qB,EAAY6oB,eAAkB,qBAAGjsB,KAAgBoD,aACjDmG,EAAgB0iB,eAAkB,qBAAG1sB,KAAgBgK,iBACrDtM,EAAYgvB,cAAkBA,uBAC9Brc,EAAYqc,eAAkB,qBAAGzhB,QAAsBoF,aACvDG,EAAkBkc,eACtB,qBAAGzhB,QAAsBuF,mBAErBD,EAAkBmc,eACtB,qBAAGzhB,QAAsBsF,mBAErBD,EAAeoc,eAAkB,qBAAGzhB,QAAsBqF,gBAC1DH,EAAkBuc,eACtB,qBAAGzhB,QAAsBkF,mBAErBC,EAAkBsc,eACtB,qBAAGzhB,QAAsBmF,mBAErB0G,EAAa4V,eAAkB,qBAAG1V,IAAcF,cAChDC,EAAoB2V,eACxB,qBAAG1V,IAAcD,qBAtBH,EAwBYjQ,mBAAS,GAxBrB,mBAwBT+nB,GAxBS,KAwBDC,GAxBC,QAyBYhoB,oBAAS,GAzBrB,qBAyBTC,GAzBS,MAyBDgoB,GAzBC,SA0BoCjoB,oBAAS,GA1B7C,qBA0BTkoB,GA1BS,MA0BWC,GA1BX,MA4BhB/nB,qBAAU,WACR,GAAKsJ,EAAL,CAGA,IAAI5J,EACEsoB,EAAWC,YAAW,sBAAC,sBAAAhzB,EAAA,+EAEPE,IAAK2B,IAAIwS,GAFF,iBAGhB/T,KAAKsK,OAHW,iDAMzBgoB,IAAU,GACVK,cAAcF,GACdtoB,EAAUyoB,YAAW,WACnBpyB,QAAQkpB,KAAK,OACb2I,GAAUrf,KAAKC,SACd,KAXsB,4GAa1B,KACH,OAAO,WACL0f,cAAcF,GACdI,aAAa1oB,OAEd,CAAC4J,EAAiBue,GAAWD,KAChC,IAAMS,GAAeC,mBAAQ,WAC3B,OACE,cAACnpB,EAAA,EAAD,CACEI,YAAY,EACZH,KAAM,CAAEoB,UAAW2I,EAAWpJ,WAAY,QAC1CL,QAAS,KACTxK,QAAIqzB,EACJlpB,WAAOkpB,EACPjpB,YAAQipB,EACRxpB,gBAAYwpB,EACZvpB,cAAUupB,EACV/oB,WAAO+oB,MAGV,CAACpf,EAAWwe,KAETa,GAAa/C,uBAAY,WAC7BtwB,IAAKC,KAAK,kBAAmB,CAC3BkK,OAAQ8J,EACRqf,UAAWpf,EACXqf,OAAO,8CACPC,aAAa,mDAAD,OAAqD1f,GACjE2f,SAAU1f,IAEZqQ,cAAevkB,GACfe,QAAQkpB,KAAKhW,GACbwe,EAAQ1c,KAAK,cACZ,CACD/V,EACAyyB,EACApe,EACAH,EACAE,EACAH,IAGFjJ,qBAAU,WACRE,IAAQ2oB,YAAY,KAAM,CACxB,qHACE,2BAEH,IAEH7oB,qBAAU,WACR,GAAKrD,EAAL,CAKA,IAEMmsB,EAAkC,IAFnBC,YAAUpsB,GAEGykB,IAAa7Y,KAAKC,MACpDtO,YAAiB4uB,QAPf9zB,EAASkF,aAAiB,MAQ3B,CAACyC,EAAW3H,IAEfgL,qBAAU,WACR,GAAI8C,EAIF,OAFA9N,EAASgwB,YAAqBxuB,IAEvB,WACLxB,EAASswB,YAAuB9uB,OAGnC,CAACsM,EAAe9N,EAAUwB,IAE7BwJ,qBAAU,WACR,IAAMyP,KAAS3M,GAAiBjD,IAAUsJ,GACtCsG,IAAQqY,IACVC,GAAsBtY,KAEvB,CACD3M,EACAjD,GACAsJ,EACA2e,GACAC,KAEF/nB,qBAAU,WACJ8nB,ICzMD,SAAqBkB,GAC1B,IAAMC,EAAQC,SAASC,eAAeH,GACtC,GAAIC,EAAJ,CAKA,IAAIG,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EACzCL,SAASC,eAAeF,EAAM/zB,GAAK,UAAUs0B,cAE7C,SAAuB/rB,IACrBA,EAAIA,GAAKY,OAAO1E,OACd8vB,iBAEFH,EAAO7rB,EAAEisB,QACTH,EAAO9rB,EAAEksB,QACTT,SAASU,YAAcC,EAEvBX,SAASY,cAAgBC,QAfzBh0B,QAAQC,IAAI,sBAkBd,SAAS+zB,EAAYtsB,GACjB1H,QAAQC,IAAI,kBACdyH,EAAIA,GAAKY,OAAO1E,OACd8vB,iBAEFL,EAAOE,EAAO7rB,EAAEisB,QAChBL,EAAOE,EAAO9rB,EAAEksB,QAChBL,EAAO7rB,EAAEisB,QACTH,EAAO9rB,EAAEksB,QAETV,EAAMhrB,MAAM+rB,IAAOf,EAAMgB,UAAYZ,EAAQ,KAC7CJ,EAAMhrB,MAAMisB,KAAQjB,EAAMkB,WAAaf,EAAQ,KAGjD,SAASS,IACL9zB,QAAQC,IAAI,gBAEdkzB,SAASU,YAAc,KACvBV,SAASY,cAAgB,MDmKvBM,CAAY,iBAEb,CAACtC,KAGJ,IAAMuC,GAAkB5E,sBAAW,sBAAC,oCAAAxwB,EAAA,+EAEQE,IAAK2B,IAAL,+CAEtC,CACEwL,QAAS,CACP,4BAA6B9L,KANH,iBAElB8zB,EAFkB,EAExB/0B,OAU0B,kBAAzB+0B,EAAgB/0B,MACE,KAAzB+0B,EAAgB/0B,MAEhB+iB,YAAmBgS,EAAgB/0B,MAAM,EAAzC+iB,CAA+CtjB,GAfjB,gDAmBhCe,QAAQC,IAAR,MAnBgC,mCAsBCb,IAAK2B,IAAL,yCAE/B,CACEwL,QAAS,CACP,4BAA6B9L,KA1BH,kBAsBlB+zB,EAtBkB,EAsBxBh1B,OAUmB,kBAAlBg1B,EAASh1B,MACE,KAAlBg1B,EAASh1B,OAEHi1B,EAAU5yB,KAAKC,MAAM0yB,EAASh1B,QACrBi1B,EAAQ3f,SAAW2f,EAAQ/f,WACxCgO,YAAY+R,EAAQ3f,QAAS2f,EAAQ/f,WAAW,EAAhDgO,CAAsDzjB,GArC1B,mDA0ChCe,QAAQC,IAAR,MA1CgC,iEA4CjC,CAAChB,EAAUwB,IACdwJ,qBAAU,WACH8C,GAGLunB,OACC,CAACvnB,EAAeunB,KAGnB,IAAMI,GAAiBhF,sBAAW,sBAAC,gCAAAxwB,EAAA,+EAEIE,IAAK2B,IAAL,uCAEjC,CACEwL,QAAS,CACP,4BAA6B9L,KANJ,qBAEjBk0B,EAFiB,EAEvBn1B,OAUqB,kBAApBm1B,EAAWn1B,MACE,KAApBm1B,EAAWn1B,KAbkB,oBAeL,YAApBm1B,EAAWn1B,KAfc,uBAgB3BgkB,aAAa,GAAM,EAAnBA,CAAyBvkB,GAhBE,2BAmBvBw1B,EAAU5yB,KAAKC,MAAM6yB,EAAWn1B,QAGpC+jB,YAAUkR,GAAS,EAAnBlR,CAAyBtkB,GAtBE,0DA2B/Be,QAAQC,IAAR,MA3B+B,0DA6BhC,CAAChB,EAAUwB,IACdwJ,qBAAU,WACH8C,GAGL2nB,OACC,CAAC3nB,EAAe2nB,KAEnB,IAAME,GAAclF,uBAAY,WAC9Bb,aAAY,EAAZA,CAAmB5vB,KAClB,CAAC4vB,IAAa5vB,IAEX41B,GAAgBnF,uBAAY,WAChCb,YAAY/U,EAAZ+U,CAA+B5vB,KAC9B,CAAC6a,EAAmB+U,IAAa5vB,IACpC,OACE,eAAC,IAAD,CAAY4J,UAAU,cAAtB,UACGkpB,IACC,sBAAK5yB,GAAG,cAAc0J,UAAU,mBAAhC,UACE,mBAAG1J,GAAG,oBAAoB0J,UAAU,yBACnCypB,GACD,wBAAQvC,QAAS0C,GAAjB,6BAGH5Y,GACC,qBAAKhR,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,4BAAIgR,IACJ,sBAAKhR,UAAU,kCAAf,UACGiR,GACC,wBACEjR,UAAU,+BACVknB,QAAS6E,GAFX,oBAOD9a,GAAqB,qBAAK5R,MAAO,CAAEuB,MAAO,UAC3C,wBACEZ,UAAU,uCACVknB,QAAS8E,GAFX,wBAUR,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,cAACltB,EAAA,EAAD,CAAQE,YAAU,EAACD,KAAM,OAA7C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOvI,KAAK,QAAQy1B,OAAK,EAACxD,UAAWZ,IACrC,cAAC,GAAD,CAAcrxB,KAAK,YAAYy1B,OAAK,EAACxD,UAAWtB,IAChD,cAAC,GAAD,CAAc3wB,KAAK,YAAYy1B,OAAK,EAACxD,UAAWnB,IAChD,cAAC,GAAD,CACE9wB,KAAK,kBACLy1B,OAAK,EACLxD,UAAWlB,IAEb,cAAC,GAAD,CAAc/wB,KAAK,QAAQy1B,OAAK,EAACxD,UAAWjB,IAC5C,cAAC,GAAD,CAAchxB,KAAK,sBAAsBiyB,UAAWf,IACpD,cAAC,GAAD,CAAclxB,KAAK,QAAQy1B,OAAK,EAACxD,UAAWd,IAC5C,cAAC,GAAD,CAAcnxB,KAAK,WAAWy1B,OAAK,EAACxD,UAAWb,IAC/C,cAAC,GAAD,CAAcpxB,KAAK,WAAWy1B,OAAK,EAACxD,UAAWhB,IAC/C,cAAC,GAAD,CACEjxB,KAAK,kBACLy1B,OAAK,EACLxD,UAAWT,IAEb,cAAC,GAAD,CAAcxxB,KAAK,QAAQy1B,OAAK,EAACxD,UAAWX,IAC5C,cAAC,GAAD,CAActxB,KAAK,WAAWy1B,OAAK,EAACxD,UAAWV,IAC/C,cAAC,GAAD,CAAcvxB,KAAK,cAAcy1B,OAAK,EAACxD,UAAWP,IAClD,cAAC,GAAD,CAAc1xB,KAAK,UAAUy1B,OAAK,EAACxD,UAAWN,IAC9C,cAAC,GAAD,CACE3xB,KAAK,gBACLy1B,OAAK,EACLxD,UAAWR,IAEb,cAAC,GAAD,CAAczxB,KAAK,aAAay1B,OAAK,EAACxD,UAAWJ,IACjD,cAAC,GAAD,CACE7xB,KAAK,uCACLy1B,OAAK,EACLxD,UAAWL,IAEb,cAAC,GAAD,CAAc5xB,KAAK,WAAWy1B,OAAK,EAACxD,UAAWH,IAE/C,cAAC,GAAD,CACE9xB,KAAK,uBACLy1B,OAAK,EACLxD,UAAWF,IAEb,cAAC,IAAD,CAAU7vB,GAAG,mBAIjB,cAAC,IAAD,CACEwzB,SAAS,eACTC,UAAW,IACXC,iBAAe,EACfC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAkB,EAClBC,WAAS,EACTC,cAAc,EACdC,aAAa,QE9XfC,GAAcC,QACW,cAA7BrtB,OAAOstB,SAASC,UAEe,UAA7BvtB,OAAOstB,SAASC,UAEhBvtB,OAAOstB,SAASC,SAASxkB,MACvB,2DAsCN,SAASykB,GAAgBC,EAAOpU,GAC9BqU,UAAUC,cACPC,SAASH,GACTtvB,MAAK,SAAA0vB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrqB,QACfgqB,UAAUC,cAAcO,YAI1Bx2B,QAAQC,IACN,+GAKE0hB,GAAUA,EAAO8U,UACnB9U,EAAO8U,SAASN,KAMlBn2B,QAAQC,IAAI,sCAGR0hB,GAAUA,EAAO+U,WACnB/U,EAAO+U,UAAUP,WAO5BQ,OAAM,SAAAnxB,GACLxF,QAAQwF,MAAM,4CAA6CA,MChGjE,IAYeoxB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBrwB,MAAK,YAAkD,IAA/CswB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCKdz3B,IAAKkN,SAAS3C,QAAU,IAExBytB,IAASC,OACP,cAAC,IAAD,CAAUx0B,MAAOA,QAAjB,SACE,cAAC,KAAD,CAAay0B,QAAS,KAAM9W,UAAWA,YAAvC,SACE,cAAC,IAAM+W,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,YAKRpE,SAASC,eAAe,SFFnB,SAAkBzR,GACvB,GAA6C,kBAAmBqU,UAAW,CAGzE,GADkB,IAAIwB,IAAI3X,GAAwBvX,OAAOstB,SAAS6B,MACpDC,SAAWpvB,OAAOstB,SAAS8B,OAIvC,OAGFpvB,OAAOwC,iBAAiB,QAAQ,WAC9B,IAAMirB,EAAK,UAAMlW,GAAN,sBAEP6V,KAgEV,SAAiCK,EAAOpU,GAEtCgW,MAAM5B,EAAO,CACXxpB,QAAS,CAAE,iBAAkB,YAE5B9F,MAAK,SAAA1E,GAEJ,IAAM61B,EAAc71B,EAASwK,QAAQxL,IAAI,gBAEnB,MAApBgB,EAASoU,QACO,MAAfyhB,IAA8D,IAAvCA,EAAY1iB,QAAQ,cAG5C8gB,UAAUC,cAAc4B,MAAMpxB,MAAK,SAAA0vB,GACjCA,EAAa2B,aAAarxB,MAAK,WAC7B6B,OAAOstB,SAASmC,eAKpBjC,GAAgBC,EAAOpU,MAG1BgV,OAAM,WACL32B,QAAQC,IACN,oEAvFA+3B,CAAwBjC,EAAOpU,GAI/BqU,UAAUC,cAAc4B,MAAMpxB,MAAK,WACjCzG,QAAQC,IACN,+GAMJ61B,GAAgBC,EAAOpU,OEpB/BsW,GAKArB,GAAgB52B,QAAQC,M,gCClCxB,8CAIaqrB,EAAa,SAAC9lB,GAAuB,IAAD,IAC/C,GAAI,aAAcA,EAAO,CAAC,IAAD,MACjBzD,EAAQ,UAAGyD,EAAMzD,gBAAT,aAAG,EAAgBvC,KACjC,OAAO,IAAIwnB,IAAW,CACpB3iB,MAAK,iBAAEtC,QAAF,IAAEA,OAAF,EAAEA,EAAUsC,aAAZ,QAAqB,UAC1BC,QAAO,iBAAEvC,QAAF,IAAEA,OAAF,EAAEA,EAAUoQ,oBAAZ,QAA4B,kCAIvC,OAAO,IAAI6U,IAAW,CACpB3iB,MAAK,UAAG,UAAWmB,GAASA,EAAMnB,aAA7B,QAAuC,UAC5CC,QAAO,UAAEkB,EAAMlB,eAAR,QAAmB,oC,wECTxB0iB,E,kDAGJ,WAAYxhB,GAAa,IAAD,kCACtB,gBAHFnB,WAEwB,EAEtB,EAAKC,QAAL,iBAAekB,QAAf,IAAeA,OAAf,EAAeA,EAAOlB,eAAtB,QAAiC,gCACjC,EAAKD,MAAL,iBAAamB,QAAb,IAAaA,OAAb,EAAaA,EAAOnB,aAApB,QAA6B,UAC7B,EAAKtE,KAAL,OAAYyF,QAAZ,IAAYA,OAAZ,EAAYA,EAAOzF,KACnB,EAAKm4B,MAAL,OAAa1yB,QAAb,IAAaA,OAAb,EAAaA,EAAO0yB,MALE,E,sBAHDlO,QAYVhD,O,klBCfR,SAASmR,IAA8B,IAAD,EACvBjI,IAAMrmB,SAAS,GAA1BuuB,EADkC,oBAK3C,OAHelI,IAAMR,aAAY,WAC/B0I,GAAQ,SAAAC,GAAI,OAAIA,EAAO,OACtB,IAQE,IAAMC,EAAkB,SAAC/lB,GAC9B,IAAmB,IAAfA,EACF,MAAO,GAET,IAAMgmB,EAAeC,WAASC,WAC5Bv0B,IAA8BqO,IAC9BmmB,aACF,MAAwB,iBAAjBH,EAAkC,WAAaA,G,QCP3ClU,G,MAAS,CACpBpkB,IAAK,wBAAoB,EAAAD,SAAQC,IAAR,oBACzB2F,KAAM,wBAAoB,EAAA5F,SAAQ4F,KAAR,oBAC1BJ,MAAO,wBAAoB,EAAAxF,SAAQwF,MAAR,oBAC3Ba,MAAO,wBAAoB,EAAArG,SAAQqG,MAAR,sBAgBhBsyB,EAAc,SACzBC,EACAC,EACAC,GAEA,IAAMC,EAAS5F,SAAS6F,cAAc,UAChCvvB,EAAkBmvB,EAAlBnvB,MAAOtB,EAAWywB,EAAXzwB,OAmBb,OAjBIsB,EAAQtB,EACNsB,EAAQovB,IAEV1wB,EAAS8wB,KAAKC,MAAO/wB,GAAU0wB,EAAkBpvB,GACjDA,EAAQovB,GAGN1wB,EAAS0wB,IACXpvB,EAAQwvB,KAAKC,MAAOzvB,GAASovB,EAAkB1wB,GAC/CA,EAAS0wB,GAIbE,EAAOtvB,MAAQA,EACfsvB,EAAO5wB,OAASA,EAEhB4wB,EAAOI,WAAW,MAAMC,UAAUR,EAAK,EAAG,EAAGnvB,EAAOtB,GAC7C4wB,EAAOM,UAAU,aAAcP,IAM3BQ,EAAgB,uCAAG,WAC9BC,EACAV,EACAC,GAH8B,uBAAA55B,EAAA,yDAMzBq6B,EAAKt4B,KAAKu4B,WAAW,UANI,sBAOtB,IAAIxW,UAAJ,6BACkBuW,EAAKt4B,KADvB,uBAC0Cs4B,EAAKE,KAD/C,0CAPsB,uBAYJv1B,KAAgC,SAACgQ,EAAKwZ,GAC9D,IAAMgM,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAAlyB,GACVA,EAAEmyB,OAAOC,kBAAkBC,YAC7B7lB,EAAIxM,EAAEmyB,OAAOC,QAEbpM,EACE,IAAI1K,UAAJ,wEAON,IAAMgX,EAAS,SAACtyB,GACdgmB,EACE,IAAI1D,MAAJ,wDACmDnoB,KAAK4D,UAAUiC,OAItEgyB,EAAOO,QAAUD,EACjBN,EAAOQ,QAAUF,EAGjBN,EAAOS,kBAAkBZ,MAtCG,cAYxBa,EAZwB,OAyCxBlY,GAAM,UAAC5Z,OAAOkvB,WAAR,QAAelvB,OAAO+xB,WAAWC,gBAC3C,IAAIC,KAAK,CAACH,GAAc,CAAEn5B,KAAM,gBA1CJ,SA6CViD,KAAqC,SAACgQ,EAAKwZ,GAC7D,IAAM8M,EAAS,IAAIC,MACnBD,EAAOhwB,IAAM0X,EAEbsY,EAAOZ,OAAS,WACd1lB,EAAIsmB,IAGNA,EAAOP,QAAU,SAAAvyB,GAEbgmB,EADe,kBAANhmB,EACL,IAAIsiB,MAAMtiB,GAEV,IAAIsiB,MAAMnoB,KAAK4D,UAAUiC,SAzDL,cA6CxBgzB,EA7CwB,OA8DxBC,EAAehC,EAAY+B,EAAO7B,EAAiBC,GA9D3B,kBAgEvB6B,GAhEuB,4CAAH,0DAiGhBC,EAAe,SAACC,GAC3B,IAAI3Y,EAAM2Y,EAmBV,OAjBI3Y,EAAIsX,WAAW,UACjBtX,EAAM,WAAaA,GAIN,WACb,IAAI4Y,EAEJ,IACEA,EAAQ,IAAItD,IAAItV,GAChB,MAAOrE,GACP,OAAO,EAGT,MAA0B,UAAnBid,EAAMC,UAA2C,WAAnBD,EAAMC,SAT9B,GAaN,IAAIvD,IAAItV,GAAKuV,KAGf,IAQIuD,EAAqC,aAErCC,EAAY,GAIZC,EAAkB,SAACC,GAA2B,IAAD,EAC9BtxB,mBAAkBsxB,GADY,mBACjDnvB,EADiD,KAC1CovB,EAD0C,KAMxD,MAAO,CAACpvB,EAJO0jB,uBAAY,WACzB0L,GAAS,SAAAC,GAAM,OAAKA,OACnB,MAKQpX,EAAY,SAAC2H,GAAD,OAAe/pB,KAAKC,MAAM8pB,IAMtC0P,EAAgB,SAAC1P,GAC5B,IAAK1nB,IAAyB0nB,GAC5B,OAAO,KAET,IACE,OAAO/pB,KAAKC,MAAM8pB,GAClB,MAAOlkB,GAGP,OAFA2c,EAAOze,KAAP,mCAAgD8B,GAChD2c,EAAOpkB,IAAP,oDAAgE2rB,GACzD,OAIE9K,EAAc,WACzB,OAAOC,eAGIwa,EAAc,SAAC96B,GAAuB,IAAD,EACVoJ,mBAAS,GADC,mBACzC2xB,EADyC,KAC5BC,EAD4B,OAER5xB,mBAAS,GAFD,mBAEzC6xB,EAFyC,KAE3BC,EAF2B,KA2ChD,OAvCA1xB,qBAAU,WACR,IAAM2xB,EAASr7B,YAAM,CACnBC,MAAM,GAAD,OAAKC,EAAL,6BACLE,OAFmB,SAEZk7B,GACmB,kBAAbA,EACTJ,EAAeI,GAEfxX,EAAO7e,MAAP,gDAGJxB,QATmB,SASX0D,GACN2c,EAAO7e,MAAP,yCAAuDkC,MAIrDo0B,EAAUv7B,YAAM,CACpBC,MAAM,GAAD,OAAKC,EAAL,8BACLE,OAFoB,SAEbk7B,GACmB,kBAAbA,EACTF,EAAgBE,GAEhBxX,EAAO7e,MAAP,iDAGJxB,QAToB,SASZ0D,GACN2c,EAAO7e,MAAP,0CAAwDkC,MAI5D,OAAO,WACLk0B,EAAOn1B,MAAK,SAAAgB,GACVA,EAAIhD,SAENq3B,EAAQr1B,MAAK,SAAAgB,GACXA,EAAIhD,YAGP,CAAChE,IAEG,CAAE+6B,cAAaE,kB,wKChRXj9B,EAAU,CACrBoa,kBAAmB,yBACnBE,aAAc,qBACdH,cAAe,uBAGbmjB,EAAiB38B,IAAK48B,YAAY1mB,SAWzB2mB,EAAiB,SAAC,GAAD,IAAG52B,EAAH,EAAGA,OAAQyT,EAAX,EAAWA,QAAX,OAAyB,SAAA7Z,GACrDA,EAAS,CACPgC,KAAMxC,EAAQoa,kBACdrZ,KAAM,CAAE6F,SAAQyT,eAIPojB,EAAa,SAAC,GAAD,IAAG72B,EAAH,EAAGA,OAAQ5E,EAAX,EAAWA,UAAX,OAA2B,SAAAxB,GACnDA,EAAS,CACPgC,KAAMxC,EAAQsa,aACdvZ,KAAM,CACJ6F,SACA5E,iBAKA07B,EAAc,kBAAM,SAACl9B,EAAUgE,GAAc,IACzCE,EAAaF,IAAWO,KAAxBL,SAER,OAAKA,GACiBlE,GA9Bc,SAAAA,GACpC,IAAMkE,EAAWwV,cAKjB,OAJA1Z,EAAS,CACPgC,KAAMxC,EAAQma,cACdpZ,KAAM2D,IAEDA,OA+BIwnB,EAAkB,yDAAM,WAAM1rB,GAAN,qBAAAC,EAAA,sEAE7B68B,IACFA,EAAeK,OACb,0DAEFL,EAAiB,MAGnBA,EAAiB38B,IAAK48B,YAAY1mB,SAC5BnS,EAAWlE,EAASk9B,KAEpBrjB,EAAUsO,cAZiB,SAaVhoB,IAAKC,KAAL,2BAErB,CACEoB,UAAWqY,EAAQ2O,gBACnBtkB,YAEF,CACEk5B,YAAaN,EAAep1B,QApBC,uBAazBnH,EAbyB,EAazBA,KAWRP,EACEg9B,EAAe,CACb52B,OAAQ7F,EAAK6F,OACbyT,aAIJ7Z,EACEi9B,EAAW,CACT72B,OAAQ7F,EAAK6F,OACb5E,UAAWjB,EAAK88B,gBAIpBr9B,EAAS6qB,YAAUtqB,EAAK6F,SAtCS,kBAwC1B,CACL6Q,KAAM4C,EACNlW,KAAMpD,IA1CyB,wCA6CjCQ,QAAQwF,MAAM,mCAAd,MA7CiC,+DAAN,wD,iKClDlB/G,EAAU,CACrBuU,gBAAiB,eAGNupB,EAAa,yDAAM,WAAMt9B,GAAN,SAAAC,EAAA,sDAC9BD,EAAS,CACPgC,KAAMxC,EAAQuU,gBACdxT,MAAM,IAHsB,2CAAN,uDAObmwB,EAAc,yDAAM,WAAM1wB,GAAN,SAAAC,EAAA,sDAC/BD,EAAS,CACPgC,KAAMxC,EAAQuU,gBACdxT,MAAM,IAHuB,2CAAN,wD,2MCTdf,EAAU,CACrBoX,WAAY,aACZC,eAAgB,qBAChBC,WAAY,kBACZC,SAAU,iBAGCwmB,EAAe,yDAAM,WAAOv9B,EAAUgE,GAAjB,mBAAA/D,EAAA,6DACxBoW,EAAWrS,IAAW2S,KAAtBN,OADwB,SAETlW,IAAK2B,IAAIuU,GAFA,uBAExB9V,EAFwB,EAExBA,KAERP,EAAS,CACPgC,KAAMxC,EAAQqX,eACdtW,SAN8B,kBASzBA,GATyB,2CAAN,yDAefi9B,EAAY,SAAAnnB,GAAM,MAAK,CAClCrU,KAAMxC,EAAQsX,WACdvW,KAAM8V,IAMKonB,EAAU,SAAAnnB,GAAI,MAAK,CAC9BtU,KAAMxC,EAAQuX,SACdxW,KAAM+V,M","file":"static/js/main.08ba0e91.chunk.js","sourcesContent":["import Http from \"../utils/Http\";\nimport {\n  rifle,\n  rifleSocketExists,\n  unsubscribeRifleById\n} from \"../utils/WebSocket\";\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE: \"service/add/bought\"\n};\n\nexport const createService = (\n  clear,\n  encrypted,\n  serviceID\n) => async dispatch => {\n  let id = serviceID;\n  if (serviceID) {\n    const { data } = await Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}`,\n      value: clear\n    });\n    const { ok } = data;\n    if (!ok) {\n      return \"\";\n    }\n  } else {\n    const { data } = await Http.post(\"/api/gun/set\", {\n      path: \"$user>offeredServices\",\n      value: clear\n    });\n    const { ok, id: newID } = data;\n    if (!ok) {\n      return \"\";\n    }\n    id = newID;\n  }\n\n  const all = Object.entries(encrypted).map(([name, value]) => {\n    if (!value) {\n      return;\n    }\n    console.log(`setting: ${name} to ${value}`);\n    return Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}>${name}`,\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value\n      }\n    });\n  });\n  await Promise.all(all);\n  const { serviceType } = clear;\n  //update the offered service\n  if (serviceType === \"torrentSeed\" || serviceType === \"streamSeed\") {\n    console.log(\"updating profile with service\");\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>Profile>SeedServiceProvided`,\n      value: id\n    });\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id;\n};\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post(\"/api/gun/put\", {\n    path: `$user>offeredServices>${id}`,\n    value: null\n  });\n};\n\nexport const subscribeMyServices = () => dispatch => {\n  const query = `$user::offeredServices::on`;\n  const subscription = rifle({\n    query,\n    publicKey: \"\",\n    reconnect: false,\n    onData: async services => {\n      const servicesEntries = Object.entries(services);\n      console.log(servicesEntries);\n\n      servicesEntries.forEach(async ([id]) => {\n        if (id === \"_\") {\n          return;\n        }\n        const { data: service } = await Http.get(\n          `/api/gun/user/load/offeredServices>${id}`\n        );\n        console.log(service.data);\n        if (service.data === null) {\n          dispatch({\n            type: ACTIONS.REMOVE_MY_SERVICE,\n            data: id\n          });\n          return;\n        }\n        dispatch({\n          type: ACTIONS.ADD_MY_SERVICE,\n          data: { id, serviceInfo: service.data }\n        });\n      });\n    }\n  });\n\n  return subscription;\n};\n\nexport const buyService = (\n  owner,\n  serviceID,\n  servicePrice\n) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"service\",\n    amt: Number(servicePrice),\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: serviceID\n  });\n  console.log(data);\n  const orderAck = JSON.parse(data.orderAck.response);\n  dispatch({\n    type: ACTIONS.ADD_BOUGHT_SERVICE,\n    data: { orderAck, owner, serviceID }\n  });\n  return orderAck;\n};\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Common from \"shock-common\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"./String\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\nimport { connectHost } from \"../actions/NodeActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').Subscription} Subscription\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true,\n  transports: [\"websocket\"]\n};\n\nconst rifleSubscriptions = new Map();\n\n/** @type {import(\"socket.io-client\").Socket<import(\"socket.io-client/build/typed-events\").DefaultEventsMap, import(\"socket.io-client/build/typed-events\").DefaultEventsMap>} */\nexport let GunSocket = null;\n\n/** @type {import(\"socket.io-client\").Socket<import(\"socket.io-client/build/typed-events\").DefaultEventsMap, import(\"socket.io-client/build/typed-events\").DefaultEventsMap>} */\nexport let LNDSocket = null;\n\nexport const connectSocket = async (host = \"\", reconnect = false) => {\n  const { store } = await import(\"../store\");\n  const socketOptions = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId\n    }\n  };\n\n  if (GunSocket?.connected && LNDSocket?.connected && !reconnect) {\n    return { GunSocket, LNDSocket };\n  }\n\n  if (GunSocket && LNDSocket && reconnect) {\n    disconnectSocket(GunSocket);\n    disconnectSocket(LNDSocket);\n  }\n\n  GunSocket = SocketIO(`${host}/gun`, socketOptions);\n  LNDSocket = SocketIO(`${host}/lndstreaming`, socketOptions);\n  \n  const relayId = store.getState().node.relayId\n  if(relayId){\n    GunSocket.emit('hybridRelayId',{id:relayId})\n    LNDSocket.emit('hybridRelayId',{id:relayId})\n  }\n\n  const GunOn = encryptedOn(GunSocket);\n\n  // Subscribe to Rifle query events as soon as the socket is connected\n  GunOn(\"query:data\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onData?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunOn(\"query:error\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onError?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunSocket.on(Common.NOT_AUTH, () => {\n    store.dispatch(setAuthenticated(false));\n  });\n  //TODO listen on relay error\n  GunSocket.on(\"encryption:error\", async err => {\n    if (err.field === \"deviceId\" || err.message === \"Bad Mac\") {\n      const {hostIP:cachedNodeIP,relayId} = store.getState().node;\n      store.dispatch(setAuthenticated(false));\n    }\n  });\n\n  return { GunSocket, LNDSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: data\n    });\n\n    callback(err, decryptedMessage);\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.emit(eventName, message, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message: JSON.stringify(message)\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        if (!response) {\n          return response;\n        }\n\n        if (response && !Encryption.isEncryptedMessage(response)) {\n          console.warn(\"Non-encrypted socket message\", response);\n          return response;\n        }\n\n        return Encryption.decryptMessage({\n          privateKey: localPrivateKey,\n          encryptedMessage: response\n        });\n      })\n    );\n\n    callback(...decryptedResponses);\n  });\n};\n\n/**\n * @returns {Promise<Subscription>}\n */\nexport const subscribeSocket = ({ eventName, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const on = encryptedOn(GunSocket);\n        const emit = encryptedEmit(GunSocket);\n\n        emit(\n          `subscribe:${eventName}`,\n          {\n            token: store.getState().node.authToken\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              reject(err);\n              return;\n            }\n          }\n        );\n\n        if (callback) {\n          on(eventName, data => {\n            callback(null, data);\n          });\n        }\n\n        resolve({\n          off() {\n            emit(`unsubscribe:${eventName}`);\n          }\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const unsubscribeRifleById = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n\n  if (cachedSocket) {\n    unsubscribeEvent(subscriptionId);\n    rifleSubscriptions.delete(subscriptionId);\n  }\n};\n\nexport const unsubscribeRifleByQuery = query => {\n  const subscriptionEntries = Array.from(rifleSubscriptions.entries());\n\n  subscriptionEntries.map(([id, subscription]) => {\n    if (subscription.query === query) {\n      console.log(\"Unsubscribing by query:\", subscription);\n      unsubscribeRifleById(id);\n      return true;\n    }\n\n    return false;\n  });\n};\n\nexport const unsubscribeEvent = subscriptionId =>\n  new Promise(resolve => {\n    const emit = encryptedEmit(GunSocket);\n    emit(\n      \"unsubscribe\",\n      {\n        subscriptionId\n      },\n      () => {\n        console.debug(\n          `[SOCKET] Unsubscribed from event successfully! (${subscriptionId})`\n        );\n        resolve(true);\n      }\n    );\n  });\n\nexport const rifleSocketExists = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} query\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {string=} epubForDecryption If epub is known before hand.\n * @prop {string=} epubField If the epub is included in the received data\n * itself. Handshake requests for example, have an epub field.\n * @prop {boolean=} reconnect\n * @prop {(data, key) => void} onData\n * @prop {((error) => void)=} onError\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.onData(callback)` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map().once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<Subscription>}\n */\nexport const rifle = ({\n  query,\n  publicKey,\n  epubForDecryption,\n  epubField,\n  reconnect,\n  onData,\n  onError\n}) =>\n  new Promise((resolve, reject) => {\n    import(\"../store\").then(({ store }) => {\n      if (reconnect) {\n        unsubscribeRifleByQuery(query);\n      }\n\n      const emit = encryptedEmit(GunSocket);\n\n      emit(\n        \"subscribe:query\",\n        {\n          $shock: query,\n          token: store.getState().node.authToken,\n          publicKey,\n          epubForDecryption,\n          epubField\n        },\n        (err, data) => {\n          if (err) {\n            console.error(`Gun rifle error (${query})`);\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          rifleSubscriptions.set(data.subscriptionId, {\n            onData,\n            onError,\n            query\n          });\n\n          resolve({\n            off: () => unsubscribeRifleById(data.subscriptionId)\n          });\n        }\n      );\n    });\n  });\n\n/**\n * @param {Promise<Subscription>[]} subscriptions\n */\nexport const rifleCleanup = (...subscriptions) => () => {\n  subscriptions.map(subscription =>\n    subscription.then(unsubscribe => {\n      unsubscribe.off();\n    })\n  );\n};\n\n/**\n * @returns {Promise<{ messages: any , contacts: Contact[]}>}\n */\nexport const getChats = async () => {\n  try {\n    const chats = await new Promise(res => {\n      const subscription = subscribeSocket({\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        },\n        eventName: \"chats\"\n      });\n    });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName,\n      didDisconnect: chat.didDisconnect\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleSentRequest[]>}\n */\nexport const getSentRequests = async () => {\n  try {\n    const sentRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"sentRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleReceivedRequest[]>}\n */\nexport const getReceivedRequests = async () => {\n  try {\n    const receivedRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"receivedRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Utils from \"../utils\";\n\nexport const coordinateDeleted = createAction<{\n  coordinateSHA256: string;\n}>(\"coordinates/deleted\");\n\nexport const coordinateReceived = createAction<{\n  coordinate: Common.Coordinate;\n  coordinateSHA256: string;\n}>(\"coordinates/received\");\n\nexport const subCoordinates = () => (dispatch: (action: any) => void) => {\n  Utils.logger.debug(`Subscribing to coordinates.`);\n  try {\n    const subscription = Utils.rifle({\n      query: `$user::coordinates::map.on`,\n      publicKey: \"me\",\n      onData: (unparsed, coordinateSHA256) => {\n        const coordinate = Utils.safeParseJson(unparsed);\n\n        if (Common.isCoordinate(coordinate)) {\n          dispatch(\n            coordinateReceived({\n              coordinate,\n              coordinateSHA256\n            })\n          );\n        } else if (coordinate === null) {\n          dispatch(\n            coordinateDeleted({\n              coordinateSHA256\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Coordinate subscription invalid (or incomplete) value -> `,\n            coordinate\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    alert(`Could not establish a subscription to coordinates: ${e.message}`);\n    Utils.logger.error(\n      `Could not establish a subscription to coordinates -> `,\n      e\n    );\n  }\n};\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.scoped.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\")\n    .matches;\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","import \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const {liveStatus} = item\n  useEffect(() =>{\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  },[item])\n  useEffect(()=>{\n    if(item.viewersSocketUrl){\n      const socket = new WebSocket(`${item.viewersSocketUrl}/stream/watch/${item.userToken}`);\n      socket.addEventListener(\"open\", () => {\n        console.log(\"viewer socket open\")\n      });\n      return () => {\n        socket.close()\n      }\n    }\n  },[item])\n\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {!isLive && liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!isLive && !liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false,\n  webClientPrefix:\"https://lightning.page\",\n  relayId:null\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n    case ACTIONS.SET_RELAY_ID:{\n      return {\n        ...state,\n        relayId:action.data\n      }\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    case ACTIONS.SET_WEBCLIENT_PREFIX:{\n      return {...state, webClientPrefix:action.data}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null,\n  relayId:null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\",\n  hostingTiers: \"chooseTier\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: [],\n  lightningInfo:{},\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    case ACTIONS.LOAD_LIGHTNING_INFO:{\n      const {data}  = action\n      return {\n        ...state,\n        lightningInfo:data\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\nimport produce from \"immer\";\nimport * as Common from \"shock-common\";\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n * @typedef {import(\"shock-common\").StoredRequest} StoredReq\n */\n\nimport * as Schema from \"../schema\";\nimport {\n  handshakeAddressUpdated,\n  receivedHandshakeRequest,\n  convoReceived,\n  convoDeleted,\n  messageTransmissionFailed,\n  messageTransmissionRequested,\n  messageTransmissionRetried,\n  messageTransmissionSucceeded,\n  handshakeRequestDeleted,\n  receivedConvoMessage\n} from \"../actions/ChatActions\";\n\nconst INITIAL_STATE = {\n  currentHandshakeAddress: \"DOES_NOT_EXIST\" as string,\n  convos: {} as Record<string, Schema.Convo>,\n  /**\n   * Maps convo id to a set of the messages corresponding to it.\n   */\n  convoToMessages: {} as Record<string, Record<string, Schema.ConvoMsg>>,\n  receivedRequests: {} as Record<string, Schema.HandshakeReqNew>\n};\n\nconst chat = produce((draft, action) => {\n  if (handshakeAddressUpdated.match(action)) {\n    const { handshakeAddress } = action.payload;\n    if (\n      draft.currentHandshakeAddress !== handshakeAddress &&\n      Common.isPopulatedString(handshakeAddress)\n    ) {\n      draft.receivedRequests = {};\n      draft.currentHandshakeAddress = handshakeAddress;\n    }\n  }\n\n  if (receivedHandshakeRequest.match(action)) {\n    const { receivedRequest } = action.payload;\n    if (!draft.receivedRequests[receivedRequest.id]) {\n      draft.receivedRequests[receivedRequest.id] = receivedRequest;\n    }\n  }\n\n  if (convoReceived.match(action)) {\n    const { convo } = action.payload;\n    if (!draft.convos[convo.id]) {\n      draft.convoToMessages[convo.id] = {};\n      draft.convos[convo.id] = convo;\n    }\n  }\n\n  if (convoDeleted.match(action)) {\n    const { id } = action.payload;\n    if (draft.convos[id]) {\n      delete draft.convos[id];\n    }\n  }\n\n  if (messageTransmissionFailed.match(action)) {\n    const { convoID, errorMessage, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = errorMessage;\n    draft.convoToMessages[convoID][messageID].state = \"error\";\n  }\n  if (messageTransmissionRequested.match(action)) {\n    const { convoID, message, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID] = {\n      body: message,\n      convoID,\n      err: \"\",\n      id: messageID,\n      state: \"sending\",\n      timestamp: Date.now()\n    };\n  }\n  if (messageTransmissionRetried.match(action)) {\n    const { convoID, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = \"\";\n    draft.convoToMessages[convoID][messageID].state = \"sending\";\n  }\n  if (messageTransmissionSucceeded.match(action)) {\n    const { convoID, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = \"\";\n    draft.convoToMessages[convoID][messageID].state = \"ok\";\n  }\n  if (handshakeRequestDeleted.match(action)) {\n    const { id } = action.payload;\n    if (draft.receivedRequests[id]) {\n      delete draft.receivedRequests[id];\n    }\n  }\n  if (receivedConvoMessage.match(action)) {\n    const { message } = action.payload;\n    if (!draft.convoToMessages[message.convoID]) {\n      draft.convoToMessages[message.convoID] = {};\n    }\n    if (!draft.convoToMessages[message.convoID][message.id]) {\n      draft.convoToMessages[message.convoID][message.id] = {\n        ...message,\n        err: \"\"\n      };\n    }\n  }\n}, INITIAL_STATE);\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import produce from \"immer\";\n\nimport {\n  ACTIONS,\n  publishedContentAdded,\n  publishedContentRemoved,\n  publicContentAdded\n} from \"../actions/ContentActions\";\nimport { PublishedContent, PublicContentItem } from \"../schema\";\n\nconst INITIAL_STATE = {\n  seedProviderPub:\n    \"tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\",\n  streamUserToken: \"\",\n  streamLiveToken: \"\",\n  streamUrl: \"\",\n  streamPostId: \"\",\n  streamContentId: \"\",\n  streamStatusUrl: \"\",\n  streamBroadcasterUrl: \"\",\n  publishedContent: {} as Record<string, PublishedContent>,\n  publicContent: {} as Record<string, PublicContentItem>,\n  unlockedContent: {},\n  seedInfo: {} as { seedUrl?: string; seedToken?: string },\n  availableTokens: {},\n  availableStreamTokens: {},\n  tipOverlayUrl:\"\"\n};\n\nconst content = (state = INITIAL_STATE, action): typeof INITIAL_STATE => {\n  if (publicContentAdded.match(action)) {\n    return produce(state, draft => {\n      const { item } = action.payload;\n      if (!draft.publicContent[item.id]) {\n        draft.publicContent[item.id] = item;\n      }\n    });\n  }\n  if (publishedContentAdded.match(action)) {\n    return produce(state, draft => {\n      const {\n        payload: { content, res }\n      } = action;\n      if (res.ok) {\n        draft.publishedContent[res.id] = content;\n      }\n    });\n  }\n\n  if (publishedContentRemoved.match(action)) {\n    return produce(state, draft => {\n      delete draft.publishedContent[action.payload.id];\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n\n    case ACTIONS.ADD_UNLOCKED_CONTENT: {\n      const { data } = action;\n      const unlockedTmp = { ...state.unlockedContent };\n      unlockedTmp[data.contentPath] = data.content;\n      return { ...state, unlockedContent: unlockedTmp };\n    }\n    case ACTIONS.ADD_STREAM: {\n      const { data } = action;\n      return {\n        ...state,\n        streamLiveToken: data.liveToken,\n        streamUserToken: data.seedToken,\n        streamUrl: data.streamUrl,\n        streamPostId: data.streamPostId,\n        streamContentId: data.streamContentId,\n        streamStatusUrl: data.streamStatusUrl,\n        streamBroadcasterUrl: data.streamBroadcasterUrl,\n        tipOverlayUrl:data.tipOverlayUrl,\n      };\n    }\n    case ACTIONS.REMOVE_STREAM: {\n      return {\n        ...state,\n        streamLiveToken: \"\",\n        streamUserToken: \"\",\n        streamUrl: \"\",\n        streamPostId: \"\",\n        streamContentId: \"\",\n        streamStatusUrl: \"\",\n        streamBroadcasterUrl: \"\"\n      };\n    }\n    case ACTIONS.SET_SEED_INFO: {\n      const { data } = action;\n      return { ...state, seedInfo: data };\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_USED_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableTokens: availableTmp };\n      }\n      return state;\n    }\n    case ACTIONS.ADD_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableStreamTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableStreamTokens: availableTmp };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/FeesActions\";\n\nexport interface FeesState {\n  source: string;\n\n  rate: Schema.FeeRate;\n\n  feeRates: Record<Schema.FeeRate, number>;\n}\n\nconst INITIAL_STATE: FeesState = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n\n  rate: \"halfHourFee\",\n\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (\n  state: FeesState = INITIAL_STATE,\n  action: { type: string; data: any }\n): FeesState => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        feeRates: INITIAL_STATE[\"feeRates\"],\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport * as Utils from \"../utils\";\nimport * as Schema from \"../schema\";\nimport {\n  ACTIONS,\n  postDeleted,\n  postReceived,\n  contentItemReceived,\n  sharedPostDeleted,\n  sharedPostReceived,\n  postTipReceived\n} from \"../actions/FeedActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  follows: [\n    {\n      user:\n        \"tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\",\n      status: \"ok\",\n      private: false\n    }\n  ] as Common.Follow[],\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: {} as Record<string, Schema.Post[]>,\n  sharedPosts: {} as Record<string, Record<string, Common.SharedPost>>,\n  reloadDone: false\n};\n\nconst feed = (state = INITIAL_STATE, action: any): typeof INITIAL_STATE => {\n  if (postDeleted.match(action)) {\n    const {\n      payload: { author, id }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx > -1) {\n        draft.posts[author].splice(idx, 1);\n      }\n    });\n  }\n  if (postReceived.match(action)) {\n    const {\n      payload: { author, id, post }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx === -1) {\n        const newPost: Schema.Post = {\n          authorId: author,\n          contentItems: {},\n          date: post.date,\n          id,\n          status: post.status,\n          tags: post.tags,\n          title: post.title,\n          tips: {},\n          type: \"post\"\n        };\n        draft.posts[author].push(newPost);\n      }\n    });\n  }\n  if (contentItemReceived.match(action)) {\n    const {\n      payload: { author, contentItem, id, postID }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state (no author found), post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === postID);\n      if (idx === -1) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state, post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      (draft.posts[author][idx] as Schema.Post).contentItems[id] = contentItem;\n    });\n  }\n  if (sharedPostDeleted.match(action)) {\n    const { postID, sharerPublicKey } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      if (draft.sharedPosts[sharerPublicKey][postID]) {\n        delete draft.sharedPosts[sharerPublicKey][postID];\n      }\n    });\n  }\n  if (sharedPostReceived.match(action)) {\n    const {\n      originalAuthor,\n      postID,\n      shareDate,\n      sharerPublicKey\n    } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      draft.sharedPosts[sharerPublicKey][postID] = {\n        originalAuthor,\n        originalPostID: postID,\n        shareDate,\n        shareID: sharerPublicKey + postID,\n        sharedBy: sharerPublicKey\n      };\n    });\n  }\n\n  if (postTipReceived.match(action)) {\n    const { author, postID, tipAmt, tipID } = action.payload;\n\n    return produce(state, draft => {\n      const post = draft.posts[author].find(p => p.id === postID);\n      if (!post) {\n        Utils.logger.error(\n          `Got tip for non existent post ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n      }\n      if (!post.tips) {\n        // cached data from previous app version won't have the tips object\n        post.tips = {};\n      }\n      if (!post.tips[tipID]) {\n        post.tips[tipID] = tipAmt;\n      }\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.RELOAD_FEED: {\n      return { ...state, reloadDone: true };\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS, updatedUserProfile } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { sharedPostReceived } from \"../actions/FeedActions\";\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  if (sharedPostReceived.match(action)) {\n    const { originalAuthor } = action.payload;\n    return produce(state, draft => {\n      if (!draft[originalAuthor]) {\n        draft[originalAuthor] = Common.createEmptyUser(originalAuthor);\n      }\n    });\n  }\n  if (updatedUserProfile.match(action)) {\n    return produce(state, draft => {\n      const { profile, publicKey } = action.payload;\n\n      if (!draft[publicKey]) {\n        draft[publicKey] = Common.createEmptyUser(publicKey);\n      }\n\n      Object.assign(draft[publicKey], profile);\n    });\n  }\n\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n  myServices: {},\n  services: {},\n  boughtServices: {}\n};\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const { id, serviceInfo } = action.data;\n      const tmp = { ...state.myServices };\n      tmp[id] = serviceInfo;\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE: {\n      const id = action.data;\n      const tmp = { ...state.myServices };\n      delete tmp[id];\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE: {\n      const { orderAck, owner, serviceID } = action.data;\n      const servicesTmp = { ...state.boughtServices };\n\n      if (!servicesTmp[owner]) {\n        servicesTmp[owner] = {};\n      }\n      const selectedService = servicesTmp[owner];\n      if (!selectedService[serviceID]) {\n        selectedService[serviceID] = [];\n      }\n      selectedService[serviceID].push(orderAck);\n      return { ...state, boughtServices: servicesTmp };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/AppActions\";\n\nconst INITIAL_STATE = {\n  dialogText: '',\n  dialogHasCallback:false\n};\nconst app = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.OPEN_DIALOG: {\n      const {text,hasCallback} = action.data\n      return { ...state, dialogText: text,dialogHasCallback:hasCallback };\n    }\n    case ACTIONS.CLOSE_DIALOG: {\n      return {...state, dialogText: '',dialogHasCallback: false}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","import produce from \"immer\";\n\nimport * as Utils from \"../utils\";\nimport { set } from \"../actions/SettingsActions\";\n\nconst INITIAL_STATE: Record<string, string | number | boolean> = {};\n\nconst settings = produce((draft, action) => {\n  try {\n    if (set.match(action)) {\n      const { key, value } = action.payload;\n      draft[key] = value;\n    }\n  } catch (e) {\n    Utils.logger.error(`Error inside settings reducer:`);\n    Utils.logger.error(e);\n  }\n}, INITIAL_STATE);\n\nexport default settings;\n","import produce from \"immer\";\n\nimport { CoordinateWithHash } from \"../schema\";\n\nimport {\n  coordinateDeleted,\n  coordinateReceived\n} from \"../actions/CoordinateActions\";\n\nconst INITIAL_STATE = {} as Record<string, CoordinateWithHash>;\n\nconst coordinates = produce((draft, action) => {\n  if (coordinateDeleted.match(action)) {\n    const { coordinateSHA256 } = action.payload;\n    delete draft[coordinateSHA256];\n  }\n  if (coordinateReceived.match(action)) {\n    const { coordinate, coordinateSHA256 } = action.payload;\n    draft[coordinateSHA256] = { ...coordinate, coordinateSHA256 };\n  }\n}, INITIAL_STATE);\n\nexport default coordinates;\n","import { combineReducers } from \"redux\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\";\nimport AppReducer from \"./AppReducer\";\nimport settings from \"./settings\";\nimport coordinates from \"./CoordinatesReducer\";\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders: OrdersReducer,\n  app: AppReducer,\n  settings,\n  coordinates\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\nimport { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = (publicKey: string) => (\n  state: State\n): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey);\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n\nexport const selectAllOtherUsers = createSelector(\n  (state: State) => state.userProfiles,\n  (state: State) => state.node.publicKey,\n  (users, selfPublicKey): Schema.User[] => {\n    return Object.values(users).filter(\n      user => user.publicKey !== selfPublicKey\n    );\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectFollows = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.follows,\n  (selfPublicKey, follows) => {\n    return follows.filter(f => f.user !== selfPublicKey);\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { PublishedContent } from \"../../schema\";\n\nexport const selectOwnPublishedContent = createSelector(\n  (state: State) => state.content.publishedContent,\n  (state: State) => state.content.publicContent,\n  (privateContent, publicContent): Record<string, PublishedContent> => {\n    return {\n      ...privateContent,\n      ...publicContent\n    };\n  }\n);\n","import { createSelector } from \"reselect\";\nimport uniq from \"lodash/uniq\";\nimport * as Common from \"shock-common\";\n\nimport { State } from \"../../reducers\";\nimport * as Schema from \"../../schema\";\n\nexport const selectConvos: (state: State) => Schema.Convo[] = createSelector(\n  (state: State) => state.chat.convos,\n  convos => {\n    return Object.values(convos);\n  }\n);\n\nexport const selectSingleConvo = (convoID: string) => (\n  state: State\n): Schema.Convo | null => {\n  const convo = state.chat.convos[convoID];\n  return convo ?? null;\n};\n\n/**\n * TODO: Memoize.\n */\nexport const selectIsInContact = (publicKey: string) => (\n  state: State\n): boolean => {\n  return !!Object.values(state.chat.convos).find(\n    convo => convo.with === publicKey\n  );\n};\n\nexport const selectCurrentHandshakeAddress = (state: State) =>\n  state.chat.currentHandshakeAddress;\n\nexport const selectReceivedRequests: (\n  state: State\n) => Schema.HandshakeReqNew[] = createSelector(\n  (state: State) => state.chat.receivedRequests,\n  selectConvos,\n  (receivedRequests, convos) => {\n    return Object.values(receivedRequests).filter(\n      req => !convos.find(convo => convo.id === req.receiverConvoID)\n    );\n  }\n);\n\nexport const selectAllMessages = (state: State) => state.chat.convoToMessages;\n\nexport const selectContacts = createSelector(\n  (state: State) => state.chat.convos,\n  (state: State) => state.userProfiles,\n  (convos, users): Common.User[] => {\n    const _publicKeys = Object.values(convos).map(convo => convo.with);\n    const publicKeys = uniq(_publicKeys);\n    return publicKeys.map(publicKey => {\n      const user = users[publicKey];\n      if (!user) {\n        return Common.createEmptyUser(publicKey);\n      }\n      return user;\n    });\n  }\n);\n\nexport const selectCommunication = (convoIDOrRequestID: string) => (\n  state: State\n): Schema.Convo | Schema.HandshakeReqNew | null => {\n  const maybeConvo = state.chat.convos[convoIDOrRequestID];\n  const maybeRequest = state.chat.receivedRequests[convoIDOrRequestID];\n\n  if (maybeRequest) {\n    return maybeRequest;\n  }\n\n  if (maybeConvo) {\n    return maybeConvo;\n  }\n\n  return null;\n};\n\nexport const selectConvoMessages = (convoID: string) => (\n  state: State\n): Schema.ConvoMsg[] => {\n  return Object.values(state.chat.convoToMessages[convoID]).sort((a, b) => {\n    return b.timestamp - a.timestamp;\n  });\n};\n","import * as Common from \"shock-common\";\nimport pick from \"lodash/pick\";\nimport pickBy from \"lodash/pickBy\";\nimport { createSelector } from \"reselect\";\n\nimport * as Schema from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\nimport { selectFollows } from \"./follows\";\n\nexport const selectFeedPosts = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.posts,\n  (selfPublicKey, posts) => {\n    // TODO: fix self-follow bug\n    return pickBy(posts, (_, publicKey) => publicKey !== selfPublicKey);\n  }\n);\n\nexport const selectAllPosts = (state: State) => state.feed.posts;\n\nexport const selectAllSharedPosts = (state: State) => state.feed.sharedPosts;\n\nexport const selectSinglePost = (authorId: string, postID: string) => (\n  state: State\n): Schema.Post | null => {\n  return state.feed.posts[authorId]?.find(post => post.id === postID) || null;\n};\n\nexport const selectPostsNewestToOldest = (publicKey: string) => (\n  state: State\n): Array<Schema.Post | Common.SharedPost> => {\n  const posts = state.feed.posts[publicKey]?.slice() || [];\n  const sharedPostsMap = state.feed.sharedPosts[publicKey] || {};\n  const sharedPosts = Object.values(sharedPostsMap);\n  const allPosts = [...posts, ...sharedPosts];\n\n  allPosts.sort((a, b) => {\n    const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n    const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n    return beta - alpha;\n  });\n\n  return allPosts;\n};\n\nexport const selectSharedPost = (sharer: string, postID: string) => (\n  state: State\n): Common.SharedPost | null => {\n  const sharedPostsMap = state.feed.sharedPosts[sharer] || {};\n  return sharedPostsMap[postID] || null;\n};\n\nexport const selectAllPostsFromFollowedNewestToOldest = createSelector(\n  selectAllPosts,\n  selectAllSharedPosts,\n  selectFollows,\n  (posts, sharedPosts, follows): Array<Schema.Post | Common.SharedPost> => {\n    const followedPublicKeys = follows.map(f => f.user);\n    const filteredPosts = pick(posts, followedPublicKeys);\n    const filteredShared = pick(sharedPosts, followedPublicKeys);\n\n    const allNonShared = Object.values(filteredPosts).flat();\n    const allShared = Object.values(filteredShared)\n      .map(records => Object.values(records))\n      .flat();\n\n    const all = [...allNonShared, ...allShared].sort((a, b) => {\n      const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n      const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n      return beta - alpha;\n    });\n\n    return all;\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { CoordinateWithHash } from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nexport const selectAllCoordinates = createSelector(\n  (state: State) => state.coordinates,\n  (coordinates): CoordinateWithHash[] => {\n    return Object.values(coordinates);\n  }\n);\n\nexport const selectAllCoordinatesNewestToOldest = createSelector(\n  selectAllCoordinates,\n  (coords): CoordinateWithHash[] => {\n    return coords.slice().sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  }\n);\n\nexport const selectSingleCoordinate = (coordinateSHA256: string) => (\n  state: State\n) => state.coordinates[coordinateSHA256];\n","import {\n  useSelector as originalUseSelector,\n  TypedUseSelectorHook\n} from \"react-redux\";\n\nimport { State } from \"../../reducers\";\n\nexport const useSelector: TypedUseSelectorHook<State> = (selector, eqFn) =>\n  originalUseSelector(selector, eqFn);\n\nexport const selectRoot = (state: State) => state;\n\nexport * from \"./auth\";\nexport * from \"./users\";\nexport * from \"./follows\";\nexport * from \"./publishedContent\";\nexport * from \"./chat\";\nexport * from \"./feed\";\nexport * from \"./coordinates\";\n","import {\n  createStore,\n  applyMiddleware,\n  compose,\n  AnyAction,\n  Action\n} from \"redux\";\nimport thunk, { ThunkDispatch } from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport {\n  useSelector as origUseSelector,\n  useDispatch as originalUseDispatch\n} from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport const useDispatch = (): ThunkDispatch<State, undefined, Action> => {\n  return originalUseDispatch() as ThunkDispatch<State, undefined, Action>;\n};\n\nexport * from \"./selectors\";\n","// @ts-check\nexport const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\",\n  SET_RELAY_ID: \"auth/relay/set\"\n\n};\n\nexport const setAuthenticated = status => ({\n  type: ACTIONS.SET_AUTHENTICATED,\n  data: status\n});\n\nexport const setAuthStep = step => ({\n  type: ACTIONS.SET_AUTH_STEP,\n  data: step\n});\n\nexport const setAuthMethod = method => ({\n  type: ACTIONS.SET_AUTH_METHOD,\n  data: method\n});\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n","import Http from \"axios\";\nimport * as Encryption from \"./Encryption\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\") {\n    return config;\n  }\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return response;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const { relayId } = store.getState().node;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n      if(relayId){\n        /////\n        config.headers.common[\"x-shock-hybrid-relay-id-x\"] = relayId;\n        /////\n      }\n    }\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const set = createAction<{\n  key: string;\n  value: string | number | boolean;\n}>(\"settings/set\");\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\nimport {\n  PublishedContent,\n  isPublishedContent,\n  PublicContentItem,\n  isPublicContentItem\n} from \"../schema\";\nimport { parseJson, logger } from \"../utils\";\nimport { openDialog } from \"./AppActions\";\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB: \"content/setSeedProviderPub\",\n  SET_SEED_INFO: \"content/setSeedInfo\",\n\n  PUBLISHED_CONTENT_ADDED: \"content/publishedContentAdded\",\n  PUBLISHED_CONTENT_REMOVED: \"content/publishedContentRemoved\",\n\n  ADD_UNLOCKED_CONTENT: \"content/addUnlocked\",\n  ADD_STREAM: \"content/addStream\",\n  REMOVE_STREAM: \"content/removeStream\",\n  ADD_AVAILABLE_TOKEN: \"content/addToken\",\n  REMOVE_USED_TOKEN: \"content/removeToken\",\n  ADD_STREAM_TOKEN: \"content/addStreamToken\",\n  REMOVE_STREAM_TOKEN: \"content/removeStreamToken\"\n} as const;\n\nexport const setSeedProviderPub = (\n  pub,\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    let value: string | Record<string, any> = {\n      $$__ENCRYPT__FOR: \"me\",\n      value: pub\n    };\n    if (!pub) {\n      value = \"\";\n    }\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>seedServiceProviderPubKey\",\n      value\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (\n  seedUrl: string,\n  seedToken: string,\n  dontBackup = false\n) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0, -1) : seedUrl;\n  if (!dontBackup) {\n    const infoS = JSON.stringify({ seedUrl: cleanUrl, seedToken });\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>seedServiceSeedData\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: infoS\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: { seedUrl: cleanUrl, seedToken }\n  });\n};\n\nexport const publishedContentAdded = createAction<{\n  content: PublishedContent;\n  res: { ok: boolean; id: string };\n}>(ACTIONS.PUBLISHED_CONTENT_ADDED);\n\nexport const publicContentAdded = createAction<{\n  item: PublicContentItem;\n}>(\"content/publicContentAdded\");\n\nexport const addPublishedContent = (\n  content: PublishedContent | PublicContentItem,\n  type: \"public\" | \"private\"\n) => async dispatch => {\n  if (type === \"public\") {\n    if (!isPublicContentItem(content)) {\n      throw new TypeError(\n        `Expected content to upload to be a PublicContentItem`\n      );\n    }\n\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>publishedContentPublic>${content.id}`,\n      value: content\n    });\n\n    dispatch(\n      publicContentAdded({\n        item: content\n      })\n    );\n\n    return content;\n  } else {\n    const { data } = await Http.post<{ ok: boolean; id: string }>(\n      \"/api/gun/set\",\n      {\n        path: \"$user>publishedContent\",\n        value: {\n          $$__ENCRYPT__FOR: \"me\",\n          value: JSON.stringify(content)\n        }\n      }\n    );\n    dispatch(\n      publishedContentAdded({\n        content,\n        res: data\n      })\n    );\n    return data;\n  }\n};\n\nexport const publishedContentRemoved = createAction<{ id: string }>(\n  ACTIONS.PUBLISHED_CONTENT_REMOVED\n);\n\nexport const unlockContent = (amt, owner, postID) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"contentReveal\",\n    amt,\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: postID\n  });\n  const revealRes = data.orderAck.response;\n  if (revealRes && revealRes.unlockedContents) {\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type: ACTIONS.ADD_UNLOCKED_CONTENT,\n          data: { contentPath: `${owner}>posts>${postID}`, content }\n        });\n      }\n    }\n  }\n};\nexport const addStream = (\n  {\n    seedToken,\n    liveToken,\n    streamUrl,\n    streamPostId,\n    streamContentId,\n    streamStatusUrl,\n    streamBroadcasterUrl,\n    tipOverlayUrl,\n  },\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: JSON.stringify({\n          seedToken,\n          liveToken,\n          streamUrl,\n          streamPostId,\n          streamContentId,\n          streamStatusUrl,\n          streamBroadcasterUrl,\n          tipOverlayUrl\n        })\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {\n      seedToken,\n      liveToken,\n      streamUrl,\n      streamPostId,\n      streamContentId,\n      streamStatusUrl,\n      streamBroadcasterUrl,\n      tipOverlayUrl\n    }\n  });\n};\nexport const removeStream = (\n  dontBackup = false,\n  noDialog = false\n) => async dispatch => {\n  if (!noDialog) {\n    openDialog({\n      text: \"The recording of the stream will be published in a few moments.\"\n    })(dispatch);\n  }\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: \"NO DATA\"\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeUnavailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\n\nconst OWN_PUBLISHED_CONTENT_QUERY = \"$user::publishedContent::map.on\";\n\nexport const subOwnPublishedContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  console.debug(`Subscribing to own published content`);\n  const subscription = await rifle({\n    query: OWN_PUBLISHED_CONTENT_QUERY,\n    reconnect: true,\n    publicKey: \"me\",\n    onData: async (content: string, key) => {\n      try {\n        console.debug(`Received own content:`);\n        console.debug(content);\n\n        if (typeof key !== \"string\") {\n          throw new TypeError(`Invalid content key received: ${key}`);\n        }\n\n        if (!content) {\n          dispatch(\n            publishedContentRemoved({\n              id: key\n            })\n          );\n          return;\n        }\n\n        if (typeof content !== \"string\") {\n          throw new TypeError(\n            `Invalid content (in key ${key}) received (${JSON.stringify(\n              content\n            )})`\n          );\n        }\n\n        const parsed = parseJson(content);\n\n        if (!isPublishedContent(parsed)) {\n          throw new TypeError(\n            `Invalid content received (might be incomplete replication): ${JSON.stringify(\n              parsed,\n              null,\n              2\n            )}`\n          );\n        }\n\n        dispatch(\n          publishedContentAdded({\n            content: parsed,\n            res: {\n              id: key,\n              ok: true\n            }\n          })\n        );\n      } catch (e) {\n        console.error(`Error inside own published content sub:`);\n        console.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n\nexport const unsubOwnPublishedContent = () => () => {\n  console.debug(`Unsubbing own published content.`);\n  unsubscribeRifleByQuery(OWN_PUBLISHED_CONTENT_QUERY);\n};\n\nexport const subOwnPublicContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  logger.debug(`Subscribing to own public content`);\n  const subscription = await rifle({\n    query: \"$user::publishedContentPublic::map.on\",\n    reconnect: true,\n    onError(e) {\n      alert(`Error inside own public content rifle: ${JSON.stringify(e)}`);\n      logger.error(`Error inside own public content rifle: `, e);\n    },\n    onData: async (item: unknown) => {\n      try {\n        if (item === null) {\n          return; // was deleted\n        }\n        logger.debug(`Received own public item:`);\n        logger.debug(item);\n\n        if (!isPublicContentItem(item)) {\n          throw new TypeError(\n            `Invalid public content item: ${JSON.stringify(item, null, 2)}`\n          );\n        }\n\n        dispatch(\n          publicContentAdded({\n            item\n          })\n        );\n      } catch (e) {\n        logger.error(`Error inside own public content sub:`);\n        logger.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\",\n  LOAD_LIGHTNING_INFO: \"wallet/lightningInfo/load\",\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  try {\n    const { data } = await Http.get(`/api/lnd/balance`);\n\n    dispatch({\n      type: ACTIONS.LOAD_BALANCE,\n      data: {\n        channelBalance: data.channel_balance,\n        confirmedBalance: data.confirmed_balance,\n        pendingChannelBalance: data.pending_channel_balance\n      }\n    });\n  } catch (e) {\n    console.error(\n      `When trying to fetch the balance for the wallet, an error ocurred:`,\n      e\n    );\n  }\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\n      \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n    );\n    const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n    dispatch({\n      type: ACTIONS.LOAD_USD_RATE,\n      data: exchangeRate\n    });\n  } catch (e) {\n    console.error(`An error happened when trying to fetch the USD rate:`, e);\n  }\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { transactions } = getState().wallet;\n\n    if (\n      (transactions.page >= page && !reset) ||\n      transactions.totalPages < page\n    ) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/transactions\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred when fetching transactions (fetchTransactions()):`,\n      e\n    );\n  }\n};\n\nexport const fetchChannels = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n    dispatch({\n      type: ACTIONS.LOAD_CHANNELS,\n      data: data.channels\n    });\n  } catch (e) {\n    console.error(\n      `An ocurred ocurred when fetching channels (fetchChannels()):`,\n      e\n    );\n  }\n};\n\nexport const fetchPeers = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n    dispatch({\n      type: ACTIONS.LOAD_PEERS,\n      data: data.peers\n    });\n\n    return data;\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching peers (fetchPeers()) (will be re-thrown):`,\n      e\n    );\n    throw e;\n  }\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { invoices } = getState().wallet;\n\n    if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/invoices\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching invoices (fetchInvoices()):`,\n      e\n    );\n  }\n};\n\nconst fetchPayments = ({ page, itemsPerPage = 10, reset = false }) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    const { payments } = getState().wallet;\n\n    if ((payments.page >= page && !reset) || payments.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/payments\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_PAYMENTS : ACTIONS.LOAD_MORE_PAYMENTS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching payments (fetchPayments()):`,\n      e\n    );\n  }\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n  } catch (err) {\n    console.error(\n      `An error ocurred while connecting peer --| ${host} |-- with public key --| ${publicKey} |-- in connectPeer()`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    dispatch(fetchChannels());\n  } catch (err) {\n    console.error(\n      `An error ocurred while opening a channel (openChannel()) with public key --| ${publicKey} |--, channel capacity: --| ${channelCapacity} |-- and push amount: --| ${pushAmount} |--:`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const FetchLightningInfo = () =>async dispatch => {\n  \n  try{\n    const {data}= await Http.get(\"/api/lnd/getinfo\");\n    dispatch({\n      type:ACTIONS.LOAD_LIGHTNING_INFO,\n      data\n    })\n  }catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n}\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Buffer;\n  ephemPublicKey: Buffer;\n  iv: Buffer;\n  mac: Buffer;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Buffer | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Buffer | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Buffer) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Buffer | string): Buffer => {\n  if (Buffer.isBuffer(key)) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    Buffer.isBuffer(encryptedMessage.ciphertext) &&\n    Buffer.isBuffer(encryptedMessage.iv) &&\n    Buffer.isBuffer(encryptedMessage.mac) &&\n    Buffer.isBuffer(encryptedMessage.ephemPublicKey)\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    Buffer.isBuffer(encryptedMessage.ciphertext) &&\n    Buffer.isBuffer(encryptedMessage.iv) &&\n    Buffer.isBuffer(encryptedMessage.mac) &&\n    Buffer.isBuffer(encryptedMessage.ephemPublicKey)\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName) ||\n  process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\";\n\nexport const generateKeyPair = () => {\n  const privateKey: Buffer = ECCrypto.generatePrivate();\n  const publicKey: Buffer = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  try {\n    const processedPrivateKey = processKey(privateKey);\n    const decryptedMessageBuffer: Buffer = await ECCrypto.decrypt(\n      processedPrivateKey,\n      convertToEncryptedMessage(encryptedMessage)\n    );\n    const decryptedMessage = decryptedMessageBuffer.toString(\"utf-8\");\n    const parsedMessage = safeParseJSON(decryptedMessage);\n\n    return parsedMessage;\n  } catch (err) {\n    if (err.message?.toLowerCase() === \"bad mac\") {\n      console.warn(\n        \"Bad Mac!\",\n        err,\n        convertToEncryptedMessage(encryptedMessage)\n      );\n    }\n\n    throw err;\n  }\n};\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Schema from \"../schema\";\nimport * as Utils from \"../utils\";\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\",\n  RELOAD_FEED: \"feed/reload\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const loadSharedPost = (\n  originalPostId,\n  originalPublicKey,\n  sharerPublicKey\n) => async dispatch => {\n  const { data: post } = await Http.get(\n    `/api/gun/otheruser/${originalPublicKey}/load/posts>${originalPostId}`\n  );\n  dispatch(subscribeUserProfile(originalPublicKey));\n  const tipSet = post.data.tipsSet ? Object.values(post.data.tipsSet) : [];\n  const lenSet = tipSet.length;\n  const tot =\n    lenSet > 0 ? tipSet.reduce((acc, val) => Number(val) + Number(acc)) : 0;\n  dispatch({\n    type: ACTIONS.LOAD_SHARED_POST,\n    data: {\n      ...post.data,\n      authorId: originalPublicKey,\n      sharerId: sharerPublicKey,\n      id: originalPostId,\n      tipCounter: lenSet,\n      tipValue: tot\n    }\n  });\n};\n\nexport const postDeleted = createAction<{\n  author: string;\n  id: string;\n}>(\"feed/postDeleted\");\n\nexport const postReceived = createAction<{\n  author: string;\n  id: string;\n  post: Schema.PostRaw;\n}>(\"feed/postReceived\");\n\nexport const subSinglePost = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}::on`,\n      onData(post: string) {\n\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author,\n              id: postID\n            })\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )}: ${e.message}`\n        );\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nexport const subscribeUserPosts = (publicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n\n    const subscription = rifle({\n      query: `${publicKey}::posts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside posts subscription for ...${publicKey.slice(-8)} -> `,\n          e\n        );\n        alert(\n          `Error inside posts subscription for ...${publicKey.slice(-8)}: ${\n            e.message\n          }`\n        );\n      },\n      onData: (post: unknown, postID: string) => {\n\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author: publicKey,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author: publicKey,\n              id: postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In posts subscription for user ...${publicKey.slice(\n              -8\n            )}, invalid data -> `,\n            post\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to posts for ...${publicKey.slice(-8)} -> `,\n      e\n    );\n    alert(`Could not sub to posts for ...${publicKey.slice(-8)}: ${e.message}`);\n\n    return () => {};\n  }\n};\n\nexport const contentItemReceived = createAction<{\n  author: string;\n  contentItem: Common.ContentItem;\n  id: string;\n  postID: string;\n}>(\"feed/contentItemReceived\");\n\nexport const subPostContent = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n\n    const subscription = rifle({\n      query: `${author}::posts>${postID}>contentItems::map.on`,\n      onData(contentItem: unknown, id: string) {\n\n        // CAST: unfortunate isContentItem typings\n        if (Common.isContentItem(contentItem)) {\n          dispatch(\n            contentItemReceived({\n              author,\n              contentItem,\n              id,\n              postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Invalid content item in post content subscription from ..${author.slice(\n              -8\n            )} for post ${postID} -> `,\n            contentItem\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID} -> `,\n          e\n        );\n        alert(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID}: ${e.message}`\n        );\n      }\n    });\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to post content from ...${author.slice(\n        -8\n      )} for post ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not sub to posts from ...${author.slice(-8)} for post ${postID}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async dispatch => {\n  const subscription = await rifle({\n    query: FOLLOWS_QUERY,\n    reconnect: true,\n    onData: async (follow, key) => {\n      console.info(`processing follow`);\n      console.info(follow);\n      if (typeof key !== \"string\") {\n        console.warn(`Invalid follow key received: ${key}`);\n        return;\n      }\n\n      if (!follow) {\n        dispatch(removeFollow(key));\n        return;\n      }\n\n      if (typeof follow.user !== \"string\") {\n        console.warn(`Invalid follow user received (${follow.user})`);\n        return;\n      }\n\n      dispatch(addFollow(follow));\n    }\n  });\n\n  console.debug(\"subbing follows\");\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  unsubscribeRifleByQuery(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n\nexport const reloadFeed = () => ({\n  type: ACTIONS.RELOAD_FEED\n});\n\n// #region sharedPosts\n\nexport const sharedPostDeleted = createAction<{\n  postID: string;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostDeleted\");\n\nexport const sharedPostReceived = createAction<{\n  originalAuthor: string;\n  postID: string;\n  shareDate: number;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostReceived\");\n\nexport const subSharedPosts = (sharerPublicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n\n    const subscription = rifle({\n      query: `${sharerPublicKey}::sharedPosts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )}: ${e.message}`\n        );\n      },\n      onData: (sharedPost: unknown, postID: string) => {\n\n        if (Common.isSharedPostRaw(sharedPost)) {\n          dispatch(\n            sharedPostReceived({\n              originalAuthor: sharedPost.originalAuthor,\n              postID,\n              shareDate: sharedPost.shareDate,\n              sharerPublicKey\n            })\n          );\n        } else if (sharedPost === null) {\n          dispatch(\n            sharedPostDeleted({\n              postID,\n              sharerPublicKey\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In shared posts subscription for user ...${sharerPublicKey.slice(\n              -8\n            )}, invalid data -> `,\n            sharedPost\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\n// #endregion sharedPosts\n\nexport const postTipReceived = createAction<{\n  author: string;\n  postID: string;\n  tipAmt: number;\n  tipID: string;\n}>(\"feed/postTipReceived\");\n\nexport const subPostTips = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}>tipsSet::map.on`,\n      onData(tipAmt: unknown, tipID: string) {\n          const nTipAmount = Number(tipAmt)\n        if (nTipAmount !== NaN) {\n          dispatch(\n            postTipReceived({\n              author,\n              postID,\n              tipAmt:nTipAmount,\n              tipID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Post ${postID} tips sub, tipID ${tipID} got non number value -> `,\n            tipAmt\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID}: ${e.message}`\n    );\n    return () => {};\n  }\n};\n","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { exchangeKeyPair } from \"./EncryptionActions\";\nimport { connectSocket } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_WEBCLIENT_PREFIX: \"node/setWebClientPrefix\",\n  SET_RELAY_ID: \"auth/relay/set\"\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nexport const fetchNodeHealth = (hostIP, relayId) => async dispatch => {\n  try {\n    const headers = {};\n    if (relayId) {\n      headers[\"x-shock-hybrid-relay-id-x\"] = relayId;\n    }\n    const { data } = await Http.get(`${hostIP}/healthz`, {\n      headers\n    });\n    if (!data) {\n      throw new Error(\n        `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n      );\n    }\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (\n  hostIP,\n  resetData = true,\n  relayId = null\n) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n    if (relayId) {\n      dispatch(setRelayId(relayId));\n    }\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(exchangeKeyPair())\n    ]);\n\n    connectSocket(host, true);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(\n      `https://${sanitizedHostIP}`,\n      relayId\n    )(dispatch);\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(\n    `http://${sanitizedHostIP}`,\n    relayId\n  )(dispatch);\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({\n  alias,\n  password,\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/auth\",\n      {\n        alias,\n        password\n      },\n      {\n        // Unlocking can take significantly longer than other endpoints\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({\n  alias,\n  password,\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({\n  alias,\n  password\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/wallet\",\n      {\n        alias,\n        password\n      },\n      {\n        // Creating a wallet can take longer than any other endpoints.\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const setWebclientPrefix = prefix => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_WEBCLIENT_PREFIX,\n    data: prefix\n  });\n};\n\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n","import * as Common from \"shock-common\";\nimport isFinite from \"lodash/isFinite\";\n\nconst createValidator = <T extends Record<string, unknown>>(\n  valMap: Record<keyof T, (val: any) => void>,\n  baseValidator: (o: unknown) => boolean = () => true\n) => (o: unknown): o is T => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  if (!baseValidator(o)) {\n    return false;\n  }\n\n  return Object.entries(valMap).every(([key, validator]) => {\n    return validator(o[key]);\n  });\n};\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface HandshakeReqNew {\n  /**\n   * Sender's epub.\n   */\n  epub: string;\n  /**\n   * Sender's public key.\n   */\n  from: string;\n  /**\n   * Handshake address where the request was written to.\n   */\n  handshakeAddress: string;\n  /**\n   * The request's unique id.\n   */\n  id: string;\n\n  /**\n   * The ID for the receiver's conversation feed in their user graph. The sender\n   * will preemptively watch for messages in the receiver's conversation part of\n   * their user graph under this ID. When the receiver accepts, they will create\n   * the conversation feed under this ID and start sending messages. The initial\n   * $$__INITIAL__MSG sentinel message signals to the sender the request was\n   * accepted.\n   */\n  receiverConvoID: string;\n\n  /**\n   * The ID for the sender's conversation feed in their user graph. This\n   * conversation feed is already present upon sending the request.\n   */\n  senderConvoID: string;\n\n  /**\n   * Timestamp.\n   */\n  timestamp: number;\n}\n\nexport const isHandshakeReqNew = (o: unknown): o is HandshakeReqNew => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as HandshakeReqNew;\n\n  if (!Common.isPopulatedString(obj.epub)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.from)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.handshakeAddress)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.receiverConvoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.senderConvoID)) {\n    return false;\n  }\n\n  if (typeof obj.timestamp !== \"number\") {\n    return false;\n  }\n\n  return true;\n};\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Convo {\n  /**\n   * The id for the conversation in the recipient's user graph.\n   */\n  counterpartConvoID: string;\n  /**\n   * The id.\n   */\n  id: string;\n  /**\n   * The recipient's public key.\n   */\n  with: string;\n  /**\n   * The recipient's epub.\n   */\n  withEpub: string;\n}\n\nexport const isConvo = (o: unknown): o is Convo => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as Convo;\n\n  if (!Common.isPopulatedString(obj.counterpartConvoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  return Common.isPopulatedString(obj.with);\n};\n\nexport interface ConvoMsg {\n  body: string;\n  convoID: string;\n  err: string;\n  id: string;\n  state: \"ok\" | \"error\" | \"received\" | \"sending\";\n  timestamp: number;\n}\n\nexport const isConvoMsg = (o: unknown): o is ConvoMsg => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as ConvoMsg;\n\n  if (!Common.isPopulatedString(obj.body)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.convoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  if (typeof obj.timestamp !== \"number\") {\n    return false;\n  }\n\n  return true;\n};\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  tips: Record<string, number>;\n  type: \"post\";\n}\n\nexport interface PublishedContent {\n  type: \"image/embedded\" | \"video/embedded\";\n  magnetURI: string;\n  width: number;\n  height: number;\n  title: string;\n  description: string;\n}\n\nexport const isPublishedContent = (o: unknown): o is PublishedContent => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublishedContent;\n\n  if (typeof obj.description !== \"string\") {\n    return false;\n  }\n  if (typeof obj.height !== \"number\") {\n    return false;\n  }\n  if (typeof obj.width !== \"number\") {\n    return false;\n  }\n  if (!Common.isPopulatedString(obj.title)) {\n    return false;\n  }\n  if (obj.type !== \"image/embedded\" && obj.type !== \"video/embedded\") {\n    return false;\n  }\n  return true;\n};\n\nexport interface Subscription {\n  off(): void;\n}\n\n/**\n * Sentinel value that signals the recipient disconnected inside the user to\n * incoming map.\n */\nexport const DID_DISCONNECT = \"DID_DISCONNECT\";\nexport interface PublicContentItem extends PublishedContent {\n  id: string;\n  author: string;\n  timestamp: number;\n}\n\nexport const isPublicContentItem = (o: unknown): o is PublicContentItem => {\n  if (!isPublishedContent(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublicContentItem;\n\n  if (!Common.isPopulatedString(obj.author)) {\n    return false;\n  }\n\n  return typeof obj.timestamp === \"number\";\n};\n\nexport type FeeRate = \"hourFee\" | \"halfHourFee\" | \"fastestFee\";\n\nexport interface CoordinateWithHash extends Common.Coordinate {\n  coordinateSHA256: string;\n}\n\nexport interface ContentRevealCoordinateMetadataInbound {\n  /**\n   * The post ID.\n   */\n  ackInfo: string;\n  /**\n   * Content ID to magnet URI.\n   */\n  unlockedContents: Record<string, string>;\n}\n\nexport interface ContentRevealCoordinateMetadataOutbound {\n  /**\n   * Same as ContentRevealCoordinateMetadataInbound.\n   */\n  response: ContentRevealCoordinateMetadataInbound;\n  /**\n   * Order type.\n   */\n  type: \"orderAck\";\n}\n\n/**\n * Post as stored in Gun. Without `contentItems`.\n */\nexport type PostRaw = Omit<Common.RawPost, \"contentItems\">;\n\nexport const isPostRaw = createValidator<PostRaw>({\n  date: isFinite,\n  status: Common.isPopulatedString,\n  tags: (val: string) => typeof val === \"string\",\n  title: Common.isPopulatedString\n});\n\nexport interface NodeInfo {\n  uris: string[];\n  synced_to_chain: boolean;\n  synced_to_graph: boolean;\n  identity_pubkey: string;\n  best_header_timestamp: string;\n  block_height: number;\n  num_pending_channels: number;\n  version: string;\n}\n","import { createAction } from \"@reduxjs/toolkit\";\nimport * as Common from \"shock-common\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport * as Utils from \"../utils\";\nimport * as Schema from \"../schema\";\nimport { rifle } from \"../utils/WebSocket\";\n\n//#region receivedRequests\n\n/**\n * Dispatched when the handshake address changes.\n */\nexport const handshakeAddressUpdated = createAction<{\n  handshakeAddress: string;\n}>(\"handshakeAddressUpdated\");\n\n/**\n * Subscribe to the current handshake address stored in gun.\n * @returns A thunk that returns a subscription.\n */\nexport const subCurrentHandshakeAddress = () => (\n  dispatch: (action: any) => void\n) => {\n  Utils.logger.debug(`Subscribing to current handshake address.`);\n  try {\n    return rifle({\n      query: `$user::currentHandshakeAddress::on`,\n      onData: handshakeAddress => {\n        Utils.logger.debug(\n          `Received current handshake address: ${handshakeAddress}`\n        );\n\n        if (!Common.isPopulatedString(handshakeAddress)) {\n          Utils.logger.error(\n            `Current handshake address not an string -> `,\n            JSON.stringify(handshakeAddress)\n          );\n          return;\n        }\n\n        dispatch(\n          handshakeAddressUpdated({\n            handshakeAddress\n          })\n        );\n      }\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to current handshake address: ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to current handshake address:`,\n      e\n    );\n  }\n};\n\n/**\n * Dispatched when a handshake request is received inside the current handshake\n * node.\n */\nexport const receivedHandshakeRequest = createAction<{\n  receivedRequest: Schema.HandshakeReqNew;\n}>(\"chat/receivedHandshakeRequest\");\n\n/**\n * Dispatched when a handshake request is deleted after accepting  it.\n */\nexport const handshakeRequestDeleted = createAction<{\n  id: string;\n}>(\"chat/handshakeRequestDeleted\");\n\n/**\n * Subscribe to received requests inside the specified handshake node.\n * @returns A thunk that returns a subscription.\n */\nexport const subHandshakeNode = (handshakeAddress: string) => (\n  dispatch: (action: any) => void,\n  getState: () => { chat: { currentHandshakeAddress: string } }\n): Promise<Schema.Subscription> => {\n  Utils.logger.debug(`Subscribing to handshake node: ${handshakeAddress} .`);\n  try {\n    return rifle({\n      query: `$gun::handshakeNodes>${handshakeAddress}::map.on`,\n      epubField: \"epub\",\n      onData: (handshakeRequest: Schema.HandshakeReqNew, id: string) => {\n        Utils.logger.debug(\n          `Subscription to handshake node: ${handshakeAddress} -> `,\n          handshakeRequest\n        );\n        const {\n          chat: { currentHandshakeAddress }\n        } = getState();\n        Utils.logger.debug(`Current address: ${currentHandshakeAddress}`);\n        if (handshakeAddress !== currentHandshakeAddress) {\n          return;\n        }\n        if (Schema.isHandshakeReqNew(handshakeRequest)) {\n          dispatch(\n            receivedHandshakeRequest({\n              receivedRequest: handshakeRequest\n            })\n          );\n        } else if (handshakeRequest === null) {\n          dispatch(\n            handshakeRequestDeleted({\n              id\n            })\n          );\n        } else {\n          Utils.logger.debug(`Not a handshake request -> `, handshakeRequest);\n        }\n      }\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to handshake node with address: ${handshakeAddress} : ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to handshake node with address: ${handshakeAddress} : `,\n      e\n    );\n  }\n};\n\n//#endregion receivedRequests\n\n//#endregion sentRequests\n\nconst createOutgoingConversationFeed = (\n  outgoingConvoID: string,\n  publicKey: string,\n  epub: string,\n  incomingConvoID: string\n) => {\n  const msgID = uuidv4();\n\n  const newOutgoingConvo: {\n    [K in keyof Schema.Convo]: any;\n  } & {\n    messages: Record<\n      string,\n      {\n        [K in keyof Schema.ConvoMsg]: any;\n      }\n    >;\n  } = {\n    id: outgoingConvoID,\n\n    with: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: publicKey\n    },\n\n    withEpub: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: epub\n    },\n\n    counterpartConvoID: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: incomingConvoID\n    },\n\n    messages: {\n      [msgID]: {\n        id: msgID,\n        body: {\n          $$__ENCRYPT__FOR: publicKey,\n          $$__EPUB__FOR: epub,\n          value: Common.INITIAL_MSG\n        },\n        timestamp: Date.now(),\n        convoID: outgoingConvoID,\n        state: \"ok\",\n        err: \"\"\n      }\n    }\n  };\n\n  return newOutgoingConvo;\n};\n\nexport const acceptHandshakeRequest = (requestId: string) => async (\n  _: unknown,\n  getState: () => {\n    chat: { receivedRequests: Record<string, Schema.HandshakeReqNew> };\n  }\n) => {\n  const req: Schema.HandshakeReqNew = getState().chat.receivedRequests[\n    requestId\n  ];\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$user>convos>${req.receiverConvoID}`,\n    value: createOutgoingConversationFeed(\n      req.receiverConvoID,\n      req.from,\n      req.epub,\n      req.senderConvoID\n    )\n  });\n\n  Utils.Http.post(`/api/gun/put`, {\n    path: `$gun>handshakeNodes>${req.handshakeAddress}>${req.id}`,\n    value: null\n  });\n};\n\nexport const sendHandshakeRequest = (publicKey: string) => async (\n  _: unknown,\n  getState: () => { node: { publicKey: string } }\n) => {\n  Utils.logger.debug(\n    `Sending handshake request to ${publicKey.slice(0, 8)}...`\n  );\n  const epubP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(epub) {\n        Utils.logger.debug(\n          `Got epub for public Key ${publicKey.slice(0, 8)}... : ${epub}`\n        );\n        if (Common.isPopulatedString(epub)) {\n          subscription.then(sub => sub.off());\n          res(epub);\n        } else {\n          Utils.logger.debug(\n            `Could not fetch epub for public Key ${publicKey.slice(\n              0,\n              8\n            )}... : ${epub}`\n          );\n          subscription.then(sub => sub.off());\n          rej(new TypeError(`Could not fetch epub`));\n        }\n      },\n      query: `${publicKey}::epub::on`,\n      onError(e) {\n        Utils.logger.debug(\n          `Error when fetch epub for public Key ${publicKey.slice(\n            0,\n            8\n          )}... : ${epub}`\n        );\n        Utils.logger.error(e);\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const handshakeAddressP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(handshakeAddress) {\n        if (Common.isPopulatedString(handshakeAddress)) {\n          res(handshakeAddress);\n          subscription.then(sub => sub.off());\n        } else {\n          rej(new TypeError(`Could not fetch epub`));\n          subscription.then(sub => sub.off());\n        }\n      },\n      query: `${publicKey}::currentHandshakeAddress::on`,\n      onError(e) {\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const selfEpubP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(epub) {\n        if (Common.isPopulatedString(epub)) {\n          res(epub);\n          subscription.then(sub => sub.off());\n        } else {\n          rej(new TypeError(`Could not fetch self epub`));\n          subscription.then(sub => sub.off());\n        }\n      },\n      query: `$user::epub::on`,\n      onError(e) {\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const outgoingConvoID = uuidv4();\n  const incomingConvoID = uuidv4();\n  const requestID = uuidv4();\n  const [epub, handshakeAddress, selfEpub] = await Promise.all([\n    epubP,\n    handshakeAddressP,\n    selfEpubP\n  ]);\n\n  Utils.logger.debug(\n    `Got epub/handshakeaddress/selfEpub, sending request to public Key ${publicKey.slice(\n      0,\n      8\n    )}...`\n  );\n\n  const handshakeReqForGun: {\n    [K in keyof Schema.HandshakeReqNew]: any;\n  } = {\n    id: requestID,\n    from: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: getState().node.publicKey\n    },\n    epub: selfEpub,\n    timestamp: Date.now(),\n    receiverConvoID: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: incomingConvoID\n    },\n    senderConvoID: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: outgoingConvoID\n    },\n    handshakeAddress\n  };\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$gun>handshakeNodes>${handshakeAddress}>${requestID}`,\n    value: handshakeReqForGun\n  });\n\n  // after request was sent let's now create our outgoing feed\n\n  Utils.logger.debug(\n    `Sent request to public Key ${publicKey.slice(\n      0,\n      8\n    )}... will now create outgoing conversation feed`\n  );\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$user>convos>${outgoingConvoID}`,\n    value: createOutgoingConversationFeed(\n      outgoingConvoID,\n      publicKey,\n      epub,\n      incomingConvoID\n    )\n  });\n};\n\nexport const convoReceived = createAction<{ convo: Schema.Convo }>(\n  \"chat/convoReceived\"\n);\n\nexport const convoDeleted = createAction<{ id: string }>(\"chat/convoDeleted\");\n\nexport const subConvos = () => async (\n  dispatch: (action: any) => void,\n  getState: () => { node: { publicKey: string } }\n) => {\n  try {\n    return rifle({\n      query: `$user::convos::map.on`,\n      onData: (convo: Schema.Convo, id: string) => {\n        console.log(\"--------------\");\n        console.log(convo);\n        console.log(\"--------------\");\n        if (convo === null) {\n          dispatch(\n            convoDeleted({\n              id\n            })\n          );\n          return;\n        }\n        if (!Schema.isConvo(convo)) {\n          return;\n        }\n        // @ts-expect-error\n        delete convo._;\n        // @ts-expect-error\n        delete convo.messages;\n        dispatch(\n          convoReceived({\n            convo\n          })\n        );\n      },\n      publicKey: getState().node.publicKey\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to outgoing conversation feeds: ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to outgoing conversation feeds -> `,\n      e\n    );\n  }\n};\n\nexport const messageTransmissionRequested = createAction<{\n  convoID: string;\n  messageID: string;\n  message: string;\n}>(\"chat/messageTransmissionRequested\");\n\nexport const messageTransmissionSucceeded = createAction<{\n  convoID: string;\n  messageID: string;\n}>(\"chat/messageTransmissionSucceeded\");\n\nexport const messageTransmissionFailed = createAction<{\n  convoID: string;\n  errorMessage: string;\n  messageID: string;\n}>(\"chat/messageTransmissionFailed\");\n\nexport const sendMessage = (convoID: string, messageBody: string) => async (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n    };\n  }\n) => {\n  const messageID = uuidv4(); // does not throw, ever...?\n\n  try {\n    const convo = getState().chat.convos[convoID];\n\n    if (messageBody.trim().length === 0) {\n      return;\n    }\n\n    dispatch(\n      messageTransmissionRequested({\n        convoID,\n        messageID,\n        message: messageBody.trim()\n      })\n    );\n\n    const message: Schema.ConvoMsg = {\n      body: ({\n        $$__ENCRYPT__FOR: convo.with,\n        $$__EPUB__FOR: convo.withEpub,\n        value: messageBody\n      } as unknown) as string,\n      convoID,\n      id: messageID,\n      timestamp: Date.now(),\n      state: \"ok\",\n      err: \"\"\n    };\n\n    await Utils.Http.post(`/api/gun/put`, {\n      path: `$user>convos>${convoID}>messages>${messageID}`,\n      value: message\n    });\n\n    dispatch(\n      messageTransmissionSucceeded({\n        convoID,\n        messageID\n      })\n    );\n  } catch (e) {\n    Utils.logger.error(`Error inside sendMessage() -> `, e);\n    dispatch(\n      messageTransmissionFailed({\n        convoID,\n        errorMessage: e.message,\n        messageID\n      })\n    );\n  }\n};\n\nexport const messageTransmissionRetried = createAction<{\n  convoID: string;\n  messageID: string;\n}>(\"chat/messageTransmissionRetried\");\n\nexport const retryMessage = (convoID: string, messageID: string) => async (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n      convoToMessages: Record<\n        string,\n        Record<\n          string,\n          Schema.ConvoMsg & { err: string; state: \"ok\" | \"sending\" | \"error\" }\n        >\n      >;\n    };\n  }\n) => {\n  try {\n    const convo = getState().chat.convos[convoID];\n    const existingMessage = getState().chat.convoToMessages[convoID][messageID];\n\n    if (!existingMessage) {\n      throw new ReferenceError(\n        `Tried to retry sending a message that was not found in redux convoID: ${convoID} & messageID: ${messageID}`\n      );\n    }\n\n    dispatch(\n      messageTransmissionRetried({\n        convoID,\n        messageID\n      })\n    );\n\n    const message: Schema.ConvoMsg = {\n      body: ({\n        $$__ENCRYPT__FOR: convo.with,\n        $$__EPUB__FOR: convo.withEpub\n      } as unknown) as string,\n      convoID,\n      id: messageID,\n      timestamp: Date.now(),\n      state: \"ok\",\n      err: \"\"\n    };\n\n    await Utils.Http.post(`/api/gun/put`, {\n      path: `$user>convos>${convoID}>messages>${messageID}`,\n      value: message\n    });\n\n    dispatch(\n      messageTransmissionSucceeded({\n        convoID,\n        messageID\n      })\n    );\n  } catch (e) {\n    Utils.logger.error(`Error inside retryMessage() -> `, e);\n    dispatch(\n      messageTransmissionFailed({\n        convoID,\n        errorMessage: e.message,\n        messageID\n      })\n    );\n  }\n};\n\nexport const receivedConvoMessage = createAction<{\n  message: Schema.ConvoMsg;\n}>(\"chat/receivedConvoMessage\");\n\nexport const subConvoMessages = (convoID: string) => (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n    };\n  }\n) => {\n  try {\n    Utils.logger.debug(`Subscribing to messages for convo: ${convoID}`);\n\n    const convo = getState().chat.convos[convoID];\n\n    const outgoingSub = rifle({\n      query: `$user::convos>${convoID}>messages::map.on`,\n      onData: (message: unknown) => {\n        Utils.logger.debug(\n          `Outgoing subscription for convo: ${convoID} -> `,\n          message\n        );\n        if (Schema.isConvoMsg(message)) {\n          dispatch(\n            receivedConvoMessage({\n              message\n            })\n          );\n        } else if (message === null) {\n          // TODO: message deleted\n        } else {\n          Utils.logger.warn(\n            `Outgoing message in convo ${convo.id} does not correspond to schema -> `,\n            message\n          );\n        }\n      },\n      epubForDecryption: convo.withEpub,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside subConvoMessages() outgoing sub -> `,\n          e\n        );\n        alert(`Error inside outgoing messages subscription: ${e.message}`);\n      }\n    });\n\n    const incomingSub = rifle({\n      query: `${convo.with}::convos>${convo.counterpartConvoID}>messages::map.on`,\n      onData: (message: unknown) => {\n        Utils.logger.debug(\n          `Incoming subscription for convo: ${convoID} -> `,\n          message\n        );\n        if (Schema.isConvoMsg(message)) {\n          dispatch(\n            receivedConvoMessage({\n              message: {\n                ...message,\n                state: \"received\",\n                // Otherwise it will reference the other user's convo\n                convoID: convo.id\n              }\n            })\n          );\n        } else if (message === null) {\n          // TODO: message deleted\n        } else {\n          Utils.logger.warn(\n            `Incoming message in convo ${convo.id} does not correspond to schema -> `,\n            message\n          );\n        }\n      },\n      epubForDecryption: convo.withEpub,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside subConvoMessages() incoming sub -> `,\n          e\n        );\n        alert(`Error inside incoming messages subscription: ${e.message}`);\n      }\n    });\n\n    return () => {\n      Promise.all([outgoingSub, incomingSub]).then(subs =>\n        subs.forEach(sub => sub.off())\n      );\n    };\n  } catch (e) {\n    Utils.logger.error(`Error inside subConvoMessages() -> `, e);\n    alert(`Could not subscribe to conversation messages: ${e.message}`);\n  }\n};\n","let dialogCallback = null\nexport const addDialogCallback = cb => {\n    dialogCallback = cb\n}\n\nexport const callDialogCallBack = async () => {\n    if(!dialogCallback){\n        return Promise.resolve()\n    }\n    return dialogCallback()\n}","import {\n  addDialogCallback,\n  callDialogCallBack\n} from '../utils/dialogCallback'\nexport const ACTIONS = {\n  OPEN_DIALOG: \"app/openDialog\",\n  CLOSE_DIALOG:\"app/closeDialog\"\n};\nexport const openDialog = ({text,cb = null}) => dispatch => {\n  addDialogCallback(cb)\n  dispatch({\n    type: ACTIONS.OPEN_DIALOG,\n    data: {text,hasCallback: !!cb}\n  });\n};\n\nexport const closeDialog = executeCb => dispatch => {\n  if(executeCb){\n    callDialogCallBack()\n  }\n  dispatch({\n    type: ACTIONS.CLOSE_DIALOG\n  });\n}","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Utils from \"../utils\";\nimport {\n  rifle,\n  rifleCleanup,\n  unsubscribeRifleByQuery\n} from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\"\n};\n\nconst subscribedProfiles = new Set();\n\nexport const updatedUserProfile = createAction<{\n  profile: Partial<Common.User>;\n  publicKey: string;\n}>(\"userProfiles/profiles/update\");\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => (\n  dispatch: (action: object) => void,\n  getState: () => {\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  if (subscribedProfiles.has(publicKey)) {\n    return () => {};\n  }\n\n  console.info(\"subbing user...\" + publicKey);\n  subscribedProfiles.add(publicKey);\n\n  const subscription = rifle({\n    query: `${publicKey}::Profile::map.on`,\n    reconnect: true,\n    onData: (data: any, key: string) => {\n      if (key === \"bio\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              bio: data\n            },\n            publicKey\n          })\n        );\n      }\n      if (key === \"displayName\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              displayName: data\n            },\n            publicKey\n          })\n        );\n      }\n    }\n  });\n\n  const binarySub = rifle({\n    query: `${publicKey}::profileBinary::map.on`,\n    reconnect: true,\n    onData: (data, key: string) => {\n      if (key === \"avatar\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              avatar: data\n            },\n            publicKey\n          })\n        );\n      } else if (key === \"header\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              header: data\n            },\n            publicKey\n          })\n        );\n      } else {\n        Utils.logger.error(\n          `Unknown key: ${key} for user binary profile data gun RPC socket`\n        );\n      }\n    }\n  });\n\n  return () => {\n    rifleCleanup(subscription, binarySub)();\n    subscribedProfiles.delete(publicKey);\n  };\n};\n\nexport const unsubscribeUserProfile = (publicKey: string) => async () => {\n  unsubscribeRifleByQuery(`${publicKey}::Profile::on`);\n  unsubscribeRifleByQuery(`${publicKey}::profileBinary::map.on`);\n};\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <NavLink to=\"/Backups\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </NavLink>\n          <NavLink to=\"/walletSettings\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\" />\n            </div>\n            <p className=\"drawer-item-title unselectable\">Wallet Settings</p>\n          </NavLink>\n        </div>\n        <div className=\"drawer-bottom-section\">\n          {/*<NavLink className=\"drawer-item\" to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>*/}\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n          <NavLink to=\"/QRScanner\" onClick={close}>\n            <i\n              onClick={onClickScan}\n              className=\"icon-solid-scan\"\n              style={{ color: \"var(--main-blue)\" }}\n            ></i>\n          </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\n\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as Store from \"./store\";\nimport \"./styles/App.global.css\";\nimport Stream from \"./common/Post/components/Stream\";\nimport { dragElement } from \"./utils/ui\";\nimport { Http } from \"./utils\";\nimport {\n  addStream,\n  removeStream,\n  setSeedInfo,\n  setSeedProviderPub\n} from \"./actions/ContentActions\";\nimport { closeDialog } from \"./actions/AppActions\";\n\nimport { ToastContainer } from \"react-toastify\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst WalletSettingsPage = React.lazy(() => import(\"./pages/WalletSettings\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/PublishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst CreatePostPage = React.lazy(() => import(\"./pages/Profile/CreatePost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/GoLive/GoLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\nconst BackupsPage = React.lazy(() => import(\"./pages/Backups\"));\nconst PublicContentItemPage = React.lazy(() =>\n  import(\"./pages/PublicContentItem\")\n);\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const streamUrl = Store.useSelector(({ content }) => content.streamUrl);\n  const streamStatusUrl = Store.useSelector(\n    ({ content }) => content.streamStatusUrl\n  );\n  const streamContentId = Store.useSelector(\n    ({ content }) => content.streamContentId\n  );\n  const streamPostId = Store.useSelector(({ content }) => content.streamPostId);\n  const streamUserToken = Store.useSelector(\n    ({ content }) => content.streamUserToken\n  );\n  const streamLiveToken = Store.useSelector(\n    ({ content }) => content.streamLiveToken\n  );\n  const dialogText = Store.useSelector(({ app }) => app.dialogText);\n  const dialogHasCallback = Store.useSelector(\n    ({ app }) => app.dialogHasCallback\n  );\n  const [update, setUpdate] = useState(0);\n  const [isLive, setIsLive] = useState(false);\n  const [showFloatingPlayer, setShowFloatingPlayer] = useState(false);\n  // effect to update live status\n  useEffect(() => {\n    if (!streamStatusUrl) {\n      return;\n    }\n    let timeout;\n    const interval = setInterval(async () => {\n      try {\n        const res = await Http.get(streamStatusUrl);\n        if (!res.data.isLive) {\n          return;\n        }\n        setIsLive(true);\n        clearInterval(interval);\n        timeout = setTimeout(() => {\n          console.info(\"upp\");\n          setUpdate(Date.now());\n        }, 5000);\n      } catch (e) {}\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, [streamStatusUrl, setIsLive, setUpdate]);\n  const StreamRender = useMemo(() => {\n    return (\n      <Stream\n        hideRibbon={true}\n        item={{ magnetURI: streamUrl, liveStatus: \"live\" }}\n        timeout={1500}\n        id={undefined}\n        index={undefined}\n        postId={undefined}\n        tipCounter={undefined}\n        tipValue={undefined}\n        width={undefined}\n      />\n    );\n  }, [streamUrl, update]);\n\n  const stopStream = useCallback(() => {\n    Http.post(\"/api/stopStream\", {\n      postId: streamPostId,\n      contentId: streamContentId,\n      endUrl: `https://stream.shock.network/api/stream/end`,\n      urlForMagnet: `https://stream.shock.network/api/stream/torrent/${streamUserToken}`,\n      obsToken: streamLiveToken\n    });\n    removeStream()(dispatch);\n    console.info(streamUserToken);\n    history.push(\"/profile\");\n  }, [\n    dispatch,\n    history,\n    streamContentId,\n    streamLiveToken,\n    streamPostId,\n    streamUserToken\n  ]);\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated) {\n      // Get current user's profile on login\n      dispatch(subscribeUserProfile(publicKey));\n\n      return () => {\n        dispatch(unsubscribeUserProfile(publicKey));\n      };\n    }\n  }, [authenticated, dispatch, publicKey]);\n\n  useEffect(() => {\n    const tmp = !!(authenticated && isLive && streamUrl);\n    if (tmp !== showFloatingPlayer) {\n      setShowFloatingPlayer(tmp);\n    }\n  }, [\n    authenticated,\n    isLive,\n    streamUrl,\n    showFloatingPlayer,\n    setShowFloatingPlayer\n  ]);\n  useEffect(() => {\n    if (showFloatingPlayer) {\n      dragElement(\"floatyVideo\");\n    }\n  }, [showFloatingPlayer]);\n\n  //load info about content provider stored into gun\n  const loadContentInfo = useCallback(async () => {\n    try {\n      const { data: serviceProvider } = await Http.get(\n        `/api/gun/user/load/seedServiceProviderPubKey`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        serviceProvider &&\n        typeof serviceProvider.data === \"string\" &&\n        serviceProvider.data !== \"\"\n      ) {\n        setSeedProviderPub(serviceProvider.data, true)(dispatch);\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n    try {\n      const { data: seedData } = await Http.get(\n        `/api/gun/user/load/seedServiceSeedData`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        seedData &&\n        typeof seedData.data === \"string\" &&\n        seedData.data !== \"\"\n      ) {\n        const JObject = JSON.parse(seedData.data);\n        if (JObject && JObject.seedUrl && JObject.seedToken) {\n          setSeedInfo(JObject.seedUrl, JObject.seedToken, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated) {\n      return;\n    }\n    loadContentInfo();\n  }, [authenticated, loadContentInfo]);\n\n  //load info about current stream stored into gun\n  const loadStreamInfo = useCallback(async () => {\n    try {\n      const { data: streamData } = await Http.get(\n        `/api/gun/user/load/currentStreamInfo`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        streamData &&\n        typeof streamData.data === \"string\" &&\n        streamData.data !== \"\"\n      ) {\n        if (streamData.data === \"NO DATA\") {\n          removeStream(true, true)(dispatch);\n          return;\n        }\n        const JObject = JSON.parse(streamData.data);\n\n        if (JObject) {\n          addStream(JObject, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated) {\n      return;\n    }\n    loadStreamInfo();\n  }, [authenticated, loadStreamInfo]);\n\n  const DialogClose = useCallback(() => {\n    closeDialog(false)(dispatch);\n  }, [closeDialog, dispatch]);\n\n  const ConfirmDialog = useCallback(() => {\n    closeDialog(dialogHasCallback)(dispatch);\n  }, [dialogHasCallback, closeDialog, dispatch]);\n  return (\n    <FullHeight className=\"ShockWallet\">\n      {showFloatingPlayer && (\n        <div id=\"floatyVideo\" className=\"floaty-container\">\n          <i id=\"floatyVideoHeader\" className=\"fas fa-grip-vertical\"></i>\n          {StreamRender}\n          <button onClick={stopStream}>CLOSE STREAM</button>\n        </div>\n      )}\n      {dialogText && (\n        <div className=\"fixed-container\">\n          <div className=\"global-dialog\">\n            <p>{dialogText}</p>\n            <div className=\"d-flex flex-justify-center w-80\">\n              {dialogHasCallback && (\n                <button\n                  className=\"shock-form-button m-t-1 w-50\"\n                  onClick={DialogClose}\n                >\n                  Cancel\n                </button>\n              )}\n              {dialogHasCallback && <div style={{ width: \"1rem\" }}></div>}\n              <button\n                className=\"shock-form-button-confirm m-t-1 w-50\"\n                onClick={ConfirmDialog}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute\n            path=\"/walletSettings\"\n            exact\n            component={WalletSettingsPage}\n          />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:convoOrReqID\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={CreatePostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey/:selectedView?\"\n            exact\n            component={OtherUserPage}\n          />\n          <PrivateRoute path=\"/Backups\" exact component={BackupsPage} />\n\n          <PrivateRoute\n            path=\"/item/:publicKey/:id\"\n            exact\n            component={PublicContentItemPage}\n          />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover={false}\n        closeButton={false}\n      />\n    </FullHeight>\n  );\n};\n\nexport default App;\n","export function dragElement(elementId) {\n  const elmnt = document.getElementById(elementId)\n  if(!elmnt){\n    console.log(\"draggable set fail\")\n    return\n      \n  }\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  document.getElementById(elmnt.id + \"Header\").onpointerdown = dragMouseDown;\n\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onpointerup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onpointermove = elementDrag;\n  }\n\n  function elementDrag(e) {\n      console.log(\"dragging yooo\")\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n  }\n\n  function closeDragElement() {\n      console.log(\"not anymore!\")\n    // stop moving when mouse button is released:\n    document.onpointerup = null;\n    document.onpointermove = null;\n  }\n  }\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Http from \"axios\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./styles/index.global.css\";\n\nHttp.defaults.timeout = 20000;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\nimport * as Common from \"shock-common\";\n\nexport function useForceUpdate(): () => void {\n  const [, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return update;\n}\n\n/**\n * Handle the ugly \"in 0 seconds\" cases (returning \"Just now\"), returns an empty\n * string if the timestamp is -1.\n */\nexport const formatTimestamp = (timestamp: number): string => {\n  if (timestamp === -1) {\n    return \"\";\n  }\n  const relativeTime = DateTime.fromMillis(\n    Common.normalizeTimestampToMs(timestamp)\n  ).toRelative();\n  return relativeTime === \"in 0 seconds\" ? \"Just now\" : relativeTime;\n};\n","import * as Common from \"shock-common\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Action } from \"redux\";\nimport { useDispatch as originalUseDispatch } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n\nimport { State } from \"../reducers\";\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nimport { rifle } from \"./WebSocket\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\nexport * from \"./WebSocket\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args),\n  debug: (...args: any[]) => console.debug(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not a url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n\nexport const EMPTY_ARR = [] as readonly Readonly<any>[];\n\nexport const EMPTY_OBJ = {} as const;\n\nexport const useBooleanState = (initialState: boolean) => {\n  const [state, setState] = useState<boolean>(initialState);\n  const toggle = useCallback(() => {\n    setState(_state => !_state);\n  }, []);\n\n  return [state, toggle] as const;\n};\n\nexport const parseJson = (o: string) => JSON.parse(o) as unknown;\n\n/**\n * Returns null if the value provided is not a valid JSON string.\n * @param o\n */\nexport const safeParseJson = (o: unknown): unknown => {\n  if (!Common.isPopulatedString(o)) {\n    return null;\n  }\n  try {\n    return JSON.parse(o);\n  } catch (e) {\n    logger.warn(`Error inside safeParseJson() -> `, e);\n    logger.log(`Error inside safeParseJson(), string provided -> `, o);\n    return null;\n  }\n};\n\nexport const useDispatch = (): ThunkDispatch<State, undefined, Action> => {\n  return originalUseDispatch() as ThunkDispatch<State, undefined, Action>;\n};\n\nexport const useLastSeen = (publicKey: string) => {\n  const [lastSeenApp, setLastSeenApp] = useState(0);\n  const [lastSeenNode, setLastSeenNode] = useState(0);\n\n  useEffect(() => {\n    const appSub = rifle({\n      query: `${publicKey}::Profile>lastSeenApp::on`,\n      onData(lastSeen) {\n        if (typeof lastSeen === \"number\") {\n          setLastSeenApp(lastSeen);\n        } else {\n          logger.error(`useLastSeen() -> got non-number lastSeenApp`);\n        }\n      },\n      onError(e) {\n        logger.error(`useLastSeen() -> lastSeenApp rifle -> `, e);\n      }\n    });\n\n    const nodeSub = rifle({\n      query: `${publicKey}::Profile>lastSeenNode::on`,\n      onData(lastSeen) {\n        if (typeof lastSeen === \"number\") {\n          setLastSeenNode(lastSeen);\n        } else {\n          logger.error(`useLastSeen() -> got non-number lastSeenNode`);\n        }\n      },\n      onError(e) {\n        logger.error(`useLastSeen() -> lastSeenNode rifle -> `, e);\n      }\n    });\n\n    return () => {\n      appSub.then(sub => {\n        sub.off();\n      });\n      nodeSub.then(sub => {\n        sub.off();\n      });\n    };\n  }, [publicKey]);\n\n  return { lastSeenApp, lastSeenNode };\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangeSource = Http.CancelToken.source();\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    if (exchangeSource) {\n      exchangeSource.cancel(\n        \"Key Pair exchange operation is preceded by another one\"\n      );\n      exchangeSource = null;\n    }\n\n    exchangeSource = Http.CancelToken.source();\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(\n      `/api/encryption/exchange`,\n      {\n        publicKey: keyPair.publicKeyBase64,\n        deviceId\n      },\n      {\n        cancelToken: exchangeSource.token\n      }\n    );\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\n/**\n * @param {string} source\n */\nexport const setSource = source => ({\n  type: ACTIONS.SET_SOURCE,\n  data: source\n});\n\n/**\n * @param {import('../schema').FeeRate} rate\n */\nexport const setRate = rate => ({\n  type: ACTIONS.SET_RATE,\n  data: rate\n});\n"],"sourceRoot":""}