{"version":3,"sources":["utils/Platform.ts","pages/Send/index.tsx"],"names":["isDesktop","navigator","userAgent","match","SendPage","location","useLocation","history","useHistory","useState","amount","setAmount","description","setDescription","unit","setUnit","contact","setContact","error","setError","setLoading","paymentLoading","setPaymentLoading","isDesktopDevice","useMemo","onInputChange","useCallback","e","target","name","value","selectContact","a","console","log","type","Http","post","payReq","paymentRequest","data","decodedRequest","num_satoshis","useEffect","routerState","state","address","request","dest","sendBTCPayment","addr","payment","sendLightningPayment","payreq","amt","feeLimit","keysend","sendGunPayment","recipientPub","pk","Number","memo","onSubmit","includes","push","response","errorMessage","message","containerClassName","title","className","fullScreen","overlay","text","to","selected","style","undefined","features","label","onChange","disabled","inputMode","element","onClick","onSuccess"],"mappings":"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","file":"static/js/35.72317682.chunk.js","sourcesContent":["export const isMobile = (): boolean =>\n  !!navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n\nexport const isDesktop = (): boolean => (!isMobile() ? true : false);\n","import React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Http from \"../../utils/Http\";\nimport SlidePay from \"../../common/SlidePay\";\nimport InputGroup from \"../../common/InputGroup\";\nimport ContactSearch from \"../../common/ContactsSearch\";\nimport DialogPageContainer from \"../../common/DialogPageContainer\";\nimport Suggestion from \"../../common/ContactsSearch/components/Suggestion\";\nimport Loader from \"../../common/Loader\";\nimport \"./css/index.scoped.css\";\nimport { isDesktop } from \"../../utils/Platform\";\n\ninterface properties {\n  [key: string]: any;\n}\n\nconst SendPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const [amount, setAmount] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [unit, setUnit] = useState(\"sats\");\n  const [contact, setContact] = useState<properties>({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [paymentLoading, setPaymentLoading] = useState(false);\n\n  const isDesktopDevice = useMemo(() => {\n    return isDesktop();\n  }, []);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n\n    if (e.target.name === \"description\") {\n      setDescription(e.target.value);\n    }\n\n    if (e.target.name === \"unit\") {\n      setUnit(e.target.value);\n    }\n  }, []);\n\n  const selectContact = useCallback(async contact => {\n    console.log(\"selectContact:\", contact);\n    setLoading(true);\n    setContact(contact);\n\n    if (contact && contact.type === \"invoice\") {\n      // Do invoice decoding\n      const { data } = await Http.post(\"/api/lnd/decodePayReq\", {\n        payReq: contact.paymentRequest\n      });\n\n      const { decodedRequest } = data;\n\n      setAmount(decodedRequest.num_satoshis);\n      setUnit(\"sats\");\n      setDescription(decodedRequest.description);\n    }\n\n    setLoading(false);\n  }, []);\n  //effect for incoming redirects with data\n  useEffect(() => {\n    const { state: routerState } = location;\n\n    if (routerState && routerState.data && routerState.data.type) {\n      const { data } = routerState;\n      switch (data.type) {\n        case \"btc\": {\n          selectContact({\n            type: \"btc\",\n            address: data.address\n          });\n          if (data.amount) {\n            setAmount(data.amount);\n          }\n          break;\n        }\n        case \"ln\": {\n          selectContact({\n            type: \"invoice\",\n            paymentRequest: data.request\n          });\n          break;\n        }\n        case \"keysend\": {\n          selectContact({\n            type: \"keysend\",\n            dest: data.address\n          });\n          break;\n        }\n        default:\n          break;\n      }\n      location.state = {};\n    }\n  }, [location, selectContact, setAmount]);\n  const sendBTCPayment = useCallback(async () => {\n    if (contact) {\n      const { data: payment } = await Http.post(\"/api/lnd/sendcoins\", {\n        addr: contact.address,\n        amount: amount\n      });\n      console.log(payment);\n    }\n  }, [amount, contact]);\n\n  const sendLightningPayment = useCallback(async () => {\n    if (contact) {\n      const { data: payment } = await Http.post(\"/api/lnd/sendpayment\", {\n        dest: contact.dest,\n        payreq: contact.paymentRequest,\n        amt: contact.paymentRequest ? \"0\" : amount,\n        feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n        keysend: contact.type === \"keysend\"\n      });\n      console.log(payment);\n    }\n  }, [amount, contact]);\n\n  const sendGunPayment = useCallback(async () => {\n    if (contact) {\n      await Http.post(\"/api/gun/sendpayment\", {\n        recipientPub: contact.pk,\n        amount: Number(amount),\n        feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n        memo: description\n      });\n    }\n  }, [amount, contact, description]);\n\n  const onSubmit = useCallback(async () => {\n    try {\n      setError(\"\");\n      setPaymentLoading(true);\n\n      if (contact?.type === \"btc\") {\n        await sendBTCPayment();\n      }\n\n      if ([\"invoice\", \"keysend\"].includes(contact?.type)) {\n        await sendLightningPayment();\n      }\n\n      if (contact?.type === \"contact\") {\n        await sendGunPayment();\n      }\n      history.push(\"/overview\");\n      setPaymentLoading(false);\n    } catch (err) {\n      console.error(err);\n      setError(err.response?.data.errorMessage ?? err.message);\n      setPaymentLoading(false);\n      throw err;\n    }\n  }, [contact, history, sendBTCPayment, sendGunPayment, sendLightningPayment]);\n\n  return (\n    <DialogPageContainer containerClassName=\"send-page\" title=\"SEND\">\n      <div className=\"send-form-container\">\n        {paymentLoading ? (\n          <Loader fullScreen overlay text=\"Processing Payment...\" />\n        ) : null}\n        {error ? <p className=\"form-error\">{error}</p> : null}\n        {!contact ? (\n          <Link className=\"scan-qr-btn\" to=\"/QRScanner\">\n            <i className=\"scan-qr-icon icon icon-solid-scan\"></i>\n            <p className=\"scan-qr-text\">Scan QR</p>\n          </Link>\n        ) : null}\n        {contact ? (\n          <Suggestion\n            selected\n            contact={contact}\n            selectContact={selectContact}\n            style={undefined}\n          />\n        ) : (\n          <ContactSearch\n            selectContact={selectContact}\n            features={[\"btc\", \"keysend\", \"contact\", \"invoice\"]}\n          />\n        )}\n        <div className=\"inputs-group\">\n          <InputGroup\n            name=\"amount\"\n            label=\"Enter Amount\"\n            onChange={onInputChange}\n            value={amount}\n            disabled={contact?.type === \"invoice\"}\n            inputMode=\"decimal\"\n          />\n          <select\n            name=\"unit\"\n            className=\"unit-dropdown\"\n            onChange={onInputChange}\n            value={unit}\n            disabled={contact?.type === \"invoice\"}\n          >\n            <option value=\"sats\">sats</option>\n            <option value=\"btc\">BTC</option>\n          </select>\n        </div>\n        <InputGroup\n          name=\"description\"\n          label=\"Description\"\n          element=\"textarea\"\n          onChange={onInputChange}\n          type=\"textarea\"\n          value={description}\n          disabled={contact?.type === \"invoice\"}\n        />\n      </div>\n      {isDesktopDevice && (\n        <div className=\"w-100 flex-center m-b-3\">\n          <button\n            disabled={!contact}\n            onClick={onSubmit}\n            className=\"shock-form-button-confirm\"\n          >\n            SEND\n          </button>\n        </div>\n      )}\n      {!isDesktopDevice && (\n        <SlidePay disabled={!contact} onSuccess={onSubmit} />\n      )}\n    </DialogPageContainer>\n  );\n};\n\nexport default SendPage;\n"],"sourceRoot":""}