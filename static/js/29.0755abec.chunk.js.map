{"version":3,"sources":["../node_modules/js-lnurl/lib/helpers.js","../node_modules/js-lnurl/lib/index.js","../node_modules/bech32/index.js","../node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/js-lnurl/node_modules/query-string/index.js","../node_modules/js-lnurl/node_modules/strict-uri-encode/index.js","../node_modules/decode-uri-component/index.js","../node_modules/split-on-first/index.js","../node_modules/filter-obj/index.js","../node_modules/js-lnurl/node_modules/safe-buffer/index.js","../node_modules/aes-js/index.js"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","decipherAES","getDomain","randomHex","findlnurl","aes_js_1","require","base64_js_1","bodyOfText","res","exec","toLowerCase","nbytes","len","hex","output","i","charAt","Math","floor","random","length","url","split","slice","sa","preimage","tag","key","default","utils","toBytes","iv","toByteArray","ciphertext","plaintext","ModeOfOperation","cbc","decrypt","size","pad","utf8","fromBytes","__assign","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","getParams","bech32_1","cross_fetch_1","query_string_1","safe_buffer_1","helpers_1","helpers_2","enumerable","get","lnurl","spl","r","_a","err_1","_b","Error","Buffer","from","fromWords","decode","words","toString","parse","k1","callback","domain","status","bind","text","json","decodedMetadata","JSON","metadata","err","reason","message","ALPHABET","ALPHABET_MAP","z","x","undefined","polymodStep","pre","b","prefixChk","prefix","chk","c","charCodeAt","__decode","str","LIMIT","lowered","uppered","toUpperCase","lastIndexOf","wordChars","convert","data","inBits","outBits","bits","maxV","module","decodeUnsafe","encode","toWordsUnsafe","bytes","Array","isArray","toWords","fromWordsUnsafe","global","self","__self__","F","fetch","DOMException","support","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","normalizeName","name","String","test","normalizeValue","iteratorFor","items","shift","Headers","headers","map","forEach","append","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","type","arrayBuffer","readAsText","readBlobAsText","chars","fromCharCode","join","readArrayBufferAsText","formData","oldValue","has","keys","values","entries","methods","Request","input","options","credentials","method","mode","signal","upcased","normalizeMethod","referrer","form","trim","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","ctx","strictUriEncode","decodeComponent","splitOnFirst","filterObject","validateArrayFormatSeparator","strict","encodeURIComponent","keysSorter","sort","a","Number","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","isNaN","parseBooleans","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","concat","includes","isEncodedArray","newValue","item","parserForArrayFormat","ret","param","k","reduce","Boolean","stringify","object","shouldFilter","skipNull","skipEmptyString","index","encoderForArrayFormat","objectCopy","filter","parseUrl","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","pick","exclude","exclusionFilter","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","left","right","tokens","match","encodedURI","replaceMap","customDecodeURIComponent","string","separator","separatorIndex","predicate","isArr","val","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","alloc","allocUnsafe","allocUnsafeSlow","fill","encoding","SlowBuffer","root","checkInt","parseInt","checkInts","arrayish","coerceArray","copy","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","encodeURI","substr","convertHex","Hex","numberOfRounds","16","24","32","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","encrypt","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","_lastCipherblock","j","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","MAX_SAFE_INTEGER","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ecb","cfb","ofb","ctr","padding","pkcs7","padder","strip","_arrayTest"],"mappings":"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","file":"static/js/29.0755abec.chunk.js","sourcesContent":["\"use strict\";\n/** @format */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decipherAES = exports.getDomain = exports.randomHex = exports.findlnurl = void 0;\nvar aes_js_1 = __importDefault(require(\"aes-js\"));\nvar base64_js_1 = __importDefault(require(\"base64-js\"));\nfunction findlnurl(bodyOfText) {\n    var res = /,*?((lnurl)([0-9]{1,}[a-z0-9]+){1})/.exec(bodyOfText.toLowerCase());\n    if (res) {\n        return res[1];\n    }\n    return null;\n}\nexports.findlnurl = findlnurl;\nfunction randomHex(nbytes) {\n    var len = nbytes * 2;\n    var hex = '0123456789abcdef';\n    var output = '';\n    for (var i = 0; i < len; ++i) {\n        output += hex.charAt(Math.floor(Math.random() * hex.length));\n    }\n    return output;\n}\nexports.randomHex = randomHex;\nfunction getDomain(url) {\n    return url\n        .split('://')[1]\n        .split('/')[0]\n        .split('@')\n        .slice(-1)[0]\n        .split(':')[0];\n}\nexports.getDomain = getDomain;\nfunction decipherAES(sa, preimage) {\n    if (sa.tag !== 'aes') {\n        return '';\n    }\n    var key = aes_js_1.default.utils.hex.toBytes(preimage);\n    var iv = base64_js_1.default.toByteArray(sa.iv);\n    var ciphertext = base64_js_1.default.toByteArray(sa.ciphertext);\n    var CBC = new aes_js_1.default.ModeOfOperation.cbc(key, iv);\n    var plaintext = CBC.decrypt(ciphertext);\n    // remove padding\n    var size = plaintext.length;\n    var pad = plaintext[size - 1];\n    plaintext = plaintext.slice(0, size - pad);\n    return aes_js_1.default.utils.utf8.fromBytes(plaintext);\n}\nexports.decipherAES = decipherAES;\n","\"use strict\";\n/** @format */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParams = void 0;\nvar bech32_1 = __importDefault(require(\"bech32\"));\nvar cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nvar query_string_1 = __importDefault(require(\"query-string\"));\nvar safe_buffer_1 = require(\"safe-buffer\");\nvar helpers_1 = require(\"./helpers\");\nvar helpers_2 = require(\"./helpers\");\nObject.defineProperty(exports, \"findlnurl\", { enumerable: true, get: function () { return helpers_2.findlnurl; } });\nObject.defineProperty(exports, \"randomHex\", { enumerable: true, get: function () { return helpers_2.randomHex; } });\nObject.defineProperty(exports, \"getDomain\", { enumerable: true, get: function () { return helpers_2.getDomain; } });\nObject.defineProperty(exports, \"decipherAES\", { enumerable: true, get: function () { return helpers_2.decipherAES; } });\nfunction getParams(lnurl) {\n    return __awaiter(this, void 0, void 0, function () {\n        var url, spl, r, _a, res, err_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    lnurl = helpers_1.findlnurl(lnurl);\n                    if (!lnurl) {\n                        throw new Error('no usable lnurl string');\n                    }\n                    url = safe_buffer_1.Buffer.from(bech32_1.default.fromWords(bech32_1.default.decode(lnurl, 20000).words)).toString();\n                    spl = url.split('?');\n                    if (spl.length > 1 && query_string_1.default.parse(spl[1]).tag === 'login') {\n                        return [2 /*return*/, {\n                                tag: 'login',\n                                k1: query_string_1.default.parse(spl[1]).k1,\n                                callback: url,\n                                domain: helpers_1.getDomain(url)\n                            }];\n                    }\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 6, , 7]);\n                    return [4 /*yield*/, cross_fetch_1.default(url)];\n                case 2:\n                    r = _b.sent();\n                    if (!(r.status >= 300)) return [3 /*break*/, 4];\n                    _a = Error.bind;\n                    return [4 /*yield*/, r.text()];\n                case 3: throw new (_a.apply(Error, [void 0, _b.sent()]))();\n                case 4: return [4 /*yield*/, r.json()];\n                case 5:\n                    res = _b.sent();\n                    if (res.callback) {\n                        res.domain = helpers_1.getDomain(res.callback);\n                    }\n                    switch (res.tag) {\n                        case 'withdrawRequest':\n                            return [2 /*return*/, res];\n                            break;\n                        case 'payRequest':\n                            try {\n                                res.decodedMetadata = JSON.parse(res.metadata);\n                            }\n                            catch (err) {\n                                res.decodedMetadata = [];\n                            }\n                            return [2 /*return*/, res];\n                        case 'channelRequest':\n                            return [2 /*return*/, res];\n                        default:\n                            if (res.status === 'ERROR') {\n                                return [2 /*return*/, __assign(__assign({}, res), { domain: helpers_1.getDomain(url), url: url })];\n                            }\n                            throw new Error('unknown tag: ' + res.tag);\n                    }\n                    return [3 /*break*/, 7];\n                case 6:\n                    err_1 = _b.sent();\n                    return [2 /*return*/, {\n                            status: 'ERROR',\n                            reason: url + \" returned error: \" + err_1.message,\n                            url: url,\n                            domain: helpers_1.getDomain(url)\n                        }];\n                case 7: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.getParams = getParams;\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n(function(root) {\n    \"use strict\";\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        // We cannot safely handle numbers beyond the safe range for integers\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new Error('integer value out of safe range');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = parseInt(value / 256);\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define([], function() { return aesjs; });\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n"],"sourceRoot":""}