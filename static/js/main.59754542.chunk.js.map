{"version":3,"sources":["actions/OrdersActions.js","utils/Http.js","common/Loader/index.js","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.js","reducers/DrawerReducer.js","reducers/ContentReducer.js","reducers/FeesReducer.js","reducers/FeedReducer.js","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/index.ts","actions/FeedActions.js","actions/AuthActions.ts","utils/WebSocket.js","actions/ChatActions.js","utils/JSON.ts","utils/Encryption.ts","actions/WalletActions.js","actions/UserProfilesActions.ts","actions/ContentActions.js","common/Drawer/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js","actions/NodeActions.js","schema/index.ts","utils/FieldError.ts","utils/Error.ts","actions/EncryptionActions.js","actions/DrawerActions.js","actions/FeesActions.js","utils/Gun.js","utils/Date.ts","utils/index.ts","utils/String.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","serviceID","dispatch","a","id","Http","post","path","value","data","ok","newID","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","hostIP","query","rifleSocketExists","rifle","host","publicKey","reconnect","onData","services","servicesEntries","forEach","get","service","type","serviceInfo","subscription","off","buyService","owner","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","store","hostKeys","getState","encryption","hostId","node","remotePublicKey","warn","Encryption","message","stringify","encryptedMessage","decryptResponse","userKeys","localPrivateKey","privateKey","decryptedMessage","interceptors","request","use","authToken","deviceId","localRequest","url","indexOf","headers","common","Authorization","method","toUpperCase","includes","error","reject","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","window","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","INITIAL_STATE","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","SET_ATTEMPTS_DONE","AUTH_ACTIONS","LOGOUT","authenticated","authStep","defaultSteps","manual","shockWizard","shockCloud","auth","SET_AUTHENTICATED","SET_AUTH_STEP","SET_AUTH_METHOD","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","_getUnifiedTransactionDate","item","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","filter","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","sort","b","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","contacts","messages","sentRequests","receivedRequests","requestBlacklist","_identicalMessages","oldMessage","newMessage","localId","_sortMessages","timestamp","_processNewMessage","status","outgoing","userMessages","recipientPublicKey","existingMessage","body","sortedMessages","chat","LOAD_CHAT_DATA","LOAD_SENT_REQUESTS","requestPublicKeys","pk","pendingRequests","loading","LOAD_RECEIVED_REQUESTS","SENT_REQUEST","avatar","changedAddress","displayName","Date","now","ACCEPT_HANDSHAKE_REQUEST","requestId","DECLINE_HANDSHAKE_REQUEST","trim","SENDING_MESSAGE","Schema","SENDING","SENT_MESSAGE","SENT","FAILED_MESSAGE","FAILED","RECEIVED_MESSAGE","RECEIVED","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","publishedContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","SET_SEED_PROVIDER_PUB","ADD_PUBLISHED_CONTENT","res","contentTmp","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","userToken","availableTmp","push","REMOVE_USED_TOKEN","index","splice","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","user","private","posts","feed","RESET_FOLLOWS","ADD_FOLLOW","existingFollow","find","follow","REMOVE_FOLLOW","UPDATE_FOLLOW","key","profile","ADD_USER_POST","receivedPost","authorId","userPosts","existingPost","DELETE_USER_POST","LOAD_POSTS","LOAD_SHARED_POST","sharerId","updatedPosts","originalPost","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","NODE_ACTIONS","Common","RESET_USER_PROFILES","LOAD_USER_PROFILE","REMOVE_USER_PROFILE","profiles","UPDATE_USER_PROFILE","newProfile","oldProfile","CHAT_ACTIONS","produce","draft","c","req","myServices","boughtServices","orders","tmp","servicesTmp","selectedService","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","users","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectFollows","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","debug","process","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","RESET_FEED","POST_TIPPED","removeFollow","addFollow","loadSharedPost","originalPostId","originalPublicKey","sharerPublicKey","subscribeUserProfile","USER_POSTS_QUERY_SUFFIX","subscribeUserPosts","postEntries","newPosts","GUN_PROPS","deletedPosts","unsubUserPosts","unsubscribeRifleByQuery","USER_SHARED_POSTS_QUERY_SUFFIX","subscribeSharedUserPosts","processedPost","originalAuthor","shareDate","undefined","unsubUserSharedPosts","FOLLOWS_QUERY","subscribeFollows","unsubscribeFollows","sendTipPost","postId","deleteUserPost","RESET_AUTH_INFO","setAuthenticated","setAuthStep","step","setAuthMethod","logout","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","rifleSubscriptions","Map","GunSocket","LNDSocket","connectSocket","disconnectSocket","socketOptions","encryptionId","SocketIO","connect","GunOn","encryptedOn","event","subscriptionId","onError","socket","close","decryptEventCallback","err","callback","encryptedEmit","eventName","emit","encryptedData","on","responses","decryptedResponses","subscribeSocket","resolve","then","token","unsubscribeRifleById","unsubscribeEvent","delete","Array","from","$shock","set","getChats","chats","recipientAvatar","recipientDisplayName","reduce","initialMessagePrefix","getSentRequests","getReceivedRequests","recipientChangedRequestAddress","SET_CHAT_CONTACTS","SET_CHAT_MESSAGES","loadChatData","loadSentRequests","loadReceivedRequests","requestorPK","requestorAvatar","requestorDisplayName","subscribeChatMessages","userPublicKey","incomingId","rawMsg","msg","incomingMessages","acceptHandshakeRequest","put","accept","sendHandshakeRequest","sendMessage","tempId","DateTime","utc","toMillis","safeParseJSON","nonEncryptedEvents","convertBase64ToBuffer","Buffer","convertBufferToBase64","processKey","Uint8Array","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","FieldError","field","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","fetchWalletBalance","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","updateUserProfile","Utils","header","binarySub","unsubscribeUserProfile","setSeedProviderPub","pub","setSeedInfo","cleanUrl","endsWith","slice","infoS","addPublishedContent","toSet","unlockContent","postID","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","addAvailableToken","removeUnavailableToken","addStreamToken","Drawer","useDispatch","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","createPostPage","GoLivePage","OtherUserPage","Story","Stories","QRScannerPage","PrivateRoute","component","authorizedComponent","App","followedPublicKeys","f","useEffect","videojs","addLanguage","tokenExpired","JWTDecode","exp","FeedActions","subbedUsers","useRef","unsub","currentlySubbedUsers","current","batch","length","contactPKs","sentReqsPKs","r","receivedReqsPKs","publicKeysToSub","uniq","subbedFollowedKeysRef","currentlySubbedFollowedKeys","fallback","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","timeout","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","retryOperation","operation","delay","retries","reason","ms","setTimeout","bind","fetchNodeHealth","Error","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","connectHost","resetData","done","health","baseURL","throttledExchangeKeyPair","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","decodedToken","jwtDecode","authorization","parseError","createWallet","SetAttemptsDone","CHAT_MESSAGE_STATUS","isSharedPost","obj","stack","errorMessage","exchangingKeypair","addUserKeyPair","addHostKey","getDeviceId","APIPublicKey","result","openDrawer","loadFeeRates","useForceUpdate","setTick","tick","isOnline","lastSeen","logger","resizeImage","img","desiredLongEdge","compression","canvas","createElement","width","Math","round","getContext","drawImage","toDataURL","processImageFile","file","startsWith","TypeError","size","rej","reader","FileReader","onload","e","target","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","src","image","resizedImage","normalizeURL","_url","__url","_","protocol","getContact","contact","EMPTY_FN","capitalizeText","split","word","toLowerCase","join","processDisplayName","suffix"],"mappings":"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","file":"static/js/main.59754542.chunk.js","sourcesContent":["import Http from \"../utils/Http\";\nimport {\n  rifle,\n  rifleSocketExists,\n  unsubscribeRifleById\n} from \"../utils/WebSocket\";\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE: \"service/add/bought\"\n};\n\nexport const createService = (\n  clear,\n  encrypted,\n  serviceID\n) => async dispatch => {\n  let id = serviceID;\n  if (serviceID) {\n    const { data } = await Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}`,\n      value: clear\n    });\n    const { ok } = data;\n    if (!ok) {\n      return \"\";\n    }\n  } else {\n    const { data } = await Http.post(\"/api/gun/set\", {\n      path: \"$user>offeredServices\",\n      value: clear\n    });\n    const { ok, id: newID } = data;\n    if (!ok) {\n      return \"\";\n    }\n    id = newID;\n  }\n\n  const all = Object.entries(encrypted).map(([name, value]) => {\n    if (!value) {\n      return;\n    }\n    console.log(`setting: ${name} to ${value}`);\n    return Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}>${name}`,\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value\n      }\n    });\n  });\n  await Promise.all(all);\n  const { serviceType } = clear;\n  //update the offered service\n  if (serviceType === \"torrentSeed\" || serviceType === \"streamSeed\") {\n    console.log(\"updating profile with service\");\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>Profile>SeedServiceProvided`,\n      value: id\n    });\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id;\n};\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post(\"/api/gun/put\", {\n    path: `$user>offeredServices>${id}`,\n    value: null\n  });\n};\n\nexport const subscribeMyServices = hostIP => async dispatch => {\n  const query = `$user::offeredServices::on`;\n  const socketExists = rifleSocketExists(query);\n  const subscription = await rifle({\n    host: hostIP,\n    query,\n    publicKey: \"\",\n    reconnect: false,\n    onData: async services => {\n      const servicesEntries = Object.entries(services);\n      console.log(servicesEntries);\n\n      servicesEntries.forEach(async ([id]) => {\n        if (id === \"_\") {\n          return;\n        }\n        const { data: service } = await Http.get(\n          `/api/gun/user/load/offeredServices>${id}`\n        );\n        console.log(service.data);\n        if (service.data === null) {\n          dispatch({\n            type: ACTIONS.REMOVE_MY_SERVICE,\n            data: id\n          });\n          return;\n        }\n        dispatch({\n          type: ACTIONS.ADD_MY_SERVICE,\n          data: { id, serviceInfo: service.data }\n        });\n      });\n    }\n  });\n\n  return () => {\n    subscription.off();\n  };\n};\n\nexport const buyService = (\n  owner,\n  serviceID,\n  servicePrice\n) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"service\",\n    amt: Number(servicePrice),\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: serviceID\n  });\n  console.log(data);\n  const orderAck = JSON.parse(data.orderAck.response);\n  dispatch({\n    type: ACTIONS.ADD_BOUGHT_SERVICE,\n    data: { orderAck, owner, serviceID }\n  });\n  return orderAck;\n};\n","import Http from \"axios\";\nimport * as Encryption from \"./Encryption\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return response;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n    }\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\").matches\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: []\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n */\n/**\n * @template S\n * @typedef {import('redux').Reducer<S, AnyAction>} Reducer\n */\n\nimport * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').ReceivedRequest} ReceivedRequest\n * @typedef {import(\"../schema\").SentRequest} SentRequest\n *\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').LoadSentRequestsAction} LoadSentRequestsAction\n */\n\nconst INITIAL_STATE = {\n  contacts: /** @type {Contact[]} */ ([]),\n  /**\n   * @type {Record<string, Schema.ChatMessage[]>}\n   */\n  messages: {},\n  sentRequests: /** @type {SentRequest[]} */ ([]),\n  receivedRequests: /** @type {ReceivedRequest[]} */ ([]),\n  requestBlacklist: []\n};\n\n/**\n * @param {Schema.ChatMessage} oldMessage\n * @param {Schema.ChatMessage} newMessage\n * @returns {boolean}\n */\nconst _identicalMessages = (oldMessage, newMessage) =>\n  oldMessage.id && newMessage.id\n    ? oldMessage.id === newMessage.id\n    : oldMessage.localId === newMessage.localId;\n\n/**\n * @param {Schema.ChatMessage[]} messages\n * @returns {Schema.ChatMessage[]}\n */\nconst _sortMessages = (messages = []) =>\n  messages.sort((a, b) => b.timestamp - a.timestamp);\n\n/**\n * @typedef {object} ProcessNewMessageParams\n * @prop {Schema.ChatMessage} data\n * @prop {Schema.ChatMessageStatus} status\n * @prop {typeof INITIAL_STATE} state\n * @prop {boolean=} outgoing\n */\n\n/**\n * @param {ProcessNewMessageParams} args\n * @returns {typeof INITIAL_STATE}\n */\nconst _processNewMessage = ({ data, status, state, outgoing = false }) => {\n  const userMessages = state.messages[data.recipientPublicKey] ?? [];\n  const [existingMessage] = userMessages.filter(message =>\n    _identicalMessages(message, data)\n  );\n\n  if (existingMessage) {\n    console.warn(\"Duplicate Message:\", existingMessage?.body);\n  }\n\n  if (existingMessage) {\n    const messages = userMessages.map(message =>\n      _identicalMessages(message, existingMessage)\n        ? { ...existingMessage, ...data, status, outgoing }\n        : message\n    );\n    const sortedMessages = _sortMessages(messages);\n\n    return {\n      ...state,\n      messages: {\n        ...state.messages,\n        [data.recipientPublicKey]: sortedMessages\n      }\n    };\n  }\n\n  const messages = [{ ...data, status, outgoing }, ...userMessages];\n  const sortedMessages = _sortMessages(messages);\n\n  return {\n    ...state,\n    messages: {\n      ...state.messages,\n      [data.recipientPublicKey]: sortedMessages\n    }\n  };\n};\n\n/**\n * @type {Reducer<typeof INITIAL_STATE>}\n */\nconst chat = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_CHAT_DATA: {\n      const {\n        data: { contacts, messages }\n      } = /** @type {LoadChatDataAction} */ (action);\n      return {\n        ...state,\n        contacts,\n        // TODO: Could not replacing messages altogether be bad?\n        messages: {\n          ...state.messages,\n          ...messages\n        }\n      };\n    }\n    case ACTIONS.LOAD_SENT_REQUESTS: {\n      const {\n        data: sentRequests\n      } = /** @type {LoadSentRequestsAction} */ (action);\n      const requestPublicKeys = state.sentRequests.map(request => request.pk);\n      const pendingRequests = state.sentRequests.filter(\n        request => request.loading && !requestPublicKeys.includes(request.pk)\n      );\n\n      return {\n        ...state,\n        sentRequests: [...pendingRequests, ...sentRequests]\n      };\n    }\n    case ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      const {\n        data: receivedRequests\n      } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n      return {\n        ...state,\n        receivedRequests\n      };\n    }\n    case ACTIONS.SENT_REQUEST: {\n      const { data: publicKey } = /** @type {SentRequestAction} */ (action);\n      return {\n        ...state,\n        sentRequests: [\n          ...state.sentRequests,\n          {\n            avatar: null,\n            changedAddress: false,\n            displayName: null,\n            id: \"loading/\" + publicKey,\n            pk: publicKey,\n            timestamp: Date.now(),\n            loading: true\n          }\n        ]\n      };\n    }\n    case ACTIONS.ACCEPT_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      return {\n        ...state,\n        receivedRequests: state.receivedRequests.filter(\n          request => request.id !== requestId\n        )\n      };\n    }\n    case ACTIONS.DECLINE_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      if (!requestId || !requestId.trim()) {\n        return state;\n      }\n\n      return {\n        ...state,\n        requestBlacklist: [...state.requestBlacklist, requestId]\n      };\n    }\n    case ACTIONS.SENDING_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENDING,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.SENT_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.FAILED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.FAILED,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.RECEIVED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.RECEIVED,\n        state\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import { ACTIONS } from \"../actions/ContentActions\";\nconst INITIAL_STATE = {\n  seedProviderPub:'qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg',\n  streamUserToken:'',\n  streamLiveToken:'',\n  streamUrl:'',\n  publishedContent:{},\n  unlockedContent:{},\n  seedInfo:{},\n  availableTokens:{},\n  availableStreamTokens:{}\n};\n\nconst content = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n    case ACTIONS.ADD_PUBLISHED_CONTENT:{\n      const {data} = action\n      const {content,res} = data\n      const contentTmp = {...state.publishedContent}\n      if(res.ok){\n        contentTmp[res.id] = content \n      }\n      return { ...state, publishedContent:contentTmp} \n    }\n    case ACTIONS.ADD_UNLOCKED_CONTENT:{\n      const {data} = action\n      const unlockedTmp = {...state.unlockedContent}\n      unlockedTmp[data.contentPath] = data.content\n      return {...state,unlockedContent:unlockedTmp}\n    }\n    case ACTIONS.ADD_STREAM:{\n      const {data} = action\n      return {...state, streamLiveToken:data.liveToken,streamUserToken:data.seedToken,streamUrl:data.streamUrl}\n    }\n    case ACTIONS.REMOVE_STREAM:{\n      return {...state, streamLiveToken:'',streamUserToken:''}\n    }\n    case ACTIONS.SET_SEED_INFO:{\n      const {data} = action\n      return {...state, seedInfo:data}\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableTokens}\n      if(!availableTmp[seedUrl]){\n        availableTmp[seedUrl] = []\n      }\n      availableTmp[seedUrl].push(userToken)\n      return {...state,availableTokens:availableTmp}\n    }\n    case ACTIONS.REMOVE_USED_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableTokens}\n      if(!availableTmp[seedUrl]){\n        return state\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return {...state,availableTokens:availableTmp}\n      }\n      return state\n    }\n    case ACTIONS.ADD_STREAM_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableStreamTokens}\n      if(!availableTmp[seedUrl]){\n        availableTmp[seedUrl] = []\n      }\n      availableTmp[seedUrl].push(userToken)\n      return {...state,availableStreamTokens:availableTmp}\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableStreamTokens}\n      if(!availableTmp[seedUrl]){\n        return state\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return {...state,availableStreamTokens:availableTmp}\n      }\n      return state\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import { ACTIONS } from \"../actions/FeesActions\";\n\nconst INITIAL_STATE = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n  rate: \"halfHourFee\",\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Follow} Follow\n */\n\nimport { ACTIONS } from \"../actions/FeedActions\";\n/**\n * @typedef {import('../schema').Post} Post\n * @typedef {import('../schema').SharedPost} SharedPost\n */\n\nconst INITIAL_STATE = {\n  follows: /** @type {Follow[]} */ ([\n    {\n      user:\n        \"qsgziGQS99sPUxV1CRwwRckn9cG6cJ3prbDsrbL7qko.oRbCaVKwJFQURWrS1pFhkfAzrkEvkQgBRIUz9uoWtrg\",\n      status: \"ok\",\n      private: false\n    }\n  ]),\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: /** @type {Record<string, Array<Post|SharedPost>>} */ ({})\n};\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst feed = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FOLLOWS: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.ADD_USER_POST: {\n      const { data } = action;\n      /** @type {SharedPost} */\n      const receivedPost = data;\n      const authorId = receivedPost.authorId;\n      const userPosts = state.posts[authorId] ?? [];\n      const existingPost = userPosts.find(post => receivedPost.id === post.id);\n\n      if (existingPost) {\n        return state;\n      }\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: [...userPosts, receivedPost]\n        }\n      };\n    }\n    case ACTIONS.DELETE_USER_POST: {\n      const { id, authorId } = action.data;\n      const userPosts = (state.posts[authorId] ?? []).filter(\n        post => post.id !== id\n      );\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: userPosts\n        }\n      };\n    }\n    case ACTIONS.LOAD_POSTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        posts: data\n      };\n    }\n    case ACTIONS.LOAD_SHARED_POST: {\n      const { data } = action;\n      const { id, sharerId } = data;\n      const userPosts = state.posts[sharerId] ?? [];\n      const updatedPosts = userPosts.map(post => {\n        if (post.id === id && post.type === \"shared\") {\n          return {\n            ...post,\n            originalPost: data\n          };\n        }\n\n        return post;\n      });\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [sharerId]: updatedPosts\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as CHAT_ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import(\"../actions/ChatActions\").LoadSentRequestsAction} LoadSentRequestsAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n */\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_USER_PROFILE: {\n      const { publicKey, profile } = action.data;\n\n      if (!publicKey || !profile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey],\n          ...profile\n        }\n      };\n    }\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { publicKey, profile: newProfile } = action.data;\n      const oldProfile = state[publicKey];\n\n      if (!oldProfile || !newProfile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...oldProfile,\n          ...newProfile\n        }\n      };\n    }\n    case CHAT_ACTIONS.LOAD_CHAT_DATA: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadChatDataAction} */ (action);\n\n        data.contacts.forEach(c => {\n          draft[c.pk] = {\n            ...Common.createEmptyUser(c.pk),\n            ...draft[c.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_SENT_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadSentRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.SENT_REQUEST: {\n      return produce(state, draft => {\n        const { data: pk } = /** @type {SentRequestAction} */ (action);\n\n        if (!draft[pk]) {\n          draft[pk] = Common.createEmptyUser(pk);\n        }\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n    myServices:{},\n    services:{},\n    boughtServices:{}\n};\n\n\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const {id,serviceInfo} = action.data\n      const tmp = {...state.myServices}\n      tmp[id] = serviceInfo\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE:{\n      const id = action.data\n      const tmp = {...state.myServices}\n      delete tmp[id]\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE:{\n      const {orderAck,owner,serviceID} = action.data\n      const servicesTmp = {...state.boughtServices}\n      \n      if(!servicesTmp[owner]){\n        servicesTmp[owner] = {}\n      }\n      const selectedService = servicesTmp[owner]\n      if(!selectedService[serviceID]){\n        selectedService[serviceID] = []\n      }\n      selectedService[serviceID].push(orderAck)\n      return {...state, boughtServices:servicesTmp}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","import { combineReducers } from \"redux\";\nimport * as Common from \"shock-common\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\"\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders:OrdersReducer,\n  users: () => {\n    return {} as Record<string, Common.User>;\n  }\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = (publicKey: string) => (\n  state: State\n): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey);\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n","import { State } from \"../../reducers\";\n\nexport const selectFollows = (state: State) => state.feed.follows;\n","import { createStore, applyMiddleware, compose, AnyAction } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport { useSelector as origUseSelector } from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport * from \"./selectors\";\n","// @ts-check\nimport { GUN_PROPS } from \"../utils/Gun\";\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const loadSharedPost = (\n  originalPostId,\n  originalPublicKey,\n  sharerPublicKey\n) => async dispatch => {\n  const { data: post } = await Http.get(\n    `/api/gun/otheruser/${originalPublicKey}/load/posts>${originalPostId}`\n  );\n  dispatch(subscribeUserProfile(originalPublicKey));\n\n  dispatch({\n    type: ACTIONS.LOAD_SHARED_POST,\n    data: {\n      ...post.data,\n      authorId: originalPublicKey,\n      sharerId: sharerPublicKey,\n      id: originalPostId\n    }\n  });\n};\n\nconst USER_POSTS_QUERY_SUFFIX = `::posts::on`;\n\nexport const subscribeUserPosts = publicKey => async dispatch => {\n  const subscription = await rifle({\n    query: publicKey + USER_POSTS_QUERY_SUFFIX,\n    onData: posts => {\n      console.debug(`posts from: ${publicKey}: `, posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n      const deletedPosts = postEntries\n        .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      newPosts.map(async id => {\n        const { data: post } = await Http.get(\n          `/api/gun/otheruser/${publicKey}/load/posts>${id}`\n        );\n\n        dispatch({\n          type: ACTIONS.ADD_USER_POST,\n          data: {\n            ...post.data,\n            id,\n            authorId: publicKey,\n            type: \"post\"\n          }\n        });\n\n        deletedPosts.map(id =>\n          dispatch({\n            type: ACTIONS.DELETE_USER_POST,\n            data: {\n              id,\n              authorId: publicKey,\n              type: \"post\"\n            }\n          })\n        );\n      });\n    }\n  });\n  return subscription;\n};\n\nexport const unsubUserPosts = publicKey => async () => {\n  unsubscribeRifleByQuery(publicKey + USER_POSTS_QUERY_SUFFIX);\n};\n\nconst USER_SHARED_POSTS_QUERY_SUFFIX = `::sharedPosts::on`;\n\nexport const subscribeSharedUserPosts = publicKey => async dispatch => {\n  const subscription = await rifle({\n    query: publicKey + USER_SHARED_POSTS_QUERY_SUFFIX,\n    onData: posts => {\n      console.debug(`shared posts from ${publicKey}: `, posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n      const deletedPosts = postEntries\n        .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      newPosts.map(async id => {\n        const res = await Http.get(\n          `/api/gun/otheruser/${publicKey}/load/sharedPosts>${id}`\n        );\n\n        /** @type {import('shock-common').SharedPostRaw} */\n        const post = res.data.data;\n\n        /** @type {import('../schema').SharedPost} */\n        const processedPost = {\n          authorId: publicKey,\n          id,\n          originalAuthor: post.originalAuthor,\n          shareDate: post.shareDate,\n          sharerId: publicKey,\n          originalPost: undefined,\n          type: \"shared\"\n        };\n        dispatch({\n          type: ACTIONS.ADD_USER_POST,\n          data: processedPost\n        });\n\n        console.debug(\"dispatching shared post load\");\n        dispatch(loadSharedPost(id, post.originalAuthor, publicKey));\n      });\n\n      deletedPosts.map(id =>\n        dispatch({\n          type: ACTIONS.DELETE_USER_POST,\n          data: {\n            id,\n            authorId: publicKey\n          }\n        })\n      );\n    }\n  });\n  return subscription;\n};\n\nexport const unsubUserSharedPosts = publicKey => () => {\n  unsubscribeRifleByQuery(publicKey + USER_SHARED_POSTS_QUERY_SUFFIX);\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async dispatch => {\n  const subscription = await rifle({\n    query: FOLLOWS_QUERY,\n    reconnect: true,\n    onData: async (follow, key) => {\n      if (typeof key !== \"string\") {\n        console.warn(`Invalid follow key received: ${key}`);\n        return;\n      }\n\n      if (!follow) {\n        dispatch(removeFollow(key));\n        return;\n      }\n\n      if (typeof follow.user !== \"string\") {\n        console.warn(`Invalid follow user received (${follow.user})`);\n        return;\n      }\n\n      dispatch(addFollow(follow));\n    }\n  });\n\n  console.debug(\"subbing follows\");\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  unsubscribeRifleByQuery(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n","export const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\"\n};\n\nexport const setAuthenticated = status => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTHENTICATED,\n    data: status\n  });\n};\n\nexport const setAuthStep = step => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_STEP,\n    data: step\n  });\n};\n\nexport const setAuthMethod = method => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_METHOD,\n    data: method\n  });\n};\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"../utils/String\";\n/**\n * @typedef {import('../schema').Contact} Contact\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true\n};\n\nconst rifleSubscriptions = new Map();\n\nexport let GunSocket = null;\n\nexport let LNDSocket = null;\n\nexport const connectSocket = async (host = \"\", reconnect = false) => {\n  if (GunSocket && LNDSocket && !reconnect) {\n    return { GunSocket, LNDSocket };\n  }\n\n  if (GunSocket && LNDSocket && reconnect) {\n    disconnectSocket(GunSocket);\n    disconnectSocket(LNDSocket);\n  }\n\n  const { store } = await import(\"../store\");\n  const socketOptions = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId\n    }\n  };\n  GunSocket = SocketIO.connect(`${host}/gun`, socketOptions);\n  LNDSocket = SocketIO.connect(`${host}/lndstreaming`, socketOptions);\n\n  const GunOn = encryptedOn(GunSocket)\n\n  // Subscribe to Rifle query events as soon as the socket is connected\n  GunOn(\"query:data\", (event) => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId)\n    \n    if (subscription) {\n      subscription.onData?.(event.response.data, event.response.key)\n    }\n  })\n\n  GunOn(\"query:error\", (event) => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId)\n    \n    if (subscription) {\n      subscription.onError?.(event.response.data, event.response.key)\n    }\n  })\n  return { GunSocket, LNDSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: data\n    });\n\n    callback(err, decryptedMessage);\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.emit(eventName, message, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message: JSON.stringify(message)\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        if (!response) {\n          return response;\n        }\n\n        if (response && !Encryption.isEncryptedMessage(response)) {\n          console.warn(\"Non-encrypted socket message\", response);\n          return response;\n        }\n\n        return Encryption.decryptMessage({\n          privateKey: localPrivateKey,\n          encryptedMessage: response\n        });\n      })\n    );\n\n    callback(...decryptedResponses);\n  });\n};\n\nconst subscribeSocket = ({ eventName, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const on = encryptedOn(GunSocket);\n        const emit = encryptedEmit(GunSocket);\n\n        emit(\n          `subscribe:${eventName}`,\n          {\n            token: store.getState().node.authToken\n          },\n          (err) => {\n            if (err) {\n              console.error(err);\n              reject(err);\n              return;\n            }\n          }\n        );\n\n        on(eventName, data => {\n          if (callback) {\n            callback(null, data);\n            return;\n          }\n          resolve(data);\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const unsubscribeRifleById = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n\n  if (cachedSocket) {\n    unsubscribeEvent(subscriptionId)\n    rifleSubscriptions.delete(subscriptionId);\n  }\n};\n\nexport const unsubscribeRifleByQuery = query => {\n  const subscriptionEntries = Array.from(rifleSubscriptions.entries());\n\n  subscriptionEntries.map(([id, subscription]) => {\n    if (subscription.query === query) {\n      unsubscribeRifleById(id)\n      return true\n    }\n\n    return false\n  })\n};\n\nexport const unsubscribeEvent = (subscriptionId) => new Promise((resolve) => {\n  const emit = encryptedEmit(GunSocket);\n  emit(\"unsubscribe\", {\n    subscriptionId\n  }, () => {\n    console.debug(`[SOCKET] Unsubscribed from event successfully! (${subscriptionId})`)\n    resolve(true)\n  })\n})\n\nexport const rifleSocketExists = query => {\n  const cachedSocket = rifleSubscriptions.get(query);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} query\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {boolean=} reconnect\n * @prop {(data, key) => void} onData\n * @prop {((error) => void)=} onError\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.onData(callback)` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map().once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<SocketIOClient.Socket>}\n */\nexport const rifle = ({ query, publicKey, reconnect, onData, onError }) =>\n  new Promise((resolve, reject) => {\n    import(\"../store\").then(({ store }) => {\n      if (reconnect) {\n        unsubscribeRifleByQuery(query)\n      }      \n\n      const emit = encryptedEmit(GunSocket);\n\n      emit(\n        \"subscribe:query\",\n        {\n          $shock: query,\n          token: store.getState().node.authToken,\n          publicKey\n        },\n        (err, data) => {\n          if (err) {\n            console.error(`Gun rifle error (${query})`);\n            console.error(err);\n            reject(err);\n            return;\n          }\n          \n          rifleSubscriptions.set(data.subscriptionId, { \n            onData, \n            onError,\n            query\n          })\n\n          resolve({\n            off: () => unsubscribeRifleById(data.subscriptionId)\n          });\n        }\n      );\n    });\n  });\n\n/**\n * @returns {{ messages: any , contacts: Contact[]}}\n */\nexport const getChats = async ({ authToken }) => {\n  try {\n    const chats = await subscribeSocket({ authToken, eventName: \"chats\" });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\nexport const getSentRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const sentRequests = await subscribeSocket({\n      hostIP,\n      authToken,\n      eventName: \"sentRequests\",\n      callback\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getReceivedRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const receivedRequests = await subscribeSocket({\n      hostIP,\n      authToken,\n      eventName: \"receivedRequests\",\n      callback\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","// @ts-check\nimport Http from \"../utils/Http\";\nimport { DateTime } from \"luxon\";\nimport { v4 as uuidv4 } from \"uuid\";\n/**\n * @typedef {import('shock-common').Message} RawMessage\n */\n\nimport {\n  getChats,\n  getReceivedRequests,\n  getSentRequests,\n  rifle\n} from \"../utils/WebSocket\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport * as Schema from \"../schema\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').SentRequest} SentRequest\n * @typedef {import(\"../schema\").ReceivedRequest} ReceivedRequest\n * @typedef {import('../schema').ChatMessage} ChatMessage\n */\n\nexport const ACTIONS = {\n  LOAD_CHAT_DATA: /** @type {\"chat/loadData\"} */ (\"chat/loadData\"),\n  LOAD_SENT_REQUESTS: /** @type {\"chat/loadSentRequests\"} */ (\"chat/loadSentRequests\"),\n  LOAD_RECEIVED_REQUESTS: /** @type {\"chat/loadReceivedRequests\"} */ (\"chat/loadReceivedRequests\"),\n  SET_CHAT_CONTACTS: \"chat/contacts\",\n  SET_CHAT_MESSAGES: \"chat/messages\",\n  SENT_REQUEST: /** @type {\"chat/request/sent\"} */ (\"chat/request/sent\"),\n  ACCEPT_HANDSHAKE_REQUEST: \"chat/request/accept\",\n  DECLINE_HANDSHAKE_REQUEST: \"chat/request/decline\",\n  SENDING_MESSAGE: \"chat/message/sending\",\n  SENT_MESSAGE: \"chat/message/sent\",\n  FAILED_MESSAGE: \"chat/message/failed\",\n  RECEIVED_MESSAGE: /** @type {\"chat/message/received\"} */ (\"chat/message/received\")\n};\n\n/**\n * @typedef {object} SentRequestAction\n * @prop {typeof ACTIONS.SENT_REQUEST} type\n * @prop {string} data The public key.\n */\n\n/**\n * @typedef {object} LoadChatDataAction\n * @prop {typeof ACTIONS.LOAD_CHAT_DATA} type\n * @prop {{ messages: Record<string, ChatMessage[]> , contacts: Contact[] }} data\n */\n\n/**\n * @typedef {object} LoadSentRequestsAction\n * @prop {typeof ACTIONS.LOAD_SENT_REQUESTS} type\n * @prop {SentRequest[]} data\n */\n\n/**\n * @typedef {object} LoadReceivedRequestsAction\n * @prop {typeof ACTIONS.LOAD_RECEIVED_REQUESTS} type\n * @prop {ReceivedRequest[]} data\n */\n\n/**\n * @typedef {object} ReceivedMessageAction\n * @prop {typeof ACTIONS.RECEIVED_MESSAGE} type\n * @prop {ChatMessage} data\n */\n\nexport const loadChatData = () => async (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  const data = await getChats({ hostIP, authToken });\n  console.log(\"LOAD_CHAT_DATA:\", data);\n\n  dispatch({\n    type: ACTIONS.LOAD_CHAT_DATA,\n    data\n  });\n};\n\nexport const loadSentRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getSentRequests({ hostIP, authToken }, (err, sentRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"sentRequests:\", sentRequests);\n\n    /** @type {LoadSentRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_SENT_REQUESTS,\n      data: sentRequests.map(request => {\n        /** @type {SentRequest} */\n        const req = {\n          id: request.id,\n          pk: request.recipientPublicKey,\n          avatar: request.recipientAvatar,\n          displayName: request.recipientDisplayName,\n          changedAddress: request.recipientChangedRequestAddress,\n          timestamp: request.timestamp,\n          loading: false\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const loadReceivedRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getReceivedRequests({ hostIP, authToken }, (err, receivedRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"receivedRequests:\", receivedRequests);\n\n    /** @type {LoadReceivedRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n      data: receivedRequests.map(request => {\n        /** @type {ReceivedRequest} */\n        const req = {\n          id: request.id,\n          pk: request.requestorPK,\n          avatar: request.requestorAvatar,\n          displayName: request.requestorDisplayName,\n          timestamp: request.timestamp\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const subscribeChatMessages = (\n  userPublicKey,\n  recipientPublicKey\n) => async (dispatch, getState) => {\n  const { hostIP } = getState().node;\n  const { data: incomingId } = await Http.get(\n    `/api/gun/user/once/userToIncoming>${recipientPublicKey}`,\n    {\n      headers: {\n        \"public-key-for-decryption\": userPublicKey\n      }\n    }\n  );\n\n  if (!incomingId.data) {\n    console.warn(\"Unable to retrieve incoming ID for selected contact\");\n    return null;\n  }\n\n  const incomingMessages = await rifle({\n    query: `${recipientPublicKey}::outgoings>${incomingId.data}>messages::map.on`,\n    publicKey: recipientPublicKey,\n    onData: (message, id) => {\n      if (!message.body || message.body === initialMessagePrefix) {\n        return;\n      }\n      /** @type {RawMessage} */\n      const rawMsg = message;\n  \n      /** @type {ChatMessage} */\n      const msg = {\n        body: rawMsg.body,\n        id,\n        localId: id,\n        outgoing: false,\n        recipientPublicKey,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        timestamp: rawMsg.timestamp\n      };\n  \n      /** @type {ReceivedMessageAction} */\n      const action = {\n        type: ACTIONS.RECEIVED_MESSAGE,\n        data: msg\n      };\n  \n      dispatch(action);\n    }\n  });\n\n  return incomingMessages;\n};\n\nexport const acceptHandshakeRequest = requestId => async dispatch => {\n  const { data } = await Http.put(`/api/gun/requests/${requestId}`, {\n    accept: true\n  });\n\n  dispatch({\n    type: ACTIONS.ACCEPT_HANDSHAKE_REQUEST,\n    data: requestId\n  });\n\n  return data;\n};\n\nexport const sendHandshakeRequest = publicKey => async (dispatch, getState) => {\n  const { data } = await Http.post(`/api/gun/requests`, {\n    publicKey\n  });\n\n  /** @type {SentRequest[]} */\n  const sentRequests = getState().chat.sentRequests;\n  const [userExists] = sentRequests.filter(request => request.pk === publicKey);\n\n  if (!userExists) {\n    /** @type {SentRequestAction} */\n    const action = {\n      type: ACTIONS.SENT_REQUEST,\n      data: publicKey\n    };\n    dispatch(action);\n  }\n\n  return data;\n};\n\nexport const sendMessage = ({\n  publicKey,\n  message,\n  localId = null\n}) => async dispatch => {\n  const tempId = localId ?? uuidv4();\n  try {\n    dispatch({\n      type: ACTIONS.SENDING_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n    const { data } = await Http.post(`/api/gun/chats/${publicKey}`, {\n      body: message\n    });\n    console.log(data);\n    dispatch({\n      type: ACTIONS.SENT_MESSAGE,\n      data: { ...data, localId: tempId, recipientPublicKey: publicKey }\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIONS.FAILED_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n  }\n};\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Uint8Array;\n  ephemPublicKey: Uint8Array;\n  iv: Uint8Array;\n  mac: Uint8Array;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface DeriveKey {\n  localPrivateKey: Uint8Array | string;\n  remotePublicKey: Uint8Array | string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Uint8Array | string;\n  sharedKey: Uint8Array | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Uint8Array | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Uint8Array) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Uint8Array | string): Uint8Array => {\n  if (key instanceof Uint8Array) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName);\n\nexport const generateKeyPair = () => {\n  const privateKey: Uint8Array = ECCrypto.generatePrivate();\n  const publicKey: Uint8Array = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const deriveKey = async ({\n  localPrivateKey,\n  remotePublicKey\n}: DeriveKey) => {\n  const sharedKey: Uint8Array = await ECCrypto.derive(\n    processKey(localPrivateKey),\n    processKey(remotePublicKey)\n  );\n  const sharedKeyBase64 = convertBufferToBase64(sharedKey);\n\n  return { sharedKey, sharedKeyBase64 };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  const processedPrivateKey = processKey(privateKey);\n  const decryptedMessageBuffer: Uint8Array = await ECCrypto.decrypt(\n    processedPrivateKey,\n    convertToEncryptedMessage(encryptedMessage)\n  );\n  const decryptedMessage = Buffer.from(decryptedMessageBuffer).toString();\n  const parsedMessage = safeParseJSON(decryptedMessage);\n\n  return parsedMessage;\n};\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\"\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  const { data } = await Http.get(`/api/lnd/balance`);\n\n  dispatch({\n    type: ACTIONS.LOAD_BALANCE,\n    data: {\n      channelBalance: data.channel_balance,\n      confirmedBalance: data.confirmed_balance,\n      pendingChannelBalance: data.pending_channel_balance\n    }\n  });\n\n  return data;\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  const { data } = await Http.get(\n    \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n  );\n  const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n  dispatch({\n    type: ACTIONS.LOAD_USD_RATE,\n    data: exchangeRate\n  });\n\n  return exchangeRate;\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { transactions } = getState().wallet;\n\n  if ((transactions.page >= page && !reset) || transactions.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/transactions\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchChannels = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n  dispatch({\n    type: ACTIONS.LOAD_CHANNELS,\n    data: data.channels\n  });\n\n  return data;\n};\n\nexport const fetchPeers = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n  dispatch({\n    type: ACTIONS.LOAD_PEERS,\n    data: data.peers\n  });\n\n  return data;\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { invoices } = getState().wallet;\n\n  if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/invoices\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchPayments = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { payments } = getState().wallet;\n\n  if ((payments.page >= page && !reset) || payments.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/payments\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_PAYMENTS : ACTIONS.LOAD_MORE_PAYMENTS,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n\n    return newPeer;\n  } catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    const data = await fetchChannels()(dispatch);\n\n    return data.channels;\n  } catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n};\n","import * as Common from \"shock-common\";\n\nimport * as Utils from \"../utils\";\nimport { unsubscribeRifleById, rifle } from \"../utils/WebSocket\";\n\nimport { setAuthenticated } from \"./AuthActions\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  LOAD_USER_PROFILE: \"userProfiles/profiles/load\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\",\n  UPDATE_USER_PROFILE: \"userProfiles/profiles/update\"\n};\n\nexport const updateUserProfile = (\n  publicKey: string,\n  profile: Partial<Common.User>\n) => ({\n  type: ACTIONS.UPDATE_USER_PROFILE,\n  data: {\n    publicKey,\n    profile\n  }\n});\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => async (\n  dispatch: (action: object) => void,\n  getState: () => {\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  const [subscription, binarySub] = await Promise.all([\n    rifle({\n      query: `${publicKey}::Profile::on`,\n      reconnect: true,\n      onData: profile => {\n        const { [publicKey]: existingUser } = getState().userProfiles;\n    \n        if (existingUser) {\n          dispatch({\n            type: ACTIONS.UPDATE_USER_PROFILE,\n            data: { publicKey, profile }\n          });\n          return profile;\n        }\n    \n        dispatch({\n          type: ACTIONS.LOAD_USER_PROFILE,\n          data: { publicKey, profile }\n        });\n      }\n    }),\n    rifle({\n      query: `${publicKey}::profileBinary::map.on`,\n      reconnect: true,\n      onData: (data, key: string) => {\n        if (key === \"avatar\") {\n          if (typeof data !== \"string\" && data !== null) {\n            Utils.logger.error(\n              `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n            );\n            return;\n          }\n          dispatch(\n            updateUserProfile(publicKey, {\n              avatar: data\n            })\n          );\n        } else if (key === \"header\") {\n          if (typeof data !== \"string\" && data !== null) {\n            Utils.logger.error(\n              `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n            );\n            return;\n          }\n          dispatch(\n            updateUserProfile(publicKey, {\n              header: data\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Unknown key: ${key} for user binary profile data gun RPC socket`\n          );\n        }\n      }\n    })\n  ]);\n\n  return () => {\n    binarySub.off();\n    subscription.off();\n  };\n};\n\nexport const unsubscribeUserProfile = (publicKey: string) => async () => {\n  unsubscribeRifleById(`${publicKey}::Profile::on`);\n  unsubscribeRifleById(`${publicKey}::profileBinary::map.on`);\n};\n","import Http from '../utils/Http'\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB:'content/setSeedProviderPub',\n  SET_SEED_INFO:'content/setSeedInfo',\n  ADD_PUBLISHED_CONTENT:'content/addPublishedContent',\n  ADD_UNLOCKED_CONTENT:'content/addUnlocked',\n  ADD_STREAM:'content/addStream',\n  REMOVE_STREAM:'content/removeStream',\n  ADD_AVAILABLE_TOKEN:'content/addToken',\n  REMOVE_USED_TOKEN:'content/removeToken',\n  ADD_STREAM_TOKEN:'content/addStreamToken',\n  REMOVE_STREAM_TOKEN:'content/removeStreamToken',\n};\n\nexport const setSeedProviderPub = pub => async dispatch => {\n  let value = {\n    $$__ENCRYPT__FOR:'me',\n    value:pub\n  }\n  if(!pub){\n    value = \"\"\n  }\n  await Http.post('/api/gun/put',{\n    path:'$user>seedServiceProviderPubKey',\n    value\n  })\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (seedUrl,seedToken) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0,-1) : seedUrl\n  const infoS = JSON.stringify({seedUrl:cleanUrl,seedToken})\n  await Http.post('/api/gun/put',{\n    path:'$user>seedServiceSeedData',\n    value:{\n      $$__ENCRYPT__FOR:'me',\n      value:infoS\n    }\n  })\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: {seedUrl:cleanUrl,seedToken}\n  });\n};\nexport const addPublishedContent = content => async dispatch => {\n  let toSet = content\n  if(typeof content !== 'string'){\n    toSet = JSON.stringify(content)\n  }\n  const {data} = await Http.post('/api/gun/set',{\n    path:'$user>publishedContent',\n    value:{\n      $$__ENCRYPT__FOR:'me',\n      value:toSet\n    }\n  })\n  dispatch({\n    type: ACTIONS.ADD_PUBLISHED_CONTENT,\n    data: {content,res:data}\n  });\n  return data\n};\n\nexport const unlockContent = (amt,owner,postID) => async dispatch => {\n  const {data} = await Http.post('/api/lnd/unifiedTrx',{\n    type: 'contentReveal',\n    amt,\n    to: owner,\n    memo:'',\n    feeLimit:500,\n    ackInfo:postID\n  })\n  const revealRes = JSON.parse(data.orderAck.response)\n  if(revealRes && revealRes.unlockedContents){\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type:ACTIONS.ADD_UNLOCKED_CONTENT,\n          data:{contentPath:`${owner}>posts>${postID}`,content}\n        })\n      }\n    }\n  }\n}\nexport const addStream = (seedToken, liveToken,streamUrl) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {seedToken,liveToken,streamUrl}\n  });\n};\nexport const removeStream = () => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM,\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const removeUnavailableToken = (seedUrl,userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const removeStreamToken = (seedUrl,userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </div>\n        </div>\n        <div className=\"drawer-bottom-section\" >\n          <NavLink className=\"drawer-item\"  to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n        <NavLink  to=\"/QRScanner\" onClick={close}>\n          <i\n            onClick={onClickScan}\n            className=\"icon-solid-scan\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, { Suspense, useEffect, useRef } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { batch, useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\nimport uniq from \"lodash/uniq\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\nimport { loadReceivedRequests, loadSentRequests } from \"./actions/ChatActions\";\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport \"./styles/App.css\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as FeedActions from \"./actions/FeedActions\";\nimport * as Store from \"./store\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/publishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst createPostPage = React.lazy(() => import(\"./pages/Profile/createPost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/GoLive/GoLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst Story = React.lazy(() => import(\"./pages/Story\"));\nconst Stories = React.lazy(() => import(\"./pages/Stories\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const contacts = Store.useSelector(({ chat }) => chat.contacts);\n  const sentRequests = Store.useSelector(({ chat }) => chat.sentRequests);\n  const receivedRequests = Store.useSelector(\n    ({ chat }) => chat.receivedRequests\n  );\n  const followedPublicKeys = Store.useSelector(Store.selectFollows).map(\n    f => f.user\n  );\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated) {\n      dispatch(loadSentRequests());\n      dispatch(loadReceivedRequests());\n      dispatch(subscribeUserProfile(publicKey));\n      dispatch(FeedActions.subscribeUserPosts(publicKey));\n      dispatch(FeedActions.subscribeSharedUserPosts(publicKey));\n    } else {\n      dispatch(unsubscribeUserProfile(publicKey));\n      dispatch(FeedActions.unsubUserPosts(publicKey));\n      dispatch(FeedActions.unsubUserSharedPosts(publicKey));\n    }\n\n    return () => {\n      dispatch(unsubscribeUserProfile(publicKey));\n      dispatch(FeedActions.unsubUserPosts(publicKey));\n      dispatch(FeedActions.unsubUserSharedPosts(publicKey));\n    };\n  }, [authenticated, dispatch, publicKey]);\n\n  // Keep this effect separate from the one above, as having both together\n  // causes an infinite loop due to implicit/explicit dependencies.\n  const subbedUsers = useRef(/** @type {string[]} */ ([]));\n  useEffect(() => {\n    const unsub = () => {\n      const { current: currentlySubbedUsers } = subbedUsers;\n\n      batch(() => {\n        currentlySubbedUsers.forEach(pk => {\n          dispatch(unsubscribeUserProfile(pk));\n        });\n      });\n\n      currentlySubbedUsers.splice(0, currentlySubbedUsers.length);\n    };\n\n    if (authenticated) {\n      const contactPKs = contacts.map(c => c.pk);\n      const sentReqsPKs = sentRequests.map(r => r.pk);\n      const receivedReqsPKs = receivedRequests.map(r => r.pk);\n\n      const publicKeysToSub = uniq(\n        /** @type {string[]} */ ([\n          ...contactPKs,\n          ...sentReqsPKs,\n          ...receivedReqsPKs\n        ])\n      ).filter(pk => !subbedUsers.current.includes(pk));\n\n      publicKeysToSub.forEach(pk => {\n        subbedUsers.current.push(pk);\n      });\n\n      batch(() => {\n        publicKeysToSub.forEach(pk => {\n          dispatch(subscribeUserProfile(pk));\n        });\n      });\n    } else {\n      unsub();\n    }\n\n    return unsub;\n  }, [\n    authenticated,\n    dispatch,\n    publicKey,\n    contacts,\n    sentRequests,\n    receivedRequests\n  ]);\n\n  useEffect(() => {\n    if (authenticated) {\n      dispatch(FeedActions.subscribeFollows());\n    } else {\n      dispatch(FeedActions.unsubscribeFollows());\n    }\n\n    return () => {\n      dispatch(FeedActions.unsubscribeFollows());\n    };\n  }, [authenticated, dispatch]);\n\n  const subbedFollowedKeysRef = useRef(/** @type {string[]} */ ([]));\n\n  useEffect(() => {\n    const unsub = () => {\n      const { current: currentlySubbedFollowedKeys } = subbedFollowedKeysRef;\n\n      batch(() => {\n        currentlySubbedFollowedKeys.forEach(pk => {\n          dispatch(unsubscribeUserProfile(pk));\n          dispatch(FeedActions.unsubUserPosts(pk));\n          dispatch(FeedActions.unsubUserSharedPosts(pk));\n        });\n      });\n      currentlySubbedFollowedKeys.splice(0, currentlySubbedFollowedKeys.length);\n    };\n\n    if (authenticated) {\n      const { current: currentlySubbedFollowedKeys } = subbedFollowedKeysRef;\n      const publicKeysToSub = followedPublicKeys.filter(\n        pk => !currentlySubbedFollowedKeys.includes(pk)\n      );\n\n      batch(() => {\n        publicKeysToSub.forEach(pk => {\n          dispatch(subscribeUserProfile(pk));\n          dispatch(FeedActions.subscribeUserPosts(pk));\n          dispatch(FeedActions.subscribeSharedUserPosts(pk));\n        });\n      });\n\n      subbedFollowedKeysRef.current.push(...followedPublicKeys);\n    } else {\n      unsub();\n    }\n\n    return unsub;\n  }, [followedPublicKeys, authenticated, dispatch]);\n\n  return (\n    <FullHeight className=\"ShockWallet\">\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:publicKey\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={createPostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey\"\n            exact\n            component={OtherUserPage}\n          />\n          <Route path=\"/story\" exact component={Story} />\n          <Route path=\"/stories\" exact component={Stories} />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n    </FullHeight>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Http from \"axios\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nHttp.defaults.timeout = 10000;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { throttledExchangeKeyPair } from \"./EncryptionActions\";\nimport { connectSocket } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_ATTEMPTS_DONE: \"node/attemptsDone\"\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nconst wait = ms => new Promise(r => setTimeout(r, ms));\n\nconst retryOperation = (operation, delay, retries) =>\n  new Promise((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return wait(delay)\n            .then(\n              retryOperation.bind(null, operation, delay * retries, retries - 1)\n            )\n            .then(resolve)\n            .catch(reject);\n        }\n        return reject(reason);\n      });\n  });\n\nexport const fetchNodeHealth = (hostIP, retries) => async dispatch => {\n  try {\n    const { data } = await retryOperation(\n      async () => {\n        const { data } = await Http.get(`${hostIP}/healthz`);\n        if (!data) {\n          throw new Error(\n            `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n          );\n        }\n        return { data };\n      },\n      1000,\n      retries\n    );\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (\n  hostIP,\n  resetData = true,\n  retries = 0\n) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(throttledExchangeKeyPair())\n    ]);\n\n    connectSocket(host, true);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(\n      `https://${sanitizedHostIP}`,\n      retries\n    )(dispatch);\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(\n    `http://${sanitizedHostIP}`,\n    retries\n  )(dispatch);\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/auth\",\n      {\n        alias,\n        password\n      },\n      {\n        // Unlocking can take significantly longer than other endpoints\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/wallet\",\n      {\n        alias,\n        password\n      },\n      {\n        // Creating a wallet can take longer than any other endpoints.\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const SetAttemptsDone = () => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_ATTEMPTS_DONE\n  });\n};\n","import * as Common from \"shock-common\";\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  type: \"post\";\n}\n\n/**\n * Different from the one in shock-common.\n */\nexport interface SharedPost extends Common.SharedPostRaw {\n  authorId: string;\n  sharerId: string;\n  id: string;\n  type: \"shared\";\n  /**\n   * Undefined when loading it.\n   */\n  originalPost?: Post;\n}\n\nexport const isSharedPost = (post: any): post is SharedPost => {\n  if (!Common.isObj(post)) {\n    return false;\n  }\n\n  const obj = (post as unknown) as SharedPost;\n\n  if (typeof obj.authorId !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.id !== \"string\") {\n    return false;\n  }\n\n  if (typeof obj.originalAuthor !== \"string\") {\n    return false;\n  }\n\n  return obj.type === \"shared\";\n};\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangingKeypair = null;\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(`/api/encryption/exchange`, {\n      publicKey: keyPair.publicKeyBase64,\n      deviceId\n    });\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n\nexport const throttledExchangeKeyPair = () => async dispatch => {\n  try {\n    if (!exchangingKeypair) {\n      exchangingKeypair = dispatch(exchangeKeyPair());\n    }\n\n    const result = await exchangingKeypair;\n\n    // eslint-disable-next-line require-atomic-updates\n    exchangingKeypair = null;\n\n    return result;\n  } catch (err) {\n    console.error(err);\n    exchangingKeypair = null;\n    throw err;\n  }\n};\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\nexport const setSource = source => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_SOURCE,\n    data: source\n  });\n\n  return source;\n};\n\nexport const setRate = rate => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_RATE,\n    data: rate\n  });\n\n  return rate;\n};\n","export const GUN_PROPS = [\"_\", \"#\"];\n","import * as React from \"react\";\nimport * as Common from \"shock-common\";\n\nexport function useForceUpdate(): () => void {\n  const [, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return update;\n}\n\nexport const isOnline = (lastSeen: number): boolean =>\n  Date.now() - lastSeen < Common.SET_LAST_SEEN_APP_INTERVAL * 2;\n","import * as Common from \"shock-common\";\n\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not an url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n"],"sourceRoot":""}