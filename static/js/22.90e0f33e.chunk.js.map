{"version":3,"sources":["common/Post/components/TipRibbon/index.js","common/Post/components/Stream/index.tsx","common/Post/components/Video/index.js","common/Post/components/Image/index.js","common/Post/index.js","images/av1.jpg","common/Post/SharedPost.js"],"names":["TipRibbon","tipCounter","tipValue","zoomed","className","style","opacity","STREAM_STATUS_URI","Stream","id","item","index","postId","hideRibbon","width","timeout","playerDOM","useRef","useState","isLive","setIsLive","videoStyle","useEffect","recheckInterval","checkStatus","a","magnetURI","split","seedToken","Http","get","data","player","videojs","current","autoplay","muted","aspectRatio","src","type","play","then","setInterval","clearInterval","cursor","display","ref","preload","controls","autoPlay","Video","contentURL","decodeURIComponent","replace","data-torrent","data-file-key","data-played","Image","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","useCallback","value","clearTimeout","timer","setTimeout","mainImageStyle","Controlled","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","alt","onLoad","Post","timestamp","avatar","publicKey","openTipModal","openUnlockModal","contentItems","username","isOnlineNode","unlockedContent","useDispatch","useSelector","content","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","getMediaContent","Object","entries","filter","forEach","k","e","path","parseContent","key","text","finalItem","cached","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","on","scrollSnapList","length","window","addEventListener","removeEventListener","off","tipPost","targetType","postID","unlockPost","Tooltip","rebuild","to","backgroundImage","DateTime","fromMillis","toRelative","map","onClick","Array","from","_","classNames","scrollTo","data-tip","SharedPost","sharerProfile","originalPostProfile","originalPost","sharedTimestamp","postPublicKey","loadPostMedia","attachMedia","useLayoutEffect","displayName","date","av1","alias","Loader"],"mappings":"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","file":"static/js/22.90e0f33e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./css/index.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, {    useRef, useEffect,useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst REACT_APP_SL_SEED_URI = \"https://webtorrent.shock.network\"\nconst STREAM_STATUS_URI = `${REACT_APP_SL_SEED_URI}/rtmpapi/api/streams/live`\n\nconst Stream = ({ id, item, index, postId, tipValue, tipCounter, hideRibbon,width,timeout = 10000 }) => {\n  const playerDOM = useRef(null)\n  const [isLive,setIsLive] = useState(false)\n  const videoStyle = { width:\"100%\"}\n  if(width){\n    videoStyle.width = width\n  }\n  useEffect(() => {\n    let recheckInterval = null\n    const checkStatus = async () => {\n      try{\n        //TODO regex (?) `${REACT_APP_SL_RTMP_API_URI}/live/${seedToken}/index.m3u8`\n        const [seedToken] = item.magnetURI.split(\"/live/\")[1].split(\"/index.m3u8\") \n        const res = await Http.get(`${STREAM_STATUS_URI}/${seedToken}`)\n        if(!res.data.isLive){\n          return false\n        }\n        const player = videojs(playerDOM.current, {\n          autoplay: true,\n          muted: true,\n          aspectRatio: \"16:9\",\n          \n        });\n        player.src({\n          src: item.magnetURI,\n          type: \"application/x-mpegURL\"\n        });\n        /*listen for 404s from the player\n        player.tech().on('retryplaylist', () => {\n          console.log('retryplaylist');\n        });*/\n        player.play();\n        return true\n      }catch(err){\n        return false\n      }\n    }\n    checkStatus()\n    .then(isLive => {\n      if(isLive){\n        setIsLive(true)\n        return\n      }\n      recheckInterval = setInterval(async ()=> {\n        const isLive = await checkStatus()\n        if(isLive){\n          setIsLive(true)\n          clearInterval(recheckInterval)\n          return\n        }\n      },timeout)\n    })\n    \n    return () => {\n      clearInterval(recheckInterval)\n    }\n    \n  },[item])\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width:\"100%\"\n        }}\n      >\n        {!isLive && <p>The streamer has disconnected.</p>}\n        <div style={isLive ? {width:\"100%\"} : {display:'none',width:\"100%\"}}>\n        <video\n          className=\"video-js vjs-default-skin\"\n          ref={playerDOM}\n          style={videoStyle}\n          preload=\"auto\"\n          controls\n          muted\n          autoPlay\n        />\n        </div>\n        {!hideRibbon && <TipRibbon tipCounter={tipCounter} tipValue={tipValue} zoomed={false} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","import React from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.css\";\n\nconst Video = ({ id, item, index, postId, tipValue, tipCounter, hideRibbon,width }) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = { }\n  if(width){\n    videoStyle.width = width\n  }\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n        {!hideRibbon && <TipRibbon tipCounter={tipCounter} tipValue={tipValue} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({ id, item, index, postId, tipValue, tipCounter,hideRibbon,width }) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [animationTimer, zoomLoaded]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { opacity: previewVisible ? 1 : 0 }\n  if(width){\n    mainImageStyle.width = width\n  }\n\n  return (\n    <div className=\"media-container\">\n      <ControlledZoom\n        isZoomed={zoomed}\n        onZoomChange={handleZoomChange}\n        overlayBgColorStart=\"#16191c00\"\n        overlayBgColorEnd=\"#16191c\"\n      >\n        <img\n          className={`torrent-img torrent-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          style={mainImageStyle}\n          src={contentURL}\n        />\n        <img\n          className={`enlarged-img enlarged-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-file-key={index}\n          onLoad={() => {\n            setZoomLoaded(true);\n          }}\n          style={{ opacity: zoomLoaded ? 1 : 0 }}\n          src={contentURL}\n        />\n        {!hideRibbon && <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />}\n      </ControlledZoom>\n    </div>\n  );\n};\n\nexport default Image;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport \"./css/index.css\";\n\nconst Post = ({\n  id,\n  timestamp,\n  avatar,\n  tipCounter,\n  tipValue,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  contentItems = {},\n  username,\n  isOnlineNode\n}) => {\n  const dispatch = useDispatch();\n  const unlockedContent = useSelector(({content}) => content.unlockedContent)\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n\n  const getMediaContent = () => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  };\n\n  const getTextContent = () => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(()=>{\n    getMediaContent().forEach(([k,e]) => {\n      const path = `${publicKey}>posts>${k}`\n      if (e.isPrivate && !unlockedContent[path]){\n        setIsPrivate(true)\n      }\n    })\n  },[contentItems,publicKey])\n\n  const parseContent = ([key, item], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n    const finalItem = item\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`\n      const cached = unlockedContent[path]\n      if (cached){\n        finalItem.magnetURI = cached\n      } else {\n        return <div><i className=\"fas fa-lock fa-10x\"></i></div>\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n        />\n      );\n    }\n    if (item.type === \"stream/embedded\") {\n      return (\n        <Stream\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  // useEffect(() => {\n  //   attachMedia();\n  // }, [contentItems.length]);\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  useEffect(() => {\n    Tooltip.rebuild();\n  }, []);\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <Link\n            className=\"av\"\n            to={`/${publicKey}`}\n            style={{\n              backgroundImage: `url(${avatar})`\n            }}\n          />\n          <div className=\"details\">\n            <Link to={`/${publicKey}`}>{username}</Link>\n            <p>\n              {timestamp && typeof timestamp === \"number\" \n                ? DateTime.fromMillis(timestamp).toRelative() \n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","export default __webpack_public_path__ + \"static/media/av1.e1539bb2.jpg\";","import React, { useCallback, useLayoutEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport Tooltip from \"react-tooltip\";\n\nimport Post from \".\";\n\nimport av1 from \"../../images/av1.jpg\";\nimport \"../Post/css/index.css\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport Loader from \"../Loader\";\n\nconst SharedPost = ({\n  sharerProfile,\n  originalPostProfile,\n  originalPost,\n  sharedTimestamp,\n  isOnlineNode,\n  postPublicKey,\n  openTipModal,\n  openUnlockModal\n}) => {\n  const loadPostMedia = useCallback(async () => {\n    if (originalPost) {\n      attachMedia([originalPost], false);\n    }\n  }, [originalPost]);\n\n  useLayoutEffect(() => {\n    Tooltip.rebuild();\n    loadPostMedia();\n  }, [loadPostMedia]);\n\n  return (\n    <div className=\"post shared-post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <div\n            className=\"av\"\n            style={{\n              backgroundImage: `url(data:image/jpeg;base64,${sharerProfile?.avatar})`\n            }}\n          ></div>\n          <div className=\"details\">\n            <p>{sharerProfile?.displayName}</p>\n            <p>\n              {sharedTimestamp && typeof sharedTimestamp === \"number\"\n                ? DateTime.fromMillis(sharedTimestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"shared-content\">\n        {originalPost && originalPostProfile ? (\n          <Post\n            id={originalPost.id}\n            timestamp={originalPost.date}\n            avatar={\n              originalPostProfile.avatar\n                ? `data:image/jpeg;base64,${originalPostProfile.avatar}`\n                : av1\n            }\n            tipCounter={originalPost.tipCounter}\n            tipValue={originalPost.tipValue}\n            publicKey={postPublicKey}\n            openTipModal={openTipModal}\n            openUnlockModal={openUnlockModal}\n            contentItems={originalPost.contentItems ?? {}}\n            username={\n              originalPostProfile.displayName ?? originalPostProfile.alias\n            }\n            isOnlineNode={isOnlineNode}\n          />\n        ) : (\n          <Loader text=\"Loading Post...\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SharedPost;\n"],"sourceRoot":""}