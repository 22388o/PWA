{"version":3,"sources":["actions/OrdersActions.js","utils/WebSocket.js","actions/CoordinateActions.ts","utils/Http.js","common/Loader/index.js","common/Post/components/TipRibbon/index.js","common/Post/components/Stream/index.tsx","actions/AuthActions.ts","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.js","reducers/DrawerReducer.js","reducers/ContentReducer.ts","reducers/FeesReducer.ts","reducers/FeedReducer.ts","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/AppReducer.ts","reducers/CoordinatesReducer.ts","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/selectors/publishedContent.ts","store/selectors/feed.ts","store/selectors/coordinates.ts","store/selectors/index.ts","store/index.ts","actions/ContentActions.ts","actions/ChatActions.js","actions/WalletActions.js","utils/JSON.ts","utils/Encryption.ts","actions/NodeActions.js","schema/index.ts","actions/FeedActions.ts","actions/UserProfilesActions.ts","utils/dialogCallback.ts","actions/AppActions.ts","common/Drawer/index.js","App.js","utils/ui.tsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js","utils/Error.ts","utils/FieldError.ts","actions/EncryptionActions.js","actions/DrawerActions.js","utils/Date.ts","utils/index.ts","utils/String.js","actions/FeesActions.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","serviceID","dispatch","a","id","Http","post","path","value","data","ok","newID","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","rifle","query","publicKey","reconnect","onData","services","servicesEntries","forEach","get","service","type","serviceInfo","buyService","owner","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","transports","rifleSubscriptions","Map","GunSocket","LNDSocket","connectSocket","host","store","socketOptions","auth","encryptionId","getState","encryption","deviceId","connected","disconnectSocket","SocketIO","relayId","node","emit","GunOn","encryptedOn","event","subscription","subscriptionId","key","onError","on","Common","setAuthenticated","err","field","message","cachedNodeIP","hostIP","connectHost","socket","off","close","decryptEventCallback","callback","privateKey","Encryption","encryptedMessage","decryptedMessage","encryptedEmit","eventName","hostKeys","userKeys","hostId","remotePublicKey","localPrivateKey","error","stringify","encryptedData","responses","warn","decryptedResponses","subscribeSocket","resolve","reject","then","token","authToken","unsubscribeRifleById","unsubscribeEvent","delete","unsubscribeRifleByQuery","Array","from","debug","$shock","set","rifleCleanup","subscriptions","unsubscribe","getChats","res","_","sub","chats","contacts","chat","pk","recipientPublicKey","avatar","recipientAvatar","displayName","recipientDisplayName","didDisconnect","messages","reduce","filter","body","trim","initialMessagePrefix","sort","b","timestamp","getSentRequests","sentRequests","getReceivedRequests","receivedRequests","request","changedAddress","recipientChangedRequestAddress","coordinateDeleted","createAction","coordinateReceived","subCoordinates","Utils","unparsed","coordinateSHA256","coordinate","e","alert","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","process","REACT_APP_SHOCK_ENCRYPTION_ECC","decryptResponse","interceptors","use","localRequest","url","indexOf","headers","common","Authorization","method","toUpperCase","includes","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","window","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","TipRibbon","tipCounter","tipValue","zoomed","opacity","Stream","item","index","postId","hideRibbon","width","playerDOM","timeout","useRef","useState","isLive","videoStyle","liveStatus","useEffect","player","videojs","current","autoplay","muted","aspectRatio","src","magnetURI","play","cursor","display","ref","preload","controls","autoPlay","RESET_AUTH_INFO","SET_AUTH_STEP","SET_AUTHENTICATED","SET_AUTH_METHOD","LOGOUT","SAVE_INVITE","SET_RELAY_ID","status","setAuthStep","step","setAuthMethod","logout","INITIAL_STATE","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","webClientPrefix","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","SET_ATTEMPTS_DONE","AUTH_ACTIONS","SET_WEBCLIENT_PREFIX","authenticated","authStep","invite","defaultSteps","manual","shockWizard","shockCloud","hostingTiers","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","lightningInfo","_getUnifiedTransactionDate","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","LOAD_LIGHTNING_INFO","requestBlacklist","_identicalMessages","oldMessage","newMessage","localId","_sortMessages","_processNewMessage","outgoing","userMessages","existingMessage","sortedMessages","LOAD_CHAT_DATA","LOAD_SENT_REQUESTS","requestPublicKeys","pendingRequests","loading","LOAD_RECEIVED_REQUESTS","SENT_REQUEST","Date","now","ACCEPT_HANDSHAKE_REQUEST","requestId","DECLINE_HANDSHAKE_REQUEST","SENDING_MESSAGE","Schema","SENDING","SENT_MESSAGE","SENT","FAILED_MESSAGE","FAILED","RECEIVED_MESSAGE","RECEIVED","CHAT_WAS_DELETED","produce","draft","idx","findIndex","c","splice","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","streamPostId","streamContentId","streamStatusUrl","streamBroadcasterUrl","publishedContent","publicContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","publicContentAdded","match","payload","publishedContentAdded","publishedContentRemoved","SET_SEED_PROVIDER_PUB","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","userToken","availableTmp","push","REMOVE_USED_TOKEN","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","user","private","posts","sharedPosts","reloadDone","feed","postDeleted","author","p","postReceived","newPost","authorId","contentItems","tags","title","tips","contentItemReceived","contentItem","postID","slice","sharedPostDeleted","sharerPublicKey","sharedPostReceived","originalAuthor","shareDate","originalPostID","shareID","sharedBy","postTipReceived","tipAmt","tipID","find","ADD_FOLLOW","existingFollow","follow","REMOVE_FOLLOW","UPDATE_FOLLOW","profile","RELOAD_FEED","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","NODE_ACTIONS","RESET_USER_PROFILES","LOAD_USER_PROFILE","REMOVE_USER_PROFILE","profiles","UPDATE_USER_PROFILE","newProfile","oldProfile","CHAT_ACTIONS","req","myServices","boughtServices","orders","tmp","servicesTmp","selectedService","dialogText","dialogHasCallback","app","OPEN_DIALOG","hasCallback","CLOSE_DIALOG","coordinates","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","AppReducer","CoordinatesReducer","users","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectFollows","createSelector","f","selectOwnPublishedContent","privateContent","selectFeedPosts","pickBy","selectAllPosts","selectAllSharedPosts","selectSinglePost","selectPostsNewestToOldest","sharedPostsMap","values","allPosts","alpha","selectSharedPost","sharer","selectAllPostsFromFollowedNewestToOldest","followedPublicKeys","filteredPosts","pick","filteredShared","allNonShared","flat","allShared","records","selectAllCoordinates","selectAllCoordinatesNewestToOldest","coords","selectSingleCoordinate","selectRoot","selectIsInContact","isContact","hasSentReq","r","hasReceivedReq","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","useDispatch","originalUseDispatch","PUBLISHED_CONTENT_ADDED","PUBLISHED_CONTENT_REMOVED","setSeedProviderPub","pub","dontBackup","setSeedInfo","cleanUrl","endsWith","infoS","addPublishedContent","isPublicContentItem","TypeError","unlockContent","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","noDialog","openDialog","addAvailableToken","removeUnavailableToken","addStreamToken","OWN_PUBLISHED_CONTENT_QUERY","subOwnPublishedContent","parsed","parseJson","isPublishedContent","unsubOwnPublishedContent","subOwnPublicContent","logger","SET_CHAT_CONTACTS","SET_CHAT_MESSAGES","loadChatData","loadSentRequests","loadReceivedRequests","requestorPK","requestorAvatar","requestorDisplayName","subscribeChatMessages","userPublicKey","incomingId","Error","rawMsg","msg","incomingMessages","acceptHandshakeRequest","put","accept","sendHandshakeRequest","sendMessage","tempId","DateTime","utc","toMillis","chatWasDeleted","subChats","subReceivedRequests","subSentRequests","fetchWalletBalance","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","FetchLightningInfo","safeParseJSON","nonEncryptedEvents","convertBase64ToBuffer","Buffer","convertBufferToBase64","processKey","Uint8Array","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","FieldError","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","fetchNodeHealth","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","resetData","done","health","baseURL","setRelayId","throttledExchangeKeyPair","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","decodedToken","jwtDecode","authorization","exp","parseError","createAlias","createWallet","setWebclientPrefix","prefix","CHAT_MESSAGE_STATUS","o","obj","description","isPostRaw","valMap","baseValidator","every","validator","createValidator","isFinite","val","RESET_FEED","LOAD_POSTS","ADD_USER_POST","DELETE_USER_POST","LOAD_SHARED_POST","POST_TIPPED","removeFollow","addFollow","subSinglePost","subscribeUserPosts","subPostContent","FOLLOWS_QUERY","subscribeFollows","info","unsubscribeFollows","sendTipPost","deleteUserPost","reloadFeed","subSharedPosts","sharedPost","subPostTips","subscribedProfiles","Set","updateUserProfile","subscribeUserProfile","has","binarySub","header","unsubscribeUserProfile","dialogCallback","callDialogCallBack","cb","addDialogCallback","closeDialog","executeCb","Drawer","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","WalletSettingsPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","CreatePostPage","GoLivePage","OtherUserPage","Story","Stories","QRScannerPage","BackupsPage","PublicContentItemPage","PrivateRoute","component","authorizedComponent","App","history","useHistory","update","setUpdate","setIsLive","showFloatingPlayer","setShowFloatingPlayer","interval","setInterval","clearInterval","setTimeout","clearTimeout","StreamRender","useMemo","undefined","stopStream","contentId","endUrl","urlForMagnet","obsToken","addLanguage","tokenExpired","JWTDecode","elementId","elmnt","document","getElementById","pos1","pos2","pos3","pos4","onpointerdown","preventDefault","clientX","clientY","onpointerup","closeDragElement","onpointermove","elementDrag","top","offsetTop","left","offsetLeft","dragElement","loadContentInfo","serviceProvider","seedData","JObject","loadStreamInfo","streamData","DialogClose","ConfirmDialog","fallback","exact","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","closeButton","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","href","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","errorMessage","stack","exchangingKeypair","addUserKeyPair","addHostKey","getDeviceId","APIPublicKey","result","openDrawer","useForceUpdate","setTick","tick","formatTimestamp","relativeTime","fromMillis","toRelative","resizeImage","img","desiredLongEdge","compression","canvas","createElement","Math","round","getContext","drawImage","toDataURL","processImageFile","file","startsWith","size","rej","reader","FileReader","onload","target","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","image","resizedImage","normalizeURL","_url","__url","protocol","getContact","contact","EMPTY_FN","useBooleanState","initialState","setState","_state","safeParseJson","processDisplayName","suffix","loadFeeRates","setSource","setRate"],"mappings":"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","file":"static/js/main.1661c17f.chunk.js","sourcesContent":["import Http from \"../utils/Http\";\nimport {\n  rifle,\n  rifleSocketExists,\n  unsubscribeRifleById\n} from \"../utils/WebSocket\";\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE: \"service/add/bought\"\n};\n\nexport const createService = (\n  clear,\n  encrypted,\n  serviceID\n) => async dispatch => {\n  let id = serviceID;\n  if (serviceID) {\n    const { data } = await Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}`,\n      value: clear\n    });\n    const { ok } = data;\n    if (!ok) {\n      return \"\";\n    }\n  } else {\n    const { data } = await Http.post(\"/api/gun/set\", {\n      path: \"$user>offeredServices\",\n      value: clear\n    });\n    const { ok, id: newID } = data;\n    if (!ok) {\n      return \"\";\n    }\n    id = newID;\n  }\n\n  const all = Object.entries(encrypted).map(([name, value]) => {\n    if (!value) {\n      return;\n    }\n    console.log(`setting: ${name} to ${value}`);\n    return Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}>${name}`,\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value\n      }\n    });\n  });\n  await Promise.all(all);\n  const { serviceType } = clear;\n  //update the offered service\n  if (serviceType === \"torrentSeed\" || serviceType === \"streamSeed\") {\n    console.log(\"updating profile with service\");\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>Profile>SeedServiceProvided`,\n      value: id\n    });\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id;\n};\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post(\"/api/gun/put\", {\n    path: `$user>offeredServices>${id}`,\n    value: null\n  });\n};\n\nexport const subscribeMyServices = () => dispatch => {\n  const query = `$user::offeredServices::on`;\n  const subscription = rifle({\n    query,\n    publicKey: \"\",\n    reconnect: false,\n    onData: async services => {\n      const servicesEntries = Object.entries(services);\n      console.log(servicesEntries);\n\n      servicesEntries.forEach(async ([id]) => {\n        if (id === \"_\") {\n          return;\n        }\n        const { data: service } = await Http.get(\n          `/api/gun/user/load/offeredServices>${id}`\n        );\n        console.log(service.data);\n        if (service.data === null) {\n          dispatch({\n            type: ACTIONS.REMOVE_MY_SERVICE,\n            data: id\n          });\n          return;\n        }\n        dispatch({\n          type: ACTIONS.ADD_MY_SERVICE,\n          data: { id, serviceInfo: service.data }\n        });\n      });\n    }\n  });\n\n  return subscription;\n};\n\nexport const buyService = (\n  owner,\n  serviceID,\n  servicePrice\n) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"service\",\n    amt: Number(servicePrice),\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: serviceID\n  });\n  console.log(data);\n  const orderAck = JSON.parse(data.orderAck.response);\n  dispatch({\n    type: ACTIONS.ADD_BOUGHT_SERVICE,\n    data: { orderAck, owner, serviceID }\n  });\n  return orderAck;\n};\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Common from \"shock-common\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"./String\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\nimport { connectHost } from \"../actions/NodeActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').Subscription} Subscription\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true,\n  transports: [\"websocket\"]\n};\n\nconst rifleSubscriptions = new Map();\n\n/** @type {import(\"socket.io-client\").Socket<import(\"socket.io-client/build/typed-events\").DefaultEventsMap, import(\"socket.io-client/build/typed-events\").DefaultEventsMap>} */\nexport let GunSocket = null;\n\n/** @type {import(\"socket.io-client\").Socket<import(\"socket.io-client/build/typed-events\").DefaultEventsMap, import(\"socket.io-client/build/typed-events\").DefaultEventsMap>} */\nexport let LNDSocket = null;\n\nexport const connectSocket = async (host = \"\", reconnect = false) => {\n  const { store } = await import(\"../store\");\n  const socketOptions = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId\n    }\n  };\n\n  if (GunSocket?.connected && LNDSocket?.connected && !reconnect) {\n    return { GunSocket, LNDSocket };\n  }\n\n  if (GunSocket && LNDSocket && reconnect) {\n    disconnectSocket(GunSocket);\n    disconnectSocket(LNDSocket);\n  }\n\n  GunSocket = SocketIO(`${host}/gun`, socketOptions);\n  LNDSocket = SocketIO(`${host}/lndstreaming`, socketOptions);\n  \n  const relayId = store.getState().node.relayId\n  if(relayId){\n    GunSocket.emit('hybridRelayId',{id:relayId})\n    LNDSocket.emit('hybridRelayId',{id:relayId})\n  }\n\n  const GunOn = encryptedOn(GunSocket);\n\n  // Subscribe to Rifle query events as soon as the socket is connected\n  GunOn(\"query:data\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onData?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunOn(\"query:error\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onError?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunSocket.on(Common.NOT_AUTH, () => {\n    store.dispatch(setAuthenticated(false));\n  });\n  //TODO listen on relay error\n  GunSocket.on(\"encryption:error\", async err => {\n    if (err.field === \"deviceId\" || err.message === \"Bad Mac\") {\n      const {hostIP:cachedNodeIP,relayId} = store.getState().node;\n      await store.dispatch(connectHost(cachedNodeIP, false,relayId));\n      store.dispatch(setAuthenticated(false));\n    }\n  });\n\n  return { GunSocket, LNDSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: data\n    });\n\n    callback(err, decryptedMessage);\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.emit(eventName, message, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message: JSON.stringify(message)\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        if (!response) {\n          return response;\n        }\n\n        if (response && !Encryption.isEncryptedMessage(response)) {\n          console.warn(\"Non-encrypted socket message\", response);\n          return response;\n        }\n\n        return Encryption.decryptMessage({\n          privateKey: localPrivateKey,\n          encryptedMessage: response\n        });\n      })\n    );\n\n    callback(...decryptedResponses);\n  });\n};\n\n/**\n * @returns {Promise<Subscription>}\n */\nexport const subscribeSocket = ({ eventName, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const on = encryptedOn(GunSocket);\n        const emit = encryptedEmit(GunSocket);\n\n        emit(\n          `subscribe:${eventName}`,\n          {\n            token: store.getState().node.authToken\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              reject(err);\n              return;\n            }\n          }\n        );\n\n        if (callback) {\n          on(eventName, data => {\n            callback(null, data);\n          });\n        }\n\n        resolve({\n          off() {\n            emit(`unsubscribe:${eventName}`);\n          }\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const unsubscribeRifleById = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n\n  if (cachedSocket) {\n    unsubscribeEvent(subscriptionId);\n    rifleSubscriptions.delete(subscriptionId);\n  }\n};\n\nexport const unsubscribeRifleByQuery = query => {\n  const subscriptionEntries = Array.from(rifleSubscriptions.entries());\n\n  subscriptionEntries.map(([id, subscription]) => {\n    if (subscription.query === query) {\n      console.log(\"Unsubscribing by query:\", subscription);\n      unsubscribeRifleById(id);\n      return true;\n    }\n\n    return false;\n  });\n};\n\nexport const unsubscribeEvent = subscriptionId =>\n  new Promise(resolve => {\n    const emit = encryptedEmit(GunSocket);\n    emit(\n      \"unsubscribe\",\n      {\n        subscriptionId\n      },\n      () => {\n        console.debug(\n          `[SOCKET] Unsubscribed from event successfully! (${subscriptionId})`\n        );\n        resolve(true);\n      }\n    );\n  });\n\nexport const rifleSocketExists = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} query\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {boolean=} reconnect\n * @prop {(data, key) => void} onData\n * @prop {((error) => void)=} onError\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.onData(callback)` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map().once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<{ off: () => void }>}\n */\nexport const rifle = ({ query, publicKey, reconnect, onData, onError }) =>\n  new Promise((resolve, reject) => {\n    import(\"../store\").then(({ store }) => {\n      if (reconnect) {\n        unsubscribeRifleByQuery(query);\n      }\n\n      const emit = encryptedEmit(GunSocket);\n\n      emit(\n        \"subscribe:query\",\n        {\n          $shock: query,\n          token: store.getState().node.authToken,\n          publicKey\n        },\n        (err, data) => {\n          if (err) {\n            console.error(`Gun rifle error (${query})`);\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          rifleSubscriptions.set(data.subscriptionId, {\n            onData,\n            onError,\n            query\n          });\n\n          resolve({\n            off: () => unsubscribeRifleById(data.subscriptionId)\n          });\n        }\n      );\n    });\n  });\n\n/**\n * @param {Promise<Subscription>[]} subscriptions\n */\nexport const rifleCleanup = (...subscriptions) => () => {\n  subscriptions.map(subscription =>\n    subscription.then(unsubscribe => {\n      unsubscribe.off();\n    })\n  );\n};\n\n/**\n * @returns {Promise<{ messages: any , contacts: Contact[]}>}\n */\nexport const getChats = async () => {\n  try {\n    const chats = await new Promise(res => {\n      const subscription = subscribeSocket({\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        },\n        eventName: \"chats\"\n      });\n    });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName,\n      didDisconnect: chat.didDisconnect\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleSentRequest[]>}\n */\nexport const getSentRequests = async () => {\n  try {\n    const sentRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"sentRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleReceivedRequest[]>}\n */\nexport const getReceivedRequests = async () => {\n  try {\n    const receivedRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"receivedRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Utils from \"../utils\";\n\nexport const coordinateDeleted = createAction<{\n  coordinateSHA256: string;\n}>(\"coordinates/deleted\");\n\nexport const coordinateReceived = createAction<{\n  coordinate: Common.Coordinate;\n  coordinateSHA256: string;\n}>(\"coordinates/received\");\n\nexport const subCoordinates = () => (dispatch: (action: any) => void) => {\n  Utils.logger.debug(`Subscribing to coordinates.`);\n  try {\n    const subscription = Utils.rifle({\n      query: `$user::coordinates::map.on`,\n      publicKey: \"me\",\n      onData: (unparsed, coordinateSHA256) => {\n        const coordinate = Utils.safeParseJson(unparsed);\n\n        Utils.logger.debug(\n          `Coordinate Subscription -> `,\n          coordinateSHA256,\n          coordinate\n        );\n\n        if (Common.isCoordinate(coordinate)) {\n          dispatch(\n            coordinateReceived({\n              coordinate,\n              coordinateSHA256\n            })\n          );\n        } else if (coordinate === null) {\n          dispatch(\n            coordinateDeleted({\n              coordinateSHA256\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Coordinate subscription invalid (or incomplete) value -> `,\n            coordinate\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    alert(`Could not establish a subscription to coordinates: ${e.message}`);\n    Utils.logger.error(\n      `Could not establish a subscription to coordinates -> `,\n      e\n    );\n  }\n};\n","import Http from \"axios\";\nimport * as Encryption from \"./Encryption\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\") {\n    return config;\n  }\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return response;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const { relayId } = store.getState().node;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n      if(relayId){\n        /////\n        config.headers.common[\"x-shock-hybrid-relay-id-x\"] = relayId;\n        /////\n      }\n    }\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.scoped.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\")\n    .matches;\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","import \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const {liveStatus} = item\n  useEffect(() =>{\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  },[item])\n  useEffect(()=>{\n    console.log(\"status:\",liveStatus)\n  },[item])\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {!isLive && liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!isLive && !liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","// @ts-check\nexport const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\",\n  SAVE_INVITE: \"auth/save/invite\",\n  SET_RELAY_ID: \"auth/relay/set\"\n\n};\n\nexport const setAuthenticated = status => ({\n  type: ACTIONS.SET_AUTHENTICATED,\n  data: status\n});\n\nexport const setAuthStep = step => ({\n  type: ACTIONS.SET_AUTH_STEP,\n  data: step\n});\n\nexport const setAuthMethod = method => ({\n  type: ACTIONS.SET_AUTH_METHOD,\n  data: method\n});\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\n\nexport const saveInvite = (invite) => ({\n  type: ACTIONS.SAVE_INVITE,\n  data:invite\n});\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false,\n  webClientPrefix:\"https://lightning.page\",\n  relayId:null\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n    case ACTIONS.SET_RELAY_ID:{\n      return {\n        ...state,\n        relayId:action.data\n      }\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    case ACTIONS.SET_WEBCLIENT_PREFIX:{\n      return {...state, webClientPrefix:action.data}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null,\n  invite:null,\n  relayId:null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\",\n  hostingTiers: \"chooseTier\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.SAVE_INVITE: {\n      return {\n        ...state,\n        invite:action.data\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: [],\n  lightningInfo:{},\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    case ACTIONS.LOAD_LIGHTNING_INFO:{\n      const {data}  = action\n      return {\n        ...state,\n        lightningInfo:data\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\nimport produce from \"immer\";\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n */\n/**\n * @template S\n * @typedef {import('redux').Reducer<S, AnyAction>} Reducer\n */\n\nimport * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').ReceivedRequest} ReceivedRequest\n * @typedef {import(\"../schema\").SentRequest} SentRequest\n *\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').LoadSentRequestsAction} LoadSentRequestsAction\n */\n\nconst INITIAL_STATE = {\n  contacts: /** @type {Contact[]} */ ([]),\n  /**\n   * @type {Record<string, Schema.ChatMessage[]>}\n   */\n  messages: {},\n  sentRequests: /** @type {SentRequest[]} */ ([]),\n  receivedRequests: /** @type {ReceivedRequest[]} */ ([]),\n  requestBlacklist: []\n};\n\n/**\n * @param {Schema.ChatMessage} oldMessage\n * @param {Schema.ChatMessage} newMessage\n * @returns {boolean}\n */\nconst _identicalMessages = (oldMessage, newMessage) =>\n  oldMessage.id && newMessage.id\n    ? oldMessage.id === newMessage.id\n    : oldMessage.localId === newMessage.localId;\n\n/**\n * @param {Schema.ChatMessage[]} messages\n * @returns {Schema.ChatMessage[]}\n */\nconst _sortMessages = (messages = []) =>\n  messages.sort((a, b) => b.timestamp - a.timestamp);\n\n/**\n * @typedef {object} ProcessNewMessageParams\n * @prop {Schema.ChatMessage} data\n * @prop {Schema.ChatMessageStatus} status\n * @prop {typeof INITIAL_STATE} state\n * @prop {boolean=} outgoing\n */\n\n/**\n * @param {ProcessNewMessageParams} args\n * @returns {typeof INITIAL_STATE}\n */\nconst _processNewMessage = ({ data, status, state, outgoing = false }) => {\n  const userMessages = state.messages[data.recipientPublicKey] ?? [];\n  const [existingMessage] = userMessages.filter(message =>\n    _identicalMessages(message, data)\n  );\n\n  if (existingMessage) {\n    console.warn(\"Duplicate Message:\", existingMessage?.body);\n  }\n\n  if (existingMessage) {\n    const messages = userMessages.map(message =>\n      _identicalMessages(message, existingMessage)\n        ? { ...existingMessage, ...data, status, outgoing }\n        : message\n    );\n    const sortedMessages = _sortMessages(messages);\n\n    return {\n      ...state,\n      messages: {\n        ...state.messages,\n        [data.recipientPublicKey]: sortedMessages\n      }\n    };\n  }\n\n  const messages = [{ ...data, status, outgoing }, ...userMessages];\n  const sortedMessages = _sortMessages(messages);\n\n  return {\n    ...state,\n    messages: {\n      ...state.messages,\n      [data.recipientPublicKey]: sortedMessages\n    }\n  };\n};\n\n/**\n * @type {Reducer<typeof INITIAL_STATE>}\n */\nconst chat = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_CHAT_DATA: {\n      const {\n        data: { contacts, messages }\n      } = /** @type {LoadChatDataAction} */ (action);\n      return {\n        ...state,\n        contacts,\n        // TODO: Could not replacing messages altogether be bad?\n        messages: {\n          ...state.messages,\n          ...messages\n        }\n      };\n    }\n    case ACTIONS.LOAD_SENT_REQUESTS: {\n      const {\n        data: sentRequests\n      } = /** @type {LoadSentRequestsAction} */ (action);\n      const requestPublicKeys = state.sentRequests.map(request => request.pk);\n      const pendingRequests = state.sentRequests.filter(\n        request => request.loading && !requestPublicKeys.includes(request.pk)\n      );\n\n      return {\n        ...state,\n        sentRequests: [...pendingRequests, ...sentRequests]\n      };\n    }\n    case ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      const {\n        data: receivedRequests\n      } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n      return {\n        ...state,\n        receivedRequests\n      };\n    }\n    case ACTIONS.SENT_REQUEST: {\n      const { data: publicKey } = /** @type {SentRequestAction} */ (action);\n      return {\n        ...state,\n        sentRequests: [\n          ...state.sentRequests,\n          {\n            avatar: null,\n            changedAddress: false,\n            displayName: null,\n            id: \"loading/\" + publicKey,\n            pk: publicKey,\n            timestamp: Date.now(),\n            loading: true\n          }\n        ]\n      };\n    }\n    case ACTIONS.ACCEPT_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      return {\n        ...state,\n        receivedRequests: state.receivedRequests.filter(\n          request => request.id !== requestId\n        )\n      };\n    }\n    case ACTIONS.DECLINE_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      if (!requestId || !requestId.trim()) {\n        return state;\n      }\n\n      return {\n        ...state,\n        requestBlacklist: [...state.requestBlacklist, requestId]\n      };\n    }\n    case ACTIONS.SENDING_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENDING,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.SENT_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.FAILED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.FAILED,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.RECEIVED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.RECEIVED,\n        state\n      });\n    }\n    case ACTIONS.CHAT_WAS_DELETED: {\n      const {\n        data: { publicKey }\n      } = action;\n      return produce(state, draft => {\n        const idx = draft.contacts.findIndex(c => c.pk === publicKey);\n        idx > -1 && draft.contacts.splice(idx, 1);\n        delete draft.messages[publicKey];\n        draft.messages[publicKey] = [];\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import produce from \"immer\";\n\nimport {\n  ACTIONS,\n  publishedContentAdded,\n  publishedContentRemoved,\n  publicContentAdded\n} from \"../actions/ContentActions\";\nimport { PublishedContent, PublicContentItem } from \"../schema\";\n\nconst INITIAL_STATE = {\n  seedProviderPub:\n    \"tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\",\n  streamUserToken: \"\",\n  streamLiveToken: \"\",\n  streamUrl: \"\",\n  streamPostId: \"\",\n  streamContentId: \"\",\n  streamStatusUrl: \"\",\n  streamBroadcasterUrl: \"\",\n  publishedContent: {} as Record<string, PublishedContent>,\n  publicContent: {} as Record<string, PublicContentItem>,\n  unlockedContent: {},\n  seedInfo: {} as { seedUrl?: string; seedToken?: string },\n  availableTokens: {},\n  availableStreamTokens: {}\n};\n\nconst content = (state = INITIAL_STATE, action): typeof INITIAL_STATE => {\n  if (publicContentAdded.match(action)) {\n    return produce(state, draft => {\n      const { item } = action.payload;\n      if (!draft.publicContent[item.id]) {\n        draft.publicContent[item.id] = item;\n      }\n    });\n  }\n  if (publishedContentAdded.match(action)) {\n    return produce(state, draft => {\n      const {\n        payload: { content, res }\n      } = action;\n      if (res.ok) {\n        draft.publishedContent[res.id] = content;\n      }\n    });\n  }\n\n  if (publishedContentRemoved.match(action)) {\n    return produce(state, draft => {\n      delete draft.publishedContent[action.payload.id];\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n\n    case ACTIONS.ADD_UNLOCKED_CONTENT: {\n      const { data } = action;\n      const unlockedTmp = { ...state.unlockedContent };\n      unlockedTmp[data.contentPath] = data.content;\n      return { ...state, unlockedContent: unlockedTmp };\n    }\n    case ACTIONS.ADD_STREAM: {\n      const { data } = action;\n      return {\n        ...state,\n        streamLiveToken: data.liveToken,\n        streamUserToken: data.seedToken,\n        streamUrl: data.streamUrl,\n        streamPostId: data.streamPostId,\n        streamContentId: data.streamContentId,\n        streamStatusUrl: data.streamStatusUrl,\n        streamBroadcasterUrl: data.streamBroadcasterUrl\n      };\n    }\n    case ACTIONS.REMOVE_STREAM: {\n      return {\n        ...state,\n        streamLiveToken: \"\",\n        streamUserToken: \"\",\n        streamUrl: \"\",\n        streamPostId: \"\",\n        streamContentId: \"\",\n        streamStatusUrl: \"\",\n        streamBroadcasterUrl: \"\"\n      };\n    }\n    case ACTIONS.SET_SEED_INFO: {\n      const { data } = action;\n      return { ...state, seedInfo: data };\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_USED_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableTokens: availableTmp };\n      }\n      return state;\n    }\n    case ACTIONS.ADD_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableStreamTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableStreamTokens: availableTmp };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/FeesActions\";\n\nexport interface FeesState {\n  source: string;\n\n  rate: Schema.FeeRate;\n\n  feeRates: Record<Schema.FeeRate, number>;\n}\n\nconst INITIAL_STATE: FeesState = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n\n  rate: \"halfHourFee\",\n\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (\n  state: FeesState = INITIAL_STATE,\n  action: { type: string; data: any }\n): FeesState => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        feeRates: INITIAL_STATE[\"feeRates\"],\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport * as Utils from \"../utils\";\nimport * as Schema from \"../schema\";\nimport {\n  ACTIONS,\n  postDeleted,\n  postReceived,\n  contentItemReceived,\n  sharedPostDeleted,\n  sharedPostReceived,\n  postTipReceived\n} from \"../actions/FeedActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  follows: [\n    {\n      user:\n        \"tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\",\n      status: \"ok\",\n      private: false\n    }\n  ] as Common.Follow[],\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: {} as Record<string, Schema.Post[]>,\n  sharedPosts: {} as Record<string, Record<string, Common.SharedPost>>,\n  reloadDone: false\n};\n\nconst feed = (state = INITIAL_STATE, action: any): typeof INITIAL_STATE => {\n  if (postDeleted.match(action)) {\n    const {\n      payload: { author, id }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx > -1) {\n        draft.posts[author].splice(idx, 1);\n      }\n    });\n  }\n  if (postReceived.match(action)) {\n    const {\n      payload: { author, id, post }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx === -1) {\n        const newPost: Schema.Post = {\n          authorId: author,\n          contentItems: {},\n          date: post.date,\n          id,\n          status: post.status,\n          tags: post.tags,\n          title: post.title,\n          tips: {},\n          type: \"post\"\n        };\n        draft.posts[author].push(newPost);\n      }\n    });\n  }\n  if (contentItemReceived.match(action)) {\n    const {\n      payload: { author, contentItem, id, postID }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state (no author found), post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === postID);\n      if (idx === -1) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state, post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      (draft.posts[author][idx] as Schema.Post).contentItems[id] = contentItem;\n    });\n  }\n  if (sharedPostDeleted.match(action)) {\n    const { postID, sharerPublicKey } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      if (draft.sharedPosts[sharerPublicKey][postID]) {\n        delete draft.sharedPosts[sharerPublicKey][postID];\n      }\n    });\n  }\n  if (sharedPostReceived.match(action)) {\n    const {\n      originalAuthor,\n      postID,\n      shareDate,\n      sharerPublicKey\n    } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      draft.sharedPosts[sharerPublicKey][postID] = {\n        originalAuthor,\n        originalPostID: postID,\n        shareDate,\n        shareID: sharerPublicKey + postID,\n        sharedBy: sharerPublicKey\n      };\n    });\n  }\n\n  if (postTipReceived.match(action)) {\n    const { author, postID, tipAmt, tipID } = action.payload;\n\n    return produce(state, draft => {\n      const post = draft.posts[author].find(p => p.id === postID);\n      if (!post) {\n        Utils.logger.error(\n          `Got tip for non existent post ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n      }\n      if (!post.tips) {\n        // cached data from previous app version won't have the tips object\n        post.tips = {};\n      }\n      if (!post.tips[tipID]) {\n        post.tips[tipID] = tipAmt;\n      }\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.RELOAD_FEED: {\n      return { ...state, reloadDone: true };\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as CHAT_ACTIONS } from \"../actions/ChatActions\";\nimport { sharedPostReceived } from \"../actions/FeedActions\";\n/**\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import(\"../actions/ChatActions\").LoadSentRequestsAction} LoadSentRequestsAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n */\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  if (sharedPostReceived.match(action)) {\n    const { originalAuthor } = action.payload;\n    return produce(state, draft => {\n      if (!draft[originalAuthor]) {\n        draft[originalAuthor] = Common.createEmptyUser(originalAuthor);\n      }\n    });\n  }\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_USER_PROFILE: {\n      const { publicKey, profile } = action.data;\n\n      if (!publicKey || !profile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey],\n          ...profile\n        }\n      };\n    }\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { publicKey, profile: newProfile } = action.data;\n      const oldProfile = state[publicKey];\n\n      if (!oldProfile || !newProfile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...oldProfile,\n          ...newProfile\n        }\n      };\n    }\n    case CHAT_ACTIONS.LOAD_CHAT_DATA: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadChatDataAction} */ (action);\n\n        data.contacts.forEach(({ pk }) => {\n          if (!draft[pk]) {\n            draft[pk] = Common.createEmptyUser(pk);\n          }\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_SENT_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadSentRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.SENT_REQUEST: {\n      return produce(state, draft => {\n        const { data: pk } = /** @type {SentRequestAction} */ (action);\n\n        if (!draft[pk]) {\n          draft[pk] = Common.createEmptyUser(pk);\n        }\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n  myServices: {},\n  services: {},\n  boughtServices: {}\n};\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const { id, serviceInfo } = action.data;\n      const tmp = { ...state.myServices };\n      tmp[id] = serviceInfo;\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE: {\n      const id = action.data;\n      const tmp = { ...state.myServices };\n      delete tmp[id];\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE: {\n      const { orderAck, owner, serviceID } = action.data;\n      const servicesTmp = { ...state.boughtServices };\n\n      if (!servicesTmp[owner]) {\n        servicesTmp[owner] = {};\n      }\n      const selectedService = servicesTmp[owner];\n      if (!selectedService[serviceID]) {\n        selectedService[serviceID] = [];\n      }\n      selectedService[serviceID].push(orderAck);\n      return { ...state, boughtServices: servicesTmp };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/AppActions\";\n\nconst INITIAL_STATE = {\n  dialogText: '',\n  dialogHasCallback:false\n};\nconst app = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.OPEN_DIALOG: {\n      const {text,hasCallback} = action.data\n      return { ...state, dialogText: text,dialogHasCallback:hasCallback };\n    }\n    case ACTIONS.CLOSE_DIALOG: {\n      return {...state, dialogText: '',dialogHasCallback: false}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","import produce from \"immer\";\n\nimport { CoordinateWithHash } from \"../schema\";\n\nimport {\n  coordinateDeleted,\n  coordinateReceived\n} from \"../actions/CoordinateActions\";\n\nconst INITIAL_STATE = {} as Record<string, CoordinateWithHash>;\n\nconst coordinates = produce((draft, action) => {\n  if (coordinateDeleted.match(action)) {\n    const { coordinateSHA256 } = action.payload;\n    delete draft[coordinateSHA256];\n  }\n  if (coordinateReceived.match(action)) {\n    const { coordinate, coordinateSHA256 } = action.payload;\n    draft[coordinateSHA256] = { ...coordinate, coordinateSHA256 };\n  }\n}, INITIAL_STATE);\n\nexport default coordinates;\n","import { combineReducers } from \"redux\";\nimport * as Common from \"shock-common\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\";\nimport AppReducer from \"./AppReducer\";\nimport CoordinatesReducer from \"./CoordinatesReducer\";\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders: OrdersReducer,\n  app: AppReducer,\n  coordinates: CoordinatesReducer,\n  users: () => {\n    return {} as Record<string, Common.User>;\n  }\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = (publicKey: string) => (\n  state: State\n): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey);\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectFollows = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.follows,\n  (selfPublicKey, follows) => {\n    return follows.filter(f => f.user !== selfPublicKey);\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { PublishedContent } from \"../../schema\";\n\nexport const selectOwnPublishedContent = createSelector(\n  (state: State) => state.content.publishedContent,\n  (state: State) => state.content.publicContent,\n  (privateContent, publicContent): Record<string, PublishedContent> => {\n    return {\n      ...privateContent,\n      ...publicContent\n    };\n  }\n);\n","import * as Common from \"shock-common\";\nimport pick from \"lodash/pick\";\nimport pickBy from \"lodash/pickBy\";\nimport { createSelector } from \"reselect\";\n\nimport * as Schema from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\nimport { selectFollows } from \"./follows\";\n\nexport const selectFeedPosts = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.posts,\n  (selfPublicKey, posts) => {\n    // TODO: fix self-follow bug\n    return pickBy(posts, (_, publicKey) => publicKey !== selfPublicKey);\n  }\n);\n\nexport const selectAllPosts = (state: State) => state.feed.posts;\n\nexport const selectAllSharedPosts = (state: State) => state.feed.sharedPosts;\n\nexport const selectSinglePost = (authorId: string, postID: string) => (\n  state: State\n): Schema.Post | null => {\n  return state.feed.posts[authorId]?.find(post => post.id === postID) || null;\n};\n\nexport const selectPostsNewestToOldest = (publicKey: string) => (\n  state: State\n): Array<Schema.Post | Common.SharedPost> => {\n  const posts = state.feed.posts[publicKey]?.slice() || [];\n  const sharedPostsMap = state.feed.sharedPosts[publicKey] || {};\n  const sharedPosts = Object.values(sharedPostsMap);\n  const allPosts = [...posts, ...sharedPosts];\n\n  allPosts.sort((a, b) => {\n    const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n    const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n    return beta - alpha;\n  });\n\n  return allPosts;\n};\n\nexport const selectSharedPost = (sharer: string, postID: string) => (\n  state: State\n): Common.SharedPost | null => {\n  const sharedPostsMap = state.feed.sharedPosts[sharer] || {};\n  return sharedPostsMap[postID] || null;\n};\n\nexport const selectAllPostsFromFollowedNewestToOldest = createSelector(\n  selectAllPosts,\n  selectAllSharedPosts,\n  selectFollows,\n  (posts, sharedPosts, follows): Array<Schema.Post | Common.SharedPost> => {\n    const followedPublicKeys = follows.map(f => f.user);\n    const filteredPosts = pick(posts, followedPublicKeys);\n    const filteredShared = pick(sharedPosts, followedPublicKeys);\n\n    const allNonShared = Object.values(filteredPosts).flat();\n    const allShared = Object.values(filteredShared)\n      .map(records => Object.values(records))\n      .flat();\n\n    const all = [...allNonShared, ...allShared].sort((a, b) => {\n      const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n      const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n      return beta - alpha;\n    });\n\n    return all;\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { CoordinateWithHash } from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nexport const selectAllCoordinates = createSelector(\n  (state: State) => state.coordinates,\n  (coordinates): CoordinateWithHash[] => {\n    return Object.values(coordinates);\n  }\n);\n\nexport const selectAllCoordinatesNewestToOldest = createSelector(\n  selectAllCoordinates,\n  (coords): CoordinateWithHash[] => {\n    return coords.slice().sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  }\n);\n\nexport const selectSingleCoordinate = (coordinateSHA256: string) => (\n  state: State\n) => state.coordinates[coordinateSHA256];\n","import {\n  useSelector as originalUseSelector,\n  TypedUseSelectorHook\n} from \"react-redux\";\n\nimport { State } from \"../../reducers\";\n\nexport const useSelector: TypedUseSelectorHook<State> = (selector, eqFn) =>\n  originalUseSelector(selector, eqFn);\n\nexport const selectRoot = (state: State) => state;\n\nexport const selectIsInContact = (publicKey: string) => (\n  state: State\n): boolean => {\n  const {\n    chat: { contacts, sentRequests, receivedRequests }\n  } = state;\n\n  const isContact = !!contacts.find(c => c.pk === publicKey);\n  const hasSentReq = !!sentRequests.find(r => r.pk === publicKey);\n  const hasReceivedReq = !!receivedRequests.find(r => r.pk === publicKey);\n\n  return isContact || hasSentReq || hasReceivedReq;\n};\n\nexport * from \"./auth\";\nexport * from \"./users\";\nexport * from \"./follows\";\nexport * from \"./publishedContent\";\nexport * from \"./feed\";\nexport * from \"./coordinates\";\n","import {\n  createStore,\n  applyMiddleware,\n  compose,\n  AnyAction,\n  Action\n} from \"redux\";\nimport thunk, { ThunkDispatch } from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport {\n  useSelector as origUseSelector,\n  useDispatch as originalUseDispatch\n} from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport const useDispatch = (): ThunkDispatch<State, undefined, Action> => {\n  return originalUseDispatch() as ThunkDispatch<State, undefined, Action>;\n};\n\nexport * from \"./selectors\";\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\nimport {\n  PublishedContent,\n  isPublishedContent,\n  PublicContentItem,\n  isPublicContentItem\n} from \"../schema\";\nimport { parseJson, logger } from \"../utils\";\nimport { openDialog } from \"./AppActions\";\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB: \"content/setSeedProviderPub\",\n  SET_SEED_INFO: \"content/setSeedInfo\",\n\n  PUBLISHED_CONTENT_ADDED: \"content/publishedContentAdded\",\n  PUBLISHED_CONTENT_REMOVED: \"content/publishedContentRemoved\",\n\n  ADD_UNLOCKED_CONTENT: \"content/addUnlocked\",\n  ADD_STREAM: \"content/addStream\",\n  REMOVE_STREAM: \"content/removeStream\",\n  ADD_AVAILABLE_TOKEN: \"content/addToken\",\n  REMOVE_USED_TOKEN: \"content/removeToken\",\n  ADD_STREAM_TOKEN: \"content/addStreamToken\",\n  REMOVE_STREAM_TOKEN: \"content/removeStreamToken\"\n} as const;\n\nexport const setSeedProviderPub = (\n  pub,\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    let value: string | Record<string, any> = {\n      $$__ENCRYPT__FOR: \"me\",\n      value: pub\n    };\n    if (!pub) {\n      value = \"\";\n    }\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>seedServiceProviderPubKey\",\n      value\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (\n  seedUrl: string,\n  seedToken: string,\n  dontBackup = false\n) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0, -1) : seedUrl;\n  if (!dontBackup) {\n    const infoS = JSON.stringify({ seedUrl: cleanUrl, seedToken });\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>seedServiceSeedData\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: infoS\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: { seedUrl: cleanUrl, seedToken }\n  });\n};\n\nexport const publishedContentAdded = createAction<{\n  content: PublishedContent;\n  res: { ok: boolean; id: string };\n}>(ACTIONS.PUBLISHED_CONTENT_ADDED);\n\nexport const publicContentAdded = createAction<{\n  item: PublicContentItem;\n}>(\"content/publicContentAdded\");\n\nexport const addPublishedContent = (\n  content: PublishedContent | PublicContentItem,\n  type: \"public\" | \"private\"\n) => async dispatch => {\n  if (type === \"public\") {\n    if (!isPublicContentItem(content)) {\n      throw new TypeError(\n        `Expected content to upload to be a PublicContentItem`\n      );\n    }\n\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>publishedContentPublic>${content.id}`,\n      value: content\n    });\n\n    dispatch(\n      publicContentAdded({\n        item: content\n      })\n    );\n\n    return content;\n  } else {\n    const { data } = await Http.post<{ ok: boolean; id: string }>(\n      \"/api/gun/set\",\n      {\n        path: \"$user>publishedContent\",\n        value: {\n          $$__ENCRYPT__FOR: \"me\",\n          value: JSON.stringify(content)\n        }\n      }\n    );\n    dispatch(\n      publishedContentAdded({\n        content,\n        res: data\n      })\n    );\n    return data;\n  }\n};\n\nexport const publishedContentRemoved = createAction<{ id: string }>(\n  ACTIONS.PUBLISHED_CONTENT_REMOVED\n);\n\nexport const unlockContent = (amt, owner, postID) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"contentReveal\",\n    amt,\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: postID\n  });\n  const revealRes = data.orderAck.response;\n  if (revealRes && revealRes.unlockedContents) {\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type: ACTIONS.ADD_UNLOCKED_CONTENT,\n          data: { contentPath: `${owner}>posts>${postID}`, content }\n        });\n      }\n    }\n  }\n};\nexport const addStream = (\n  {\n    seedToken,\n    liveToken,\n    streamUrl,\n    streamPostId,\n    streamContentId,\n    streamStatusUrl,\n    streamBroadcasterUrl\n  },\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: JSON.stringify({\n          seedToken,\n          liveToken,\n          streamUrl,\n          streamPostId,\n          streamContentId,\n          streamStatusUrl,\n          streamBroadcasterUrl\n        })\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {\n      seedToken,\n      liveToken,\n      streamUrl,\n      streamPostId,\n      streamContentId,\n      streamStatusUrl,\n      streamBroadcasterUrl\n    }\n  });\n};\nexport const removeStream = (\n  dontBackup = false,\n  noDialog = false\n) => async dispatch => {\n  if (!noDialog) {\n    openDialog({\n      text: \"The recording of the stream will be published in a few moments.\"\n    })(dispatch);\n  }\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: \"NO DATA\"\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeUnavailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\n\nconst OWN_PUBLISHED_CONTENT_QUERY = \"$user::publishedContent::map.on\";\n\nexport const subOwnPublishedContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  console.debug(`Subscribing to own published content`);\n  const subscription = await rifle({\n    query: OWN_PUBLISHED_CONTENT_QUERY,\n    reconnect: true,\n    publicKey: \"me\",\n    onData: async (content: string, key) => {\n      try {\n        console.debug(`Received own content:`);\n        console.debug(content);\n\n        if (typeof key !== \"string\") {\n          throw new TypeError(`Invalid content key received: ${key}`);\n        }\n\n        if (!content) {\n          dispatch(\n            publishedContentRemoved({\n              id: key\n            })\n          );\n          return;\n        }\n\n        if (typeof content !== \"string\") {\n          throw new TypeError(\n            `Invalid content (in key ${key}) received (${JSON.stringify(\n              content\n            )})`\n          );\n        }\n\n        const parsed = parseJson(content);\n\n        if (!isPublishedContent(parsed)) {\n          throw new TypeError(\n            `Invalid content received (might be incomplete replication): ${JSON.stringify(\n              parsed,\n              null,\n              2\n            )}`\n          );\n        }\n\n        dispatch(\n          publishedContentAdded({\n            content: parsed,\n            res: {\n              id: key,\n              ok: true\n            }\n          })\n        );\n      } catch (e) {\n        console.error(`Error inside own published content sub:`);\n        console.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n\nexport const unsubOwnPublishedContent = () => () => {\n  console.debug(`Unsubbing own published content.`);\n  unsubscribeRifleByQuery(OWN_PUBLISHED_CONTENT_QUERY);\n};\n\nexport const subOwnPublicContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  logger.debug(`Subscribing to own public content`);\n  const subscription = await rifle({\n    query: \"$user::publishedContentPublic::map.on\",\n    reconnect: true,\n    onError(e) {\n      alert(`Error inside own public content rifle: ${JSON.stringify(e)}`);\n      logger.error(`Error inside own public content rifle: `, e);\n    },\n    onData: async (item: unknown) => {\n      try {\n        if (item === null) {\n          return; // was deleted\n        }\n        logger.debug(`Received own public item:`);\n        logger.debug(item);\n\n        if (!isPublicContentItem(item)) {\n          throw new TypeError(\n            `Invalid public content item: ${JSON.stringify(item, null, 2)}`\n          );\n        }\n\n        dispatch(\n          publicContentAdded({\n            item\n          })\n        );\n      } catch (e) {\n        logger.error(`Error inside own public content sub:`);\n        logger.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n","// @ts-check\nimport Http from \"../utils/Http\";\nimport { DateTime } from \"luxon\";\nimport { v4 as uuidv4 } from \"uuid\";\n/**\n * @typedef {import('shock-common').Message} RawMessage\n */\n\nimport {\n  getChats,\n  getReceivedRequests,\n  getSentRequests,\n  rifle,\n  subscribeSocket\n} from \"../utils/WebSocket\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport * as Schema from \"../schema\";\nimport * as Utils from \"../utils\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').SentRequest} SentRequest\n * @typedef {import(\"../schema\").ReceivedRequest} ReceivedRequest\n * @typedef {import('../schema').ChatMessage} ChatMessage\n */\n\nexport const ACTIONS = {\n  LOAD_CHAT_DATA: /** @type {\"chat/loadData\"} */ (\"chat/loadData\"),\n  LOAD_SENT_REQUESTS: /** @type {\"chat/loadSentRequests\"} */ (\"chat/loadSentRequests\"),\n  LOAD_RECEIVED_REQUESTS: /** @type {\"chat/loadReceivedRequests\"} */ (\"chat/loadReceivedRequests\"),\n  SET_CHAT_CONTACTS: \"chat/contacts\",\n  SET_CHAT_MESSAGES: \"chat/messages\",\n  SENT_REQUEST: /** @type {\"chat/request/sent\"} */ (\"chat/request/sent\"),\n  ACCEPT_HANDSHAKE_REQUEST: \"chat/request/accept\",\n  DECLINE_HANDSHAKE_REQUEST: \"chat/request/decline\",\n  SENDING_MESSAGE: \"chat/message/sending\",\n  SENT_MESSAGE: \"chat/message/sent\",\n  FAILED_MESSAGE: \"chat/message/failed\",\n  RECEIVED_MESSAGE: /** @type {\"chat/message/received\"} */ (\"chat/message/received\"),\n  CHAT_WAS_DELETED: /** @type {'chat/deleted'} */ (\"chat/deleted\")\n};\n\n/**\n * @typedef {object} SentRequestAction\n * @prop {typeof ACTIONS.SENT_REQUEST} type\n * @prop {string} data The public key.\n */\n\n/**\n * @typedef {object} LoadChatDataAction\n * @prop {typeof ACTIONS.LOAD_CHAT_DATA} type\n * @prop {{ messages: Record<string, ChatMessage[]> , contacts: Contact[] }} data\n */\n\n/**\n * @typedef {object} LoadSentRequestsAction\n * @prop {typeof ACTIONS.LOAD_SENT_REQUESTS} type\n * @prop {SentRequest[]} data\n */\n\n/**\n * @typedef {object} LoadReceivedRequestsAction\n * @prop {typeof ACTIONS.LOAD_RECEIVED_REQUESTS} type\n * @prop {ReceivedRequest[]} data\n */\n\n/**\n * @typedef {object} ReceivedMessageAction\n * @prop {typeof ACTIONS.RECEIVED_MESSAGE} type\n * @prop {ChatMessage} data\n */\n\nexport const loadChatData = () => async dispatch => {\n  const data = await getChats();\n  console.log(\"LOAD_CHAT_DATA:\", data);\n\n  dispatch({\n    type: ACTIONS.LOAD_CHAT_DATA,\n    data\n  });\n};\n\nexport const loadSentRequests = () => async dispatch => {\n  const sentRequests = await getSentRequests();\n\n  /** @type {LoadSentRequestsAction} */\n  const action = {\n    type: ACTIONS.LOAD_SENT_REQUESTS,\n    data: sentRequests.map(request => {\n      /** @type {SentRequest} */\n      const req = {\n        id: request.id,\n        pk: request.recipientPublicKey,\n        avatar: request.recipientAvatar,\n        displayName: request.recipientDisplayName,\n        changedAddress: request.recipientChangedRequestAddress,\n        timestamp: request.timestamp,\n        loading: false\n      };\n\n      return req;\n    })\n  };\n\n  dispatch(action);\n};\n\nexport const loadReceivedRequests = () => async (dispatch, getState) => {\n  const receivedRequests = await getReceivedRequests();\n\n  /** @type {LoadReceivedRequestsAction} */\n  const action = {\n    type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n    data: receivedRequests.map(request => {\n      /** @type {ReceivedRequest} */\n      const req = {\n        id: request.id,\n        pk: request.requestorPK,\n        avatar: request.requestorAvatar,\n        displayName: request.requestorDisplayName,\n        timestamp: request.timestamp\n      };\n\n      return req;\n    })\n  };\n\n  dispatch(action);\n};\n\n/**\n * @param {string} userPublicKey\n * @param {string} recipientPublicKey\n * @returns {(dispatch: (action: any) => void) => Promise<{off(): void}>}\n */\nexport const subscribeChatMessages = (\n  userPublicKey,\n  recipientPublicKey\n) => async dispatch => {\n  try {\n    const { data: incomingId } = await Http.get(\n      `/api/gun/user/once/userToIncoming>${recipientPublicKey}`,\n      {\n        headers: {\n          \"public-key-for-decryption\": userPublicKey\n        }\n      }\n    );\n\n    if (!incomingId.data) {\n      throw new Error(`Unable to retrieve incoming ID for selected contact.`);\n    }\n\n    const incomingMessages = await rifle({\n      query: `${recipientPublicKey}::outgoings>${incomingId.data}>messages::map.on`,\n      publicKey: recipientPublicKey,\n      onData: (message, id) => {\n        if (!message.body || message.body === initialMessagePrefix) {\n          return;\n        }\n        /** @type {RawMessage} */\n        const rawMsg = message;\n\n        /** @type {ChatMessage} */\n        const msg = {\n          body: rawMsg.body,\n          id,\n          localId: id,\n          outgoing: false,\n          recipientPublicKey,\n          status: Schema.CHAT_MESSAGE_STATUS.SENT,\n          timestamp: rawMsg.timestamp\n        };\n\n        /** @type {ReceivedMessageAction} */\n        const action = {\n          type: ACTIONS.RECEIVED_MESSAGE,\n          data: msg\n        };\n\n        dispatch(action);\n      }\n    });\n\n    return incomingMessages;\n  } catch (e) {\n    Utils.logger.error(\n      `Error inside subscribeChatMessages, recipient public key: ${recipientPublicKey}: `,\n      e\n    );\n    return Promise.resolve({\n      off() {}\n    });\n  }\n};\n\nexport const acceptHandshakeRequest = requestId => async dispatch => {\n  const { data } = await Http.put(`/api/gun/requests/${requestId}`, {\n    accept: true\n  });\n\n  dispatch({\n    type: ACTIONS.ACCEPT_HANDSHAKE_REQUEST,\n    data: requestId\n  });\n\n  return data;\n};\n\nexport const sendHandshakeRequest = publicKey => async (dispatch, getState) => {\n  const { data } = await Http.post(`/api/gun/requests`, {\n    publicKey\n  });\n\n  /** @type {SentRequest[]} */\n  const sentRequests = getState().chat.sentRequests;\n  const [userExists] = sentRequests.filter(request => request.pk === publicKey);\n\n  if (!userExists) {\n    /** @type {SentRequestAction} */\n    const action = {\n      type: ACTIONS.SENT_REQUEST,\n      data: publicKey\n    };\n    dispatch(action);\n  }\n\n  return data;\n};\n\nexport const sendMessage = ({\n  publicKey,\n  message,\n  localId = null\n}) => async dispatch => {\n  const tempId = localId ?? uuidv4();\n  try {\n    dispatch({\n      type: ACTIONS.SENDING_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n    const { data } = await Http.post(`/api/gun/chats/${publicKey}`, {\n      body: message\n    });\n    console.log(data);\n    dispatch({\n      type: ACTIONS.SENT_MESSAGE,\n      data: { ...data, localId: tempId, recipientPublicKey: publicKey }\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIONS.FAILED_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n  }\n};\n\n/**\n * @param {string} publicKey\n */\nexport const chatWasDeleted = publicKey => ({\n  type: ACTIONS.CHAT_WAS_DELETED,\n  data: {\n    publicKey\n  }\n});\n\nexport const subChats = () => async dispatch => {\n  try {\n    console.debug(`Subbing to chats`);\n    const sub = await subscribeSocket({\n      callback(err, chats) {\n        if (err) {\n          console.error(`Error in chats subscription: `, err);\n        } else {\n          console.debug(`sub chat data received: `, chats);\n\n          const contacts = chats.map(chat => ({\n            pk: chat.recipientPublicKey,\n            avatar: chat.recipientAvatar,\n            displayName: chat.recipientDisplayName,\n            didDisconnect: chat.didDisconnect\n          }));\n\n          const messages = chats.reduce(\n            (messages, chat) => ({\n              ...messages,\n              [chat.recipientPublicKey]: chat.messages\n                ?.filter(\n                  message =>\n                    message.body &&\n                    message.body.trim() &&\n                    message.body !== initialMessagePrefix\n                )\n                .sort((a, b) => b.timestamp - a.timestamp)\n            }),\n            {}\n          );\n\n          dispatch({\n            type: ACTIONS.LOAD_CHAT_DATA,\n            data: { contacts, messages }\n          });\n        }\n      },\n      eventName: \"chats\"\n    });\n\n    return sub;\n  } catch (e) {\n    alert(`Could not subscribe to chats: ${e.message}`);\n    console.error(`Could not subscribe to chats: `, e);\n  }\n};\n\nexport const subReceivedRequests = () => async dispatch => {\n  try {\n    console.debug(`Subbing to received requests`);\n    const sub = await subscribeSocket({\n      callback(err, receivedRequests) {\n        if (err) {\n          console.error(`Error in received requests subscription: `, err);\n        } else {\n          console.debug(\n            `sub received requests data received: `,\n            receivedRequests\n          );\n\n          /** @type {LoadReceivedRequestsAction} */\n          const action = {\n            type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n            data: receivedRequests.map(request => {\n              /** @type {ReceivedRequest} */\n              const req = {\n                id: request.id,\n                pk: request.requestorPK,\n                avatar: request.requestorAvatar,\n                displayName: request.requestorDisplayName,\n                timestamp: request.timestamp\n              };\n\n              return req;\n            })\n          };\n\n          dispatch(action);\n        }\n      },\n      eventName: \"receivedRequests\"\n    });\n\n    return sub;\n  } catch (e) {\n    alert(`Could not subscribe to received requests: ${e.message}`);\n    console.error(`Could not subscribe to received requests: `, e);\n  }\n};\n\nexport const subSentRequests = () => async dispatch => {\n  try {\n    console.debug(`Subbing to sent requests`);\n    const sub = await subscribeSocket({\n      callback(err, sentRequests) {\n        if (err) {\n          console.error(`Error in sent requests subscription: `, err);\n        } else {\n          console.debug(`sub sent requests data received: `, sentRequests);\n\n          /** @type {LoadSentRequestsAction} */\n          const action = {\n            type: ACTIONS.LOAD_SENT_REQUESTS,\n            data: sentRequests.map(request => {\n              /** @type {SentRequest} */\n              const req = {\n                id: request.id,\n                pk: request.recipientPublicKey,\n                avatar: request.recipientAvatar,\n                displayName: request.recipientDisplayName,\n                changedAddress: request.recipientChangedRequestAddress,\n                timestamp: request.timestamp,\n                loading: false\n              };\n\n              return req;\n            })\n          };\n\n          dispatch(action);\n        }\n      },\n      eventName: \"sentRequests\"\n    });\n\n    return sub;\n  } catch (e) {\n    alert(`Could not subscribe to sent requests: ${e.message}`);\n    console.error(`Could not subscribe to sent requests: `, e);\n  }\n};\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\",\n  LOAD_LIGHTNING_INFO: \"wallet/lightningInfo/load\",\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  try {\n    const { data } = await Http.get(`/api/lnd/balance`);\n\n    dispatch({\n      type: ACTIONS.LOAD_BALANCE,\n      data: {\n        channelBalance: data.channel_balance,\n        confirmedBalance: data.confirmed_balance,\n        pendingChannelBalance: data.pending_channel_balance\n      }\n    });\n  } catch (e) {\n    console.error(\n      `When trying to fetch the balance for the wallet, an error ocurred:`,\n      e\n    );\n  }\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\n      \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n    );\n    const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n    dispatch({\n      type: ACTIONS.LOAD_USD_RATE,\n      data: exchangeRate\n    });\n  } catch (e) {\n    console.error(`An error happened when trying to fetch the USD rate:`, e);\n  }\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { transactions } = getState().wallet;\n\n    if (\n      (transactions.page >= page && !reset) ||\n      transactions.totalPages < page\n    ) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/transactions\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred when fetching transactions (fetchTransactions()):`,\n      e\n    );\n  }\n};\n\nexport const fetchChannels = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n    dispatch({\n      type: ACTIONS.LOAD_CHANNELS,\n      data: data.channels\n    });\n  } catch (e) {\n    console.error(\n      `An ocurred ocurred when fetching channels (fetchChannels()):`,\n      e\n    );\n  }\n};\n\nexport const fetchPeers = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n    dispatch({\n      type: ACTIONS.LOAD_PEERS,\n      data: data.peers\n    });\n\n    return data;\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching peers (fetchPeers()) (will be re-thrown):`,\n      e\n    );\n    throw e;\n  }\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { invoices } = getState().wallet;\n\n    if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/invoices\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching invoices (fetchInvoices()):`,\n      e\n    );\n  }\n};\n\nconst fetchPayments = ({ page, itemsPerPage = 10, reset = false }) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    const { payments } = getState().wallet;\n\n    if ((payments.page >= page && !reset) || payments.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/payments\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_PAYMENTS : ACTIONS.LOAD_MORE_PAYMENTS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching payments (fetchPayments()):`,\n      e\n    );\n  }\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n  } catch (err) {\n    console.error(\n      `An error ocurred while connecting peer --| ${host} |-- with public key --| ${publicKey} |-- in connectPeer()`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    dispatch(fetchChannels());\n  } catch (err) {\n    console.error(\n      `An error ocurred while opening a channel (openChannel()) with public key --| ${publicKey} |--, channel capacity: --| ${channelCapacity} |-- and push amount: --| ${pushAmount} |--:`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const FetchLightningInfo = () =>async dispatch => {\n  \n  try{\n    const {data}= await Http.get(\"/api/lnd/getinfo\");\n    dispatch({\n      type:ACTIONS.LOAD_LIGHTNING_INFO,\n      data\n    })\n  }catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n}\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Uint8Array;\n  ephemPublicKey: Uint8Array;\n  iv: Uint8Array;\n  mac: Uint8Array;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Uint8Array | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Uint8Array | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Uint8Array) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Uint8Array | string): Uint8Array => {\n  if (key instanceof Uint8Array) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName) ||\n  process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\";\n\nexport const generateKeyPair = () => {\n  const privateKey: Uint8Array = ECCrypto.generatePrivate();\n  const publicKey: Uint8Array = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  const processedPrivateKey = processKey(privateKey);\n  const decryptedMessageBuffer: Uint8Array = await ECCrypto.decrypt(\n    processedPrivateKey,\n    convertToEncryptedMessage(encryptedMessage)\n  );\n  const decryptedMessage = Buffer.from(decryptedMessageBuffer).toString();\n  const parsedMessage = safeParseJSON(decryptedMessage);\n\n  return parsedMessage;\n};\n","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { throttledExchangeKeyPair } from \"./EncryptionActions\";\nimport { connectSocket } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_WEBCLIENT_PREFIX:'node/setWebClientPrefix',\n  SET_RELAY_ID: 'auth/relay/set'\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nconst wait = ms => new Promise(r => setTimeout(r, ms));\n\nexport const fetchNodeHealth = (hostIP,relayId) => async dispatch => {\n  try {\n    const headers = {}\n    if(relayId){\n      headers['x-shock-hybrid-relay-id-x'] = relayId\n    }\n    const { data } = await Http.get(`${hostIP}/healthz`,{\n      headers\n    });\n    if (!data) {\n      throw new Error(\n        `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n      );\n    }\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (hostIP, resetData = true, relayId = null) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n    if(relayId){\n      dispatch(setRelayId(relayId))\n    }\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(throttledExchangeKeyPair())\n    ]);\n\n    connectSocket(host, true);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(`https://${sanitizedHostIP}`,relayId)(\n      dispatch\n    );\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(`http://${sanitizedHostIP}`,relayId)(\n    dispatch\n  );\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({ alias, password,invite = null }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/auth\",\n      {\n        alias,\n        password,\n        invite\n      },\n      {\n        // Unlocking can take significantly longer than other endpoints\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({ alias, password,invite = null }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password,\n      invite\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({ alias, password,invite = null }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/wallet\",\n      {\n        alias,\n        password,\n        invite\n      },\n      {\n        // Creating a wallet can take longer than any other endpoints.\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const setWebclientPrefix = prefix => dispatch => {\n  dispatch({\n    type:ACTIONS.SET_WEBCLIENT_PREFIX,\n    data:prefix\n  })\n}\n\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});","import * as Common from \"shock-common\";\nimport isFinite from \"lodash/isFinite\";\n\nconst createValidator = <T extends Record<string, unknown>>(\n  valMap: Record<keyof T, (val: any) => void>,\n  baseValidator: (o: unknown) => boolean = () => true\n) => (o: unknown): o is T => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  if (!baseValidator(o)) {\n    return false;\n  }\n\n  return Object.entries(valMap).every(([key, validator]) => {\n    return validator(o[key]);\n  });\n};\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  didDisconnect: boolean;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  tips: Record<string, number>;\n  type: \"post\";\n}\n\nexport interface PublishedContent {\n  type: \"image/embedded\" | \"video/embedded\";\n  magnetURI: string;\n  width: number;\n  height: number;\n  title: string;\n  description: string;\n}\n\nexport const isPublishedContent = (o: unknown): o is PublishedContent => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublishedContent;\n\n  if (typeof obj.description !== \"string\") {\n    return false;\n  }\n  if (typeof obj.height !== \"number\") {\n    return false;\n  }\n  if (typeof obj.width !== \"number\") {\n    return false;\n  }\n  if (!Common.isPopulatedString(obj.title)) {\n    return false;\n  }\n  if (obj.type !== \"image/embedded\" && obj.type !== \"video/embedded\") {\n    return false;\n  }\n  return true;\n};\n\nexport interface Subscription {\n  off(): void;\n}\n\nexport interface PublicContentItem extends PublishedContent {\n  id: string;\n  author: string;\n  timestamp: number;\n}\n\nexport const isPublicContentItem = (o: unknown): o is PublicContentItem => {\n  if (!isPublishedContent(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublicContentItem;\n\n  if (!Common.isPopulatedString(obj.author)) {\n    return false;\n  }\n\n  return typeof obj.timestamp === \"number\";\n};\n\nexport type FeeRate = \"hourFee\" | \"halfHourFee\" | \"fastestFee\";\n\nexport interface CoordinateWithHash extends Common.Coordinate {\n  coordinateSHA256: string;\n}\n\nexport interface ContentRevealCoordinateMetadataInbound {\n  /**\n   * The post ID.\n   */\n  ackInfo: string;\n  /**\n   * Content ID to magnet URI.\n   */\n  unlockedContents: Record<string, string>;\n}\n\nexport interface ContentRevealCoordinateMetadataOutbound {\n  /**\n   * Same as ContentRevealCoordinateMetadataInbound.\n   */\n  response: ContentRevealCoordinateMetadataInbound;\n  /**\n   * Order type.\n   */\n  type: \"orderAck\";\n}\n\n\n/**\n * Post as stored in Gun. Without `contentItems`.\n */\nexport type PostRaw = Omit<Common.RawPost, \"contentItems\">;\n\nexport const isPostRaw = createValidator<PostRaw>({\n  date: isFinite,\n  status: Common.isPopulatedString,\n  tags: (val: string) => typeof val === \"string\",\n  title: Common.isPopulatedString\n});\n\nexport interface NodeInfo {\n  uris: string[];\n  synced_to_chain: boolean;\n  synced_to_graph: boolean;\n  identity_pubkey: string;\n  best_header_timestamp: string;\n  block_height: number;\n  num_pending_channels: number;\n  version: string;\n}\n\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Schema from \"../schema\";\nimport * as Utils from \"../utils\";\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\",\n  RELOAD_FEED: \"feed/reload\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const loadSharedPost = (\n  originalPostId,\n  originalPublicKey,\n  sharerPublicKey\n) => async dispatch => {\n  const { data: post } = await Http.get(\n    `/api/gun/otheruser/${originalPublicKey}/load/posts>${originalPostId}`\n  );\n  dispatch(subscribeUserProfile(originalPublicKey));\n  const tipSet = post.data.tipsSet ? Object.values(post.data.tipsSet) : [];\n  const lenSet = tipSet.length;\n  const tot =\n    lenSet > 0 ? tipSet.reduce((acc, val) => Number(val) + Number(acc)) : 0;\n  dispatch({\n    type: ACTIONS.LOAD_SHARED_POST,\n    data: {\n      ...post.data,\n      authorId: originalPublicKey,\n      sharerId: sharerPublicKey,\n      id: originalPostId,\n      tipCounter: lenSet,\n      tipValue: tot\n    }\n  });\n};\n\nexport const postDeleted = createAction<{\n  author: string;\n  id: string;\n}>(\"feed/postDeleted\");\n\nexport const postReceived = createAction<{\n  author: string;\n  id: string;\n  post: Schema.PostRaw;\n}>(\"feed/postReceived\");\n\nexport const subSinglePost = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}::on`,\n      onData(post: string) {\n        Utils.logger.debug(\n          `Single post with id ${postID} from ...${author.slice(-8)} `,\n          post\n        );\n\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author,\n              id: postID\n            })\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )}: ${e.message}`\n        );\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nexport const subscribeUserPosts = (publicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    Utils.logger.debug(`Subbing to posts from ...${publicKey.slice(-8)}`);\n\n    const subscription = rifle({\n      query: `${publicKey}::posts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside posts subscription for ...${publicKey.slice(-8)} -> `,\n          e\n        );\n        alert(\n          `Error inside posts subscription for ...${publicKey.slice(-8)}: ${\n            e.message\n          }`\n        );\n      },\n      onData: (post: unknown, postID: string) => {\n        Utils.logger.debug(\n          `Post with id ${postID} from ...${publicKey.slice(-8)} `,\n          post\n        );\n\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author: publicKey,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author: publicKey,\n              id: postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In posts subscription for user ...${publicKey.slice(\n              -8\n            )}, invalid data -> `,\n            post\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to posts for ...${publicKey.slice(-8)} -> `,\n      e\n    );\n    alert(`Could not sub to posts for ...${publicKey.slice(-8)}: ${e.message}`);\n\n    return () => {};\n  }\n};\n\nexport const contentItemReceived = createAction<{\n  author: string;\n  contentItem: Common.ContentItem;\n  id: string;\n  postID: string;\n}>(\"feed/contentItemReceived\");\n\nexport const subPostContent = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    Utils.logger.debug(\n      `Subbing to post content from ...${author.slice(-8)} for post ${postID}`\n    );\n\n    const subscription = rifle({\n      query: `${author}::posts>${postID}>contentItems::map.on`,\n      onData(contentItem: unknown, id: string) {\n        Utils.logger.debug(\n          `Post content subscription from ..${author.slice(\n            -8\n          )} for post ${postID} -> `,\n          contentItem\n        );\n\n        // CAST: unfortunate isContentItem typings\n        if (Common.isContentItem(contentItem)) {\n          dispatch(\n            contentItemReceived({\n              author,\n              contentItem,\n              id,\n              postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Invalid content item in post content subscription from ..${author.slice(\n              -8\n            )} for post ${postID} -> `,\n            contentItem\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID} -> `,\n          e\n        );\n        alert(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID}: ${e.message}`\n        );\n      }\n    });\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to post content from ...${author.slice(\n        -8\n      )} for post ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not sub to posts from ...${author.slice(-8)} for post ${postID}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async dispatch => {\n  const subscription = await rifle({\n    query: FOLLOWS_QUERY,\n    reconnect: true,\n    onData: async (follow, key) => {\n      console.info(`processing follow`);\n      console.info(follow);\n      if (typeof key !== \"string\") {\n        console.warn(`Invalid follow key received: ${key}`);\n        return;\n      }\n\n      if (!follow) {\n        dispatch(removeFollow(key));\n        return;\n      }\n\n      if (typeof follow.user !== \"string\") {\n        console.warn(`Invalid follow user received (${follow.user})`);\n        return;\n      }\n\n      dispatch(addFollow(follow));\n    }\n  });\n\n  console.debug(\"subbing follows\");\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  unsubscribeRifleByQuery(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n\nexport const reloadFeed = () => ({\n  type: ACTIONS.RELOAD_FEED\n});\n\n// #region sharedPosts\n\nexport const sharedPostDeleted = createAction<{\n  postID: string;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostDeleted\");\n\nexport const sharedPostReceived = createAction<{\n  originalAuthor: string;\n  postID: string;\n  shareDate: number;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostReceived\");\n\nexport const subSharedPosts = (sharerPublicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    Utils.logger.debug(\n      `Subbing to shared posts from ...${sharerPublicKey.slice(-8)}`\n    );\n\n    const subscription = rifle({\n      query: `${sharerPublicKey}::sharedPosts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )}: ${e.message}`\n        );\n      },\n      onData: (sharedPost: unknown, postID: string) => {\n        Utils.logger.debug(\n          `Shared post with id ${postID} from ...${sharerPublicKey.slice(-8)} `,\n          sharedPost\n        );\n\n        if (Common.isSharedPostRaw(sharedPost)) {\n          dispatch(\n            sharedPostReceived({\n              originalAuthor: sharedPost.originalAuthor,\n              postID,\n              shareDate: sharedPost.shareDate,\n              sharerPublicKey\n            })\n          );\n        } else if (sharedPost === null) {\n          dispatch(\n            sharedPostDeleted({\n              postID,\n              sharerPublicKey\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In shared posts subscription for user ...${sharerPublicKey.slice(\n              -8\n            )}, invalid data -> `,\n            sharedPost\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\n// #endregion sharedPosts\n\nexport const postTipReceived = createAction<{\n  author: string;\n  postID: string;\n  tipAmt: number;\n  tipID: string;\n}>(\"feed/postTipReceived\");\n\nexport const subPostTips = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}::map.on`,\n      onData(tipAmt: unknown, tipID: string) {\n        Utils.logger.debug(\n          `Post ${postID} tips sub, tipID ${tipID} -> `,\n          tipAmt\n        );\n\n        if (typeof tipAmt === \"number\") {\n          dispatch(\n            postTipReceived({\n              author,\n              postID,\n              tipAmt,\n              tipID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Post ${postID} tips sub, tipID ${tipID} got non number value -> `,\n            tipAmt\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID}: ${e.message}`\n    );\n    return () => {};\n  }\n};\n","import * as Common from \"shock-common\";\n\nimport * as Utils from \"../utils\";\nimport {\n  rifle,\n  rifleCleanup,\n  unsubscribeRifleByQuery\n} from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  LOAD_USER_PROFILE: \"userProfiles/profiles/load\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\",\n  UPDATE_USER_PROFILE: \"userProfiles/profiles/update\"\n};\n\nconst subscribedProfiles = new Set();\n\nexport const updateUserProfile = (\n  publicKey: string,\n  profile: Partial<Common.User>\n) => ({\n  type: ACTIONS.UPDATE_USER_PROFILE,\n  data: {\n    publicKey,\n    profile\n  }\n});\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => (\n  dispatch: (action: object) => void,\n  getState: () => {\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  if (subscribedProfiles.has(publicKey)) {\n    return () => {};\n  }\n\n  console.info(\"subbing user...\" + publicKey);\n  subscribedProfiles.add(publicKey);\n\n  const subscription = rifle({\n    query: `${publicKey}::Profile::on`,\n    reconnect: true,\n    onData: profile => {\n      const { [publicKey]: existingUser } = getState().userProfiles;\n\n      if (existingUser) {\n        dispatch({\n          type: ACTIONS.UPDATE_USER_PROFILE,\n          data: { publicKey, profile }\n        });\n        return profile;\n      }\n\n      dispatch({\n        type: ACTIONS.LOAD_USER_PROFILE,\n        data: { publicKey, profile }\n      });\n    }\n  });\n\n  const binarySub = rifle({\n    query: `${publicKey}::profileBinary::map.on`,\n    reconnect: true,\n    onData: (data, key: string) => {\n      if (key === \"avatar\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updateUserProfile(publicKey, {\n            avatar: data\n          })\n        );\n      } else if (key === \"header\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updateUserProfile(publicKey, {\n            header: data\n          })\n        );\n      } else {\n        Utils.logger.error(\n          `Unknown key: ${key} for user binary profile data gun RPC socket`\n        );\n      }\n    }\n  });\n\n  return () => {\n    rifleCleanup(subscription, binarySub)();\n    subscribedProfiles.delete(publicKey);\n  };\n};\n\nexport const unsubscribeUserProfile = (publicKey: string) => async () => {\n  unsubscribeRifleByQuery(`${publicKey}::Profile::on`);\n  unsubscribeRifleByQuery(`${publicKey}::profileBinary::map.on`);\n};\n","let dialogCallback = null\nexport const addDialogCallback = cb => {\n    dialogCallback = cb\n}\n\nexport const callDialogCallBack = async () => {\n    if(!dialogCallback){\n        return Promise.resolve()\n    }\n    return dialogCallback()\n}","import {\n  addDialogCallback,\n  callDialogCallBack\n} from '../utils/dialogCallback'\nexport const ACTIONS = {\n  OPEN_DIALOG: \"app/openDialog\",\n  CLOSE_DIALOG:\"app/closeDialog\"\n};\nexport const openDialog = ({text,cb = null}) => dispatch => {\n  addDialogCallback(cb)\n  dispatch({\n    type: ACTIONS.OPEN_DIALOG,\n    data: {text,hasCallback: !!cb}\n  });\n};\n\nexport const closeDialog = executeCb => dispatch => {\n  if(executeCb){\n    callDialogCallBack()\n  }\n  dispatch({\n    type: ACTIONS.CLOSE_DIALOG\n  });\n}","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <NavLink to=\"/Backups\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </NavLink>\n          <NavLink to=\"/walletSettings\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\" />\n            </div>\n            <p className=\"drawer-item-title unselectable\">Wallet Settings</p>\n          </NavLink>\n        </div>\n        <div className=\"drawer-bottom-section\">\n          {/*<NavLink className=\"drawer-item\" to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>*/}\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n          <NavLink to=\"/QRScanner\" onClick={close}>\n            <i\n              onClick={onClickScan}\n              className=\"icon-solid-scan\"\n              style={{ color: \"var(--main-blue)\" }}\n            ></i>\n          </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\n\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as Store from \"./store\";\nimport \"./styles/App.global.css\";\nimport Stream from \"./common/Post/components/Stream\";\nimport { dragElement } from \"./utils/ui\";\nimport { Http } from \"./utils\";\nimport {\n  addStream,\n  removeStream,\n  setSeedInfo,\n  setSeedProviderPub\n} from \"./actions/ContentActions\";\nimport { closeDialog } from \"./actions/AppActions\";\n\nimport { ToastContainer } from \"react-toastify\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst WalletSettingsPage = React.lazy(() => import(\"./pages/WalletSettings\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/PublishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst CreatePostPage = React.lazy(() => import(\"./pages/Profile/CreatePost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/GoLive/GoLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst Story = React.lazy(() => import(\"./pages/Story\"));\nconst Stories = React.lazy(() => import(\"./pages/Stories\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\nconst BackupsPage = React.lazy(() => import(\"./pages/Backups\"));\nconst PublicContentItemPage = React.lazy(() =>\n  import(\"./pages/PublicContentItem\")\n);\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const streamUrl = Store.useSelector(({ content }) => content.streamUrl);\n  const streamStatusUrl = Store.useSelector(\n    ({ content }) => content.streamStatusUrl\n  );\n  const streamContentId = Store.useSelector(\n    ({ content }) => content.streamContentId\n  );\n  const streamPostId = Store.useSelector(({ content }) => content.streamPostId);\n  const streamUserToken = Store.useSelector(\n    ({ content }) => content.streamUserToken\n  );\n  const streamLiveToken = Store.useSelector(\n    ({ content }) => content.streamLiveToken\n  );\n  const dialogText = Store.useSelector(({ app }) => app.dialogText);\n  const dialogHasCallback = Store.useSelector(\n    ({ app }) => app.dialogHasCallback\n  );\n  const [update, setUpdate] = useState(0);\n  const [isLive, setIsLive] = useState(false);\n  const [showFloatingPlayer, setShowFloatingPlayer] = useState(false);\n  // effect to update live status\n  useEffect(() => {\n    if (!streamStatusUrl) {\n      return;\n    }\n    let timeout;\n    const interval = setInterval(async () => {\n      try {\n        const res = await Http.get(streamStatusUrl);\n        if (!res.data.isLive) {\n          return;\n        }\n        setIsLive(true);\n        clearInterval(interval);\n        timeout = setTimeout(() => {\n          console.info(\"upp\");\n          setUpdate(Date.now());\n        }, 5000);\n      } catch (e) {}\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, [streamStatusUrl, setIsLive, setUpdate]);\n  const StreamRender = useMemo(() => {\n    return (\n      <Stream\n        hideRibbon={true}\n        item={{ magnetURI: streamUrl, liveStatus: \"live\" }}\n        timeout={1500}\n        id={undefined}\n        index={undefined}\n        postId={undefined}\n        tipCounter={undefined}\n        tipValue={undefined}\n        width={undefined}\n      />\n    );\n  }, [streamUrl, update]);\n\n  const stopStream = useCallback(() => {\n    Http.post(\"/api/stopStream\", {\n      postId: streamPostId,\n      contentId: streamContentId,\n      endUrl: `https://stream.shock.network/api/stream/end`,\n      urlForMagnet: `https://stream.shock.network/api/stream/torrent/${streamUserToken}`,\n      obsToken: streamLiveToken\n    });\n    removeStream()(dispatch);\n    console.info(streamUserToken);\n    history.push(\"/profile\");\n  }, [\n    dispatch,\n    history,\n    streamContentId,\n    streamLiveToken,\n    streamPostId,\n    streamUserToken\n  ]);\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated) {\n      // Get current user's profile on login\n      dispatch(subscribeUserProfile(publicKey));\n\n      return () => {\n        dispatch(unsubscribeUserProfile(publicKey));\n      };\n    }\n  }, [authenticated, dispatch, publicKey]);\n\n  useEffect(() => {\n    const tmp = !!(authenticated && isLive && streamUrl);\n    if (tmp !== showFloatingPlayer) {\n      setShowFloatingPlayer(tmp);\n    }\n  }, [\n    authenticated,\n    isLive,\n    streamUrl,\n    showFloatingPlayer,\n    setShowFloatingPlayer\n  ]);\n  useEffect(() => {\n    if (showFloatingPlayer) {\n      dragElement(\"floatyVideo\");\n    }\n  }, [showFloatingPlayer]);\n\n  //load info about content provider stored into gun\n  const loadContentInfo = useCallback(async () => {\n    try {\n      const { data: serviceProvider } = await Http.get(\n        `/api/gun/user/load/seedServiceProviderPubKey`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        serviceProvider &&\n        typeof serviceProvider.data === \"string\" &&\n        serviceProvider.data !== \"\"\n      ) {\n        setSeedProviderPub(serviceProvider.data, true)(dispatch);\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n    try {\n      const { data: seedData } = await Http.get(\n        `/api/gun/user/load/seedServiceSeedData`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        seedData &&\n        typeof seedData.data === \"string\" &&\n        seedData.data !== \"\"\n      ) {\n        const JObject = JSON.parse(seedData.data);\n        if (JObject && JObject.seedUrl && JObject.seedToken) {\n          setSeedInfo(JObject.seedUrl, JObject.seedToken, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated) {\n      return;\n    }\n    loadContentInfo();\n  }, [authenticated, loadContentInfo]);\n\n  //load info about current stream stored into gun\n  const loadStreamInfo = useCallback(async () => {\n    try {\n      const { data: streamData } = await Http.get(\n        `/api/gun/user/load/currentStreamInfo`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        streamData &&\n        typeof streamData.data === \"string\" &&\n        streamData.data !== \"\"\n      ) {\n        if (streamData.data === \"NO DATA\") {\n          removeStream(true, true)(dispatch);\n          return;\n        }\n        const JObject = JSON.parse(streamData.data);\n\n        if (JObject) {\n          addStream(JObject, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated) {\n      return;\n    }\n    loadStreamInfo();\n  }, [authenticated, loadStreamInfo]);\n\n  const DialogClose = useCallback(() => {\n    closeDialog(false)(dispatch);\n  }, [closeDialog, dispatch]);\n\n  const ConfirmDialog = useCallback(() => {\n    closeDialog(dialogHasCallback)(dispatch);\n  }, [dialogHasCallback, closeDialog, dispatch]);\n  return (\n    <FullHeight className=\"ShockWallet\">\n      {showFloatingPlayer && (\n        <div id=\"floatyVideo\" className=\"floaty-container\">\n          <i id=\"floatyVideoHeader\" className=\"fas fa-grip-vertical\"></i>\n          {StreamRender}\n          <button onClick={stopStream}>CLOSE STREAM</button>\n        </div>\n      )}\n      {dialogText && (\n        <div className=\"fixed-container\">\n          <div className=\"global-dialog\">\n            <p>{dialogText}</p>\n            <div className=\"d-flex flex-justify-center w-80\">\n              {dialogHasCallback && (\n                <button\n                  className=\"shock-form-button m-t-1 w-50\"\n                  onClick={DialogClose}\n                >\n                  Cancel\n                </button>\n              )}\n              {dialogHasCallback && <div style={{ width: \"1rem\" }}></div>}\n              <button\n                className=\"shock-form-button-confirm m-t-1 w-50\"\n                onClick={ConfirmDialog}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute\n            path=\"/walletSettings\"\n            exact\n            component={WalletSettingsPage}\n          />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:publicKey\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={CreatePostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey/:selectedView?\"\n            exact\n            component={OtherUserPage}\n          />\n          <PrivateRoute path=\"/Backups\" exact component={BackupsPage} />\n          <Route path=\"/story\" exact component={Story} />\n          <Route path=\"/stories\" exact component={Stories} />\n          <PrivateRoute\n            path=\"/item/:publicKey/:id\"\n            exact\n            component={PublicContentItemPage}\n          />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover={false}\n        closeButton={false}\n      />\n    </FullHeight>\n  );\n};\n\nexport default App;\n","export function dragElement(elementId) {\n  const elmnt = document.getElementById(elementId)\n  if(!elmnt){\n    console.log(\"draggable set fail\")\n    return\n      \n  }\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  document.getElementById(elmnt.id + \"Header\").onpointerdown = dragMouseDown;\n\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onpointerup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onpointermove = elementDrag;\n  }\n\n  function elementDrag(e) {\n      console.log(\"dragging yooo\")\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n  }\n\n  function closeDragElement() {\n      console.log(\"not anymore!\")\n    // stop moving when mouse button is released:\n    document.onpointerup = null;\n    document.onpointermove = null;\n  }\n  }\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Http from \"axios\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./styles/index.global.css\";\n\nHttp.defaults.timeout = 20000;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangingKeypair = null;\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(`/api/encryption/exchange`, {\n      publicKey: keyPair.publicKeyBase64,\n      deviceId\n    });\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n\nexport const throttledExchangeKeyPair = () => async dispatch => {\n  try {\n    if (!exchangingKeypair) {\n      exchangingKeypair = dispatch(exchangeKeyPair());\n    }\n\n    const result = await exchangingKeypair;\n\n    // eslint-disable-next-line require-atomic-updates\n    exchangingKeypair = null;\n\n    return result;\n  } catch (err) {\n    console.error(err);\n    exchangingKeypair = null;\n    throw err;\n  }\n};\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\nimport * as Common from \"shock-common\";\n\nexport function useForceUpdate(): () => void {\n  const [, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return update;\n}\n\n/**\n * Handle the ugly \"in 0 seconds\" cases (returning \"Just now\"), returns an empty\n * string if the timestamp is -1.\n */\nexport const formatTimestamp = (timestamp: number): string => {\n  if (timestamp === -1) {\n    return \"\";\n  }\n  const relativeTime = DateTime.fromMillis(\n    Common.normalizeTimestampToMs(timestamp)\n  ).toRelative();\n  return relativeTime === \"in 0 seconds\" ? \"Just now\" : relativeTime;\n};\n","import * as Common from \"shock-common\";\nimport { useCallback, useState } from \"react\";\n\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\nexport * from \"./WebSocket\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args),\n  debug: (...args: any[]) => console.debug(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not a url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n\nexport const useBooleanState = (initialState: boolean) => {\n  const [state, setState] = useState<boolean>(initialState);\n  const toggle = useCallback(() => {\n    setState(_state => !_state);\n  }, []);\n\n  return [state, toggle] as const;\n};\n\nexport const parseJson = (o: string) => JSON.parse(o) as unknown;\n\n/**\n * Returns null if the value provided is not a valid JSON string.\n * @param o\n */\nexport const safeParseJson = (o: unknown): unknown => {\n  if (!Common.isPopulatedString(o)) {\n    return null;\n  }\n  try {\n    return JSON.parse(o);\n  } catch (e) {\n    logger.warn(`Error inside safeParseJson() -> `, e);\n    logger.log(`Error inside safeParseJson(), string provided -> `, o);\n    return null;\n  }\n};\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\n/**\n * @param {string} source\n */\nexport const setSource = source => ({\n  type: ACTIONS.SET_SOURCE,\n  data: source\n});\n\n/**\n * @param {import('../schema').FeeRate} rate\n */\nexport const setRate = rate => ({\n  type: ACTIONS.SET_RATE,\n  data: rate\n});\n"],"sourceRoot":""}