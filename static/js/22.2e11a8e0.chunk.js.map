{"version":3,"sources":["common/Post/components/TipRibbon/index.js","common/Line/index.tsx","common/Post/components/Stream/index.tsx","pages/Profile/GoLive/components/Static.module.css","pages/Profile/GoLive/css/GoLive.module.css","images/obs-2.svg","pages/Profile/GoLive/components/Static.tsx","pages/Profile/GoLive/components/CamFeed.tsx","pages/Profile/GoLive/GoLive.tsx"],"names":["TipRibbon","tipCounter","tipValue","zoomed","className","style","opacity","Line","color","length","type","width","useMemo","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","STREAM_STATUS_URI","Stream","id","item","index","postId","hideRibbon","timeout","playerDOM","useRef","useState","isLive","setIsLive","videoStyle","useEffect","recheckInterval","checkStatus","a","magnetURI","split","seedToken","Http","get","data","player","videojs","current","autoplay","muted","aspectRatio","src","play","then","setInterval","clearInterval","cursor","display","ref","preload","controls","autoPlay","module","exports","Static","overlay","canvasRef","React","setWidth","divRefCb","useCallback","el","getBoundingClientRect","e","console","log","canvas","error","isMountedRef","c","getContext","imageData","createImageData","staticLoop","i","Math","random","putImageData","requestAnimationFrame","styles","root","gStyles","CamFeed","videoRef","errorMessage","setErrorMessage","video","navigator","mediaDevices","getUserMedia","stream","srcObject","catch","message","GoLive","dispatch","useDispatch","history","useHistory","seedProviderPub","Store","content","seedInfo","seedUrl","streamLiveToken","streamUserToken","availableTokens","streamUrl","userProfiles","selectedSource","setSelectedSource","loading","setLoading","streamToken","setStreamToken","setUserToken","paragraph","setParagraph","setError","rtmpUri","setRtmpUri","promptInfo","setPromptInfo","starting","setStarting","onSubmitCb","servicePrice","serviceID","RequestToken","finalSeedUrl","tokens","latestUserToken","post","token","streamData","obsToken","liveToken","streamPlaybackUrl","rtmp","replace","addStream","contentItems","push","text","isPreview","isPrivate","userToken","tags","title","status","closePrompt","submitPrompt","onSubmit","preventDefault","availableToken","key","Object","prototype","hasOwnProperty","call","SeedServiceProvided","service","copyToken","clipboard","writeText","copyUri","onInputChange","target","value","name","stopStream","removeStream","StreamRender","undefined","btnClass","DarkPage","pageTitle","scrolls","onClick","bind","Pad","amt","alt","obsLogo","border","padding","justifyContent","marginBottom","substring","onChange","disabled","Modal","modalOpen","toggleModal","contentStyle","Loader","fullScreen"],"mappings":"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","file":"static/js/22.2e11a8e0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst REACT_APP_SL_SEED_URI = \"https://webtorrent.shock.network\";\nconst STREAM_STATUS_URI = `${REACT_APP_SL_SEED_URI}/rtmpapi/api/streams/live`;\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  useEffect(() => {\n    let recheckInterval = null;\n    const checkStatus = async () => {\n      try {\n        //TODO regex (?) `${REACT_APP_SL_RTMP_API_URI}/live/${seedToken}/index.m3u8`\n        const [seedToken] = item.magnetURI\n          .split(\"/live/\")[1]\n          .split(\"/index.m3u8\");\n        const res = await Http.get(`${STREAM_STATUS_URI}/${seedToken}`);\n        if (!res.data.isLive) {\n          return false;\n        }\n        const player = videojs(playerDOM.current, {\n          autoplay: true,\n          muted: true,\n          aspectRatio: \"16:9\"\n        });\n        player.src({\n          src: item.magnetURI,\n          type: \"application/x-mpegURL\"\n        });\n        /*listen for 404s from the player\n        player.tech().on('retryplaylist', () => {\n          console.log('retryplaylist');\n        });*/\n        player.play();\n        return true;\n      } catch (err) {\n        return false;\n      }\n    };\n    checkStatus().then(isLive => {\n      if (isLive) {\n        setIsLive(true);\n        return;\n      }\n      recheckInterval = setInterval(async () => {\n        const isLive = await checkStatus();\n        if (isLive) {\n          setIsLive(true);\n          clearInterval(recheckInterval);\n          return;\n        }\n      }, timeout);\n    });\n\n    return () => {\n      clearInterval(recheckInterval);\n    };\n  }, [item, timeout]);\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            isLive ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Static_root__Dyzfu\",\"overlay\":\"Static_overlay__1DRAx\",\"overlay-text\":\"Static_overlay-text__2Rle7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stream-type-btn\":\"GoLive_stream-type-btn__3sNtJ\",\"stream-type-btn-icon\":\"GoLive_stream-type-btn-icon__2p9-P\",\"obs-logo\":\"GoLive_obs-logo__1p3Hh\"};","export default __webpack_public_path__ + \"static/media/obs-2.7c61e78e.svg\";","import React from \"react\";\n\nimport * as gStyles from \"../../../../styles\";\n\nimport styles from \"./Static.module.css\";\n\nexport interface StaticProps {\n  overlay?: string;\n}\n\nconst Static: React.FC<StaticProps> = ({ overlay }) => {\n  const canvasRef = React.useRef<HTMLCanvasElement>();\n  const [width, setWidth] = React.useState(100);\n\n  const divRefCb: React.RefCallback<HTMLElement> = React.useCallback(el => {\n    // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n    if (!el) return;\n    try {\n      setWidth(el.getBoundingClientRect().width);\n    } catch (e) {\n      console.log(`Error inside onWidth mechanism in <Static />:`);\n      console.log(e);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const { current: canvas } = canvasRef;\n\n    if (!canvas) {\n      console.error(`Canvas ref falsy inside <Static />.`);\n      return;\n    }\n\n    canvas.width = width;\n    canvas.height = (width / 16) * 9;\n  }, [width]);\n\n  const isMountedRef = React.useRef<boolean>(true);\n\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    const { current: canvas } = canvasRef;\n\n    if (!canvas) {\n      console.error(`Canvas ref falsy inside <Static />.`);\n      return;\n    }\n\n    const c = canvas.getContext(\"2d\");\n    const imageData = c.createImageData(canvas.width, canvas.height);\n\n    (function staticLoop() {\n      if (!isMountedRef.current) {\n        return;\n      }\n      for (let i = 0, a = imageData.data.length; i < a; i++) {\n        imageData.data[i] = (Math.random() * 255) | 0;\n      }\n\n      c.putImageData(imageData, 0, 0);\n\n      requestAnimationFrame(staticLoop);\n    })();\n\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, [width]);\n\n  return (\n    <>\n      <div className={styles.root}>\n        {overlay && (\n          <div className={styles.overlay}>\n            <span className={styles[\"overlay-text\"]}>{overlay}</span>\n          </div>\n        )}\n        <canvas ref={canvasRef} />\n      </div>\n\n      <div className={gStyles.width100} ref={divRefCb} />\n    </>\n  );\n};\n\nexport default Static;\n","import React from \"react\";\nimport c from \"classnames\";\n\nimport * as gStyles from \"../../../../styles\";\n\nimport Static from \"./Static\";\n\nconst CamFeed = () => {\n  const videoRef = React.useRef<HTMLVideoElement>();\n  const [width, setWidth] = React.useState(100);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  const divRefCb: React.RefCallback<HTMLElement> = React.useCallback(el => {\n    // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n    if (!el) return;\n    try {\n      setWidth(el.getBoundingClientRect().width);\n    } catch (e) {\n      setErrorMessage(`Error inside onWidth mechanism in <CamFeed />:`);\n      console.log(e);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const { current: video } = videoRef;\n\n    if (!video) {\n      setErrorMessage(`Video ref falsy inside <CamFeed />.`);\n      return;\n    }\n\n    video.width = width;\n    // video.height = (width / 16) * 9;\n  }, [width]);\n\n  React.useEffect(() => {\n    if (navigator?.mediaDevices?.getUserMedia) {\n      const { current: video } = videoRef;\n      navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then(stream => {\n          video.srcObject = stream;\n        })\n        .catch(function (e) {\n          setErrorMessage(`Could not get your camera feed: ${e.message}`);\n        });\n    } else {\n    }\n  }, []);\n\n  return (\n    <>\n      {errorMessage && <Static overlay={errorMessage} />}\n\n      <video\n        autoPlay\n        className={c(errorMessage && gStyles.displayNone)}\n        ref={videoRef}\n      />\n\n      <div className={gStyles.width100} ref={divRefCb} />\n    </>\n  );\n};\n\nexport default CamFeed;\n","import { useCallback, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport c from \"classnames\";\n\nimport \"../css/index.scoped.css\";\nimport { addStream, removeStream } from \"../../../actions/ContentActions\";\nimport Loader from \"../../../common/Loader\";\nimport Http from \"../../../utils/Http\";\nimport obsLogo from \"../../../images/obs-2.svg\";\nimport Stream from \"../../../common/Post/components/Stream\";\nimport { RequestToken } from \"../../../utils/seed\";\nimport { useHistory } from \"react-router\";\nimport Modal from \"../../../common/Modal\";\nimport * as Store from \"../../../store\";\nimport DarkPage from \"../../../common/DarkPage\";\nimport * as gStyles from \"../../../styles\";\nimport Line from \"../../../common/Line\";\nimport Pad from \"../../../common/Pad\";\n\nimport Static from \"./components/Static\";\nimport CamFeed from \"./components/CamFeed\";\nimport styles from \"./css/GoLive.module.css\";\n\nconst GoLive = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const seedProviderPub = Store.useSelector(\n    ({ content }) => content.seedProviderPub\n  );\n  const { seedUrl, seedToken } = Store.useSelector(\n    ({ content }) => content.seedInfo\n  );\n  const streamLiveToken = Store.useSelector(\n    ({ content }) => content.streamLiveToken\n  );\n  const streamUserToken = Store.useSelector(\n    ({ content }) => content.streamUserToken\n  );\n  const availableTokens = Store.useSelector(\n    ({ content }) => content.availableTokens\n  );\n  const streamUrl = Store.useSelector(({ content }) => content.streamUrl);\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const [selectedSource, setSelectedSource] = useState<\"camera\" | \"obs\">(\"obs\");\n  const [loading, setLoading] = useState(false);\n  const [streamToken, setStreamToken] = useState(streamLiveToken);\n  const [, setUserToken] = useState(streamUserToken);\n  const [paragraph, setParagraph] = useState(\"Look I'm streaming!\");\n  const [isLive] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [rtmpUri, setRtmpUri] = useState(\"\");\n  const [promptInfo, setPromptInfo] = useState(null);\n  const [starting, setStarting] = useState(false);\n  const onSubmitCb = useCallback(\n    async (servicePrice?, serviceID?) => {\n      try {\n        setLoading(true);\n        const { seedUrl: finalSeedUrl, tokens } = await RequestToken({\n          availableTokens,\n          seedProviderPub,\n          seedToken,\n          seedUrl,\n          serviceID,\n          servicePrice\n        });\n        const [latestUserToken] = tokens;\n        setUserToken(latestUserToken);\n        const { data: streamData } = await Http.post(\n          `${finalSeedUrl}/api/stream/auth`,\n          {\n            token: latestUserToken\n          }\n        );\n        const { token: obsToken } = streamData.data;\n        console.log(obsToken);\n        const liveToken = `${latestUserToken}?key=${obsToken}`;\n        setStreamToken(`${latestUserToken}?key=${obsToken}`);\n        const streamPlaybackUrl = `${finalSeedUrl}/rtmpapi/live/${latestUserToken}/index.m3u8`;\n        const rtmp = finalSeedUrl.replace(\"https\", \"rtmp\");\n        setRtmpUri(`${rtmp}/live`);\n        addStream(latestUserToken, liveToken, streamPlaybackUrl)(dispatch);\n        let contentItems = [];\n        if (paragraph !== \"\") {\n          contentItems.push({\n            type: \"text/paragraph\",\n            text: paragraph\n          });\n        }\n        contentItems.push({\n          type: \"stream/embedded\",\n          width: 0,\n          height: 0,\n          magnetURI: streamPlaybackUrl,\n          isPreview: false,\n          isPrivate: false,\n          userToken: latestUserToken\n        });\n        const res = await Http.post(`/api/gun/wall`, {\n          tags: [],\n          title: \"Post\",\n          contentItems\n        });\n        if (res.status === 200) {\n          console.log(\"post created successfully\");\n          setLoading(false);\n        } else {\n          setError(\"invalid response status\");\n          setLoading(false);\n        }\n      } catch (err) {\n        console.log(err);\n        setError(err?.errorMessage ?? err?.message);\n        setLoading(false);\n      }\n    },\n    [availableTokens, seedProviderPub, seedToken, seedUrl, dispatch, paragraph]\n  );\n  const closePrompt = useCallback(() => {\n    setPromptInfo(null);\n  }, [setPromptInfo]);\n\n  const submitPrompt = useCallback(() => {\n    const { servicePrice, serviceID } = promptInfo;\n    onSubmitCb(servicePrice, serviceID);\n    setPromptInfo(null);\n  }, [promptInfo, onSubmitCb, setPromptInfo]);\n\n  const onSubmit = useCallback(\n    async e => {\n      try {\n        if (starting) {\n          return;\n        }\n        setStarting(true);\n        e.preventDefault();\n        let availableToken = false;\n        for (const key in availableTokens) {\n          if (Object.prototype.hasOwnProperty.call(availableTokens, key)) {\n            const element = availableTokens[key];\n            if (element[0]) {\n              availableToken = true;\n              break;\n            }\n          }\n        }\n        let serviceID = \"\";\n        if (userProfiles[seedProviderPub]) {\n          //@ts-expect-error\n          serviceID = userProfiles[seedProviderPub].SeedServiceProvided;\n        }\n        if (availableToken || (seedUrl && seedToken)) {\n          onSubmitCb();\n        } else if (serviceID && seedProviderPub) {\n          const { data: service } = await Http.get(\n            `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${serviceID}`\n          );\n          const { servicePrice } = service.data;\n          console.log(service);\n          setPromptInfo({ servicePrice, serviceID });\n        } else {\n          setError(\"No way found to publish content\");\n        }\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setStarting(false);\n      }\n    },\n    [\n      starting,\n      userProfiles,\n      seedProviderPub,\n      seedUrl,\n      seedToken,\n      availableTokens,\n      onSubmitCb\n    ]\n  );\n  const copyToken = useCallback(() => {\n    navigator.clipboard.writeText(streamToken);\n  }, [streamToken]);\n  const copyUri = useCallback(() => {\n    navigator.clipboard.writeText(rtmpUri);\n  }, [rtmpUri]);\n  const onInputChange = useCallback(\n    e => {\n      const { value, name } = e.target;\n      switch (name) {\n        case \"paragraph\": {\n          setParagraph(value);\n          return;\n        }\n        case \"source\": {\n          setSelectedSource(value);\n          return;\n        }\n        default:\n          return;\n      }\n    },\n    [setParagraph, setSelectedSource]\n  );\n  const stopStream = useCallback(() => {\n    removeStream()(dispatch);\n    history.push(\"/profile\");\n  }, [dispatch, history]);\n\n  const StreamRender = useMemo(() => {\n    return (\n      <Stream\n        hideRibbon={true}\n        item={{ magnetURI: streamUrl }}\n        timeout={1500}\n        id={undefined}\n        index={undefined}\n        postId={undefined}\n        tipCounter={undefined}\n        tipValue={undefined}\n        width={undefined}\n      />\n    );\n  }, [streamUrl]);\n\n  const btnClass = c(\n    gStyles.col,\n    gStyles.centerJustify,\n    gStyles.centerAlign,\n    styles[\"stream-type-btn\"]\n  );\n\n  return (\n    <>\n      <DarkPage pageTitle=\"GO LIVE\" scrolls>\n        {isLive && <div>{StreamRender}</div>}\n\n        {!isLive && selectedSource === \"camera\" ? <CamFeed /> : <Static />}\n\n        <div className={c(gStyles.rowCentered, gStyles.width100)}>\n          <div\n            className={btnClass}\n            onClick={setSelectedSource.bind(null, \"camera\")}\n          >\n            <i\n              className={c(styles[\"stream-type-btn-icon\"], \"fas\", \"fa-camera\")}\n            ></i>\n\n            <Pad amt={16} />\n            <Line\n              color={selectedSource === \"camera\" ? \"#4285b9\" : \"white\"}\n              length={36}\n              type=\"horizontal\"\n              width={2}\n            />\n          </div>\n\n          <div\n            className={btnClass}\n            onClick={setSelectedSource.bind(null, \"obs\")}\n          >\n            <img alt=\"\" className={styles[\"obs-logo\"]} src={obsLogo} />\n\n            <Pad amt={16} />\n            <Line\n              color={selectedSource === \"obs\" ? \"#4285b9\" : \"white\"}\n              length={36}\n              type=\"horizontal\"\n              width={2}\n            />\n          </div>\n        </div>\n\n        <div className={gStyles.commonPaddingH}>\n          {(() => {\n            if (error) {\n              return (\n                <>\n                  <p> An error ocurred: </p>\n\n                  <br />\n\n                  <p className=\"error-container\">{error}</p>\n\n                  <button\n                    className=\"shock-form-button\"\n                    onClick={setError.bind(null, null)}\n                  >\n                    Dismiss\n                  </button>\n                </>\n              );\n            }\n\n            if (streamToken) {\n              return (\n                <>\n                  {selectedSource === \"obs\" && (\n                    <p className=\"m-b-1\">\n                      You are ready to go! setup the stream with OBS and watch\n                      it from your profile\n                    </p>\n                  )}\n\n                  <p>Broadcaster:</p>\n\n                  <div\n                    style={{\n                      border: \"1px solid var(--main-blue)\",\n                      padding: \"0.5rem\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"1rem\"\n                    }}\n                  >\n                    <p>\n                      {rtmpUri.substring(0, 20) +\n                        (rtmpUri.length > 21 ? \"...\" : \"\")}\n                    </p>\n                    <i className=\"far fa-copy\" onClick={copyUri}></i>\n                  </div>\n                  <p>Stream Key:</p>\n                  <div\n                    style={{\n                      border: \"1px solid var(--main-blue)\",\n                      padding: \"0.5rem\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"1rem\"\n                    }}\n                  >\n                    <p>\n                      {streamToken.substring(0, 20) +\n                        (streamToken.length > 21 ? \"...\" : \"\")}\n                    </p>\n                    <i className=\"far fa-copy\" onClick={copyToken}></i>\n                  </div>\n                  <div className=\"flex-center\">\n                    <button\n                      onClick={stopStream}\n                      className=\"shock-form-button-confirm\"\n                    >\n                      STOP\n                    </button>\n                  </div>\n                </>\n              );\n            }\n\n            return (\n              <>\n                <input\n                  className=\"input-field\"\n                  type=\"text\"\n                  name=\"paragraph\"\n                  id=\"paragraph\"\n                  value={paragraph}\n                  onChange={onInputChange}\n                />\n                <button\n                  onClick={onSubmit}\n                  className={c(gStyles.width100, \"shock-form-button-confirm\")}\n                  disabled={selectedSource === \"camera\" || starting}\n                >\n                  {starting ? \"...\" : \"START NOW\"}\n                </button>\n              </>\n            );\n          })()}\n        </div>\n      </DarkPage>\n\n      {promptInfo && (\n        <Modal\n          modalOpen={promptInfo && !loading}\n          toggleModal={closePrompt}\n          contentStyle={{\n            padding: \"1rem\"\n          }}\n        >\n          <p>\n            The service from the default service provider will cost:{\" \"}\n            <strong>{promptInfo.servicePrice} sats</strong>\n          </p>\n\n          <div className={gStyles.rowCentered}>\n            <button className=\"shock-form-button m-1\" onClick={closePrompt}>\n              Cancel\n            </button>\n            <button\n              className=\"shock-form-button-confirm m-1\"\n              onClick={submitPrompt}\n            >\n              Confirm\n            </button>\n          </div>\n        </Modal>\n      )}\n\n      {loading ? <Loader overlay fullScreen text=\"Creating stream...\" /> : null}\n    </>\n  );\n};\n\nexport default GoLive;\n"],"sourceRoot":""}