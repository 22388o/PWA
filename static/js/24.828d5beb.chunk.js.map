{"version":3,"sources":["common/MainNav/index.js","images/bitcoin-lightning.svg","../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js","../node_modules/use-latest/dist/use-latest.esm.js","../node_modules/use-composed-ref/dist/use-composed-ref.esm.js","../node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.esm.js","../../src/observers.ts","../../src/InView.tsx","pages/Chat/components/ChatMessage/index.js","../../src/useInView.tsx","pages/Chat/index.js"],"names":["MainNav","pageTitle","absolute","solid","enableBackButton","onHeight","Utils","dispatch","useDispatch","goBack","useCallback","window","history","back","open","openDrawer","gunPublicKey","useSelector","node","publicKey","divRefCb","el","getBoundingClientRect","height","e","console","log","className","classNames","ref","onClick","index","useLayoutEffect","useLatest","value","useRef","useIsomorphicLayoutEffect","current","updateRef","useComposedRef","libRef","userRef","prevUserRef","instance","HIDDEN_TEXTAREA_STYLE","visibility","overflow","position","top","right","forceHiddenStyles","Object","keys","forEach","key","style","setProperty","hiddenTextarea","noop","SIZING_STYLE","isIE","document","documentElement","currentStyle","TextareaAutosize","_ref","cacheMeasurements","maxRows","minRows","_ref$onChange","onChange","_ref$onHeightChange","onHeightChange","props","_objectWithoutPropertiesLoose","isControlled","undefined","heightRef","measurementsCacheRef","resizeTextarea","nodeSizingData","getComputedStyle","obj","sizingStyle","reduce","acc","prop","boxSizing","width","parseFloat","borderRightWidth","borderLeftWidth","paddingRight","paddingLeft","paddingSize","paddingBottom","paddingTop","borderSize","borderBottomWidth","borderTopWidth","getSizingData","_calculateNodeHeight","sizingData","Infinity","createElement","setAttribute","parentNode","body","appendChild","_key","scrollHeight","getHeight","rowHeight","minHeight","Math","max","maxHeight","min","calculateNodeHeight","placeholder","listener","latestListener","handler","event","addEventListener","removeEventListener","useWindowResizeListener","_extends","forwardRef","ObserverMap","RootIds","rootId","optionsToId","options","root","observe","element","callback","id","elements","observer","IntersectionObserver","entries","inView","entry","thresholds","Array","createObserver","callbacks","isPlainChildren","InView","_unobserveCb","handleNode","handleChange","componentDidUpdate","prevProps","this","componentWillUnmount","observeNode","threshold","rootMargin","trackVisibility","delay","unobserve","render","children","as","tag","triggerOnce","initialInView","USE_IN_VIEW_OPTS","ChatMessage","text","receivedMessage","timestamp","onInView","onOutView","useInView","skip","React","state","setState","setRef","useEffect","result","parsedTimestamp","useMemo","normalizedTimestamp","Common","DateTime","fromMillis","toLocaleString","TIME_SIMPLE","error","message","ShockAvatar","alignment","Pad","amt","insideRow","enableMapSet","ChatPage","recipientPublicKey","useParams","user","Store","useState","setMessage","shouldShowDateBubble","setShouldShowDateBubble","headerHeight","setHeaderHeight","chatDateBubbleContainerStyle","handleHeaderHeight","handleScroll","setTimeout","messages","chat","contact","getContact","contacts","sentRequest","sentRequests","receivedRequest","receivedRequests","pendingSentRequest","pendingReceivedRequest","handleInputChange","target","acceptRequest","acceptHandshakeRequest","submitMessage","ctrlKey","preventDefault","sendMessage","subscribeIncomingMessages","subscription","subscribeChatMessages","rifleCleanup","Set","visibleMessages","setVisibleMessages","size","now","valueOf","Date","sorted","from","map","find","msg","filter","x","sort","a","b","length","newestTimestampInView","oldestTimestampInView","handleMessageInView","produce","draft","add","handleMessageOutView","delete","contactName","displayName","onScroll","outgoing","gStyles","newest","startOf","oldest","today","yesterday","minus","day","allMessagesThisYear","hasSame","toFormat","DATE_FULL","firstDay","lastDay","month","year","firstMonth","lastMonth","firstYear","lastYear","src","BitcoinLightning","alt","type","enterKeyHint","onKeyPress"],"mappings":"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","file":"static/js/24.828d5beb.chunk.js","sourcesContent":["// @ts-check\nimport { useCallback } from \"react\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as Utils from \"../../utils\";\nimport { openDrawer } from \"../../actions/DrawerActions\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport { useSelector } from \"../../store\";\n\nconst MainNav = ({\n  pageTitle,\n  absolute = false,\n  solid = false,\n  enableBackButton = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const dispatch = useDispatch();\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  const open = useCallback(() => {\n    dispatch(openDrawer());\n  }, [dispatch]);\n\n  const gunPublicKey = useSelector(({ node }) => node.publicKey);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in MainNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className={classNames({\n        \"main-nav-container\": true,\n        \"main-nav-absolute\": absolute,\n        \"main-nav-solid\": solid\n      })}\n      ref={divRefCb}\n    >\n      {enableBackButton ? (\n        <div className=\"main-nav-back\" onClick={goBack}>\n          <i className=\"icon icon-thin-back\"></i>\n        </div>\n      ) : (\n        <ShockAvatar height={40} publicKey={gunPublicKey} />\n      )}\n      <p className=\"main-nav-title unselectable\">{pageTitle}</p>\n      <div className=\"main-nav-menu-btn\" onClick={open}>\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default MainNav;\n","export default __webpack_public_path__ + \"static/media/bitcoin-lightning.2d73b74b.svg\";","import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n","import { useRef } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n\nvar useLatest = function useLatest(value) {\n  var ref = useRef(value);\n  useIsomorphicLayoutEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n};\n\nexport default useLatest;\n","import { useRef, useCallback } from 'react';\n\nvar updateRef = function updateRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n    return;\n  }\n  ref.current = value;\n};\n\nvar useComposedRef = function useComposedRef(libRef, userRef) {\n  var prevUserRef = useRef();\n  return useCallback(function (instance) {\n    libRef.current = instance;\n\n    if (prevUserRef.current) {\n      updateRef(prevUserRef.current, null);\n    }\n\n    prevUserRef.current = userRef;\n\n    if (!userRef) {\n      return;\n    }\n\n    updateRef(userRef, instance);\n  }, [userRef]);\n};\n\nexport default useComposedRef;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useLayoutEffect, forwardRef, useRef, createElement } from 'react';\nimport useLatest from 'use-latest';\nimport useComposedRef from 'use-composed-ref';\n\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n//   export type CalculatedNodeHeights = [height: number, rowHeight: number];\n// https://github.com/microsoft/TypeScript/issues/28259\n\nvar hiddenTextarea = null;\n\nvar getHeight = function getHeight(node, sizingData) {\n  var height = node.scrollHeight;\n\n  if (sizingData.sizingStyle.boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    return height + sizingData.borderSize;\n  } // remove padding, since height = content\n\n\n  return height - sizingData.paddingSize;\n};\n\nfunction calculateNodeHeight(sizingData, value, minRows, maxRows) {\n  if (minRows === void 0) {\n    minRows = 1;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = Infinity;\n  }\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tab-index', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    forceHiddenStyles(hiddenTextarea);\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  var paddingSize = sizingData.paddingSize,\n      borderSize = sizingData.borderSize,\n      sizingStyle = sizingData.sizingStyle;\n  var boxSizing = sizingStyle.boxSizing;\n  Object.keys(sizingStyle).forEach(function (_key) {\n    var key = _key;\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = value;\n  var height = getHeight(hiddenTextarea, sizingData); // measure height of a textarea with a single row\n\n  hiddenTextarea.value = 'x';\n  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  var minHeight = rowHeight * minRows;\n\n  if (boxSizing === 'border-box') {\n    minHeight = minHeight + paddingSize + borderSize;\n  }\n\n  height = Math.max(minHeight, height);\n  var maxHeight = rowHeight * maxRows;\n\n  if (boxSizing === 'border-box') {\n    maxHeight = maxHeight + paddingSize + borderSize;\n  }\n\n  height = Math.min(maxHeight, height);\n  return [height, rowHeight];\n}\n\nvar noop = function noop() {};\nvar pick = function pick(props, obj) {\n  return props.reduce(function (acc, prop) {\n    acc[prop] = obj[prop];\n    return acc;\n  }, {});\n};\n\nvar SIZING_STYLE = ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'boxSizing', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop', // non-standard\n'tabSize', 'textIndent', // non-standard\n'textRendering', 'textTransform', 'width'];\nvar isIE = !!document.documentElement.currentStyle ;\n\nvar getSizingData = function getSizingData(node) {\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = pick(SIZING_STYLE, style);\n  var boxSizing = sizingStyle.boxSizing; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);\n  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);\n  return {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize\n  };\n};\n\nvar useWindowResizeListener = function useWindowResizeListener(listener) {\n  var latestListener = useLatest(listener);\n  useLayoutEffect(function () {\n    var handler = function handler(event) {\n      latestListener.current(event);\n    };\n\n    window.addEventListener('resize', handler);\n    return function () {\n      window.removeEventListener('resize', handler);\n    };\n  }, []);\n};\n\nvar TextareaAutosize = function TextareaAutosize(_ref, userRef) {\n  var cacheMeasurements = _ref.cacheMeasurements,\n      maxRows = _ref.maxRows,\n      minRows = _ref.minRows,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onHeightChange = _ref.onHeightChange,\n      onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange,\n      props = _objectWithoutPropertiesLoose(_ref, [\"cacheMeasurements\", \"maxRows\", \"minRows\", \"onChange\", \"onHeightChange\"]);\n\n  if (process.env.NODE_ENV !== 'production' && props.style) {\n    if ('maxHeight' in props.style) {\n      throw new Error('Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.');\n    }\n\n    if ('minHeight' in props.style) {\n      throw new Error('Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.');\n    }\n  }\n\n  var isControlled = props.value !== undefined;\n  var libRef = useRef(null);\n  var ref = useComposedRef(libRef, userRef);\n  var heightRef = useRef(0);\n  var measurementsCacheRef = useRef();\n\n  var resizeTextarea = function resizeTextarea() {\n    var node = libRef.current;\n    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData(node);\n\n    if (!nodeSizingData) {\n      return;\n    }\n\n    measurementsCacheRef.current = nodeSizingData;\n\n    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || 'x', minRows, maxRows),\n        height = _calculateNodeHeight[0],\n        rowHeight = _calculateNodeHeight[1];\n\n    if (heightRef.current !== height) {\n      heightRef.current = height;\n      node.style.setProperty('height', height + \"px\", 'important');\n      onHeightChange(height, {\n        rowHeight: rowHeight\n      });\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      resizeTextarea();\n    }\n\n    onChange(event);\n  };\n\n  {\n    useLayoutEffect(resizeTextarea);\n    useWindowResizeListener(resizeTextarea);\n  }\n\n  return /*#__PURE__*/createElement(\"textarea\", _extends({}, props, {\n    onChange: handleChange,\n    ref: ref\n  }));\n};\n\nvar index = /* #__PURE__ */forwardRef(TextareaAutosize);\n\nexport default index;\n","import { ObserverInstanceCallback } from './index';\n\nconst ObserverMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: Map<Element, string> = new Map();\n\nlet rootId = 0;\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root?: Element | null) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = ObserverMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    ObserverMap.set(id, instance);\n  }\n\n  return instance;\n}\n\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n) {\n  if (!element) return () => {};\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      ObserverMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observers';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n * Monitors scroll, and triggers the children function with updated props\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  static displayName = 'InView';\n  static defaultProps = {\n    threshold: 0,\n    triggerOnce: false,\n    initialInView: false,\n  };\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const { threshold, root, rootMargin, trackVisibility, delay } = this.props;\n\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay,\n    });\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      tag,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || tag || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","// @ts-check\nimport { useEffect, useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\nimport * as Common from \"shock-common\";\nimport { useInView } from \"react-intersection-observer\";\n/**\n * @typedef {import('react-intersection-observer').IntersectionOptions} IntersectionOptions\n */\n\nimport Pad from \"../../../../common/Pad\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport * as Utils from \"../../../../utils\";\n\nimport \"./css/index.scoped.css\";\n\n/** @type {IntersectionOptions} */\nconst USE_IN_VIEW_OPTS = {\n  threshold: 0.2\n};\n\nconst ChatMessage = ({\n  text = \"\",\n  receivedMessage = false,\n  publicKey = \"\",\n  timestamp,\n  onInView = Utils.EMPTY_FN,\n  onOutView = Utils.EMPTY_FN,\n  id\n}) => {\n  const { inView, ref } = useInView(USE_IN_VIEW_OPTS);\n\n  useEffect(() => {\n    if (inView) {\n      onInView(id);\n    } else {\n      onOutView(id);\n    }\n  }, [id, inView, onInView, onOutView]);\n\n  const parsedTimestamp = useMemo(() => {\n    try {\n      const normalizedTimestamp = Common.normalizeTimestampToMs(timestamp);\n      const dateTime = DateTime.fromMillis(normalizedTimestamp);\n      const dateTxt = dateTime.toLocaleString(DateTime.TIME_SIMPLE);\n\n      return dateTxt;\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }, [timestamp])\n\n  return (\n    <div\n      className={classNames({\n        message: true,\n        \"message-received\": receivedMessage\n      })}\n      ref={ref}\n    >\n      {receivedMessage && (\n        <>\n          <ShockAvatar height={48} publicKey={publicKey} alignment=\"end\" />\n\n          <Pad amt={16} insideRow />\n        </>\n      )}\n\n      <div className=\"message-content\">\n        <p className=\"message-text\">{text}</p>\n        <div className=\"timestamp\">\n          <p className=\"timestamp-text\">{parsedTimestamp}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatMessage;\n","import * as React from 'react';\nimport { InViewHookResponse, IntersectionOptions } from './index';\nimport { useEffect } from 'react';\nimport { observe } from './observers';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const unobserve = React.useRef<Function>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n  });\n\n  const setRef = React.useCallback(\n    (node) => {\n      if (unobserve.current !== undefined) {\n        unobserve.current();\n        unobserve.current = undefined;\n      }\n\n      // Skip creating the observer\n      if (skip) return;\n\n      if (node) {\n        unobserve.current = observe(\n          node,\n          (inView, entry) => {\n            setState({ inView, entry });\n\n            if (entry.isIntersecting && triggerOnce && unobserve.current) {\n              // If it should only trigger once, unobserve the element after it's inView\n              unobserve.current();\n              unobserve.current = undefined;\n            }\n          },\n          {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay,\n          },\n        );\n      }\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      delay,\n    ],\n  );\n\n  /* eslint-disable-next-line */\n  useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n      });\n    }\n  });\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","// @ts-check\nimport { useCallback, useEffect, useState, useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport TextArea from \"react-textarea-autosize\";\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\nimport produce, { enableMapSet } from \"immer\";\n\nimport MainNav from \"../../common/MainNav\";\nimport ChatMessage from \"./components/ChatMessage\";\nimport {\n  acceptHandshakeRequest,\n  sendMessage,\n  subscribeChatMessages\n} from \"../../actions/ChatActions\";\nimport BitcoinLightning from \"../../images/bitcoin-lightning.svg\";\nimport \"./css/index.scoped.css\";\nimport * as Store from \"../../store\";\nimport { rifleCleanup } from \"../../utils/WebSocket\";\nimport { getContact } from \"../../utils\";\nimport * as gStyles from \"../../styles\";\n/**\n * @typedef {import('../../schema').ReceivedRequest} ReceivedRequest\n */\n\nenableMapSet();\n\n/**\n * @typedef {object} ChatPageParams\n * @prop {string} publicKey\n */\n\nconst ChatPage = () => {\n  const dispatch = useDispatch();\n  const params = /** @type {ChatPageParams} */ (useParams());\n  const { publicKey: recipientPublicKey } = params;\n  const user = Store.useSelector(Store.selectUser(recipientPublicKey));\n  const [message, setMessage] = useState(\"\");\n  /* ------------------------------------------------------------------------ */\n  // Date Bubble\n  const [shouldShowDateBubble, setShouldShowDateBubble] = useState(false);\n  const [headerHeight, setHeaderHeight] = useState(-1);\n  const chatDateBubbleContainerStyle = useMemo(\n    () => ({\n      top: headerHeight + 8 + \"px\"\n    }),\n    [headerHeight]\n  );\n\n  const handleHeaderHeight = useCallback(\n    (/** @type {number} */ height) => {\n      setHeaderHeight(height);\n    },\n    []\n  );\n\n  const handleScroll = useCallback(() => {\n    if (!shouldShowDateBubble) {\n      setShouldShowDateBubble(true);\n      setTimeout(() => {\n        setShouldShowDateBubble(false);\n      }, 1500);\n    }\n  }, [shouldShowDateBubble]);\n  /* ------------------------------------------------------------------------ */\n\n  const messages = Store.useSelector(\n    ({ chat }) => chat.messages[recipientPublicKey]\n  );\n  const contact = Store.useSelector(({ chat }) =>\n    getContact(chat.contacts, recipientPublicKey)\n  );\n  const sentRequest = Store.useSelector(({ chat }) =>\n    getContact(chat.sentRequests, recipientPublicKey)\n  );\n  const receivedRequest = /** @type {ReceivedRequest} */ (Store.useSelector(\n    ({ chat }) => getContact(chat.receivedRequests, recipientPublicKey)\n  ));\n  const gunPublicKey = Store.useSelector(({ node }) => node.publicKey);\n  const pendingSentRequest = !contact && sentRequest;\n  const pendingReceivedRequest = !contact && receivedRequest;\n\n  const handleInputChange = useCallback(e => {\n    setMessage(e.target.value);\n  }, []);\n\n  const acceptRequest = useCallback(() => {\n    console.log(receivedRequest);\n    if (receivedRequest) {\n      acceptHandshakeRequest(receivedRequest.id)(dispatch);\n    }\n  }, [receivedRequest, dispatch]);\n\n  const submitMessage = useCallback(\n    e => {\n      if (e.key === \"Enter\" && e.ctrlKey) {\n        setMessage(message + \"\\r\\n\");\n        return;\n      }\n\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        dispatch(\n          sendMessage({\n            message,\n            publicKey: recipientPublicKey\n          })\n        );\n        setMessage(\"\");\n        return;\n      }\n    },\n    [message, recipientPublicKey, dispatch]\n  );\n\n  const subscribeIncomingMessages = useCallback(() => {\n    const subscription = dispatch(\n      subscribeChatMessages(gunPublicKey, recipientPublicKey)\n    );\n\n    return rifleCleanup(subscription);\n  }, [dispatch, gunPublicKey, recipientPublicKey]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeIncomingMessages();\n\n    return unsubscribe;\n  }, [subscribeIncomingMessages]);\n\n  // ------------------------------------------------------------------------ //\n  // Date bubble\n\n  const [visibleMessages, setVisibleMessages] = useState(\n    /** @type {Set<string>} */ (new Set())\n  );\n\n  const [newestTimestampInView, oldestTimestampInView] = useMemo(() => {\n    if (visibleMessages.size === 0) {\n      return [DateTime.now().valueOf(), Date.now().valueOf()];\n    }\n    const sorted = Array.from(visibleMessages)\n      .map(id => messages.find(msg => msg.id === id))\n      .filter(x => !!x)\n      .sort((a, b) => b.timestamp - a.timestamp);\n    /** @type {[number|null , number|null]} */\n    const res = [sorted[0].timestamp, sorted[sorted.length - 1].timestamp];\n    return res;\n  }, [messages, visibleMessages]);\n\n  const handleMessageInView = useCallback(\n    id => {\n      setVisibleMessages(\n        produce(draft => {\n          draft.add(id);\n        })\n      );\n    },\n    [setVisibleMessages]\n  );\n  const handleMessageOutView = useCallback(\n    id => {\n      setVisibleMessages(\n        produce(draft => {\n          draft.delete(id);\n        })\n      );\n    },\n    [setVisibleMessages]\n  );\n\n  // ------------------------------------------------------------------------ //\n\n  const contactName = user.displayName;\n\n  return (\n    <div className=\"page-container\">\n      <MainNav\n        solid\n        pageTitle={contactName}\n        enableBackButton\n        onHeight={handleHeaderHeight}\n      />\n\n      <div className=\"chat-messages-container\" onScroll={handleScroll}>\n        {messages?.map(message => (\n          <ChatMessage\n            text={message.body}\n            receivedMessage={!message.outgoing}\n            publicKey={message.recipientPublicKey}\n            timestamp={message.timestamp}\n            onInView={handleMessageInView}\n            onOutView={handleMessageOutView}\n            id={message.id}\n          />\n        ))}\n      </div>\n\n      <div\n        className={classNames(\n          gStyles.horizontallyCenteredAbsolute,\n          gStyles.absoluteStickToTop,\n          gStyles.centerAlign,\n          gStyles.centerJustify\n        )}\n        style={chatDateBubbleContainerStyle}\n      >\n        <span\n          className={classNames(\n            gStyles.fontSize12,\n            \"chat-date-bubble\",\n            shouldShowDateBubble\n              ? gStyles.opacityThreeQuarters\n              : gStyles.opacityNone\n          )}\n        >\n          {(() => {\n            const newest = DateTime.fromMillis(newestTimestampInView).startOf(\n              \"day\"\n            );\n            const oldest = DateTime.fromMillis(oldestTimestampInView).startOf(\n              \"day\"\n            );\n            const today = DateTime.now().startOf(\"day\");\n            const yesterday = DateTime.now()\n              .minus({\n                day: 1\n              })\n              .startOf(\"day\");\n            const allMessagesThisYear =\n              newest.hasSame(today, \"year\") && oldest.hasSame(today, \"year\");\n\n            const allMessagesSameDay = (newest || oldest).hasSame(\n              oldest,\n              \"day\"\n            );\n            if (allMessagesSameDay) {\n              if (newest.hasSame(today, \"day\")) {\n                return \"Today\";\n              }\n              if (newest.hasSame(yesterday, \"day\")) {\n                return \"Yesterday\";\n              }\n              return allMessagesThisYear\n                ? // August 13\n                  newest.toFormat(\"LLLL d\")\n                : // August 13, 2017\n                  newest.toLocaleString(DateTime.DATE_FULL);\n            }\n\n            const allMessagesSameMonth = newest.hasSame(oldest, \"month\");\n            if (allMessagesSameMonth) {\n              const firstDay = oldest.toFormat(\"d\");\n              const lastDay = newest.toFormat(\"d\");\n              const month = (newest || oldest).toFormat(\"LLLL\");\n              if (allMessagesThisYear) {\n                // August 13 - 27\n                return `${month} ${firstDay} - ${lastDay}`;\n              }\n              const year = newest.toFormat(\"y\");\n              // August 13 - 27, 2020\n              return `${month} ${firstDay} - ${lastDay}, ${year}`;\n            }\n\n            if (allMessagesThisYear) {\n              const firstDay = oldest.toFormat(\"d\");\n              const lastDay = newest.toFormat(\"d\");\n              const firstMonth = oldest.toFormat(\"LLLL\");\n              const lastMonth = newest.toFormat(\"LLLL\");\n              // January 12 - February 14\n              return `${firstMonth} ${firstDay} - ${lastMonth} ${lastDay}`;\n            }\n\n            const firstDay = oldest.toFormat(\"d\");\n            const lastDay = newest.toFormat(\"d\");\n            const firstMonth = oldest.toFormat(\"LLLL\");\n            const lastMonth = newest.toFormat(\"LLLL\");\n            const firstYear = oldest.toFormat(\"y\");\n            const lastYear = newest.toFormat(\"y\");\n            // December 27, 2020 - January 2, 2021\n            return `${firstMonth} ${firstDay}, ${firstYear} - ${lastMonth} ${lastDay}, ${lastYear}`;\n          })()}\n        </span>\n      </div>\n\n      {pendingReceivedRequest ? (\n        <div className=\"chat-permission-bar\">\n          <p className=\"chat-permission-bar-title unselectable\">\n            {contactName} has sent you a chat request!\n          </p>\n          <p className=\"chat-permission-bar-text\">\n            Once you accept the request, you'll be able to chat and send\n            invoices to {contactName}\n          </p>\n          <div className=\"chat-permission-bar-actions unselectable\">\n            <div\n              className=\"chat-permission-bar-action chat-permission-bar-action-accept\"\n              onClick={acceptRequest}\n            >\n              Accept\n            </div>\n            <div className=\"chat-permission-bar-action chat-permission-bar-action-decline\">\n              Decline\n            </div>\n          </div>\n        </div>\n      ) : pendingSentRequest ? (\n        <div className=\"chat-permission-bar\">\n          <p className=\"chat-permission-bar-title\">\n            Your request has been sent to {contactName} successfully\n          </p>\n          <p className=\"chat-permission-bar-text unselectable\">\n            Once {contactName} accepts the request, you'll be able to chat with\n            them\n          </p>\n        </div>\n      ) : (\n        <div className=\"chat-bottom-bar\">\n          <div className=\"chat-input-container\">\n            <div className=\"chat-input-btn unselectable\">\n              <img src={BitcoinLightning} alt=\"Menu\" />\n            </div>\n            <TextArea\n              className=\"chat-input\"\n              // @ts-expect-error\n              type=\"text\"\n              enterKeyHint=\"send\"\n              onKeyPress={submitMessage}\n              onChange={handleInputChange}\n              value={message}\n              height={20}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"sourceRoot":""}