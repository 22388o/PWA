{"version":3,"sources":["common/Post/components/Image/index.js","common/Post/components/Video/index.js","images/share.svg","common/Post/index.js","utils/Cache.js","utils/Promise.js","utils/Torrents.js","images/av1.jpg","common/Post/SharedPost.js"],"names":["Image","id","item","index","postId","tipValue","tipCounter","hideRibbon","width","disableZoom","style","useState","zoomed","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","useCallback","value","clearTimeout","timer","setTimeout","contentURL","decodeURIComponent","magnetURI","replace","mainImageStyle","opacity","imgNode","className","alt","data-torrent","data-file-key","src","onLoad","display","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","Video","videoStyle","cursor","controls","data-played","TipRibbon","Post","timestamp","publicKey","openTipModal","openUnlockModal","contentItems","username","openDeleteModal","undefined","openShareModal","_","unlockedContent","Store","content","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","liveStatus","setLiveStatus","viewersCounter","setViewersCounter","isOnlineNode","useEffect","values","Object","videoContent","find","type","streamContent","status","getMediaContent","entries","filter","forEach","k","e","path","parseContent","key","text","finalItem","cached","Stream","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","on","scrollSnapList","length","window","addEventListener","removeEventListener","off","tipPost","targetType","postID","unlockPost","deletePost","shared","sharePost","Tooltip","rebuild","console","log","ShockAvatar","height","Pad","amt","insideRow","to","DateTime","fromMillis","toRelative","onClick","map","Array","from","classNames","scrollTo","ref","data-tip","ShareIcon","color","marginLeft","getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","persist","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","element","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","file","extension","name","split","slice","supportedFileType","includes","fileType","webTorrentClient","WebTorrent","attachMedia","posts","torrentMode","allowDuplicates","torrentTasks","post","get","add","torrent","files","target","destroy","torrentElement","format","toLowerCase","endsWith","compatibleURL","elementSrc","getAttribute","setAttribute","renderTo","getBlob","err","blob","querySelector","dataset","played","reduce","torrents","SharedPost","sharerProfile","originalPostProfile","origPost","originalPost","sharedTimestamp","postPublicKey","loadPostMedia","useLayoutEffect","selfPublicKey","Common","lastSeenApp","displayName","date","alias","Loader"],"mappings":"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","file":"static/js/15.066fdefb.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.scoped.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null,\n  disableZoom = false,\n  style = /** @type {import('react').CSSProperties} */ ({})\n}) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [\n      animationTimer,\n      zoomLoaded,\n      setZoomed,\n      setZoomLoaded,\n      setPreviewVisible,\n      setAnimationTimer\n    ]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { ...style, opacity: previewVisible ? 1 : 0 };\n  if (width) {\n    mainImageStyle.width = width;\n  }\n\n  const imgNode = (\n    <>\n      <img\n        className={`image torrent-img torrent-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-torrent={item.magnetURI}\n        data-file-key={index}\n        style={mainImageStyle}\n        src={contentURL}\n      />\n      <img\n        className={`image enlarged-img enlarged-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-file-key={index}\n        onLoad={() => {\n          setZoomLoaded(true);\n        }}\n        style={{\n          opacity: zoomed ? 1 : 0,\n          display: zoomed ? \"block\" : \"none\"\n        }}\n        src={contentURL}\n      />\n      {!hideRibbon && (\n        <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"media-container\">\n      {disableZoom ? (\n        imgNode\n      ) : (\n        <ControlledZoom\n          isZoomed={zoomed}\n          onZoomChange={handleZoomChange}\n          overlayBgColorStart=\"#16191c00\"\n          overlayBgColorEnd=\"#16191c\"\n        >\n          {imgNode}\n        </ControlledZoom>\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\n\nconst Video = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null\n}) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = {};\n  if (width) {\n    videoStyle.width = width;\n  }\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","export default __webpack_public_path__ + \"static/media/share.8ed36b2d.svg\";","// @ts-check\nimport { useEffect, useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../store\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\n\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport \"./css/index.scoped.css\";\n\nimport ShareIcon from \"../../images/share.svg\";\n\nconst Post = ({\n  id,\n  timestamp,\n  tipCounter,\n  tipValue,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  contentItems = {},\n  username,\n  openDeleteModal = undefined,\n  openShareModal = _ => {}\n}) => {\n  const unlockedContent = Store.useSelector(\n    ({ content }) => content.unlockedContent\n  );\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [liveStatus, setLiveStatus] = useState(\"\");\n  const [viewersCounter, setViewersCounter] = useState(0);\n\n  const isOnlineNode = /*Utils.isOnline(\n    Store.useSelector(Store.selectUser(publicKey)).lastSeenApp\n  );*/ true;\n\n  //effect for liveStatus and viewers counter\n  useEffect(() => {\n    const values = Object.values(contentItems);\n    const videoContent = values.find(\n      item => item.type === \"video/embedded\" && item.liveStatus === \"wasLive\"\n    );\n    const streamContent = values.find(\n      item => item.type === \"stream/embedded\" && item.liveStatus === \"live\"\n    );\n    let status = \"\";\n    if (videoContent) {\n      status = \"Was Live\"\n    }\n    if (streamContent) {\n      status = \"Is Live\"\n      if(streamContent.viewersCounter){\n        setViewersCounter(streamContent.viewersCounter)\n      }\n    }\n    if (status) {\n      setLiveStatus(status);\n    }\n  }, [contentItems, setLiveStatus]);\n\n  const getMediaContent = useCallback(() => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  }, [contentItems]);\n\n  const getTextContent = () => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(() => {\n    getMediaContent().forEach(([k, e]) => {\n      const path = `${publicKey}>posts>${k}`;\n      if (e.isPrivate && !unlockedContent[path]) {\n        setIsPrivate(true);\n      }\n    });\n  }, [contentItems, getMediaContent, publicKey, unlockedContent]);\n\n  const parseContent = ([key, item], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n    const finalItem = item;\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`;\n      const cached = unlockedContent[path];\n      if (cached) {\n        finalItem.magnetURI = cached;\n      } else {\n        return (\n          <div key={key}>\n            <i className=\"fas fa-lock fa-10x\"></i>\n          </div>\n        );\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n    if (item.type === \"stream/embedded\") {\n      return (\n        <Stream\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  // useEffect(() => {\n  //   attachMedia();\n  // }, [contentItems.length]);\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id, shared: false });\n  }, [id, openDeleteModal]);\n\n  const sharePost = useCallback(() => {\n    openShareModal({\n      targetType: \"share\",\n      postID: id,\n      publicKey\n    });\n  }, [publicKey, id, openShareModal]);\n\n  useEffect(() => {\n    try {\n      Tooltip.rebuild();\n    } catch (e) {\n      console.log(`Error inside <Post />: `, e);\n    }\n  }, []);\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={publicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <div className=\"username\">\n              <Link to={`/otherUser/${publicKey}`}>{username}</Link>\n              {liveStatus && (\n                <p className=\"liveStatus\">\n                  {liveStatus}\n                  <i\n                    className={`fas fa-circle liveStatusIcon ${\n                      liveStatus === \"Is Live\" ? \"liveIcon\" : \"\"\n                    }`}\n                  ></i>  \n                  {liveStatus === 'Is Live' &&  <span> | {viewersCounter} watching</span>}\n                </p>\n              )}\n            </div>\n            <p>\n              {timestamp && typeof timestamp === \"number\"\n                ? DateTime.fromMillis(timestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    // TODO: Get the actual ID here. However posts can't be\n                    // edited so index is stable.\n                    key={key}\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div></div>\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n        {openShareModal && (\n          <div className=\"icon-tip-btn\" data-tip={\"share\"} onClick={sharePost}>\n            <img\n              alt=\"Share this post\"\n              src={ShareIcon}\n              style={{ color: \"#4285b9\", marginLeft: \"auto\" }}\n            />\n          </div>\n        )}\n        {!openShareModal && <div></div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = true;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import WebTorrent from \"webtorrent\";\nimport { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nconst supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: true,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nconst _getFileType = file => {\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const supportedFileType = Object.entries(\n    supportedFileTypes\n  ).filter(([type, options]) => options.formats.includes(extension))[0];\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport const webTorrentClient = new WebTorrent();\n\nexport const attachMedia = (\n  posts = [],\n  torrentMode = true,\n  allowDuplicates = false\n) => {\n  const torrentTasks = posts\n    .map(post => {\n      const { contentItems, id } = post;\n      return Object.entries(contentItems)\n        .filter(([key, item]) => supportedFileTypes[item.type])\n        .map(([key, item]) => () =>\n          new Promise(resolve => {\n            const torrentExists = webTorrentClient.get(item.magnetURI);\n\n            if (torrentExists && !allowDuplicates) {\n              resolve(true);\n              return;\n            }\n\n            webTorrentClient.add(item.magnetURI, async torrent => {\n              // Proceed to the next torrent in queue\n              resolve(true);\n\n              const files = torrent.files.filter(file => {\n                const extension = file.name?.split(\".\")?.slice(-1)[0];\n                const supportedFileType = Object.entries(\n                  supportedFileTypes\n                ).filter(([type, options]) =>\n                  options.formats.includes(extension)\n                )[0];\n                if (supportedFileType) {\n                  const [, fileType] = supportedFileType;\n                  const matched = fileType.formats.includes(extension);\n                  return matched;\n                }\n                return false;\n              });\n\n              files.map(async file => {\n                const fileType = _getFileType(file);\n\n                if (!fileType) {\n                  return;\n                }\n\n                const fileName = `${id}-${key}-${file.name}`;\n\n                const element = fileType.element;\n                const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                const cachedFile = await getCachedFile(fileName);\n\n                if (cachedFile) {\n                  const torrent = webTorrentClient.get(item.magnetURI);\n\n                  if (torrent) {\n                    torrent.destroy();\n                  }\n\n                  renderCachedFile(cachedFile, target);\n                  return;\n                }\n\n                const torrentElements = document.querySelectorAll(target);\n                torrentElements.forEach(torrentElement => {\n                  const contentURL = decodeURIComponent(\n                    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n                  );\n                  const [compatibleURL] = fileType.formats.filter(format =>\n                    contentURL\n                      .toLowerCase()\n                      .endsWith(`.${format.toLowerCase()}`)\n                  );\n                  const elementSrc = torrentElement.getAttribute(\"src\");\n\n                  if ((torrentMode || !compatibleURL) && !elementSrc) {\n                    file.renderTo(torrentElement, fileType.options);\n                    return;\n                  }\n\n                  torrentElement.setAttribute(\"src\", contentURL);\n                });\n              });\n\n              torrent.on(\"done\", () => {\n                files.map(file => {\n                  const fileType = _getFileType(file);\n                  const fileName = `${id}-${key}-${file.name}`;\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n\n                  file.getBlob(async (err, blob) => {\n                    if (err) {\n                      console.warn(err);\n                      return;\n                    }\n\n                    await saveFile(fileName, blob);\n                    const element = document.querySelector(target);\n                    if (\n                      element?.dataset.played === \"false\" &&\n                      !element?.getAttribute(\"src\")\n                    ) {\n                      const cachedFile = await getCachedFile(fileName);\n                      renderCachedFile(cachedFile, target);\n                    }\n                  });\n\n                  return file;\n                });\n              });\n            });\n          })\n        );\n    })\n    .reduce((torrents, contentItems) => [...torrents, ...contentItems], []);\n\n  runSerial(torrentTasks);\n};\n","export default __webpack_public_path__ + \"static/media/av1.e1539bb2.jpg\";","// @ts-check\nimport { useCallback, useLayoutEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"react-tooltip\";\nimport * as Common from \"shock-common\";\n\nimport Post from \".\";\n\nimport av1 from \"../../images/av1.jpg\";\nimport \"../Post/css/index.scoped.css\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport Loader from \"../Loader\";\nimport * as Store from \"../../store\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\n/**\n * @typedef {import('../../schema').Post} Post\n */\n\nconst SharedPost = ({\n  sharerProfile,\n  originalPostProfile,\n  originalPost: origPost,\n  sharedTimestamp,\n  postPublicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = undefined,\n  openShareModal = (_)=>{}\n}) => {\n  /** @type {Post|undefined} */\n  const originalPost = origPost;\n  const loadPostMedia = useCallback(async () => {\n    if (originalPost) {\n      attachMedia([originalPost], false);\n    }\n  }, [originalPost]);\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id: originalPost.id, shared: true });\n  }, [originalPost, openDeleteModal]);\n\n  useLayoutEffect(() => {\n    Tooltip.rebuild();\n    loadPostMedia();\n  }, [loadPostMedia]);\n\n  const selfPublicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const isOwn = sharerProfile.publicKey === selfPublicKey;\n  const isAppOnline = Common.isAppOnline(\n    Store.useSelector(Store.selectUser(sharerProfile.publicKey)).lastSeenApp\n  );\n\n  return (\n    <div className=\"post shared-post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={sharerProfile.publicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <p>{sharerProfile?.displayName}</p>\n            <p>\n              {sharedTimestamp && typeof sharedTimestamp === \"number\"\n                ? DateTime.fromMillis(sharedTimestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"shared-content\">\n        {originalPost && originalPostProfile ? (\n          <Post\n            id={originalPost.id}\n            timestamp={originalPost.date}\n            // @ts-expect-error tipCounter not wired right now I think\n            tipCounter={originalPost.tipCounter || 0}\n            // @ts-expect-error tipValue ??\n            tipValue={originalPost.tipValue || 0}\n            publicKey={postPublicKey}\n            openTipModal={openTipModal}\n            openUnlockModal={openUnlockModal}\n            contentItems={originalPost.contentItems ?? {}}\n            username={\n              originalPostProfile.displayName ?? originalPostProfile.alias\n            }\n            openShareModal={openShareModal}\n          />\n        ) : (\n          <Loader text=\"Loading Post...\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SharedPost;\n"],"sourceRoot":""}