{"version":3,"sources":["common/InputGroup/index.js","common/Line/index.tsx","pages/Profile/GoLive/css/GoLive.module.css","images/obs-2.svg","pages/Profile/GoLive/GoLive.tsx"],"names":["InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","disabled","className","classNames","group","onClick","fas","Line","color","length","width","style","useMemo","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","module","exports","GoLive","dispatch","useDispatch","history","useHistory","seedProviderPub","Store","content","seedInfo","seedUrl","seedToken","streamLiveToken","streamUserToken","availableTokens","streamBroadcasterUrl","streamContentId","streamPostId","userProfiles","useState","selectedSource","setSelectedSource","loading","setLoading","streamToken","setStreamToken","setUserToken","paragraph","setParagraph","error","setError","promptInfo","setPromptInfo","starting","setStarting","copiedUrl","setCopiedUrl","copiedToken","setCopiedToken","onSubmitCb","React","useCallback","servicePrice","serviceID","a","RequestToken","finalSeedUrl","tokens","latestUserToken","Http","post","token","streamData","data","obsToken","console","log","liveToken","streamPlaybackUrl","rtmp","replace","rtmpUrl","stUrl","contentItems","push","text","streamContent","isPreview","isPrivate","liveStatus","magnetURI","playbackMagnet","statusUrl","userToken","viewersCounter","tags","title","res","status","postId","newPost","Object","entries","find","item","contentId","addStream","streamUrl","streamStatusUrl","errorMessage","message","closePrompt","submitPrompt","onSubmit","e","preventDefault","availableToken","key","prototype","hasOwnProperty","call","SeedServiceProvided","get","service","copyToken","navigator","clipboard","writeText","copyUri","onInputChange","target","stopStream","endUrl","urlForMagnet","removeStream","info","btnClass","c","gStyles","styles","DarkPage","pageTitle","scrolls","bind","Pad","amt","alt","src","obsLogo","id","Modal","modalOpen","toggleModal","contentStyle","padding","Loader","overlay","fullScreen"],"mappings":"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","file":"static/js/30.07f77633.chunk.js","sourcesContent":["import classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label,\n  name,\n  onChange,\n  inputAction,\n  actionIcon,\n  value,\n  inputMode = \"text\",\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stream-type-btn\":\"GoLive_stream-type-btn__3sNtJ\",\"stream-type-btn-icon\":\"GoLive_stream-type-btn-icon__2p9-P\",\"obs-logo\":\"GoLive_obs-logo__1p3Hh\"};","export default __webpack_public_path__ + \"static/media/obs-2.7c61e78e.svg\";","import React, { useCallback, useState } from \"react\";\nimport * as Common from \"shock-common\";\nimport { useDispatch } from \"react-redux\";\nimport c from \"classnames\";\n\nimport \"../css/index.scoped.css\";\nimport { addStream, removeStream } from \"../../../actions/ContentActions\";\nimport Loader from \"../../../common/Loader\";\nimport Http from \"../../../utils/Http\";\nimport obsLogo from \"../../../images/obs-2.svg\";\nimport { RequestToken } from \"../../../utils/seed\";\nimport { useHistory } from \"react-router\";\nimport Modal from \"../../../common/Modal\";\nimport * as Store from \"../../../store\";\nimport DarkPage from \"../../../common/DarkPage\";\nimport * as gStyles from \"../../../styles\";\nimport Line from \"../../../common/Line\";\nimport Pad from \"../../../common/Pad\";\n\nimport styles from \"./css/GoLive.module.css\";\nimport InputGroup from \"../../../common/InputGroup\";\n\nconst GoLive = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const seedProviderPub = Store.useSelector(\n    ({ content }) => content.seedProviderPub\n  );\n  const { seedUrl, seedToken } = Store.useSelector(\n    ({ content }) => content.seedInfo\n  );\n  const streamLiveToken = Store.useSelector(\n    ({ content }) => content.streamLiveToken\n  );\n  const streamUserToken = Store.useSelector(\n    ({ content }) => content.streamUserToken\n  );\n  const availableTokens = Store.useSelector(\n    ({ content }) => content.availableTokens\n  );\n  const streamBroadcasterUrl = Store.useSelector(\n    ({ content }) => content.streamBroadcasterUrl\n  );\n  const streamContentId = Store.useSelector(\n    ({ content }) => content.streamContentId\n  );\n  const streamPostId = Store.useSelector(({ content }) => content.streamPostId);\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const [selectedSource, setSelectedSource] = useState<\"camera\" | \"obs\">(\"obs\");\n  const [loading, setLoading] = useState(false);\n  const [streamToken, setStreamToken] = useState(streamLiveToken);\n  const [, setUserToken] = useState(streamUserToken);\n  const [paragraph, setParagraph] = useState(\"Look I'm streaming!\");\n\n  const [error, setError] = useState<string | null>(null);\n  const [promptInfo, setPromptInfo] = useState(null);\n  const [starting, setStarting] = useState(false);\n\n  const [copiedUrl, setCopiedUrl] = useState(false);\n  const [copiedToken, setCopiedToken] = useState(false);\n\n  const onSubmitCb = React.useCallback(\n    async (servicePrice?, serviceID?) => {\n      try {\n        setLoading(true);\n        const { seedUrl: finalSeedUrl, tokens } = await RequestToken({\n          availableTokens,\n          seedProviderPub,\n          seedToken,\n          seedUrl,\n          serviceID,\n          servicePrice\n        });\n        const [latestUserToken] = tokens;\n        setUserToken(latestUserToken);\n        const { data: streamData } = await Http.post(\n          `${finalSeedUrl}/api/stream/auth`,\n          {\n            token: latestUserToken\n          }\n        );\n        const { token: obsToken } = streamData.data;\n        console.log(obsToken);\n        const liveToken = `${latestUserToken}?key=${obsToken}`;\n        setStreamToken(`${latestUserToken}?key=${obsToken}`);\n        const streamPlaybackUrl = `${finalSeedUrl}/rtmpapi/live/${latestUserToken}/index.m3u8`;\n        const rtmp = finalSeedUrl.replace(\"https\", \"rtmp\");\n        const rtmpUrl = `${rtmp}/live`;\n        const stUrl = `${finalSeedUrl}/rtmpapi/api/streams/live/${latestUserToken}`;\n        let contentItems = [];\n        if (paragraph !== \"\") {\n          contentItems.push({\n            type: \"text/paragraph\",\n            text: paragraph\n          });\n        }\n\n        const streamContent: Common.EmbeddedStream = {\n          height: 0,\n          isPreview: false,\n          isPrivate: false,\n          liveStatus: \"waiting\",\n          magnetURI: streamPlaybackUrl,\n          playbackMagnet: \"\",\n          statusUrl: stUrl,\n          type: \"stream/embedded\",\n          userToken: latestUserToken,\n          viewersCounter: 0,\n          width: 0\n        };\n\n        contentItems.push(streamContent);\n\n        const res = await Http.post(`/api/gun/wall`, {\n          tags: [],\n          title: \"Post\",\n          contentItems\n        });\n        if (res.status === 200) {\n          const { data } = res;\n\n          const [postId, newPost] = data as [string, Common.RawPost];\n          console.log(newPost.contentItems);\n\n          const [contentId] = Object.entries(newPost.contentItems).find(\n            ([_, item]) =>\n              item.type === \"stream/embedded\" &&\n              item.magnetURI === streamPlaybackUrl\n          );\n          addStream({\n            seedToken: latestUserToken,\n            liveToken,\n            streamUrl: streamPlaybackUrl,\n            streamPostId: postId,\n            streamContentId: contentId,\n            streamStatusUrl: stUrl,\n            streamBroadcasterUrl: rtmpUrl\n          })(dispatch);\n          await Http.post(`/api/listenStream`, {\n            postId,\n            contentId,\n            statusUrl: `${finalSeedUrl}/rtmpapi/api/streams/live/${latestUserToken}`\n          });\n          console.log(\"post created successfully\");\n          setLoading(false);\n        } else {\n          setError(\"invalid response status\");\n          setLoading(false);\n        }\n      } catch (err) {\n        console.log(err);\n        setError(err?.errorMessage ?? err?.message);\n        setLoading(false);\n      }\n    },\n    [availableTokens, seedProviderPub, seedToken, seedUrl, dispatch, paragraph]\n  );\n  const closePrompt = useCallback(() => {\n    setPromptInfo(null);\n  }, [setPromptInfo]);\n\n  const submitPrompt = useCallback(() => {\n    const { servicePrice, serviceID } = promptInfo;\n    onSubmitCb(servicePrice, serviceID);\n    setPromptInfo(null);\n  }, [promptInfo, onSubmitCb, setPromptInfo]);\n\n  const onSubmit = useCallback(\n    async e => {\n      try {\n        if (starting) {\n          return;\n        }\n        setStarting(true);\n        e.preventDefault();\n        let availableToken = false;\n        for (const key in availableTokens) {\n          if (Object.prototype.hasOwnProperty.call(availableTokens, key)) {\n            const element = availableTokens[key];\n            if (element[0]) {\n              availableToken = true;\n              break;\n            }\n          }\n        }\n        let serviceID = \"\";\n        if (userProfiles[seedProviderPub]) {\n          //@ts-expect-error\n          serviceID = userProfiles[seedProviderPub].SeedServiceProvided;\n        }\n        if (availableToken || (seedUrl && seedToken)) {\n          onSubmitCb();\n        } else if (serviceID && seedProviderPub) {\n          const { data: service } = await Http.get(\n            `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${serviceID}`\n          );\n          const { servicePrice } = service.data;\n          console.log(service);\n          setPromptInfo({ servicePrice, serviceID });\n        } else {\n          setError(\"No way found to publish content\");\n        }\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setStarting(false);\n      }\n    },\n    [\n      starting,\n      userProfiles,\n      seedProviderPub,\n      seedUrl,\n      seedToken,\n      availableTokens,\n      onSubmitCb\n    ]\n  );\n  const copyToken = useCallback(() => {\n    navigator.clipboard.writeText(streamToken);\n    setCopiedToken(true);\n  }, [streamToken, setCopiedToken]);\n  const copyUri = useCallback(() => {\n    navigator.clipboard.writeText(streamBroadcasterUrl);\n    setCopiedUrl(true);\n  }, [streamBroadcasterUrl, setCopiedUrl]);\n  const onInputChange = useCallback(\n    e => {\n      const { value, name } = e.target;\n      switch (name) {\n        case \"paragraph\": {\n          setParagraph(value);\n          return;\n        }\n        case \"source\": {\n          setSelectedSource(value);\n          return;\n        }\n        default:\n          return;\n      }\n    },\n    [setParagraph, setSelectedSource]\n  );\n\n  const stopStream = useCallback(() => {\n    Http.post(\"/api/stopStream\", {\n      postId: streamPostId,\n      contentId: streamContentId,\n      endUrl: `https://stream.shock.network/api/stream/end`,\n      urlForMagnet: `https://stream.shock.network/api/stream/torrent/${streamUserToken}`,\n      obsToken: streamLiveToken\n    });\n    removeStream()(dispatch);\n    console.info(streamUserToken);\n    history.push(\"/profile\");\n  }, [\n    dispatch,\n    history,\n    streamContentId,\n    streamLiveToken,\n    streamPostId,\n    streamUserToken\n  ]);\n  const btnClass = c(\n    gStyles.col,\n    gStyles.centerJustify,\n    gStyles.centerAlign,\n    styles[\"stream-type-btn\"]\n  );\n\n  return (\n    <>\n      <DarkPage pageTitle=\"GO LIVE\" scrolls>\n        {/*hide for now since it's not implemented and causes a duplication*/}\n        {/*!isLive && selectedSource === \"camera\" ? <CamFeed /> : <Static /> */}\n\n        <div className={c(gStyles.rowCentered, gStyles.width100)}>\n          <div\n            className={btnClass}\n            onClick={setSelectedSource.bind(null, \"camera\")}\n          >\n            <i\n              className={c(styles[\"stream-type-btn-icon\"], \"fas\", \"fa-camera\")}\n            ></i>\n\n            <Pad amt={16} />\n            <Line\n              color={selectedSource === \"camera\" ? \"#4285b9\" : \"white\"}\n              length={36}\n              type=\"horizontal\"\n              width={2}\n            />\n          </div>\n\n          <div\n            className={btnClass}\n            onClick={setSelectedSource.bind(null, \"obs\")}\n          >\n            <img alt=\"\" className={styles[\"obs-logo\"]} src={obsLogo} />\n\n            <Pad amt={16} />\n            <Line\n              color={selectedSource === \"obs\" ? \"#4285b9\" : \"white\"}\n              length={36}\n              type=\"horizontal\"\n              width={2}\n            />\n          </div>\n        </div>\n\n        <div className={gStyles.commonPaddingH}>\n          {(() => {\n            if (error) {\n              return (\n                <>\n                  <p> An error ocurred: </p>\n\n                  <br />\n\n                  <p className=\"error-container\">{error}</p>\n\n                  <button\n                    className=\"shock-form-button\"\n                    onClick={setError.bind(null, null)}\n                  >\n                    Dismiss\n                  </button>\n                </>\n              );\n            }\n\n            if (streamToken) {\n              return (\n                <>\n                  {selectedSource === \"obs\" && (\n                    <p className=\"m-b-1\">\n                      You are ready to go! setup the stream with OBS and watch\n                      it from your profile\n                    </p>\n                  )}\n\n                  <p>Broadcaster:</p>\n\n                  <div className=\"d-flex flex-align-center\">\n                    {/*@ts-expect-error*/}\n                    <InputGroup\n                      name=\"Streamer Url\"\n                      value={streamBroadcasterUrl}\n                      disabled\n                    />\n                    <i\n                      className={\n                        !copiedUrl\n                          ? \"far fa-copy fa-lg m-1\"\n                          : \"fas fa-check fa-lg m-1\"\n                      }\n                      onClick={copyUri}\n                    ></i>\n                  </div>\n                  <p>Stream Key:</p>\n\n                  <div className=\"d-flex flex-align-center\">\n                    {/*@ts-expect-error*/}\n                    <InputGroup\n                      name=\"Stream Key\"\n                      value={streamToken}\n                      disabled\n                    />\n                    <i\n                      className={\n                        !copiedToken\n                          ? \"far fa-copy fa-lg m-1\"\n                          : \"fas fa-check fa-lg m-1\"\n                      }\n                      onClick={copyToken}\n                    ></i>\n                  </div>\n                  <div className=\"flex-center\">\n                    <button\n                      onClick={stopStream}\n                      className=\"shock-form-button-confirm\"\n                    >\n                      STOP\n                    </button>\n                  </div>\n                </>\n              );\n            }\n\n            return (\n              <>\n                <input\n                  className=\"input-field\"\n                  type=\"text\"\n                  name=\"paragraph\"\n                  id=\"paragraph\"\n                  value={paragraph}\n                  onChange={onInputChange}\n                />\n                <button\n                  onClick={onSubmit}\n                  className={c(gStyles.width100, \"shock-form-button-confirm\")}\n                  disabled={selectedSource === \"camera\" || starting}\n                >\n                  {starting ? \"...\" : \"START NOW\"}\n                </button>\n              </>\n            );\n          })()}\n        </div>\n      </DarkPage>\n\n      {promptInfo && (\n        <Modal\n          modalOpen={promptInfo && !loading}\n          toggleModal={closePrompt}\n          contentStyle={{\n            padding: \"1rem\"\n          }}\n        >\n          <p>\n            The service from the default service provider will cost:{\" \"}\n            <strong>{promptInfo.servicePrice} sats</strong>\n          </p>\n\n          <div className={gStyles.rowCentered}>\n            <button className=\"shock-form-button m-1\" onClick={closePrompt}>\n              Cancel\n            </button>\n            <button\n              className=\"shock-form-button-confirm m-1\"\n              onClick={submitPrompt}\n            >\n              Confirm\n            </button>\n          </div>\n        </Modal>\n      )}\n\n      {loading ? <Loader overlay fullScreen text=\"Creating stream...\" /> : null}\n    </>\n  );\n};\n\nexport default GoLive;\n"],"sourceRoot":""}