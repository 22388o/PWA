{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/BottomBar/index.js","common/AddBtn/index.js","common/Modal/components/ModalSubmit/index.js","utils/Cache.js","utils/Promise.js","utils/Torrents.js","utils/Constants.ts","pages/Feed/components/SendTipModal/index.js","pages/Feed/components/ShareModal/index.js","pages/Feed/components/UnlockModal/index.js","common/TipModal/index.tsx","pages/Feed/css/Feed.module.css","pages/Feed/index.js"],"names":["ModalContent","children","style","contentClass","className","classNames","ModalTitle","title","toggleModal","Utils","forceRenderTitleBar","hideXBtn","onClick","OVERLAY_STYLE","borderRadius","Modal","modalOpen","modalTitle","contentStyle","disableBackdropClose","noFullWidth","blueBtn","disableBlueBtn","onClickBlueBtn","redBtn","disableRedBtn","onClickRedBtn","error","textIfLoading","closeModal","useCallback","handleBackdropClick","modal","open","container","Loader","overlay","text","disabled","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","group","fas","BottomBar","useSelector","auth","authenticated","to","activeClassName","AddBtn","icon","iconURL","undefined","nestedMode","large","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","ModalSubmit","getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","console","log","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","length","forEach","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","Object","values","reduce","supportedFormats","fileType","file","extension","split","slice","entries","filter","includes","supportedFileType","webTorrentClient","initializeClient","WebTorrent","default","showDynamicThumbnail","thumbnailFile","item","thumbnailFileType","thumbnailTarget","magnetURI","dynamicThumbnailTarget","querySelector","classList","add","remove","getCacheId","id","key","renderTorrent","torrentMode","torrent","target","torrentElements","torrentElement","contains","contentURL","decodeURIComponent","replace","format","toLowerCase","endsWith","compatibleURL","setAttribute","renderTo","getThumbnailRenderer","thumbnailFileNames","getCacheFileName","thumbnails","sanitizedName","join","thumbnailName","thumbnailIndex","indexOf","cachedThumbnail","attachMedia","posts","all","map","post","contentItems","supportedItems","get","files","match","renderThumbnail","destroy","on","getBlob","err","blob","dataset","played","getAttribute","torrentTasks","torrents","DEFAULT_FOLLOWS","user","private","SendTipModal","tipData","toggleOpen","dispatch","useDispatch","setError","loading","setLoading","amount","setAmount","tipSuccess","setTipSuccess","onInputChange","e","submitTip","preventDefault","sendTipPost","publicKey","postId","postID","errorMessage","message","responseError","response","data","useEffect","onSubmit","ShareModal","shareData","success","setSuccess","submitShare","sharedPostRaw","originalAuthor","shareDate","Date","now","Http","path","ok","close","UnlockModal","unlockData","unlockSuccess","setUnlockSuccess","submitUnlock","unlockContent","TipModalContent","React","lazy","GuestTipModal","props","loader","margin","resetPaymentResponse","fallback","module","exports","Post","SharedPost","FeedPage","Store","history","useHistory","follows","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","shareModalData","setShareModalData","tipPublicKey","setTipPublicKey","selfPublicKey","reloadDone","feed","subscribeFollows","unsubscribeFollows","reloadFollows","toggleTipModal","toggleUnlockModal","toggleShareModal","redirectAuth","push","useLayoutEffect","Common","subscriptions","follow","profileSubscription","subscribeUserProfile","postsSubscription","subscribeUserPosts","sharedPostsSubscription","subSharedPosts","unsubscribe","reloadFeed","setTimeout","go","styles","followed","forceAddBtn","height","createsPost","nameAtBottom","openTipModal","openUnlockModal","openShareModal","originalPostID","sharerPublicKey","sharedBy","shareID","authorId"],"mappings":"iLAUeA,EANM,SAAC,GAAD,QAAGC,gBAAH,MAAc,KAAd,MAAoBC,aAApB,MAA4B,GAA5B,MAAgCC,oBAAhC,MAA+C,GAA/C,SACnB,qBAAKC,UAAWC,IAAW,UAAWF,GAAeD,MAAOA,EAA5D,8BACGD,KCeUK,G,OAjBI,SAAC,GAAD,QACjBC,aADiB,MACT,GADS,MAEjBC,mBAFiB,MAEHC,IAFG,MAGjBC,2BAHiB,aAIjBC,gBAJiB,gBAMjBJ,GAASG,EACP,sBAAKN,UAAU,OAAf,+BACE,mBAAGA,UAAU,aAAb,8BAA2BG,KACzBI,GACA,qBAAKP,UAAU,aAAaQ,QAASJ,EAArC,8BACE,mBAAGJ,UAAU,eAAb,4BAIJ,OC4EAS,G,OAAgB,CACpBC,aAAc,SAGDC,IAxFD,SAAC,GAmBR,IAAD,IAlBJC,iBAkBI,SAjBJR,EAiBI,EAjBJA,YAiBI,IAhBJS,kBAgBI,MAhBS,GAgBT,EAfJhB,EAeI,EAfJA,SAeI,IAdJiB,oBAcI,MAdWT,IAcX,MAbJU,4BAaI,aAZJT,2BAYI,aAXJC,gBAWI,aAVJS,mBAUI,aATJC,eASI,MATM,GASN,MARJC,sBAQI,aAPJC,sBAOI,MAPad,IAOb,MANJe,cAMI,MANK,GAML,MALJC,qBAKI,aAJJC,qBAII,MAJYjB,IAIZ,MAHJN,oBAGI,MAHW,GAGX,MAFJwB,aAEI,MAFI,GAEJ,MADJC,qBACI,MADY,GACZ,EACEC,EAAaC,uBAAY,WAC7BtB,MACC,CAACA,IACEuB,EAAsBD,uBAAY,WACjCX,GACHX,MAED,CAACW,EAAsBX,IAC1B,OACE,sBAAKJ,UAAWC,IAAW,CAAE2B,OAAO,EAAMC,KAAMjB,IAAhD,+BACE,qBAAKZ,UAAU,WAAWQ,QAASmB,EAAnC,uBACA,sBACE3B,UAAWC,IAAW,CACpB6B,WAAW,EACX,0BAA2Bd,IAH/B,+BAMGQ,GACC,cAACO,EAAA,EAAD,CAAQC,SAAO,EAAClC,MAAOW,EAAewB,KAAMT,EAA5C,uBAGF,cAAC,EAAD,CACErB,MAAOU,EACPT,YAAaqB,EACbnB,oBAAqBA,EACrBC,SAAUA,EAJZ,uBAOCgB,GAAS,qBAAKvB,UAAW,+BAAhB,8BAAiDuB,IAE3D,cAAC,EAAD,CAAczB,MAAOgB,EAAcf,aAAcA,EAAjD,8BACuB,kBAAbF,EACN,mBAAGG,UAAU,oBAAb,8BAAkCH,IAElCA,IAIJ,sBAAKG,UAAU,gBAAf,+BACGiB,GACC,wBACEiB,SAAUhB,EACVlB,UAAWC,IAAW,YAAa,YACnCO,QAASW,EAHX,8BAKGF,IAIJG,GACC,wBACEc,SAAUb,EACVrB,UAAWC,IAAW,YAAa,WACnCO,QAASc,EAHX,8BAKGF,e,4FCdAe,IAjEI,SAAC,GAYb,IAAD,IAXJC,aAWI,MAXI,GAWJ,MAVJC,YAUI,MAVG,GAUH,EATJC,EASI,EATJA,SASI,IARJC,mBAQI,MARUlC,IAQV,MAPJmC,kBAOI,MAPS,GAOT,EANJC,EAMI,EANJA,MAMI,IALJC,iBAKI,MAL0D,OAK1D,MAJJC,YAII,MAJG,OAIH,MAHJC,eAGI,MAHM,QAGN,MAFJC,aAEI,aADJX,gBACI,SACJ,OACE,sBACElC,UAAWC,IAAW,CACpB6C,OAAO,EACP,iBAAkBZ,EAClB,cAAeW,IAJnB,+BAOGT,EAAQ,mBAAGpC,UAAU,cAAb,8BAA4BoC,IAAa,KAClD,sBACEpC,UAAWC,IAAW,CACpB,yBAAyB,EACzB,iCAA8C,aAAZ2C,IAHtC,+BAMe,aAAZA,EACC,0BACE5C,UAAU,mCACVqC,KAAMA,EACNC,SAAUA,EACVI,UAAWA,EACXD,MAAOA,EACPP,SAAUA,EANZ,uBASA,uBACElC,UAAU,cACV2C,KAAMA,EACNN,KAAMA,EACNC,SAAUA,EACVI,UAAWA,EACXD,MAAOA,EACPP,SAAUA,EAPZ,uBAUDK,GAAeC,EACd,qBAAKxC,UAAU,qBAAqBQ,QAAS+B,EAA7C,8BACE,mBACEvC,UAAWC,IAAW,aACpB,2BAA2B,EAC3B8C,KAAK,GACJP,GAAa,IAEhBhC,QAAS+B,EANX,yBASA,a,yHClEZ,2BA4CeS,IAzCG,WAGhB,OAFsBC,uBAAY,qBAAGC,KAAgBC,iBAOnD,sBAAKnD,UAAU,uBAAf,UACE,cAAC,IAAD,CACEA,UAAU,iBACVoD,GAAG,YACHC,gBAAgB,iBAHlB,SAKE,mBAAGrD,UAAU,2CAEf,cAAC,IAAD,CACEA,UAAU,iBACVoD,GAAG,QACHC,gBAAgB,iBAHlB,SAKE,mBAAGrD,UAAU,yCAEf,cAAC,IAAD,CACEA,UAAU,iBACVoD,GAAG,WACHC,gBAAgB,iBAHlB,SAKE,mBAAGrD,UAAU,4CAEf,cAAC,IAAD,CACEA,UAAU,iBACVoD,GAAG,QACHC,gBAAgB,iBAHlB,SAKE,mBAAGrD,UAAU,4CA/BV,O,qFCuEIsD,IA1EA,SAAC,GAWT,IAAD,IAVJlB,aAUI,MAVI,KAUJ,MATJmB,YASI,MATG,KASH,MARJC,eAQI,MARM,KAQN,MAPJhD,eAOI,WAPMiD,EAON,MANJC,kBAMI,aALJC,aAKI,aAJJd,aAII,aAHJe,gBAGI,aAFJ/D,gBAEI,MAFO,KAEP,MADJC,aACI,MADI,GACJ,IACkC+D,oBAAS,GAD3C,mBACGC,EADH,KACgBC,EADhB,KAEEC,EAAoBtC,uBAAY,WAChCgC,GACFK,GAAgBD,KAEjB,CAACA,EAAaJ,IAEXO,EAAcC,mBAAQ,WAC1B,OAAIV,EACK,qBAAKW,IAAKX,EAASxD,UAAU,eAAeoE,IAAI,GAAhD,uBAGF,mBAAGpE,UAAS,wBAAYuD,QAAZ,IAAYA,IAAQ,QAAhC,yBACN,CAACA,EAAMC,IAEJa,EAAeH,mBAAQ,WAC3B,OAAI9B,EACK,mBAAGpC,UAAU,gBAAb,8BAA8BoC,IAGhC,OACN,CAACA,IAEJ,OACE,sBACEpC,UAAWC,IAAW,CACpB,qBAAqB,EACrB,2BAA4BmC,EAC5B,gBAAiBuB,EACjB,gBAAiBd,IALrB,+BAQE,sBACE7C,UAAWC,IAAW,CACpB,WAAW,EACX,iBAAkBmC,EAClB,qBAAsBA,EACtB,mBAAoBwB,EACpB,eAAgBE,EAChB,iBAAkBJ,IAEpBlD,QAAO,OAAEA,QAAF,IAAEA,IAAWwD,EACpBlE,MAAOA,EAVT,+BAYGmE,EACAI,KAGFxE,EACC,qBACEG,UAAWC,IAAW,CACpB,mBAAmB,EACnB,uBAAwB6D,IAH5B,8BAMGjE,IAED,U,uDCzEV,kBAUeyE,IARK,SAAC,GAAkC,IAAD,IAA/BrC,YAA+B,MAAxB,SAAwB,EAAdzB,EAAc,EAAdA,QACtC,OACE,qBAAKR,UAAU,aAAaQ,QAASA,EAArC,8BACE,iDAAIyB,Q,uICeGsC,EAAa,uCAAG,WAAMC,GAAN,eAAAC,EAAA,kEAEpBC,IAAUC,MAFU,gCAf3B,IAAIC,SAAQ,SAACC,EAASC,GACpBJ,IAAUK,KAJS,oBAKhBC,MAAK,WAEJ,OADAC,QAAQC,IAAI,2BACLR,IAAUS,aAElBH,MAAK,SAAAI,GACAA,EAAOC,WACTR,EAAQO,GAERN,EAAOM,SAKY,uBAMAV,IAAUY,KAAKd,GANf,cAMnBe,EANmB,yBAOlBA,EAAWC,aAPO,yCASzBP,QAAQQ,KAAR,MATyB,mBAUlB,GAVkB,0DAAH,sDAcbC,EAAmB,SAACC,EAASC,GACxC,IAAMC,EAAWC,SAASC,iBAAiBH,GAU3C,OATIC,GAAYA,EAASG,QACvBH,EAASI,SAAQ,SAAArD,GACVA,EAAQuB,MACXvB,EAAQuB,IAAMwB,EACd/C,EAAQsD,OAAQ,EAChBtD,EAAQuD,UAAW,SAIjB,OAACN,QAAD,IAACA,OAAD,EAACA,EAAUG,SAGRI,EAAW,SAAC5B,EAAU6B,GACjC,OAAO3B,IAAU4B,KAAK9B,EAAU6B,ICjDrBE,EAAY,SAAAC,GACvB,IAAIC,EAAS7B,QAAQC,UAIrB,OAHA2B,EAAMP,SAAQ,SAAAS,GACZD,EAASA,EAAOzB,MAAK,kBAAM0B,UAEtBD,GCFIE,EAAqB,CAChC,iBAAkB,CAChBC,QAAS,CAAC,MAAO,QACjBhE,QAAS,QACTiE,QAAS,CACPV,UAAU,EACVD,OAAO,IAGX,iBAAkB,CAChBU,QAAS,CAAC,MAAO,MAAO,OAAQ,QAChChE,QAAS,MACTiE,QAAS,KASPC,GAL0BC,OAAOC,OAAOL,GAAoBM,QAChE,SAACC,EAAkBC,GAAnB,4BAAoCD,GAApC,YAAyDC,EAASP,YAClE,IAGmB,SAAAQ,GAAS,IAAD,IAC3B,IAAKA,EACH,OAAO,KAGT,IAAMC,EAAS,UAAGD,EAAK/E,YAAR,iBAAG,EAAWiF,MAAM,YAApB,aAAG,EAAuBC,OAAO,GAAG,GALxB,EAMCR,OAAOS,QAAQb,GAAoBc,QAC7D,oDAA6Bb,QAAQc,SAASL,MADzCM,EANoB,oBAU3B,GAAIA,EAAmB,CAAC,IAAD,cACIA,EADJ,GACdtF,EADc,KACR8E,EADQ,KAErB,OAAO,aACL9E,QACG8E,GAIP,OAAO,OAGES,EAAmB,KAEjBC,EAAgB,uCAAG,4BAAApD,EAAA,yDACzBmD,EADyB,gCAEH,0DAFG,OAEtBE,EAFsB,OAG5BF,EAAmB,IAAIE,EAAWC,QAHN,gCAMvBH,GANuB,2CAAH,qDASvBI,EAAuB,SAAC,GAAuC,IAAD,EAOd,IAPtBC,EAAoC,EAApCA,cAAed,EAAqB,EAArBA,SAAUe,EAAW,EAAXA,KACjDC,EAAoBrB,EAAamB,GACjCG,EAAe,2BACnBD,QADmB,IACnBA,OADmB,EACnBA,EAAmBvF,eADA,QACW,MADX,0BAEHsF,EAAKG,UAFF,MAGfC,EAAsB,2CAAuCJ,EAAKG,UAA5C,MAEvBJ,GAAsC,UAArBd,EAASvE,UAC7B,UAAAkD,SAASyC,cAAcH,UAAvB,SAAyCI,UAAUC,IAAI,UACvD,UAAA3C,SAASyC,cAAcD,UAAvB,SAAgDE,UAAUE,OAAO,YAI/DC,EACJ,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,IAAP,OACA,SAAAzB,GAAI,gBACCwB,EADD,YACOC,EADP,YACczB,EAAK/E,QAEnByG,EAAgB,SAAC,GAA0C,IAAxC1B,EAAuC,EAAvCA,KAAMzE,EAAiC,EAAjCA,KAAMoG,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QAC1CpG,EAAUD,EAAKC,QACfqG,EAAM,UAAMrG,EAAN,0BAA+BoG,EAAQX,UAAvC,MACNa,EAAkBpD,SAASC,iBAAiBkD,GAClDhE,QAAQC,IAAI,oBAAqBgE,GACjCA,EAAgBjD,SAAQ,SAAAkD,GAEtB,IAAIA,EAAeX,UAAUY,SAAS,UAAtC,CAGA,IAAMC,EAAaC,mBACjBN,EAAQX,UAAUkB,QAAQ,YAAa,KAND,EAQhB5G,EAAKiE,QAAQa,QAAO,SAAA+B,GAAM,OAChDH,EAAWI,cAAcC,SAAzB,WAAsCF,EAAOC,mBADxCE,EARiC,qBAYpCZ,GAAgBY,EAKpBR,EAAeS,aAAa,MAAOP,GAJjCjC,EAAKyC,SAASV,EAAgBxG,EAAKkE,cAiBnCiD,EACJ,SAAC,GAAD,IAAGC,EAAH,EAAGA,mBAAoBC,EAAvB,EAAuBA,iBAAkBjB,EAAzC,EAAyCA,YAAzC,8CACA,qDAAAtE,EAAA,yDAASD,EAAT,EAASA,SAAUyF,EAAnB,EAAmBA,WAAY/B,EAA/B,EAA+BA,KAAMf,EAArC,EAAqCA,SAC7B+C,EAAgB1F,EAAS8C,MAAM,KAAKC,MAAM,GAAI,GAAG4C,KAAK,KACtDC,EAFR,UAE2BF,EAF3B,UAGQG,EAAiBN,EAAmBO,QAAQF,GAC5CnC,EAAgBgC,EAAWI,GAC3BlC,EAAoBF,EACtBnB,EAAamB,GACb,KACEG,EARR,2BASID,QATJ,IASIA,OATJ,EASIA,EAAmBvF,eATvB,QASkC,MATlC,0BAUoBsF,EAAKG,UAVzB,MAY2B,UAArBlB,EAASvE,UAAuBqF,EAZtC,kCAakC1D,EAC5ByF,EAAiB/B,IAdvB,WAaUsC,EAbV,OAiBI,UAAAzE,SAASyC,cAAcH,UAAvB,SAAyCI,UAAUE,OAAO,WAEtD6B,EAnBR,wBAoBM7E,EAAiB6E,EAAiBnC,GApBxC,kCAwBIU,EAAc,CACZ1B,KAAMa,EACNtF,KAAMwF,EACNY,cACAC,QAASd,IA5Bf,8BAkC2B,UAArBf,EAASvE,SAAwBqF,EAlCvC,wBAmCID,EAAqB,CACnBC,gBACAd,WACAe,SAtCN,oDA4CS,CACLD,kBA7CJ,4CADA,uDAkDWuC,EAAW,uCAAG,8CAAA/F,EAAA,6DAAOgG,EAAP,+BAAe,GAAI1B,IAAnB,0CACEnE,QAAQ8F,IACjCD,EAAME,IAAN,uCAAU,WAAMC,GAAN,qBAAAnG,EAAA,yDACAoG,EAAqBD,EAArBC,aAAcjC,EAAOgC,EAAPhC,GAChBkC,EAAiB/D,OAAOS,QAAQqD,GAAcpD,QAClD,gBAAIS,EAAJ,2BAAcvB,EAAmBuB,EAAKvF,SAHhC,yCAOC,IAPD,uBAUuBkF,IAVvB,cAUFD,EAVE,yBAYDkD,EAAeH,KACpB,mCAAE9B,EAAF,KAAOX,EAAP,YACE,kBACE,IAAItD,SAAQ,SAAAC,GACV,IAAMmF,EAAmBrB,EAAW,CAAEC,KAAIC,QACpBjB,EAAiBmD,IAAI7C,EAAKG,WAG9CxD,GAAQ,GAIV+C,EAAiBa,IAAIP,EAAKG,UAA1B,uCAAqC,WAAMW,GAAN,qBAAAvE,EAAA,sDAEnCI,GAAQ,GAEFmG,EAAQhC,EAAQgC,MAAMvD,QAAO,SAAAL,GAAS,IAAD,IACnCC,EAAS,UAAGD,EAAK/E,YAAR,iBAAG,EAAWiF,MAAM,YAApB,aAAG,EAAuBC,OAAO,GAAG,GAC7CI,EAAoBZ,OAAOC,OAC/BL,GACAc,QAAO,SAAAZ,GAAO,OAAIA,EAAQD,QAAQc,SAASL,MAAY,GACzD,QAAIM,GACeA,EACQf,QAAQc,SAASL,MAMxC4C,EAAae,EAAMvD,QAAO,SAAAL,GAAI,OAClCA,EAAK/E,KAAK4I,MAAM,+BAEZlB,EAAqBE,EAAWU,KAAI,SAAAvD,GAAI,OAC5CA,EAAK/E,KAAKkH,QAAQ,qBAAsB,OAEpC2B,EAAkBpB,EAAqB,CAC3CE,mBACAD,qBACAhB,gBAGFiC,EAAML,IAAN,uCAAU,WAAMvD,GAAN,yBAAA3C,EAAA,0DAEJsF,EAAmBrC,SAASN,EAAK/E,MAF7B,oDAMF8E,EAAWL,EAAaM,GANtB,wDAYF5C,EAAWwF,EAAiB5C,GAE5BxE,EAAUuE,EAASvE,QACnBqG,EAfE,UAeUrG,EAfV,0BAemCsF,EAAKG,UAfxC,gBAgBiB9D,EAAcC,GAhB/B,WAgBFe,EAhBE,OAkBR2F,EAAgB,CACd1G,SAAU4C,EAAK/E,KACf4H,aACA9C,WACAe,UAGE3C,EAzBI,wBA0BAyD,EAAUpB,EAAiBmD,IAAI7C,EAAKG,aAGxCW,EAAQmC,UAGVzF,EAAiBH,EAAY0D,GAhCvB,2BAoCRH,EAAc,CACZ1B,OACAzE,KAAMwE,EACN4B,cACAC,QAASd,IAxCH,4CAAV,uDA4CAc,EAAQoC,GAAG,QAAQ,WACjBJ,EAAML,KAAI,SAAAvD,GACR,IAAMD,EAAWL,EAAaM,GACxB5C,EAAWwF,EAAiB5C,GAC5BxE,EAAUuE,EAASvE,QACnBqG,EAAM,UAAMrG,EAAN,wCAA6CsF,EAAKG,UAAlD,MAEZjB,EAAKiE,QAAL,uCAAa,WAAOC,EAAKC,GAAZ,iBAAA9G,EAAA,0DACP6G,EADO,uBAETrG,QAAQQ,KAAK6F,GAFJ,iCAMXrG,QAAQC,IAAI,yBAA0BV,EAAU+G,GANrC,SAOLnF,EAAS5B,EAAU+G,GAPd,UAUmB,WAArB,QAFH3I,EAAUkD,SAASyC,cAAcU,UAE9B,IAAPrG,OAAA,EAAAA,EAAS4I,QAAQC,UACjB,OAAC7I,QAAD,IAACA,OAAD,EAACA,EAAS8I,aAAa,QAXd,kCAagBnH,EAAcC,GAb9B,QAaHe,EAbG,OAcTG,EAAiBH,EAAY0D,GAdpB,4CAAb,+DAhF+B,2CAArC,+DAxBA,2CAAV,wDAFuB,OACnB0C,EADmB,OAkInBd,EAAec,EAAa1E,QAChC,SAAC2E,EAAUf,GAAX,4BAAgCe,GAAhC,YAA6Cf,MAC7C,IAGFtE,EAAUsE,GAvIe,2CAAH,sD,uDC9JxB,kCAAO,IAAMgB,EAAmC,CAC9C,CAEEC,KAAM,0FACN1G,OAAQ,KACR2G,SAAS,GAEX,CAEED,KAAM,0FACN1G,OAAQ,KACR2G,SAAS,GAEX,CAEED,KAAM,0FACN1G,OAAQ,KACR2G,SAAS,K,uJC+EEC,IAxFM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACzBC,EAAWC,cACXjJ,EAAgBF,uBAAY,qBAAGC,KAAgBC,iBAFL,EAGtBU,mBAAS,IAHa,mBAGzCtC,EAHyC,KAGlC8K,EAHkC,OAIlBxI,oBAAS,GAJS,mBAIzCyI,EAJyC,KAIhCC,EAJgC,OAKpB1I,mBAAS,IALW,mBAKzC2I,EALyC,KAKjCC,EALiC,OAMZ5I,oBAAS,GANG,mBAMzC6I,EANyC,KAM7BC,EAN6B,KAQ1CC,EAAgBlL,uBAAY,SAAAmL,GACV,WAAlBA,EAAE5D,OAAO5G,MACXoK,EAAUI,EAAE5D,OAAOxG,SAEpB,IAEGqK,EAAYpL,sBAAW,uCAC3B,WAAMmL,GAAN,qBAAApI,EAAA,yDACEoI,EAAEE,kBACET,EAFN,iEAMIC,GAAW,GANf,SAOUJ,EACJa,YAAY,CACVR,SACAS,UAAWhB,EAAQgB,UACnBC,OAAQjB,EAAQkB,UAXxB,OAcIR,GAAc,GAdlB,kDAgBI1H,QAAQ1D,MAAR,MACI0K,IACImB,EAAe,KAAIC,QACnBC,EAFK,UAEW,KAAIC,gBAFf,iBAEW,EAAcC,YAFzB,aAEW,EAAoBJ,aAC1Cf,EAAQ,OAACiB,QAAD,IAACA,IAAiBF,IApBhC,yBAuBIb,GAAW,GAvBf,6EAD2B,sDA2B3B,CAACJ,EAAUK,EAAQF,EAASL,IAY9B,OARAwB,qBAAU,WACHxB,IACHM,GAAW,GACXF,EAAS,MACTM,GAAc,MAEf,CAACV,IAGF,cAAC,IAAD,CACE7L,YAAa8L,EACbtL,UAAWqL,GAAW9I,EACtBtC,WAAW,WACXG,aAAW,EAJb,8BAMG0L,EACC,sBAAK1M,UAAU,wBAAf,+BACE,mBAAGA,UAAU,uCAAb,uBACA,mBAAGA,UAAU,oBAAb,4DACA,mBAAGA,UAAU,mBAAb,0BAGF,uBAAMA,UAAU,0BAA0B0N,SAAUZ,EAApD,+BACGvL,EAAQ,qBAAKvB,UAAU,aAAf,8BAA6BuB,IAAe,KACpD+K,EAAU,cAAC,IAAD,CAAQtK,SAAO,EAACC,KAAK,iBAArB,uBAA2C,KACtD,mBAAGjC,UAAU,qBAAb,4GAIA,cAAC,IAAD,CACEqC,KAAK,SACLC,SAAUsK,EACVnK,MAAO+J,EACP9J,UAAU,UACVG,OAAK,EALP,uBAOA,cAAC,IAAD,CAAaZ,KAAK,WAAWzB,QAASsM,EAAtC,8B,0ICDKa,IApFI,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAW1B,EAAiB,EAAjBA,WAAiB,EACtBrI,mBAAS,IADa,mBACzCtC,EADyC,KAClC8K,EADkC,OAElBxI,oBAAS,GAFS,mBAEzCyI,EAFyC,KAEhCC,EAFgC,OAGlB1I,oBAAS,GAHS,mBAGzCgK,EAHyC,KAGhCC,EAHgC,KAK1CC,EAAcrM,sBAAW,uCAC7B,WAAMmL,GAAN,qBAAApI,EAAA,yDACEoI,EAAEE,kBACCT,EAFL,iEAMIC,GAAW,GACK3D,EAAkBgF,EAA1BT,OAAYF,EAAcW,EAAdX,UACde,EAAgB,CACpBC,eAAgBhB,EAChBiB,UAAWC,KAAKC,OAVtB,SAY2BC,IAAKzD,KAAL,eAA0B,CAC/C0D,KAAK,qBAAD,OAAuB1F,GAC3BnG,MAAOuL,IAdb,kBAYYR,KAICe,GACPT,GAAW,GAEXzB,EAAS,0BAnBf,kDAsBIpH,QAAQ1D,MAAR,MAtBJ,yBAwBIgL,GAAW,GAxBf,6EAD6B,sDA4B7B,CAACqB,EAAUtB,IAGPkC,EAAQ9M,uBAAY,WACxBwK,EAAW,QACV,CAACA,IAWJ,OARAuB,qBAAU,WACHG,IACHrB,GAAW,GACXF,EAAS,MACTyB,GAAW,MAEZ,CAACF,IAGF,cAAC,IAAD,CACExN,YAAa8L,EACbtL,YAAagN,EACb/M,WAAW,aACXI,QACIqL,GAAY/K,GAAUsM,GACtBA,GAAWtM,IAAU,KADY,QAGrCL,eAAgBoL,EAChBnL,eAAgB0M,GAAWtM,EAAQiN,EAAQT,EAC3CxN,SAAUsN,EACV7M,aAAW,EAXb,8BAaG6M,EACC,sBAAK7N,UAAU,wBAAf,+BACE,mBAAGA,UAAU,uCAAb,uBACA,mBAAGA,UAAU,oBAAb,+DAGF,uBAAMA,UAAU,0BAA0B0N,SAAUK,EAApD,+BACGxM,EAAQ,mBAAGvB,UAAU,aAAb,8BAA2BuB,IAAa,KAChDA,GAAS,mBAAGvB,UAAU,qBAAb,qDACTsM,EAAU,cAAC,IAAD,CAAQrK,KAAK,aAAb,uBAA+B,MACxCV,IAAU+K,GACV,mBAAGtM,UAAU,qBAAb,kF,4JCEGyO,IAzEK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAYxC,EAAiB,EAAjBA,WAC3BC,EAAWC,cADiC,EAExBvI,mBAAS,IAFe,mBAE3CtC,EAF2C,KAEpC8K,EAFoC,OAGpBxI,oBAAS,GAHW,mBAG3CyI,EAH2C,KAGlCC,EAHkC,OAIR1I,oBAAS,GAJD,mBAI3C8K,EAJ2C,KAI5BC,EAJ4B,KAM5CC,EAAenN,sBAAW,uCAC9B,WAAMmL,GAAN,qBAAApI,EAAA,yDACEoI,EAAEE,kBACCT,EAFL,iEAMIC,GAAW,GANf,SAOUuC,YACJ,IACAJ,EAAWzB,UACXyB,EAAWvB,OAHP2B,CAIJ3C,GAXN,OAYIyC,GAAiB,GAZrB,kDAcI3J,QAAQ1D,MAAR,MACImN,IACItB,EAAe,KAAIC,QACnBC,EAFQ,UAEQ,KAAIC,gBAFZ,iBAEQ,EAAcC,YAFtB,aAEQ,EAAoBJ,aAC1Cf,EAAQ,OAACiB,QAAD,IAACA,IAAiBF,IAlBhC,yBAqBIb,GAAW,GArBf,6EAD8B,sDAyB9B,CAACJ,EAASG,EAASoC,IAYrB,OARAjB,qBAAU,WACHiB,IACHnC,GAAW,GACXF,EAAS,MACTuC,GAAiB,MAElB,CAACF,IAGF,cAAC,IAAD,CACEtO,YAAa8L,EACbtL,YAAa8N,EACb7N,WAAW,iBAHb,8BAKG8N,EACC,sBAAK3O,UAAU,oBAAf,+BACE,mBAAGA,UAAU,uCAAb,uBACA,mBAAGA,UAAU,oBAAb,oEAQF,uBAAMA,UAAU,sBAAsB0N,SAAUmB,EAAhD,+BACGtN,EAAQ,qBAAKvB,UAAU,aAAf,8BAA6BuB,IAAe,KACpD+K,EAAU,cAAC,IAAD,CAAQtK,SAAO,EAACC,KAAK,iBAArB,uBAA2C,KACtD,mBAAGjC,UAAU,iBAAb,uGAGA,cAAC,IAAD,CAAaiC,KAAK,SAASzB,QAASqO,EAApC,8B,mICpEJE,EAAkBC,IAAMC,MAAK,kBAAM,gEAqC1BC,IAnCO,SAACC,GAIhB,IACGjD,EAAwBiD,EAAxBjD,WAAYD,EAAYkD,EAAZlD,QACdE,EAAWC,cACXjJ,EAAgBF,uBAAY,qBAAGC,KAAgBC,iBAE/CiM,EAASlL,mBACb,kBAAM,cAAC,IAAD,CAAQjC,KAAK,aAAanC,MAAO,CAAEuP,OAAQ,UAA3C,yBACN,IAGIb,EAAQ9M,uBAAY,WACxByK,EAASmD,eACTpD,MACC,CAACC,EAAUD,IAEd,OAAKD,GAAW9I,EACP,KAIP,sBAAKnD,UAAU,kBAAf,+BACE,qBAAKA,UAAU,gBAAgBQ,QAASgO,EAAxC,uBACA,qBAAKxO,UAAU,gBAAf,8BACE,cAAC,WAAD,CAAUuP,SAAUH,EAApB,8BACE,cAACL,EAAD,2BAAqBI,GAArB,qC,gECpCVK,EAAOC,QAAU,CAAC,SAAW,yB,uOCmCvBC,EAAOV,IAAMC,MAAK,kBAAM,qEACxBU,EAAaX,IAAMC,MAAK,kBAAM,sEA8LrBW,UA5LE,WACf,IAAMzD,EAAW0D,gBACXC,EAAUC,cACV5M,EAAgB0M,eAAkB,qBAAG3M,KAAgBC,iBACrD6M,EAAUH,cAAkBA,iBAC5BpF,EAAQoF,cACZA,4CANmB,EAQmBhM,mBAAS,MAR5B,mBAQdoM,EARc,KAQAC,EARA,OASyBrM,mBAAS,MATlC,mBASdsM,EATc,KASGC,EATH,OAUuBvM,mBAAS,MAVhC,mBAUdwM,EAVc,KAUEC,EAVF,OAWmBzM,mBAAS,MAX5B,mBAWd0M,EAXc,KAWAC,EAXA,KAYFC,EAAkBZ,cAAkBA,kBAA/C5C,UACFyD,EAAab,eAAkB,qBAAGc,KAAgBD,cAExDjD,qBAAU,WAER,OADAtB,EAASyE,eACF,WACLzE,EAAS0E,kBAEV,CAAC1E,IAEJsB,qBAAU,WACHtK,GACHgJ,EAAS2E,YAAcjF,QAExB,CAAC1I,EAAegJ,IAEnB,IAAM4E,EAAiBrP,uBACrB,SAAAuK,GAEE,GADAhH,QAAQC,IAAI+G,GACRgE,IAAiBhE,EAGnB,OAFAiE,EAAgB,WAChBM,EAAgB,MAIlBN,EAAgBjE,GAChBuE,EAAgBvE,EAAQgB,aAE1B,CAACgD,IAEGe,EAAoBtP,uBACxB,SAAAgN,GACEzJ,QAAQC,IAAIwJ,IACRyB,GAAoBzB,GACtB0B,EAAmB,MAGrBA,EAAmB1B,KAErB,CAACyB,IAGGc,EAAmBvP,uBACvB,SAAAkM,GACE3I,QAAQC,IAAI0I,IACRyC,GAAmBzC,GACrB0C,EAAkB,MAGpBA,EAAkB1C,KAEpB,CAACyC,IAGGa,EAAexP,uBAAY,WAC/BoO,EAAQqB,KAAK,WACZ,CAACrB,IAqCJ,OAnCAsB,2BAAgB,WACd5G,YACEC,EAAMhD,QAAO,SAAAmD,GAAI,OAAKyG,IAAoBzG,OAC1C,KAED,CAACH,IAEJgD,qBAAU,WACR,IAAM6D,EAAgBtB,EAAQrF,KAAI,SAAA4G,GAChC,IAAMC,EAAsBrF,EAASsF,YAAqBF,EAAOzF,OAC3D4F,EAAoBvF,EAASwF,YAAmBJ,EAAOzF,OACvD8F,EAA0BzF,EAAS0F,YAAeN,EAAOzF,OAE/D,OAAO,WACL0F,IACAE,IACAE,QAIJ,OAAO,WACLN,EAAc3G,KAAI,SAAAmH,GAAW,OAAIA,UAElC,CAAC9B,EAAS7D,IAGbsB,qBAAU,WACJhD,EAAMzE,OAAS,IAAM0K,IACvBvE,EAAS4F,eACTC,YAAW,WACTlC,EAAQmC,GAAG,KACV,QAEJ,CAACvB,EAAYZ,EAAS3D,EAAU1B,EAAMzE,SAGvC,sBAAKhG,UAAU,2BAAf,+BACE,sBAAKA,UAAWkS,IAAOC,SAAvB,+BACGhP,GACC,cAAC,IAAD,CACEiP,aAAW,EACXC,OAAQ,GACRpF,UAAWwD,EACX6B,aAAW,EAJb,uBAFJ,OAUGtC,QAVH,IAUGA,OAVH,EAUGA,EAASrF,KAAI,SAAA4G,GACZ,OACE,cAAC,IAAD,CACEc,OAAQ,GAERE,cAAY,EACZtF,UAAWsE,EAAOzF,KAJpB,sBAEOyF,EAAOzF,YAQpB,sBAAK9L,UAAU,cAAf,+BACE,mBAAGA,UAAU,aAAb,uCACA,mBAAGA,UAAU,MAAb,wCACA,mBAAGA,UAAU,MAAb,4CAEF,sBAAKA,UAAU,eAAf,+BACoB,IAAjByK,EAAMzE,QAAgB,cAAC,IAAD,CAAQ/D,KAAK,mBAAb,uBACtBwI,EAAME,KAAI,SAAAC,GACT,OAAIyG,IAAoBzG,GAEpB,cAAC,WAAD,CAAU2E,SAAU,cAAC,IAAD,wBAApB,8BACE,cAACI,EAAD,CACE6C,aAAczB,EACd0B,gBAAiBzB,EACjB0B,eAAgBzB,EAChB9D,OAAQvC,EAAK+H,eACbC,gBAAiBhI,EAAKiI,SALxB,wBADmCjI,EAAKkI,SAa5C,cAAC,WAAD,CAAUvD,SAAU,cAAC,IAAD,wBAApB,8BACE,cAACG,EAAD,CACE9G,GAAIgC,EAAKhC,GACTqE,UAAWrC,EAAKmI,SAChBP,aAAczB,EACd0B,gBAAiBzB,EACjB0B,eAAgBzB,EALlB,wBADmCrG,EAAKhC,UAYhD,cAAC,IAAD,CAAcqD,QAASgE,EAAc/D,WAAY6E,EAAjD,uBACA,cAAC,IAAD,CACE9D,UAAWsD,EACXtE,QAASgE,EACT/D,WAAY6E,EAHd,uBAKA,cAAC,IAAD,CACErC,WAAYyB,EACZjE,WAAY8E,EAFd,uBAIA,cAAC,IAAD,CAAYpD,UAAWyC,EAAgBnE,WAAY+E,EAAnD,wBACE9N,GACA,cAAC,IAAD,CACE3C,QAAS0Q,EACTvN,OAAK,EACLJ,KAAK,OACLnB,MAAM,0BAJR,uBAOF,cAAC,IAAD","file":"static/js/15.bca9a102.chunk.js","sourcesContent":["import classNames from \"classnames\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children = null, style = {}, contentClass = \"\" }) => (\n  <div className={classNames(\"content\", contentClass)} style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import * as Utils from \"../../../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({\n  title = \"\",\n  toggleModal = Utils.EMPTY_FN,\n  forceRenderTitleBar = false,\n  hideXBtn = false\n}) =>\n  title || forceRenderTitleBar ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      {!hideXBtn && (\n        <div className=\"head-close\" onClick={toggleModal}>\n          <i className=\"fas fa-times\"></i>\n        </div>\n      )}\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","import { useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\nimport Loader from \"../../common/Loader\";\n\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\n\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = Utils.EMPTY_OBJ,\n  disableBackdropClose = false,\n  forceRenderTitleBar = false,\n  hideXBtn = false,\n  noFullWidth = false,\n  blueBtn = \"\",\n  disableBlueBtn = false,\n  onClickBlueBtn = Utils.EMPTY_FN,\n  redBtn = \"\",\n  disableRedBtn = false,\n  onClickRedBtn = Utils.EMPTY_FN,\n  contentClass = \"\",\n  error = \"\",\n  textIfLoading = \"\"\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  const handleBackdropClick = useCallback(() => {\n    if (!disableBackdropClose) {\n      toggleModal();\n    }\n  }, [disableBackdropClose, toggleModal]);\n  return (\n    <div className={classNames({ modal: true, open: modalOpen })}>\n      <div className=\"backdrop\" onClick={handleBackdropClick} />\n      <div\n        className={classNames({\n          container: true,\n          \"container-no-full-width\": noFullWidth\n        })}\n      >\n        {textIfLoading && (\n          <Loader overlay style={OVERLAY_STYLE} text={textIfLoading} />\n        )}\n\n        <ModalTitle\n          title={modalTitle}\n          toggleModal={closeModal}\n          forceRenderTitleBar={forceRenderTitleBar}\n          hideXBtn={hideXBtn}\n        />\n\n        {error && <div className={\"form-error form-error-margin\"}>{error}</div>}\n\n        <ModalContent style={contentStyle} contentClass={contentClass}>\n          {typeof children === \"string\" ? (\n            <p className=\"text-align-center\">{children}</p>\n          ) : (\n            children\n          )}\n        </ModalContent>\n\n        <div className=\"color-buttons\">\n          {blueBtn && (\n            <button\n              disabled={disableBlueBtn}\n              className={classNames(\"color-btn\", \"blue-btn\")}\n              onClick={onClickBlueBtn}\n            >\n              {blueBtn}\n            </button>\n          )}\n\n          {redBtn && (\n            <button\n              disabled={disableRedBtn}\n              className={classNames(\"color-btn\", \"red-btn\")}\n              onClick={onClickRedBtn}\n            >\n              {redBtn}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst OVERLAY_STYLE = {\n  borderRadius: \"15px\"\n};\n\nexport default Modal;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label = \"\",\n  name = \"\",\n  onChange,\n  inputAction = Utils.EMPTY_FN,\n  actionIcon = \"\",\n  value,\n  inputMode = /** @type {React.HTMLAttributes['inputMode']} */ (\"text\"),\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled = false\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"../../store\";\n\nconst BottomBar = () => {\n  const authenticated = useSelector(({ auth }) => auth.authenticated);\n\n  if (!authenticated) {\n    return null;\n  }\n\n  return (\n    <div className=\"bottom-nav-container\">\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/overview\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n      </NavLink>\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/chat\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n      </NavLink>\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/profile\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n      </NavLink>\n      <NavLink\n        className=\"bottom-nav-btn\"\n        to=\"/feed\"\n        activeClassName=\"active-nav-btn\"\n      >\n        <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import \"./ModalSubmit.scoped.css\";\n\nconst ModalSubmit = ({ text = \"Submit\", onClick }) => {\n  return (\n    <div className=\"submit-btn\" onClick={onClick}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default ModalSubmit;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = false;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nexport const supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: false,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nexport const supportedFormats = Object.values(supportedFileTypes).reduce(\n  (supportedFormats, fileType) => [...supportedFormats, ...fileType.formats],\n  []\n);\n\nconst _getFileType = file => {\n  if (!file) {\n    return null;\n  }\n\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const [supportedFileType] = Object.entries(supportedFileTypes).filter(\n    ([type, options]) => options.formats.includes(extension)\n  );\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport let webTorrentClient = null;\n\nexport const initializeClient = async () => {\n  if (!webTorrentClient) {\n    const WebTorrent = await import(\"webtorrent\");\n    webTorrentClient = new WebTorrent.default();\n  }\n\n  return webTorrentClient;\n};\n\nconst showDynamicThumbnail = ({ thumbnailFile, fileType, item }) => {\n  const thumbnailFileType = _getFileType(thumbnailFile);\n  const thumbnailTarget = `${\n    thumbnailFileType?.element ?? \"img\"\n  }[data-torrent=\"${item.magnetURI}\"]`;\n  const dynamicThumbnailTarget = `.dynamic-thumbnail[data-torrent=\"${item.magnetURI}\"]`;\n\n  if (!thumbnailFile && fileType.element === \"video\") {\n    document.querySelector(thumbnailTarget)?.classList.add(\"hidden\");\n    document.querySelector(dynamicThumbnailTarget)?.classList.remove(\"hidden\");\n  }\n};\n\nconst getCacheId =\n  ({ id, key }) =>\n  file =>\n    `${id}-${key}-${file.name}`;\n\nconst renderTorrent = ({ file, type, torrentMode, torrent }) => {\n  const element = type.element;\n  const target = `${element}[data-torrent=\"${torrent.magnetURI}\"]`;\n  const torrentElements = document.querySelectorAll(target);\n  console.log(\"Torrent Elements:\", torrentElements);\n  torrentElements.forEach(torrentElement => {\n    // Don't render hidden videos\n    if (torrentElement.classList.contains(\"hidden\")) {\n      return;\n    }\n    const contentURL = decodeURIComponent(\n      torrent.magnetURI.replace(/.*(ws=)/gi, \"\")\n    );\n    const [compatibleURL] = type.formats.filter(format =>\n      contentURL.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n    );\n\n    if (torrentMode || !compatibleURL) {\n      file.renderTo(torrentElement, type.options);\n      return;\n    }\n\n    torrentElement.setAttribute(\"src\", contentURL);\n  });\n};\n\nexport const isURLCompatible = ({ url, type = \"video/embedded\" }) => {\n  const fileType = supportedFileTypes[type];\n  const [compatibleURL] = fileType.formats.filter(format =>\n    url.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n  );\n\n  return !!compatibleURL;\n};\n\nconst getThumbnailRenderer =\n  ({ thumbnailFileNames, getCacheFileName, torrentMode }) =>\n  async ({ fileName, thumbnails, item, fileType }) => {\n    const sanitizedName = fileName.split(\".\").slice(0, -1).join(\".\");\n    const thumbnailName = `${sanitizedName}-thumb`;\n    const thumbnailIndex = thumbnailFileNames.indexOf(thumbnailName);\n    const thumbnailFile = thumbnails[thumbnailIndex];\n    const thumbnailFileType = thumbnailFile\n      ? _getFileType(thumbnailFile)\n      : null;\n    const thumbnailTarget = `${\n      thumbnailFileType?.element ?? \"img\"\n    }[data-torrent=\"${item.magnetURI}\"]`;\n\n    if (fileType.element === \"video\" && thumbnailFile) {\n      const cachedThumbnail = await getCachedFile(\n        getCacheFileName(thumbnailFile)\n      );\n\n      document.querySelector(thumbnailTarget)?.classList.remove(\"hidden\");\n\n      if (cachedThumbnail) {\n        renderCachedFile(cachedThumbnail, thumbnailTarget);\n        return;\n      }\n\n      renderTorrent({\n        file: thumbnailFile,\n        type: thumbnailFileType,\n        torrentMode,\n        torrent: item\n      });\n\n      return;\n    }\n\n    if (fileType.element === \"video\" && !thumbnailFile) {\n      showDynamicThumbnail({\n        thumbnailFile,\n        fileType,\n        item\n      });\n\n      return;\n    }\n\n    return {\n      thumbnailFile\n    };\n  };\n\nexport const attachMedia = async (posts = [], torrentMode = true) => {\n  const torrentTasks = await Promise.all(\n    posts.map(async post => {\n      const { contentItems, id } = post;\n      const supportedItems = Object.entries(contentItems).filter(\n        ([, item]) => supportedFileTypes[item.type]\n      );\n\n      if (!supportedItems) {\n        return [];\n      }\n\n      const webTorrentClient = await initializeClient();\n\n      return supportedItems.map(\n        ([key, item]) =>\n          () =>\n            new Promise(resolve => {\n              const getCacheFileName = getCacheId({ id, key });\n              const torrentExists = webTorrentClient.get(item.magnetURI);\n\n              if (torrentExists) {\n                resolve(true);\n                return;\n              }\n\n              webTorrentClient.add(item.magnetURI, async torrent => {\n                // Proceed to the next torrent in queue\n                resolve(true);\n\n                const files = torrent.files.filter(file => {\n                  const extension = file.name?.split(\".\")?.slice(-1)[0];\n                  const supportedFileType = Object.values(\n                    supportedFileTypes\n                  ).filter(options => options.formats.includes(extension))[0];\n                  if (supportedFileType) {\n                    const fileType = supportedFileType;\n                    const matched = fileType.formats.includes(extension);\n                    return matched;\n                  }\n                  return false;\n                });\n\n                const thumbnails = files.filter(file =>\n                  file.name.match(/-thumb\\.([\\w\\d]){2,4}$/gi)\n                );\n                const thumbnailFileNames = thumbnails.map(file =>\n                  file.name.replace(/\\.([\\w\\d]){2,4}$/gi, \"\")\n                );\n                const renderThumbnail = getThumbnailRenderer({\n                  getCacheFileName,\n                  thumbnailFileNames,\n                  torrentMode\n                });\n\n                files.map(async file => {\n                  // Skip thumbnails\n                  if (thumbnailFileNames.includes(file.name)) {\n                    return;\n                  }\n\n                  const fileType = _getFileType(file);\n\n                  if (!fileType) {\n                    return;\n                  }\n\n                  const fileName = getCacheFileName(file);\n\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                  const cachedFile = await getCachedFile(fileName);\n\n                  renderThumbnail({\n                    fileName: file.name,\n                    thumbnails,\n                    fileType,\n                    item\n                  });\n\n                  if (cachedFile) {\n                    const torrent = webTorrentClient.get(item.magnetURI);\n\n                    if (torrent) {\n                      torrent.destroy();\n                    }\n\n                    renderCachedFile(cachedFile, target);\n                    return;\n                  }\n\n                  renderTorrent({\n                    file,\n                    type: fileType,\n                    torrentMode,\n                    torrent: item\n                  });\n                });\n\n                torrent.on(\"done\", () => {\n                  files.map(file => {\n                    const fileType = _getFileType(file);\n                    const fileName = getCacheFileName(file);\n                    const element = fileType.element;\n                    const target = `${element}.torrent-video[data-torrent=\"${item.magnetURI}\"]`;\n\n                    file.getBlob(async (err, blob) => {\n                      if (err) {\n                        console.warn(err);\n                        return;\n                      }\n\n                      console.log(\"Caching loaded file...\", fileName, blob);\n                      await saveFile(fileName, blob);\n                      const element = document.querySelector(target);\n                      if (\n                        element?.dataset.played === \"false\" &&\n                        !element?.getAttribute(\"src\")\n                      ) {\n                        const cachedFile = await getCachedFile(fileName);\n                        renderCachedFile(cachedFile, target);\n                      }\n                    });\n                  });\n                });\n              });\n            })\n      );\n    })\n  );\n  const contentItems = torrentTasks.reduce(\n    (torrents, contentItems) => [...torrents, ...contentItems],\n    []\n  );\n\n  runSerial(contentItems);\n};\n","import * as Common from \"shock-common\";\n\nexport const DEFAULT_FOLLOWS: Common.Follow[] = [\n  {\n    // Lightning.Page\n    user: \"tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\",\n    status: \"ok\",\n    private: false\n  },\n  {\n    // Guy Swann\n    user: \"CDfURSDaABun7sbzxt1LvUrTrtgLza_3NrCKrmUWIYU.Ssr3U9JN6cpFI9BZLL-1HLM2vS0ECEt-H4iUXvhkGzU\",\n    status: \"ok\",\n    private: false\n  },\n  {\n    // JohnOnChain\n    user: \"Fd_7lUhwH7JoHbg6UKnGO9rYsZBOuR1KSbpZz8-Sbcw.fUu68TPuBWl83LBKgAbuiy0r1hMqnUevzyEgqPYu0B4\",\n    status: \"ok\",\n    private: false\n  }\n];\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"../../../../store\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { sendTipPost } from \"../../../../actions/FeedActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst SendTipModal = ({ tipData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const authenticated = useSelector(({ auth }) => auth.authenticated);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [tipSuccess, setTipSuccess] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n  }, []);\n\n  const submitTip = useCallback(\n    async e => {\n      e.preventDefault();\n      if (loading) {\n        return;\n      }\n      try {\n        setLoading(true);\n        await dispatch(\n          sendTipPost({\n            amount,\n            publicKey: tipData.publicKey,\n            postId: tipData.postID\n          })\n        );\n        setTipSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (tipData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, amount, loading, tipData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!tipData) {\n      setLoading(false);\n      setError(null);\n      setTipSuccess(false);\n    }\n  }, [tipData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={tipData && authenticated}\n      modalTitle=\"Send Tip\"\n      noFullWidth\n    >\n      {tipSuccess ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post tipped successfully!</p>\n          <p className=\"tip-success-desc\"></p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitTip}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc m-1\">\n            Please specify the amount of sats you'd like to tip this user with\n            below.\n          </p>\n          <InputGroup\n            name=\"amount\"\n            onChange={onInputChange}\n            value={amount}\n            inputMode=\"decimal\"\n            small\n          />\n          <ModalSubmit text=\"SEND TIP\" onClick={submitTip} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SendTipModal;\n","import { useCallback, useEffect, useState } from \"react\";\nimport Modal from \"../../../../common/Modal\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\nimport { Http } from \"../../../../utils\";\n\nconst ShareModal = ({ shareData, toggleOpen }) => {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const submitShare = useCallback(\n    async e => {\n      e.preventDefault();\n      if(loading){\n        return\n      }\n      try {\n        setLoading(true);\n        const { postID: id, publicKey } = shareData;\n        const sharedPostRaw = {\n          originalAuthor: publicKey,\n          shareDate: Date.now()\n        };\n        const { data } = await Http.post(`/api/gun/put`, {\n          path: `$user>sharedPosts>${id}`,\n          value: sharedPostRaw\n        });\n        if (data.ok) {\n          setSuccess(true);\n        } else {\n          setError(\"Share operation failed\");\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [shareData,loading]\n  );\n\n  const close = useCallback(() => {\n    toggleOpen(null);\n  }, [toggleOpen]);\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!shareData) {\n      setLoading(false);\n      setError(null);\n      setSuccess(false);\n    }\n  }, [shareData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!shareData}\n      modalTitle=\"Share post\"\n      blueBtn={\n        (!loading && !error && !success && \"SHARE\") ||\n        ((success || error) && \"OK\")\n      }\n      disableBlueBtn={loading}\n      onClickBlueBtn={success || error ? close : submitShare}\n      hideXBtn={success}\n      noFullWidth\n    >\n      {success ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post shared successfully!</p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitShare}>\n          {error ? <p className=\"form-error\">{error}</p> : null}\n          {error && <p className=\"tip-modal-desc m-1\">You can try again.</p>}\n          {loading ? <Loader text=\"Sharing...\" /> : null}\n          {!error && !loading && (\n            <p className=\"tip-modal-desc m-1\">\n              This post will be shared on your profile\n            </p>\n          )}\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default ShareModal;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { unlockContent } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst UnlockModal = ({ unlockData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [unlockSuccess, setUnlockSuccess] = useState(false);\n\n  const submitUnlock = useCallback(\n    async e => {\n      e.preventDefault();\n      if(loading){\n        return\n      }\n      try {\n        setLoading(true);\n        await unlockContent(\n          100,\n          unlockData.publicKey,\n          unlockData.postID\n        )(dispatch);\n        setUnlockSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (unlockData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch,loading, unlockData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!unlockData) {\n      setLoading(false);\n      setError(null);\n      setUnlockSuccess(false);\n    }\n  }, [unlockData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!unlockData}\n      modalTitle=\"Unlock content\"\n    >\n      {unlockSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Content unlocked successfully!</p>\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitUnlock}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            100 sats will be sent to the owner of the post to unlock the content\n          </p>\n          <ModalSubmit text=\"UNLOCK\" onClick={submitUnlock} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default UnlockModal;\n","import React, { Suspense, useCallback, useMemo } from \"react\";\nimport { resetPaymentResponse } from \"../../actions/GuestActions\";\nimport { useSelector } from \"../../store\";\nimport Loader from \"../Loader\";\nimport \"./css/index.scoped.css\";\nimport { useDispatch } from \"react-redux\";\n\nconst TipModalContent = React.lazy(() => import(\"./components/Modal\"));\n\nconst GuestTipModal = (props: {\n  toggleOpen: (data?: any) => void;\n  tipData: any;\n  publicKey: string;\n}) => {\n  const { toggleOpen, tipData } = props;\n  const dispatch = useDispatch();\n  const authenticated = useSelector(({ auth }) => auth.authenticated);\n\n  const loader = useMemo(\n    () => <Loader text=\"Loading...\" style={{ margin: \"40px 0\" }} />,\n    []\n  );\n\n  const close = useCallback(() => {\n    dispatch(resetPaymentResponse());\n    toggleOpen();\n  }, [dispatch, toggleOpen]);\n\n  if (!tipData || authenticated) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal-overlay\" onClick={close}></div>\n      <div className=\"modal-content\">\n        <Suspense fallback={loader}>\n          <TipModalContent {...props} />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default GuestTipModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followed\":\"Feed_followed__1ZWr5\"};","// @ts-check\nimport React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useState\n} from \"react\";\nimport * as Common from \"shock-common\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { attachMedia } from \"../../utils/Torrents\";\nimport * as Store from \"../../store\";\nimport BottomBar from \"../../common/BottomBar\";\n\nimport SendTipModal from \"./components/SendTipModal\";\nimport ShareModal from \"../Feed/components/ShareModal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\n\nimport \"./css/index.scoped.css\";\nimport UnlockModal from \"./components/UnlockModal\";\nimport {\n  subscribeFollows,\n  subscribeUserPosts,\n  unsubscribeFollows,\n  reloadFeed,\n  subSharedPosts,\n  reloadFollows\n} from \"../../actions/FeedActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport styles from \"./css/Feed.module.css\";\nimport { DEFAULT_FOLLOWS } from \"../../utils/Constants\";\nimport GuestTipModal from \"../../common/TipModal\";\nimport AddBtn from \"../../common/AddBtn\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst FeedPage = () => {\n  const dispatch = Store.useDispatch();\n  const history = useHistory();\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const follows = Store.useSelector(Store.selectFollows);\n  const posts = Store.useSelector(\n    Store.selectAllPostsFromFollowedNewestToOldest\n  );\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [shareModalData, setShareModalData] = useState(null);\n  const [tipPublicKey, setTipPublicKey] = useState(null);\n  const { publicKey: selfPublicKey } = Store.useSelector(Store.selectSelfUser);\n  const reloadDone = Store.useSelector(({ feed }) => feed.reloadDone);\n  // Effect to sub follows\n  useEffect(() => {\n    dispatch(subscribeFollows());\n    return () => {\n      dispatch(unsubscribeFollows());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!authenticated) {\n      dispatch(reloadFollows(DEFAULT_FOLLOWS));\n    }\n  }, [authenticated, dispatch]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      console.log(tipData);\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n        setTipPublicKey(null);\n        return;\n      }\n\n      setTipModalOpen(tipData);\n      setTipPublicKey(tipData.publicKey);\n    },\n    [tipModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      console.log(unlockData);\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const toggleShareModal = useCallback(\n    shareData => {\n      console.log(shareData);\n      if (shareModalData || !shareData) {\n        setShareModalData(null);\n      }\n\n      setShareModalData(shareData);\n    },\n    [shareModalData]\n  );\n\n  const redirectAuth = useCallback(() => {\n    history.push(\"/auth\");\n  }, [history]);\n\n  useLayoutEffect(() => {\n    attachMedia(\n      posts.filter(post => !Common.isSharedPost(post)),\n      false\n    );\n  }, [posts]);\n\n  useEffect(() => {\n    const subscriptions = follows.map(follow => {\n      const profileSubscription = dispatch(subscribeUserProfile(follow.user));\n      const postsSubscription = dispatch(subscribeUserPosts(follow.user));\n      const sharedPostsSubscription = dispatch(subSharedPosts(follow.user));\n\n      return () => {\n        profileSubscription();\n        postsSubscription();\n        sharedPostsSubscription();\n      };\n    });\n\n    return () => {\n      subscriptions.map(unsubscribe => unsubscribe());\n    };\n  }, [follows, dispatch]);\n\n  //effect to reload the feed once after a cache clear\n  useEffect(() => {\n    if (posts.length > 0 && !reloadDone) {\n      dispatch(reloadFeed());\n      setTimeout(() => {\n        history.go(0);\n      }, 3000);\n    }\n  }, [reloadDone, history, dispatch, posts.length]);\n\n  return (\n    <div className=\"page-container feed-page\">\n      <div className={styles.followed}>\n        {authenticated && (\n          <ShockAvatar\n            forceAddBtn\n            height={60}\n            publicKey={selfPublicKey}\n            createsPost\n          />\n        )}\n\n        {follows?.map(follow => {\n          return (\n            <ShockAvatar\n              height={60}\n              key={follow.user}\n              nameAtBottom\n              publicKey={follow.user}\n            />\n          );\n        })}\n      </div>\n\n      <div className=\"tabs-holder\">\n        <p className=\"tab active\">Feed</p>\n        <p className=\"tab\">Saved</p>\n        <p className=\"tab\">Videos</p>\n      </div>\n      <div className=\"posts-holder\">\n        {posts.length === 0 && <Loader text=\"loading posts...\" />}\n        {posts.map(post => {\n          if (Common.isSharedPost(post)) {\n            return (\n              <Suspense fallback={<Loader />} key={post.shareID}>\n                <SharedPost\n                  openTipModal={toggleTipModal}\n                  openUnlockModal={toggleUnlockModal}\n                  openShareModal={toggleShareModal}\n                  postID={post.originalPostID}\n                  sharerPublicKey={post.sharedBy}\n                />\n              </Suspense>\n            );\n          }\n\n          return (\n            <Suspense fallback={<Loader />} key={post.id}>\n              <Post\n                id={post.id}\n                publicKey={post.authorId}\n                openTipModal={toggleTipModal}\n                openUnlockModal={toggleUnlockModal}\n                openShareModal={toggleShareModal}\n              />\n            </Suspense>\n          );\n        })}\n      </div>\n      <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n      <GuestTipModal\n        publicKey={tipPublicKey}\n        tipData={tipModalData}\n        toggleOpen={toggleTipModal}\n      />\n      <UnlockModal\n        unlockData={unlockModalData}\n        toggleOpen={toggleUnlockModal}\n      />\n      <ShareModal shareData={shareModalData} toggleOpen={toggleShareModal} />\n      {!authenticated && (\n        <AddBtn\n          onClick={redirectAuth}\n          large\n          icon=\"user\"\n          label=\"Create a Lightning Page\"\n        />\n      )}\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default FeedPage;\n"],"sourceRoot":""}