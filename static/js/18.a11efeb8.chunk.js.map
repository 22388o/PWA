{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/BottomBar/index.js","common/AddBtn/index.js","pages/Messages/components/Message/index.js","pages/Messages/components/Request/index.js","pages/Messages/index.js"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","BottomBar","to","activeClassName","AddBtn","label","icon","iconURL","undefined","nestedMode","large","small","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","Message","name","subtitle","time","publicKey","chatLoaded","dispatch","useDispatch","gunPublicKey","useSelector","node","messagesListener","setMessagesListener","contactName","processDisplayName","subscribeMessages","a","subscribeChatMessages","subscription","console","warn","useEffect","log","close","Request","sent","user","Store","displayName","MessagesPage","addModalOpen","setAddModalOpen","sendError","setSendError","sendRequestLoading","setSendRequestLoading","setChatLoaded","contacts","chat","messages","sentRequests","receivedRequests","loadChat","loadChatData","sendRequest","shockUser","pk","startsWith","split","slice","length","FieldError","field","message","test","sendHandshakeRequest","error","sendRequestClipboard","navigator","clipboard","readText","clipboardText","MainNav","solid","pageTitle","map","request","contact","lastMessage","body","timestamp","Date","now","DateTime","fromMillis","toRelative","Loader","text","overlay","borderRadius"],"mappings":"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","file":"static/js/18.a11efeb8.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"modal-content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"modal-head\">\n      <p className=\"modal-head-title\">{title}</p>\n      <div className=\"modal-head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"modal-open\": modalOpen })}>\n      <div className=\"modal-backdrop\" onClick={closeModal} />\n      <div className=\"modal-container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { subscribeChatMessages } from \"../../../../actions/ChatActions\";\nimport { processDisplayName } from \"../../../../utils/String\";\nimport \"./css/index.css\";\n\nconst Message = ({\n  name = \"John Smith\",\n  subtitle = \"Lorem ipsum dolor sit amet consectetur adipisicing elit...\",\n  time,\n  publicKey,\n  chatLoaded = false\n}) => {\n  const dispatch = useDispatch();\n  const gunPublicKey = useSelector(({ node }) => node.publicKey);\n\n  const [messagesListener, setMessagesListener] = useState();\n\n  const contactName = useMemo(() => processDisplayName(publicKey, name), [\n    publicKey,\n    name\n  ]);\n  const subscribeMessages = useCallback(async () => {\n    try {\n      const subscription = await dispatch(\n        subscribeChatMessages(gunPublicKey, publicKey)\n      );\n      setMessagesListener(subscription);\n    } catch (err) {\n      console.warn(err);\n    }\n  }, [dispatch, gunPublicKey, publicKey]);\n\n  useEffect(() => {\n    if (!messagesListener && chatLoaded) {\n      subscribeMessages();\n    }\n\n    return () => {\n      console.log(\"Closing Subscription...\", publicKey);\n      messagesListener?.close();\n    };\n  }, [messagesListener, subscribeMessages, publicKey, chatLoaded]);\n\n  return (\n    <Link to={`/chat/${publicKey}`} className=\"message-container\">\n      <div className=\"message-author-container\">\n        <div className=\"message-author-avatar\"></div>\n        <div className=\"message-author-details\">\n          <p className=\"message-author-username\">{contactName}</p>\n          <p className=\"message-author-text\">{subtitle}</p>\n        </div>\n      </div>\n      <p className=\"message-timestamp\">{time}</p>\n    </Link>\n  );\n};\n\nexport default Message;\n","// @ts-check\nimport { Link } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\n\nimport \"./css/index.css\";\n\nconst Request = ({ publicKey = \"\", time, sent }) => {\n  const user = Store.useSelector(Store.selectUser(publicKey));\n\n  return (\n    <Link to={`/chat/${publicKey}`} className=\"request-container\">\n      <div className=\"request-author-container\">\n        <div className=\"request-author-avatar\"></div>\n        <div className=\"request-author-details\">\n          <p className=\"request-author-username\">\n            {sent ? \"Sent Request\" : \"Received Request\"} - {user.displayName}\n          </p>\n          <p className=\"request-author-text\">Request pending acceptance...</p>\n        </div>\n      </div>\n      <p className=\"request-timestamp\">{time}</p>\n    </Link>\n  );\n};\n\nexport default Request;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { DateTime } from \"luxon\";\n\nimport { loadChatData, sendHandshakeRequest } from \"../../actions/ChatActions\";\nimport BottomBar from \"../../common/BottomBar\";\nimport Message from \"./components/Message\";\nimport Request from \"./components/Request\";\nimport MainNav from \"../../common/MainNav\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Loader from \"../../common/Loader\";\nimport FieldError from \"../../utils/FieldError\";\nimport \"./css/index.css\";\nimport Modal from \"../../common/Modal\";\nimport * as Store from \"../../store\";\n\nconst MessagesPage = () => {\n  const dispatch = useDispatch();\n  const [addModalOpen, setAddModalOpen] = useState(false);\n  const [sendError, setSendError] = useState(\"\");\n  const [sendRequestLoading, setSendRequestLoading] = useState(false);\n  const [chatLoaded, setChatLoaded] = useState(false);\n  const contacts = Store.useSelector(({ chat }) => chat.contacts);\n  const messages = Store.useSelector(({ chat }) => chat.messages);\n  const sentRequests = Store.useSelector(({ chat }) => chat.sentRequests);\n  const receivedRequests = Store.useSelector(\n    ({ chat }) => chat.receivedRequests\n  );\n\n  const loadChat = useCallback(async () => {\n    await dispatch(loadChatData());\n    setChatLoaded(true);\n  }, [dispatch]);\n\n  useEffect(() => {\n    loadChat();\n  }, [loadChat]);\n\n  const toggleModal = useCallback(() => {\n    setAddModalOpen(!addModalOpen);\n  }, [addModalOpen]);\n\n  const sanitizePublicKey = publicKey => {\n    if (publicKey.startsWith(\"http\")) {\n      const parts = publicKey.split(\"/\");\n      return parts.slice(-1)[0];\n    }\n\n    return publicKey;\n  };\n\n  const sendRequest = useCallback(\n    async shockUser => {\n      try {\n        setSendError(null);\n        setSendRequestLoading(true);\n        const pk = sanitizePublicKey(shockUser);\n\n        if (!pk?.length) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Please specify a public key\"\n          });\n        }\n\n        if (!/^[0-9A-Za-z\\-_.+/]+[=]{0,3}/.test(pk)) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Invalid public key format specified\"\n          });\n        }\n\n        await dispatch(sendHandshakeRequest(shockUser));\n\n        setAddModalOpen(false);\n        return;\n      } catch (err) {\n        if (err instanceof FieldError) {\n          setSendError(err.message);\n          return;\n        }\n\n        console.error(err);\n        setSendError(\"An unknown error has occurred\");\n      } finally {\n        setSendRequestLoading(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const sendRequestClipboard = useCallback(async () => {\n    const clipboardText = await navigator.clipboard.readText();\n    return sendRequest(clipboardText);\n  }, [sendRequest]);\n\n  return (\n    <div className=\"page-container messages-page\">\n      <MainNav solid pageTitle=\"MESSAGES\" />\n      <div className=\"messages-container\">\n        <div className=\"message-list-container\">\n          {sentRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Sent Requests</p>\n          ) : null}\n          {sentRequests.map(request => (\n            <Request\n              publicKey={request.pk}\n              sent\n              key={request.pk}\n              time={undefined}\n            />\n          ))}\n          {receivedRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Received Requests</p>\n          ) : null}\n          {receivedRequests.map(request => (\n            <Request\n              publicKey={request.pk}\n              key={request.pk}\n              sent={false}\n              time={undefined}\n            />\n          ))}\n          {contacts.length > 0 ? (\n            <p className=\"messages-section-title\">Messages</p>\n          ) : null}\n          {contacts.map(contact => {\n            const contactMessages = messages[contact.pk] ?? [];\n            const lastMessage = contactMessages[0] ?? {\n              body: \"Unable to preview last message...\",\n              timestamp: Date.now()\n            };\n\n            return (\n              <Message\n                key={contact.pk}\n                publicKey={contact.pk}\n                name={contact.displayName}\n                subtitle={lastMessage.body}\n                time={DateTime.fromMillis(lastMessage.timestamp).toRelative()}\n                chatLoaded={chatLoaded}\n              />\n            );\n          })}\n        </div>\n        <AddBtn onClick={toggleModal} label=\"REQUEST\" />\n        {/* TODO: Extract to a separate component */}\n        <Modal\n          modalTitle=\"SEND REQUEST\"\n          toggleModal={toggleModal}\n          modalOpen={addModalOpen}\n        >\n          {sendRequestLoading ? (\n            <Loader\n              text=\"Sending Request...\"\n              overlay\n              style={{\n                borderRadius: \"0 0 15px 15px\"\n              }}\n            />\n          ) : null}\n          {sendError ? (\n            <div className=\"send-request-error\">{sendError}</div>\n          ) : null}\n          <div className=\"send-request-cards\">\n            <div className=\"send-request-card\" onClick={sendRequest}>\n              <i className=\"send-request-card-icon fas fa-qrcode\" />\n              <p className=\"send-request-card-title\">SCAN QR</p>\n              <p className=\"send-request-card-desc\">\n                Scan another users QR to send a message request.\n              </p>\n            </div>\n            <div className=\"send-request-card\" onClick={sendRequestClipboard}>\n              <i className=\"send-request-card-icon fas fa-clipboard\" />\n              <p className=\"send-request-card-title\">PASTE CLIPBOARD</p>\n              <p className=\"send-request-card-desc\">\n                Paste another users Public Key to send a message request.\n              </p>\n            </div>\n          </div>\n        </Modal>\n      </div>\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default MessagesPage;\n"],"sourceRoot":""}