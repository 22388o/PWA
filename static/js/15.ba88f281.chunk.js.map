{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/MainNav/index.js","utils/Number.js","common/AddBtn/index.js","pages/Advanced/components/Transaction/index.js","pages/Advanced/components/Channel/index.js","pages/Advanced/components/Peer/index.js","pages/Advanced/components/AddPeerModal/index.js","pages/Advanced/components/AddChannelModal/index.js","pages/Advanced/index.js"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","disabled","group","fas","MainNav","pageTitle","absolute","solid","enableBackButton","onHeight","Utils","dispatch","useDispatch","goBack","window","history","back","open","openDrawer","gunPublicKey","useSelector","node","publicKey","divRefCb","el","getBoundingClientRect","height","e","console","log","ref","disableOnlineRing","COMMA_REGEX","SAT_DENOMINATION","_addCommas","number","test","replace","formatNumber","split","decimal","formattedNumber","formattedDecimal","convertSatsToUSD","sats","USDRate","debug","confirmedBalanceBTC","Big","div","toString","times","AddBtn","icon","iconURL","undefined","nestedMode","large","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","Transaction","hash","date","unconfirmed","wallet","sanitizedValue","USDValue","toFixed","formattedDate","DateTime","fromSeconds","parseInt","toRelative","display","marginLeft","color","Channel","address","sendable","receivable","active","pendingStatus","formattedSendable","formattedReceivable","Peer","sent","received","formattedSent","formattedReceived","AddPeerModal","loading","setLoading","host","setHost","setPublicKey","error","setError","onInputChange","target","onSubmit","a","preventDefault","connectPeer","errorMessage","message","Loader","overlay","text","AddChannelModal","channelCapacity","setChannelCapacity","pushAmount","setPushAmount","loadFeeRates","openChannel","AdvancedPage","selectedAccordion","setSelectedAccordion","page","addPeerOpen","setAddPeerOpen","addChannelOpen","setAddChannelOpen","pendingChannels","setPendingChannels","confirmedBalance","Store","channelBalance","transactions","channels","peers","useEffect","reset","fetchTransactions","fetchInvoices","fetchChannels","fetchPeers","Http","get","then","data","makeChanObj","ch","remote_pubkey","remote_node_pub","remote_balance","local_balance","ip","pending","pending_open_channels","forEach","chan","channel","push","waiting_close_channels","pending_force_closing_channels","confirmedBalanceUSD","channelBalanceUSD","openAccordion","accordion","toggleAddPeerOpen","toggleAddChannelOpen","openTransactionsAccordion","openPeersAccordion","openChannelsAccordion","paddingBottom","content","map","transaction","time_stamp","tx_hash","amount","num_confirmations","peer","pub_key","sat_sent","sat_recv","chan_id"],"mappings":"iKASeA,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACnB,qBAAKC,UAAU,gBAAgBD,MAAOA,EAAtC,SACGD,KCQUG,G,OAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OACjBD,EACE,sBAAKF,UAAU,aAAf,UACE,mBAAGA,UAAU,mBAAb,SAAiCE,IACjC,qBAAKF,UAAU,mBAAmBI,QAASD,EAA3C,SACE,mBAAGH,UAAU,sBAGf,O,OCiBSK,IArBD,SAAC,GAMR,IAAD,IALJC,iBAKI,SAJJH,EAII,EAJJA,YAII,IAHJI,kBAGI,MAHS,GAGT,EAFJT,EAEI,EAFJA,SAEI,IADJU,oBACI,MADW,GACX,EACEC,EAAaC,uBAAY,WAC7BP,MACC,CAACA,IACJ,OACE,sBAAKH,UAAWW,IAAW,CAAEC,OAAO,EAAM,aAAcN,IAAxD,UACE,qBAAKN,UAAU,iBAAiBI,QAASK,IACzC,sBAAKT,UAAU,kBAAf,UACE,cAAC,EAAD,CAAYE,MAAOK,EAAYJ,YAAaM,IAC5C,cAAC,EAAD,CAAcV,MAAOS,EAArB,SAAoCV,Y,gJC8C7Be,IAjEI,SAAC,GAYb,IAXLC,EAWI,EAXJA,MACAC,EAUI,EAVJA,KACAC,EASI,EATJA,SACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,MAMI,IALJC,iBAKI,MALQ,OAKR,MAJJC,YAII,MAJG,OAIH,MAHJC,eAGI,MAHM,QAGN,MAFJC,aAEI,SADJC,EACI,EADJA,SAEA,OACE,sBACExB,UAAWW,IAAW,CACpBc,OAAO,EACP,iBAAkBD,EAClB,cAAeD,IAJnB,UAOGT,EAAQ,mBAAGd,UAAU,cAAb,SAA4Bc,IAAa,KAClD,sBACEd,UAAWW,IAAW,CACpB,yBAAyB,EACzB,iCAA8C,aAAZW,IAHtC,UAMe,aAAZA,EACC,0BACEtB,UAAU,mCACVe,KAAMA,EACNC,SAAUA,EACVI,UAAWA,EACXD,MAAOA,EACPK,SAAUA,IAGZ,uBACExB,UAAU,cACVqB,KAAMA,EACNN,KAAMA,EACNC,SAAUA,EACVI,UAAWA,EACXD,MAAOA,EACPK,SAAUA,IAGbP,GAAeC,EACd,qBAAKlB,UAAU,qBAAqBI,QAASa,EAA7C,SACE,mBACEjB,UAAWW,IAAW,aACpB,2BAA2B,EAC3Be,KAAK,GACJR,GAAa,IAEhBd,QAASa,MAGX,a,iCC9DZ,qFAyEeU,IA3DC,SAAC,GAMV,IALLC,EAKI,EALJA,UAKI,IAJJC,gBAII,aAHJC,aAGI,aAFJC,wBAEI,aADJC,gBACI,MADOC,IACP,EACEC,EAAWC,cACXC,EAAS1B,uBAAY,WACzB2B,OAAOC,QAAQC,SACd,IAEGC,EAAO9B,uBAAY,WACvBwB,EAASO,iBACR,CAACP,IAEEQ,EAAeC,uBAAY,qBAAGC,KAAgBC,aAG9CC,EAAWpC,uBACf,SAAAqC,GAEE,GAAKA,EACL,IACEf,EAASe,EAAGC,wBAAwBC,QACpC,MAAOC,GACPC,QAAQC,IAAR,+CACAD,QAAQC,IAAIF,MAGhB,CAAClB,IAGH,OACE,sBACEhC,UAAWW,IAAW,CACpB,sBAAsB,EACtB,oBAAqBkB,EACrB,iBAAkBC,IAEpBuB,IAAKP,EANP,UAQGf,EACC,qBAAK/B,UAAU,gBAAgBI,QAASgC,EAAxC,SACE,mBAAGpC,UAAU,0BAGf,cAAC,IAAD,CAAasD,mBAAiB,EAACL,OAAQ,GAAIJ,UAAWH,IAExD,mBAAG1C,UAAU,8BAAb,SAA4C4B,IAC5C,sBAAK5B,UAAU,oBAAoBI,QAASoC,EAA5C,UACE,qBAAKxC,UAAU,uBACf,qBAAKA,UAAU,uBACf,qBAAKA,UAAU,+B,+KChEjBuD,EAAc,iBAEPC,EAAmB,IAE1BC,EAAa,SAAbA,EAAaC,GAGjB,OAFaH,EAAYI,KAAKD,GAIrBD,EADWC,EAAOE,QAAQL,EAAa,UAIzCG,GAGIG,EAAe,WAAiB,IAAhB1C,EAAe,uDAAP,GAAO,EAChBA,EAAM2C,MAAM,KADI,mBACnCJ,EADmC,KAC3BK,EAD2B,KAEpCC,EAAkBP,EAAWC,GAC7BO,EAAmBF,EAAU,IAAMA,EAAU,GAEnD,OAAOC,EAAkBC,GAGdC,EAAmB,SAACC,GAAyB,IAAnBC,EAAkB,uDAAR,IAC/CjB,QAAQkB,MAAR,qBAA4BF,EAA5B,yBAAiDC,EAAjD,MACA,IAAME,EAAsBC,IAAIJ,GAAMK,IAAIhB,GAAkBiB,WAE5D,OAAOF,KAAW,OAAPH,QAAO,IAAPA,OAAA,EAAAA,EAASK,aAAc,KAAKC,MAAMJ,K,qFCgDhCK,IA1EA,SAAC,GAWT,IAAD,IAVJ7D,aAUI,MAVI,KAUJ,MATJ8D,YASI,MATG,KASH,MARJC,eAQI,MARM,KAQN,MAPJzE,eAOI,WAPM0E,EAON,MANJC,kBAMI,aALJC,aAKI,aAJJzD,aAII,aAHJ0D,gBAGI,aAFJnF,gBAEI,MAFO,KAEP,MADJC,aACI,MADI,GACJ,IACkCmF,oBAAS,GAD3C,mBACGC,EADH,KACgBC,EADhB,KAEEC,EAAoB3E,uBAAY,WAChCqE,GACFK,GAAgBD,KAEjB,CAACA,EAAaJ,IAEXO,EAAcC,mBAAQ,WAC1B,OAAIV,EACK,qBAAKW,IAAKX,EAAS7E,UAAU,eAAeyF,IAAI,KAGlD,mBAAGzF,UAAS,wBAAY4E,QAAZ,IAAYA,IAAQ,YACtC,CAACA,EAAMC,IAEJa,EAAeH,mBAAQ,WAC3B,OAAIzE,EACK,mBAAGd,UAAU,gBAAb,SAA8Bc,IAGhC,OACN,CAACA,IAEJ,OACE,sBACEd,UAAWW,IAAW,CACpB,qBAAqB,EACrB,2BAA4BG,EAC5B,gBAAiBkE,EACjB,gBAAiBzD,IALrB,UAQE,sBACEvB,UAAWW,IAAW,CACpB,WAAW,EACX,iBAAkBG,EAClB,qBAAsBA,EACtB,mBAAoBmE,EACpB,eAAgBE,EAChB,iBAAkBJ,IAEpB3E,QAAO,OAAEA,QAAF,IAAEA,IAAWiF,EACpBtF,MAAOA,EAVT,UAYGuF,EACAI,KAGF5F,EACC,qBACEE,UAAWW,IAAW,CACpB,mBAAmB,EACnB,uBAAwBwE,IAH5B,SAMGrF,IAED,U,0SCpCK6F,EA/BK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMzE,EAA8B,EAA9BA,MAAO0E,EAAuB,EAAvBA,KAAKC,EAAkB,EAAlBA,YACjC1B,EAAUzB,aAAY,qCAAGoD,OAAoB3B,eAAvB,QAAkC,OACxD4B,EAAiB7E,EAAMyC,QAAQ,KAAM,IACrCqC,EAAWpC,YACfK,YAAiB8B,EAAgB5B,GAAS8B,QAAQ,IAE9CC,EAAgBN,EAClBO,WAASC,YAAYC,SAAST,EAAM,KAAKU,aACzC,UAEJ,OACE,sBAAKvG,UAAU,iCAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKA,UAAU,gCACf,sBAAKA,UAAU,8BAAf,UACE,mBAAGA,UAAU,mCAAb,SAAiD4F,IACjD,sBAAK7F,MAAO,CAACyG,QAAQ,QAArB,UACE,mBAAGxG,UAAU,4BAAb,qBACC8F,GAAe,mBAAG9F,UAAU,eAAeD,MAAO,CAAC0G,WAAW,SAASC,MAAM,kBAIpF,sBAAK1G,UAAU,uCAAf,UACE,mBAAGA,UAAU,4BAAb,SAA0CmG,IAC1C,mBAAGnG,UAAU,6BAAb,SAA2CmB,IAC3C,oBAAGnB,UAAU,2BAAb,UAAyCiG,EAAzC,iBCaOU,G,OAtCC,SAAC,GAOV,IANLC,EAMI,EANJA,QAEAC,EAII,EAJJA,SACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,OAEI,IADJC,qBACI,MADY,GACZ,EACEC,EAAoB1B,mBAAQ,kBAAM1B,YAAagD,KAAW,CAACA,IAC3DK,EAAsB3B,mBAAQ,kBAAM1B,YAAaiD,KAAa,CAClEA,IAEF,OACE,sBAAK9G,UAAU,6BAAf,UAEE,sBAAKA,UAAU,kCAAf,UAEE,qBACEA,UAAWW,IAAW,CACpB,2BAA2B,EAC3B,mCAAoCoG,MAGxC,mBAAGhH,MAAO,CAAE0G,WAAY,UAAxB,SAAqCO,OAEvC,oBAAGhH,UAAU,2BAAb,sBAAkD4G,KAClD,sBAAK5G,UAAU,sCAAf,UACE,sBAAKA,UAAU,4BAAf,uBACaiH,EADb,WAGA,sBAAKjH,UAAU,4BAAf,yBACekH,EADf,mBCJOC,G,OA5BF,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,SAAUT,EAAyB,EAAzBA,QAAS/D,EAAgB,EAAhBA,UACjCyE,EAAgBzD,YAAauD,EAAK3C,YAClC8C,EAAoB1D,YAAawD,EAAS5C,YAEhD,OACE,sBAAKzE,UAAU,iCAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKA,UAAU,gCACf,sBAAKA,UAAU,8BAAf,UACE,mBAAGA,UAAU,wBAAb,SAAsC4G,IACtC,mBAAG5G,UAAU,2BAAb,gBACG6C,QADH,IACGA,IAAa,6BAIpB,sBAAK7C,UAAU,gCAAf,UACE,oBAAGA,UAAU,sBAAb,UACE,sBAAMA,UAAU,mBAAhB,mBADF,IACmDsH,KAEnD,oBAAGtH,UAAU,sBAAb,UACE,sBAAMA,UAAU,mBAAhB,uBAAoD,IACnDuH,a,2DC8CIC,EA/DM,SAAC,GAAmC,IAAD,IAAhChF,YAAgC,SAAlBrC,EAAkB,EAAlBA,YAC9B+B,EAAWC,cADqC,EAExB+C,oBAAS,GAFe,mBAE/CuC,EAF+C,KAEtCC,EAFsC,OAG9BxC,mBAAS,IAHqB,mBAG/CyC,EAH+C,KAGzCC,EAHyC,OAIpB1C,mBAAS,IAJW,mBAI/CrC,EAJ+C,KAIpCgF,EAJoC,OAK5B3C,mBAAS,IALmB,mBAK/C4C,EAL+C,KAKxCC,EALwC,KAOhDC,EAAgBtH,uBAAY,SAAAwC,GAAM,IAAD,EACbA,EAAE+E,OAAlBlH,EAD6B,EAC7BA,KAAMI,EADuB,EACvBA,MACD,cAATJ,GACF8G,EAAa1G,GAGF,SAATJ,GACF6G,EAAQzG,KAET,IAEG+G,EAAWxH,sBAAW,uCAC1B,WAAMwC,GAAN,eAAAiF,EAAA,6DACEjF,EAAEkF,iBACFV,GAAW,GAFb,kBAIUxF,EAASmG,YAAY,CAAExF,YAAW8E,UAJ5C,OAKIxH,IALJ,gDAOI4H,EAAQ,4CAAC,KAAKO,oBAAN,0CAAsB,KAAKC,SAPvC,yBASIb,GAAW,GATf,4EAD0B,sDAa1B,CAACxF,EAAUW,EAAW8E,EAAMxH,IAG9B,OACE,cAACE,EAAA,EAAD,CAAOF,YAAaA,EAAaG,UAAWkC,EAAMjC,WAAW,WAA7D,SACE,uBAAMP,UAAU,aAAakI,SAAUA,EAAvC,UACGJ,EAAQ,qBAAK9H,UAAU,aAAf,SAA6B8H,IAAe,KACpDL,EAAU,cAACe,EAAA,EAAD,CAAQC,SAAO,EAACC,KAAK,mBAAsB,KACtD,cAAC7H,EAAA,EAAD,CACEG,SAAUgH,EACVjH,KAAK,YACLD,MAAM,aACNK,MAAO0B,EACPtB,OAAK,IAEP,cAACV,EAAA,EAAD,CACEG,SAAUgH,EACVjH,KAAK,OACLD,MAAM,UACNK,MAAOwG,EACPpG,OAAK,IAEP,qBAAKvB,UAAU,yBAAf,SACE,wBAAQA,UAAU,mBAAmBqB,KAAK,SAA1C,8B,iBCyBKsH,EA9ES,SAAC,GAAmC,IAAD,IAAhCnG,YAAgC,SAAlBrC,EAAkB,EAAlBA,YACjC+B,EAAWC,cADwC,EAE3B+C,oBAAS,GAFkB,mBAElDuC,EAFkD,KAEzCC,EAFyC,OAGXxC,mBAAS,IAHE,mBAGlD0D,EAHkD,KAGjCC,EAHiC,OAIrB3D,mBAAS,IAJY,mBAIlD4D,EAJkD,KAItCC,EAJsC,OAKvB7D,mBAAS,IALc,mBAKlDrC,EALkD,KAKvCgF,EALuC,OAM/B3C,mBAAS,IANsB,mBAMlD4C,EANkD,KAM3CC,EAN2C,KAQnDC,EAAgBtH,uBAAY,SAAAwC,GAAM,IAAD,EACbA,EAAE+E,OAAlBlH,EAD6B,EAC7BA,KAAMI,EADuB,EACvBA,MACD,cAATJ,GACF8G,EAAa1G,GAGF,eAATJ,GACFgI,EAAc5H,GAGH,oBAATJ,GACF8H,EAAmB1H,KAEpB,IAEG+G,EAAWxH,sBAAW,uCAC1B,WAAMwC,GAAN,eAAAiF,EAAA,6DACEjF,EAAEkF,iBACFV,GAAW,GAFb,kBAIUxF,EAAS8G,eAJnB,uBAKU9G,EAAS+G,YAAY,CAAEpG,YAAW+F,kBAAiBE,gBAL7D,OAMI3I,IANJ,kDAQI4H,EAAQ,4CAAC,KAAKO,oBAAN,0CAAsB,KAAKC,SARvC,yBAUIb,GAAW,GAVf,6EAD0B,sDAc1B,CAACxF,EAAUW,EAAW+F,EAAiBE,EAAY3I,IAGrD,OACE,cAACE,EAAA,EAAD,CAAOF,YAAaA,EAAaG,UAAWkC,EAAMjC,WAAW,eAA7D,SACE,uBAAMP,UAAU,aAAakI,SAAUA,EAAvC,UACGJ,EAAQ,qBAAK9H,UAAU,aAAf,SAA6B8H,IAAe,KACpDL,EAAU,cAACe,EAAA,EAAD,CAAQC,SAAO,EAACC,KAAK,mBAAsB,KACtD,cAAC7H,EAAA,EAAD,CACEG,SAAUgH,EACVjH,KAAK,YACLD,MAAM,kBACNK,MAAO0B,EACPtB,OAAK,IAEP,cAACV,EAAA,EAAD,CACEG,SAAUgH,EACVjH,KAAK,kBACLD,MAAM,0BACNK,MAAOyH,EACPxH,UAAU,SACVG,OAAK,IAEP,cAACV,EAAA,EAAD,CACEG,SAAUgH,EACVjH,KAAK,aACLD,MAAM,qBACNK,MAAO2H,EACP1H,UAAU,SACVG,OAAK,IAEP,qBAAKvB,UAAU,yBAAf,SACE,wBAAQA,UAAU,mBAAmBqB,KAAK,SAA1C,kC,yBC+NK6H,UA/QM,WAAO,IAAD,EACyBhE,mBAAS,gBADlC,mBAClBiE,EADkB,KACCC,EADD,OAEVlE,mBAAS,GAAjBmE,EAFkB,sBAGanE,oBAAS,GAHtB,mBAGlBoE,EAHkB,KAGLC,EAHK,OAImBrE,oBAAS,GAJ5B,mBAIlBsE,EAJkB,KAIFC,EAJE,OAMqBvE,mBACF,IAPnB,mBAMlBwE,EANkB,KAMDC,EANC,KAUnBzH,EAAWC,cACXyH,EAAmBC,eACvB,qBAAG9D,OAAoB6D,oBAEnBE,EAAiBD,eACrB,qBAAG9D,OAAoB+D,kBAEnBC,EAAeF,eAAkB,qBAAG9D,OAAoBgE,gBAExDC,EAAWH,eAAkB,qBAAG9D,OAAoBiE,YACpDC,EAAQJ,eAAkB,qBAAG9D,OAAoBkE,SACjD7F,EAAUyF,eAAkB,qBAAG9D,OAAoB3B,WAEzD8F,qBAAU,WACR,IAAMC,EAAiB,IAATd,EACdnH,EAASkI,YAAkB,CAAEf,OAAMc,WACnCjI,EAASmI,YAAc,CAAEhB,OAAMc,WAC/BjI,EAASoI,eACTpI,EAASqI,iBACR,CAAClB,EAAMnH,IAGVgI,qBAAU,WACRM,IAAKC,IAAI,4BAA4BC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC3CxH,QAAQC,IAAI,qBACZD,QAAQC,IAAIuH,GACZ,IAAMC,EAAc,SAACC,EAAI7D,GAAL,MAAwB,CAC1C8D,cAAeD,EAAGE,gBAClBC,eAAgBH,EAAGG,eACnBC,cAAeJ,EAAGI,cAClBC,GAAI,GACJnE,QAAQ,EACRC,kBAEImE,EAAU,GAChBR,EAAKS,sBAAsBC,SAAQ,SAAAC,GAAS,IAClCC,EAAYD,EAAZC,QACRJ,EAAQK,KAAKZ,EAAYW,EAAS,oBAEpCZ,EAAKc,uBAAuBJ,SAAQ,SAAAC,GAAS,IACnCC,EAAYD,EAAZC,QACRJ,EAAQK,KAAKZ,EAAYW,EAAS,qBAEpCZ,EAAKe,+BAA+BL,SAAQ,SAAAC,GAAS,IAC3CC,EAAYD,EAAZC,QACRJ,EAAQK,KAAKZ,EAAYW,EAAS,2BAEpC5B,EAAmBwB,QAEpB,IAEH,IAAMQ,EAAsBpG,mBAC1B,kBAAM1B,YAAaK,YAAiB0F,EAAkBxF,GAAS8B,QAAQ,MACvE,CAAC9B,EAASwF,IAENgC,EAAoBrG,mBACxB,kBAAM1B,YAAaK,YAAiB4F,EAAgB1F,GAAS8B,QAAQ,MACrE,CAAC9B,EAAS0F,IAGN+B,EAAgBnL,uBAAY,SAAAoL,GAChC1C,EAAqB0C,KACpB,IAEGC,EAAoBrL,uBAAY,WACpC6I,GAAgBD,KACf,CAACA,IAEE0C,EAAuBtL,uBAAY,WACvC+I,GAAmBD,KAClB,CAACA,IAEEyC,EAA4BvL,uBAAY,WAC5CmL,EAAc,kBACb,CAACA,IAEEK,EAAqBxL,uBAAY,WACrCmL,EAAc,WACb,CAACA,IAMEM,EAAwBzL,uBAAY,WACxCmL,EAAc,cACb,CAACA,IAEJ,OACE,sBAAK7L,UAAU,+BAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAAC2B,EAAA,EAAD,CAASE,UAAQ,EAACD,UAAU,WAAWG,kBAAkB,IACzD,sBAAK/B,UAAU,6BAAf,UACE,qBAAKA,UAAU,kCAAf,SACE,mBAAGA,UAAU,wCAEf,sBAAKA,UAAU,iCAAf,UACE,mBAAGA,UAAU,uBAAb,SACG6D,YAAa+F,KAEhB,oBAAG5J,UAAU,uBAAb,UAAqC2L,EAArC,gBAGJ,sBACE3L,UAAU,6BACVD,MAAO,CAAEqM,cAAe,IAF1B,UAIE,qBAAKpM,UAAU,kCAAf,SACE,mBAAGA,UAAU,wCAEf,sBAAKA,UAAU,iCAAf,UACE,mBAAGA,UAAU,uBAAb,SACG6D,YAAaiG,KAEhB,oBAAG9J,UAAU,uBAAb,UAAqC4L,EAArC,mBAIN,sBAAK5L,UAAU,gCAAf,UACE,sBACEA,UAAWW,IAAW,CACpB,gCAAgC,EAChC,iBAAwC,iBAAtBwI,IAHtB,UAME,qBACEnJ,UAAU,4BACVI,QAAS6L,EAFX,SAIE,mBAAGjM,UAAU,2BAAb,4BAEF,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,6BAAf,SACG+J,EAAasC,QAAQC,KAAI,SAAAC,GAAW,OACnC,cAAC,EAAD,CACE1G,KAAM0G,EAAYC,WAClB5G,KAAM2G,EAAYE,QAClBtL,MAAO0C,YAAa0I,EAAYG,QAEhC5G,YAA+C,IAAlCyG,EAAYI,mBADpBJ,EAAYE,mBAO3B,sBACEzM,UAAWW,IAAW,CACpB,gCAAgC,EAChC,iBAAwC,UAAtBwI,IAHtB,UAME,qBACEnJ,UAAU,4BACVI,QAAS8L,EAFX,SAIE,mBAAGlM,UAAU,2BAAb,qBAEF,sBAAKA,UAAU,uCAAf,UACE,qBAAKA,UAAU,6BAAf,SACGiK,EAAMqC,KAAI,SAAAM,GAAI,OACb,cAAC,EAAD,CACEhG,QAASgG,EAAKhG,QACd/D,UAAW+J,EAAKC,QAChBzF,KAAMwF,EAAKE,SACXzF,SAAUuF,EAAKG,UACVH,EAAKhG,QAAUgG,EAAKC,cAI/B,cAAClI,EAAA,EAAD,CAAQI,YAAU,EAACE,UAAQ,EAA3B,SACE,cAACN,EAAA,EAAD,CACE7D,MAAM,WACNV,QAAS2L,EACTnH,KAAK,iBAkCb,sBACE5E,UAAWW,IAAW,CACpB,gCAAgC,EAChC,iBAAwC,aAAtBwI,IAHtB,UAME,qBACEnJ,UAAU,4BACVI,QAAS+L,EAFX,SAIE,mBAAGnM,UAAU,2BAAb,wBAEF,qBAAKA,UAAU,uCAAf,SACE,sBAAKA,UAAU,6BAAf,UACGgK,EAASsC,KAAI,SAAAf,GAAO,OACnB,cAAC,EAAD,CACE3E,QAAS2E,EAAQT,cACjBhE,WAAYyE,EAAQP,eACpBnE,SAAU0E,EAAQN,cAClBlE,OAAQwE,EAAQxE,QACXwE,EAAQyB,YAGhBtD,EAAgB4C,KAAI,SAAAf,GAAO,OAC1B,cAAC,EAAD,CACE3E,QAAS2E,EAAQT,cACjBhE,WAAYyE,EAAQP,eACpBnE,SAAU0E,EAAQN,cAClBlE,OAAQwE,EAAQxE,OAEhBC,cAAeuE,EAAQvE,eADlBuE,EAAQyB,YAIjB,cAACrI,EAAA,EAAD,CAAQI,YAAU,EAACE,UAAQ,EAA3B,SACE,cAACN,EAAA,EAAD,CACE7D,MAAM,cACNS,OAAK,EACLnB,QAAS4L,EACTpH,KAAK,8BAOjB,cAAC,EAAD,CAAcpC,KAAM8G,EAAanJ,YAAa4L,IAC9C,cAAC,EAAD,CACEvJ,KAAMgH,EACNrJ,YAAa6L","file":"static/js/15.ba88f281.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"modal-content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"modal-head\">\n      <p className=\"modal-head-title\">{title}</p>\n      <div className=\"modal-head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"modal-open\": modalOpen })}>\n      <div className=\"modal-backdrop\" onClick={closeModal} />\n      <div className=\"modal-container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst InputGroup = ({\n  label,\n  name,\n  onChange,\n  inputAction,\n  actionIcon,\n  value,\n  inputMode = \"text\",\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","// @ts-check\nimport { useCallback } from \"react\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as Utils from \"../../utils\";\nimport { openDrawer } from \"../../actions/DrawerActions\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport { useSelector } from \"../../store\";\n\nconst MainNav = ({\n  pageTitle,\n  absolute = false,\n  solid = false,\n  enableBackButton = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const dispatch = useDispatch();\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  const open = useCallback(() => {\n    dispatch(openDrawer());\n  }, [dispatch]);\n\n  const gunPublicKey = useSelector(({ node }) => node.publicKey);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in MainNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className={classNames({\n        \"main-nav-container\": true,\n        \"main-nav-absolute\": absolute,\n        \"main-nav-solid\": solid\n      })}\n      ref={divRefCb}\n    >\n      {enableBackButton ? (\n        <div className=\"main-nav-back\" onClick={goBack}>\n          <i className=\"icon icon-thin-back\"></i>\n        </div>\n      ) : (\n        <ShockAvatar disableOnlineRing height={40} publicKey={gunPublicKey} />\n      )}\n      <p className=\"main-nav-title unselectable\">{pageTitle}</p>\n      <div className=\"main-nav-menu-btn\" onClick={open}>\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default MainNav;\n","// Use Big.js to avoid large number inaccuracy issues\nimport Big from \"big.js\";\n\nconst COMMA_REGEX = /(\\d+)(\\d{3})/gi;\n\nexport const SAT_DENOMINATION = 100000000;\n\nconst _addCommas = number => {\n  const test = COMMA_REGEX.test(number);\n\n  if (test) {\n    const newNumber = number.replace(COMMA_REGEX, \"$1,$2\");\n    return _addCommas(newNumber);\n  }\n\n  return number;\n};\n\nexport const formatNumber = (value = \"\") => {\n  const [number, decimal] = value.split(\".\");\n  const formattedNumber = _addCommas(number);\n  const formattedDecimal = decimal ? \".\" + decimal : \"\";\n\n  return formattedNumber + formattedDecimal;\n};\n\nexport const convertSatsToUSD = (sats, USDRate = \"0\") => {\n  console.debug(`Converting ${sats} Sats to USD (${USDRate})`);\n  const confirmedBalanceBTC = Big(sats).div(SAT_DENOMINATION).toString();\n\n  return Big(USDRate?.toString() || \"0\").times(confirmedBalanceBTC);\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import { DateTime } from \"luxon\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { convertSatsToUSD, formatNumber } from \"../../../../utils/Number\";\nimport \"./css/index.css\";\n\nconst Transaction = ({ hash, value, date,unconfirmed }) => {\n  const USDRate = useSelector(({ wallet }) => wallet.USDRate ?? \"0\");\n  const sanitizedValue = value.replace(/,/g, \"\");\n  const USDValue = formatNumber(\n    convertSatsToUSD(sanitizedValue, USDRate).toFixed(2)\n  );\n  const formattedDate = date\n    ? DateTime.fromSeconds(parseInt(date, 10)).toRelative()\n    : \"unknown\";\n\n  return (\n    <div className=\"advanced-transaction-container\">\n      <div className=\"advanced-transaction-info\">\n        <div className=\"advanced-transaction-avatar\"></div>\n        <div className=\"advanced-transaction-author\">\n          <p className=\"advanced-transaction-author-name\">{hash}</p>\n          <div style={{display:'flex'}}>\n            <p className=\"advanced-transaction-type\">Payment</p>\n            {unconfirmed && <i className=\"far fa-clock\" style={{marginLeft:'0.5rem',color:'red'}}></i>}\n          </div>\n        </div>\n      </div>\n      <div className=\"advanced-transaction-value-container\">\n        <p className=\"advanced-transaction-time\">{formattedDate}</p>\n        <p className=\"advanced-transaction-value\">{value}</p>\n        <p className=\"advanced-transaction-usd\">{USDValue} USD</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Transaction;\n","// @ts-check\nimport { useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport { formatNumber } from \"../../../../utils/Number\";\nimport \"./css/index.css\";\n\nconst Channel = ({\n  address,\n  // ip = null,\n  sendable,\n  receivable,\n  active,\n  pendingStatus = \"\"\n}) => {\n  const formattedSendable = useMemo(() => formatNumber(sendable), [sendable]);\n  const formattedReceivable = useMemo(() => formatNumber(receivable), [\n    receivable\n  ]);\n  return (\n    <div className=\"advanced-channel-container\">\n      {/* <div className=\"advanced-channel-ip\"></div> */}\n      <div className=\"advanced-channel-name-container\">\n        {/* <p className=\"advanced-channel-name\">IP: {ip ?? \"N/A\"}</p> */}\n        <div\n          className={classNames({\n            \"advanced-channel-status\": true,\n            \"advanced-channel-status-offline\": !active\n          })}\n        ></div>\n        <p style={{ marginLeft: \"0.5rem\" }}>{pendingStatus}</p>\n      </div>\n      <p className=\"advanced-channel-address\">Address: {address}</p>\n      <div className=\"advanced-channel-capacity-container\">\n        <div className=\"advanced-channel-capacity\">\n          Sendable: {formattedSendable} sats\n        </div>\n        <div className=\"advanced-channel-capacity\">\n          Receivable: {formattedReceivable} sats\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Channel;\n","import React from \"react\";\nimport { formatNumber } from \"../../../../utils/Number\";\nimport \"./css/index.css\";\n\nconst Peer = ({ sent, received, address, publicKey }) => {\n  const formattedSent = formatNumber(sent.toString());\n  const formattedReceived = formatNumber(received.toString());\n\n  return (\n    <div className=\"advanced-transaction-container\">\n      <div className=\"advanced-transaction-info\">\n        <div className=\"advanced-transaction-avatar\"></div>\n        <div className=\"advanced-transaction-author\">\n          <p className=\"advanced-peer-address\">{address}</p>\n          <p className=\"advanced-peer-public-key\">\n            {publicKey ?? \"Unknown public key\"}\n          </p>\n        </div>\n      </div>\n      <div className=\"advanced-peer-value-container\">\n        <p className=\"advanced-peer-value\">\n          <span className=\"peer-value-title\">Sent:</span> {formattedSent}\n        </p>\n        <p className=\"advanced-peer-value\">\n          <span className=\"peer-value-title\">Received:</span>{\" \"}\n          {formattedReceived}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Peer;\n","import React, { useCallback, useState } from \"react\";\nimport Modal from \"../../../../common/Modal\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport \"./css/index.css\";\nimport { connectPeer } from \"../../../../actions/WalletActions\";\nimport { useDispatch } from \"react-redux\";\nimport Loader from \"../../../../common/Loader\";\n\nconst AddPeerModal = ({ open = false, toggleModal }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [host, setHost] = useState(\"\");\n  const [publicKey, setPublicKey] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onInputChange = useCallback(e => {\n    const { name, value } = e.target;\n    if (name === \"publicKey\") {\n      setPublicKey(value);\n    }\n\n    if (name === \"host\") {\n      setHost(value);\n    }\n  }, []);\n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      setLoading(true);\n      try {\n        await dispatch(connectPeer({ publicKey, host }));\n        toggleModal();\n      } catch (err) {\n        setError(err?.errorMessage ?? err?.message);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, publicKey, host, toggleModal]\n  );\n\n  return (\n    <Modal toggleModal={toggleModal} modalOpen={open} modalTitle=\"ADD PEER\">\n      <form className=\"modal-form\" onSubmit={onSubmit}>\n        {error ? <div className=\"form-error\">{error}</div> : null}\n        {loading ? <Loader overlay text=\"Adding Peer...\" /> : null}\n        <InputGroup\n          onChange={onInputChange}\n          name=\"publicKey\"\n          label=\"Public Key\"\n          value={publicKey}\n          small\n        />\n        <InputGroup\n          onChange={onInputChange}\n          name=\"host\"\n          label=\"Host IP\"\n          value={host}\n          small\n        />\n        <div className=\"modal-submit-container\">\n          <button className=\"modal-submit-btn\" type=\"submit\">\n            ADD PEER\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default AddPeerModal;\n","import React, { useCallback, useState } from \"react\";\nimport Modal from \"../../../../common/Modal\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport \"./css/index.css\";\nimport { connectPeer, openChannel } from \"../../../../actions/WalletActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../../../common/Loader\";\nimport { loadFeeRates } from \"../../../../actions/FeesActions\";\n\nconst AddChannelModal = ({ open = false, toggleModal }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [channelCapacity, setChannelCapacity] = useState(\"\");\n  const [pushAmount, setPushAmount] = useState(\"\");\n  const [publicKey, setPublicKey] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onInputChange = useCallback(e => {\n    const { name, value } = e.target;\n    if (name === \"publicKey\") {\n      setPublicKey(value);\n    }\n\n    if (name === \"pushAmount\") {\n      setPushAmount(value);\n    }\n\n    if (name === \"channelCapacity\") {\n      setChannelCapacity(value);\n    }\n  }, []);\n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      setLoading(true);\n      try {\n        await dispatch(loadFeeRates());\n        await dispatch(openChannel({ publicKey, channelCapacity, pushAmount }));\n        toggleModal();\n      } catch (err) {\n        setError(err?.errorMessage ?? err?.message);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, publicKey, channelCapacity, pushAmount, toggleModal]\n  );\n\n  return (\n    <Modal toggleModal={toggleModal} modalOpen={open} modalTitle=\"OPEN CHANNEL\">\n      <form className=\"modal-form\" onSubmit={onSubmit}>\n        {error ? <div className=\"form-error\">{error}</div> : null}\n        {loading ? <Loader overlay text=\"Adding Peer...\" /> : null}\n        <InputGroup\n          onChange={onInputChange}\n          name=\"publicKey\"\n          label=\"Node Public Key\"\n          value={publicKey}\n          small\n        />\n        <InputGroup\n          onChange={onInputChange}\n          name=\"channelCapacity\"\n          label=\"Channel Capacity (sats)\"\n          value={channelCapacity}\n          inputMode=\"number\"\n          small\n        />\n        <InputGroup\n          onChange={onInputChange}\n          name=\"pushAmount\"\n          label=\"Push Amount (sats)\"\n          value={pushAmount}\n          inputMode=\"number\"\n          small\n        />\n        <div className=\"modal-submit-container\">\n          <button className=\"modal-submit-btn\" type=\"submit\">\n            OPEN CHANNEL\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default AddChannelModal;\n","// @ts-check\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\nimport {\n  fetchChannels,\n  fetchInvoices,\n  fetchPeers,\n  fetchTransactions\n} from \"../../actions/WalletActions\";\nimport { convertSatsToUSD, formatNumber } from \"../../utils/Number\";\nimport MainNav from \"../../common/MainNav\";\nimport AddBtn from \"../../common/AddBtn\";\n// import Invoice from \"./components/Invoice\";\nimport Transaction from \"./components/Transaction\";\nimport Channel from \"./components/Channel\";\nimport Peer from \"./components/Peer\";\nimport AddPeerModal from \"./components/AddPeerModal\";\nimport AddChannelModal from \"./components/AddChannelModal\";\nimport Http from \"../../utils/Http\";\nimport \"./css/index.css\";\nimport * as Store from \"../../store\";\n\n/**\n * @typedef {Channel & { pendingStatus: string , ip: string }} PendingChannel\n */\n\nconst AdvancedPage = () => {\n  const [selectedAccordion, setSelectedAccordion] = useState(\"transactions\");\n  const [page] = useState(1);\n  const [addPeerOpen, setAddPeerOpen] = useState(false);\n  const [addChannelOpen, setAddChannelOpen] = useState(false);\n\n  const [pendingChannels, setPendingChannels] = useState(\n    /** @type {readonly PendingChannel[]} */ ([])\n  );\n\n  const dispatch = useDispatch();\n  const confirmedBalance = Store.useSelector(\n    ({ wallet }) => wallet.confirmedBalance\n  );\n  const channelBalance = Store.useSelector(\n    ({ wallet }) => wallet.channelBalance\n  );\n  const transactions = Store.useSelector(({ wallet }) => wallet.transactions);\n  // const invoices = Store.useSelector(({ wallet }) => wallet.invoices);\n  const channels = Store.useSelector(({ wallet }) => wallet.channels);\n  const peers = Store.useSelector(({ wallet }) => wallet.peers);\n  const USDRate = Store.useSelector(({ wallet }) => wallet.USDRate);\n\n  useEffect(() => {\n    const reset = page === 1;\n    dispatch(fetchTransactions({ page, reset }));\n    dispatch(fetchInvoices({ page, reset }));\n    dispatch(fetchChannels());\n    dispatch(fetchPeers());\n  }, [page, dispatch]);\n\n  //effect to load pending channels, no need to keep them in redux\n  useEffect(() => {\n    Http.get(\"/api/lnd/pendingchannels\").then(({ data }) => {\n      console.log(\"pending channels:\");\n      console.log(data);\n      const makeChanObj = (ch, pendingStatus) => ({\n        remote_pubkey: ch.remote_node_pub,\n        remote_balance: ch.remote_balance,\n        local_balance: ch.local_balance,\n        ip: \"\",\n        active: false,\n        pendingStatus\n      });\n      const pending = [];\n      data.pending_open_channels.forEach(chan => {\n        const { channel } = chan;\n        pending.push(makeChanObj(channel, \"Pending Open\"));\n      });\n      data.waiting_close_channels.forEach(chan => {\n        const { channel } = chan;\n        pending.push(makeChanObj(channel, \"Pending Close\"));\n      });\n      data.pending_force_closing_channels.forEach(chan => {\n        const { channel } = chan;\n        pending.push(makeChanObj(channel, \"Pending Force Close\"));\n      });\n      setPendingChannels(pending);\n    });\n  }, []);\n\n  const confirmedBalanceUSD = useMemo(\n    () => formatNumber(convertSatsToUSD(confirmedBalance, USDRate).toFixed(2)),\n    [USDRate, confirmedBalance]\n  );\n  const channelBalanceUSD = useMemo(\n    () => formatNumber(convertSatsToUSD(channelBalance, USDRate).toFixed(2)),\n    [USDRate, channelBalance]\n  );\n\n  const openAccordion = useCallback(accordion => {\n    setSelectedAccordion(accordion);\n  }, []);\n\n  const toggleAddPeerOpen = useCallback(() => {\n    setAddPeerOpen(!addPeerOpen);\n  }, [addPeerOpen]);\n\n  const toggleAddChannelOpen = useCallback(() => {\n    setAddChannelOpen(!addChannelOpen);\n  }, [addChannelOpen]);\n\n  const openTransactionsAccordion = useCallback(() => {\n    openAccordion(\"transactions\");\n  }, [openAccordion]);\n\n  const openPeersAccordion = useCallback(() => {\n    openAccordion(\"peers\");\n  }, [openAccordion]);\n\n  // const openInvoicesAccordion = useCallback(() => {\n  //   openAccordion(\"invoices\");\n  // }, [openAccordion]);\n\n  const openChannelsAccordion = useCallback(() => {\n    openAccordion(\"channels\");\n  }, [openAccordion]);\n\n  return (\n    <div className=\"page-container advanced-page\">\n      <div className=\"advanced-header\">\n        <MainNav absolute pageTitle=\"ADVANCED\" enableBackButton={false} />\n        <div className=\"advanced-balance-container\">\n          <div className=\"advanced-balance-icon-container\">\n            <i className=\"advanced-balance-icon fas fa-link\"></i>\n          </div>\n          <div className=\"advanced-balance-btc-container\">\n            <p className=\"advanced-balance-btc\">\n              {formatNumber(confirmedBalance)}\n            </p>\n            <p className=\"advanced-balance-usd\">{confirmedBalanceUSD} USD</p>\n          </div>\n        </div>\n        <div\n          className=\"advanced-balance-container\"\n          style={{ paddingBottom: 25 }}\n        >\n          <div className=\"advanced-balance-icon-container\">\n            <i className=\"advanced-balance-icon fas fa-bolt\"></i>\n          </div>\n          <div className=\"advanced-balance-btc-container\">\n            <p className=\"advanced-balance-btc\">\n              {formatNumber(channelBalance)}\n            </p>\n            <p className=\"advanced-balance-usd\">{channelBalanceUSD} USD</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"advanced-accordions-container\">\n        <div\n          className={classNames({\n            \"advanced-accordion-container\": true,\n            \"accordion-open\": selectedAccordion === \"transactions\"\n          })}\n        >\n          <div\n            className=\"advanced-accordion-header\"\n            onClick={openTransactionsAccordion}\n          >\n            <p className=\"advanced-accordion-title\">Transactions</p>\n          </div>\n          <div className=\"advanced-accordion-content-container\">\n            <div className=\"advanced-accordion-content\">\n              {transactions.content.map(transaction => (\n                <Transaction\n                  date={transaction.time_stamp}\n                  hash={transaction.tx_hash}\n                  value={formatNumber(transaction.amount)}\n                  key={transaction.tx_hash}\n                  unconfirmed={transaction.num_confirmations === 0}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n        <div\n          className={classNames({\n            \"advanced-accordion-container\": true,\n            \"accordion-open\": selectedAccordion === \"peers\"\n          })}\n        >\n          <div\n            className=\"advanced-accordion-header\"\n            onClick={openPeersAccordion}\n          >\n            <p className=\"advanced-accordion-title\">Peers</p>\n          </div>\n          <div className=\"advanced-accordion-content-container\">\n            <div className=\"advanced-accordion-content\">\n              {peers.map(peer => (\n                <Peer\n                  address={peer.address}\n                  publicKey={peer.pub_key}\n                  sent={peer.sat_sent}\n                  received={peer.sat_recv}\n                  key={peer.address + peer.pub_key}\n                />\n              ))}\n            </div>\n            <AddBtn nestedMode relative>\n              <AddBtn\n                label=\"ADD PEER\"\n                onClick={toggleAddPeerOpen}\n                icon=\"link\"\n              />\n            </AddBtn>\n          </div>\n        </div>\n        {/* <div\n          className={classNames({\n            \"advanced-accordion-container\": true,\n            \"accordion-open\": selectedAccordion === \"invoices\"\n          })}\n        >\n          <div\n            className=\"advanced-accordion-header\"\n            onClick={openInvoicesAccordion}\n          >\n            <p className=\"advanced-accordion-title\">Invoices</p>\n          </div>\n          <div className=\"advanced-accordion-content-container\">\n            <div className=\"advanced-accordion-content\">\n              {invoices.content\n                .slice()\n                .reverse()\n                .map(invoice => (\n                  <Invoice\n                    paymentRequest={invoice.payment_request}\n                    date={invoice.creation_date}\n                    value={formatNumber(invoice.value)}\n                    message={invoice.memo}\n                    key={invoice.payment_request}\n                  />\n                ))}\n            </div>\n          </div>\n        </div> */}\n        <div\n          className={classNames({\n            \"advanced-accordion-container\": true,\n            \"accordion-open\": selectedAccordion === \"channels\"\n          })}\n        >\n          <div\n            className=\"advanced-accordion-header\"\n            onClick={openChannelsAccordion}\n          >\n            <p className=\"advanced-accordion-title\">Channels</p>\n          </div>\n          <div className=\"advanced-accordion-content-container\">\n            <div className=\"advanced-accordion-content\">\n              {channels.map(channel => (\n                <Channel\n                  address={channel.remote_pubkey}\n                  receivable={channel.remote_balance}\n                  sendable={channel.local_balance}\n                  active={channel.active}\n                  key={channel.chan_id}\n                />\n              ))}\n              {pendingChannels.map(channel => (\n                <Channel\n                  address={channel.remote_pubkey}\n                  receivable={channel.remote_balance}\n                  sendable={channel.local_balance}\n                  active={channel.active}\n                  key={channel.chan_id}\n                  pendingStatus={channel.pendingStatus}\n                />\n              ))}\n              <AddBtn nestedMode relative>\n                <AddBtn\n                  label=\"ADD CHANNEL\"\n                  small\n                  onClick={toggleAddChannelOpen}\n                  icon=\"exchange-alt\"\n                />\n              </AddBtn>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AddPeerModal open={addPeerOpen} toggleModal={toggleAddPeerOpen} />\n      <AddChannelModal\n        open={addChannelOpen}\n        toggleModal={toggleAddChannelOpen}\n      />\n    </div>\n  );\n};\n\nexport default AdvancedPage;\n"],"sourceRoot":""}