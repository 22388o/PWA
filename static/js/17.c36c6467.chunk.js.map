{"version":3,"sources":["common/Post/components/Video/index.js","images/share.svg","common/Post/index.tsx","utils/Cache.js","utils/Promise.js","utils/Torrents.js","common/Post/SharedPost.tsx"],"names":["Video","id","item","index","postId","tipValue","tipCounter","hideRibbon","width","contentURL","decodeURIComponent","magnetURI","replace","videoStyle","className","style","cursor","data-torrent","data-file-key","controls","data-played","src","TipRibbon","zoomed","Post","publicKey","openTipModal","openUnlockModal","openDeleteModal","undefined","openShareModal","_","dispatch","Store","unlockedContent","content","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","author","post","React","useMemo","tips","Object","values","length","sum","useState","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","isOnlineNode","useEffect","subPostContent","subPostTips","liveStatus","stream","contentItems","find","type","viewersCounter","getMediaContent","useCallback","entries","filter","forEach","k","e","path","parseContent","key","text","finalItem","cached","Image","Common","playbackMagnet","Stream","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","on","scrollSnapList","window","addEventListener","removeEventListener","off","tipPost","targetType","postID","unlockPost","deletePost","shared","sharePost","Tooltip","rebuild","console","log","ShockAvatar","height","Pad","amt","insideRow","to","displayName","live","waiting","wasLive","DateTime","fromMillis","date","toRelative","onClick","map","Array","from","classNames","scrollTo","ref","data-tip","alt","ShareIcon","color","marginLeft","getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","element","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","file","extension","name","split","slice","supportedFileType","includes","fileType","webTorrentClient","WebTorrent","attachMedia","posts","torrentMode","allowDuplicates","torrentTasks","get","add","torrent","files","target","destroy","torrentElement","format","toLowerCase","endsWith","compatibleURL","elementSrc","getAttribute","setAttribute","renderTo","getBlob","err","blob","querySelector","dataset","played","reduce","torrents","SharedPost","sharerPublicKey","Utils","sharerProfile","sharedPost","originalPost","originalAuthor","loadPostMedia","subscribeUserProfile","subSinglePost","useLayoutEffect","shareDate"],"mappings":"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","file":"static/js/17.c36c6467.chunk.js","sourcesContent":["import TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\n\nconst Video = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null\n}) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = {};\n  if (width) {\n    videoStyle.width = width;\n  }\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","export default __webpack_public_path__ + \"static/media/share.8ed36b2d.svg\";","import React, { useEffect, useState, useCallback } from \"react\";\nimport * as Common from \"shock-common\";\nimport { Link } from \"react-router-dom\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport sum from \"lodash/sum\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../store\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\nimport { subPostContent, subPostTips } from \"../../actions/FeedActions\";\n\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport \"./css/index.scoped.css\";\n\nimport ShareIcon from \"../../images/share.svg\";\n\nconst Post = ({\n  id,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = undefined,\n  openShareModal = _ => {}\n}) => {\n  const dispatch = Store.useDispatch();\n  const unlockedContent = Store.useSelector(\n    ({ content }) => content.unlockedContent\n  );\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n  const author = Store.useSelector(Store.selectUser(publicKey));\n  const post = Store.useSelector(Store.selectSinglePost(publicKey, id));\n  const [tipCounter, tipValue] = React.useMemo(() => {\n    const tips = Object.values(\n      post.tips ||\n        {} /* cached data from previous app version won't have the tips object */\n    );\n\n    return [tips.length, sum(tips)];\n  }, [post]);\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n\n  const isOnlineNode = /*Utils.isOnline(\n    Store.useSelector(Store.selectUser(publicKey)).lastSeenApp\n  );*/ true;\n\n  useEffect(() => dispatch(subPostContent(publicKey, id)), [\n    dispatch,\n    id,\n    publicKey\n  ]);\n\n  useEffect(() => dispatch(subPostTips(publicKey, id)), [\n    dispatch,\n    id,\n    publicKey\n  ]);\n\n  const liveStatus = React.useMemo<Common.LiveStatus | null>(() => {\n    const stream = Object.values(post.contentItems).find(\n      item => item.type === \"stream/embedded\"\n    ) as Common.EmbeddedStream;\n\n    if (stream) {\n      return stream.liveStatus;\n    }\n\n    return null;\n  }, [post.contentItems]);\n\n  const viewersCounter = React.useMemo<number | null>(() => {\n    const stream = Object.values(post.contentItems).find(\n      item => item.type === \"stream/embedded\"\n    ) as Common.EmbeddedStream;\n\n    if (stream && stream.liveStatus === \"live\") {\n      return stream.viewersCounter;\n    }\n\n    return null;\n  }, [post.contentItems]);\n\n  const getMediaContent = useCallback(() => {\n    return Object.entries(post.contentItems).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  }, [post.contentItems]);\n\n  const getTextContent = () => {\n    return Object.entries(post.contentItems).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(() => {\n    getMediaContent().forEach(([k, e]) => {\n      const path = `${publicKey}>posts>${k}`;\n      // @ts-expect-error\n      if (e.isPrivate && !unlockedContent[path]) {\n        setIsPrivate(true);\n      }\n    });\n  }, [getMediaContent, publicKey, unlockedContent]);\n\n  const parseContent = ([key, item]: [string, Common.ContentItem], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n    const finalItem = item;\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`;\n      const cached = unlockedContent[path];\n      if (cached) {\n        finalItem.magnetURI = cached;\n      } else {\n        return (\n          <div key={key}>\n            <i className=\"fas fa-lock fa-10x\"></i>\n          </div>\n        );\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n    if (Common.isEmbeddedStream(finalItem)) {\n      if (item.playbackMagnet) {\n        return (\n          <Video\n            id={key}\n            item={{\n              ...finalItem,\n              magnetURI: finalItem.playbackMagnet\n            }}\n            index={index}\n            postId={id}\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            key={`${id}-${index}`}\n            hideRibbon={undefined}\n            width={undefined}\n          />\n        );\n      }\n      return (\n        <Stream\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id, shared: false });\n  }, [id, openDeleteModal]);\n\n  const sharePost = useCallback(() => {\n    openShareModal({\n      targetType: \"share\",\n      postID: id,\n      publicKey\n    });\n  }, [publicKey, id, openShareModal]);\n\n  useEffect(() => {\n    try {\n      Tooltip.rebuild();\n    } catch (e) {\n      console.log(`Error inside <Post />: `, e);\n    }\n  }, []);\n\n  const readableLiveStatus: Record<Common.LiveStatus, string> = {\n    live: \"Is Live\",\n    waiting: \"Waiting\",\n    wasLive: \"Was Live\"\n  };\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={publicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <div className=\"username\">\n              <Link to={`/otherUser/${publicKey}`}>{author.displayName}</Link>\n              {liveStatus && (\n                <p className=\"liveStatus\">\n                  {readableLiveStatus[liveStatus]}\n                  <i\n                    className={`fas fa-circle liveStatusIcon ${\n                      liveStatus === \"live\" ? \"liveIcon\" : \"\"\n                    }`}\n                  ></i>\n                  {liveStatus === \"live\" && (\n                    <span> | {viewersCounter} watching</span>\n                  )}\n                </p>\n              )}\n            </div>\n            <p>{DateTime.fromMillis(post.date).toRelative()}</p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    // TODO: Get the actual ID here. However posts can't be\n                    // edited so index is stable.\n                    key={key}\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div></div>\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n        {openShareModal && (\n          <div className=\"icon-tip-btn\" data-tip={\"share\"} onClick={sharePost}>\n            <img\n              alt=\"Share this post\"\n              src={ShareIcon}\n              style={{ color: \"#4285b9\", marginLeft: \"auto\" }}\n            />\n          </div>\n        )}\n        {!openShareModal && <div></div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = true;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import WebTorrent from \"webtorrent\";\nimport { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nconst supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: true,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nconst _getFileType = file => {\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const supportedFileType = Object.entries(\n    supportedFileTypes\n  ).filter(([type, options]) => options.formats.includes(extension))[0];\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport const webTorrentClient = new WebTorrent();\n\nexport const attachMedia = (\n  posts = [],\n  torrentMode = true,\n  allowDuplicates = false\n) => {\n  const torrentTasks = posts\n    .map(post => {\n      const { contentItems, id } = post;\n      return Object.entries(contentItems)\n        .filter(([key, item]) => supportedFileTypes[item.type])\n        .map(([key, item]) => () =>\n          new Promise(resolve => {\n            const torrentExists = webTorrentClient.get(item.magnetURI);\n\n            if (torrentExists && !allowDuplicates) {\n              resolve(true);\n              return;\n            }\n\n            webTorrentClient.add(item.magnetURI, async torrent => {\n              // Proceed to the next torrent in queue\n              resolve(true);\n\n              const files = torrent.files.filter(file => {\n                const extension = file.name?.split(\".\")?.slice(-1)[0];\n                const supportedFileType = Object.entries(\n                  supportedFileTypes\n                ).filter(([type, options]) =>\n                  options.formats.includes(extension)\n                )[0];\n                if (supportedFileType) {\n                  const [, fileType] = supportedFileType;\n                  const matched = fileType.formats.includes(extension);\n                  return matched;\n                }\n                return false;\n              });\n\n              files.map(async file => {\n                const fileType = _getFileType(file);\n\n                if (!fileType) {\n                  return;\n                }\n\n                const fileName = `${id}-${key}-${file.name}`;\n\n                const element = fileType.element;\n                const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                const cachedFile = await getCachedFile(fileName);\n\n                if (cachedFile) {\n                  const torrent = webTorrentClient.get(item.magnetURI);\n\n                  if (torrent) {\n                    torrent.destroy();\n                  }\n\n                  renderCachedFile(cachedFile, target);\n                  return;\n                }\n\n                const torrentElements = document.querySelectorAll(target);\n                torrentElements.forEach(torrentElement => {\n                  const contentURL = decodeURIComponent(\n                    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n                  );\n                  const [compatibleURL] = fileType.formats.filter(format =>\n                    contentURL\n                      .toLowerCase()\n                      .endsWith(`.${format.toLowerCase()}`)\n                  );\n                  const elementSrc = torrentElement.getAttribute(\"src\");\n\n                  if ((torrentMode || !compatibleURL) && !elementSrc) {\n                    file.renderTo(torrentElement, fileType.options);\n                    return;\n                  }\n\n                  torrentElement.setAttribute(\"src\", contentURL);\n                });\n              });\n\n              torrent.on(\"done\", () => {\n                files.map(file => {\n                  const fileType = _getFileType(file);\n                  const fileName = `${id}-${key}-${file.name}`;\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n\n                  file.getBlob(async (err, blob) => {\n                    if (err) {\n                      console.warn(err);\n                      return;\n                    }\n\n                    await saveFile(fileName, blob);\n                    const element = document.querySelector(target);\n                    if (\n                      element?.dataset.played === \"false\" &&\n                      !element?.getAttribute(\"src\")\n                    ) {\n                      const cachedFile = await getCachedFile(fileName);\n                      renderCachedFile(cachedFile, target);\n                    }\n                  });\n\n                  return file;\n                });\n              });\n            });\n          })\n        );\n    })\n    .reduce((torrents, contentItems) => [...torrents, ...contentItems], []);\n\n  runSerial(torrentTasks);\n};\n","import React, { useCallback, useLayoutEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport Tooltip from \"react-tooltip\";\n\nimport Post from \".\";\n\nimport * as Store from \"../../store\";\nimport * as Utils from \"../../utils\";\nimport Loader from \"../Loader\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport { subPostContent, subSinglePost } from \"../../actions/FeedActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport \"../Post/css/index.scoped.css\";\n\nexport interface SharedPostProps {\n  postID: string;\n  sharerPublicKey: string;\n  openTipModal?(tipData: any): void;\n  openUnlockModal?(unlockData: any): void;\n  openDeleteModal?(params: { id: string; shared: boolean }): void;\n  openShareModal?(shareData: any): void;\n}\n\nconst SharedPost = ({\n  postID,\n  sharerPublicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = Utils.EMPTY_FN,\n  openShareModal = Utils.EMPTY_FN\n}: SharedPostProps) => {\n  const dispatch = Store.useDispatch();\n\n  const sharerProfile = Store.useSelector(Store.selectUser(sharerPublicKey));\n  const sharedPost = Store.useSelector(\n    Store.selectSharedPost(sharerPublicKey, postID)\n  );\n  const originalPost = Store.useSelector(\n    Store.selectSinglePost(sharedPost.originalAuthor, postID)\n  );\n\n  const loadPostMedia = useCallback(async () => {\n    if (originalPost) {\n      attachMedia([originalPost], false);\n    }\n  }, [originalPost]);\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id: originalPost.id, shared: true });\n  }, [originalPost, openDeleteModal]);\n\n  React.useEffect(\n    () => dispatch(subscribeUserProfile(sharedPost.originalAuthor)),\n    [dispatch, sharedPost.originalAuthor]\n  );\n\n  React.useEffect(() => dispatch(subscribeUserProfile(sharerPublicKey)), [\n    dispatch,\n    sharerPublicKey\n  ]);\n\n  React.useEffect(\n    () => dispatch(subSinglePost(sharedPost.originalAuthor, postID)),\n    [dispatch, postID, sharedPost.originalAuthor]\n  );\n\n  React.useEffect(\n    () => dispatch(subPostContent(sharedPost.originalAuthor, postID)),\n    [dispatch, postID, sharedPost.originalAuthor]\n  );\n\n  useLayoutEffect(() => {\n    Tooltip.rebuild();\n    loadPostMedia();\n  }, [loadPostMedia]);\n\n  return (\n    <div className=\"post shared-post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={sharerPublicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <p>{sharerProfile?.displayName}</p>\n            <p>\n              {/* @ts-ignore */}\n              Shared {DateTime.fromMillis(sharedPost.shareDate).toRelative()}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"shared-content\">\n        {originalPost ? (\n          <Post\n            id={originalPost.id}\n            publicKey={sharedPost.originalAuthor}\n            openTipModal={openTipModal}\n            openUnlockModal={openUnlockModal}\n            openShareModal={openShareModal}\n          />\n        ) : (\n          <Loader text=\"Loading Post...\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SharedPost;\n"],"sourceRoot":""}