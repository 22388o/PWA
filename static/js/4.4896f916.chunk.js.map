{"version":3,"sources":["../node_modules/browser-file-storage/dist/browser-file-storage.js"],"names":["factory","window","modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof","iterator","obj","constructor","_createClass","defineProperties","target","props","length","descriptor","configurable","writable","Constructor","protoProps","staticProps","_messages2","_interopRequireDefault","_mimetypes2","_logger2","_file2","default","SELF","BrowserFileStorage","instance","TypeError","_classCallCheck","this","_init","_idb","_db","_namespace","_idb_name","_idb_version","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","READ_WRITE","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","level","logLevel","namespace","Promise","resolve","reject","log","LEVEL_ERROR","IDB_ALREADY_INIT","alreadyInit","supported","IDB_NOT_SUPPORTED","dbName","_opendb","err","successObj","IDB_COULD_NOT_OPEN","dbError","error","e","LEVEL_INFO","IDB_OPEN_SUCCESS","initial","navigator","storage","persist","then","persistent","IDB_PERSIST_PASS","canPersist","LEVEL_WARN","IDB_PERSIST_FAIL","IDB_PERSIST_NONE","IDB_NOT_INIT","method","message","init","filename","contents","mimetype","metadata","IDB_BAD_FILENAME","invalidFilename","fileToSave","_createFileToSave","mimeType","IDB_WRONG_CONTENT","invalidContents","addRequest","transaction","objectStore","put","_toIDB","onsuccess","event","IDB_SAVE_SUCCESS","file","onerror","IDB_SAVE_FAIL","request","result","fileToLoad","IDB_LOAD_SUCCESS","IDB_LOAD_FIND_FAIL","notFound","IDB_LOAD_FAIL","getAll","getRequest","files","push","IDB_LOAD_ALL_SUCCESS","IDB_LOAD_ALL_FAIL","cursorRequest","openCursor","cursor","continue","getAllKeys","IDB_LOAD_ALL_KEYS_SUCCESS","keys","IDB_LOAD_ALL_KEYS_FAIL","filenames","delete","oncomplete","IDB_DELETE_SUCCESS","IDB_DELETE_FAIL","clear","IDB_DELETE_ALL_SUCCESS","IDB_DELETE_ALL_FAIL","_ref","ext","_getExtension","existingMime","_getMimeType","givenMimeType","newBlob","Blob","type","NO_MIME_TYPE","blob","validMetadataObj","JSON","parse","stringify","lastModified","Date","getTime","extension","size","callback","version","upgrade","updateVersions","old","new","open","db","versions","onupgradeneeded","IDB_WILL_UPGRADE","storeCreateIndex","options","indexNames","contains","createIndex","filesStore","oldVersion","newVersion","createObjectStore","keyPath","unique","string","indexOf","split","pop","toLowerCase","mime","browserFileStorage","logger","DEFAULT_LEVEL","LEVEL_NONE","PREFIX","_logLevel","attachedObject","console","BrowserFile","_createdURL","URL","createObjectURL","revokeObjectURL","_this","FileReader","reader","fileError","addEventListener","srcElement","readError","_toSomething"],"mappings":"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","file":"static/js/4.4896f916.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _messages = __webpack_require__(1);\n\nvar _messages2 = _interopRequireDefault(_messages);\n\nvar _mimetypes = __webpack_require__(2);\n\nvar _mimetypes2 = _interopRequireDefault(_mimetypes);\n\nvar _logger = __webpack_require__(3);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _file = __webpack_require__(4);\n\nvar _file2 = _interopRequireDefault(_file);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SELF = null; // This messes up if end-user uses arrow functions in some cases...\n\n// *************************** //\n// **** CLASS DECLARATION **** //\n// *************************** //\n\nvar BrowserFileStorage = function () {\n    function BrowserFileStorage() {\n        _classCallCheck(this, BrowserFileStorage);\n\n        this._init = false;\n        this._idb = null;\n        this._db = null;\n        this._namespace = null;\n        this._idb_name = \"BROWSER_FILE_STORAGE_JS\", this._idb_version = 3, this._idb = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        window.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction || { READ_WRITE: \"readwrite\" // This line should only be needed if it is needed to support the object's constants for older browsers\n        };window.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\n    }\n\n    // Set log level for browserFileStorage\n    // 'none', 'error', 'warn', 'info' \n\n\n    _createClass(BrowserFileStorage, [{\n        key: 'logLevel',\n        value: function logLevel(level) {\n            _logger2.default.logLevel(level);\n        }\n\n        // Init opens the inner IndexedDB database\n        // By giving it a namespace, we make a different 'Instance' of the database.\n        // Adds safety against this same library being used in more than one place within the same domain. (Just in case a library you include also includes this...)\n        // namespace can just be the name of your app\n        /**\r\n         * Opens the inner database. \r\n         * @param {string} [namespace] - Identify the inner database instance by appending your namespace. It could be your app's name.\r\n         * @returns {Promise} - Returns a Promise which resolves if the inner database is initialized properly. \r\n         */\n\n    }, {\n        key: 'init',\n        value: function init(namespace) {\n            return new Promise(function (resolve, reject) {\n                if (SELF._init) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_ALREADY_INIT, {});\n                    return reject({ alreadyInit: true, supported: true });\n                }\n\n                if (SELF._idb) {\n                    var dbName = namespace && typeof namespace === 'string' ? SELF._idb_name + '_' + namespace : SELF._idb_name;\n                    SELF._opendb(dbName, function (err, successObj) {\n                        if (err) {\n                            _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_COULD_NOT_OPEN, { dbError: true, error: err.error, e: err });\n                            return reject({ dbError: true, error: err.error, supported: true });\n                        }\n\n                        SELF._init = true;\n                        _logger2.default.log(_logger2.default.LEVEL_INFO, _messages2.default.IDB_OPEN_SUCCESS, {});\n                        return resolve({ initial: successObj.initial, supported: true });\n                    }, SELF._idb_version);\n                } else {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_NOT_SUPPORTED, {});\n                    return reject({ supported: false });\n                }\n            });\n        }\n\n        // Persist takes no arguments.\n        // It will ask or attempt to persist in whatever way the target browser deals with it\n        // Persist will always resolve unless the entire class was not initialized.\n        // Can check 'persistent' to see if request was approved by user/browser and 'canPersist' to see if it was possible in the first place. \n        /**\r\n         * Requests permission to the user/browser for file persistency. \r\n         * @returns {Promise} - Returns a Promise which resolves with an object containing persistency status.\r\n         */\n\n    }, {\n        key: 'persist',\n        value: function persist() {\n            return new Promise(function (resolve, reject) {\n                if (!SELF._init) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_NOT_INIT, { method: 'persist' });\n                    return reject({ message: _messages2.default.IDB_NOT_INIT, init: false });\n                }\n\n                if (navigator.storage && navigator.storage.persist) {\n                    navigator.storage.persist().then(function (persistent) {\n                        if (persistent) {\n                            _logger2.default.log(_logger2.default.LEVEL_INFO, _messages2.default.IDB_PERSIST_PASS, { persistent: true, canPersist: true });\n                            return resolve({ persistent: true, canPersist: true });\n                        } else {\n                            _logger2.default.log(_logger2.default.LEVEL_WARN, _messages2.default.IDB_PERSIST_FAIL, { persistent: false, canPersist: true });\n                            return resolve({ persistent: false, canPersist: true });\n                        }\n                    });\n                } else {\n                    _logger2.default.log(_logger2.default.LEVEL_WARN, _messages2.default.IDB_PERSIST_NONE, { persistent: false, canPersist: false });\n                    return resolve({ persistent: false, canPersist: false });\n                }\n            });\n        }\n\n        // Save is in charge of taking any type of input and converting it to a common format for storing into the inner database\n        // A file will be saved, and in order to access it and load it, the filename will be the 'key'\n        // By default, same filename being used will overwrite whatever was there previously with no warning.\n        // @TODO: overwrite global option?, accept file input dialog thing, accept base64 string, accept js object -> stringify??, accept dom element?\n        /**\r\n         * Saves a file to the database\r\n         * @param {string} filename - Acts as a unique identifier for the stored file, extension may be used to determine mimetype automatically.\r\n         * @param {string | Blob | BrowserFile} contents - raw contents of the file.\r\n         * @param {string} [mimetype] - Optionally force a mimetype on the saved file, regardless of extension or if a blob already has a mimetype.\r\n         * @param {Object} [metadata] - Optionally send a JS object to store as metadata for this file.\r\n         * @returns {Promise} - Returns a Promise which resolves with the BrowserFile object that was saved.  \r\n         */\n\n    }, {\n        key: 'save',\n        value: function save(filename, contents, mimetype, metadata) {\n            return new Promise(function (resolve, reject) {\n                // Validation and Blob Creation.\n                if (!SELF._init) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_NOT_INIT, { method: 'save' });\n                    return reject({ init: false });\n                }\n\n                if (!filename || typeof filename !== 'string' || filename.length < 1) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_BAD_FILENAME, { invalidFilename: true });\n                    return reject({ init: true, invalidFilename: true });\n                }\n\n                var fileToSave = SELF._createFileToSave({ filename: filename, contents: contents, mimeType: mimetype, metadata: metadata });\n\n                if (!fileToSave) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_WRONG_CONTENT, { invalidContents: true });\n                    return reject({ init: true, invalidContents: true });\n                }\n\n                // Indexed DB implementation\n                var transaction = SELF._db.transaction([\"files\"], IDBTransaction.READ_WRITE || \"readwrite\");\n                var objectStore = transaction.objectStore(\"files\");\n\n                var addRequest = objectStore.put(fileToSave._toIDB());\n\n                addRequest.onsuccess = function (event) {\n                    _logger2.default.log(_logger2.default.LEVEL_INFO, _messages2.default.IDB_SAVE_SUCCESS, { file: fileToSave, e: event });\n                    return resolve(fileToSave);\n                };\n\n                addRequest.onerror = function (event) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_SAVE_FAIL, { e: event });\n                    return reject({ init: true, dbError: true, error: addRequest.error });\n                };\n            });\n        }\n\n        // Load will access the inner database and fetch the file as a BrowserFile object\n        /**\r\n         * Loads a file from the database.\r\n         * @param {string} filename - Acts as a unique identifier for the stored file\r\n         * @returns {Promise} - Returns a Promise which resolves if the file is loaded properly with the BrowserFile object. \r\n         */\n\n    }, {\n        key: 'load',\n        value: function load(filename) {\n            return new Promise(function (resolve, reject) {\n                if (!SELF._init) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_NOT_INIT, { method: 'load' });\n                    return reject({ init: false });\n                }\n\n                if (!filename || typeof filename !== 'string' || filename.length < 1) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_BAD_FILENAME, { invalidFilename: true });\n                    return reject({ init: true, invalidFilename: true });\n                }\n\n                var transaction = SELF._db.transaction([\"files\"]);\n                var objectStore = transaction.objectStore(\"files\");\n                var request = objectStore.get(filename);\n\n                request.onsuccess = function (event) {\n                    // Do something with the request.result!\n                    if (request.result) {\n                        var fileToLoad = new _file2.default(request.result);\n                        _logger2.default.log(_logger2.default.LEVEL_INFO, _messages2.default.IDB_LOAD_SUCCESS, { file: fileToLoad, e: event });\n                        return resolve(fileToLoad);\n                    } else {\n                        _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_LOAD_FIND_FAIL, { e: event });\n                        return reject({ init: true, notFound: true });\n                    }\n                };\n\n                request.onerror = function (event) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_LOAD_FAIL, { e: event });\n                    return reject({ init: true, dbError: true, error: request.error });\n                };\n            });\n        }\n\n        // Load All will load all existing saved files into an array of BrowserFile\n        /**\r\n         * Returns all currently saved files \r\n         * @returns {Promise} - Returns a Promise which resolves with an array containing all saved files.\r\n         */\n\n    }, {\n        key: 'loadAll',\n        value: function loadAll() {\n            return new Promise(function (resolve, reject) {\n                if (!SELF._init) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_NOT_INIT, { method: 'loadAll' });\n                    return reject({ init: false });\n                }\n\n                var transaction = SELF._db.transaction([\"files\"], IDBTransaction.READ_WRITE || \"readwrite\");\n                var objectStore = transaction.objectStore(\"files\");\n\n                if (objectStore.getAll) {\n                    // Parameters for getAll (query, maxToReturnIfOver1)\n                    var getRequest = objectStore.getAll();\n\n                    getRequest.onsuccess = function (event) {\n                        var files = [];\n                        if (!event.target.result[0]) {\n                            if (event.target.result && event.target.result.filename) {\n                                files.push(new _file2.default(event.target.result));\n                            }\n                        } else {\n                            for (var r in event.target.result) {\n                                if (event.target.result[r] && event.target.result[r].filename) {\n                                    files.push(new _file2.default(event.target.result[r]));\n                                }\n                            }\n                        }\n                        _logger2.default.log(_logger2.default.LEVEL_INFO, _messages2.default.IDB_LOAD_ALL_SUCCESS, { files: files });\n                        return resolve(files);\n                    };\n\n                    getRequest.onerror = function (event) {\n                        _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_LOAD_ALL_FAIL, { e: event });\n                        return reject({ init: true, dbError: true, error: getRequest.error });\n                    };\n                } else {\n                    // Fallback to the traditional cursor approach if getAll isn't supported.\n                    var files = [];\n                    var cursorRequest = objectStore.openCursor();\n\n                    cursorRequest.onsuccess = function (event) {\n                        var cursor = event.target.result;\n                        if (cursor) {\n                            if (cursor.value && cursor.value.filename) {\n                                files.push(new _file2.default(cursor.value));\n                            }\n                            cursor.continue();\n                        } else {\n                            _logger2.default.log(_logger2.default.LEVEL_INFO, _messages2.default.IDB_LOAD_ALL_SUCCESS, { files: files });\n                            return resolve(files);\n                        }\n                    };\n\n                    cursorRequest.onerror = function (event) {\n                        _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_LOAD_ALL_FAIL, { e: event });\n                        return reject({ init: true, dbError: true, error: cursorRequest.error });\n                    };\n                }\n            });\n        }\n\n        // lists all filenames without loading the actual files from storage\n        /**\r\n         * Returns all current keys/filenames to files stored \r\n         * @returns {Promise} - Returns a Promise which resolves with an array containing all current keys/filenames for files stored\r\n         */\n\n    }, {\n        key: 'list',\n        value: function list() {\n            return new Promise(function (resolve, reject) {\n                if (!SELF._init) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_NOT_INIT, { method: 'list' });\n                    return reject({ init: false });\n                }\n\n                var transaction = SELF._db.transaction([\"files\"], IDBTransaction.READ_WRITE || \"readwrite\");\n                var objectStore = transaction.objectStore(\"files\");\n\n                if (objectStore.getAllKeys) {\n                    // Parameters for getAll (query, maxToReturnIfOver1)\n                    var getRequest = objectStore.getAllKeys();\n\n                    getRequest.onsuccess = function (event) {\n                        _logger2.default.log(_logger2.default.LEVEL_INFO, _messages2.default.IDB_LOAD_ALL_KEYS_SUCCESS, { keys: event.target.result });\n                        return resolve(event.target.result);\n                    };\n\n                    getRequest.onerror = function (event) {\n                        _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_LOAD_ALL_KEYS_FAIL, { e: event });\n                        return reject({ init: true, dbError: true, error: getRequest.error });\n                    };\n                } else {\n                    // Fallback to the traditional cursor approach if getAll isn't supported.\n                    var filenames = [];\n                    var cursorRequest = objectStore.openCursor();\n\n                    cursorRequest.onsuccess = function (event) {\n                        var cursor = event.target.result;\n                        if (cursor) {\n                            if (cursor.key) {\n                                filenames.push(cursor.key);\n                            }\n                            cursor.continue();\n                        } else {\n                            _logger2.default.log(_logger2.default.LEVEL_INFO, _messages2.default.IDB_LOAD_ALL_KEYS_SUCCESS, { keys: filenames });\n                            return resolve(filenames);\n                        }\n                    };\n\n                    cursorRequest.onerror = function (event) {\n                        _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_LOAD_ALL_KEYS_FAIL, { e: event });\n                        return reject({ init: true, dbError: true, error: cursorRequest.error });\n                    };\n                }\n            });\n        }\n\n        // Deletes a file if it exists\n        // Even if the file does not exist, returned promise resolves.\n        /**\r\n         * Deletes a specific file from the inner database.\r\n         * @param {string} filename - Acts as a unique identifier to find the stored file.\r\n         * @returns {Promise} - Returns a Promise which resolves once the file is ensured to be deleted. \r\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete(filename) {\n            return new Promise(function (resolve, reject) {\n                if (!SELF._init) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_NOT_INIT, { method: 'delete' });\n                    return reject({ init: false });\n                }\n\n                if (!filename || typeof filename !== 'string' || filename.length < 1) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_BAD_FILENAME, { invalidFilename: true });\n                    return reject({ init: true, invalidFilename: true });\n                }\n\n                var transaction = SELF._db.transaction([\"files\"], IDBTransaction.READ_WRITE || \"readwrite\");\n                var objectStore = transaction.objectStore(\"files\");\n\n                var deleteRequest = objectStore.delete(filename);\n\n                transaction.oncomplete = function (event) {\n                    _logger2.default.log(_logger2.default.LEVEL_INFO, _messages2.default.IDB_DELETE_SUCCESS, {});\n                    return resolve();\n                };\n\n                transaction.onerror = function (event) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_DELETE_FAIL, { e: event });\n                    return reject({ init: true, dbError: true, error: transaction.error });\n                };\n            });\n        }\n\n        // Delete All will delete all existing saved files within the inner database and within the namespace.\n        /**\r\n         * Deletes all current files within the inner database on this namespace.\r\n         * @returns {Promise} - Returns a Promise which resolves if the operation was successful\r\n         */\n\n    }, {\n        key: 'deleteAll',\n        value: function deleteAll() {\n            return new Promise(function (resolve, reject) {\n                if (!SELF._init) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_NOT_INIT, { method: 'deleteAll' });\n                    return reject({ init: false });\n                }\n\n                var transaction = SELF._db.transaction([\"files\"], IDBTransaction.READ_WRITE || \"readwrite\");\n                var objectStore = transaction.objectStore(\"files\");\n\n                var clearRequest = objectStore.clear();\n\n                transaction.oncomplete = function (event) {\n                    _logger2.default.log(_logger2.default.LEVEL_INFO, _messages2.default.IDB_DELETE_ALL_SUCCESS, {});\n                    return resolve();\n                };\n\n                transaction.onerror = function (event) {\n                    _logger2.default.log(_logger2.default.LEVEL_ERROR, _messages2.default.IDB_DELETE_ALL_FAIL, { e: event });\n                    return reject({ init: true, dbError: true, error: transaction.error });\n                };\n            });\n        }\n\n        // Return a File Abstraction\n\n    }, {\n        key: '_createFileToSave',\n        value: function _createFileToSave(_ref) {\n            var filename = _ref.filename,\n                contents = _ref.contents,\n                mimeType = _ref.mimeType,\n                metadata = _ref.metadata;\n\n            if (!mimeType || typeof mimeType !== 'string' || mimeType == '') {\n                mimeType = null;\n            }\n\n            if (!contents) {\n                return;\n            }\n\n            var ext = this._getExtension(filename);\n            var existingMime = this._getMimeType(ext);\n            var givenMimeType = !mimeType || typeof mimeType !== 'string' || mimeType == '' ? null : mimeType;\n            var newBlob = null;\n\n            if (typeof contents === 'string') {\n                if (!givenMimeType) {\n                    if (ext) {\n                        if (existingMime) {\n                            newBlob = new Blob([contents], { type: existingMime });\n                        } else {\n                            _logger2.default.log(_logger2.default.LEVEL_WARN, _messages2.default.NO_MIME_TYPE, { filename: filename, contents: contents, mimeType: mimeType, method: '_createBlobToSave' });\n                            newBlob = new Blob([contents], { type: 'text/plain' });\n                        }\n                    } else {\n                        _logger2.default.log(_logger2.default.LEVEL_WARN, _messages2.default.NO_MIME_TYPE, { filename: filename, contents: contents, mimeType: mimeType, method: '_createBlobToSave' });\n                        newBlob = new Blob([contents], { type: 'text/plain' });\n                    }\n                } else {\n                    newBlob = new Blob([contents], { type: givenMimeType });\n                }\n            } else if (contents instanceof Blob) {\n                if (contents.type == '') {\n                    if (!givenMimeType) {\n                        if (existingMime) {\n                            newBlob = new Blob([contents], { type: existingMime });\n                        } else {\n                            _logger2.default.log(_logger2.default.LEVEL_WARN, _messages2.default.NO_MIME_TYPE, { filename: filename, contents: contents, mimeType: mimeType, method: '_createBlobToSave' });\n                            newBlob = new Blob([contents], { type: 'application/octet-stream' });\n                        }\n                    } else {\n                        newBlob = new Blob([contents], { type: givenMimeType });\n                    }\n                } else {\n                    if (!givenMimeType) {\n                        newBlob = contents;\n                    } else {\n                        newBlob = new Blob([contents], { type: givenMimeType });\n                    }\n                }\n            } else if (contents instanceof _file2.default) {\n                if (!givenMimeType) {\n                    if (existingMime) {\n                        newBlob = new Blob([contents.blob], { type: existingMime });\n                    } else {\n                        _logger2.default.log(_logger2.default.LEVEL_WARN, _messages2.default.NO_MIME_TYPE, { filename: filename, contents: contents, mimeType: mimeType, method: '_createBlobToSave' });\n                        newBlob = new Blob([contents.blob], { type: 'application/octet-stream' });\n                    }\n                } else {\n                    newBlob = new Blob([contents.blob], { type: givenMimeType });\n                }\n            } else {\n                return null;\n            }\n\n            var validMetadataObj = {};\n            try {\n                if (metadata && (typeof metadata === 'undefined' ? 'undefined' : _typeof(metadata)) === 'object') {\n                    validMetadataObj = JSON.parse(JSON.stringify(metadata));\n                }\n            } catch (error) {\n                validMetadataObj = {};\n            }\n\n            var fileToSave = new _file2.default({\n                filename: filename,\n                blob: newBlob,\n                lastModified: new Date().getTime(),\n                extension: ext,\n                size: newBlob.size,\n                type: newBlob.type,\n                metadata: validMetadataObj\n            });\n\n            return fileToSave;\n        }\n    }, {\n        key: '_opendb',\n        value: function _opendb(name, callback, version) {\n            var request = null;\n            var upgrade = false;\n            var initial = false;\n            var updateVersions = { old: null, new: null };\n            if (version) {\n                request = SELF._idb.open(name, version);\n            } else {\n                request = SELF._idb.open(name);\n            }\n\n            request.onerror = function (event) {\n                callback({ error: request.error, event: event, request: request });\n            };\n\n            request.onsuccess = function (event) {\n                SELF._db = request.result;\n                callback(null, { db: request.result, request: request, event: event, upgrade: upgrade, initial: initial, versions: updateVersions });\n            };\n\n            request.onupgradeneeded = function (event) {\n                upgrade = true;\n                _logger2.default.log(_logger2.default.LEVEL_WARN, _messages2.default.IDB_WILL_UPGRADE, {});\n\n                SELF._db = event.target.result;\n                var transaction = event.target.transaction;\n\n                function storeCreateIndex(objectStore, name, options) {\n                    if (!objectStore.indexNames.contains(name)) {\n                        objectStore.createIndex(name, name, options);\n                    }\n                }\n\n                var filesStore = void 0;\n                if (event.oldVersion != 0 && event.oldVersion != event.newVersion) {\n                    updateVersions.old = event.oldVersion;\n                    updateVersions.new = event.newVersion;\n                    // Actual Upgrade\n                    filesStore = transaction.objectStore('files');\n                } else {\n                    // First time initializing DB\n                    initial = true;\n                    filesStore = SELF._db.createObjectStore(\"files\", { keyPath: \"filename\" });\n                }\n\n                storeCreateIndex(filesStore, 'filename', { unique: false });\n                storeCreateIndex(filesStore, 'modified', { unique: false });\n            };\n        }\n    }, {\n        key: '_getExtension',\n        value: function _getExtension(string) {\n            var ext = null;\n            if (string.indexOf('.') != -1) {\n                ext = string.split('.').pop().toLowerCase();\n                if (ext.length <= 2) {\n                    // ???\n                    ext = null;\n                }\n            }\n            return ext;\n        }\n    }, {\n        key: '_getMimeType',\n        value: function _getMimeType(extension) {\n            var mime = null;\n            if (extension) {\n                mime = _mimetypes2.default[extension];\n            }\n            return mime;\n        }\n    }]);\n\n    return BrowserFileStorage;\n}();\n\n// ******************* //\n// **** EXPORTING **** //\n// ******************* //\n\n\nSELF = new BrowserFileStorage();\n\n// Browser export as a global\nif (typeof window !== 'undefined') {\n    window.browserFileStorage = SELF;\n}\n\n// Node / Webpack export\n// Note: This should not be required in Node, as it uses browser APIs\nexports.default = SELF;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    IDB_NOT_SUPPORTED: \"Indexed DB is not supported on this browser.\",\n    IDB_NOT_INIT: \"Indexed DB was not initialized. Could not call method.\",\n    IDB_ALREADY_INIT: \"Indexed DB was already initialized.\",\n    IDB_OPEN_SUCCESS: \"Indexed DB Opened successfully.\",\n    IDB_WILL_UPGRADE: \"About to upgrade inner database structure.\",\n\n    IDB_PERSIST_PASS: \"Asked for persistency and succeeded. Files will remain until user manually clears them.\",\n    IDB_PERSIST_FAIL: \"Asked for persistency and failed. Files have default persistency, browser could remove them.\",\n    IDB_PERSIST_NONE: \"Could not ask for persistency. Files have default persistency, browser could remove them.\",\n\n    IDB_BAD_FILENAME: \"Filename is not a string, or is empty.\",\n    IDB_WRONG_CONTENT: \"Content given is not valid [String, Blob, or FileAbstraction]\",\n\n    IDB_SAVE_SUCCESS: \"Successfully saved a file to database.\",\n    IDB_SAVE_FAIL: \"Failed at saving file to database.\",\n\n    IDB_LOAD_SUCCESS: \"Successfully loaded a file from database.\",\n    IDB_LOAD_FIND_FAIL: \"Could not find the file in the database.\",\n    IDB_LOAD_FAIL: \"Failed at loading file from database.\",\n\n    IDB_LOAD_ALL_SUCCESS: \"Successfully loaded all files from database.\",\n    IDB_LOAD_ALL_FAIL: \"Could not load all files from the database.\",\n\n    IDB_LOAD_ALL_KEYS_SUCCESS: \"Successfully loaded all keys/filenames from database.\",\n    IDB_LOAD_ALL_KEYS_FAIL: \"Could not load all keys/filenames from the database.\",\n\n    IDB_DELETE_SUCCESS: \"Successfully deleted a file from database.\",\n    IDB_DELETE_FAIL: \"Failed at deleting file from database.\",\n\n    IDB_DELETE_ALL_SUCCESS: \"Successfully deleted all files from database.\",\n    IDB_DELETE_ALL_FAIL: \"Could not delete all files from the database.\",\n\n    NO_MIME_TYPE: \"Cannot auto-detect mimetype for filename, setting mimetype to a safe default type\"\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    \"aac\": \"audio/aac\",\n    \"abw\": \"application/x-abiword\",\n    \"arc\": \"application/octet-stream\",\n    \"avi\": \"video/x-msvideo\",\n    \"azw\": \"application/vnd.amazon.ebook\",\n    \"bin\": \"application/octet-stream\",\n    \"bmp\": \"image/bmp\",\n    \"bz\": \"application/x-bzip\",\n    \"bz2\": \"application/x-bzip2\",\n    \"csh\": \"application/x-csh\",\n    \"css\": \"text/css\",\n    \"csv\": \"text/csv\",\n    \"doc\": \"application/msword\",\n    \"docx\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    \"eot\": \"application/vnd.ms-fontobject\",\n    \"epub\": \"application/epub+zip\",\n    \"es\": \"application/ecmascript\",\n    \"gif\": \"image/gif\",\n    \"htm\": \"text/html\",\n    \"html\": \"text/html\",\n    \"ico\": \"image/x-icon\",\n    \"ics\": \"text/calendar\",\n    \"jar\": \"application/java-archive\",\n    \"jpeg\": \"image/jpeg\",\n    \"js\": \"application/javascript\",\n    \"json\": \"application/json\",\n    \"mid\": \"audio/midi\",\n    \"mpeg\": \"video/mpeg\",\n    \"mp4\": \"video/mp4\",\n    \"mpkg\": \"application/vnd.apple.installer+xml\",\n    \"odp\": \"application/vnd.oasis.opendocument.presentation\",\n    \"ods\": \"application/vnd.oasis.opendocument.spreadsheet\",\n    \"odt\": \"application/vnd.oasis.opendocument.text\",\n    \"oga\": \"audio/ogg\",\n    \"ogv\": \"video/ogg\",\n    \"ogx\": \"application/ogg\",\n    \"otf\": \"font/otf\",\n    \"png\": \"image/png\",\n    \"pdf\": \"application/pdf\",\n    \"ppt\": \"application/vnd.ms-powerpoint\",\n    \"pptx\": \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n    \"rar\": \"application/x-rar-compressed\",\n    \"rtf\": \"application/rtf\",\n    \"sh\": \"application/x-sh\",\n    \"svg\": \"image/svg+xml\",\n    \"swf\": \"application/x-shockwave-flash\",\n    \"tar\": \"application/x-tar\",\n    \"tiff\": \"image/tiff\",\n    \"tif\": \"image/tiff\",\n    \"ts\": \"application/typescript\",\n    \"ttf\": \"font/ttf\",\n    \"txt\": \"text/plain\",\n    \"vsd\": \"application/vnd.visio\",\n    \"wav\": \"audio/wav\",\n    \"weba\": \"audio/webm\",\n    \"webm\": \"video/webm\",\n    \"webp\": \"image/webp\",\n    \"woff\": \"font/woff\",\n    \"woff2\": \"font/woff2\",\n    \"xhtml\": \"application/xhtml+xml\",\n    \"xls\": \"application/vnd.ms-excel\",\n    \"xlsx\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    \"xml\": \"application/xml\",\n    \"xul\": \"application/vnd.mozilla.xul+xml\",\n    \"zip\": \"application/zip\",\n    \"3gp\": \"video/3gpp\",\n    \"3g2\": \"video/3gpp2\",\n    \"7z\": \"application/x-7z-compressed\"\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar logger = {\n    DEFAULT_LEVEL: 1,\n    LEVEL_NONE: 0,\n    LEVEL_ERROR: 1,\n    LEVEL_WARN: 2,\n    LEVEL_INFO: 3,\n    PREFIX: 'Browser File Storage - '\n};\n\nvar log = function log(level, message, attachedObject) {\n    if (logger._logLevel >= level) {\n        console.log(logger.PREFIX + message, attachedObject);\n    }\n};\n\nvar logLevel = function logLevel(level) {\n    if (typeof level === 'number') {\n        logger._logLevel = level;\n    } else if (typeof level == 'string') {\n        if (level == 'none') {\n            logger._logLevel = logger.LEVEL_NONE;\n        } else if (level == 'error') {\n            logger._logLevel = logger.LEVEL_ERROR;\n        } else if (level == 'warn') {\n            logger._logLevel = logger.LEVEL_WARN;\n        } else if (level == 'info') {\n            logger._logLevel = logger.LEVEL_INFO;\n        }\n    } else {\n        logger._logLevel = logger.DEFAULT_LEVEL;\n    }\n};\n\nlogger._logLevel = logger.DEFAULT_LEVEL;\nlogger.log = log;\nlogger.logLevel = logLevel;\n\nexports.default = logger;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BrowserFile = function () {\n    function BrowserFile(props) {\n        _classCallCheck(this, BrowserFile);\n\n        this.filename = props.filename;\n        this.lastModified = props.lastModified;\n        this.blob = props.blob;\n        this.extension = props.extension;\n        this.size = props.size;\n        this.type = props.type;\n        this.metadata = props.metadata;\n    }\n\n    _createClass(BrowserFile, [{\n        key: '_toIDB',\n        value: function _toIDB() {\n            return {\n                filename: this.filename,\n                lastModified: this.lastModified,\n                blob: this.blob,\n                extension: this.extension,\n                size: this.size,\n                type: this.type,\n                metadata: this.metadata\n            };\n        }\n    }, {\n        key: 'createURL',\n        value: function createURL() {\n            if (this._createdURL) {\n                return this._createdURL;\n            }\n            this._createdURL = URL.createObjectURL(this.blob);\n            return this._createdURL;\n        }\n    }, {\n        key: 'destroyURL',\n        value: function destroyURL() {\n            if (this._createdURL) {\n                URL.revokeObjectURL(this._createdURL);\n                this._createdURL = null;\n            }\n        }\n    }, {\n        key: '_toSomething',\n        value: function _toSomething(mode) {\n            var _this = this;\n\n            return new Promise(function (resolve, reject) {\n                if (FileReader) {\n                    var reader = new FileReader();\n\n                    if (!_this.blob) {\n                        return reject({ supported: true, fileError: true });\n                    }\n\n                    reader.addEventListener('loadend', function (e) {\n                        return resolve(e.srcElement.result);\n                    });\n\n                    reader.addEventListener('error', function (e) {\n                        return reject({ supported: true, readError: true, e: e });\n                    });\n\n                    reader[mode](_this.blob);\n                } else {\n                    return reject({ supported: false });\n                }\n            });\n        }\n    }, {\n        key: 'toString',\n        value: function toString() {\n            return this._toSomething('readAsText');\n        }\n    }, {\n        key: 'toBinaryString',\n        value: function toBinaryString() {\n            return this._toSomething('readAsBinaryString');\n        }\n    }, {\n        key: 'toArrayBuffer',\n        value: function toArrayBuffer() {\n            return this._toSomething('readAsArrayBuffer');\n        }\n    }, {\n        key: 'toDataURL',\n        value: function toDataURL() {\n            return this._toSomething('readAsDataURL');\n        }\n    }]);\n\n    return BrowserFile;\n}();\n\nexports.default = BrowserFile;\n\n/***/ })\n/******/ ]);\n});"],"sourceRoot":""}