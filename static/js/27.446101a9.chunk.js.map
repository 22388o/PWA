{"version":3,"sources":["common/Line/index.tsx","pages/Profile/GoLive/css/GoLive.module.css","images/obs-2.svg","pages/Profile/GoLive/GoLive.tsx"],"names":["Line","color","length","type","width","style","useMemo","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","module","exports","GoLive","dispatch","useDispatch","seedProviderPub","Store","content","seedInfo","seedUrl","seedToken","streamLiveToken","streamUserToken","availableTokens","userProfiles","streamUrl","useState","selectedSource","setSelectedSource","loading","setLoading","streamToken","setStreamToken","setUserToken","paragraph","setParagraph","error","setError","rtmpUri","setRtmpUri","promptInfo","setPromptInfo","starting","setStarting","onSubmitCb","useCallback","servicePrice","serviceID","a","RequestToken","finalSeedUrl","tokens","latestUserToken","Http","post","token","streamData","data","obsToken","console","log","liveToken","streamPlaybackUrl","rtmp","replace","stUrl","contentItems","push","text","magnetURI","isPreview","isPrivate","userToken","liveStatus","statusUrl","tags","title","res","status","postId","newPost","Object","entries","find","contentId","addStream","streamPostId","streamContentId","streamStatusUrl","errorMessage","message","closePrompt","submitPrompt","onSubmit","e","preventDefault","availableToken","key","prototype","hasOwnProperty","call","SeedServiceProvided","get","service","copyToken","navigator","clipboard","writeText","copyUri","onInputChange","target","value","name","stopStream","removeStream","btnClass","c","gStyles","styles","DarkPage","pageTitle","scrolls","className","onClick","bind","Pad","amt","alt","src","obsLogo","border","padding","display","justifyContent","marginBottom","substring","id","onChange","disabled","Modal","modalOpen","toggleModal","contentStyle","Loader","overlay","fullScreen"],"mappings":"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","file":"static/js/27.446101a9.chunk.js","sourcesContent":["import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stream-type-btn\":\"GoLive_stream-type-btn__3sNtJ\",\"stream-type-btn-icon\":\"GoLive_stream-type-btn-icon__2p9-P\",\"obs-logo\":\"GoLive_obs-logo__1p3Hh\"};","export default __webpack_public_path__ + \"static/media/obs-2.7c61e78e.svg\";","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport c from \"classnames\";\n\nimport \"../css/index.scoped.css\";\nimport { addStream, removeStream } from \"../../../actions/ContentActions\";\nimport Loader from \"../../../common/Loader\";\nimport Http from \"../../../utils/Http\";\nimport obsLogo from \"../../../images/obs-2.svg\";\nimport Stream from \"../../../common/Post/components/Stream\";\nimport { RequestToken } from \"../../../utils/seed\";\nimport { useHistory } from \"react-router\";\nimport Modal from \"../../../common/Modal\";\nimport * as Store from \"../../../store\";\nimport DarkPage from \"../../../common/DarkPage\";\nimport * as gStyles from \"../../../styles\";\nimport Line from \"../../../common/Line\";\nimport Pad from \"../../../common/Pad\";\n\nimport Static from \"./components/Static\";\nimport CamFeed from \"./components/CamFeed\";\nimport styles from \"./css/GoLive.module.css\";\n\nconst GoLive = () => {\n  const dispatch = useDispatch();\n  const seedProviderPub = Store.useSelector(\n    ({ content }) => content.seedProviderPub\n  );\n  const { seedUrl, seedToken } = Store.useSelector(\n    ({ content }) => content.seedInfo\n  );\n  const streamLiveToken = Store.useSelector(\n    ({ content }) => content.streamLiveToken\n  );\n  const streamUserToken = Store.useSelector(\n    ({ content }) => content.streamUserToken\n  );\n  const availableTokens = Store.useSelector(\n    ({ content }) => content.availableTokens\n  );\n  const streamUrl = Store.useSelector(({ content }) => content.streamUrl);\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const [selectedSource, setSelectedSource] = useState<\"camera\" | \"obs\">(\"obs\");\n  const [loading, setLoading] = useState(false);\n  const [streamToken, setStreamToken] = useState(streamLiveToken);\n  const [, setUserToken] = useState(streamUserToken);\n  const [paragraph, setParagraph] = useState(\"Look I'm streaming!\");\n  \n  const [error, setError] = useState<string | null>(null);\n  const [rtmpUri, setRtmpUri] = useState(\"\");\n  const [promptInfo, setPromptInfo] = useState(null);\n  const [starting, setStarting] = useState(false);\n  \n  \n  const onSubmitCb = useCallback(\n    async (servicePrice?, serviceID?) => {\n      try {\n        setLoading(true);\n        const { seedUrl: finalSeedUrl, tokens } = await RequestToken({\n          availableTokens,\n          seedProviderPub,\n          seedToken,\n          seedUrl,\n          serviceID,\n          servicePrice\n        });\n        const [latestUserToken] = tokens;\n        setUserToken(latestUserToken);\n        const { data: streamData } = await Http.post(\n          `${finalSeedUrl}/api/stream/auth`,\n          {\n            token: latestUserToken\n          }\n        );\n        const { token: obsToken } = streamData.data;\n        console.log(obsToken);\n        const liveToken = `${latestUserToken}?key=${obsToken}`;\n        setStreamToken(`${latestUserToken}?key=${obsToken}`);\n        const streamPlaybackUrl = `${finalSeedUrl}/rtmpapi/live/${latestUserToken}/index.m3u8`;\n        const rtmp = finalSeedUrl.replace(\"https\", \"rtmp\");\n        setRtmpUri(`${rtmp}/live`);\n        const stUrl = `${finalSeedUrl}/rtmpapi/api/streams/live/${latestUserToken}`\n        let contentItems = [];\n        if (paragraph !== \"\") {\n          contentItems.push({\n            type: \"text/paragraph\",\n            text: paragraph\n          });\n        }\n        contentItems.push({\n          type: \"stream/embedded\",\n          width: 0,\n          height: 0,\n          magnetURI: streamPlaybackUrl,\n          isPreview: false,\n          isPrivate: false,\n          userToken: latestUserToken,\n          liveStatus:'waiting',\n          statusUrl: stUrl\n        });\n        \n        const res = await Http.post(`/api/gun/wall`, {\n          tags: [],\n          title: \"Post\",\n          contentItems\n        });\n        if (res.status === 200) {\n          const {data} = res\n          const [postId,newPost] = data\n          console.log(newPost.contentItems)\n          //@ts-expect-error\n          const [contentId] = Object.entries(newPost.contentItems).find(([_,item]) => item.magnetURI === streamPlaybackUrl)\n          addStream({\n            seedToken:latestUserToken, \n            liveToken, \n            streamUrl:streamPlaybackUrl,\n            streamPostId:postId,\n            streamContentId:contentId,\n            streamStatusUrl:stUrl})(dispatch);\n          await Http.post(`/api/listenStream`,{\n            postId,\n            contentId,\n            statusUrl: `${finalSeedUrl}/rtmpapi/api/streams/live/${latestUserToken}`\n          })\n          console.log(\"post created successfully\");\n          setLoading(false);\n        } else {\n          setError(\"invalid response status\");\n          setLoading(false);\n        }\n      } catch (err) {\n        console.log(err);\n        setError(err?.errorMessage ?? err?.message);\n        setLoading(false);\n      }\n    },\n    [availableTokens, seedProviderPub, seedToken, seedUrl, dispatch, paragraph]\n  );\n  const closePrompt = useCallback(() => {\n    setPromptInfo(null);\n  }, [setPromptInfo]);\n\n  const submitPrompt = useCallback(() => {\n    const { servicePrice, serviceID } = promptInfo;\n    onSubmitCb(servicePrice, serviceID);\n    setPromptInfo(null);\n  }, [promptInfo, onSubmitCb, setPromptInfo]);\n\n  const onSubmit = useCallback(\n    async e => {\n      try {\n        if (starting) {\n          return;\n        }\n        setStarting(true);\n        e.preventDefault();\n        let availableToken = false;\n        for (const key in availableTokens) {\n          if (Object.prototype.hasOwnProperty.call(availableTokens, key)) {\n            const element = availableTokens[key];\n            if (element[0]) {\n              availableToken = true;\n              break;\n            }\n          }\n        }\n        let serviceID = \"\";\n        if (userProfiles[seedProviderPub]) {\n          //@ts-expect-error\n          serviceID = userProfiles[seedProviderPub].SeedServiceProvided;\n        }\n        if (availableToken || (seedUrl && seedToken)) {\n          onSubmitCb();\n        } else if (serviceID && seedProviderPub) {\n          const { data: service } = await Http.get(\n            `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${serviceID}`\n          );\n          const { servicePrice } = service.data;\n          console.log(service);\n          setPromptInfo({ servicePrice, serviceID });\n        } else {\n          setError(\"No way found to publish content\");\n        }\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setStarting(false);\n      }\n    },\n    [\n      starting,\n      userProfiles,\n      seedProviderPub,\n      seedUrl,\n      seedToken,\n      availableTokens,\n      onSubmitCb\n    ]\n  );\n  const copyToken = useCallback(() => {\n    navigator.clipboard.writeText(streamToken);\n  }, [streamToken]);\n  const copyUri = useCallback(() => {\n    navigator.clipboard.writeText(rtmpUri);\n  }, [rtmpUri]);\n  const onInputChange = useCallback(\n    e => {\n      const { value, name } = e.target;\n      switch (name) {\n        case \"paragraph\": {\n          setParagraph(value);\n          return;\n        }\n        case \"source\": {\n          setSelectedSource(value);\n          return;\n        }\n        default:\n          return;\n      }\n    },\n    [setParagraph, setSelectedSource]\n  );\n\n  const stopStream = useCallback(() => {\n    removeStream()(dispatch);\n  }, [dispatch,removeStream]);\n  const btnClass = c(\n    gStyles.col,\n    gStyles.centerJustify,\n    gStyles.centerAlign,\n    styles[\"stream-type-btn\"]\n  );\n\n  return (\n    <>\n      <DarkPage pageTitle=\"GO LIVE\" scrolls>\n        {/*hide for now since it's not implemented and causes a duplication*/ }\n        {/*!isLive && selectedSource === \"camera\" ? <CamFeed /> : <Static /> */}\n\n        <div className={c(gStyles.rowCentered, gStyles.width100)}>\n          <div\n            className={btnClass}\n            onClick={setSelectedSource.bind(null, \"camera\")}\n          >\n            <i\n              className={c(styles[\"stream-type-btn-icon\"], \"fas\", \"fa-camera\")}\n            ></i>\n\n            <Pad amt={16} />\n            <Line\n              color={selectedSource === \"camera\" ? \"#4285b9\" : \"white\"}\n              length={36}\n              type=\"horizontal\"\n              width={2}\n            />\n          </div>\n\n          <div\n            className={btnClass}\n            onClick={setSelectedSource.bind(null, \"obs\")}\n          >\n            <img alt=\"\" className={styles[\"obs-logo\"]} src={obsLogo} />\n\n            <Pad amt={16} />\n            <Line\n              color={selectedSource === \"obs\" ? \"#4285b9\" : \"white\"}\n              length={36}\n              type=\"horizontal\"\n              width={2}\n            />\n          </div>\n        </div>\n\n        <div className={gStyles.commonPaddingH}>\n          {(() => {\n            if (error) {\n              return (\n                <>\n                  <p> An error ocurred: </p>\n\n                  <br />\n\n                  <p className=\"error-container\">{error}</p>\n\n                  <button\n                    className=\"shock-form-button\"\n                    onClick={setError.bind(null, null)}\n                  >\n                    Dismiss\n                  </button>\n                </>\n              );\n            }\n\n            if (streamToken) {\n              return (\n                <>\n                  {selectedSource === \"obs\" && (\n                    <p className=\"m-b-1\">\n                      You are ready to go! setup the stream with OBS and watch\n                      it from your profile\n                    </p>\n                  )}\n\n                  <p>Broadcaster:</p>\n\n                  <div\n                    style={{\n                      border: \"1px solid var(--main-blue)\",\n                      padding: \"0.5rem\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"1rem\"\n                    }}\n                  >\n                    <p>\n                      {rtmpUri.substring(0, 20) +\n                        (rtmpUri.length > 21 ? \"...\" : \"\")}\n                    </p>\n                    <i className=\"far fa-copy\" onClick={copyUri}></i>\n                  </div>\n                  <p>Stream Key:</p>\n                  <div\n                    style={{\n                      border: \"1px solid var(--main-blue)\",\n                      padding: \"0.5rem\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"1rem\"\n                    }}\n                  >\n                    <p>\n                      {streamToken.substring(0, 20) +\n                        (streamToken.length > 21 ? \"...\" : \"\")}\n                    </p>\n                    <i className=\"far fa-copy\" onClick={copyToken}></i>\n                  </div>\n                  <div className=\"flex-center\">\n                    <button\n                      onClick={stopStream}\n                      className=\"shock-form-button-confirm\"\n                    >\n                      STOP\n                    </button>\n                  </div>\n                </>\n              );\n            }\n\n            return (\n              <>\n                <input\n                  className=\"input-field\"\n                  type=\"text\"\n                  name=\"paragraph\"\n                  id=\"paragraph\"\n                  value={paragraph}\n                  onChange={onInputChange}\n                />\n                <button\n                  onClick={onSubmit}\n                  className={c(gStyles.width100, \"shock-form-button-confirm\")}\n                  disabled={selectedSource === \"camera\" || starting}\n                >\n                  {starting ? \"...\" : \"START NOW\"}\n                </button>\n              </>\n            );\n          })()}\n        </div>\n      </DarkPage>\n\n      {promptInfo && (\n        <Modal\n          modalOpen={promptInfo && !loading}\n          toggleModal={closePrompt}\n          contentStyle={{\n            padding: \"1rem\"\n          }}\n        >\n          <p>\n            The service from the default service provider will cost:{\" \"}\n            <strong>{promptInfo.servicePrice} sats</strong>\n          </p>\n\n          <div className={gStyles.rowCentered}>\n            <button className=\"shock-form-button m-1\" onClick={closePrompt}>\n              Cancel\n            </button>\n            <button\n              className=\"shock-form-button-confirm m-1\"\n              onClick={submitPrompt}\n            >\n              Confirm\n            </button>\n          </div>\n        </Modal>\n      )}\n\n      {loading ? <Loader overlay fullScreen text=\"Creating stream...\" /> : null}\n    </>\n  );\n};\n\nexport default GoLive;\n"],"sourceRoot":""}