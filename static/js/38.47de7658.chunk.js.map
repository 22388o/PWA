{"version":3,"sources":["common/Post/SharedPost.tsx"],"names":["SharedPost","postID","sharerPublicKey","openTipModal","openUnlockModal","openDeleteModal","Utils","openShareModal","dispatch","Store","sharerProfile","sharedPost","originalPost","originalAuthor","deletePost","useCallback","id","shared","React","useEffect","subscribeUserProfile","subSinglePost","subPostContent","useLayoutEffect","Tooltip","rebuild","className","height","publicKey","amt","insideRow","displayName","DateTime","fromMillis","shareDate","toRelative","onClick","text","memo"],"mappings":"2IAAA,gIAwBMA,EAAa,SAAC,GAOI,IANtBC,EAMqB,EANrBA,OACAC,EAKqB,EALrBA,gBACAC,EAIqB,EAJrBA,aACAC,EAGqB,EAHrBA,gBAGqB,IAFrBC,uBAEqB,MAFHC,IAEG,MADrBC,sBACqB,MADJD,IACI,EACfE,EAAWC,gBAEXC,EAAgBD,cAAkBA,aAAiBP,IACnDS,EAAaF,cACjBA,mBAAuBP,EAAiBD,IAEpCW,EAAeH,cACnBA,mBAAuBE,EAAWE,eAAgBZ,IAG9Ca,EAAaC,uBAAY,WAC7BV,EAAgB,CAAEW,GAAIJ,EAAaI,GAAIC,QAAQ,MAC9C,CAACL,EAAcP,IA0BlB,OAxBAa,IAAMC,WACJ,kBAAMX,EAASY,YAAqBT,EAAWE,mBAC/C,CAACL,EAAUG,EAAWE,iBAGxBK,IAAMC,WACJ,kBAAMX,EAASY,YAAqBlB,MACpC,CAACM,EAAUN,IAGbgB,IAAMC,WACJ,kBAAMX,EAASa,YAAcV,EAAWE,eAAgBZ,MACxD,CAACO,EAAUP,EAAQU,EAAWE,iBAGhCK,IAAMC,WACJ,kBAAMX,EAASc,YAAeX,EAAWE,eAAgBZ,MACzD,CAACO,EAAUP,EAAQU,EAAWE,iBAGhCU,2BAAgB,WACdC,IAAQC,YACP,IAGD,sBAAKC,UAAU,mBAAf,+BACE,sBAAKA,UAAU,OAAf,+BACE,sBAAKA,UAAU,OAAf,+BACE,cAAC,IAAD,CAAaC,OAAQ,GAAIC,UAAW1B,EAApC,uBAEA,cAAC,IAAD,CAAK2B,IAAK,GAAIC,WAAS,EAAvB,uBAEA,sBAAKJ,UAAU,UAAf,+BACE,wDAAIhB,QAAJ,IAAIA,OAAJ,EAAIA,EAAeqB,cACnB,6DAEUC,WAASC,WAAWtB,EAAWuB,WAAWC,sBAIvD9B,GACC,mBAAGqB,UAAU,eAAeU,QAAStB,EAArC,0BAIJ,qBAAKY,UAAU,iBAAf,8BACGd,EACC,cAAC,UAAD,CACEI,GAAIJ,EAAaI,GACjBY,UAAWjB,EAAWE,eACtBV,aAAcA,EACdC,gBAAiBA,EACjBG,eAAgBA,EALlB,uBAQA,cAAC,IAAD,CAAQ8B,KAAK,kBAAb,6BAOKC,yBAAKtC","file":"static/js/38.47de7658.chunk.js","sourcesContent":["import React, { memo, useCallback, useLayoutEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport Tooltip from \"react-tooltip\";\n\nimport Post from \".\";\n\nimport * as Store from \"../../store\";\nimport * as Utils from \"../../utils\";\nimport Loader from \"../Loader\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\nimport { subPostContent, subSinglePost } from \"../../actions/FeedActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport \"../Post/css/index.scoped.css\";\n\nexport interface SharedPostProps {\n  postID: string;\n  sharerPublicKey: string;\n  openTipModal?(tipData: any): void;\n  openUnlockModal?(unlockData: any): void;\n  openDeleteModal?(params: { id: string; shared: boolean }): void;\n  openShareModal?(shareData: any): void;\n}\n\nconst SharedPost = ({\n  postID,\n  sharerPublicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = Utils.EMPTY_FN,\n  openShareModal = Utils.EMPTY_FN\n}: SharedPostProps) => {\n  const dispatch = Store.useDispatch();\n\n  const sharerProfile = Store.useSelector(Store.selectUser(sharerPublicKey));\n  const sharedPost = Store.useSelector(\n    Store.selectSharedPost(sharerPublicKey, postID)\n  );\n  const originalPost = Store.useSelector(\n    Store.selectSinglePost(sharedPost.originalAuthor, postID)\n  );\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id: originalPost.id, shared: true });\n  }, [originalPost, openDeleteModal]);\n\n  React.useEffect(\n    () => dispatch(subscribeUserProfile(sharedPost.originalAuthor)),\n    [dispatch, sharedPost.originalAuthor]\n  );\n\n  React.useEffect(\n    () => dispatch(subscribeUserProfile(sharerPublicKey)),\n    [dispatch, sharerPublicKey]\n  );\n\n  React.useEffect(\n    () => dispatch(subSinglePost(sharedPost.originalAuthor, postID)),\n    [dispatch, postID, sharedPost.originalAuthor]\n  );\n\n  React.useEffect(\n    () => dispatch(subPostContent(sharedPost.originalAuthor, postID)),\n    [dispatch, postID, sharedPost.originalAuthor]\n  );\n\n  useLayoutEffect(() => {\n    Tooltip.rebuild();\n  }, []);\n\n  return (\n    <div className=\"post shared-post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={sharerPublicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <p>{sharerProfile?.displayName}</p>\n            <p>\n              {/* @ts-ignore */}\n              Shared {DateTime.fromMillis(sharedPost.shareDate).toRelative()}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"shared-content\">\n        {originalPost ? (\n          <Post\n            id={originalPost.id}\n            publicKey={sharedPost.originalAuthor}\n            openTipModal={openTipModal}\n            openUnlockModal={openUnlockModal}\n            openShareModal={openShareModal}\n          />\n        ) : (\n          <Loader text=\"Loading Post...\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SharedPost);\n"],"sourceRoot":""}