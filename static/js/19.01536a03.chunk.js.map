{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/BottomBar/index.js","common/Line/index.tsx","common/AddBtn/index.js","common/ProfileDivider/index.tsx","common/ProfileDivider/css/ProfileDivider.module.css","images/clipboard.svg","images/qrcode.svg","common/ContentHostInput/components/ContentHostInputView.module.css","common/ContentHostInput/components/Host.module.css","common/ContentHostInput/components/Host.tsx","common/ContentHostInput/components/ContentHostInputView.tsx","common/ContentHostInput/index.ts","common/ContentHostInput/ContentHostInput.tsx","images/logo-alone.png","pages/Profile/index.tsx"],"names":["ModalContent","children","style","contentClass","className","classNames","ModalTitle","title","toggleModal","Utils","forceRenderTitleBar","hideXBtn","onClick","OVERLAY_STYLE","borderRadius","Modal","modalOpen","modalTitle","contentStyle","disableBackdropClose","noFullWidth","blueBtn","disableBlueBtn","onClickBlueBtn","redBtn","disableRedBtn","onClickRedBtn","error","textIfLoading","closeModal","useCallback","handleBackdropClick","modal","open","container","Loader","overlay","text","disabled","BottomBar","to","activeClassName","Line","color","length","type","width","useMemo","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","AddBtn","label","icon","iconURL","undefined","nestedMode","large","small","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","src","alt","labelElement","ProfileDivider","onChange","selected","showContentBtn","gStyles","styles","unselected","module","exports","Host","hostError","isBeingAddedOrDeleted","isDefault","onClickRemove","onClickWarning","price","publicKey","URI","user","Store","isConfirmingRemoval","setIsConfirmingRemoval","toggleConfirmingRemoval","confirming","handleClickOnWarning","handleRemovalConfirmation","malformedHost","JSON","stringify","pill","ShockAvatar","toLowerCase","displayName","Common","fontSize","yellow","blue","ContentHostInputView","unorderedHosts","hosts","onAddHost","onRemoveHost","onRetryHost","publicKeyOrServerURI","URIHostAwaitingForToken","setPublicKeyOrServerURIData","hostForErrorDialog","setHostForErrorDialog","setOpen","input","useRef","isPasting","setIsPasting","token","setToken","tokenInput","isPastingToken","setIsPastingToken","sortedHosts","slice","sort","a","b","dateAdded","defaultHosts","filter","h","nonDefaultHosts","handleFocus","onClickPaste","navigator","clipboard","readText","then","txt","produce","data","catch","e","alert","message","finally","current","focus","document","execCommand","blur","onClickAdd","url","handleTokenPaste","handleTokenAdd","handleHostRemoval","publicKeyOrURI","closeErrorDialog","handleRemovalOfHostWithError","handleHostRetry","target","value","onKeyUp","key","keyCode","autoCapitalize","autoCorrect","placeholder","ref","onFocus","map","host","find","ContentHostInput","dispatch","useDispatch","seedProviderPub","content","userProfiles","seedInfo","seedUrl","seedToken","setHosts","providerProfile","setProviderProfile","providedService","setProvidedService","priceToUpdate","setPriceToUpdate","providerError","setProviderError","useEffect","provProfile","avatar","offerSeedService","toSet","push","Date","now","Http","get","service","servicePrice","tmpHosts","providerIndex","findIndex","err","addHost","startsWith","setSeedInfo","setSeedProviderPub","removeHost","subscribeUserProfile","filteredHosts","Post","React","lazy","SharedPost","AVAILABLE_WEB_CLIENT_PREFIXES","QR_IMAGE_SETTINGS","logoAlone","excavate","ProfilePage","profileModalOpen","setProfileModalOpen","deletePostModalData","setDeletePostModalData","deletePostModalLoading","setDeletePostModalLoading","node","posts","hostIP","myServices","orders","selectedView","setSelectedView","useSelector","console","log","subscription","subscribeMyServices","rifleCleanup","subscribeUserPosts","subSharedPosts","profileConfigModalOpen","setProfileConfigModalOpen","currWebClientPrefix","webClientPrefix","newWebClientPrefix","setNewWebClientPrefix","copyWebClientUrlToClipboard","writeText","placeholderEl","querySelector","display","select","subscribeClientPrefix","debug","socket","rifle","query","onData","webClientPrefixReceived","setWebclientPrefix","onError","errorMessage","handleViewChange","view","somethingInsideConfigModalChanged","toggleConfigModal","onConfigSubmit","post","path","headerImageFileInput","settingHeader","setSettingHeader","onSelectedHeaderFile","preventDefault","files","file","imageObtained","base64","onPressHeader","click","toggleDeleteModal","deleteData","closeDeleteModal","deletePost","id","shared","deleteUserPost","authorId","copyClipboard","dnModalOpen","setDnModalOpen","newDisplayName","setNewDisplayName","newDnIfBeingSaved","setNewDnIfBeingSaved","saveNewDisplayName","toBeSaved","put","toggleDnModal","handleOkDnChange","dnModalStyle","padding","bio","bioModalOpen","setBioModalOpen","newBio","setNewBio","newBioIfBeingSaved","setNewBioIfBeingSaved","saveNewBio","toggleBioModal","handleOkBioChange","bioModalStyle","c","header","setsAvatar","greyBorder","disableOnlineRing","backgroundColor","flexDirection","justifyContent","alignItems","fontWeight","fallback","postID","originalPostID","sharerPublicKey","sharedBy","openTipModal","openUnlockModal","openDeleteModal","openShareModal","shareID","Object","entries","serviceType","serviceTitle","serviceDescription","serviceCondition","deleteService","renderServices","Pad","amt","bgColor","fgColor","size","imageSettings","readOnly","ClipboardIcon","htmlFor","name","prefix","QRCodeIcon","hidden","accept"],"mappings":"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","file":"static/js/19.01536a03.chunk.js","sourcesContent":["import classNames from \"classnames\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children = null, style = {}, contentClass = \"\" }) => (\n  <div className={classNames(\"content\", contentClass)} style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import * as Utils from \"../../../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({\n  title = \"\",\n  toggleModal = Utils.EMPTY_FN,\n  forceRenderTitleBar = false,\n  hideXBtn = false\n}) =>\n  title || forceRenderTitleBar ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      {!hideXBtn && (\n        <div className=\"head-close\" onClick={toggleModal}>\n          <i className=\"fas fa-times\"></i>\n        </div>\n      )}\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","import { useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\nimport Loader from \"../../common/Loader\";\n\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\n\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = Utils.EMPTY_OBJ,\n  disableBackdropClose = false,\n  forceRenderTitleBar = false,\n  hideXBtn = false,\n  noFullWidth = false,\n  blueBtn = \"\",\n  disableBlueBtn = false,\n  onClickBlueBtn = Utils.EMPTY_FN,\n  redBtn = \"\",\n  disableRedBtn = false,\n  onClickRedBtn = Utils.EMPTY_FN,\n  contentClass = \"\",\n  error = \"\",\n  textIfLoading = \"\"\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  const handleBackdropClick = useCallback(() => {\n    if (!disableBackdropClose) {\n      toggleModal();\n    }\n  }, [disableBackdropClose, toggleModal]);\n  return (\n    <div className={classNames({ modal: true, open: modalOpen })}>\n      <div className=\"backdrop\" onClick={handleBackdropClick} />\n      <div\n        className={classNames({\n          container: true,\n          \"container-no-full-width\": noFullWidth\n        })}\n      >\n        {textIfLoading && (\n          <Loader overlay style={OVERLAY_STYLE} text={textIfLoading} />\n        )}\n\n        <ModalTitle\n          title={modalTitle}\n          toggleModal={closeModal}\n          forceRenderTitleBar={forceRenderTitleBar}\n          hideXBtn={hideXBtn}\n        />\n\n        {error && <div className={\"form-error form-error-margin\"}>{error}</div>}\n\n        <ModalContent style={contentStyle} contentClass={contentClass}>\n          {typeof children === \"string\" ? (\n            <p className=\"text-align-center\">{children}</p>\n          ) : (\n            children\n          )}\n        </ModalContent>\n\n        <div className=\"color-buttons\">\n          {blueBtn && (\n            <button\n              disabled={disableBlueBtn}\n              className={classNames(\"color-btn\", \"blue-btn\")}\n              onClick={onClickBlueBtn}\n            >\n              {blueBtn}\n            </button>\n          )}\n\n          {redBtn && (\n            <button\n              disabled={disableRedBtn}\n              className={classNames(\"color-btn\", \"red-btn\")}\n              onClick={onClickRedBtn}\n            >\n              {redBtn}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst OVERLAY_STYLE = {\n  borderRadius: \"15px\"\n};\n\nexport default Modal;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import classNames from \"classnames\";\n\nimport * as gStyles from \"../../styles\";\nimport Line from \"../Line\";\n\nimport styles from \"./css/ProfileDivider.module.css\";\n\nexport interface ProfileDividerProps {\n  onChange(newlySelected: \"posts\" | \"services\" | \"content\"): void;\n  selected: \"posts\" | \"services\" | \"content\";\n  showContentBtn?: boolean;\n}\n\nconst ProfileDivider = ({\n  onChange,\n  selected,\n  showContentBtn\n}: ProfileDividerProps) => {\n  return (\n    <div\n      className={classNames(\n        gStyles.width100,\n        gStyles.rowCentered,\n        gStyles.spaceAround,\n        gStyles.padding12,\n        styles.container\n      )}\n    >\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"posts\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"posts\");\n        }}\n      >\n        Posts\n      </span>\n\n      <div\n        className={classNames(\n          gStyles.absolute,\n          showContentBtn && styles[\"left-line\"]\n        )}\n      >\n        <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n      </div>\n\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"services\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"services\");\n        }}\n      >\n        Services\n      </span>\n\n      {showContentBtn && (\n        <>\n          <div className={classNames(gStyles.absolute, styles[\"right-line\"])}>\n            <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n          </div>\n\n          <span\n            className={classNames(\n              gStyles.unselectable,\n              selected === \"content\" ? styles.selected : styles.unselected\n            )}\n            onClick={() => {\n              onChange(\"content\");\n            }}\n          >\n            Content\n          </span>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileDivider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileDivider_container__3ob9k\",\"selected\":\"ProfileDivider_selected__3U98y\",\"unselected\":\"ProfileDivider_unselected__1Z_qd\",\"left-line\":\"ProfileDivider_left-line__2xjlN\",\"right-line\":\"ProfileDivider_right-line__1d2KH\"};","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentHostInputView_container__1CVAn\",\"uri-or-token-input\":\"ContentHostInputView_uri-or-token-input__3vg5h\",\"plus-or-paste-btn\":\"ContentHostInputView_plus-or-paste-btn__3z_k0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container-base\":\"Host_container-base__r5EJP\",\"remove-or-cancel\":\"Host_remove-or-cancel__2sHhe Host_container-base__r5EJP\",\"container\":\"Host_container__2hPww Host_container-base__r5EJP\",\"pill\":\"Host_pill__1WzlY\",\"display-name-or-uri\":\"Host_display-name-or-uri__2eaUy\",\"price-and-status\":\"Host_price-and-status__3Q4n3\",\"price\":\"Host_price__2oEgL\",\"red\":\"Host_red__1kS00\",\"yellow\":\"Host_yellow__3DLEG\",\"blue\":\"Host_blue__3m2Kb\"};","import { useCallback, useState } from \"react\";\nimport * as Common from \"shock-common\";\nimport classNames from \"classnames\";\n\nimport ShockAvatar from \"../../ShockAvatar\";\nimport * as gStyles from \"../../../styles\";\nimport * as Store from \"../../../store\";\n\nimport styles from \"./Host.module.css\";\n\nexport interface IHost {\n  /**\n   * Can be empty if publicKey is provided.\n   */\n  URI: string | null;\n  /**\n   * Unix timestamp.\n   */\n  dateAdded: number;\n  /**\n   * An empty string means no error. If there's an error adding the host,\n   * instead of making it disappear, have it show up with a warning the user can\n   * interact with, after the user clicks on it the actual error message will\n   * show up in a dialog.\n   */\n  error: string;\n  /**\n   * The host will be rendered with an indication that it is being added as\n   * opposed to being added already.\n   */\n  isBeingAddedOrDeleted: boolean;\n  /**\n   * Will render a check mark.\n   */\n  isDefault: boolean;\n  /**\n   * In sats.\n   */\n  price: number;\n  /**\n   * Can be empty if URI is provided.\n   */\n  publicKey: string | null;\n  /**\n   * Token for the service.\n   */\n  token: string;\n}\n\nexport interface HostProps extends IHost {\n  onClickRemove(publicKeyOrURI: string): void;\n  /**\n   * Called when clicking on the warning icon on a host with an error set.\n   */\n  onClickWarning(publicKeyOrURI: string): void;\n}\n\nconst Host = ({\n  error: hostError,\n  isBeingAddedOrDeleted,\n  isDefault,\n  onClickRemove,\n  onClickWarning,\n  price,\n  publicKey,\n  URI\n}: HostProps) => {\n  const user = Store.useSelector(Store.selectUser(publicKey));\n  const [isConfirmingRemoval, setIsConfirmingRemoval] = useState<boolean>(\n    false\n  );\n  const toggleConfirmingRemoval = useCallback(() => {\n    setIsConfirmingRemoval(confirming => !confirming);\n  }, []);\n\n  const handleClickOnWarning = useCallback(() => {\n    onClickWarning(publicKey || URI);\n  }, [onClickWarning, publicKey, URI]);\n\n  const handleRemovalConfirmation = useCallback(() => {\n    onClickRemove(publicKey || URI);\n  }, [onClickRemove, publicKey, URI]);\n\n  const malformedHost =\n    (hostError && isBeingAddedOrDeleted) ||\n    (publicKey && URI) ||\n    (!publicKey && !URI);\n\n  let error = hostError;\n\n  if (malformedHost) {\n    error = `Malformed host provided to <Host />, it must have either a public key or an URI (though not both), and it must not have both truthy error and isAdding props at the same time: ${JSON.stringify(\n      malformedHost\n    )}`;\n  }\n\n  if (isConfirmingRemoval) {\n    return (\n      <div\n        className={classNames(\n          gStyles.rowCentered,\n          gStyles.centerJustify,\n          gStyles.width100\n        )}\n      >\n        <button\n          onClick={handleRemovalConfirmation}\n          className={classNames(gStyles.flatBtnFullWidth)}\n        >\n          Remove\n        </button>\n\n        <button\n          onClick={toggleConfirmingRemoval}\n          className={classNames(gStyles.flatBtnFullWidth)}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classNames(\n        gStyles.rowCentered,\n        gStyles.spaceBetween,\n        gStyles.childrenSpaced24,\n        styles.container\n      )}\n    >\n      <div\n        className={classNames(\n          gStyles.rowCentered,\n          gStyles.spaceBetween,\n          gStyles.childrenSpaced8,\n          styles.pill\n        )}\n      >\n        {publicKey ? (\n          <ShockAvatar height={24} publicKey={publicKey} />\n        ) : (\n          <i className={classNames(\"fas fa-globe\")}></i>\n        )}\n\n        <span className={styles[\"display-name-or-uri\"]}>\n          {(URI && URI.toLowerCase()) ||\n            user.displayName ||\n            Common.defaultName(publicKey)}\n        </span>\n\n        {isBeingAddedOrDeleted || error ? (\n          <div />\n        ) : (\n          <span\n            className=\"fas fa-times\"\n            onClick={toggleConfirmingRemoval}\n            style={{\n              fontSize: 12\n            }}\n          />\n        )}\n      </div>\n\n      <div\n        className={classNames(\n          gStyles.flex,\n          gStyles.childrenSpaced24,\n          styles[\"price-and-status\"]\n        )}\n      >\n        <span className={classNames(gStyles.flex, styles.price)}>\n          {price} sats\n        </span>\n\n        {(() => {\n          if (error) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-exclamation-triangle\",\n                  gStyles.fontSize12,\n                  styles.yellow\n                )}\n                onClick={handleClickOnWarning}\n              />\n            );\n          }\n\n          if (isBeingAddedOrDeleted) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-hourglass-half\",\n                  gStyles.fontSize12,\n                  styles.yellow\n                )}\n              />\n            );\n          }\n\n          if (isDefault) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-check\",\n                  gStyles.fontSize12,\n                  styles.blue\n                )}\n              />\n            );\n          }\n\n          return (\n            <i\n              className={classNames(\n                \"fas fa-link\",\n                gStyles.fontSize12,\n                styles.blue\n              )}\n            ></i>\n          );\n        })()}\n      </div>\n    </div>\n  );\n};\n\nexport default Host;\n","import { useCallback, useMemo, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport produce from \"immer\";\n\nimport * as gStyles from \"../../../styles\";\nimport Modal from \"../../Modal\";\nimport * as Utils from \"../../../utils\";\n\nimport styles from \"./ContentHostInputView.module.css\";\nimport Host, { IHost as _IHost } from \"./Host\";\n\nexport type IHost = _IHost;\n\nexport interface ContentHostInputViewProps {\n  hosts: IHost[];\n  /**\n   * A token will be provided if the content host being added is a URI, the\n   * token will be required from the user before calling this callback.\n   */\n  onAddHost(publicKeyOrServerURI: string, token?: string): void;\n  onRemoveHost(publicKeyOrServerURI: string): void;\n  /**\n   * If a host has an error set, the user will be offered to retry adding it.\n   */\n  onRetryHost(publicKeyOrServerURI: string): void;\n}\n\nconst ContentHostInputView = ({\n  hosts: unorderedHosts,\n  onAddHost,\n  onRemoveHost,\n  onRetryHost\n}: ContentHostInputViewProps) => {\n  type PublicKeyOrServerURIData = {\n    publicKeyOrServerURI: string;\n    URIHostAwaitingForToken: string;\n  };\n  const [\n    { publicKeyOrServerURI, URIHostAwaitingForToken },\n    setPublicKeyOrServerURIData\n  ] = useState<PublicKeyOrServerURIData>({\n    publicKeyOrServerURI: \"\",\n    URIHostAwaitingForToken: \"\"\n  });\n  const [hostForErrorDialog, setHostForErrorDialog] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const input = useRef<HTMLInputElement>(null);\n  const [isPasting, setIsPasting] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const tokenInput = useRef<HTMLInputElement>(null);\n  const [isPastingToken, setIsPastingToken] = useState(false);\n\n  const sortedHosts = useMemo(\n    () =>\n      unorderedHosts.slice().sort((a, b) => {\n        return b.dateAdded - a.dateAdded;\n      }),\n    [unorderedHosts]\n  );\n\n  const defaultHosts = useMemo(() => sortedHosts.filter(h => h.isDefault), [\n    sortedHosts\n  ]);\n\n  const nonDefaultHosts = useMemo(() => sortedHosts.filter(h => !h.isDefault), [\n    sortedHosts\n  ]);\n\n  const hosts = useMemo(() => [...defaultHosts, ...nonDefaultHosts], [\n    defaultHosts,\n    nonDefaultHosts\n  ]);\n\n  const handleFocus = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const onClickPaste = useCallback(() => {\n    if (isPasting) {\n      return;\n    }\n\n    if (navigator.clipboard) {\n      setIsPasting(true);\n      navigator.clipboard\n        .readText()\n        .then(txt => {\n          setPublicKeyOrServerURIData(\n            produce((data: PublicKeyOrServerURIData) => {\n              data.publicKeyOrServerURI = txt;\n            })\n          );\n        })\n        .catch(e => {\n          alert(`Could not paste: ${e.message}`);\n        })\n        .finally(() => {\n          setIsPasting(false);\n        });\n    } else {\n      if (input.current) {\n        input.current.focus();\n        document.execCommand(\"paste\");\n        input.current.blur();\n      }\n    }\n  }, [isPasting, setIsPasting]);\n\n  const onClickAdd = useCallback(() => {\n    setPublicKeyOrServerURIData(\n      produce((data: PublicKeyOrServerURIData) => {\n        const url = Utils.normalizeURL(data.publicKeyOrServerURI);\n\n        if (url) {\n          data.publicKeyOrServerURI = url;\n          data.URIHostAwaitingForToken = url;\n        }\n      })\n    );\n\n    const url = Utils.normalizeURL(publicKeyOrServerURI);\n\n    if (!url) {\n      onAddHost(publicKeyOrServerURI);\n    }\n  }, [setPublicKeyOrServerURIData, publicKeyOrServerURI, onAddHost]);\n\n  const handleTokenPaste = useCallback(() => {\n    if (isPastingToken) {\n      return;\n    }\n\n    if (navigator.clipboard) {\n      setIsPastingToken(true);\n      navigator.clipboard\n        .readText()\n        .then(txt => {\n          setToken(txt);\n        })\n        .catch(e => {\n          alert(`Could not paste: ${e.message}`);\n        })\n        .finally(() => {\n          setIsPastingToken(false);\n        });\n    } else {\n      if (tokenInput.current) {\n        tokenInput.current.focus();\n        document.execCommand(\"paste\");\n        tokenInput.current.blur();\n      }\n    }\n  }, [isPastingToken, setIsPastingToken, setToken]);\n\n  const handleTokenAdd = useCallback(() => {\n    setPublicKeyOrServerURIData(\n      produce((data: PublicKeyOrServerURIData) => {\n        data.publicKeyOrServerURI = \"\";\n        data.URIHostAwaitingForToken = \"\";\n      })\n    );\n\n    onAddHost(publicKeyOrServerURI, token);\n  }, [setPublicKeyOrServerURIData, onAddHost, publicKeyOrServerURI, token]);\n\n  const handleHostRemoval = useCallback(\n    (publicKeyOrURI: string) => {\n      onRemoveHost(publicKeyOrURI);\n    },\n    [onRemoveHost]\n  );\n\n  const closeErrorDialog = useCallback(() => {\n    setHostForErrorDialog(\"\");\n  }, [setHostForErrorDialog]);\n\n  const handleRemovalOfHostWithError = useCallback(() => {\n    onRemoveHost(hostForErrorDialog);\n    closeErrorDialog();\n  }, [onRemoveHost, hostForErrorDialog, closeErrorDialog]);\n\n  const handleHostRetry = useCallback(() => {\n    onRetryHost(hostForErrorDialog);\n    setHostForErrorDialog(\"\");\n  }, [onRetryHost, hostForErrorDialog, setHostForErrorDialog]);\n\n  return (\n    <>\n      <div\n        className={classNames(gStyles.col, gStyles.width100, styles.container)}\n      >\n        <div className={(gStyles.row, gStyles.centerJustify)}>\n          {/* https://stackoverflow.com/a/15314433 */}\n          <input\n            className={classNames(\"input-field\", styles[\"uri-or-token-input\"])}\n            onChange={e => {\n              setPublicKeyOrServerURIData(\n                produce((data: PublicKeyOrServerURIData) => {\n                  data.publicKeyOrServerURI = e.target.value;\n                  data.URIHostAwaitingForToken = \"\";\n                })\n              );\n\n              setToken(\"\");\n            }}\n            type=\"text\"\n            value={publicKeyOrServerURI}\n            onKeyUp={e => {\n              if (e.key === \"Enter\" || e.keyCode === 13) {\n                onClickAdd();\n              }\n            }}\n            autoCapitalize=\"off\"\n            autoCorrect=\"none\"\n            placeholder=\"Provider Pubkey or Server URI (include https or http)\"\n            ref={input}\n            onFocus={handleFocus}\n          />\n\n          {publicKeyOrServerURI.length === 0 && (\n            <button\n              className={classNames(\n                gStyles.flatBtn,\n                styles[\"plus-or-paste-btn\"]\n              )}\n              disabled={isPasting}\n              onClick={onClickPaste}\n            >\n              <i className=\"fas fa-paste\"></i>\n            </button>\n          )}\n\n          {publicKeyOrServerURI.length > 0 &&\n            publicKeyOrServerURI !== URIHostAwaitingForToken && (\n              <button\n                className={classNames(\n                  gStyles.flatBtn,\n                  styles[\"plus-or-paste-btn\"]\n                )}\n                disabled={publicKeyOrServerURI.length === 0}\n                onClick={onClickAdd}\n              >\n                +\n              </button>\n            )}\n        </div>\n\n        {publicKeyOrServerURI.length > 0 &&\n          publicKeyOrServerURI === URIHostAwaitingForToken && (\n            <div className={(gStyles.row, gStyles.centerJustify)}>\n              <input\n                className={classNames(\n                  \"input-field\",\n                  styles[\"uri-or-token-input\"]\n                )}\n                onChange={e => {\n                  setToken(e.target.value);\n                }}\n                type=\"text\"\n                value={token}\n                onKeyUp={e => {\n                  if (e.key === \"Enter\" || e.keyCode === 13) {\n                    handleTokenAdd();\n                  }\n                }}\n                autoCapitalize=\"off\"\n                autoCorrect=\"none\"\n                placeholder=\"Token (required)\"\n                ref={tokenInput}\n              />\n\n              {token.length === 0 && (\n                <button\n                  className={classNames(\n                    gStyles.flatBtn,\n                    styles[\"plus-or-paste-btn\"]\n                  )}\n                  disabled={isPastingToken}\n                  onClick={handleTokenPaste}\n                >\n                  <i className=\"fas fa-paste\"></i>\n                </button>\n              )}\n\n              {token.length > 0 && (\n                <button\n                  className={classNames(\n                    gStyles.flatBtn,\n                    styles[\"plus-or-paste-btn\"]\n                  )}\n                  disabled={token.length === 0}\n                  onClick={handleTokenAdd}\n                >\n                  +\n                </button>\n              )}\n            </div>\n          )}\n\n        <div className={classNames(gStyles.col)}>\n          {(open ? hosts : defaultHosts).map(host => (\n            <Host\n              URI={host.URI}\n              dateAdded={0}\n              error={host.error}\n              isBeingAddedOrDeleted={host.isBeingAddedOrDeleted}\n              isDefault={host.isDefault}\n              key={host.publicKey || host.URI}\n              onClickRemove={handleHostRemoval}\n              onClickWarning={setHostForErrorDialog}\n              price={host.price}\n              publicKey={host.publicKey}\n              token={host.token}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* TODO: change to global modal */}\n      <Modal\n        modalOpen={!!hostForErrorDialog}\n        forceRenderTitleBar\n        toggleModal={closeErrorDialog}\n        blueBtn=\"Retry\"\n        onClickBlueBtn={handleHostRetry}\n        redBtn=\"Remove\"\n        onClickRedBtn={handleRemovalOfHostWithError}\n        noFullWidth\n        contentClass=\"p-1\"\n        hideXBtn\n      >\n        <p className=\"text-align-center\">\n          {\n            hosts.find(\n              h =>\n                h.publicKey === hostForErrorDialog ||\n                h.URI === hostForErrorDialog\n            )?.error\n          }\n        </p>\n      </Modal>\n    </>\n  );\n};\n\nexport default ContentHostInputView;\n","import ContentHostInput from \"./ContentHostInput\";\n\nexport default ContentHostInput;\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as Store from \"../../store\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\n\nimport ContentHostInputView, { IHost } from \"./components/ContentHostInputView\";\nimport { Http } from \"../../utils\";\nimport { setSeedInfo, setSeedProviderPub } from \"../../actions/ContentActions\";\nimport * as Utils from \"../../utils\";\n\nconst ContentHostInput = () => {\n  const dispatch = useDispatch();\n  const seedProviderPub = Store.useSelector(\n    ({ content }) => content.seedProviderPub\n  );\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const { seedUrl, seedToken } = Store.useSelector(\n    ({ content }) => content.seedInfo\n  );\n  const [hosts, setHosts] = useState<IHost[]>([]);\n  const [providerProfile, setProviderProfile] = useState(null);\n  const [providedService, setProvidedService] = useState(\"\");\n  const [priceToUpdate, setPriceToUpdate] = useState(0);\n  const [providerError, setProviderError] = useState(\"\");\n  //effect for user profile\n  useEffect(() => {\n    const provProfile = userProfiles[seedProviderPub];\n    if (!provProfile) {\n      setProviderProfile(null);\n      return;\n    }\n    if (!providerProfile) {\n      setProviderProfile(provProfile);\n      return;\n    }\n    if (provProfile.avatar !== providerProfile.avatar) {\n      setProviderProfile(provProfile);\n      return;\n    }\n    if (\n      // @ts-expect-error\n      provProfile.offerSeedService !== providerProfile.offerSeedService\n    ) {\n      setProviderProfile(provProfile);\n      return;\n    }\n  }, [userProfiles, seedProviderPub, providerProfile, setProviderProfile]);\n  //effect to check provided service\n  useEffect(() => {\n    if (!providerProfile) {\n      return;\n    }\n    const { offerSeedService } = providerProfile;\n    if (offerSeedService !== providedService) {\n      setProvidedService(offerSeedService);\n    }\n  }, [providerProfile, providedService, setProvidedService]);\n  //effect to populate the hosts\n  useEffect(() => {\n    let toSet: IHost[] = [];\n    if (seedUrl && seedToken) {\n      toSet.push({\n        URI: seedUrl,\n        token: seedToken,\n        price: 0,\n        isBeingAddedOrDeleted: false,\n        dateAdded: Date.now(),\n        isDefault: true,\n        error: null,\n        publicKey: null\n      });\n    }\n    if (seedProviderPub && providerProfile) {\n      toSet.push({\n        dateAdded: Date.now(),\n        isBeingAddedOrDeleted: true,\n        isDefault: true,\n        publicKey: seedProviderPub,\n        price: 0,\n        URI: null,\n        token: null,\n        error: null\n      });\n    }\n    setHosts(toSet);\n  }, [seedUrl, seedToken, seedProviderPub, providerProfile, setHosts]);\n  //effect to fetch provided service\n  useEffect(() => {\n    if (!providedService) {\n      return;\n    }\n    Http.get(\n      `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${providedService}`\n    )\n      .then(({ data }) => {\n        const { data: service } = data;\n        setPriceToUpdate(service.servicePrice);\n      })\n      .catch(e => {\n        setProviderError(e);\n      });\n  }, [providedService, seedProviderPub, setPriceToUpdate, setProviderError]);\n  //effect to update service\n  useEffect(() => {\n    const tmpHosts = [...hosts];\n    const providerIndex = tmpHosts.findIndex(host => !host.URI);\n    if (\n      providerIndex === -1 ||\n      tmpHosts[providerIndex].price === priceToUpdate\n    ) {\n      return;\n    }\n    tmpHosts[providerIndex].isBeingAddedOrDeleted = false;\n    tmpHosts[providerIndex].price = priceToUpdate;\n    setHosts(tmpHosts);\n  }, [priceToUpdate, setPriceToUpdate, hosts, setHosts]);\n  //effect to update error\n  useEffect(() => {\n    //@ts-expect-error\n    const err = providerError.message || providerError;\n    const tmpHosts = [...hosts];\n    const providerIndex = tmpHosts.findIndex(host => !host.URI);\n    if (providerIndex === -1 || err === tmpHosts[providerIndex].error) {\n      return;\n    }\n    tmpHosts[providerIndex].isBeingAddedOrDeleted = false;\n    tmpHosts[providerIndex].error = err;\n    setHosts(tmpHosts);\n  }, [providerError, setProviderError, hosts, setHosts]);\n\n  const addHost = useCallback(\n    (publicKeyOrURI: string, token?: string) => {\n      try {\n        if (publicKeyOrURI.startsWith(\"http\")) {\n          setSeedInfo(publicKeyOrURI, token!)(dispatch);\n        } else {\n          setSeedProviderPub(publicKeyOrURI)(dispatch);\n        }\n      } catch (e) {\n        alert(`Could not add host: ${e.message}`);\n        Utils.logger.error(\"Could not add host: \", e);\n      }\n    },\n    [dispatch]\n  );\n\n  const removeHost = useCallback(\n    (publicKeyOrURI: string) => {\n      try {\n        if (publicKeyOrURI.startsWith(\"http\")) {\n          setSeedInfo(\"\", \"\")(dispatch);\n        } else {\n          setSeedProviderPub(\"\")(dispatch);\n        }\n      } catch (e) {\n        alert(`Could not remove host: ${e.message}`);\n        Utils.logger.error(\"Could not remove host: \", e);\n      }\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    const unsubscribe = (dispatch(\n      subscribeUserProfile(seedProviderPub)\n    ) as unknown) as () => void;\n\n    return unsubscribe;\n  }, [seedProviderPub, dispatch]);\n  const filteredHosts = useMemo(() => {\n    return hosts.filter(h => h);\n  }, [hosts]);\n  return (\n    <ContentHostInputView\n      hosts={filteredHosts}\n      onAddHost={addHost}\n      onRemoveHost={removeHost}\n      onRetryHost={() => {}}\n    />\n  );\n};\n\nexport default ContentHostInput;\n","export default __webpack_public_path__ + \"static/media/logo-alone.512c5854.png\";","import React, {\n  Suspense,\n  useCallback,\n  useMemo,\n  useState,\n  useEffect,\n  useRef,\n  InputHTMLAttributes\n} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport QRCode, { ImageSettings } from \"qrcode.react\";\nimport { Link } from \"react-router-dom\";\nimport c from \"classnames\";\nimport * as Common from \"shock-common\";\n\nimport * as Utils from \"../../utils\";\nimport {\n  deleteService,\n  subscribeMyServices\n} from \"../../actions/OrdersActions\";\nimport * as gStyles from \"../../styles\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ContentHostInput from \"../../common/ContentHostInput\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport logoAlone from \"../../images/logo-alone.png\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport * as Store from \"../../store\";\nimport { rifle, rifleCleanup } from \"../../utils/WebSocket\";\n\nimport \"./css/index.scoped.css\";\nimport {\n  deleteUserPost,\n  subSharedPosts,\n  subscribeUserPosts\n} from \"../../actions/FeedActions\";\nimport { setWebclientPrefix } from \"../../actions/NodeActions\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nexport type WebClientPrefix =\n  | \"https://onlysats.page\"\n  | \"https://shock.pub\"\n  | \"https://lightning.page\"\n  | \"https://shock.page\"\n  | \"https://satoshi.watch\";\n\nconst ProfilePage = () => {\n  const dispatch = Store.useDispatch();\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n  const [deletePostModalData, setDeletePostModalData] = useState(null);\n  const [deletePostModalLoading, setDeletePostModalLoading] = useState(false);\n\n  const publicKey = Store.useSelector(({ node }) => node.publicKey);\n  const posts = Store.useSelector(Store.selectPostsNewestToOldest(publicKey));\n  const hostIP = Store.useSelector(({ node }) => node.hostIP);\n\n  const myServices = Store.useSelector(({ orders }) => orders.myServices);\n  const [selectedView, setSelectedView] = useState<\"posts\" | \"services\">(\n    \"posts\"\n  );\n  const user = useSelector(Store.selectSelfUser);\n\n  useEffect(() => {\n    console.log(user);\n    //@ts-expect-error\n    if (!user.offerSeedService) {\n      return;\n    }\n    //@ts-expect-error\n    const subscription = subscribeMyServices(user.offerSeedService)(dispatch);\n\n    return rifleCleanup(subscription);\n  }, [dispatch, user]);\n\n  useEffect(() => dispatch(subscribeUserPosts(publicKey)), [\n    dispatch,\n    publicKey\n  ]);\n\n  useEffect(() => dispatch(subSharedPosts(publicKey)), [dispatch, publicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  // ------------------------------------------------------------------------ //\n  // CONFIG MODAL\n\n  const [profileConfigModalOpen, setProfileConfigModalOpen] = useState(false);\n  const currWebClientPrefix = Store.useSelector(\n    ({ node }) => node.webClientPrefix\n  );\n  const [newWebClientPrefix, setNewWebClientPrefix] = useState<WebClientPrefix>(\n    currWebClientPrefix\n  );\n\n  const copyWebClientUrlToClipboard = useCallback(() => {\n    // some browsers/platforms don't support navigator.clipboard\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(newWebClientPrefix + \"/\" + publicKey);\n    } else {\n      const placeholderEl = document.querySelector(\n        \"#web-client-url-holder\"\n      ) as HTMLInputElement;\n      placeholderEl.style.display = \"block\";\n      placeholderEl.select();\n      document.execCommand(\"copy\");\n      placeholderEl.blur();\n      placeholderEl.style.display = \"none\";\n    }\n  }, [newWebClientPrefix, publicKey]);\n\n  const subscribeClientPrefix = useCallback(() => {\n    // Extraneous logs but helps us not having eslint complain about these\n    // \"unnecessary\" dependencies below without disabling the\n    console.debug(\n      `Subbing to webclient prefix on hostIP --| ${hostIP} |-- and public key --| ${publicKey} |--`\n    );\n    const query = `$user::Profile>webClientPrefix::on`;\n\n    const socket = rifle({\n      query,\n      onData: (webClientPrefixReceived: unknown) => {\n        if (\n          typeof webClientPrefixReceived === \"string\" &&\n          webClientPrefixReceived !== currWebClientPrefix\n        ) {\n          setWebclientPrefix(webClientPrefixReceived as WebClientPrefix)(\n            dispatch\n          );\n        }\n      },\n      onError: (errorMessage: string) => {\n        console.error(\n          `There was an error fetching web client prefix: ${errorMessage}`\n        );\n      }\n    });\n\n    return rifleCleanup(socket);\n  }, [\n    currWebClientPrefix,\n    dispatch,\n    hostIP,\n    publicKey /* handles alias/hostIP switch */\n  ]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeClientPrefix();\n\n    return unsubscribe;\n  }, [subscribeClientPrefix]);\n\n  const handleViewChange = useCallback((view: \"posts\" | \"services\") => {\n    setSelectedView(view);\n  }, []);\n  //#region configModal ----------------------------------------------------- //\n  const somethingInsideConfigModalChanged =\n    newWebClientPrefix !== currWebClientPrefix;\n\n  const toggleConfigModal = useCallback(() => {\n    setProfileConfigModalOpen(open => !open);\n    setNewWebClientPrefix(currWebClientPrefix);\n  }, [currWebClientPrefix]);\n\n  const onConfigSubmit = useCallback(() => {\n    if (newWebClientPrefix !== currWebClientPrefix) {\n      setWebclientPrefix(newWebClientPrefix)(dispatch);\n      Utils.Http.post(`/api/gun/put`, {\n        path: \"$user>Profile>webClientPrefix\",\n        value: newWebClientPrefix\n      }).catch(e => {\n        alert(\n          `There was an error setting your web client prefix: ${e.message}`\n        );\n      });\n    }\n    toggleConfigModal();\n  }, [newWebClientPrefix, currWebClientPrefix, toggleConfigModal, dispatch]);\n  //#endregion configModal -------------------------------------------------- //\n  //#region header ---------------------------------------------------------- //\n  const headerImageFileInput = useRef<HTMLInputElement>(null);\n  const [settingHeader, setSettingHeader] = useState<boolean>(false);\n\n  const onSelectedHeaderFile: InputHTMLAttributes<{}>[\"onChange\"] = async e => {\n    try {\n      e.preventDefault();\n      if (settingHeader) {\n        return;\n      }\n\n      setSettingHeader(true);\n\n      const { files } = (e.target as unknown) as {\n        files: readonly Utils.File[];\n      };\n\n      if (files.length === 0) {\n        return;\n      }\n\n      if (files.length !== 1) {\n        Utils.logger.error(`Profile -> files.length !== 1`);\n        alert(\n          `An error occurred while trying to set a header. This has been logged.`\n        );\n        return;\n      }\n\n      const [file] = files;\n\n      const imageObtained = await Utils.processImageFile(file, 800, 0.9);\n\n      const DATA_URL_TYPE_PREFIX = \"data:image/jpeg;base64,\";\n      const base64 = imageObtained.slice(DATA_URL_TYPE_PREFIX.length);\n\n      await Utils.Http.post(`/api/gun/put`, {\n        path: \"$user>profileBinary>header\",\n        value: base64\n      });\n    } catch (e) {\n      Utils.logger.error(`Error while trying to load new header.`);\n      Utils.logger.error(e);\n      alert(`There was an error loading the new header: ${e.message}`);\n    } finally {\n      setSettingHeader(false);\n    }\n  };\n\n  const onPressHeader = useCallback(e => {\n    e.preventDefault();\n    const { current } = headerImageFileInput;\n    if (!current) {\n      Utils.logger.error(\"File input element for avatar is falsy.\");\n      alert(\"There was an error and it was logged.\");\n    }\n    current.click();\n  }, []);\n  //#endregion header ------------------------------------------------------- //\n  //#region deleteModal------------------------------------------------------ //\n  const toggleDeleteModal = useCallback(\n    deleteData => {\n      console.log(deleteData);\n      if (deletePostModalData || !deleteData) {\n        setDeletePostModalData(null);\n      }\n      setDeletePostModalData(deleteData);\n    },\n    [deletePostModalData]\n  );\n  const closeDeleteModal = useCallback(() => {\n    setDeletePostModalData(null);\n  }, []);\n\n  const deletePost = useCallback(async () => {\n    try {\n      if (!deletePostModalData || !deletePostModalData.id) {\n        return;\n      }\n      setDeletePostModalLoading(true);\n      console.log(\"deleting:\");\n      console.log(deletePostModalData);\n      const key = deletePostModalData.shared ? \"sharedPosts\" : \"posts\";\n      await Utils.Http.post(\"/api/gun/put\", {\n        path: `$user>${key}>${deletePostModalData.id}`,\n        value: null\n      });\n      dispatch(\n        deleteUserPost({\n          id: deletePostModalData.id,\n          authorId: publicKey\n        })\n      );\n      toggleDeleteModal(null);\n      setDeletePostModalLoading(false);\n    } catch (e) {\n      setDeletePostModalLoading(false);\n      console.log(`Error when deleting post:`);\n      console.log(e);\n      alert(`Could not delete post: ${e.message}`);\n    }\n  }, [\n    deletePostModalData,\n    dispatch,\n    publicKey,\n    toggleDeleteModal,\n    setDeletePostModalLoading\n  ]);\n  const copyClipboard = useCallback(() => {\n    try {\n      // some browsers/platforms don't support navigator.clipboard\n      if (navigator.clipboard) {\n        const text = `${currWebClientPrefix}/${publicKey}`;\n        navigator.clipboard.writeText(text);\n      } else {\n        const placeholderEl = document.querySelector(\n          \"#public-key-holder\"\n        ) as HTMLInputElement;\n        placeholderEl.style.display = \"block\";\n        placeholderEl.select();\n        document.execCommand(\"copy\");\n        placeholderEl.blur();\n        placeholderEl.style.display = \"none\";\n        setProfileModalOpen(false);\n      }\n    } catch (e) {\n      alert(`Could not copy to clipboard: ${e.message}`);\n    }\n  }, [currWebClientPrefix, publicKey]);\n\n  const AVATAR_SIZE = 122;\n\n  const renderPosts = () => {\n    return posts.map(post => {\n      if (Common.isSharedPost(post)) {\n        return (\n          <Suspense fallback={<Loader />} key={post.shareID}>\n            <SharedPost\n              postID={post.originalPostID}\n              sharerPublicKey={post.sharedBy}\n              openTipModal={Utils.EMPTY_FN}\n              openUnlockModal={Utils.EMPTY_FN}\n              openDeleteModal={toggleDeleteModal}\n              openShareModal={null}\n            />\n          </Suspense>\n        );\n      }\n\n      return (\n        <Suspense fallback={<Loader />} key={post.id}>\n          <Post\n            id={post.id}\n            publicKey={post.authorId}\n            openTipModal={Utils.EMPTY_FN}\n            openUnlockModal={Utils.EMPTY_FN}\n            openDeleteModal={toggleDeleteModal}\n            openShareModal={null}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    /*@ts-expect-error*/\n    if (!user.offerSeedService) {\n      return;\n    }\n    return (\n      Object.entries(myServices)\n        /*@ts-expect-error*/\n        .filter(([id, service]) => !!service && user.offerSeedService === id)\n        .map(([id, serv]) => {\n          const service = serv as Record<string, string>;\n          const deleteCB = () => {\n            console.log(\"delete wtf\");\n            deleteService(id)(dispatch);\n          };\n          return (\n            <div className=\"post\" key={id}>\n              <strong>Service ID</strong>\n              <p>{id}</p>\n              <strong>Service Tpe</strong>\n              <p>{service.serviceType || \"\"}</p>\n              <strong>Service Title</strong>\n              <p>{service.serviceTitle || \"\"}</p>\n              <strong>Service Description</strong>\n              <p>{service.serviceDescription || \"\"}</p>\n              <strong>Service Condition</strong>\n              <p>{service.serviceCondition || \"\"}</p>\n              <strong>Service Price</strong>\n              <p>{service.servicePrice || \"\"}</p>\n              <button onClick={deleteCB}>DELETE SERVICE</button>\n            </div>\n          );\n        })\n    );\n  };\n  //#endregion deleteModal------------------------------------------------------ //\n  //#region displayName ----------------------------------------------------- //\n  const [dnModalOpen, setDnModalOpen] = useState(false);\n  const { displayName } = user;\n  // stores the display name input value\n  const [newDisplayName, setNewDisplayName] = useState(\n    user.displayName || \"Anon\"\n  );\n  // stores the new display name while it's being uploaded\n  const [newDnIfBeingSaved, setNewDnIfBeingSaved] = useState<string | null>(\n    null\n  );\n  const saveNewDisplayName = useCallback((toBeSaved: string) => {\n    if (toBeSaved === \"\") {\n      return;\n    }\n    setNewDnIfBeingSaved(toBeSaved); // optimistically render new display name\n    Utils.Http.put(\"/api/gun/me\", {\n      displayName: toBeSaved\n    }).catch(e => {\n      setNewDnIfBeingSaved(null); // reverts to existing display name\n      alert(`There was an error setting a new display name: ${e.message}`);\n    });\n  }, []);\n  useEffect(() => {\n    // set placeholder display name back to null after getting the round trip\n    // from api\n    if (newDnIfBeingSaved === displayName) {\n      console.debug(`Got display name round trip from api.`);\n      setNewDnIfBeingSaved(null);\n    }\n  }, [newDnIfBeingSaved, displayName]);\n  const toggleDnModal = useCallback(() => {\n    setNewDisplayName(displayName);\n    setDnModalOpen(open => !open);\n  }, [displayName]);\n  const handleOkDnChange = useCallback(() => {\n    if (newDisplayName !== displayName) {\n      saveNewDisplayName(newDisplayName);\n    }\n    toggleDnModal();\n  }, [displayName, newDisplayName, saveNewDisplayName, toggleDnModal]);\n  const dnModalStyle = useMemo<React.CSSProperties>(\n    () => ({\n      padding: \"12px 24px\"\n    }),\n    []\n  );\n  const handleNewDisplayNameChange = ({ target: { value } }) => {\n    setNewDisplayName(value);\n  };\n  //#endregion displayName -------------------------------------------------- //\n  //#region bio ------------------------------------------------------------- //\n  const { bio } = user;\n  const [bioModalOpen, setBioModalOpen] = useState(false);\n  // stores the bio input value\n  const [newBio, setNewBio] = useState(bio || \"bio\");\n  // stores the new bio while it's being uploaded\n  const [newBioIfBeingSaved, setNewBioIfBeingSaved] = useState<string | null>(\n    null\n  );\n  const saveNewBio = useCallback((toBeSaved: string) => {\n    if (toBeSaved === \"\") {\n      return;\n    }\n    setNewBioIfBeingSaved(toBeSaved); // optimistically render new bio\n    Utils.Http.put(\"/api/gun/me\", {\n      bio: toBeSaved\n    }).catch(e => {\n      setNewBioIfBeingSaved(null); // reverts to existing bio\n      alert(`There was an error setting a new bio: ${e.message}`);\n    });\n  }, []);\n  useEffect(() => {\n    // set placeholder bio back to null after getting the round trip\n    // from api\n    if (newBioIfBeingSaved === bio) {\n      console.debug(`Got bio round trip from api.`);\n      setNewBioIfBeingSaved(null);\n    }\n  }, [newBioIfBeingSaved, bio]);\n  const toggleBioModal = useCallback(() => {\n    setNewBio(bio);\n    setBioModalOpen(open => !open);\n  }, [bio]);\n  const handleOkBioChange = useCallback(() => {\n    if (newBio !== bio) {\n      saveNewBio(newBio);\n    }\n    toggleBioModal();\n  }, [bio, newBio, saveNewBio, toggleBioModal]);\n  const bioModalStyle = useMemo<React.CSSProperties>(\n    () => ({\n      padding: \"12px 24px\"\n    }),\n    []\n  );\n  const handleNewBioChange = ({ target: { value } }) => {\n    setNewBio(value);\n  };\n  //#endregion bio ---------------------------------------------------------- //\n\n  return (\n    <>\n      <div className=\"page-container profile-page\">\n        <div className=\"profile-container\">\n          <div\n            className={c({\n              \"profile-cover\": true,\n              [gStyles.relative]: true,\n              \"profile-cover-has-cover\": !!user.header\n            })}\n            onClick={onPressHeader}\n          >\n            {user.header && (\n              <img\n                alt=\"User set profile header.\"\n                src={`data:image/jpeg;base64,${user.header}`}\n              />\n            )}\n\n            <i\n              className={c(\n                gStyles.absoluteDeadCenter,\n                \"fas\",\n                \"fa-pencil-alt\",\n                \"cover-pencil\"\n              )}\n            />\n          </div>\n          <div className=\"profile-info-container\">\n            <div\n              className=\"profile-avatar\"\n              style={{\n                height: `${AVATAR_SIZE}px`,\n                width: `${AVATAR_SIZE}px`\n              }}\n            >\n              <ShockAvatar\n                height={AVATAR_SIZE}\n                publicKey={publicKey}\n                setsAvatar\n                greyBorder\n                disableOnlineRing\n              />\n            </div>\n\n            <div className=\"profile-info\">\n              <p\n                className={c(gStyles.unselectable, \"profile-name\")}\n                onClick={toggleDnModal}\n              >\n                {newDnIfBeingSaved || displayName}\n\n                <i className=\"fas fa-pencil-alt pencil-btn\" />\n              </p>\n              <p\n                className={c(gStyles.unselectable, \"profile-desc\")}\n                onClick={toggleBioModal}\n              >\n                {newBioIfBeingSaved || user.bio || \"Lightning.Page user\"}\n\n                <i className=\"fas fa-pencil-alt pencil-btn\" />\n              </p>\n              <div className=\"config-btn\" onClick={toggleConfigModal}>\n                <i className=\"config-btn-icon icon-solid-spending-rule\" />\n                <p className=\"config-btn-text\">Config</p>\n              </div>\n            </div>\n          </div>\n          <div>\n            <Link to={\"/goLive\"} className=\"profile-choice-container\">\n              <div\n                style={{\n                  backgroundColor: \"red\",\n                  color: \"white\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  padding: \"0.2em 0.5em\",\n                  borderRadius: \"0.7em\",\n                  fontSize: \"16px\",\n                  fontWeight: 600\n                }}\n              >\n                <i className=\"fas fa-video\"></i>\n                <p>GO LIVE</p>\n              </div>\n            </Link>\n            <Link to={\"/createPost\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-pen-square\"></i>\n              <p className=\"profile-choice-text\">Create Post</p>\n            </Link>\n            <Link to={\"/publishContent\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fab fa-youtube\"></i>\n              <p className=\"profile-choice-text\">Publish Content</p>\n            </Link>\n            <button className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-shopping-cart\"></i>\n              <p className=\"profile-choice-text\">Offer a Product</p>\n            </button>\n            <Link to={\"/offerService\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-running\"></i>\n              <p className=\"profile-choice-text\">Offer a Service</p>\n            </Link>\n          </div>\n\n          <ProfileDivider onChange={handleViewChange} selected={selectedView} />\n          <div className=\"\">\n            {selectedView === \"posts\" && renderPosts()}\n            {selectedView === \"services\" && renderServices()}\n          </div>\n\n          {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n          <Pad amt={200} />\n\n          <Modal\n            toggleModal={toggleModal}\n            modalOpen={profileModalOpen}\n            contentStyle={{\n              padding: \"40px 30px\"\n            }}\n            noFullWidth\n          >\n            <QRCode\n              bgColor=\"#23282d\"\n              fgColor=\"#64bbff\"\n              value={`${currWebClientPrefix}/${publicKey}`}\n              size={180}\n              className=\"profile-qrcode\"\n              imageSettings={QR_IMAGE_SETTINGS}\n            />\n            <p className=\"profile-qrcode-desc\">\n              Other users can scan this code to contact you\n            </p>\n\n            {!navigator.clipboard && (\n              <input\n                className=\"hidden-input\"\n                id=\"public-key-holder\"\n                readOnly\n                type=\"text\"\n                value={`${currWebClientPrefix}/${publicKey}`}\n              ></input>\n            )}\n            <div\n              className=\"profile-clipboard-container\"\n              onClick={copyClipboard}\n            >\n              <img\n                src={ClipboardIcon}\n                className=\"profile-clipboard-icon\"\n                alt=\"\"\n              />\n              <p className=\"profile-clipboard-text\">Tap to copy to clipboard</p>\n            </div>\n          </Modal>\n\n          <Modal\n            toggleModal={toggleConfigModal}\n            modalOpen={profileConfigModalOpen}\n            contentClass=\"p-2\"\n            forceRenderTitleBar\n            blueBtn={somethingInsideConfigModalChanged && \"Save\"}\n            onClickBlueBtn={onConfigSubmit}\n          >\n            <label htmlFor=\"new-web-client-prefix\">Web Client</label>\n\n            <div className=\"web-client-prefix-picker\">\n              <i\n                className=\"far fa-copy\"\n                onClick={copyWebClientUrlToClipboard}\n                style={{ fontSize: 24 }}\n              />\n\n              <select\n                onChange={e => {\n                  setNewWebClientPrefix(e.target.value as WebClientPrefix);\n                }}\n                name=\"new-web-client-prefix\"\n                id=\"new-web-client-prefix\"\n                value={newWebClientPrefix}\n              >\n                {AVAILABLE_WEB_CLIENT_PREFIXES.map(prefix => (\n                  <option key={prefix} value={prefix}>\n                    {prefix}\n                  </option>\n                ))}\n              </select>\n\n              <span>/</span>\n\n              <span style={{ fontSize: 12 }}>{publicKey}</span>\n            </div>\n\n            {!navigator.clipboard && (\n              <input\n                className=\"hidden-input\"\n                id=\"web-client-url-holder\"\n                readOnly\n                type=\"text\"\n                value={newWebClientPrefix + \"/\" + publicKey}\n              ></input>\n            )}\n\n            <br></br>\n\n            <label htmlFor=\"content-host\">Content Host</label>\n\n            <ContentHostInput />\n          </Modal>\n\n          <Modal\n            toggleModal={toggleDeleteModal}\n            modalOpen={deletePostModalData}\n            contentStyle={{\n              padding: \"2em 2em\"\n            }}\n            blueBtn={!deletePostModalLoading && \"Cancel\"}\n            disableBlueBtn={deletePostModalLoading}\n            onClickBlueBtn={closeDeleteModal}\n            redBtn={!deletePostModalLoading && \"Delete\"}\n            disableRedBtn={deletePostModalLoading}\n            onClickRedBtn={deletePost}\n            noFullWidth\n          >\n            {!deletePostModalLoading && (\n              <span className=\"text-align-center\">Are you sure?</span>\n            )}\n            {deletePostModalLoading && <Loader />}\n          </Modal>\n          <AddBtn\n            onClick={toggleModal}\n            large\n            iconURL={QRCodeIcon}\n            icon={null}\n            label={null}\n          />\n        </div>\n\n        <BottomBar />\n      </div>\n\n      <input\n        type=\"file\"\n        id=\"avatar-file\"\n        ref={headerImageFileInput}\n        hidden\n        accept=\"image/*\"\n        onChange={onSelectedHeaderFile}\n      />\n\n      {\n        //#region displayNameModal\n      }\n\n      <Modal\n        contentStyle={dnModalStyle}\n        modalOpen={dnModalOpen}\n        toggleModal={toggleDnModal}\n        blueBtn=\"Save\"\n        disableBlueBtn={newDisplayName === displayName || newDisplayName === \"\"}\n        onClickBlueBtn={handleOkDnChange}\n        noFullWidth\n        modalTitle=\"NEW DISPLAY NAME\"\n      >\n        <input\n          autoCapitalize=\"none\"\n          autoCorrect=\"off\"\n          type=\"text\"\n          className=\"input-field\"\n          placeholder={\"New display name\"}\n          name=\"newDisplayName\"\n          onChange={handleNewDisplayNameChange}\n          value={newDisplayName}\n        />\n      </Modal>\n\n      {\n        //#endregion displayNameModal\n      }\n\n      {\n        //#region bioModal\n      }\n      <Modal\n        contentStyle={bioModalStyle}\n        modalOpen={bioModalOpen}\n        toggleModal={toggleBioModal}\n        modalTitle=\"NEW BIO\"\n        blueBtn=\"Save\"\n        onClickBlueBtn={handleOkBioChange}\n        disableBlueBtn={newBio === bio || newBio === \"\"}\n        forceRenderTitleBar\n        noFullWidth\n      >\n        <input\n          autoCapitalize=\"none\"\n          autoCorrect=\"off\"\n          type=\"text\"\n          className=\"input-field\"\n          placeholder={\"New bio\"}\n          name=\"newBio\"\n          onChange={handleNewBioChange}\n          value={newBio}\n        />\n      </Modal>\n      {\n        //#endregion bioModal\n      }\n    </>\n  );\n};\n\nconst AVAILABLE_WEB_CLIENT_PREFIXES: readonly WebClientPrefix[] = [\n  \"https://onlysats.page\",\n  \"https://shock.pub\",\n  \"https://lightning.page\",\n  \"https://shock.page\",\n  \"https://satoshi.watch\"\n];\n\nconst QR_IMAGE_SETTINGS: ImageSettings = {\n  src: logoAlone,\n  height: 36,\n  width: 36,\n  excavate: true\n};\n\nexport default ProfilePage;\n"],"sourceRoot":""}