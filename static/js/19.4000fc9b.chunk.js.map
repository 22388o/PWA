{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/MainNav/index.js","common/BottomBar/index.js","common/AddBtn/index.js","utils/Platform.ts","common/QRCodeScanner/index.tsx","pages/Messages/components/common.ts","pages/Messages/components/Message/index.js","pages/Messages/components/Request/index.js","pages/Messages/index.js"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","MainNav","pageTitle","absolute","solid","enableBackButton","onHeight","Utils","dispatch","useDispatch","goBack","window","history","back","open","openDrawer","gunPublicKey","useSelector","node","publicKey","divRefCb","el","getBoundingClientRect","height","e","console","log","ref","BottomBar","to","activeClassName","AddBtn","label","icon","iconURL","undefined","nestedMode","large","small","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","isDesktop","navigator","userAgent","match","modeContents","wizard","target","description","invoice","QRCodeScanner","mode","onScan","onError","onClose","content","videoConstrain","facingMode","exact","constraints","video","AVATAR_CONTAINER_STYLE","AVATAR_SIZE","width","Message","subtitle","lastMessageTimestamp","chatLoaded","Store","user","time","relativeTime","DateTime","fromMillis","toRelative","subscribeMessages","subscription","subscribeChatMessages","rifleCleanup","useEffect","ShockAvatar","displayName","Request","sent","MessagesPage","addModalOpen","setAddModalOpen","sendError","setSendError","sendRequestLoading","setSendRequestLoading","setChatLoaded","contacts","chat","messages","orderedContacts","slice","sort","a","b","lastMsgA","pk","timestamp","sentRequests","receivedRequests","scanQR","setScanQR","loadChat","loadChatData","loadReceivedRequests","loadSentRequests","subscriptions","subChats","subSentRequests","subReceivedRequests","Promise","all","then","subs","forEach","sub","off","map","entry","subscribeUserProfile","unsubscribe","sendRequest","input","shockUser","startsWith","splitted","split","length","FieldError","field","message","test","sendHandshakeRequest","errMsg","error","sendRequestClipboard","clipboard","readText","clipboardText","alert","openQR","closeQR","scanErr","scanDone","text","messagesNode","contact","contactMessages","lastMessage","didDisconnect","body","request","id","Loader","overlay","borderRadius"],"mappings":"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","file":"static/js/19.4000fc9b.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      <div className=\"head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"open\": modalOpen })}>\n      <div className=\"backdrop\" onClick={closeModal} />\n      <div className=\"container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","// @ts-check\nimport { useCallback } from \"react\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as Utils from \"../../utils\";\nimport { openDrawer } from \"../../actions/DrawerActions\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport { useSelector } from \"../../store\";\n\nconst MainNav = ({\n  pageTitle,\n  absolute = false,\n  solid = false,\n  enableBackButton = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const dispatch = useDispatch();\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  const open = useCallback(() => {\n    dispatch(openDrawer());\n  }, [dispatch]);\n\n  const gunPublicKey = useSelector(({ node }) => node.publicKey);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in MainNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className={classNames({\n        \"main-nav-container\": true,\n        \"main-nav-absolute\": absolute,\n        \"main-nav-solid\": solid\n      })}\n      ref={divRefCb}\n    >\n      {enableBackButton ? (\n        <div className=\"main-nav-back\" onClick={goBack}>\n          <i className=\"icon icon-thin-back\"></i>\n        </div>\n      ) : (\n        <ShockAvatar height={40} publicKey={gunPublicKey} />\n      )}\n      <p className=\"main-nav-title unselectable\">{pageTitle}</p>\n      <div className=\"main-nav-menu-btn\" onClick={open}>\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default MainNav;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","export const isMobile = (): boolean =>\n  !!navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n\nexport const isDesktop = (): boolean => (!isMobile() ? true : false);\n","import QRScanner from \"react-qr-scanner\";\nimport { isDesktop } from \"../../utils/Platform\";\nimport \"./css/index.scoped.css\";\n\ntype ScannerMode = \"wizard\" | \"invoice\";\ninterface Props {\n  mode: ScannerMode;\n  onScan: (result: string | null) => void;\n  onError: (error: Error) => void;\n  onClose: () => void;\n}\n\nconst modeContents = {\n  wizard: {\n    title: \"SCAN A\",\n    target: \"QR CODE\",\n    description: \"Point your camera at a ShockWizard QR Code\"\n  },\n  invoice: {\n    title: \"SCAN AN\",\n    target: \"INVOICE\",\n    description: \"Point your camera at an LND Invoice\"\n  }\n};\n\nconst QRCodeScanner = ({\n  mode = \"wizard\",\n  onScan,\n  onError,\n  onClose\n}: Props) => {\n  const content = modeContents[mode];\n  const videoConstrain:{facingMode?} = {}\n  if(!isDesktop()) {\n    videoConstrain.facingMode = { exact: \"environment\" }\n  }\n\n  return (\n    <div className=\"qr-code-scanner-container\">\n      <div className=\"qr-scanner-top-section\">\n        <i className=\"fas fa-times\" onClick={onClose}></i>\n      </div>\n\n      <QRScanner\n        constraints={{\n          video: videoConstrain\n        }}\n        onScan={onScan}\n        onError={onError}\n      />\n\n      <div className=\"qr-scanner-target\" />\n      <div className=\"qr-scanner-bottom-section\">\n        <p className=\"qr-scanner-bottom-title\">\n          {content.title}{\" \"}\n          <span className=\"qr-scanner-bottom-title-highlight\">\n            {content.target}\n          </span>\n        </p>\n        <p className=\"qr-scanner-bottom-description\">{content.description}</p>\n        <div className=\"qr-scanner-btn\" onClick={onClose}>\n          Cancel Scan\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QRCodeScanner;\n","import { CSSProperties } from \"react\";\n\nexport const AVATAR_SIZE = 55;\n\nexport const AVATAR_CONTAINER_STYLE: CSSProperties = {\n  height: AVATAR_SIZE + \"px\",\n  width: AVATAR_SIZE + \"px\"\n};\n","// @ts-check\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DateTime } from \"luxon\";\n\nimport { subscribeChatMessages } from \"../../../../actions/ChatActions\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport { AVATAR_CONTAINER_STYLE, AVATAR_SIZE } from \"../common\";\nimport * as Store from \"../../../../store\";\n\nimport \"./css/index.scoped.css\";\nimport { rifleCleanup } from \"../../../../utils/WebSocket\";\n\nconst Message = ({\n  subtitle = \"\",\n  lastMessageTimestamp,\n  publicKey,\n  chatLoaded = false\n}) => {\n  const dispatch = Store.useDispatch();\n  const gunPublicKey = Store.useSelector(({ node }) => node.publicKey);\n  const user = Store.useSelector(Store.selectUser(publicKey));\n  const time = useMemo(() => {\n    if (lastMessageTimestamp === -1) {\n      return \"\";\n    }\n    const relativeTime = DateTime.fromMillis(lastMessageTimestamp).toRelative();\n    return relativeTime === \"in 0 seconds\" ? \"Just now\" : relativeTime;\n  }, [lastMessageTimestamp]);\n\n  const subscribeMessages = useCallback(() => {\n    const subscription = dispatch(\n      subscribeChatMessages(gunPublicKey, publicKey)\n    );\n\n    return rifleCleanup(subscription);\n  }, [dispatch, gunPublicKey, publicKey]);\n\n  useEffect(() => {\n    if (chatLoaded) {\n      const unsubscribe = subscribeMessages();\n\n      return unsubscribe;\n    }\n  }, [subscribeMessages, publicKey, chatLoaded]);\n\n  return (\n    <Link to={`/chat/${publicKey}`} className=\"container\">\n      <div className=\"author-container\">\n        <div className=\"author-avatar\" style={AVATAR_CONTAINER_STYLE}>\n          <ShockAvatar publicKey={publicKey} height={AVATAR_SIZE} />\n        </div>\n\n        <div className=\"author-details\">\n          <p className=\"author-username\">{user.displayName}</p>\n          <p className=\"author-text\">{subtitle}</p>\n        </div>\n      </div>\n      <p className=\"timestamp\">{time}</p>\n    </Link>\n  );\n};\n\nexport default Message;\n","// @ts-check\nimport { Link } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport { AVATAR_CONTAINER_STYLE, AVATAR_SIZE } from \"../common\";\n\nimport \"./css/index.scoped.css\";\n\nconst Request = ({ publicKey = \"\", time, sent }) => {\n  const user = Store.useSelector(Store.selectUser(publicKey));\n\n  return (\n    <Link to={`/chat/${publicKey}`} className=\"request-container\">\n      <div className=\"request-author-container\">\n        <div className=\"request-author-avatar\" style={AVATAR_CONTAINER_STYLE}>\n          <ShockAvatar publicKey={publicKey} height={AVATAR_SIZE} />\n        </div>\n        <div className=\"request-author-details\">\n          <p className=\"request-author-username\">\n            {sent ? \"Sent Request\" : \"Received Request\"} - {user.displayName}\n          </p>\n          <p className=\"request-author-text\">Request pending acceptance...</p>\n        </div>\n      </div>\n      <p className=\"request-timestamp\">{time}</p>\n    </Link>\n  );\n};\n\nexport default Request;\n","// @ts-check\nimport { useCallback, useEffect, useState, useMemo } from \"react\";\nimport { DateTime } from \"luxon\";\n\nimport {\n  loadChatData,\n  sendHandshakeRequest,\n  loadReceivedRequests,\n  loadSentRequests,\n  subChats,\n  subReceivedRequests,\n  subSentRequests\n} from \"../../actions/ChatActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport BottomBar from \"../../common/BottomBar\";\nimport Message from \"./components/Message\";\nimport Request from \"./components/Request\";\nimport MainNav from \"../../common/MainNav\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Loader from \"../../common/Loader\";\nimport FieldError from \"../../utils/FieldError\";\nimport \"./css/index.scoped.css\";\nimport Modal from \"../../common/Modal\";\nimport * as Store from \"../../store\";\nimport QRCodeScanner from \"../../common/QRCodeScanner\";\n\nconst MessagesPage = () => {\n  const dispatch = Store.useDispatch();\n  const [addModalOpen, setAddModalOpen] = useState(false);\n  const [sendError, setSendError] = useState(\"\");\n  const [sendRequestLoading, setSendRequestLoading] = useState(false);\n  const [chatLoaded, setChatLoaded] = useState(false);\n  const contacts = Store.useSelector(({ chat }) => chat.contacts);\n  const messages = Store.useSelector(({ chat }) => chat.messages);\n  const orderedContacts = useMemo(() => {\n    return contacts.slice().sort((a, b) => {\n      const lastMsgA = messages[a.pk][0] || { timestamp: -1 };\n      const lastMsgB = messages[b.pk][0] || { timestamp: -1 };\n\n      return lastMsgB.timestamp - lastMsgA.timestamp;\n    });\n  }, [contacts, messages]);\n  const sentRequests = Store.useSelector(({ chat }) => chat.sentRequests);\n  const receivedRequests = Store.useSelector(\n    ({ chat }) => chat.receivedRequests\n  );\n  const [scanQR, setScanQR] = useState(false);\n\n  const loadChat = useCallback(async () => {\n    await dispatch(loadChatData());\n    setChatLoaded(true);\n  }, [dispatch]);\n\n  useEffect(() => {\n    loadChat();\n  }, [loadChat]);\n\n  useEffect(() => {\n    dispatch(loadReceivedRequests());\n    dispatch(loadSentRequests());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const subscriptions = [\n      dispatch(subChats()),\n      dispatch(subSentRequests()),\n      dispatch(subReceivedRequests())\n    ];\n\n    return () => {\n      Promise.all(subscriptions).then(subs => subs.forEach(sub => sub.off()));\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    const subscriptions = [\n      ...contacts,\n      ...sentRequests,\n      ...receivedRequests\n    ].map(entry => dispatch(subscribeUserProfile(entry.pk)));\n\n    return () => {\n      // @ts-ignore\n      subscriptions.map(unsubscribe => unsubscribe());\n    };\n  }, [contacts, sentRequests, receivedRequests, dispatch]);\n\n  const toggleModal = useCallback(() => {\n    setAddModalOpen(!addModalOpen);\n  }, [addModalOpen]);\n\n  const sanitizePublicKey = publicKey => {\n    if (publicKey.startsWith(\"http\")) {\n      const parts = publicKey.split(\"/\");\n      return parts.slice(-1)[0];\n    }\n\n    return publicKey;\n  };\n\n  const sendRequest = useCallback(\n    async input => {\n      if (!input) {\n        return;\n      }\n      try {\n        let shockUser = input;\n        if (input.startsWith(\"https://\")) {\n          const splitted = input.split(\"/\");\n          shockUser = splitted[splitted.length - 1];\n        }\n        setSendError(null);\n        setSendRequestLoading(true);\n        const pk = sanitizePublicKey(shockUser);\n\n        if (!pk?.length) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Please specify a public key\"\n          });\n        }\n\n        if (!/^[0-9A-Za-z\\-_.+/]+[=]{0,3}/.test(pk)) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Invalid public key format specified\"\n          });\n        }\n\n        await dispatch(sendHandshakeRequest(shockUser));\n\n        setAddModalOpen(false);\n      } catch (err) {\n        const errMsg =\n          err instanceof FieldError\n            ? err.message\n            : \"An unknown error has occurred\";\n\n        console.error(err);\n\n        setSendError(errMsg);\n      } finally {\n        setSendRequestLoading(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const sendRequestClipboard = useCallback(async () => {\n    try {\n      const clipboardText = await navigator.clipboard.readText();\n      return sendRequest(clipboardText);\n    } catch (e) {\n      alert(e.message);\n    }\n  }, [sendRequest]);\n\n  const openQR = useCallback(() => {\n    setScanQR(true);\n  }, [setScanQR]);\n\n  const closeQR = useCallback(() => {\n    setScanQR(false);\n  }, [setScanQR]);\n\n  const scanErr = useCallback(\n    e => {\n      console.log(e);\n      setSendError(e.message);\n    },\n    [setSendError]\n  );\n\n  const scanDone = useCallback(\n    content => {\n      if (!content || !content.text) {\n        return;\n      }\n      sendRequest(content.text);\n      setScanQR(false);\n      console.log(content.text);\n    },\n    [sendRequest, setScanQR]\n  );\n\n  const messagesNode = useMemo(() => {\n    return orderedContacts.map(contact => {\n      const contactMessages = messages[contact.pk] ?? [];\n      const lastMessage = (() => {\n        if (contact.didDisconnect) {\n          return {\n            body: \"User disconnected from you.\",\n            timestamp: -1\n          };\n        }\n\n        return (\n          contactMessages[0] ?? {\n            body: \"\",\n            timestamp: -1\n          }\n        );\n      })();\n\n      return (\n        <Message\n          key={contact.pk}\n          publicKey={contact.pk}\n          subtitle={lastMessage.body}\n          lastMessageTimestamp={lastMessage.timestamp}\n          chatLoaded={chatLoaded}\n        />\n      );\n    });\n  }, [chatLoaded, messages, orderedContacts]);\n\n  if (scanQR) {\n    return (\n      <div>\n        <QRCodeScanner\n          mode=\"invoice\"\n          onClose={closeQR}\n          onError={scanErr}\n          onScan={scanDone}\n        />\n      </div>\n    );\n  }\n  console.log(sendError);\n\n  return (\n    <div className=\"page-container messages-page\">\n      <MainNav solid pageTitle=\"MESSAGES\" />\n      <div className=\"messages-container\">\n        <div className=\"message-list-container\">\n          {sentRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Sent Requests</p>\n          ) : null}\n          {sentRequests.map(request => (\n            <Request\n              publicKey={request.pk}\n              sent\n              key={request.id}\n              time={undefined}\n            />\n          ))}\n          {receivedRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Received Requests</p>\n          ) : null}\n          {receivedRequests.map(request => (\n            <Request\n              publicKey={request.pk}\n              key={request.id}\n              sent={false}\n              time={undefined}\n            />\n          ))}\n\n          {contacts.length > 0 ? (\n            <p className=\"messages-section-title\">Messages</p>\n          ) : null}\n\n          {messagesNode}\n        </div>\n        <AddBtn onClick={toggleModal} label=\"REQUEST\" />\n        {/* TODO: Extract to a separate component */}\n        <Modal\n          modalTitle=\"SEND REQUEST\"\n          toggleModal={toggleModal}\n          modalOpen={addModalOpen}\n        >\n          {sendRequestLoading ? (\n            <Loader\n              text=\"Sending Request...\"\n              overlay\n              style={{\n                borderRadius: \"0 0 15px 15px\"\n              }}\n            />\n          ) : null}\n          {sendError ? (\n            <div className=\"send-request-error\">{sendError}</div>\n          ) : null}\n          <div className=\"send-request-cards\">\n            <div className=\"send-request-card\" onClick={openQR}>\n              <i className=\"send-request-card-icon fas fa-qrcode\" />\n              <p className=\"send-request-card-title\">SCAN QR</p>\n              <p className=\"send-request-card-desc\">\n                Scan another users QR to send a message request.\n              </p>\n            </div>\n            <div className=\"send-request-card\" onClick={sendRequestClipboard}>\n              <i className=\"send-request-card-icon fas fa-clipboard\" />\n              <p className=\"send-request-card-title\">PASTE CLIPBOARD</p>\n              <p className=\"send-request-card-desc\">\n                Paste another users Public Key to send a message request.\n              </p>\n            </div>\n          </div>\n        </Modal>\n      </div>\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default MessagesPage;\n"],"sourceRoot":""}