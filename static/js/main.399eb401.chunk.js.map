{"version":3,"sources":["actions/OrdersActions.js","utils/JSON.ts","utils/WebSocket.js","actions/CoordinateActions.ts","common/Loader/index.js","common/Post/components/TipRibbon/index.js","actions/AuthActions.ts","common/Post/components/Stream/index.tsx","utils/String.js","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.ts","reducers/DrawerReducer.js","reducers/ContentReducer.ts","reducers/FeesReducer.ts","reducers/FeedReducer.ts","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/AppReducer.ts","reducers/settings.ts","reducers/CoordinatesReducer.ts","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/selectors/publishedContent.ts","store/selectors/chat.ts","store/selectors/feed.ts","store/selectors/coordinates.ts","store/selectors/index.ts","store/index.ts","utils/Http.js","actions/SettingsActions.ts","actions/ContentActions.ts","actions/WalletActions.js","utils/Encryption.ts","actions/FeedActions.ts","actions/NodeActions.js","schema/index.ts","actions/ChatActions.ts","common/Drawer/index.js","App.js","utils/ui.tsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js","utils/Date.ts","utils/index.ts","actions/EncryptionActions.js","utils/dialogCallback.ts","actions/AppActions.ts","actions/UserProfilesActions.ts","utils/Error.ts","utils/FieldError.ts","actions/DrawerActions.js","actions/FeesActions.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","dispatch","a","Http","post","path","value","data","ok","newID","id","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","providedServiceId","query","rifle","publicKey","reconnect","onData","serviceNode","type","serviceInfo","buyService","owner","serviceID","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","safeParseJSON","err","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","transports","rifleSubscriptions","Map","GunSocket","reconnectRifleSubscriptions","Array","from","forEach","key","unsubscribeRifleById","delete","connectSocket","host","store","socketOptions","auth","encryptionId","getState","encryption","deviceId","isInitial","connected","disconnectSocket","SocketIO","relayId","node","emit","GunOn","encryptedOn","event","subscription","get","subscriptionId","onError","on","Common","setAuthenticated","field","message","onlineListener","window","removeEventListener","addEventListener","socket","off","close","decryptEventCallback","callback","privateKey","Encryption","encryptedMessage","decryptedMessage","undefined","encryptedEmit","eventName","hostKeys","userKeys","hostId","remotePublicKey","localPrivateKey","error","stringify","encryptedData","responses","warn","res","decryptedResponses","sanitized","filter","Error","errors","length","unsubscribeEvent","unsubscribeRifleByQuery","resolve","debug","epubForDecryption","epubField","reject","then","$shock","token","authToken","set","rifleCleanup","subscriptions","unsubscribe","coordinateDeleted","createAction","coordinateReceived","subCoordinates","Utils","unparsed","coordinateSHA256","coordinate","fetchWalletBalance","sub","e","alert","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","TipRibbon","tipCounter","tipValue","zoomed","opacity","RESET_AUTH_INFO","SET_AUTH_STEP","SET_AUTHENTICATED","SET_AUTH_METHOD","LOGOUT","SET_RELAY_ID","status","setAuthStep","step","setAuthMethod","method","logout","Stream","item","index","postId","hideRibbon","width","playerDOM","timeout","useRef","useState","isLive","videoStyle","liveStatus","useEffect","player","videojs","current","autoplay","muted","aspectRatio","src","magnetURI","play","viewersSocketUrl","WebSocket","userToken","cursor","display","ref","preload","controls","autoPlay","initialMessagePrefix","processDisplayName","displayName","suffix","slice","INITIAL_STATE","hostIP","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","webClientPrefix","accessSecret","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","headers","common","Authorization","SET_ATTEMPTS_DONE","AUTH_ACTIONS","SET_WEBCLIENT_PREFIX","SET_ACCESS_SECRET","authenticated","authStep","defaultSteps","manual","shockWizard","shockCloud","hostingTiers","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","lightningInfo","_getUnifiedTransactionDate","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","sort","b","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","LOAD_LIGHTNING_INFO","chat","produce","draft","handshakeAddressUpdated","match","handshakeAddress","payload","currentHandshakeAddress","receivedRequests","receivedHandshakeRequest","receivedRequest","convoReceived","convo","convos","convoToMessages","convoDeleted","messageTransmissionFailed","convoID","errorMessage","messageID","messageTransmissionRequested","body","timestamp","Date","now","messageTransmissionRetried","messageTransmissionSucceeded","handshakeRequestDeleted","receivedConvoMessage","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","streamPostId","streamContentId","streamStatusUrl","streamBroadcasterUrl","publishedContent","publicContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","tipOverlayUrl","publicContentAdded","publishedContentAdded","publishedContentRemoved","SET_SEED_PROVIDER_PUB","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","availableTmp","push","REMOVE_USED_TOKEN","indexOf","splice","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","posts","sharedPosts","reloadDone","feed","postDeleted","author","idx","findIndex","p","postReceived","newPost","authorId","contentItems","tags","title","tips","contentItemReceived","contentItem","postID","sharedPostDeleted","sharerPublicKey","sharedPostReceived","originalAuthor","shareDate","originalPostID","shareID","sharedBy","postTipReceived","tipAmt","tipID","find","ADD_FOLLOW","existingFollow","follow","user","REMOVE_FOLLOW","UPDATE_FOLLOW","profile","RELOAD_FEED","RESET_DEFAULT_FOLLOWS","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","updatedUserProfile","assign","NODE_ACTIONS","RESET_USER_PROFILES","REMOVE_USER_PROFILE","profiles","myServices","services","boughtServices","orders","tmp","servicesTmp","selectedService","dialogText","dialogHasCallback","app","OPEN_DIALOG","hasCallback","CLOSE_DIALOG","settings","coordinates","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","AppReducer","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","Schema","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectAllOtherUsers","createSelector","users","values","selectFollows","f","selectOwnPublishedContent","privateContent","selectConvos","selectSingleConvo","selectIsInContact","with","selectCurrentHandshakeAddress","selectReceivedRequests","req","receiverConvoID","selectAllMessages","selectContacts","_publicKeys","uniq","selectCommunication","convoIDOrRequestID","maybeConvo","maybeRequest","selectConvoMessages","selectFeedPosts","pickBy","_","selectAllPosts","selectAllSharedPosts","selectSinglePost","selectPostsNewestToOldest","sharedPostsMap","allPosts","alpha","selectSharedPost","sharer","selectAllPostsFromFollowedNewestToOldest","followedPublicKeys","filteredPosts","pick","filteredShared","allNonShared","flat","allShared","records","selectAllCoordinates","selectAllCoordinatesNewestToOldest","coords","selectSingleCoordinate","selectRoot","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","process","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","useDispatch","originalUseDispatch","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","REACT_APP_SHOCK_ENCRYPTION_ECC","decryptResponse","interceptors","request","use","localRequest","url","originalData","toUpperCase","includes","retries","exchangeKeyPair","PUBLISHED_CONTENT_ADDED","PUBLISHED_CONTENT_REMOVED","setSeedProviderPub","pub","dontBackup","setSeedInfo","cleanUrl","endsWith","infoS","addPublishedContent","isPublicContentItem","TypeError","unlockContent","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","noDialog","openDialog","addAvailableToken","removeUnavailableToken","addStreamToken","OWN_PUBLISHED_CONTENT_QUERY","subOwnPublishedContent","parsed","parseJson","isPublishedContent","unsubOwnPublishedContent","subOwnPublicContent","logger","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","FetchLightningInfo","nonEncryptedEvents","convertBase64ToBuffer","Buffer","convertBufferToBase64","processKey","isBuffer","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","FieldError","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","toLowerCase","RESET_FEED","LOAD_POSTS","ADD_USER_POST","DELETE_USER_POST","LOAD_SHARED_POST","POST_TIPPED","removeFollow","addFollow","subSinglePost","subscribeUserPosts","subPostContent","FOLLOWS_QUERY","subscribeFollows","info","unsubscribeFollows","sendTipPost","deleteUserPost","reloadFeed","reloadFollows","subSharedPosts","sharedPost","subPostTips","nTipAmount","isNaN","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","fetchNodeHealth","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","connectHost","resetData","done","health","baseURL","setRelayId","setAccessSecret","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","decodedToken","jwtDecode","authorization","exp","parseError","createAlias","createWallet","setWebclientPrefix","prefix","isHandshakeReqNew","o","obj","epub","senderConvoID","isConvo","counterpartConvoID","isConvoMsg","description","isPostRaw","valMap","baseValidator","every","validator","createValidator","isFinite","val","subCurrentHandshakeAddress","subHandshakeNode","handshakeRequest","createOutgoingConversationFeed","outgoingConvoID","incomingConvoID","msgID","withEpub","messages","$$__EPUB__FOR","acceptHandshakeRequest","requestId","sendHandshakeRequest","epubP","rej","handshakeAddressP","selfEpubP","requestID","selfEpub","handshakeReqForGun","subConvos","sendMessage","messageBody","trim","subConvoMessages","outgoingSub","incomingSub","subs","Drawer","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","WalletSettingsPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","CreatePostPage","GoLivePage","OtherUserPage","QRScannerPage","BackupsPage","PublicContentItemPage","PrivateRoute","component","authorizedComponent","App","history","useHistory","setUpdate","setIsLive","showFloatingPlayer","setShowFloatingPlayer","interval","setInterval","clearInterval","setTimeout","clearTimeout","StreamRender","useMemo","stopStream","contentId","endUrl","urlForMagnet","obsToken","addLanguage","tokenExpired","JWTDecode","subscribeUserProfile","unsubscribeUserProfile","elementId","elmnt","document","getElementById","pos1","pos2","pos3","pos4","onpointerdown","preventDefault","clientX","clientY","onpointerup","closeDragElement","onpointermove","elementDrag","top","offsetTop","left","offsetLeft","dragElement","loadContentInfo","serviceProvider","msg","startsWith","toast","dark","seedData","JObject","loadStreamInfo","streamData","DialogClose","closeDialog","ConfirmDialog","fallback","exact","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","closeButton","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","loading","StrictMode","URL","href","origin","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","useForceUpdate","tick","setTick","forceUpdate","formatTimestamp","relativeTime","DateTime","fromMillis","toRelative","resizeImage","img","desiredLongEdge","compression","canvas","createElement","Math","round","getContext","drawImage","toDataURL","processImageFile","file","size","reader","FileReader","onload","target","result","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","image","resizedImage","normalizeURL","_url","__url","protocol","EMPTY_FN","EMPTY_ARR","EMPTY_OBJ","useBooleanState","initialState","setState","_state","safeParseJson","useLastSeen","lastSeenApp","setLastSeenApp","lastSeenNode","setLastSeenNode","appSub","lastSeen","nodeSub","memoize","exchangeSource","CancelToken","addUserKeyPair","addHostKey","getDeviceId","cancel","cancelToken","APIPublicKey","dialogCallback","callDialogCallBack","cb","addDialogCallback","executeCb","subscribedProfiles","Set","has","bio","offerSeedService","binarySub","avatar","header","extractErrorMessage","stack","openDrawer","loadFeeRates","setSource","setRate"],"mappings":"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","file":"static/js/main.399eb401.chunk.js","sourcesContent":["import Http from \"../utils/Http\";\nimport { rifle } from \"../utils/WebSocket\";\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE: \"service/add/bought\"\n};\n\nexport const createService = (clear, encrypted) => async dispatch => {\n  const { data } = await Http.post(\"/api/gun/set\", {\n    path: \"$user>offeredServices\",\n    value: clear\n  });\n  const { ok, id: newID } = data;\n  if (!ok) {\n    return \"\";\n  }\n  const id = newID;\n\n  const all = Object.entries(encrypted).map(([name, value]) => {\n    if (!value) {\n      return null;\n    }\n    console.log(`setting: ${name} to ${value}`);\n    return Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}>${name}`,\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value\n      }\n    });\n  });\n  await Promise.all(all);\n  const { serviceType } = clear;\n  //update the offered service\n  if (serviceType === \"torrentSeed\" || serviceType === \"streamSeed\") {\n    console.log(\"updating profile with service\");\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>Profile>offerSeedService`,\n      value: id\n    });\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id;\n};\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post(\"/api/gun/put\", {\n    path: `$user>offeredServices>${id}`,\n    value: null\n  });\n};\nexport const subscribeMyServices = providedServiceId => dispatch => {\n  const query = `$user::offeredServices>${providedServiceId}::on`;\n  console.log(query);\n  const subscription = rifle({\n    query,\n    publicKey: \"me\",\n    reconnect: false,\n\n    onData: async (serviceNode, id) => {\n      console.log(serviceNode);\n      if (serviceNode === null) {\n        dispatch({\n          type: ACTIONS.REMOVE_MY_SERVICE,\n          data: id\n        });\n        return;\n      }\n      dispatch({\n        type: ACTIONS.ADD_MY_SERVICE,\n        data: { id, serviceInfo: serviceNode }\n      });\n      console.log(\"got service data\");\n    }\n  });\n\n  return subscription;\n};\n\nexport const buyService = (\n  owner,\n  serviceID,\n  servicePrice\n) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"service\",\n    amt: Number(servicePrice),\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: serviceID\n  });\n  console.log(data);\n  const orderAck = JSON.parse(data.orderAck.response);\n  dispatch({\n    type: ACTIONS.ADD_BOUGHT_SERVICE,\n    data: { orderAck, owner, serviceID }\n  });\n  return orderAck;\n};\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Common from \"shock-common\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"./String\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').Subscription} Subscription\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true,\n  transports: [\"websocket\"]\n};\n\nconst rifleSubscriptions = new Map();\n\n/** @type {import(\"socket.io-client\").Socket<import(\"socket.io-client/build/typed-events\").DefaultEventsMap, import(\"socket.io-client/build/typed-events\").DefaultEventsMap>} */\nexport let GunSocket = null;\n\nconst reconnectRifleSubscriptions = () => {\n  Array.from(rifleSubscriptions.entries()).forEach(([key, value]) => {\n    unsubscribeRifleById(key);\n    rifle(value);\n    rifleSubscriptions.delete(key);\n  });\n};\n\nexport const connectSocket = async (host = \"\", reconnect = false) => {\n  const { store } = await import(\"../store\");\n  const socketOptions = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId,\n      /**\n       * Signals LND rpc socket handling that this is just the intial handshake\n       * and to not try to process non-existent arguments.\n       */\n      isInitial: true\n    }\n  };\n\n  if (GunSocket?.connected && !reconnect) {\n    return { GunSocket };\n  }\n\n  if (GunSocket && reconnect) {\n    disconnectSocket(GunSocket);\n  }\n\n  GunSocket = SocketIO(`${host}/gun`, socketOptions);\n\n  const relayId = store.getState().node.relayId;\n  if (relayId) {\n    GunSocket.emit(\"hybridRelayId\", { id: relayId });\n  }\n\n  const GunOn = encryptedOn(GunSocket);\n\n  // Subscribe to Rifle query events as soon as the socket is connected\n  GunOn(\"query:data\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onData?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunOn(\"query:error\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onError?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunSocket.on(Common.NOT_AUTH, () => {\n    store.dispatch(setAuthenticated(false));\n  });\n  //TODO listen on relay error\n  GunSocket.on(\"encryption:error\", async err => {\n    if (err.field === \"deviceId\" || err.message === \"Bad Mac\") {\n      store.dispatch(setAuthenticated(false));\n    }\n  });\n\n  reconnectRifleSubscriptions();\n\n  GunSocket.on(\"connect\", () => {\n    console.log(\"Connected to new socket\");\n    reconnectRifleSubscriptions();\n  });\n\n  const onlineListener = () => {\n    connectSocket(host, true);\n    window.removeEventListener(\"online resume\", onlineListener);\n  };\n\n  window.addEventListener(\"online resume\", onlineListener);\n\n  return { GunSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    try {\n      const decryptedMessage = await Encryption.decryptMessage({\n        privateKey,\n        encryptedMessage: data\n      });\n\n      callback(err, decryptedMessage);\n    } catch (e) {\n      callback(e, undefined);\n    }\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.emit(eventName, message, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message: JSON.stringify(message)\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        try {\n          if (!response) {\n            return response;\n          }\n\n          if (response && !Encryption.isEncryptedMessage(response)) {\n            console.warn(\"Non-encrypted socket message\", response);\n            return response;\n          }\n\n          const res = await Encryption.decryptMessage({\n            privateKey: localPrivateKey,\n            encryptedMessage: response\n          });\n          return res;\n        } catch (e) {\n          return e;\n        }\n      })\n    );\n\n    const sanitized = decryptedResponses.filter(\n      data => !(data instanceof Error)\n    );\n    const errors = decryptedResponses.filter(data => data instanceof Error);\n\n    if (errors.length) {\n      console.log(\"Errors inside socket.on:\", errors);\n    }\n\n    if (sanitized.length) {\n      callback(...sanitized);\n    }\n  });\n};\n\n/**\n * @returns {Promise<Subscription>}\n */\nexport const subscribeSocket = ({ eventName, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const on = encryptedOn(GunSocket);\n        const emit = encryptedEmit(GunSocket);\n\n        emit(\n          `subscribe:${eventName}`,\n          {\n            token: store.getState().node.authToken\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              reject(err);\n              return;\n            }\n          }\n        );\n\n        if (callback) {\n          on(eventName, data => {\n            callback(null, data);\n          });\n        }\n\n        resolve({\n          off() {\n            emit(`unsubscribe:${eventName}`);\n          }\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const unsubscribeRifleById = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n\n  if (cachedSocket) {\n    unsubscribeEvent(subscriptionId);\n    rifleSubscriptions.delete(subscriptionId);\n  }\n};\n\nexport const unsubscribeRifleByQuery = query => {\n  const subscriptionEntries = Array.from(rifleSubscriptions.entries());\n\n  subscriptionEntries.map(([id, subscription]) => {\n    if (subscription.query === query) {\n      console.log(\"Unsubscribing by query:\", subscription);\n      unsubscribeRifleById(id);\n      return true;\n    }\n\n    return false;\n  });\n};\n\nexport const unsubscribeEvent = subscriptionId =>\n  new Promise(resolve => {\n    const emit = encryptedEmit(GunSocket);\n    emit(\n      \"unsubscribe\",\n      {\n        subscriptionId\n      },\n      () => {\n        console.debug(\n          `[SOCKET] Unsubscribed from event successfully! (${subscriptionId})`\n        );\n        resolve(true);\n      }\n    );\n  });\n\nexport const rifleSocketExists = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} query\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {string=} epubForDecryption If epub is known before hand.\n * @prop {string=} epubField If the epub is included in the received data\n * itself. Handshake requests for example, have an epub field.\n * @prop {boolean=} reconnect\n * @prop {(data, key) => void} onData\n * @prop {((error) => void)=} onError\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.onData(callback)` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map().once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<Subscription>}\n */\nexport const rifle = ({\n  query,\n  publicKey,\n  epubForDecryption,\n  epubField,\n  reconnect,\n  onData,\n  onError\n}) =>\n  new Promise((resolve, reject) => {\n    import(\"../store\").then(({ store }) => {\n      if (reconnect) {\n        unsubscribeRifleByQuery(query);\n      }\n\n      const emit = encryptedEmit(GunSocket);\n\n      emit(\n        \"subscribe:query\",\n        {\n          $shock: query,\n          token: store.getState().node.authToken,\n          publicKey,\n          epubForDecryption,\n          epubField\n        },\n        (err, data) => {\n          if (err) {\n            console.error(`Gun rifle error (${query})`);\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          rifleSubscriptions.set(data.subscriptionId, {\n            publicKey,\n            epubForDecryption,\n            epubField,\n            reconnect,\n            onData,\n            onError,\n            query\n          });\n\n          resolve({\n            off: () => unsubscribeRifleById(data.subscriptionId)\n          });\n        }\n      );\n    });\n  });\n\n/**\n * @param {Promise<Subscription>[]} subscriptions\n */\nexport const rifleCleanup = (...subscriptions) => () => {\n  subscriptions.map(subscription =>\n    subscription.then(unsubscribe => {\n      unsubscribe.off();\n    })\n  );\n};\n\n/**\n * @returns {Promise<{ messages: any , contacts: Contact[]}>}\n */\nexport const getChats = async () => {\n  try {\n    const chats = await new Promise(res => {\n      const subscription = subscribeSocket({\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        },\n        eventName: \"chats\"\n      });\n    });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName,\n      didDisconnect: chat.didDisconnect\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleSentRequest[]>}\n */\nexport const getSentRequests = async () => {\n  try {\n    const sentRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"sentRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleReceivedRequest[]>}\n */\nexport const getReceivedRequests = async () => {\n  try {\n    const receivedRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"receivedRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Utils from \"../utils\";\nimport { fetchWalletBalance } from \"./WalletActions\";\n\nexport const coordinateDeleted = createAction<{\n  coordinateSHA256: string;\n}>(\"coordinates/deleted\");\n\nexport const coordinateReceived = createAction<{\n  coordinate: Common.Coordinate;\n  coordinateSHA256: string;\n}>(\"coordinates/received\");\n\nexport const subCoordinates = () => (dispatch: (action: any) => void) => {\n  Utils.logger.debug(`Subscribing to coordinates.`);\n  try {\n    const subscription = Utils.rifle({\n      query: `$user::coordinates::map.on`,\n      publicKey: \"me\",\n      onData: (unparsed, coordinateSHA256) => {\n        const coordinate = Utils.safeParseJson(unparsed);\n\n        if (Common.isCoordinate(coordinate)) {\n          dispatch(\n            coordinateReceived({\n              coordinate,\n              coordinateSHA256\n            })\n          );\n          fetchWalletBalance()(dispatch)\n        } else if (coordinate === null) {\n          dispatch(\n            coordinateDeleted({\n              coordinateSHA256\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Coordinate subscription invalid (or incomplete) value -> `,\n            coordinate\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    alert(`Could not establish a subscription to coordinates: ${e.message}`);\n    Utils.logger.error(\n      `Could not establish a subscription to coordinates -> `,\n      e\n    );\n  }\n};\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.scoped.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\")\n    .matches;\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","import \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","// @ts-check\nexport const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\",\n  SET_RELAY_ID: \"auth/relay/set\"\n\n};\n\nexport const setAuthenticated = status => ({\n  type: ACTIONS.SET_AUTHENTICATED,\n  data: status\n});\n\nexport const setAuthStep = step => ({\n  type: ACTIONS.SET_AUTH_STEP,\n  data: step\n});\n\nexport const setAuthMethod = method => ({\n  type: ACTIONS.SET_AUTH_METHOD,\n  data: method\n});\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const { liveStatus } = item\n  useEffect(() => {\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  }, [item])\n  useEffect(() => {\n    if (item.viewersSocketUrl) {\n      const socket = new WebSocket(`${item.viewersSocketUrl}/stream/watch/${item.userToken}`);\n      socket.addEventListener(\"open\", () => {\n        console.log(\"viewer socket open\")\n      });\n      return () => {\n        socket.close()\n      }\n    }\n  }, [item])\n\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {!isLive && liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!isLive && !liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false,\n  webClientPrefix:\"https://lightning.page\",\n  relayId:null,\n  accessSecret:null\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n    case ACTIONS.SET_RELAY_ID:{\n      return {\n        ...state,\n        relayId:action.data\n      }\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    case ACTIONS.SET_WEBCLIENT_PREFIX:{\n      return {...state, webClientPrefix:action.data}\n    }\n\n    case ACTIONS.SET_ACCESS_SECRET:{\n      return {...state, accessSecret:action.data}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null,\n  relayId:null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\",\n  hostingTiers: \"chooseTier\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n * @typedef {import('shock-common').Peer} Peer\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Peer[]}\n   */\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: [],\n  lightningInfo: {}\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    case ACTIONS.LOAD_LIGHTNING_INFO:{\n      const {data}  = action\n      return {\n        ...state,\n        lightningInfo:data\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\nimport produce from \"immer\";\nimport * as Common from \"shock-common\";\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n * @typedef {import(\"shock-common\").StoredRequest} StoredReq\n */\n\nimport * as Schema from \"../schema\";\nimport {\n  handshakeAddressUpdated,\n  receivedHandshakeRequest,\n  convoReceived,\n  convoDeleted,\n  messageTransmissionFailed,\n  messageTransmissionRequested,\n  messageTransmissionRetried,\n  messageTransmissionSucceeded,\n  handshakeRequestDeleted,\n  receivedConvoMessage\n} from \"../actions/ChatActions\";\n\nconst INITIAL_STATE = {\n  currentHandshakeAddress: \"DOES_NOT_EXIST\" as string,\n  convos: {} as Record<string, Schema.Convo>,\n  /**\n   * Maps convo id to a set of the messages corresponding to it.\n   */\n  convoToMessages: {} as Record<string, Record<string, Schema.ConvoMsg>>,\n  receivedRequests: {} as Record<string, Schema.HandshakeReqNew>\n};\n\nconst chat = produce((draft, action) => {\n  if (handshakeAddressUpdated.match(action)) {\n    const { handshakeAddress } = action.payload;\n    if (\n      draft.currentHandshakeAddress !== handshakeAddress &&\n      Common.isPopulatedString(handshakeAddress)\n    ) {\n      draft.receivedRequests = {};\n      draft.currentHandshakeAddress = handshakeAddress;\n    }\n  }\n\n  if (receivedHandshakeRequest.match(action)) {\n    const { receivedRequest } = action.payload;\n    if (!draft.receivedRequests[receivedRequest.id]) {\n      draft.receivedRequests[receivedRequest.id] = receivedRequest;\n    }\n  }\n\n  if (convoReceived.match(action)) {\n    const { convo } = action.payload;\n    if (!draft.convos[convo.id]) {\n      draft.convoToMessages[convo.id] = {};\n      draft.convos[convo.id] = convo;\n    }\n  }\n\n  if (convoDeleted.match(action)) {\n    const { id } = action.payload;\n    if (draft.convos[id]) {\n      delete draft.convos[id];\n    }\n  }\n\n  if (messageTransmissionFailed.match(action)) {\n    const { convoID, errorMessage, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = errorMessage;\n    draft.convoToMessages[convoID][messageID].state = \"error\";\n  }\n  if (messageTransmissionRequested.match(action)) {\n    const { convoID, message, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID] = {\n      body: message,\n      convoID,\n      err: \"\",\n      id: messageID,\n      state: \"sending\",\n      timestamp: Date.now()\n    };\n  }\n  if (messageTransmissionRetried.match(action)) {\n    const { convoID, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = \"\";\n    draft.convoToMessages[convoID][messageID].state = \"sending\";\n  }\n  if (messageTransmissionSucceeded.match(action)) {\n    const { convoID, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = \"\";\n    draft.convoToMessages[convoID][messageID].state = \"ok\";\n  }\n  if (handshakeRequestDeleted.match(action)) {\n    const { id } = action.payload;\n    if (draft.receivedRequests[id]) {\n      delete draft.receivedRequests[id];\n    }\n  }\n  if (receivedConvoMessage.match(action)) {\n    const { message } = action.payload;\n    if (!draft.convoToMessages[message.convoID]) {\n      draft.convoToMessages[message.convoID] = {};\n    }\n    if (!draft.convoToMessages[message.convoID][message.id]) {\n      draft.convoToMessages[message.convoID][message.id] = {\n        ...message,\n        err: \"\"\n      };\n    }\n  }\n}, INITIAL_STATE);\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import produce from \"immer\";\n\nimport {\n  ACTIONS,\n  publishedContentAdded,\n  publishedContentRemoved,\n  publicContentAdded\n} from \"../actions/ContentActions\";\nimport { PublishedContent, PublicContentItem } from \"../schema\";\n\nconst INITIAL_STATE = {\n  seedProviderPub:\n    \"tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\",\n  streamUserToken: \"\",\n  streamLiveToken: \"\",\n  streamUrl: \"\",\n  streamPostId: \"\",\n  streamContentId: \"\",\n  streamStatusUrl: \"\",\n  streamBroadcasterUrl: \"\",\n  publishedContent: {} as Record<string, PublishedContent>,\n  publicContent: {} as Record<string, PublicContentItem>,\n  unlockedContent: {},\n  seedInfo: {} as { seedUrl?: string; seedToken?: string },\n  availableTokens: {},\n  availableStreamTokens: {},\n  tipOverlayUrl:\"\"\n};\n\nconst content = (state = INITIAL_STATE, action): typeof INITIAL_STATE => {\n  if (publicContentAdded.match(action)) {\n    return produce(state, draft => {\n      const { item } = action.payload;\n      if (!draft.publicContent[item.id]) {\n        draft.publicContent[item.id] = item;\n      }\n    });\n  }\n  if (publishedContentAdded.match(action)) {\n    return produce(state, draft => {\n      const {\n        payload: { content, res }\n      } = action;\n      if (res.ok) {\n        draft.publishedContent[res.id] = content;\n      }\n    });\n  }\n\n  if (publishedContentRemoved.match(action)) {\n    return produce(state, draft => {\n      delete draft.publishedContent[action.payload.id];\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n\n    case ACTIONS.ADD_UNLOCKED_CONTENT: {\n      const { data } = action;\n      const unlockedTmp = { ...state.unlockedContent };\n      unlockedTmp[data.contentPath] = data.content;\n      return { ...state, unlockedContent: unlockedTmp };\n    }\n    case ACTIONS.ADD_STREAM: {\n      const { data } = action;\n      return {\n        ...state,\n        streamLiveToken: data.liveToken,\n        streamUserToken: data.seedToken,\n        streamUrl: data.streamUrl,\n        streamPostId: data.streamPostId,\n        streamContentId: data.streamContentId,\n        streamStatusUrl: data.streamStatusUrl,\n        streamBroadcasterUrl: data.streamBroadcasterUrl,\n        tipOverlayUrl:data.tipOverlayUrl,\n      };\n    }\n    case ACTIONS.REMOVE_STREAM: {\n      return {\n        ...state,\n        streamLiveToken: \"\",\n        streamUserToken: \"\",\n        streamUrl: \"\",\n        streamPostId: \"\",\n        streamContentId: \"\",\n        streamStatusUrl: \"\",\n        streamBroadcasterUrl: \"\"\n      };\n    }\n    case ACTIONS.SET_SEED_INFO: {\n      const { data } = action;\n      return { ...state, seedInfo: data };\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_USED_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableTokens: availableTmp };\n      }\n      return state;\n    }\n    case ACTIONS.ADD_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableStreamTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableStreamTokens: availableTmp };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/FeesActions\";\n\nexport interface FeesState {\n  source: string;\n\n  rate: Schema.FeeRate;\n\n  feeRates: Record<Schema.FeeRate, number>;\n}\n\nconst INITIAL_STATE: FeesState = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n\n  rate: \"halfHourFee\",\n\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (\n  state: FeesState = INITIAL_STATE,\n  action: { type: string; data: any }\n): FeesState => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        feeRates: INITIAL_STATE[\"feeRates\"],\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport * as Utils from \"../utils\";\nimport * as Schema from \"../schema\";\nimport {\n  ACTIONS,\n  postDeleted,\n  postReceived,\n  contentItemReceived,\n  sharedPostDeleted,\n  sharedPostReceived,\n  postTipReceived\n} from \"../actions/FeedActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  follows: [],\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: {} as Record<string, Schema.Post[]>,\n  sharedPosts: {} as Record<string, Record<string, Common.SharedPost>>,\n  reloadDone: false\n};\n\nconst feed = (state = INITIAL_STATE, action: any): typeof INITIAL_STATE => {\n  if (postDeleted.match(action)) {\n    const {\n      payload: { author, id }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx > -1) {\n        draft.posts[author].splice(idx, 1);\n      }\n    });\n  }\n  if (postReceived.match(action)) {\n    const {\n      payload: { author, id, post }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx === -1) {\n        const newPost: Schema.Post = {\n          authorId: author,\n          contentItems: {},\n          date: post.date,\n          id,\n          status: post.status,\n          tags: post.tags,\n          title: post.title,\n          tips: {},\n          type: \"post\"\n        };\n        draft.posts[author].push(newPost);\n      }\n    });\n  }\n  if (contentItemReceived.match(action)) {\n    const {\n      payload: { author, contentItem, id, postID }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state (no author found), post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === postID);\n      if (idx === -1) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state, post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      (draft.posts[author][idx] as Schema.Post).contentItems[id] = contentItem;\n    });\n  }\n  if (sharedPostDeleted.match(action)) {\n    const { postID, sharerPublicKey } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      if (draft.sharedPosts[sharerPublicKey][postID]) {\n        delete draft.sharedPosts[sharerPublicKey][postID];\n      }\n    });\n  }\n  if (sharedPostReceived.match(action)) {\n    const {\n      originalAuthor,\n      postID,\n      shareDate,\n      sharerPublicKey\n    } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      draft.sharedPosts[sharerPublicKey][postID] = {\n        originalAuthor,\n        originalPostID: postID,\n        shareDate,\n        shareID: sharerPublicKey + postID,\n        sharedBy: sharerPublicKey\n      };\n    });\n  }\n\n  if (postTipReceived.match(action)) {\n    const { author, postID, tipAmt, tipID } = action.payload;\n\n    return produce(state, draft => {\n      const post = draft.posts[author].find(p => p.id === postID);\n      if (!post) {\n        Utils.logger.error(\n          `Got tip for non existent post ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n      }\n      if (!post.tips) {\n        // cached data from previous app version won't have the tips object\n        post.tips = {};\n      }\n      if (!post.tips[tipID]) {\n        post.tips[tipID] = tipAmt;\n      }\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.RELOAD_FEED: {\n      return { ...state, reloadDone: true };\n    }\n    case ACTIONS.RESET_DEFAULT_FOLLOWS: {\n      const {data} = action\n      return {...state, follows:data}\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS, updatedUserProfile } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { sharedPostReceived } from \"../actions/FeedActions\";\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  if (sharedPostReceived.match(action)) {\n    const { originalAuthor } = action.payload;\n    return produce(state, draft => {\n      if (!draft[originalAuthor]) {\n        draft[originalAuthor] = Common.createEmptyUser(originalAuthor);\n      }\n    });\n  }\n  if (updatedUserProfile.match(action)) {\n    return produce(state, draft => {\n      const { profile, publicKey } = action.payload;\n\n      if (!draft[publicKey]) {\n        draft[publicKey] = Common.createEmptyUser(publicKey);\n      }\n\n      Object.assign(draft[publicKey], profile);\n    });\n  }\n\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n  myServices: {},\n  services: {},\n  boughtServices: {}\n};\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const { id, serviceInfo } = action.data;\n      const tmp = { ...state.myServices };\n      tmp[id] = serviceInfo;\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE: {\n      const id = action.data;\n      const tmp = { ...state.myServices };\n      delete tmp[id];\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE: {\n      const { orderAck, owner, serviceID } = action.data;\n      const servicesTmp = { ...state.boughtServices };\n\n      if (!servicesTmp[owner]) {\n        servicesTmp[owner] = {};\n      }\n      const selectedService = servicesTmp[owner];\n      if (!selectedService[serviceID]) {\n        selectedService[serviceID] = [];\n      }\n      selectedService[serviceID].push(orderAck);\n      return { ...state, boughtServices: servicesTmp };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/AppActions\";\n\nconst INITIAL_STATE = {\n  dialogText: '',\n  dialogHasCallback:false\n};\nconst app = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.OPEN_DIALOG: {\n      const {text,hasCallback} = action.data\n      return { ...state, dialogText: text,dialogHasCallback:hasCallback };\n    }\n    case ACTIONS.CLOSE_DIALOG: {\n      return {...state, dialogText: '',dialogHasCallback: false}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","import produce from \"immer\";\n\nimport * as Utils from \"../utils\";\nimport { set } from \"../actions/SettingsActions\";\n\nconst INITIAL_STATE: Record<string, string | number | boolean> = {};\n\nconst settings = produce((draft, action) => {\n  try {\n    if (set.match(action)) {\n      const { key, value } = action.payload;\n      draft[key] = value;\n    }\n  } catch (e) {\n    Utils.logger.error(`Error inside settings reducer:`);\n    Utils.logger.error(e);\n  }\n}, INITIAL_STATE);\n\nexport default settings;\n","import produce from \"immer\";\n\nimport { CoordinateWithHash } from \"../schema\";\n\nimport {\n  coordinateDeleted,\n  coordinateReceived\n} from \"../actions/CoordinateActions\";\n\nconst INITIAL_STATE = {} as Record<string, CoordinateWithHash>;\n\nconst coordinates = produce((draft, action) => {\n  if (coordinateDeleted.match(action)) {\n    const { coordinateSHA256 } = action.payload;\n    delete draft[coordinateSHA256];\n  }\n  if (coordinateReceived.match(action)) {\n    const { coordinate, coordinateSHA256 } = action.payload;\n    draft[coordinateSHA256] = { ...coordinate, coordinateSHA256 };\n  }\n}, INITIAL_STATE);\n\nexport default coordinates;\n","import { combineReducers } from \"redux\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\";\nimport AppReducer from \"./AppReducer\";\nimport settings from \"./settings\";\nimport coordinates from \"./CoordinatesReducer\";\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders: OrdersReducer,\n  app: AppReducer,\n  settings,\n  coordinates\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\nimport { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state) ?? \"\";\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = publicKey => (state: State): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey ?? \"\");\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n\nexport const selectAllOtherUsers = createSelector(\n  (state: State) => state.userProfiles,\n  (state: State) => state.node.publicKey,\n  (users, selfPublicKey): Schema.User[] => {\n    return Object.values(users).filter(\n      user => user.publicKey !== selfPublicKey\n    );\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectFollows = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.follows,\n  (selfPublicKey, follows) => {\n    return follows.filter(f => f.user !== selfPublicKey);\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { PublishedContent } from \"../../schema\";\n\nexport const selectOwnPublishedContent = createSelector(\n  (state: State) => state.content.publishedContent,\n  (state: State) => state.content.publicContent,\n  (privateContent, publicContent): Record<string, PublishedContent> => {\n    return {\n      ...privateContent,\n      ...publicContent\n    };\n  }\n);\n","import { createSelector } from \"reselect\";\nimport uniq from \"lodash/uniq\";\nimport * as Common from \"shock-common\";\n\nimport { State } from \"../../reducers\";\nimport * as Schema from \"../../schema\";\n\nexport const selectConvos: (state: State) => Schema.Convo[] = createSelector(\n  (state: State) => state.chat.convos,\n  convos => {\n    return Object.values(convos);\n  }\n);\n\nexport const selectSingleConvo = (convoID: string) => (\n  state: State\n): Schema.Convo | null => {\n  const convo = state.chat.convos[convoID];\n  return convo ?? null;\n};\n\n/**\n * TODO: Memoize.\n */\nexport const selectIsInContact = (publicKey: string) => (\n  state: State\n): boolean => {\n  return !!Object.values(state.chat.convos).find(\n    convo => convo.with === publicKey\n  );\n};\n\nexport const selectCurrentHandshakeAddress = (state: State) =>\n  state.chat.currentHandshakeAddress;\n\nexport const selectReceivedRequests: (\n  state: State\n) => Schema.HandshakeReqNew[] = createSelector(\n  (state: State) => state.chat.receivedRequests,\n  selectConvos,\n  (receivedRequests, convos) => {\n    return Object.values(receivedRequests).filter(\n      req => !convos.find(convo => convo.id === req.receiverConvoID)\n    );\n  }\n);\n\nexport const selectAllMessages = (state: State) => state.chat.convoToMessages;\n\nexport const selectContacts = createSelector(\n  (state: State) => state.chat.convos,\n  (state: State) => state.userProfiles,\n  (convos, users): Common.User[] => {\n    const _publicKeys = Object.values(convos).map(convo => convo.with);\n    const publicKeys = uniq(_publicKeys);\n    return publicKeys.map(publicKey => {\n      const user = users[publicKey];\n      if (!user) {\n        return Common.createEmptyUser(publicKey);\n      }\n      return user;\n    });\n  }\n);\n\nexport const selectCommunication = (convoIDOrRequestID: string) => (\n  state: State\n): Schema.Convo | Schema.HandshakeReqNew | null => {\n  const maybeConvo = state.chat.convos[convoIDOrRequestID];\n  const maybeRequest = state.chat.receivedRequests[convoIDOrRequestID];\n\n  if (maybeRequest) {\n    return maybeRequest;\n  }\n\n  if (maybeConvo) {\n    return maybeConvo;\n  }\n\n  return null;\n};\n\nexport const selectConvoMessages = (convoID: string) => (\n  state: State\n): Schema.ConvoMsg[] => {\n  return Object.values(state.chat.convoToMessages[convoID]).sort((a, b) => {\n    return b.timestamp - a.timestamp;\n  });\n};\n","import * as Common from \"shock-common\";\nimport pick from \"lodash/pick\";\nimport pickBy from \"lodash/pickBy\";\nimport { createSelector } from \"reselect\";\n\nimport * as Schema from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\nimport { selectFollows } from \"./follows\";\n\nexport const selectFeedPosts = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.posts,\n  (selfPublicKey, posts) => {\n    // TODO: fix self-follow bug\n    return pickBy(posts, (_, publicKey) => publicKey !== selfPublicKey);\n  }\n);\n\nexport const selectAllPosts = (state: State) => state.feed.posts;\n\nexport const selectAllSharedPosts = (state: State) => state.feed.sharedPosts;\n\nexport const selectSinglePost = (authorId: string, postID: string) => (\n  state: State\n): Schema.Post | null => {\n  return state.feed.posts[authorId]?.find(post => post.id === postID) || null;\n};\n\nexport const selectPostsNewestToOldest = (publicKey: string) => (\n  state: State\n): Array<Schema.Post | Common.SharedPost> => {\n  const posts = state.feed.posts[publicKey]?.slice() || [];\n  const sharedPostsMap = state.feed.sharedPosts[publicKey] || {};\n  const sharedPosts = Object.values(sharedPostsMap);\n  const allPosts = [...posts, ...sharedPosts];\n\n  allPosts.sort((a, b) => {\n    const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n    const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n    return beta - alpha;\n  });\n\n  return allPosts;\n};\n\nexport const selectSharedPost = (sharer: string, postID: string) => (\n  state: State\n): Common.SharedPost | null => {\n  const sharedPostsMap = state.feed.sharedPosts[sharer] || {};\n  return sharedPostsMap[postID] || null;\n};\n\nexport const selectAllPostsFromFollowedNewestToOldest = createSelector(\n  selectAllPosts,\n  selectAllSharedPosts,\n  selectFollows,\n  (posts, sharedPosts, follows): Array<Schema.Post | Common.SharedPost> => {\n    const followedPublicKeys = follows.map(f => f.user);\n    const filteredPosts = pick(posts, followedPublicKeys);\n    const filteredShared = pick(sharedPosts, followedPublicKeys);\n\n    const allNonShared = Object.values(filteredPosts).flat();\n    const allShared = Object.values(filteredShared)\n      .map(records => Object.values(records))\n      .flat();\n\n    const all = [...allNonShared, ...allShared].sort((a, b) => {\n      const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n      const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n      return beta - alpha;\n    });\n\n    return all;\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { CoordinateWithHash } from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nexport const selectAllCoordinates = createSelector(\n  (state: State) => state.coordinates,\n  (coordinates): CoordinateWithHash[] => {\n    return Object.values(coordinates);\n  }\n);\n\nexport const selectAllCoordinatesNewestToOldest = createSelector(\n  selectAllCoordinates,\n  (coords): CoordinateWithHash[] => {\n    return coords.slice().sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  }\n);\n\nexport const selectSingleCoordinate = (coordinateSHA256: string) => (\n  state: State\n) => state.coordinates[coordinateSHA256];\n","import {\n  useSelector as originalUseSelector,\n  TypedUseSelectorHook\n} from \"react-redux\";\n\nimport { State } from \"../../reducers\";\n\nexport const useSelector: TypedUseSelectorHook<State> = (selector, eqFn) =>\n  originalUseSelector(selector, eqFn);\n\nexport const selectRoot = (state: State) => state;\n\nexport * from \"./auth\";\nexport * from \"./users\";\nexport * from \"./follows\";\nexport * from \"./publishedContent\";\nexport * from \"./chat\";\nexport * from \"./feed\";\nexport * from \"./coordinates\";\n","import {\n  createStore,\n  applyMiddleware,\n  compose,\n  AnyAction,\n  Action\n} from \"redux\";\nimport thunk, { ThunkDispatch } from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport {\n  useSelector as origUseSelector,\n  useDispatch as originalUseDispatch\n} from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport const useDispatch = (): ThunkDispatch<State, undefined, Action> => {\n  return originalUseDispatch() as ThunkDispatch<State, undefined, Action>;\n};\n\nexport * from \"./selectors\";\n","import Http from \"axios\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\nimport { exchangeKeyPair } from \"../actions/EncryptionActions\";\nimport * as Encryption from \"./Encryption\";\nimport { safeParseJSON } from \"./JSON\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\") {\n    return config;\n  }\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return { ...response, data: safeParseJSON(response.data) };\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const { relayId } = store.getState().node;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n      if (relayId) {\n        /////\n        config.headers.common[\"x-shock-hybrid-relay-id-x\"] = relayId;\n        /////\n      }\n    }\n\n    // @ts-ignore\n    config.originalData = config.originalData || config.data;\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const { store } = await import(\"../store\");\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      if (\n        response?.data.field === \"deviceId\" &&\n        (error.config.retries ?? 0) < 2\n      ) {\n        store.dispatch(setAuthenticated(false));\n        const keyPair = await exchangeKeyPair()(store.dispatch);\n        error.config.retries = (error.config.retries ?? 0) + 1;\n        return Http({\n          ...error.config,\n          data: error.config.originalData,\n          headers: {\n            ...error.config.headers,\n            \"encryption-device-id\": keyPair.deviceId\n          }\n        });\n      }\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const set = createAction<{\n  key: string;\n  value: string | number | boolean;\n}>(\"settings/set\");\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\nimport {\n  PublishedContent,\n  isPublishedContent,\n  PublicContentItem,\n  isPublicContentItem\n} from \"../schema\";\nimport { parseJson, logger } from \"../utils\";\nimport { openDialog } from \"./AppActions\";\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB: \"content/setSeedProviderPub\",\n  SET_SEED_INFO: \"content/setSeedInfo\",\n\n  PUBLISHED_CONTENT_ADDED: \"content/publishedContentAdded\",\n  PUBLISHED_CONTENT_REMOVED: \"content/publishedContentRemoved\",\n\n  ADD_UNLOCKED_CONTENT: \"content/addUnlocked\",\n  ADD_STREAM: \"content/addStream\",\n  REMOVE_STREAM: \"content/removeStream\",\n  ADD_AVAILABLE_TOKEN: \"content/addToken\",\n  REMOVE_USED_TOKEN: \"content/removeToken\",\n  ADD_STREAM_TOKEN: \"content/addStreamToken\",\n  REMOVE_STREAM_TOKEN: \"content/removeStreamToken\"\n} as const;\n\nexport const setSeedProviderPub = (\n  pub,\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    let value: string | Record<string, any> = {\n      $$__ENCRYPT__FOR: \"me\",\n      value: pub\n    };\n    if (!pub) {\n      value = \"\";\n    }\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>preferencesSeedServiceProvider\",\n      value\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (\n  seedUrl: string,\n  seedToken: string,\n  dontBackup = false\n) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0, -1) : seedUrl;\n  if (!dontBackup) {\n    const infoS = JSON.stringify({ seedUrl: cleanUrl, seedToken });\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>preferencesSeedServiceData\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: infoS\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: { seedUrl: cleanUrl, seedToken }\n  });\n};\n\nexport const publishedContentAdded = createAction<{\n  content: PublishedContent;\n  res: { ok: boolean; id: string };\n}>(ACTIONS.PUBLISHED_CONTENT_ADDED);\n\nexport const publicContentAdded = createAction<{\n  item: PublicContentItem;\n}>(\"content/publicContentAdded\");\n\nexport const addPublishedContent = (\n  content: PublishedContent | PublicContentItem,\n  type: \"public\" | \"private\"\n) => async dispatch => {\n  if (type === \"public\") {\n    if (!isPublicContentItem(content)) {\n      throw new TypeError(\n        `Expected content to upload to be a PublicContentItem`\n      );\n    }\n\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>publishedContentPublic>${content.id}`,\n      value: content\n    });\n\n    dispatch(\n      publicContentAdded({\n        item: content\n      })\n    );\n\n    return content;\n  } else {\n    const { data } = await Http.post<{ ok: boolean; id: string }>(\n      \"/api/gun/set\",\n      {\n        path: \"$user>publishedContent\",\n        value: {\n          $$__ENCRYPT__FOR: \"me\",\n          value: JSON.stringify(content)\n        }\n      }\n    );\n    dispatch(\n      publishedContentAdded({\n        content,\n        res: data\n      })\n    );\n    return data;\n  }\n};\n\nexport const publishedContentRemoved = createAction<{ id: string }>(\n  ACTIONS.PUBLISHED_CONTENT_REMOVED\n);\n\nexport const unlockContent = (amt, owner, postID) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"contentReveal\",\n    amt,\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: postID\n  });\n  const revealRes = data.orderAck.response;\n  if (revealRes && revealRes.unlockedContents) {\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type: ACTIONS.ADD_UNLOCKED_CONTENT,\n          data: { contentPath: `${owner}>posts>${postID}`, content }\n        });\n      }\n    }\n  }\n};\nexport const addStream = (\n  {\n    seedToken,\n    liveToken,\n    streamUrl,\n    streamPostId,\n    streamContentId,\n    streamStatusUrl,\n    streamBroadcasterUrl,\n    tipOverlayUrl\n  },\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: JSON.stringify({\n          seedToken,\n          liveToken,\n          streamUrl,\n          streamPostId,\n          streamContentId,\n          streamStatusUrl,\n          streamBroadcasterUrl,\n          tipOverlayUrl\n        })\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {\n      seedToken,\n      liveToken,\n      streamUrl,\n      streamPostId,\n      streamContentId,\n      streamStatusUrl,\n      streamBroadcasterUrl,\n      tipOverlayUrl\n    }\n  });\n};\nexport const removeStream = (\n  dontBackup = false,\n  noDialog = false\n) => async dispatch => {\n  if (!noDialog) {\n    openDialog({\n      text: \"The recording of the stream will be published in a few moments.\"\n    })(dispatch);\n  }\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: \"NO DATA\"\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeUnavailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\n\nconst OWN_PUBLISHED_CONTENT_QUERY = \"$user::publishedContent::map.on\";\n\nexport const subOwnPublishedContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  console.debug(`Subscribing to own published content`);\n  const subscription = await rifle({\n    query: OWN_PUBLISHED_CONTENT_QUERY,\n    reconnect: true,\n    publicKey: \"me\",\n    onData: async (content: string, key) => {\n      try {\n        console.debug(`Received own content:`);\n        console.debug(content);\n\n        if (typeof key !== \"string\") {\n          throw new TypeError(`Invalid content key received: ${key}`);\n        }\n\n        if (!content) {\n          dispatch(\n            publishedContentRemoved({\n              id: key\n            })\n          );\n          return;\n        }\n\n        if (typeof content !== \"string\") {\n          throw new TypeError(\n            `Invalid content (in key ${key}) received (${JSON.stringify(\n              content\n            )})`\n          );\n        }\n\n        const parsed = parseJson(content);\n\n        if (!isPublishedContent(parsed)) {\n          throw new TypeError(\n            `Invalid content received (might be incomplete replication): ${JSON.stringify(\n              parsed,\n              null,\n              2\n            )}`\n          );\n        }\n\n        dispatch(\n          publishedContentAdded({\n            content: parsed,\n            res: {\n              id: key,\n              ok: true\n            }\n          })\n        );\n      } catch (e) {\n        console.error(`Error inside own published content sub:`);\n        console.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n\nexport const unsubOwnPublishedContent = () => () => {\n  console.debug(`Unsubbing own published content.`);\n  unsubscribeRifleByQuery(OWN_PUBLISHED_CONTENT_QUERY);\n};\n\nexport const subOwnPublicContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  logger.debug(`Subscribing to own public content`);\n  const subscription = await rifle({\n    query: \"$user::publishedContentPublic::map.on\",\n    reconnect: true,\n    onError(e) {\n      alert(`Error inside own public content rifle: ${JSON.stringify(e)}`);\n      logger.error(`Error inside own public content rifle: `, e);\n    },\n    onData: async (item: unknown) => {\n      try {\n        if (item === null) {\n          return; // was deleted\n        }\n        logger.debug(`Received own public item:`);\n        logger.debug(item);\n\n        if (!isPublicContentItem(item)) {\n          throw new TypeError(\n            `Invalid public content item: ${JSON.stringify(item, null, 2)}`\n          );\n        }\n\n        dispatch(\n          publicContentAdded({\n            item\n          })\n        );\n      } catch (e) {\n        logger.error(`Error inside own public content sub:`);\n        logger.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\",\n  LOAD_LIGHTNING_INFO: \"wallet/lightningInfo/load\"\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  try {\n    const { data } = await Http.get(`/api/lnd/balance`);\n\n    dispatch({\n      type: ACTIONS.LOAD_BALANCE,\n      data: {\n        channelBalance: data.channel_balance,\n        confirmedBalance: data.confirmed_balance,\n        pendingChannelBalance: data.pending_channel_balance\n      }\n    });\n  } catch (e) {\n    console.error(\n      `When trying to fetch the balance for the wallet, an error ocurred:`,\n      e\n    );\n  }\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\n      \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n    );\n    const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n    dispatch({\n      type: ACTIONS.LOAD_USD_RATE,\n      data: exchangeRate\n    });\n  } catch (e) {\n    console.error(`An error happened when trying to fetch the USD rate:`, e);\n  }\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { transactions } = getState().wallet;\n\n    if (\n      (transactions.page >= page && !reset) ||\n      transactions.totalPages < page\n    ) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/transactions\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred when fetching transactions (fetchTransactions()):`,\n      e\n    );\n  }\n};\n\nexport const fetchChannels = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n    dispatch({\n      type: ACTIONS.LOAD_CHANNELS,\n      data: data.channels\n    });\n  } catch (e) {\n    console.error(\n      `An ocurred ocurred when fetching channels (fetchChannels()):`,\n      e\n    );\n  }\n};\n\nexport const fetchPeers = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n    dispatch({\n      type: ACTIONS.LOAD_PEERS,\n      data: data.peers\n    });\n\n    return data;\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching peers (fetchPeers()) (will be re-thrown):`,\n      e\n    );\n    throw e;\n  }\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { invoices } = getState().wallet;\n\n    if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/invoices\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching invoices (fetchInvoices()):`,\n      e\n    );\n  }\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n  } catch (err) {\n    console.error(\n      `An error ocurred while connecting peer --| ${host} |-- with public key --| ${publicKey} |-- in connectPeer()`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    dispatch(fetchChannels());\n  } catch (err) {\n    console.error(\n      `An error ocurred while opening a channel (openChannel()) with public key --| ${publicKey} |--, channel capacity: --| ${channelCapacity} |-- and push amount: --| ${pushAmount} |--:`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const FetchLightningInfo = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/getinfo\");\n    dispatch({\n      type: ACTIONS.LOAD_LIGHTNING_INFO,\n      data\n    });\n  } catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Buffer;\n  ephemPublicKey: Buffer;\n  iv: Buffer;\n  mac: Buffer;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Buffer | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Buffer | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Buffer) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Buffer | string): Buffer => {\n  if (Buffer.isBuffer(key)) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    Buffer.isBuffer(encryptedMessage.ciphertext) &&\n    Buffer.isBuffer(encryptedMessage.iv) &&\n    Buffer.isBuffer(encryptedMessage.mac) &&\n    Buffer.isBuffer(encryptedMessage.ephemPublicKey)\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    Buffer.isBuffer(encryptedMessage.ciphertext) &&\n    Buffer.isBuffer(encryptedMessage.iv) &&\n    Buffer.isBuffer(encryptedMessage.mac) &&\n    Buffer.isBuffer(encryptedMessage.ephemPublicKey)\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName) ||\n  process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\";\n\nexport const generateKeyPair = () => {\n  const privateKey: Buffer = ECCrypto.generatePrivate();\n  const publicKey: Buffer = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  try {\n    const processedPrivateKey = processKey(privateKey);\n    const decryptedMessageBuffer: Buffer = await ECCrypto.decrypt(\n      processedPrivateKey,\n      convertToEncryptedMessage(encryptedMessage)\n    );\n    const decryptedMessage = decryptedMessageBuffer.toString(\"utf-8\");\n    const parsedMessage = safeParseJSON(decryptedMessage);\n\n    return parsedMessage;\n  } catch (err) {\n    if (err.message?.toLowerCase() === \"bad mac\") {\n      console.warn(\n        \"Bad Mac!\",\n        err,\n        convertToEncryptedMessage(encryptedMessage)\n      );\n    }\n\n    throw err;\n  }\n};\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Schema from \"../schema\";\nimport * as Utils from \"../utils\";\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\",\n  RELOAD_FEED: \"feed/reload\",\n  RESET_DEFAULT_FOLLOWS: \"follows/reload\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const postDeleted = createAction<{\n  author: string;\n  id: string;\n}>(\"feed/postDeleted\");\n\nexport const postReceived = createAction<{\n  author: string;\n  id: string;\n  post: Schema.PostRaw;\n}>(\"feed/postReceived\");\n\nexport const subSinglePost = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}::on`,\n      onData(post: string) {\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author,\n              id: postID\n            })\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )}: ${e.message}`\n        );\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nexport const subscribeUserPosts = (publicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${publicKey}::posts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside posts subscription for ...${publicKey.slice(-8)} -> `,\n          e\n        );\n        alert(\n          `Error inside posts subscription for ...${publicKey.slice(-8)}: ${\n            e.message\n          }`\n        );\n      },\n      onData: (post: unknown, postID: string) => {\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author: publicKey,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author: publicKey,\n              id: postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In posts subscription for user ...${publicKey.slice(\n              -8\n            )}, invalid data -> `,\n            post\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to posts for ...${publicKey.slice(-8)} -> `,\n      e\n    );\n    alert(`Could not sub to posts for ...${publicKey.slice(-8)}: ${e.message}`);\n\n    return () => {};\n  }\n};\n\nexport const contentItemReceived = createAction<{\n  author: string;\n  contentItem: Common.ContentItem;\n  id: string;\n  postID: string;\n}>(\"feed/contentItemReceived\");\n\nexport const subPostContent = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}>contentItems::map.on`,\n      onData(contentItem: unknown, id: string) {\n        // CAST: unfortunate isContentItem typings\n        if (Common.isContentItem(contentItem)) {\n          dispatch(\n            contentItemReceived({\n              author,\n              contentItem,\n              id,\n              postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Invalid content item (${id}) in post content subscription from ..${author.slice(\n              -8\n            )} for post ${postID} -> `,\n            contentItem\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID} -> `,\n          e\n        );\n        alert(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID}: ${e.message}`\n        );\n      }\n    });\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to post content from ...${author.slice(\n        -8\n      )} for post ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not sub to posts from ...${author.slice(-8)} for post ${postID}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async dispatch => {\n  const subscription = await rifle({\n    query: FOLLOWS_QUERY,\n    reconnect: true,\n    onData: async (follow, key) => {\n      console.info(`processing follow`);\n      console.info(follow);\n      if (typeof key !== \"string\") {\n        console.warn(`Invalid follow key received: ${key}`);\n        return;\n      }\n\n      if (!follow) {\n        dispatch(removeFollow(key));\n        return;\n      }\n\n      if (typeof follow.user !== \"string\") {\n        console.warn(`Invalid follow user received (${follow.user})`);\n        return;\n      }\n\n      dispatch(addFollow(follow));\n    }\n  });\n\n  console.debug(\"subbing follows\");\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  unsubscribeRifleByQuery(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n\nexport const reloadFeed = () => ({\n  type: ACTIONS.RELOAD_FEED\n});\n\nexport const reloadFollows = (follows: Common.Follow[]) => ({\n  type: ACTIONS.RESET_DEFAULT_FOLLOWS,\n  data: follows\n});\n\n// #region sharedPosts\n\nexport const sharedPostDeleted = createAction<{\n  postID: string;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostDeleted\");\n\nexport const sharedPostReceived = createAction<{\n  originalAuthor: string;\n  postID: string;\n  shareDate: number;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostReceived\");\n\nexport const subSharedPosts = (sharerPublicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${sharerPublicKey}::sharedPosts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )}: ${e.message}`\n        );\n      },\n      onData: (sharedPost: unknown, postID: string) => {\n        if (Common.isSharedPostRaw(sharedPost)) {\n          dispatch(\n            sharedPostReceived({\n              originalAuthor: sharedPost.originalAuthor,\n              postID,\n              shareDate: sharedPost.shareDate,\n              sharerPublicKey\n            })\n          );\n        } else if (sharedPost === null) {\n          dispatch(\n            sharedPostDeleted({\n              postID,\n              sharerPublicKey\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In shared posts subscription for user ...${sharerPublicKey.slice(\n              -8\n            )}, invalid data -> `,\n            sharedPost\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\n// #endregion sharedPosts\n\nexport const postTipReceived = createAction<{\n  author: string;\n  postID: string;\n  tipAmt: number;\n  tipID: string;\n}>(\"feed/postTipReceived\");\n\nexport const subPostTips = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}>tipsSet::map.on`,\n      onData(tipAmt: unknown, tipID: string) {\n        const nTipAmount = Number(tipAmt);\n        if (!isNaN(nTipAmount)) {\n          dispatch(\n            postTipReceived({\n              author,\n              postID,\n              tipAmt: nTipAmount,\n              tipID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Post ${postID} tips sub, tipID ${tipID} got non number value -> `,\n            tipAmt\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID}: ${e.message}`\n    );\n    return () => {};\n  }\n};\n","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { exchangeKeyPair } from \"./EncryptionActions\";\nimport { connectSocket } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_WEBCLIENT_PREFIX: \"node/setWebClientPrefix\",\n  SET_RELAY_ID: \"auth/relay/set\",\n  SET_ACCESS_SECRET: \"auth/accessSecret/set\"\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nexport const fetchNodeHealth = (hostIP, relayId) => async dispatch => {\n  try {\n    const headers = {};\n    if (relayId) {\n      headers[\"x-shock-hybrid-relay-id-x\"] = relayId;\n    }\n    const { data } = await Http.get(`${hostIP}/healthz`, {\n      headers\n    });\n    if (!data) {\n      throw new Error(\n        `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n      );\n    }\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (\n  hostIP,\n  resetData = true,\n  relayId = null,\n  accessSecret = null\n) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n    if (relayId) {\n      dispatch(setRelayId(relayId));\n    }\n    if (accessSecret) {\n      dispatch(setAccessSecret(accessSecret));\n    }\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(exchangeKeyPair())\n    ]);\n\n    connectSocket(host, true);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(\n      `https://${sanitizedHostIP}`,\n      relayId\n    )(dispatch);\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(\n    `http://${sanitizedHostIP}`,\n    relayId\n  )(dispatch);\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({\n  alias,\n  password,\n  accessSecret\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/auth\", {\n      alias,\n      password,\n      accessSecret\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({\n  alias,\n  password,\n  accessSecret\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password,\n      accessSecret\n    });\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    await Http.post(\"/api/initUserInformation\", {});\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet\", {\n      alias,\n      password\n    });\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    await Http.post(\"/api/initUserInformation\", {});\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const setWebclientPrefix = prefix => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_WEBCLIENT_PREFIX,\n    data: prefix\n  });\n};\n\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n\nexport const setAccessSecret = accessSecret => ({\n  type: ACTIONS.SET_ACCESS_SECRET,\n  data: accessSecret\n});\n","import * as Common from \"shock-common\";\nimport isFinite from \"lodash/isFinite\";\n\nconst createValidator = <T extends Record<string, unknown>>(\n  valMap: Record<keyof T, (val: any) => void>,\n  baseValidator: (o: unknown) => boolean = () => true\n) => (o: unknown): o is T => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  if (!baseValidator(o)) {\n    return false;\n  }\n\n  return Object.entries(valMap).every(([key, validator]) => {\n    return validator(o[key]);\n  });\n};\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface HandshakeReqNew {\n  /**\n   * Sender's epub.\n   */\n  epub: string;\n  /**\n   * Sender's public key.\n   */\n  from: string;\n  /**\n   * Handshake address where the request was written to.\n   */\n  handshakeAddress: string;\n  /**\n   * The request's unique id.\n   */\n  id: string;\n\n  /**\n   * The ID for the receiver's conversation feed in their user graph. The sender\n   * will preemptively watch for messages in the receiver's conversation part of\n   * their user graph under this ID. When the receiver accepts, they will create\n   * the conversation feed under this ID and start sending messages. The initial\n   * $$__INITIAL__MSG sentinel message signals to the sender the request was\n   * accepted.\n   */\n  receiverConvoID: string;\n\n  /**\n   * The ID for the sender's conversation feed in their user graph. This\n   * conversation feed is already present upon sending the request.\n   */\n  senderConvoID: string;\n\n  /**\n   * Timestamp.\n   */\n  timestamp: number;\n}\n\nexport const isHandshakeReqNew = (o: unknown): o is HandshakeReqNew => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as HandshakeReqNew;\n\n  if (!Common.isPopulatedString(obj.epub)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.from)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.handshakeAddress)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.receiverConvoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.senderConvoID)) {\n    return false;\n  }\n\n  if (typeof obj.timestamp !== \"number\") {\n    return false;\n  }\n\n  return true;\n};\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Convo {\n  /**\n   * The id for the conversation in the recipient's user graph.\n   */\n  counterpartConvoID: string;\n  /**\n   * The id.\n   */\n  id: string;\n  /**\n   * The recipient's public key.\n   */\n  with: string;\n  /**\n   * The recipient's epub.\n   */\n  withEpub: string;\n}\n\nexport const isConvo = (o: unknown): o is Convo => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as Convo;\n\n  if (!Common.isPopulatedString(obj.counterpartConvoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  return Common.isPopulatedString(obj.with);\n};\n\nexport interface ConvoMsg {\n  body: string;\n  convoID: string;\n  err: string;\n  id: string;\n  state: \"ok\" | \"error\" | \"received\" | \"sending\";\n  timestamp: number;\n}\n\nexport const isConvoMsg = (o: unknown): o is ConvoMsg => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as ConvoMsg;\n\n  if (!Common.isPopulatedString(obj.body)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.convoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  if (typeof obj.timestamp !== \"number\") {\n    return false;\n  }\n\n  return true;\n};\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  tips: Record<string, number>;\n  type: \"post\";\n}\n\nexport interface PublishedContent {\n  type: \"image/embedded\" | \"video/embedded\";\n  magnetURI: string;\n  width: number;\n  height: number;\n  title: string;\n  description: string;\n}\n\nexport const isPublishedContent = (o: unknown): o is PublishedContent => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublishedContent;\n\n  if (typeof obj.description !== \"string\") {\n    return false;\n  }\n  if (typeof obj.height !== \"number\") {\n    return false;\n  }\n  if (typeof obj.width !== \"number\") {\n    return false;\n  }\n  if (!Common.isPopulatedString(obj.title)) {\n    return false;\n  }\n  if (obj.type !== \"image/embedded\" && obj.type !== \"video/embedded\") {\n    return false;\n  }\n  return true;\n};\n\nexport interface Subscription {\n  off(): void;\n}\n\n/**\n * Sentinel value that signals the recipient disconnected inside the user to\n * incoming map.\n */\nexport const DID_DISCONNECT = \"DID_DISCONNECT\";\nexport interface PublicContentItem extends PublishedContent {\n  id: string;\n  author: string;\n  timestamp: number;\n}\n\nexport const isPublicContentItem = (o: unknown): o is PublicContentItem => {\n  if (!isPublishedContent(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublicContentItem;\n\n  if (!Common.isPopulatedString(obj.author)) {\n    return false;\n  }\n\n  return typeof obj.timestamp === \"number\";\n};\n\nexport type FeeRate = \"hourFee\" | \"halfHourFee\" | \"fastestFee\";\n\nexport interface CoordinateWithHash extends Common.Coordinate {\n  coordinateSHA256: string;\n}\n\nexport interface ContentRevealCoordinateMetadataInbound {\n  /**\n   * The post ID.\n   */\n  ackInfo: string;\n  /**\n   * Content ID to magnet URI.\n   */\n  unlockedContents: Record<string, string>;\n}\n\nexport interface ContentRevealCoordinateMetadataOutbound {\n  /**\n   * Same as ContentRevealCoordinateMetadataInbound.\n   */\n  response: ContentRevealCoordinateMetadataInbound;\n  /**\n   * Order type.\n   */\n  type: \"orderAck\";\n}\n\n/**\n * Post as stored in Gun. Without `contentItems`.\n */\nexport type PostRaw = Omit<Common.RawPost, \"contentItems\">;\n\nexport const isPostRaw = createValidator<PostRaw>({\n  date: isFinite,\n  status: Common.isPopulatedString,\n  tags: (val: string) => typeof val === \"string\",\n  title: Common.isPopulatedString\n});\n\nexport interface NodeInfo {\n  uris: string[];\n  synced_to_chain: boolean;\n  synced_to_graph: boolean;\n  identity_pubkey: string;\n  best_header_timestamp: string;\n  block_height: number;\n  num_pending_channels: number;\n  version: string;\n}\n","import { createAction } from \"@reduxjs/toolkit\";\nimport * as Common from \"shock-common\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport * as Utils from \"../utils\";\nimport * as Schema from \"../schema\";\nimport { rifle } from \"../utils/WebSocket\";\n\n//#region receivedRequests\n\n/**\n * Dispatched when the handshake address changes.\n */\nexport const handshakeAddressUpdated = createAction<{\n  handshakeAddress: string;\n}>(\"handshakeAddressUpdated\");\n\n/**\n * Subscribe to the current handshake address stored in gun.\n * @returns A thunk that returns a subscription.\n */\nexport const subCurrentHandshakeAddress = () => (\n  dispatch: (action: any) => void\n) => {\n  Utils.logger.debug(`Subscribing to current handshake address.`);\n  try {\n    return rifle({\n      query: `$user::currentHandshakeAddress::on`,\n      onData: handshakeAddress => {\n        Utils.logger.debug(\n          `Received current handshake address: ${handshakeAddress}`\n        );\n\n        if (!Common.isPopulatedString(handshakeAddress)) {\n          Utils.logger.error(\n            `Current handshake address not an string -> `,\n            JSON.stringify(handshakeAddress)\n          );\n          return;\n        }\n\n        dispatch(\n          handshakeAddressUpdated({\n            handshakeAddress\n          })\n        );\n      }\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to current handshake address: ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to current handshake address:`,\n      e\n    );\n  }\n};\n\n/**\n * Dispatched when a handshake request is received inside the current handshake\n * node.\n */\nexport const receivedHandshakeRequest = createAction<{\n  receivedRequest: Schema.HandshakeReqNew;\n}>(\"chat/receivedHandshakeRequest\");\n\n/**\n * Dispatched when a handshake request is deleted after accepting  it.\n */\nexport const handshakeRequestDeleted = createAction<{\n  id: string;\n}>(\"chat/handshakeRequestDeleted\");\n\n/**\n * Subscribe to received requests inside the specified handshake node.\n * @returns A thunk that returns a subscription.\n */\nexport const subHandshakeNode = (handshakeAddress: string) => (\n  dispatch: (action: any) => void,\n  getState: () => { chat: { currentHandshakeAddress: string } }\n): Promise<Schema.Subscription> => {\n  Utils.logger.debug(`Subscribing to handshake node: ${handshakeAddress} .`);\n  try {\n    return rifle({\n      query: `$gun::handshakeNodes>${handshakeAddress}::map.on`,\n      epubField: \"epub\",\n      onData: (handshakeRequest: Schema.HandshakeReqNew, id: string) => {\n        Utils.logger.debug(\n          `Subscription to handshake node: ${handshakeAddress} -> `,\n          handshakeRequest\n        );\n        const {\n          chat: { currentHandshakeAddress }\n        } = getState();\n        Utils.logger.debug(`Current address: ${currentHandshakeAddress}`);\n        if (handshakeAddress !== currentHandshakeAddress) {\n          return;\n        }\n        if (Schema.isHandshakeReqNew(handshakeRequest)) {\n          dispatch(\n            receivedHandshakeRequest({\n              receivedRequest: handshakeRequest\n            })\n          );\n        } else if (handshakeRequest === null) {\n          dispatch(\n            handshakeRequestDeleted({\n              id\n            })\n          );\n        } else {\n          Utils.logger.debug(`Not a handshake request -> `, handshakeRequest);\n        }\n      }\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to handshake node with address: ${handshakeAddress} : ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to handshake node with address: ${handshakeAddress} : `,\n      e\n    );\n  }\n};\n\n//#endregion receivedRequests\n\n//#endregion sentRequests\n\nconst createOutgoingConversationFeed = (\n  outgoingConvoID: string,\n  publicKey: string,\n  epub: string,\n  incomingConvoID: string\n) => {\n  const msgID = uuidv4();\n\n  const newOutgoingConvo: {\n    [K in keyof Schema.Convo]: any;\n  } & {\n    messages: Record<\n      string,\n      {\n        [K in keyof Schema.ConvoMsg]: any;\n      }\n    >;\n  } = {\n    id: outgoingConvoID,\n\n    with: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: publicKey\n    },\n\n    withEpub: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: epub\n    },\n\n    counterpartConvoID: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: incomingConvoID\n    },\n\n    messages: {\n      [msgID]: {\n        id: msgID,\n        body: {\n          $$__ENCRYPT__FOR: publicKey,\n          $$__EPUB__FOR: epub,\n          value: Common.INITIAL_MSG\n        },\n        timestamp: Date.now(),\n        convoID: outgoingConvoID,\n        state: \"ok\",\n        err: \"\"\n      }\n    }\n  };\n\n  return newOutgoingConvo;\n};\n\nexport const acceptHandshakeRequest = (requestId: string) => async (\n  _: unknown,\n  getState: () => {\n    chat: { receivedRequests: Record<string, Schema.HandshakeReqNew> };\n  }\n) => {\n  const req: Schema.HandshakeReqNew = getState().chat.receivedRequests[\n    requestId\n  ];\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$user>convos>${req.receiverConvoID}`,\n    value: createOutgoingConversationFeed(\n      req.receiverConvoID,\n      req.from,\n      req.epub,\n      req.senderConvoID\n    )\n  });\n\n  Utils.Http.post(`/api/gun/put`, {\n    path: `$gun>handshakeNodes>${req.handshakeAddress}>${req.id}`,\n    value: null\n  });\n};\n\nexport const sendHandshakeRequest = (publicKey: string) => async (\n  _: unknown,\n  getState: () => { node: { publicKey: string } }\n) => {\n  Utils.logger.debug(\n    `Sending handshake request to ${publicKey.slice(0, 8)}...`\n  );\n  const epubP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(epub) {\n        Utils.logger.debug(\n          `Got epub for public Key ${publicKey.slice(0, 8)}... : ${epub}`\n        );\n        if (Common.isPopulatedString(epub)) {\n          subscription.then(sub => sub.off());\n          res(epub);\n        } else {\n          Utils.logger.debug(\n            `Could not fetch epub for public Key ${publicKey.slice(\n              0,\n              8\n            )}... : ${epub}`\n          );\n          subscription.then(sub => sub.off());\n          rej(new TypeError(`Could not fetch epub`));\n        }\n      },\n      query: `${publicKey}::epub::on`,\n      onError(e) {\n        Utils.logger.debug(\n          `Error when fetch epub for public Key ${publicKey.slice(\n            0,\n            8\n          )}... : ${epub}`\n        );\n        Utils.logger.error(e);\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const handshakeAddressP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(handshakeAddress) {\n        if (Common.isPopulatedString(handshakeAddress)) {\n          res(handshakeAddress);\n          subscription.then(sub => sub.off());\n        } else {\n          rej(new TypeError(`Could not fetch epub`));\n          subscription.then(sub => sub.off());\n        }\n      },\n      query: `${publicKey}::currentHandshakeAddress::on`,\n      onError(e) {\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const selfEpubP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(epub) {\n        if (Common.isPopulatedString(epub)) {\n          res(epub);\n          subscription.then(sub => sub.off());\n        } else {\n          rej(new TypeError(`Could not fetch self epub`));\n          subscription.then(sub => sub.off());\n        }\n      },\n      query: `$user::epub::on`,\n      onError(e) {\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const outgoingConvoID = uuidv4();\n  const incomingConvoID = uuidv4();\n  const requestID = uuidv4();\n  const [epub, handshakeAddress, selfEpub] = await Promise.all([\n    epubP,\n    handshakeAddressP,\n    selfEpubP\n  ]);\n\n  Utils.logger.debug(\n    `Got epub/handshakeaddress/selfEpub, sending request to public Key ${publicKey.slice(\n      0,\n      8\n    )}...`\n  );\n\n  const handshakeReqForGun: {\n    [K in keyof Schema.HandshakeReqNew]: any;\n  } = {\n    id: requestID,\n    from: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: getState().node.publicKey\n    },\n    epub: selfEpub,\n    timestamp: Date.now(),\n    receiverConvoID: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: incomingConvoID\n    },\n    senderConvoID: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: outgoingConvoID\n    },\n    handshakeAddress\n  };\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$gun>handshakeNodes>${handshakeAddress}>${requestID}`,\n    value: handshakeReqForGun\n  });\n\n  // after request was sent let's now create our outgoing feed\n\n  Utils.logger.debug(\n    `Sent request to public Key ${publicKey.slice(\n      0,\n      8\n    )}... will now create outgoing conversation feed`\n  );\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$user>convos>${outgoingConvoID}`,\n    value: createOutgoingConversationFeed(\n      outgoingConvoID,\n      publicKey,\n      epub,\n      incomingConvoID\n    )\n  });\n};\n\nexport const convoReceived = createAction<{ convo: Schema.Convo }>(\n  \"chat/convoReceived\"\n);\n\nexport const convoDeleted = createAction<{ id: string }>(\"chat/convoDeleted\");\n\nexport const subConvos = () => async (\n  dispatch: (action: any) => void,\n  getState: () => { node: { publicKey: string } }\n) => {\n  try {\n    return rifle({\n      query: `$user::convos::map.on`,\n      onData: (convo: Schema.Convo, id: string) => {\n        console.log(\"--------------\");\n        console.log(convo);\n        console.log(\"--------------\");\n        if (convo === null) {\n          dispatch(\n            convoDeleted({\n              id\n            })\n          );\n          return;\n        }\n        if (!Schema.isConvo(convo)) {\n          return;\n        }\n        // @ts-expect-error\n        delete convo._;\n        // @ts-expect-error\n        delete convo.messages;\n        dispatch(\n          convoReceived({\n            convo\n          })\n        );\n      },\n      publicKey: getState().node.publicKey\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to outgoing conversation feeds: ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to outgoing conversation feeds -> `,\n      e\n    );\n  }\n};\n\nexport const messageTransmissionRequested = createAction<{\n  convoID: string;\n  messageID: string;\n  message: string;\n}>(\"chat/messageTransmissionRequested\");\n\nexport const messageTransmissionSucceeded = createAction<{\n  convoID: string;\n  messageID: string;\n}>(\"chat/messageTransmissionSucceeded\");\n\nexport const messageTransmissionFailed = createAction<{\n  convoID: string;\n  errorMessage: string;\n  messageID: string;\n}>(\"chat/messageTransmissionFailed\");\n\nexport const sendMessage = (convoID: string, messageBody: string) => async (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n    };\n  }\n) => {\n  const messageID = uuidv4(); // does not throw, ever...?\n\n  try {\n    const convo = getState().chat.convos[convoID];\n\n    if (messageBody.trim().length === 0) {\n      return;\n    }\n\n    dispatch(\n      messageTransmissionRequested({\n        convoID,\n        messageID,\n        message: messageBody.trim()\n      })\n    );\n\n    const message: Schema.ConvoMsg = {\n      body: ({\n        $$__ENCRYPT__FOR: convo.with,\n        $$__EPUB__FOR: convo.withEpub,\n        value: messageBody\n      } as unknown) as string,\n      convoID,\n      id: messageID,\n      timestamp: Date.now(),\n      state: \"ok\",\n      err: \"\"\n    };\n\n    await Utils.Http.post(`/api/gun/put`, {\n      path: `$user>convos>${convoID}>messages>${messageID}`,\n      value: message\n    });\n\n    dispatch(\n      messageTransmissionSucceeded({\n        convoID,\n        messageID\n      })\n    );\n  } catch (e) {\n    Utils.logger.error(`Error inside sendMessage() -> `, e);\n    dispatch(\n      messageTransmissionFailed({\n        convoID,\n        errorMessage: e.message,\n        messageID\n      })\n    );\n  }\n};\n\nexport const messageTransmissionRetried = createAction<{\n  convoID: string;\n  messageID: string;\n}>(\"chat/messageTransmissionRetried\");\n\nexport const retryMessage = (convoID: string, messageID: string) => async (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n      convoToMessages: Record<\n        string,\n        Record<\n          string,\n          Schema.ConvoMsg & { err: string; state: \"ok\" | \"sending\" | \"error\" }\n        >\n      >;\n    };\n  }\n) => {\n  try {\n    const convo = getState().chat.convos[convoID];\n    const existingMessage = getState().chat.convoToMessages[convoID][messageID];\n\n    if (!existingMessage) {\n      throw new ReferenceError(\n        `Tried to retry sending a message that was not found in redux convoID: ${convoID} & messageID: ${messageID}`\n      );\n    }\n\n    dispatch(\n      messageTransmissionRetried({\n        convoID,\n        messageID\n      })\n    );\n\n    const message: Schema.ConvoMsg = {\n      body: ({\n        $$__ENCRYPT__FOR: convo.with,\n        $$__EPUB__FOR: convo.withEpub\n      } as unknown) as string,\n      convoID,\n      id: messageID,\n      timestamp: Date.now(),\n      state: \"ok\",\n      err: \"\"\n    };\n\n    await Utils.Http.post(`/api/gun/put`, {\n      path: `$user>convos>${convoID}>messages>${messageID}`,\n      value: message\n    });\n\n    dispatch(\n      messageTransmissionSucceeded({\n        convoID,\n        messageID\n      })\n    );\n  } catch (e) {\n    Utils.logger.error(`Error inside retryMessage() -> `, e);\n    dispatch(\n      messageTransmissionFailed({\n        convoID,\n        errorMessage: e.message,\n        messageID\n      })\n    );\n  }\n};\n\nexport const receivedConvoMessage = createAction<{\n  message: Schema.ConvoMsg;\n}>(\"chat/receivedConvoMessage\");\n\nexport const subConvoMessages = (convoID: string) => (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n    };\n  }\n) => {\n  try {\n    Utils.logger.debug(`Subscribing to messages for convo: ${convoID}`);\n\n    const convo = getState().chat.convos[convoID];\n\n    const outgoingSub = rifle({\n      query: `$user::convos>${convoID}>messages::map.on`,\n      onData: (message: unknown) => {\n        Utils.logger.debug(\n          `Outgoing subscription for convo: ${convoID} -> `,\n          message\n        );\n        if (Schema.isConvoMsg(message)) {\n          dispatch(\n            receivedConvoMessage({\n              message\n            })\n          );\n        } else if (message === null) {\n          // TODO: message deleted\n        } else {\n          Utils.logger.warn(\n            `Outgoing message in convo ${convo.id} does not correspond to schema -> `,\n            message\n          );\n        }\n      },\n      epubForDecryption: convo.withEpub,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside subConvoMessages() outgoing sub -> `,\n          e\n        );\n        alert(`Error inside outgoing messages subscription: ${e.message}`);\n      }\n    });\n\n    const incomingSub = rifle({\n      query: `${convo.with}::convos>${convo.counterpartConvoID}>messages::map.on`,\n      onData: (message: unknown) => {\n        Utils.logger.debug(\n          `Incoming subscription for convo: ${convoID} -> `,\n          message\n        );\n        if (Schema.isConvoMsg(message)) {\n          dispatch(\n            receivedConvoMessage({\n              message: {\n                ...message,\n                state: \"received\",\n                // Otherwise it will reference the other user's convo\n                convoID: convo.id\n              }\n            })\n          );\n        } else if (message === null) {\n          // TODO: message deleted\n        } else {\n          Utils.logger.warn(\n            `Incoming message in convo ${convo.id} does not correspond to schema -> `,\n            message\n          );\n        }\n      },\n      epubForDecryption: convo.withEpub,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside subConvoMessages() incoming sub -> `,\n          e\n        );\n        alert(`Error inside incoming messages subscription: ${e.message}`);\n      }\n    });\n\n    return () => {\n      Promise.all([outgoingSub, incomingSub]).then(subs =>\n        subs.forEach(sub => sub.off())\n      );\n    };\n  } catch (e) {\n    Utils.logger.error(`Error inside subConvoMessages() -> `, e);\n    alert(`Could not subscribe to conversation messages: ${e.message}`);\n  }\n};\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport GitInfo from \"react-git-info/macro\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nimport \"./css/index.scoped.css\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <NavLink to=\"/Backups\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </NavLink>\n          <NavLink to=\"/walletSettings\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\" />\n            </div>\n            <p className=\"drawer-item-title unselectable\">Wallet Settings</p>\n          </NavLink>\n        </div>\n\n        <span className=\"drawer-commit-hash\">{GitInfo().commit.shortHash}</span>\n        <div className=\"drawer-bottom-section\">\n          <NavLink className=\"drawer-item\" to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>\n\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n          <NavLink to=\"/QRScanner\" onClick={close}>\n            <i\n              onClick={onClickScan}\n              className=\"icon-solid-scan\"\n              style={{ color: \"var(--main-blue)\" }}\n            ></i>\n          </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\nimport { toast } from \"react-toastify\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\n\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as Store from \"./store\";\nimport \"./styles/App.global.css\";\nimport Stream from \"./common/Post/components/Stream\";\nimport { dragElement } from \"./utils/ui\";\nimport * as Utils from \"./utils\";\nimport { Http } from \"./utils\";\nimport {\n  addStream,\n  removeStream,\n  setSeedInfo,\n  setSeedProviderPub\n} from \"./actions/ContentActions\";\nimport { closeDialog } from \"./actions/AppActions\";\n\nimport { ToastContainer } from \"react-toastify\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst WalletSettingsPage = React.lazy(() => import(\"./pages/WalletSettings\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/PublishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst CreatePostPage = React.lazy(() => import(\"./pages/Profile/CreatePost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/GoLive/GoLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\nconst BackupsPage = React.lazy(() => import(\"./pages/Backups\"));\nconst PublicContentItemPage = React.lazy(() =>\n  import(\"./pages/PublicContentItem\")\n);\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const streamUrl = Store.useSelector(({ content }) => content.streamUrl);\n  const streamStatusUrl = Store.useSelector(\n    ({ content }) => content.streamStatusUrl\n  );\n  const streamContentId = Store.useSelector(\n    ({ content }) => content.streamContentId\n  );\n  const streamPostId = Store.useSelector(({ content }) => content.streamPostId);\n  const streamUserToken = Store.useSelector(\n    ({ content }) => content.streamUserToken\n  );\n  const streamLiveToken = Store.useSelector(\n    ({ content }) => content.streamLiveToken\n  );\n  const dialogText = Store.useSelector(({ app }) => app.dialogText);\n  const dialogHasCallback = Store.useSelector(\n    ({ app }) => app.dialogHasCallback\n  );\n  // @ts-ignore\n  const [update, setUpdate] = useState(0);\n  const [isLive, setIsLive] = useState(false);\n  const [showFloatingPlayer, setShowFloatingPlayer] = useState(false);\n  // effect to update live status\n  useEffect(() => {\n    if (!streamStatusUrl) {\n      return;\n    }\n    let timeout;\n    const interval = setInterval(async () => {\n      try {\n        const res = await Http.get(streamStatusUrl);\n        if (!res.data.isLive) {\n          return;\n        }\n        setIsLive(true);\n        clearInterval(interval);\n        timeout = setTimeout(() => {\n          console.info(\"upp\");\n          setUpdate(Date.now());\n        }, 5000);\n      } catch (e) {}\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, [streamStatusUrl, setIsLive, setUpdate]);\n  const StreamRender = useMemo(() => {\n    return (\n      <Stream\n        hideRibbon={true}\n        item={{ magnetURI: streamUrl, liveStatus: \"live\" }}\n        timeout={1500}\n        id={undefined}\n        index={undefined}\n        postId={undefined}\n        tipCounter={undefined}\n        tipValue={undefined}\n        width={undefined}\n      />\n    );\n  }, [streamUrl]);\n\n  const stopStream = useCallback(() => {\n    Http.post(\"/api/stopStream\", {\n      postId: streamPostId,\n      contentId: streamContentId,\n      endUrl: `https://stream.shock.network/api/stream/end`,\n      urlForMagnet: `https://stream.shock.network/api/stream/torrent/${streamUserToken}`,\n      obsToken: streamLiveToken\n    });\n    removeStream()(dispatch);\n    console.info(streamUserToken);\n    history.push(\"/profile\");\n  }, [\n    dispatch,\n    history,\n    streamContentId,\n    streamLiveToken,\n    streamPostId,\n    streamUserToken\n  ]);\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated && publicKey) {\n      // Get current user's profile on login\n      dispatch(subscribeUserProfile(publicKey));\n\n      return () => {\n        dispatch(unsubscribeUserProfile(publicKey));\n      };\n    }\n  }, [authenticated, dispatch, publicKey]);\n\n  useEffect(() => {\n    const tmp = !!(authenticated && isLive && streamUrl);\n    if (tmp !== showFloatingPlayer) {\n      setShowFloatingPlayer(tmp);\n    }\n  }, [\n    authenticated,\n    isLive,\n    streamUrl,\n    showFloatingPlayer,\n    setShowFloatingPlayer\n  ]);\n  useEffect(() => {\n    if (showFloatingPlayer) {\n      dragElement(\"floatyVideo\");\n    }\n  }, [showFloatingPlayer]);\n\n  //load info about content provider stored into gun\n  const loadContentInfo = useCallback(async () => {\n    try {\n      if (!publicKey) {\n        return;\n      }\n      const { data: serviceProvider } = await Http.get(\n        `/api/gun/user/once/preferencesSeedServiceProvider`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        serviceProvider &&\n        typeof serviceProvider.data === \"string\" &&\n        serviceProvider.data !== \"\"\n      ) {\n        setSeedProviderPub(serviceProvider.data, true)(dispatch);\n      }\n    } catch (err) {\n      const msg = Utils.extractErrorMessage(err);\n\n      if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n        Utils.logger.warn(\n          `Could not fetch seed service provider due to a timeout error, this can be expected if the data hasn't been populated yet.`\n        );\n      } else {\n        toast.dark(\n          `There was an error fetching your seed service provider: ${msg}`\n        );\n        Utils.logger.error(err);\n      }\n    }\n    try {\n      if (!publicKey) {\n        return;\n      }\n      const { data: seedData } = await Http.get(\n        `/api/gun/user/once/preferencesSeedServiceData`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        seedData &&\n        typeof seedData.data === \"string\" &&\n        seedData.data !== \"\"\n      ) {\n        const JObject = JSON.parse(seedData.data);\n        if (JObject && JObject.seedUrl && JObject.seedToken) {\n          setSeedInfo(JObject.seedUrl, JObject.seedToken, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      const msg = Utils.extractErrorMessage(err);\n\n      if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n        Utils.logger.warn(\n          `Could not fetch seed service data due to a timeout error, this can be expected if the data hasn't been populated yet.`\n        );\n      } else {\n        toast.dark(\n          `There was an error fetching your seed service data: ${msg}`\n        );\n        Utils.logger.error(err);\n      }\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated || !publicKey) {\n      return;\n    }\n    loadContentInfo();\n  }, [authenticated, loadContentInfo, publicKey]);\n\n  //load info about current stream stored into gun\n  const loadStreamInfo = useCallback(async () => {\n    try {\n      if (!publicKey) {\n        return;\n      }\n      const { data: streamData } = await Http.get(\n        `/api/gun/user/once/currentStreamInfo`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        streamData &&\n        typeof streamData.data === \"string\" &&\n        streamData.data !== \"\"\n      ) {\n        if (streamData.data === \"NO DATA\") {\n          removeStream(true, true)(dispatch);\n          return;\n        }\n        const JObject = JSON.parse(streamData.data);\n\n        if (JObject) {\n          addStream(JObject, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      const msg = Utils.extractErrorMessage(err);\n\n      if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n        Utils.logger.warn(\n          `Could not fetch current stream info due to a timeout error, this can be expected if the data hasn't been populated yet.`\n        );\n      } else {\n        toast.dark(\n          `There was an error fetching your current stream info: ${msg}`\n        );\n        Utils.logger.error(err);\n      }\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated || !publicKey) {\n      return;\n    }\n    loadStreamInfo();\n  }, [authenticated, loadStreamInfo, publicKey]);\n\n  const DialogClose = useCallback(() => {\n    closeDialog(false)(dispatch);\n  }, [dispatch]);\n\n  const ConfirmDialog = useCallback(() => {\n    closeDialog(dialogHasCallback)(dispatch);\n  }, [dialogHasCallback, dispatch]);\n  return (\n    <FullHeight className=\"root-container\">\n      {showFloatingPlayer && (\n        <div id=\"floatyVideo\" className=\"floaty-container\">\n          <i id=\"floatyVideoHeader\" className=\"fas fa-grip-vertical\"></i>\n          {StreamRender}\n          <button onClick={stopStream}>CLOSE STREAM</button>\n        </div>\n      )}\n      {dialogText && (\n        <div className=\"fixed-container\">\n          <div className=\"global-dialog\">\n            <p>{dialogText}</p>\n            <div className=\"d-flex flex-justify-center w-80\">\n              {dialogHasCallback && (\n                <button\n                  className=\"shock-form-button m-t-1 w-50\"\n                  onClick={DialogClose}\n                >\n                  Cancel\n                </button>\n              )}\n              {dialogHasCallback && <div style={{ width: \"1rem\" }}></div>}\n              <button\n                className=\"shock-form-button-confirm m-t-1 w-50\"\n                onClick={ConfirmDialog}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute\n            path=\"/walletSettings\"\n            exact\n            component={WalletSettingsPage}\n          />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:convoOrReqID\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={CreatePostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey/:selectedView?\"\n            exact\n            component={OtherUserPage}\n          />\n          <PrivateRoute path=\"/Backups\" exact component={BackupsPage} />\n\n          <PrivateRoute\n            path=\"/item/:publicKey/:id\"\n            exact\n            component={PublicContentItemPage}\n          />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover={false}\n        closeButton={false}\n      />\n    </FullHeight>\n  );\n};\n\nexport default App;\n","export function dragElement(elementId) {\n  const elmnt = document.getElementById(elementId)\n  if(!elmnt){\n    console.log(\"draggable set fail\")\n    return\n      \n  }\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  document.getElementById(elmnt.id + \"Header\").onpointerdown = dragMouseDown;\n\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onpointerup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onpointermove = elementDrag;\n  }\n\n  function elementDrag(e) {\n      console.log(\"dragging yooo\")\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n  }\n\n  function closeDragElement() {\n      console.log(\"not anymore!\")\n    // stop moving when mouse button is released:\n    document.onpointerup = null;\n    document.onpointermove = null;\n  }\n  }\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./styles/index.global.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\nimport * as Common from \"shock-common\";\n\nexport function useForceUpdate() {\n  const [tick, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return { forceUpdate: update, tick };\n}\n\n/**\n * Handle the ugly \"in 0 seconds\" cases (returning \"Just now\"), returns an empty\n * string if the timestamp is -1.\n */\nexport const formatTimestamp = (timestamp: number): string => {\n  if (timestamp === -1) {\n    return \"\";\n  }\n  const relativeTime = DateTime.fromMillis(\n    Common.normalizeTimestampToMs(timestamp)\n  ).toRelative();\n  return relativeTime === \"in 0 seconds\" ? \"Just now\" : relativeTime;\n};\n","import * as Common from \"shock-common\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Action } from \"redux\";\nimport { useDispatch as originalUseDispatch } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { useBetween } from \"use-between\";\nimport { memoize } from \"lodash\";\n\nimport { State } from \"../reducers\";\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nimport { rifle } from \"./WebSocket\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\nexport * from \"./WebSocket\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args),\n  debug: (...args: any[]) => console.debug(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not a url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n\nexport const EMPTY_ARR = [] as readonly Readonly<any>[];\n\nexport const EMPTY_OBJ = {} as const;\n\nexport const useBooleanState = (initialState: boolean) => {\n  const [state, setState] = useState<boolean>(initialState);\n  const toggle = useCallback(() => {\n    setState(_state => !_state);\n  }, []);\n\n  return [state, toggle] as const;\n};\n\nexport const parseJson = (o: string) => JSON.parse(o) as unknown;\n\n/**\n * Returns null if the value provided is not a valid JSON string.\n * @param o\n */\nexport const safeParseJson = (o: unknown): unknown => {\n  if (!Common.isPopulatedString(o)) {\n    return null;\n  }\n  try {\n    return JSON.parse(o);\n  } catch (e) {\n    logger.warn(`Error inside safeParseJson() -> `, e);\n    logger.log(`Error inside safeParseJson(), string provided -> `, o);\n    return null;\n  }\n};\n\nexport const useDispatch = (): ThunkDispatch<State, undefined, Action> => {\n  return originalUseDispatch() as ThunkDispatch<State, undefined, Action>;\n};\n\nexport const useLastSeen = (publicKey: string) => {\n  const [lastSeenApp, setLastSeenApp] = useState(0);\n  const [lastSeenNode, setLastSeenNode] = useState(0);\n\n  useEffect(() => {\n    const appSub = rifle({\n      query: `${publicKey}::Profile>lastSeenApp::on`,\n      onData(lastSeen) {\n        if (typeof lastSeen === \"number\") {\n          setLastSeenApp(lastSeen);\n        } else {\n          logger.error(`useLastSeen() -> got non-number lastSeenApp`);\n        }\n      },\n      onError(e) {\n        logger.error(`useLastSeen() -> lastSeenApp rifle -> `, e);\n      }\n    });\n\n    const nodeSub = rifle({\n      query: `${publicKey}::Profile>lastSeenNode::on`,\n      onData(lastSeen) {\n        if (typeof lastSeen === \"number\") {\n          setLastSeenNode(lastSeen);\n        } else {\n          logger.error(`useLastSeen() -> got non-number lastSeenNode`);\n        }\n      },\n      onError(e) {\n        logger.error(`useLastSeen() -> lastSeenNode rifle -> `, e);\n      }\n    });\n\n    return () => {\n      appSub.then(sub => {\n        sub.off();\n      });\n      nodeSub.then(sub => {\n        sub.off();\n      });\n    };\n  }, [publicKey]);\n\n  return { lastSeenApp, lastSeenNode };\n};\n\nconst useLastSeenMemo = memoize((publicKey: string) => {\n  return () => useLastSeen(publicKey);\n});\n\nexport const useLastSeenShared = (publicKey: string) =>\n  useBetween(useLastSeenMemo(publicKey));\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangeSource = Http.CancelToken.source();\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    if (exchangeSource) {\n      exchangeSource.cancel(\n        \"Key Pair exchange operation is preceded by another one\"\n      );\n      exchangeSource = null;\n    }\n\n    exchangeSource = Http.CancelToken.source();\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(\n      `/api/encryption/exchange`,\n      {\n        publicKey: keyPair.publicKeyBase64,\n        deviceId\n      },\n      {\n        cancelToken: exchangeSource.token\n      }\n    );\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      deviceId,\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n","let dialogCallback = null\nexport const addDialogCallback = cb => {\n    dialogCallback = cb\n}\n\nexport const callDialogCallBack = async () => {\n    if(!dialogCallback){\n        return Promise.resolve()\n    }\n    return dialogCallback()\n}","import {\n  addDialogCallback,\n  callDialogCallBack\n} from '../utils/dialogCallback'\nexport const ACTIONS = {\n  OPEN_DIALOG: \"app/openDialog\",\n  CLOSE_DIALOG:\"app/closeDialog\"\n};\nexport const openDialog = ({text,cb = null}) => dispatch => {\n  addDialogCallback(cb)\n  dispatch({\n    type: ACTIONS.OPEN_DIALOG,\n    data: {text,hasCallback: !!cb}\n  });\n};\n\nexport const closeDialog = executeCb => dispatch => {\n  if(executeCb){\n    callDialogCallBack()\n  }\n  dispatch({\n    type: ACTIONS.CLOSE_DIALOG\n  });\n}","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Utils from \"../utils\";\nimport {\n  rifle,\n  rifleCleanup,\n  unsubscribeRifleByQuery\n} from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\"\n};\n\nconst subscribedProfiles = new Set();\n\nexport const updatedUserProfile = createAction<{\n  profile: Partial<Common.User & {offerSeedService:string}>;\n  publicKey: string;\n}>(\"userProfiles/profiles/update\");\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => (\n  dispatch: (action: object) => void,\n  getState: () => {\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  if (subscribedProfiles.has(publicKey)) {\n    return () => {};\n  }\n\n  console.info(\"subbing user...\" + publicKey);\n  subscribedProfiles.add(publicKey);\n\n  const subscription = rifle({\n    query: `${publicKey}::Profile::map.on`,\n    reconnect: true,\n    onData: (data: any, key: string) => {\n      if (key === \"bio\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              bio: data\n            },\n            publicKey\n          })\n        );\n      }\n      if (key === \"displayName\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              displayName: data\n            },\n            publicKey\n          })\n        );\n      }\n      if (key === \"offerSeedService\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              offerSeedService: data\n            },\n            publicKey\n          })\n        );\n      }\n    }\n  });\n\n  const binarySub = rifle({\n    query: `${publicKey}::profileBinary::map.on`,\n    reconnect: true,\n    onData: (data, key: string) => {\n      if (key === \"avatar\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              avatar: data\n            },\n            publicKey\n          })\n        );\n      } else if (key === \"header\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              header: data\n            },\n            publicKey\n          })\n        );\n      } else {\n        Utils.logger.error(\n          `Unknown key: ${key} for user binary profile data gun RPC socket`\n        );\n      }\n    }\n  });\n\n  return () => {\n    rifleCleanup(subscription, binarySub)();\n    subscribedProfiles.delete(publicKey);\n  };\n};\n\nexport const unsubscribeUserProfile = (publicKey: string) => async () => {\n  unsubscribeRifleByQuery(`${publicKey}::Profile::on`);\n  unsubscribeRifleByQuery(`${publicKey}::profileBinary::map.on`);\n};\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n\nexport const extractErrorMessage = (error: any): string => {\n  return (\n    error?.response?.data?.errorMessage || error.message || \"Unknown error\"\n  );\n};\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\n/**\n * @param {string} source\n */\nexport const setSource = source => ({\n  type: ACTIONS.SET_SOURCE,\n  data: source\n});\n\n/**\n * @param {import('../schema').FeeRate} rate\n */\nexport const setRate = rate => ({\n  type: ACTIONS.SET_RATE,\n  data: rate\n});\n"],"sourceRoot":""}