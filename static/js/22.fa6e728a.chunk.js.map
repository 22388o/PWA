{"version":3,"sources":["common/Line/index.tsx","common/Post/components/Image/index.js","common/ProfileDivider/index.tsx","common/ProfileDivider/css/ProfileDivider.module.css","images/clipboard.svg","images/qrcode.svg","pages/OtherUser/css/OtherUser.module.css","pages/OtherUser/components/FollowBtn/FollowBtn.module.css","pages/OtherUser/components/SendReqBtn/SendReqBtn.module.css","common/ContentWall/ContentWall.tsx","images/logo-alone-2.png","pages/Feed/components/BuyServiceModal/index.js","pages/OtherUser/components/FollowBtn/FollowBtn.tsx","pages/OtherUser/components/SendReqBtn/SendReqBtn.tsx","pages/OtherUser/index.tsx"],"names":["Line","color","length","type","width","style","useMemo","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","memo","Image","id","item","index","postId","tipValue","tipCounter","hideRibbon","disableZoom","useState","zoomed","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","useCallback","value","clearTimeout","timer","setTimeout","contentURL","decodeURIComponent","magnetURI","replace","mainImageStyle","opacity","imgNode","className","alt","data-torrent","data-file-key","src","onLoad","display","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","ProfileDivider","onChange","selected","showContentBtn","classNames","gStyles","styles","container","unselected","onClick","module","exports","ContentWall","publicKey","history","useHistory","React","content","setContent","error","setError","useEffect","subscription","rifle","query","onError","e","JSON","stringify","onData","key","produce","draft","Schema","Utils","warn","slice","then","sub","off","orderedContent","Object","values","sort","a","b","timestamp","map","i","push","author","MEDIA_STYLE","title","description","objectFit","BuyServiceModal","service","toggleOpen","dispatch","useDispatch","loading","setLoading","buySuccess","setBuySuccess","copied","setCopied","submitBuy","preventDefault","servicePrice","owner","serviceID","serviceType","Number","console","buyService","revealRes","log","addAvailableToken","seedUrl","tokens","addStreamToken","errorMessage","message","responseError","response","data","copyRes","navigator","clipboard","writeText","Modal","toggleModal","modalOpen","modalTitle","onSubmit","Loader","overlay","text","ModalSubmit","FollowBtn","authenticated","Store","auth","isFollowed","find","f","user","changingStatus","setChangingStatus","handleFollow","res","status","delete","put","Error","alert","handleGuestFollow","followUser","c","SendReqBtn","isInContact","handleClick","sendHandshakeRequest","Post","lazy","SharedPost","OtherUserPage","myGunPub","node","profileModalOpen","setProfileModalOpen","useParams","userPublicKey","selectedView","userServices","setUserServices","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","buyServiceModalData","setBuyServiceModalOpen","shareModalData","setShareModalData","isMe","subscribeFollows","unsubscribeFollows","unsubscribePosts","subPosts","unsubscribeSharedPosts","subSharedPosts","unsubscribeUserProfile","subscribeUserProfile","s","msg","startsWith","toast","dark","displayName","toggleTipModal","tipData","toggleBuyServiceModal","buyData","toggleUnlockModal","unlockData","toggleShareModal","shareData","posts","copyClipboard","handleViewChange","header","ShockAvatar","greyBorder","bio","Pad","amt","insideRow","post","Common","fallback","openTipModal","openUnlockModal","openShareModal","postID","originalPostID","sharerPublicKey","sharedBy","authorId","openDeleteModal","entries","filter","serviceTitle","serviceDescription","serviceCondition","contentStyle","PROFILE_MODAL_CONTENT_STYLE","noFullWidth","bgColor","fgColor","size","imageSettings","QR_IMAGE_SETTINGS","ClipboardIcon","SendTipModal","UnlockModal","ShareModal","AddBtn","large","iconURL","QRCodeIcon","icon","label","BottomBar","logoAlone","excavate","padding"],"mappings":"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","file":"static/js/22.fa6e728a.chunk.js","sourcesContent":["import { memo, useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default memo(Line);\n","import React, { memo, useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.scoped.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null,\n  disableZoom = false,\n  style = /** @type {import('react').CSSProperties} */ ({})\n}) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [\n      animationTimer,\n      zoomLoaded,\n      setZoomed,\n      setZoomLoaded,\n      setPreviewVisible,\n      setAnimationTimer\n    ]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { ...style, opacity: previewVisible ? 1 : 0 };\n  if (width) {\n    mainImageStyle.width = width;\n  }\n\n  const imgNode = (\n    <>\n      <img\n        className={`image torrent-img torrent-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-torrent={item.magnetURI}\n        data-file-key={index}\n        style={mainImageStyle}\n        src={contentURL}\n      />\n      <img\n        className={`image enlarged-img enlarged-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-file-key={index}\n        onLoad={() => {\n          setZoomLoaded(true);\n        }}\n        style={{\n          opacity: zoomed ? 1 : 0,\n          display: zoomed ? \"block\" : \"none\"\n        }}\n        src={contentURL}\n      />\n      {!hideRibbon && (\n        <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"media-container\">\n      {disableZoom ? (\n        imgNode\n      ) : (\n        <ControlledZoom\n          isZoomed={zoomed}\n          onZoomChange={handleZoomChange}\n          overlayBgColorStart=\"#16191c00\"\n          overlayBgColorEnd=\"#16191c\"\n        >\n          {imgNode}\n        </ControlledZoom>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Image);\n","import { memo } from \"react\";\nimport classNames from \"classnames\";\n\nimport * as gStyles from \"../../styles\";\nimport Line from \"../Line\";\n\nimport styles from \"./css/ProfileDivider.module.css\";\n\nexport interface ProfileDividerProps {\n  onChange(newlySelected: \"posts\" | \"services\" | \"content\"): void;\n  selected: \"posts\" | \"services\" | \"content\";\n  showContentBtn?: boolean;\n}\n\nconst ProfileDivider = ({\n  onChange,\n  selected,\n  showContentBtn\n}: ProfileDividerProps) => {\n  return (\n    <div\n      className={classNames(\n        gStyles.width100,\n        gStyles.rowCentered,\n        gStyles.spaceAround,\n        gStyles.padding12,\n        styles.container\n      )}\n    >\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"posts\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"posts\");\n        }}\n      >\n        Posts\n      </span>\n\n      <div\n        className={classNames(\n          gStyles.absolute,\n          showContentBtn && styles[\"left-line\"]\n        )}\n      >\n        <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n      </div>\n\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"services\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"services\");\n        }}\n      >\n        Services\n      </span>\n\n      {showContentBtn && (\n        <>\n          <div className={classNames(gStyles.absolute, styles[\"right-line\"])}>\n            <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n          </div>\n\n          <span\n            className={classNames(\n              gStyles.unselectable,\n              selected === \"content\" ? styles.selected : styles.unselected\n            )}\n            onClick={() => {\n              onChange(\"content\");\n            }}\n          >\n            Content\n          </span>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ProfileDivider);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileDivider_container__3ob9k\",\"selected\":\"ProfileDivider_selected__3U98y\",\"unselected\":\"ProfileDivider_unselected__1Z_qd\",\"left-line\":\"ProfileDivider_left-line__2xjlN\",\"right-line\":\"ProfileDivider_right-line__1d2KH\"};","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"OtherUser_profile-page__OhC-_\",\"profile-container\":\"OtherUser_profile-container__2oq7s\",\"profile-cover\":\"OtherUser_profile-cover__3Fq6P\",\"profile-info-container\":\"OtherUser_profile-info-container__3qnqN\",\"profile-avatar\":\"OtherUser_profile-avatar__S6INq\",\"profile-name\":\"OtherUser_profile-name__3chmC\",\"profile-desc\":\"OtherUser_profile-desc__f9Dsj\",\"config-btn\":\"OtherUser_config-btn__t33_B\",\"config-btn-icon\":\"OtherUser_config-btn-icon__1p_6O\",\"config-btn-text\":\"OtherUser_config-btn-text__1Wg_T\",\"profile-choice-container\":\"OtherUser_profile-choice-container__3-xgF\",\"profile-choice-icon\":\"OtherUser_profile-choice-icon__3iOE1\",\"profile-choice-text\":\"OtherUser_profile-choice-text__deYLl\",\"profile-qrcode\":\"OtherUser_profile-qrcode__2Ok54\",\"profile-qrcode-desc\":\"OtherUser_profile-qrcode-desc__3cp0P\",\"profile-clipboard-container\":\"OtherUser_profile-clipboard-container__1P_p8\",\"profile-clipboard-icon\":\"OtherUser_profile-clipboard-icon__1nW2U\",\"profile-clipboard-text\":\"OtherUser_profile-clipboard-text__2g4AC\",\"publish-content-form\":\"OtherUser_publish-content-form__1YdVa\",\"publish-content-title\":\"OtherUser_publish-content-title__3EsYE\",\"publish-content-icon\":\"OtherUser_publish-content-icon__291ch\",\"m-1\":\"OtherUser_m-1__1dpvP\",\"content-container\":\"OtherUser_content-container__1lOOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FollowBtn_container__2c7Cj\",\"text\":\"FollowBtn_text__1o7CS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SendReqBtn_container__2nY4E\",\"text\":\"SendReqBtn_text__2_2zC\"};","import React, { memo } from \"react\";\nimport produce from \"immer\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { rifle } from \"../../utils/WebSocket\";\nimport * as Schema from \"../../schema\";\nimport * as Utils from \"../../utils\";\nimport Image from \"../../common/Post/components/Image\";\n\nimport \"./css/ContentWall.scoped.css\";\n\nexport interface ContentWallProps {\n  publicKey: string;\n}\n\nconst ContentWall: React.FC<ContentWallProps> = ({ publicKey }) => {\n  const history = useHistory();\n  const [content, setContent] = React.useState<\n    Record<string, Schema.PublicContentItem>\n  >({});\n  const [error, setError] = React.useState<string>(\"\");\n\n  React.useEffect(() => {\n    const subscription = rifle({\n      query: `${publicKey}::publishedContentPublic::map.on`,\n      onError(e) {\n        setError(JSON.stringify(e, null, 4));\n      },\n      onData(item, key) {\n        setContent(\n          produce(draft => {\n            if (Schema.isPublicContentItem(item)) {\n              draft[key] = item;\n            } else {\n              Utils.logger.warn(\n                `Invalid/incomplete public published content found for public key ...${publicKey.slice(\n                  -8\n                )}, might be due to pending replication or was deleted if null: ${JSON.stringify(\n                  item,\n                  null,\n                  4\n                )}`\n              );\n            }\n          })\n        );\n      }\n    });\n\n    return () => {\n      subscription.then(sub => sub.off());\n    };\n  }, [publicKey]);\n\n  const orderedContent = React.useMemo(() => {\n    return Object.values(content).sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  }, [content]);\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <>\n      {orderedContent.map((item, i) => {\n        return (\n          <div\n            className=\"item\"\n            key={item.id}\n            onClick={() => {\n              history.push(`/item/${item.author}/${item.id}`);\n            }}\n          >\n            {item.type === \"image/embedded\" && (\n              <div style={MEDIA_STYLE}>\n                <Image\n                  disableZoom\n                  hideRibbon\n                  id={item.id}\n                  index={i}\n                  item={item}\n                  postId={null}\n                  tipCounter={null}\n                  tipValue={null}\n                  style={MEDIA_STYLE}\n                />\n              </div>\n            )}\n\n            {item.type === \"video/embedded\" && (\n              <div className=\"video-placeholder\" style={MEDIA_STYLE}>\n                <i className=\"fas fa-video video-icon\" />\n              </div>\n            )}\n\n            <div className=\"title-and-description\">\n              <h2 className=\"title\">{item.title}</h2>\n\n              <p className=\"description\">{item.description || \" \"}</p>\n\n              <span className=\"timestamp\">\n                {Utils.formatTimestamp(item.timestamp)}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst MAX_MEDIA_LONG_EDGE = 100;\n\nconst MEDIA_STYLE: React.CSSProperties = {\n  height: MAX_MEDIA_LONG_EDGE,\n  width: MAX_MEDIA_LONG_EDGE,\n  objectFit: \"contain\"\n};\n\nexport default memo(ContentWall);\n","export default __webpack_public_path__ + \"static/media/logo-alone-2.512c5854.png\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { buyService } from \"../../../../actions/OrdersActions\";\nimport {\n  addAvailableToken,\n  addStreamToken\n} from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst BuyServiceModal = ({ service, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [buySuccess, setBuySuccess] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const submitBuy = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        const { servicePrice, owner, serviceID, serviceType } = service;\n        if (!owner || !serviceID || typeof Number(servicePrice) !== \"number\") {\n          console.error(\"invalid service provided\");\n          console.error(service);\n          return;\n        }\n        setLoading(true);\n        const revealRes = await buyService(\n          owner,\n          serviceID,\n          servicePrice\n        )(dispatch);\n        console.log(revealRes);\n        setBuySuccess(revealRes);\n        if (serviceType === \"torrentSeed\") {\n          addAvailableToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n        if (serviceType === \"streamSeed\") {\n          addStreamToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n      } catch (err) {\n        console.error(err);\n        if (service) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, service]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!service) {\n      setLoading(false);\n      setError(null);\n      setBuySuccess(null);\n    }\n  }, [buySuccess, service]);\n  const copyRes = useCallback(() => {\n    navigator.clipboard.writeText(JSON.stringify(buySuccess));\n    setCopied(true);\n  }, [buySuccess, setCopied]);\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!service}\n      modalTitle=\"Buy Service\"\n    >\n      {buySuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">\n            You successfully bought this service!\n          </p>\n          <p>{JSON.stringify(buySuccess)}</p>\n          <button onClick={copyRes}>COPY TO CLIPBOARD</button>\n          {copied && <p>Copied!</p>}\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitBuy}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            {service && service.servicePrice} sats will be sent to the owner of\n            the service provider\n          </p>\n          <ModalSubmit text=\"BUY\" onClick={submitBuy} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default BuyServiceModal;\n","import { memo, useCallback, useState } from \"react\";\nimport c from \"classnames\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\n\nimport styles from \"./FollowBtn.module.css\";\nimport { useDispatch } from \"../../../../utils/index\";\nimport { followUser } from \"../../../../actions/GuestActions\";\n\nexport interface FollowBtnProps {\n  publicKey: string;\n}\n\nconst FollowBtn = ({ publicKey }: FollowBtnProps) => {\n  const dispatch = useDispatch();\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const isFollowed = !!Store.useSelector(Store.selectFollows).find(\n    f => f.user === publicKey\n  );\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleFollow = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n      setChangingStatus(true);\n\n      let res = { status: -1, data: { errorMessage: \"\" } };\n\n      if (isFollowed) {\n        res = await Utils.Http.delete(`/api/gun/follows/${publicKey}`);\n      } else {\n        res = await Utils.Http.put(`/api/gun/follows/${publicKey}`, {});\n      }\n\n      if (res.status !== 200) {\n        throw new Error(res.data.errorMessage);\n      }\n    } catch (e) {\n      if (isFollowed) {\n        alert(`Could not unfollow: ${e.message}`);\n      } else {\n        alert(`Could not follow: ${e.message}`);\n      }\n    } finally {\n      setChangingStatus(false);\n    }\n  }, [changingStatus, setChangingStatus, isFollowed, publicKey]);\n\n  const handleGuestFollow = useCallback(() => {\n    dispatch(followUser({ publicKey }));\n  }, [dispatch, publicKey]);\n\n  return (\n    <div\n      className={styles.container}\n      onClick={authenticated ? handleFollow : handleGuestFollow}\n    >\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isFollowed ? \"Unfollow\" : \"Follow\"}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(FollowBtn);\n","import { memo, useCallback, useState } from \"react\";\nimport c from \"classnames\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\nimport { sendHandshakeRequest } from \"../../../../actions/ChatActions\";\n\nimport styles from \"./SendReqBtn.module.css\";\n\nexport interface SendReqBtnProps {\n  publicKey: string;\n}\n\nconst SendReqBtn = ({ publicKey }: SendReqBtnProps) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isInContact = Store.useSelector(Store.selectIsInContact(publicKey));\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleClick = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n\n      if (isInContact) {\n        history.push(`/chat/${publicKey}`);\n        return;\n      }\n\n      setChangingStatus(true);\n\n      await dispatch(sendHandshakeRequest(publicKey));\n\n      setChangingStatus(false);\n    } catch (e) {\n      alert(`Could not send contact request: ${e.message}`);\n      Utils.logger.error(e);\n      setChangingStatus(false);\n    }\n  }, [changingStatus, dispatch, history, isInContact, publicKey]);\n\n  return (\n    <div className={c(styles.container)} onClick={handleClick}>\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isInContact ? \"Message\" : \"Request Contact\"}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SendReqBtn);\n","import React, {\n  Suspense,\n  memo,\n  useCallback,\n  useEffect,\n  useState\n} from \"react\";\nimport QRCode, { ImageSettings } from \"qrcode.react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport * as Common from \"shock-common\";\nimport { toast } from \"react-toastify\";\n\nimport { rifle } from \"../../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\nimport ContentWall from \"../../common/ContentWall\";\nimport GuestTipModal from \"../../common/TipModal\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport logoAlone from \"../../images/logo-alone-2.png\";\nimport SendTipModal from \"../Feed/components/SendTipModal\";\nimport UnlockModal from \"../Feed/components/UnlockModal\";\nimport BuyServiceModal from \"../Feed/components/BuyServiceModal\";\nimport ShareModal from \"../Feed/components/ShareModal\";\nimport * as Store from \"../../store\";\nimport * as gStyles from \"../../styles\";\n\nimport styles from \"./css/OtherUser.module.css\";\nimport FollowBtn from \"./components/FollowBtn\";\nimport SendReqBtn from \"./components/SendReqBtn\";\nimport {\n  subscribeFollows,\n  unsubscribeFollows,\n  subscribeUserPosts as subPosts,\n  subSharedPosts\n} from \"../../actions/FeedActions\";\nimport * as Utils from \"../../utils\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst AVATAR_SIZE = 122;\n\nconst OtherUserPage = () => {\n  //#region controller\n  const dispatch = Store.useDispatch();\n  const history = useHistory();\n  const myGunPub = Store.useSelector(({ node }) => node.publicKey);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n\n  const { publicKey: userPublicKey, selectedView = \"posts\" } = useParams<{\n    publicKey: string;\n    selectedView: \"posts\" | \"services\" | \"content\";\n  }>();\n  const user = Store.useSelector(Store.selectUser(userPublicKey));\n  const [userServices, setUserServices] = useState({});\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [buyServiceModalData, setBuyServiceModalOpen] = useState(null);\n  const [shareModalData, setShareModalData] = useState(null);\n  const isMe = myGunPub === user.publicKey;\n  // Effect to sub follows\n  useEffect(() => {\n    dispatch(subscribeFollows());\n    return () => {\n      dispatch(unsubscribeFollows());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    const unsubscribePosts = dispatch(subPosts(userPublicKey));\n    const unsubscribeSharedPosts = dispatch(subSharedPosts(userPublicKey));\n    const unsubscribeUserProfile = dispatch(\n      subscribeUserProfile(userPublicKey)\n    );\n\n    return () => {\n      unsubscribePosts();\n      unsubscribeSharedPosts();\n      unsubscribeUserProfile();\n    };\n  }, [dispatch, userPublicKey]);\n\n  //effect for services\n  useEffect(() => {\n    const subscription = rifle({\n      onData(data, key) {\n        setUserServices(s => ({\n          ...s,\n          [key]: data\n        }));\n      },\n      query: `${userPublicKey}::offeredServices::map.on`,\n      onError(e) {\n        const msg = Utils.extractErrorMessage(e);\n\n        if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n          Utils.logger.warn(\n            `Could not fetch this user's (...${userPublicKey.slice(\n              -8\n            )}) offered services due to a timeout error, this can be expected if the data hasn't been populated yet.`\n          );\n        } else {\n          toast.dark(\n            `There was an error fetching ${user.displayName}'s offered services: ${msg}`\n          );\n          Utils.logger.error(e);\n        }\n      }\n    });\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  }, [user.displayName, userPublicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n      }\n\n      setTipModalOpen(tipData);\n    },\n    [tipModalData]\n  );\n  const toggleBuyServiceModal = useCallback(\n    buyData => {\n      if (buyServiceModalData || !buyData) {\n        setBuyServiceModalOpen(null);\n      }\n\n      setBuyServiceModalOpen(buyData);\n    },\n    [buyServiceModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const toggleShareModal = useCallback(\n    shareData => {\n      console.log(\"share click yo\");\n      console.log(shareData);\n      if (shareModalData || !shareData) {\n        setShareModalData(null);\n      }\n\n      setShareModalData(shareData);\n    },\n    [shareModalData]\n  );\n\n  const posts = Store.useSelector(\n    Store.selectPostsNewestToOldest(userPublicKey)\n  );\n\n  const copyClipboard = useCallback(() => {\n    navigator.clipboard.writeText(userPublicKey);\n  }, [userPublicKey]);\n\n  const renderPosts = () => {\n    if (posts.length === 0) {\n      return <Loader text=\"loading posts...\" />;\n    }\n    return posts.map(post => {\n      if (Common.isSharedPost(post)) {\n        return (\n          <Suspense fallback={<Loader />} key={post.originalPostID}>\n            <SharedPost\n              openTipModal={toggleTipModal}\n              openUnlockModal={toggleUnlockModal}\n              openShareModal={toggleShareModal}\n              postID={post.originalPostID}\n              sharerPublicKey={post.sharedBy}\n            />\n          </Suspense>\n        );\n      }\n\n      return (\n        <Suspense fallback={<Loader />} key={post.id}>\n          <Post\n            id={post.id}\n            publicKey={post.authorId}\n            openTipModal={toggleTipModal}\n            openUnlockModal={toggleUnlockModal}\n            openDeleteModal={null}\n            openShareModal={toggleShareModal}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    return Object.entries(userServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, service]) => {\n        const buyCB = () => {\n          setBuyServiceModalOpen({\n            // @ts-expect-error\n            ...service,\n            serviceID: id,\n            owner: userPublicKey\n          });\n        };\n        return (\n          <div className={styles.post}>\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceType}</p>\n            <strong>Service Title</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceTitle}</p>\n            <strong>Service Description</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceDescription}</p>\n            <strong>Service Condition</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceCondition}</p>\n            <strong>Service Price</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.servicePrice}</p>\n            <button onClick={buyCB}>BUY SERVICE</button>\n          </div>\n        );\n      });\n  };\n  const renderContent = () => {\n    return (\n      <div className={styles[\"content-container\"]}>\n        <ContentWall publicKey={userPublicKey} />\n      </div>\n    );\n  };\n  const handleViewChange = useCallback(\n    (selected: \"posts\" | \"services\" | \"content\") => {\n      history.replace(`/otherUser/${userPublicKey}/${selected}`);\n    },\n    [history, userPublicKey]\n  );\n  //#endregion controller\n\n  return (\n    <div className={classNames(\"page-container\", styles[\"profile-page\"])}>\n      <div className={classNames(styles[\"profile-container\"])}>\n        <div className=\"profile-cover\">\n          {user.header && (\n            <img\n              className=\"w-100\"\n              alt=\"User set profile header.\"\n              src={`data:image/jpeg;base64,${user.header}`}\n            />\n          )}\n        </div>\n\n        <div className={styles[\"profile-info-container\"]}>\n          <div\n            className={styles[\"profile-avatar\"]}\n            style={{\n              height: `${AVATAR_SIZE}px`,\n              width: `${AVATAR_SIZE}px`\n            }}\n          >\n            <ShockAvatar\n              height={AVATAR_SIZE}\n              publicKey={userPublicKey}\n              greyBorder\n            />\n          </div>\n          <div>\n            <p className={styles[\"profile-name\"]}>{user.displayName}</p>\n            <p className={styles[\"profile-desc\"]}>\n              {user.bio || \"Lightning.Page user\"}\n            </p>\n\n            <div className={gStyles.rowCentered}>\n              {!isMe && <FollowBtn publicKey={userPublicKey} />}\n\n              <Pad amt={24} insideRow />\n\n              {!isMe && <SendReqBtn publicKey={userPublicKey} />}\n            </div>\n          </div>\n        </div>\n\n        <ProfileDivider\n          onChange={handleViewChange}\n          selected={selectedView}\n          showContentBtn\n        />\n        <Pad amt={30} />\n\n        <div>\n          {selectedView === \"posts\" && renderPosts()}\n          {selectedView === \"services\" && renderServices()}\n          {selectedView === \"content\" && renderContent()}\n        </div>\n\n        {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n        <Pad amt={200} />\n\n        {profileModalOpen && (\n          <Modal\n            toggleModal={toggleModal}\n            modalOpen={profileModalOpen}\n            contentStyle={PROFILE_MODAL_CONTENT_STYLE}\n            noFullWidth\n          >\n            <QRCode\n              bgColor=\"#23282d\"\n              fgColor=\"#64bbff\"\n              value={userPublicKey}\n              size={180}\n              className={styles[\"profile-qrcode\"]}\n              imageSettings={QR_IMAGE_SETTINGS}\n            />\n            <p className={styles[\"profile-qrcode-desc\"]}>\n              Scan this code to contact this user\n            </p>\n            <div\n              className={styles[\"profile-clipboard-container\"]}\n              onClick={copyClipboard}\n            >\n              <img\n                src={ClipboardIcon}\n                className={styles[\"profile-clipboard-icon\"]}\n                alt=\"\"\n              />\n              <p className={styles[\"profile-clipboard-text\"]}>\n                Tap to copy to clipboard\n              </p>\n            </div>\n          </Modal>\n        )}\n        <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n        <GuestTipModal\n          publicKey={userPublicKey}\n          tipData={tipModalData}\n          toggleOpen={toggleTipModal}\n        />\n        <UnlockModal\n          unlockData={unlockModalData}\n          toggleOpen={toggleUnlockModal}\n        />\n        <BuyServiceModal\n          service={buyServiceModalData}\n          toggleOpen={toggleBuyServiceModal}\n        />\n        <ShareModal shareData={shareModalData} toggleOpen={toggleShareModal} />\n      </div>\n      {authenticated && (\n        <AddBtn\n          onClick={toggleModal}\n          large\n          iconURL={QRCodeIcon}\n          icon={null}\n          label={null}\n        />\n      )}\n\n      <BottomBar />\n    </div>\n  );\n};\n\nconst QR_IMAGE_SETTINGS: ImageSettings = {\n  src: logoAlone,\n  height: 36,\n  width: 36,\n  excavate: true\n};\n\nconst PROFILE_MODAL_CONTENT_STYLE = {\n  padding: \"40px 30px\"\n};\n\nexport default memo(OtherUserPage);\n"],"sourceRoot":""}