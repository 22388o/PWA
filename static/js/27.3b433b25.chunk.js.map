{"version":3,"sources":["common/ContentHostInput/components/ContentHostInputView.module.css","common/ContentHostInput/components/Host.module.css","common/ContentHostInput/components/Host.tsx","common/ContentHostInput/components/ContentHostInputView.tsx","common/ContentHostInput/index.ts","common/ContentHostInput/ContentHostInput.tsx","pages/Profile/index.tsx"],"names":["module","exports","Host","hostError","error","isBeingAddedOrDeleted","isDefault","onClickRemove","onClickWarning","price","publicKey","URI","user","Store","useState","isConfirmingRemoval","setIsConfirmingRemoval","toggleConfirmingRemoval","useCallback","confirming","handleClickOnWarning","handleRemovalConfirmation","malformedHost","JSON","stringify","className","classNames","gStyles","onClick","styles","container","pill","ShockAvatar","height","toLowerCase","displayName","Common","style","fontSize","yellow","blue","BUTTON_HOLDER_CLASS_NAME","ContentHostInputView","unorderedHosts","hosts","onAddHost","onRemoveHost","onRetryHost","publicKeyOrServerURI","URIHostAwaitingForToken","setPublicKeyOrServerURIData","hostForErrorDialog","setHostForErrorDialog","open","setOpen","input","useRef","isPasting","setIsPasting","token","setToken","tokenInput","isPastingToken","setIsPastingToken","sortedHosts","useMemo","slice","sort","a","b","dateAdded","defaultHosts","filter","h","nonDefaultHosts","handleFocus","onClickPaste","navigator","clipboard","readText","then","txt","produce","data","catch","e","alert","message","finally","current","focus","document","execCommand","blur","onClickAdd","url","Utils","handleTokenPaste","handleTokenAdd","handleHostRemoval","publicKeyOrURI","closeErrorDialog","handleRemovalOfHostWithError","handleHostRetry","onChange","target","value","type","onKeyUp","key","keyCode","autoCapitalize","autoCorrect","placeholder","ref","onFocus","length","disabled","map","host","Modal","modalOpen","modalTitle","find","toggleModal","ContentHostInput","dispatch","useDispatch","seedProviderPub","content","userProfiles","seedInfo","seedUrl","seedToken","setHosts","providerProfile","setProviderProfile","providedService","setProvidedService","priceToUpdate","setPriceToUpdate","providerError","setProviderError","useEffect","provProfile","avatar","SeedServiceProvided","toSet","push","Date","now","Http","get","service","servicePrice","tmpHosts","providerIndex","findIndex","err","addHost","startsWith","setSeedInfo","setSeedProviderPub","removeHost","subscribeUserProfile","filteredHosts","Post","React","lazy","SharedPost","AVAILABLE_WEB_CLIENT_PREFIXES","ProfilePage","profileModalOpen","setProfileModalOpen","deletePostModalData","setDeletePostModalData","posts","feed","node","hostIP","myServices","orders","selectedView","setSelectedView","useSelector","myPosts","alpha","isSharedPost","shareDate","date","subscription","subscribeMyServices","rifleCleanup","postSubscription","subscribeUserPosts","sharedPostSubscription","subscribeSharedUserPosts","profileConfigModalOpen","setProfileConfigModalOpen","currWebClientPrefix","setWebClientPrefix","newWebClientPrefix","setNewWebClientPrefix","copyWebClientUrlToClipboard","writeText","placeholderEl","querySelector","display","select","subscribeClientPrefix","console","debug","socket","rifle","query","onData","webClientPrefixReceived","post","path","onError","errorMessage","handleViewChange","view","somethingInsideConfigModalChanged","toggleConfigModal","onConfigCancel","onConfigSubmit","headerImageFileInput","settingHeader","setSettingHeader","onSelectedHeaderFile","preventDefault","files","file","imageObtained","base64","onPressHeader","click","toggleDeleteModal","deleteData","log","closeDeleteModal","deletePost","id","shared","deleteUserPost","authorId","copyClipboard","dnModalOpen","setDnModalOpen","newDisplayName","setNewDisplayName","newDnIfBeingSaved","setNewDnIfBeingSaved","saveNewDisplayName","toBeSaved","put","toggleDnModal","handleOkDnChange","dnModalStyle","padding","bio","bioModalOpen","setBioModalOpen","newBio","setNewBio","newBioIfBeingSaved","setNewBioIfBeingSaved","saveNewBio","toggleBioModal","handleOkBioChange","bioModalStyle","header","alt","src","width","setsAvatar","greyBorder","disableOnlineRing","c","to","backgroundColor","color","flexDirection","justifyContent","alignItems","borderRadius","fontWeight","ProfileDivider","selected","index","sharerProfile","sharerId","originalPublicKey","originalAuthor","originalProfile","fallback","Loader","originalPost","originalPostProfile","sharedTimestamp","postPublicKey","openTipModal","openUnlockModal","openDeleteModal","profile","timestamp","contentItems","username","processDisplayName","tipCounter","tipValue","Object","entries","serviceType","serviceTitle","serviceDescription","serviceCondition","deleteService","Pad","amt","contentStyle","bgColor","fgColor","size","readOnly","ClipboardIcon","htmlFor","name","prefix","marginTop","AddBtn","large","iconURL","QRCodeIcon","icon","label","BottomBar","hidden","accept"],"mappings":"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","file":"static/js/27.3b433b25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentHostInputView_container__1CVAn\",\"uri-or-token-input\":\"ContentHostInputView_uri-or-token-input__3vg5h\",\"plus-or-paste-btn\":\"ContentHostInputView_plus-or-paste-btn__3z_k0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container-base\":\"Host_container-base__r5EJP\",\"remove-or-cancel\":\"Host_remove-or-cancel__2sHhe Host_container-base__r5EJP\",\"container\":\"Host_container__2hPww Host_container-base__r5EJP\",\"pill\":\"Host_pill__1WzlY\",\"display-name-or-uri\":\"Host_display-name-or-uri__2eaUy\",\"price-and-status\":\"Host_price-and-status__3Q4n3\",\"price\":\"Host_price__2oEgL\",\"red\":\"Host_red__1kS00\",\"yellow\":\"Host_yellow__3DLEG\",\"blue\":\"Host_blue__3m2Kb\"};","import { useCallback, useState } from \"react\";\nimport * as Common from \"shock-common\";\nimport classNames from \"classnames\";\n\nimport ShockAvatar from \"../../ShockAvatar\";\nimport * as gStyles from \"../../../styles\";\nimport * as Store from \"../../../store\";\n\nimport styles from \"./Host.module.css\";\n\nexport interface IHost {\n  /**\n   * Can be empty if publicKey is provided.\n   */\n  URI: string | null;\n  /**\n   * Unix timestamp.\n   */\n  dateAdded: number;\n  /**\n   * An empty string means no error. If there's an error adding the host,\n   * instead of making it disappear, have it show up with a warning the user can\n   * interact with, after the user clicks on it the actual error message will\n   * show up in a dialog.\n   */\n  error: string;\n  /**\n   * The host will be rendered with an indication that it is being added as\n   * opposed to being added already.\n   */\n  isBeingAddedOrDeleted: boolean;\n  /**\n   * Will render a check mark.\n   */\n  isDefault: boolean;\n  /**\n   * In sats.\n   */\n  price: number;\n  /**\n   * Can be empty if URI is provided.\n   */\n  publicKey: string | null;\n  /**\n   * Token for the service.\n   */\n  token: string;\n}\n\nexport interface HostProps extends IHost {\n  onClickRemove(publicKeyOrURI: string): void;\n  /**\n   * Called when clicking on the warning icon on a host with an error set.\n   */\n  onClickWarning(publicKeyOrURI: string): void;\n}\n\nconst Host = ({\n  error: hostError,\n  isBeingAddedOrDeleted,\n  isDefault,\n  onClickRemove,\n  onClickWarning,\n  price,\n  publicKey,\n  URI\n}: HostProps) => {\n  const user = Store.useSelector(Store.selectUser(publicKey));\n  const [isConfirmingRemoval, setIsConfirmingRemoval] = useState<boolean>(\n    false\n  );\n  const toggleConfirmingRemoval = useCallback(() => {\n    setIsConfirmingRemoval(confirming => !confirming);\n  }, []);\n\n  const handleClickOnWarning = useCallback(() => {\n    onClickWarning(publicKey || URI);\n  }, [onClickWarning, publicKey, URI]);\n\n  const handleRemovalConfirmation = useCallback(() => {\n    onClickRemove(publicKey || URI);\n  }, [onClickRemove, publicKey, URI]);\n\n  const malformedHost =\n    (hostError && isBeingAddedOrDeleted) ||\n    (publicKey && URI) ||\n    (!publicKey && !URI);\n\n  let error = hostError;\n\n  if (malformedHost) {\n    error = `Malformed host provided to <Host />, it must have either a public key or an URI (though not both), and it must not have both truthy error and isAdding props at the same time: ${JSON.stringify(\n      malformedHost\n    )}`;\n  }\n\n  if (isConfirmingRemoval) {\n    return (\n      <div\n        className={classNames(\n          gStyles.rowCentered,\n          gStyles.centerJustify,\n          gStyles.width100\n        )}\n      >\n        <button\n          onClick={handleRemovalConfirmation}\n          className={classNames(gStyles.flatBtnFullWidth)}\n        >\n          Remove\n        </button>\n\n        <button\n          onClick={toggleConfirmingRemoval}\n          className={classNames(gStyles.flatBtnFullWidth)}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classNames(\n        gStyles.rowCentered,\n        gStyles.spaceBetween,\n        gStyles.childrenSpaced24,\n        styles.container\n      )}\n    >\n      <div\n        className={classNames(\n          gStyles.rowCentered,\n          gStyles.spaceBetween,\n          gStyles.childrenSpaced8,\n          styles.pill\n        )}\n      >\n        {publicKey ? (\n          <ShockAvatar height={24} publicKey={publicKey} />\n        ) : (\n          <i className={classNames(\"fas fa-globe\")}></i>\n        )}\n\n        <span className={styles[\"display-name-or-uri\"]}>\n          {(URI && URI.toLowerCase()) ||\n            user.displayName ||\n            Common.defaultName(publicKey)}\n        </span>\n\n        {isBeingAddedOrDeleted || error ? (\n          <div />\n        ) : (\n          <span\n            className=\"fas fa-times\"\n            onClick={toggleConfirmingRemoval}\n            style={{\n              fontSize: 12\n            }}\n          />\n        )}\n      </div>\n\n      <div\n        className={classNames(\n          gStyles.flex,\n          gStyles.childrenSpaced24,\n          styles[\"price-and-status\"]\n        )}\n      >\n        <span className={classNames(gStyles.flex, styles.price)}>\n          {price} sats\n        </span>\n\n        {(() => {\n          if (error) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-exclamation-triangle\",\n                  gStyles.fontSize12,\n                  styles.yellow\n                )}\n                onClick={handleClickOnWarning}\n              />\n            );\n          }\n\n          if (isBeingAddedOrDeleted) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-hourglass-half\",\n                  gStyles.fontSize12,\n                  styles.yellow\n                )}\n              />\n            );\n          }\n\n          if (isDefault) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-check\",\n                  gStyles.fontSize12,\n                  styles.blue\n                )}\n              />\n            );\n          }\n\n          return (\n            <i\n              className={classNames(\n                \"fas fa-link\",\n                gStyles.fontSize12,\n                styles.blue\n              )}\n            ></i>\n          );\n        })()}\n      </div>\n    </div>\n  );\n};\n\nexport default Host;\n","import { useCallback, useMemo, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport produce from \"immer\";\n\nimport * as gStyles from \"../../../styles\";\nimport Modal from \"../../Modal\";\nimport * as Utils from \"../../../utils\";\n\nimport styles from \"./ContentHostInputView.module.css\";\nimport Host, { IHost as _IHost } from \"./Host\";\n\nexport type IHost = _IHost;\n\nexport interface ContentHostInputViewProps {\n  hosts: IHost[];\n  /**\n   * A token will be provided if the content host being added is a URI, the\n   * token will be required from the user before calling this callback.\n   */\n  onAddHost(publicKeyOrServerURI: string, token?: string): void;\n  onRemoveHost(publicKeyOrServerURI: string): void;\n  /**\n   * If a host has an error set, the user will be offered to retry adding it.\n   */\n  onRetryHost(publicKeyOrServerURI: string): void;\n}\n\nconst ContentHostInputView = ({\n  hosts: unorderedHosts,\n  onAddHost,\n  onRemoveHost,\n  onRetryHost\n}: ContentHostInputViewProps) => {\n  type PublicKeyOrServerURIData = {\n    publicKeyOrServerURI: string;\n    URIHostAwaitingForToken: string;\n  };\n  const [\n    { publicKeyOrServerURI, URIHostAwaitingForToken },\n    setPublicKeyOrServerURIData\n  ] = useState<PublicKeyOrServerURIData>({\n    publicKeyOrServerURI: \"\",\n    URIHostAwaitingForToken: \"\"\n  });\n  const [hostForErrorDialog, setHostForErrorDialog] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const input = useRef<HTMLInputElement>(null);\n  const [isPasting, setIsPasting] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const tokenInput = useRef<HTMLInputElement>(null);\n  const [isPastingToken, setIsPastingToken] = useState(false);\n\n  const sortedHosts = useMemo(\n    () =>\n      unorderedHosts.slice().sort((a, b) => {\n        return b.dateAdded - a.dateAdded;\n      }),\n    [unorderedHosts]\n  );\n\n  const defaultHosts = useMemo(() => sortedHosts.filter(h => h.isDefault), [\n    sortedHosts\n  ]);\n\n  const nonDefaultHosts = useMemo(() => sortedHosts.filter(h => !h.isDefault), [\n    sortedHosts\n  ]);\n\n  const hosts = useMemo(() => [...defaultHosts, ...nonDefaultHosts], [\n    defaultHosts,\n    nonDefaultHosts\n  ]);\n\n  const handleFocus = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const onClickPaste = useCallback(() => {\n    if (isPasting) {\n      return;\n    }\n\n    if (navigator.clipboard) {\n      setIsPasting(true);\n      navigator.clipboard\n        .readText()\n        .then(txt => {\n          setPublicKeyOrServerURIData(\n            produce((data: PublicKeyOrServerURIData) => {\n              data.publicKeyOrServerURI = txt;\n            })\n          );\n        })\n        .catch(e => {\n          alert(`Could not paste: ${e.message}`);\n        })\n        .finally(() => {\n          setIsPasting(false);\n        });\n    } else {\n      if (input.current) {\n        input.current.focus();\n        document.execCommand(\"paste\");\n        input.current.blur();\n      }\n    }\n  }, [isPasting, setIsPasting]);\n\n  const onClickAdd = useCallback(() => {\n    setPublicKeyOrServerURIData(\n      produce((data: PublicKeyOrServerURIData) => {\n        const url = Utils.normalizeURL(data.publicKeyOrServerURI);\n\n        if (url) {\n          data.publicKeyOrServerURI = url;\n          data.URIHostAwaitingForToken = url;\n        }\n      })\n    );\n\n    const url = Utils.normalizeURL(publicKeyOrServerURI);\n\n    if (!url) {\n      onAddHost(publicKeyOrServerURI);\n    }\n  }, [setPublicKeyOrServerURIData, publicKeyOrServerURI, onAddHost]);\n\n  const handleTokenPaste = useCallback(() => {\n    if (isPastingToken) {\n      return;\n    }\n\n    if (navigator.clipboard) {\n      setIsPastingToken(true);\n      navigator.clipboard\n        .readText()\n        .then(txt => {\n          setToken(txt);\n        })\n        .catch(e => {\n          alert(`Could not paste: ${e.message}`);\n        })\n        .finally(() => {\n          setIsPastingToken(false);\n        });\n    } else {\n      if (tokenInput.current) {\n        tokenInput.current.focus();\n        document.execCommand(\"paste\");\n        tokenInput.current.blur();\n      }\n    }\n  }, [isPastingToken, setIsPastingToken, setToken]);\n\n  const handleTokenAdd = useCallback(() => {\n    setPublicKeyOrServerURIData(\n      produce((data: PublicKeyOrServerURIData) => {\n        data.publicKeyOrServerURI = \"\";\n        data.URIHostAwaitingForToken = \"\";\n      })\n    );\n\n    onAddHost(publicKeyOrServerURI, token);\n  }, [setPublicKeyOrServerURIData, onAddHost, publicKeyOrServerURI, token]);\n\n  const handleHostRemoval = useCallback(\n    (publicKeyOrURI: string) => {\n      onRemoveHost(publicKeyOrURI);\n    },\n    [onRemoveHost]\n  );\n\n  const closeErrorDialog = useCallback(() => {\n    setHostForErrorDialog(\"\");\n  }, [setHostForErrorDialog]);\n\n  const handleRemovalOfHostWithError = useCallback(() => {\n    onRemoveHost(hostForErrorDialog);\n    closeErrorDialog();\n  }, [onRemoveHost, hostForErrorDialog, closeErrorDialog]);\n\n  const handleHostRetry = useCallback(() => {\n    onRetryHost(hostForErrorDialog);\n    setHostForErrorDialog(\"\");\n  }, [onRetryHost, hostForErrorDialog, setHostForErrorDialog]);\n\n  return (\n    <>\n      <div\n        className={classNames(gStyles.col, gStyles.width100, styles.container)}\n      >\n        <div className={(gStyles.row, gStyles.centerJustify)}>\n          {/* https://stackoverflow.com/a/15314433 */}\n          <input\n            className={classNames(\"input-field\", styles[\"uri-or-token-input\"])}\n            onChange={e => {\n              setPublicKeyOrServerURIData(\n                produce((data: PublicKeyOrServerURIData) => {\n                  data.publicKeyOrServerURI = e.target.value;\n                  data.URIHostAwaitingForToken = \"\";\n                })\n              );\n\n              setToken(\"\");\n            }}\n            type=\"text\"\n            value={publicKeyOrServerURI}\n            onKeyUp={e => {\n              if (e.key === \"Enter\" || e.keyCode === 13) {\n                onClickAdd();\n              }\n            }}\n            autoCapitalize=\"off\"\n            autoCorrect=\"none\"\n            placeholder=\"Provider Pubkey or Server URI (include https or http)\"\n            ref={input}\n            onFocus={handleFocus}\n          />\n\n          {publicKeyOrServerURI.length === 0 && (\n            <button\n              className={classNames(\n                gStyles.flatBtn,\n                styles[\"plus-or-paste-btn\"]\n              )}\n              disabled={isPasting}\n              onClick={onClickPaste}\n            >\n              <i className=\"fas fa-paste\"></i>\n            </button>\n          )}\n\n          {publicKeyOrServerURI.length > 0 &&\n            publicKeyOrServerURI !== URIHostAwaitingForToken && (\n              <button\n                className={classNames(\n                  gStyles.flatBtn,\n                  styles[\"plus-or-paste-btn\"]\n                )}\n                disabled={publicKeyOrServerURI.length === 0}\n                onClick={onClickAdd}\n              >\n                +\n              </button>\n            )}\n        </div>\n\n        {publicKeyOrServerURI.length > 0 &&\n          publicKeyOrServerURI === URIHostAwaitingForToken && (\n            <div className={(gStyles.row, gStyles.centerJustify)}>\n              <input\n                className={classNames(\n                  \"input-field\",\n                  styles[\"uri-or-token-input\"]\n                )}\n                onChange={e => {\n                  setToken(e.target.value);\n                }}\n                type=\"text\"\n                value={token}\n                onKeyUp={e => {\n                  if (e.key === \"Enter\" || e.keyCode === 13) {\n                    handleTokenAdd();\n                  }\n                }}\n                autoCapitalize=\"off\"\n                autoCorrect=\"none\"\n                placeholder=\"Token (required)\"\n                ref={tokenInput}\n              />\n\n              {token.length === 0 && (\n                <button\n                  className={classNames(\n                    gStyles.flatBtn,\n                    styles[\"plus-or-paste-btn\"]\n                  )}\n                  disabled={isPastingToken}\n                  onClick={handleTokenPaste}\n                >\n                  <i className=\"fas fa-paste\"></i>\n                </button>\n              )}\n\n              {token.length > 0 && (\n                <button\n                  className={classNames(\n                    gStyles.flatBtn,\n                    styles[\"plus-or-paste-btn\"]\n                  )}\n                  disabled={token.length === 0}\n                  onClick={handleTokenAdd}\n                >\n                  +\n                </button>\n              )}\n            </div>\n          )}\n\n        <div className={classNames(gStyles.col)}>\n          {(open ? hosts : defaultHosts).map(host => (\n            <Host\n              URI={host.URI}\n              dateAdded={0}\n              error={host.error}\n              isBeingAddedOrDeleted={host.isBeingAddedOrDeleted}\n              isDefault={host.isDefault}\n              key={host.publicKey || host.URI}\n              onClickRemove={handleHostRemoval}\n              onClickWarning={setHostForErrorDialog}\n              price={host.price}\n              publicKey={host.publicKey}\n              token={host.token}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* TODO: change to global modal */}\n      <Modal\n        modalOpen={!!hostForErrorDialog}\n        modalTitle={\n          hosts.find(\n            h =>\n              h.publicKey === hostForErrorDialog || h.URI === hostForErrorDialog\n          )?.error\n        }\n        toggleModal={closeErrorDialog}\n      >\n        <div className={BUTTON_HOLDER_CLASS_NAME}>\n          <button\n            onClick={handleRemovalOfHostWithError}\n            className=\"shock-form-button m-1\"\n          >\n            REMOVE\n          </button>\n\n          <button\n            onClick={handleHostRetry}\n            className=\"shock-form-button-confirm m-1\"\n          >\n            RETRY\n          </button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nconst BUTTON_HOLDER_CLASS_NAME = classNames(\n  gStyles.rowCentered,\n  gStyles.width100,\n  gStyles.centerJustify,\n  gStyles.childrenSpaced16,\n  gStyles.padding12\n);\n\nexport default ContentHostInputView;\n","import ContentHostInput from \"./ContentHostInput\";\n\nexport default ContentHostInput;\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as Store from \"../../store\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"../../actions/UserProfilesActions\";\n\nimport ContentHostInputView, { IHost } from \"./components/ContentHostInputView\";\nimport { Http } from \"../../utils\";\nimport { setSeedInfo, setSeedProviderPub } from \"../../actions/ContentActions\";\n\nconst ContentHostInput = () => {\n  const dispatch = useDispatch();\n  const seedProviderPub = Store.useSelector(\n    ({ content }) => content.seedProviderPub\n  );\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const { seedUrl, seedToken } = Store.useSelector(\n    ({ content }) => content.seedInfo\n  );\n  const [hosts, setHosts] = useState<IHost[]>([]);\n  const [providerProfile, setProviderProfile] = useState(null);\n  const [providedService, setProvidedService] = useState(\"\");\n  const [priceToUpdate, setPriceToUpdate] = useState(0);\n  const [providerError, setProviderError] = useState(\"\");\n  //effect for user profile\n  useEffect(() => {\n    const provProfile = userProfiles[seedProviderPub];\n    if (!provProfile) {\n      setProviderProfile(null);\n      return;\n    }\n    if (!providerProfile) {\n      setProviderProfile(provProfile);\n      return;\n    }\n    if (provProfile.avatar !== providerProfile.avatar) {\n      setProviderProfile(provProfile);\n      return;\n    }\n    if (\n      // @ts-expect-error\n      provProfile.SeedServiceProvided !== providerProfile.SeedServiceProvided\n    ) {\n      setProviderProfile(provProfile);\n      return;\n    }\n  }, [userProfiles, seedProviderPub, providerProfile, setProviderProfile]);\n  //effect to check provided service\n  useEffect(() => {\n    if (!providerProfile) {\n      return;\n    }\n    const { SeedServiceProvided } = providerProfile;\n    if (SeedServiceProvided !== providedService) {\n      setProvidedService(SeedServiceProvided);\n    }\n  }, [providerProfile, providedService, setProvidedService]);\n  //effect to populate the hosts\n  useEffect(() => {\n    let toSet = [];\n    if (seedUrl && seedToken) {\n      toSet.push({\n        URI: seedUrl,\n        token: seedToken,\n        price: 0,\n        isBeingAddedOrDeleted: false,\n        dateAdded: Date.now(),\n        isDefault: true,\n        error: null,\n        publicKey: null\n      });\n    }\n    if (seedProviderPub && providerProfile) {\n      toSet.push({\n        dateAdded: Date.now(),\n        isBeingAddedOrDeleted: true,\n        isDefault: true,\n        publicKey: seedProviderPub,\n        price: 0,\n        URI: null,\n        token: null,\n        error: null\n      });\n    }\n    setHosts(toSet);\n  }, [seedUrl, seedToken, seedProviderPub, providerProfile, setHosts]);\n  //effect to fetch provided service\n  useEffect(() => {\n    if (!providedService) {\n      return;\n    }\n    Http.get(\n      `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${providedService}`\n    )\n      .then(({ data }) => {\n        const { data: service } = data;\n        setPriceToUpdate(service.servicePrice)\n      })\n      .catch(e => {\n        setProviderError(e)\n      });\n  }, [providedService, seedProviderPub,setPriceToUpdate,setProviderError]);\n  //effect to update service \n  useEffect(() => {\n    const tmpHosts = [...hosts];\n    const providerIndex = tmpHosts.findIndex(host => !host.URI);\n    if (providerIndex === -1 || tmpHosts[providerIndex].price === priceToUpdate) {\n      return;\n    }\n    tmpHosts[providerIndex].isBeingAddedOrDeleted = false;\n    tmpHosts[providerIndex].price = priceToUpdate;\n    setHosts(tmpHosts);\n  },[priceToUpdate,setPriceToUpdate,hosts,setHosts])\n  //effect to update error\n  useEffect(() =>{\n    //@ts-expect-error\n    const err = providerError.message || providerError;\n    const tmpHosts = [...hosts];\n    const providerIndex = tmpHosts.findIndex(host => !host.URI);\n    if(providerIndex === -1 || err === tmpHosts[providerIndex].error){\n      return\n    }\n    tmpHosts[providerIndex].isBeingAddedOrDeleted = false;\n    tmpHosts[providerIndex].error = err\n    setHosts(tmpHosts);\n  },[providerError,setProviderError,hosts,setHosts])\n  const addHost = useCallback(\n    (publicKeyOrURI, token) => {\n      if (publicKeyOrURI.startsWith(\"http\")) {\n        setSeedInfo(publicKeyOrURI, token)(dispatch);\n      } else {\n        setSeedProviderPub(publicKeyOrURI)(dispatch);\n      }\n    },\n    [dispatch]\n  );\n\n  const removeHost = useCallback(\n    publicKeyOrURI => {\n      if (publicKeyOrURI.startsWith(\"http\")) {\n        setSeedInfo(\"\", \"\")(dispatch);\n      } else {\n        setSeedProviderPub(\"\")(dispatch);\n      }\n    },\n    [dispatch]\n  );\n\n  // @ts-ignore\n  useEffect(() => {\n    const unsubscribe = dispatch(subscribeUserProfile(seedProviderPub));\n\n    return unsubscribe;\n  }, [seedProviderPub, dispatch]);\n  const filteredHosts = useMemo(() => {\n    return hosts.filter(h => h);\n  }, [hosts]);\n  return (\n    <ContentHostInputView\n      hosts={filteredHosts}\n      onAddHost={addHost}\n      onRemoveHost={removeHost}\n      onRetryHost={() => {}}\n    />\n  );\n};\n\nexport default ContentHostInput;\n","import React, {\n  Suspense,\n  useCallback,\n  useMemo,\n  useState,\n  useEffect,\n  useRef,\n  InputHTMLAttributes\n} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport QRCode from \"qrcode.react\";\nimport { Link } from \"react-router-dom\";\nimport c from \"classnames\";\nimport * as Common from \"shock-common\";\n\nimport { processDisplayName } from \"../../utils/String\";\n\nimport * as Utils from \"../../utils\";\nimport {\n  deleteService,\n  subscribeMyServices\n} from \"../../actions/OrdersActions\";\nimport * as gStyles from \"../../styles\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ContentHostInput from \"../../common/ContentHostInput\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport * as Store from \"../../store\";\nimport { rifle, rifleCleanup } from \"../../utils/WebSocket\";\n\nimport \"./css/index.css\";\nimport { deleteUserPost, subscribeSharedUserPosts, subscribeUserPosts } from \"../../actions/FeedActions\";\nimport { isSharedPost } from \"../../schema\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nexport type WebClientPrefix =\n  | \"https://shock.page\"\n  | \"https://shock.pub\"\n  | \"https://lightning.page\"\n  | \"https://satoshi.watch\";\n\nconst ProfilePage = () => {\n  const dispatch = useDispatch();\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n  const [deletePostModalData, setDeletePostModalData] = useState(null);\n\n  const posts = Store.useSelector(({ feed }) => feed.posts);\n  const publicKey = Store.useSelector(({ node }) => node.publicKey);\n  const hostIP = Store.useSelector(({ node }) => node.hostIP);\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n\n  const myServices = Store.useSelector(({ orders }) => orders.myServices);\n  const [selectedView, setSelectedView] = useState<\"posts\" | \"services\">(\n    \"posts\"\n  );\n  const user = useSelector(Store.selectSelfUser);\n  const myPosts = useMemo(() => {\n    if (posts && posts[publicKey]) {\n      const myP = posts[publicKey].sort((a, b) => {\n        const alpha = isSharedPost(a) ? a.shareDate : a.date;\n        const beta = isSharedPost(b) ? b.shareDate : b.date;\n\n        return beta - alpha;\n      });\n      return myP;\n    }\n    return [];\n  }, [posts, publicKey]);\n\n  useEffect(() => {\n    const subscription = subscribeMyServices()(dispatch);\n\n    return rifleCleanup(subscription);\n  }, [dispatch]);\n\n  useEffect(() => {\n    const postSubscription = dispatch(subscribeUserPosts(publicKey))\n    const sharedPostSubscription = dispatch(subscribeSharedUserPosts(publicKey))\n\n    return rifleCleanup(postSubscription, sharedPostSubscription)\n  }, [publicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  // ------------------------------------------------------------------------ //\n  // CONFIG MODAL\n\n  const [profileConfigModalOpen, setProfileConfigModalOpen] = useState(false);\n  const [currWebClientPrefix, setWebClientPrefix] = useState<WebClientPrefix>(\n    AVAILABLE_WEB_CLIENT_PREFIXES[0]\n  );\n  const [newWebClientPrefix, setNewWebClientPrefix] = useState<WebClientPrefix>(\n    AVAILABLE_WEB_CLIENT_PREFIXES[0]\n  );\n\n  const copyWebClientUrlToClipboard = useCallback(() => {\n    // some browsers/platforms don't support navigator.clipboard\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(newWebClientPrefix + \"/\" + publicKey);\n    } else {\n      const placeholderEl = document.querySelector(\n        \"#web-client-url-holder\"\n      ) as HTMLInputElement;\n      placeholderEl.style.display = \"block\";\n      placeholderEl.select();\n      document.execCommand(\"copy\");\n      placeholderEl.blur();\n      placeholderEl.style.display = \"none\";\n    }\n  }, [newWebClientPrefix, publicKey]);\n\n  const subscribeClientPrefix = useCallback(() => {\n    // Extraneous logs but helps us not having eslint complain about these\n    // \"unnecessary\" dependencies below without disabling the\n    console.debug(\n      `Subbing to webclient prefix on hostIP --| ${hostIP} |-- and public key --| ${publicKey} |--`\n    );\n    const query = `$user::Profile>webClientPrefix::on`;\n\n    const socket = rifle({\n      query,\n      onData: (webClientPrefixReceived: unknown) => {\n        if (typeof webClientPrefixReceived === \"string\") {\n          setWebClientPrefix(webClientPrefixReceived as WebClientPrefix);\n        } else {\n          Utils.Http.post(`/api/gun/put`, {\n            path: \"$user>Profile>webClientPrefix\",\n            value: AVAILABLE_WEB_CLIENT_PREFIXES[0]\n          }).catch(e => {\n            alert(`Error setting default web client prefix: ${e.message}`);\n          });\n        }\n      },\n      onError: (errorMessage: string) => {\n        alert(`There was an error fetching web client prefix: ${errorMessage}`);\n      }\n    });\n\n    return rifleCleanup(socket);\n  }, [hostIP, publicKey /* handles alias/hostIP switch */]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeClientPrefix();\n\n    return unsubscribe;\n  }, [subscribeClientPrefix]);\n\n  const handleViewChange = useCallback((view: \"posts\" | \"services\") => {\n    setSelectedView(view);\n  }, []);\n  //#region configModal ----------------------------------------------------- //\n  const somethingInsideConfigModalChanged =\n    newWebClientPrefix !== currWebClientPrefix;\n\n  const toggleConfigModal = useCallback(() => {\n    setProfileConfigModalOpen(open => !open);\n    setNewWebClientPrefix(currWebClientPrefix);\n  }, [currWebClientPrefix]);\n\n  const onConfigCancel = useCallback(() => {\n    toggleConfigModal();\n  }, [toggleConfigModal]);\n\n  const onConfigSubmit = useCallback(() => {\n    if (newWebClientPrefix !== currWebClientPrefix) {\n      Utils.Http.post(`/api/gun/put`, {\n        path: \"$user>Profile>webClientPrefix\",\n        value: newWebClientPrefix\n      }).catch(e => {\n        alert(\n          `There was an error setting your web client prefix: ${e.message}`\n        );\n      });\n    }\n    toggleConfigModal();\n  }, [toggleConfigModal, newWebClientPrefix, currWebClientPrefix]);\n  //#endregion configModal -------------------------------------------------- //\n  //#region header ---------------------------------------------------------- //\n  const headerImageFileInput = useRef<HTMLInputElement>(null);\n  const [settingHeader, setSettingHeader] = useState<boolean>(false);\n\n  const onSelectedHeaderFile: InputHTMLAttributes<{}>[\"onChange\"] = async e => {\n    try {\n      e.preventDefault();\n      if (settingHeader) {\n        return;\n      }\n\n      setSettingHeader(true);\n\n      const { files } = (e.target as unknown) as {\n        files: readonly Utils.File[];\n      };\n\n      if (files.length === 0) {\n        return;\n      }\n\n      if (files.length !== 1) {\n        Utils.logger.error(`Profile -> files.length !== 1`);\n        alert(\n          `An error occurred while trying to set a header. This has been logged.`\n        );\n        return;\n      }\n\n      const [file] = files;\n\n      const imageObtained = await Utils.processImageFile(file, 320, 0.7);\n\n      const DATA_URL_TYPE_PREFIX = \"data:image/jpeg;base64,\";\n      const base64 = imageObtained.slice(DATA_URL_TYPE_PREFIX.length);\n\n      await Utils.Http.post(`/api/gun/put`, {\n        path: \"$user>profileBinary>header\",\n        value: base64\n      });\n    } catch (e) {\n      Utils.logger.error(`Error while trying to load new header.`);\n      Utils.logger.error(e);\n      alert(\n        \"There was an error loading the new header, this has error has been logged.\"\n      );\n    } finally {\n      setSettingHeader(false);\n    }\n  };\n\n  const onPressHeader = useCallback(e => {\n    e.preventDefault();\n    const { current } = headerImageFileInput;\n    if (!current) {\n      Utils.logger.error(\"File input element for avatar is falsy.\");\n      alert(\"There was an error and it was logged.\");\n    }\n    current.click();\n  }, []);\n  //#endregion header ------------------------------------------------------- //\n  //#region deleteModal------------------------------------------------------ //\n  const toggleDeleteModal = useCallback(\n    deleteData => {\n      console.log(deleteData);\n      if (deletePostModalData || !deleteData) {\n        setDeletePostModalData(null);\n      }\n      setDeletePostModalData(deleteData);\n    },\n    [deletePostModalData]\n  );\n  const closeDeleteModal = useCallback(() => {\n    setDeletePostModalData(null);\n  }, []);\n\n  const deletePost = useCallback(async () => {\n    try {\n      if (!deletePostModalData || !deletePostModalData.id) {\n        return;\n      }\n      console.log(\"deleting:\");\n      console.log(deletePostModalData);\n      const key = deletePostModalData.shared ? \"sharedPosts\" : \"posts\";\n      await Utils.Http.post(\"/api/gun/put\", {\n        path: `$user>${key}>${deletePostModalData.id}`,\n        value: null\n      });\n      dispatch(\n        deleteUserPost({\n          id: deletePostModalData.id,\n          authorId: publicKey\n        })\n      );\n      toggleDeleteModal(null);\n    } catch (e) {\n      console.log(`Error when deleting post:`);\n      console.log(e);\n      alert(`Could not delete post: ${e.message}`);\n    }\n  }, [deletePostModalData, dispatch, publicKey, toggleDeleteModal]);\n  const copyClipboard = useCallback(() => {\n    try {\n      // some browsers/platforms don't support navigator.clipboard\n      if (navigator.clipboard) {\n        navigator.clipboard.writeText(publicKey);\n      } else {\n        const placeholderEl = document.querySelector(\n          \"#public-key-holder\"\n        ) as HTMLInputElement;\n        placeholderEl.style.display = \"block\";\n        placeholderEl.select();\n        document.execCommand(\"copy\");\n        placeholderEl.blur();\n        placeholderEl.style.display = \"none\";\n        setProfileModalOpen(false);\n      }\n    } catch (e) {\n      alert(`Could not copy to clipboard: ${e.message}`);\n    }\n  }, [publicKey]);\n\n  const AVATAR_SIZE = 122;\n\n  const renderPosts = () => {\n    return myPosts.map((post, index) => {\n      if (post.type === \"shared\") {\n        // TODO: ensure users reducer receives sharer profiles\n        const sharerProfile =\n          userProfiles[post.sharerId] || Common.createEmptyUser(post.sharerId);\n        const originalPublicKey = post.originalAuthor;\n        const originalProfile =\n          userProfiles[originalPublicKey] ||\n          Common.createEmptyUser(originalPublicKey);\n        return (\n          <Suspense\n            fallback={<Loader />}\n            key={post.sharerId + post.originalPost.id}\n          >\n            <SharedPost\n              originalPost={post.originalPost}\n              originalPostProfile={originalProfile}\n              sharedTimestamp={post.shareDate}\n              sharerProfile={sharerProfile}\n              postPublicKey={originalPublicKey}\n              openTipModal={() => {}}\n              openUnlockModal={() => {}}\n              openDeleteModal={toggleDeleteModal}\n            />\n          </Suspense>\n        );\n      }\n\n      const profile =\n        userProfiles[post.authorId] || Common.createEmptyUser(post.authorId);\n\n      return (\n        <Suspense fallback={<Loader />} key={post.id}>\n          <Post\n            id={post.id}\n            timestamp={post.date}\n            contentItems={post.contentItems}\n            avatar={`data:image/jpeg;base64,${profile?.avatar}`}\n            username={processDisplayName(\n              profile?.publicKey,\n              profile?.displayName\n            )}\n            publicKey={post.authorId}\n            openTipModal={() => {}}\n            openUnlockModal={() => {}}\n            tipCounter={0}\n            tipValue={0}\n            openDeleteModal={toggleDeleteModal}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    console.log(myServices);\n    return Object.entries(myServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, serv]) => {\n        const service = serv as Record<string, string>;\n        const deleteCB = () => {\n          console.log(\"delete wtf\");\n          deleteService(id)(dispatch);\n        };\n        return (\n          <div className=\"post\" key={id}>\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            <p>{service.serviceType || \"\"}</p>\n            <strong>Service Title</strong>\n            <p>{service.serviceTitle || \"\"}</p>\n            <strong>Service Description</strong>\n            <p>{service.serviceDescription || \"\"}</p>\n            <strong>Service Condition</strong>\n            <p>{service.serviceCondition || \"\"}</p>\n            <strong>Service Price</strong>\n            <p>{service.servicePrice || \"\"}</p>\n            <button onClick={deleteCB}>DELETE SERVICE</button>\n          </div>\n        );\n      });\n  };\n  //#endregion deleteModal------------------------------------------------------ //\n  //#region displayName ----------------------------------------------------- //\n  const [dnModalOpen, setDnModalOpen] = useState(false);\n  const { displayName } = user;\n  // stores the display name input value\n  const [newDisplayName, setNewDisplayName] = useState(user.displayName);\n  // stores the new display name while it's being uploaded\n  const [newDnIfBeingSaved, setNewDnIfBeingSaved] = useState<string | null>(\n    null\n  );\n  const saveNewDisplayName = useCallback((toBeSaved: string) => {\n    if (toBeSaved === \"\") {\n      return;\n    }\n    setNewDnIfBeingSaved(toBeSaved); // optimistically render new display name\n    Utils.Http.put(\"/api/gun/me\", {\n      displayName: toBeSaved\n    }).catch(e => {\n      setNewDnIfBeingSaved(null); // reverts to existing display name\n      alert(`There was an error setting a new display name: ${e.message}`);\n    });\n  }, []);\n  useEffect(() => {\n    // set placeholder display name back to null after getting the round trip\n    // from api\n    if (newDnIfBeingSaved === displayName) {\n      console.debug(`Got display name round trip from api.`);\n      setNewDnIfBeingSaved(null);\n    }\n  }, [newDnIfBeingSaved, displayName]);\n  const toggleDnModal = useCallback(() => {\n    setNewDisplayName(displayName);\n    setDnModalOpen(open => !open);\n  }, [displayName]);\n  const handleOkDnChange = useCallback(() => {\n    if (newDisplayName !== displayName) {\n      saveNewDisplayName(newDisplayName);\n    }\n    toggleDnModal();\n  }, [displayName, newDisplayName, saveNewDisplayName, toggleDnModal]);\n  const dnModalStyle = useMemo<React.CSSProperties>(\n    () => ({\n      padding: \"12px 24px\"\n    }),\n    []\n  );\n  const handleNewDisplayNameChange = ({ target: { value } }) => {\n    setNewDisplayName(value);\n  };\n  //#endregion displayName -------------------------------------------------- //\n  //#region bio ------------------------------------------------------------- //\n  const { bio } = user;\n  const [bioModalOpen, setBioModalOpen] = useState(false);\n  // stores the bio input value\n  const [newBio, setNewBio] = useState(bio);\n  // stores the new bio while it's being uploaded\n  const [newBioIfBeingSaved, setNewBioIfBeingSaved] = useState<string | null>(\n    null\n  );\n  const saveNewBio = useCallback((toBeSaved: string) => {\n    if (toBeSaved === \"\") {\n      return;\n    }\n    setNewBioIfBeingSaved(toBeSaved); // optimistically render new bio\n    Utils.Http.put(\"/api/gun/me\", {\n      bio: toBeSaved\n    }).catch(e => {\n      setNewBioIfBeingSaved(null); // reverts to existing bio\n      alert(`There was an error setting a new bio: ${e.message}`);\n    });\n  }, []);\n  useEffect(() => {\n    // set placeholder bio back to null after getting the round trip\n    // from api\n    if (newBioIfBeingSaved === bio) {\n      console.debug(`Got bio round trip from api.`);\n      setNewBioIfBeingSaved(null);\n    }\n  }, [newBioIfBeingSaved, bio]);\n  const toggleBioModal = useCallback(() => {\n    setNewBio(bio);\n    setBioModalOpen(open => !open);\n  }, [bio]);\n  const handleOkBioChange = useCallback(() => {\n    if (newBio !== bio) {\n      saveNewBio(newBio);\n    }\n    toggleBioModal();\n  }, [bio, newBio, saveNewBio, toggleBioModal]);\n  const bioModalStyle = useMemo<React.CSSProperties>(\n    () => ({\n      padding: \"12px 24px\"\n    }),\n    []\n  );\n  const handleNewBioChange = ({ target: { value } }) => {\n    setNewBio(value);\n  };\n  //#endregion bio ---------------------------------------------------------- //\n\n  return (\n    <>\n      <div className=\"page-container profile-page\">\n        <div className=\"profile-container\">\n          <div className=\"profile-cover\" onClick={onPressHeader}>\n            {user.header && (\n              <img\n                alt=\"User set profile header.\"\n                src={`data:image/jpeg;base64,${user.header}`}\n              />\n            )}\n          </div>\n          <div className=\"profile-info-container\">\n            <div\n              className=\"profile-avatar\"\n              style={{\n                height: `${AVATAR_SIZE}px`,\n                width: `${AVATAR_SIZE}px`\n              }}\n            >\n              <ShockAvatar\n                height={AVATAR_SIZE}\n                publicKey={publicKey}\n                setsAvatar\n                greyBorder\n                disableOnlineRing\n              />\n            </div>\n\n            <div className=\"profile-info\">\n              <p\n                className={c(gStyles.unselectable, \"profile-name\")}\n                onClick={toggleDnModal}\n              >\n                {newDnIfBeingSaved || displayName}\n              </p>\n              <p\n                className={c(gStyles.unselectable, \"profile-desc\")}\n                onClick={toggleBioModal}\n              >\n                {newBioIfBeingSaved || user.bio}\n              </p>\n              <div className=\"config-btn\" onClick={toggleConfigModal}>\n                <i className=\"config-btn-icon icon-solid-spending-rule\" />\n                <p className=\"config-btn-text\">Config</p>\n              </div>\n            </div>\n          </div>\n          <div>\n            <Link to={\"/goLive\"} className=\"profile-choice-container\">\n              <div\n                style={{\n                  backgroundColor: \"red\",\n                  color: \"white\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  padding: \"0.2em 0.5em\",\n                  borderRadius: \"0.7em\",\n                  fontSize: \"16px\",\n                  fontWeight: 600\n                }}\n              >\n                <i className=\"fas fa-video\"></i>\n                <p>GO LIVE</p>\n              </div>\n            </Link>\n            <Link to={\"/createPost\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-pen-square\"></i>\n              <p className=\"profile-choice-text\">Create Post</p>\n            </Link>\n            <Link to={\"/publishContent\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fab fa-youtube\"></i>\n              <p className=\"profile-choice-text\">Publish Content</p>\n            </Link>\n            <button className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-shopping-cart\"></i>\n              <p className=\"profile-choice-text\">Offer a Product</p>\n            </button>\n            <Link to={\"/offerService\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-running\"></i>\n              <p className=\"profile-choice-text\">Offer a Service</p>\n            </Link>\n          </div>\n\n          <ProfileDivider onChange={handleViewChange} selected={selectedView} />\n          <div className=\"\">\n            {selectedView === \"posts\" && renderPosts()}\n            {selectedView === \"services\" && renderServices()}\n          </div>\n\n          {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n          <Pad amt={200} />\n\n          <Modal\n            toggleModal={toggleModal}\n            modalOpen={profileModalOpen}\n            contentStyle={{\n              padding: \"40px 30px\"\n            }}\n          >\n            <QRCode\n              bgColor=\"#23282d\"\n              fgColor=\"#4285b9\"\n              value={publicKey}\n              size={180}\n              className=\"profile-qrcode\"\n            />\n            <p className=\"profile-qrcode-desc\">\n              Other users can scan this code to contact you\n            </p>\n\n            {!navigator.clipboard && (\n              <input\n                className=\"hidden-input\"\n                id=\"public-key-holder\"\n                readOnly\n                type=\"text\"\n                value={publicKey}\n              ></input>\n            )}\n            <div\n              className=\"profile-clipboard-container\"\n              onClick={copyClipboard}\n            >\n              <img\n                src={ClipboardIcon}\n                className=\"profile-clipboard-icon\"\n                alt=\"\"\n              />\n              <p className=\"profile-clipboard-text\">Tap to copy to clipboard</p>\n            </div>\n          </Modal>\n\n          <Modal\n            toggleModal={toggleConfigModal}\n            modalOpen={profileConfigModalOpen}\n            contentStyle={{\n              padding: \"2em 2em\"\n            }}\n          >\n            <label htmlFor=\"new-web-client-prefix\">Web Client</label>\n\n            <div className=\"web-client-prefix-picker\">\n              <i\n                className=\"far fa-copy\"\n                onClick={copyWebClientUrlToClipboard}\n                style={{ fontSize: 24 }}\n              />\n\n              <select\n                onChange={e => {\n                  setNewWebClientPrefix(e.target.value as WebClientPrefix);\n                }}\n                name=\"new-web-client-prefix\"\n                id=\"new-web-client-prefix\"\n                value={newWebClientPrefix}\n              >\n                {AVAILABLE_WEB_CLIENT_PREFIXES.map(prefix => (\n                  <option key={prefix} value={prefix}>\n                    {prefix}\n                  </option>\n                ))}\n              </select>\n\n              <span>/</span>\n\n              <span style={{ fontSize: 12 }}>{publicKey}</span>\n            </div>\n\n            {!navigator.clipboard && (\n              <input\n                className=\"hidden-input\"\n                id=\"web-client-url-holder\"\n                readOnly\n                type=\"text\"\n                value={newWebClientPrefix + \"/\" + publicKey}\n              ></input>\n            )}\n\n            <br></br>\n\n            <label htmlFor=\"content-host\">Content Host</label>\n\n            <ContentHostInput />\n\n            <br></br>\n\n            {somethingInsideConfigModalChanged && (\n              <div className=\"flex-center\" style={{ marginTop: \"auto\" }}>\n                <button\n                  onClick={onConfigCancel}\n                  className=\"shock-form-button m-1\"\n                >\n                  CANCEL\n                </button>\n                <button\n                  onClick={onConfigSubmit}\n                  className=\"shock-form-button-confirm m-1\"\n                >\n                  SUBMIT\n                </button>\n              </div>\n            )}\n          </Modal>\n\n          <Modal\n            toggleModal={toggleDeleteModal}\n            modalOpen={deletePostModalData}\n            contentStyle={{\n              padding: \"2em 2em\"\n            }}\n          >\n            <div>You sure delete</div>\n            <div className=\"flex-center\" style={{ marginTop: \"auto\" }}>\n              <button\n                onClick={closeDeleteModal}\n                className=\"shock-form-button m-1\"\n              >\n                CANCEL\n              </button>\n              <button\n                onClick={deletePost}\n                className=\"shock-form-button-confirm m-1\"\n              >\n                DELETE\n              </button>\n            </div>\n          </Modal>\n          <AddBtn\n            onClick={toggleModal}\n            large\n            iconURL={QRCodeIcon}\n            style={{ backgroundColor: \"var(--yellow)\" }}\n            icon={null}\n            label={null}\n          />\n        </div>\n\n        <BottomBar />\n      </div>\n\n      <input\n        type=\"file\"\n        id=\"avatar-file\"\n        ref={headerImageFileInput}\n        hidden\n        accept=\"image/*\"\n        onChange={onSelectedHeaderFile}\n      />\n\n      {\n        //#region displayNameModal\n      }\n\n      <Modal\n        contentStyle={dnModalStyle}\n        modalOpen={dnModalOpen}\n        toggleModal={toggleDnModal}\n      >\n        <label htmlFor=\"newDisplayName\">Display Name</label>\n        <input\n          autoCapitalize=\"none\"\n          autoCorrect=\"off\"\n          type=\"text\"\n          className=\"input-field\"\n          placeholder={\"New display name\"}\n          name=\"newDisplayName\"\n          onChange={handleNewDisplayNameChange}\n          value={newDisplayName}\n        />\n\n        {newDisplayName !== displayName && newDisplayName !== \"\" ? (\n          <button\n            onClick={handleOkDnChange}\n            className=\"shock-form-button-confirm m-1\"\n          >\n            OK\n          </button>\n        ) : (\n          <button onClick={toggleDnModal} className=\"shock-form-button m-1\">\n            GO BACK\n          </button>\n        )}\n      </Modal>\n\n      {\n        //#endregion displayNameModal\n      }\n\n      {\n        //#region bioModal\n      }\n      <Modal\n        contentStyle={bioModalStyle}\n        modalOpen={bioModalOpen}\n        toggleModal={toggleBioModal}\n      >\n        <label htmlFor=\"newBio\">New Bio</label>\n        <input\n          autoCapitalize=\"none\"\n          autoCorrect=\"off\"\n          type=\"text\"\n          className=\"input-field\"\n          placeholder={\"New bio\"}\n          name=\"newBio\"\n          onChange={handleNewBioChange}\n          value={newBio}\n        />\n        {newBio !== bio && newBio !== \"\" ? (\n          <button\n            onClick={handleOkBioChange}\n            className=\"shock-form-button-confirm m-1\"\n          >\n            OK\n          </button>\n        ) : (\n          <button onClick={toggleBioModal} className=\"shock-form-button m-1\">\n            GO BACK\n          </button>\n        )}\n      </Modal>\n      {\n        //#endregion bioModal\n      }\n    </>\n  );\n};\n\nconst AVAILABLE_WEB_CLIENT_PREFIXES: readonly WebClientPrefix[] = [\n  \"https://shock.pub\",\n  \"https://shock.page\",\n  \"https://lightning.page\",\n  \"https://satoshi.watch\"\n];\n\nexport default ProfilePage;\n"],"sourceRoot":""}