{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/MainNav/index.js","common/BottomBar/index.js","common/AddBtn/index.js","utils/Platform.ts","common/QRCodeScanner/index.tsx","pages/Messages/components/common.ts","pages/Messages/components/Message/index.js","pages/Messages/components/Request/index.js","pages/Messages/index.js"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","disableBackdropClose","closeModal","useCallback","handleBackdropClick","classNames","modal","open","MainNav","pageTitle","absolute","solid","enableBackButton","onHeight","Utils","dispatch","useDispatch","goBack","window","history","back","openDrawer","gunPublicKey","useSelector","node","publicKey","divRefCb","el","getBoundingClientRect","height","e","console","log","ref","BottomBar","to","activeClassName","AddBtn","label","icon","iconURL","undefined","nestedMode","large","small","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","isDesktop","navigator","userAgent","match","modeContents","wizard","target","description","invoice","QRCodeScanner","mode","onScan","onError","onClose","content","videoConstrain","facingMode","exact","constraints","video","AVATAR_CONTAINER_STYLE","AVATAR_SIZE","width","Message","id","Store","convo","convoMessages","latestMsg","slice","sort","a","b","timestamp","length","user","with","subtitle","body","Common","state","React","useEffect","subConvoMessages","ShockAvatar","processDisplayName","displayName","Date","now","Request","time","sent","MessagesPage","addModalOpen","setAddModalOpen","sendError","setSendError","sendRequestLoading","setSendRequestLoading","convos","sentRequests","receivedRequests","scanQR","setScanQR","currentHandshakeAddress","sub","subCurrentHandshakeAddress","then","off","subHandshakeNode","subscription","subConvos","subscriptions","map","subscribeUserProfile","push","req","from","unsubscribe","sendRequest","input","shockUser","startsWith","splitted","split","pk","FieldError","field","message","test","sendHandshakeRequest","errMsg","error","sendRequestClipboard","clipboard","readText","clipboardText","alert","openQR","closeQR","scanErr","scanDone","text","request","Loader","overlay","borderRadius"],"mappings":"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","file":"static/js/18.202b93c1.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      <div className=\"head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {},\n  disableBackdropClose = false\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  const handleBackdropClick = useCallback(() => {\n    if (!disableBackdropClose) {\n      toggleModal();\n    }\n  }, [disableBackdropClose, toggleModal]);\n  return (\n    <div className={classNames({ modal: true, open: modalOpen })}>\n      <div className=\"backdrop\" onClick={handleBackdropClick} />\n      <div className=\"container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","// @ts-check\nimport { useCallback } from \"react\";\n/**\n * @typedef {import('react').RefCallback<HTMLElement>} DivRefCallback\n */\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as Utils from \"../../utils\";\nimport { openDrawer } from \"../../actions/DrawerActions\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport { useSelector } from \"../../store\";\n\nconst MainNav = ({\n  pageTitle,\n  absolute = false,\n  solid = false,\n  enableBackButton = false,\n  onHeight = Utils.EMPTY_FN\n}) => {\n  const dispatch = useDispatch();\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  const open = useCallback(() => {\n    dispatch(openDrawer());\n  }, [dispatch]);\n\n  const gunPublicKey = useSelector(({ node }) => node.publicKey);\n\n  /** @type {DivRefCallback} */\n  const divRefCb = useCallback(\n    el => {\n      // https://www.pluralsight.com/tech-blog/getting-size-and-position-of-an-element-in-react/\n      if (!el) return;\n      try {\n        onHeight(el.getBoundingClientRect().height);\n      } catch (e) {\n        console.log(`Error inside onHeight mechanism in MainNav:`);\n        console.log(e);\n      }\n    },\n    [onHeight]\n  );\n\n  return (\n    <div\n      className={classNames({\n        \"main-nav-container\": true,\n        \"main-nav-absolute\": absolute,\n        \"main-nav-solid\": solid\n      })}\n      ref={divRefCb}\n    >\n      {enableBackButton ? (\n        <div className=\"main-nav-back\" onClick={goBack}>\n          <i className=\"icon icon-thin-back\"></i>\n        </div>\n      ) : (\n        <ShockAvatar height={40} publicKey={gunPublicKey} />\n      )}\n      <p className=\"main-nav-title unselectable\">{pageTitle}</p>\n      <div className=\"main-nav-menu-btn\" onClick={open}>\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n        <div className=\"main-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default MainNav;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","export const isMobile = (): boolean =>\n  !!navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n\nexport const isDesktop = (): boolean => (!isMobile() ? true : false);\n","import QRScanner from \"react-qr-scanner\";\nimport { isDesktop } from \"../../utils/Platform\";\nimport \"./css/index.scoped.css\";\n\ntype ScannerMode = \"wizard\" | \"invoice\";\ninterface Props {\n  mode: ScannerMode;\n  onScan: (result: string | null) => void;\n  onError: (error: Error) => void;\n  onClose: () => void;\n}\n\nconst modeContents = {\n  wizard: {\n    title: \"SCAN A\",\n    target: \"QR CODE\",\n    description: \"Point your camera at a ShockWizard QR Code\"\n  },\n  invoice: {\n    title: \"SCAN AN\",\n    target: \"INVOICE\",\n    description: \"Point your camera at an LND Invoice\"\n  }\n};\n\nconst QRCodeScanner = ({\n  mode = \"wizard\",\n  onScan,\n  onError,\n  onClose\n}: Props) => {\n  const content = modeContents[mode];\n  const videoConstrain:{facingMode?} = {}\n  if(!isDesktop()) {\n    videoConstrain.facingMode = { exact: \"environment\" }\n  }\n\n  return (\n    <div className=\"qr-code-scanner-container\">\n      <div className=\"qr-scanner-top-section\">\n        <i className=\"fas fa-times\" onClick={onClose}></i>\n      </div>\n\n      <QRScanner\n        constraints={{\n          video: videoConstrain\n        }}\n        onScan={onScan}\n        onError={onError}\n      />\n\n      <div className=\"qr-scanner-target\" />\n      <div className=\"qr-scanner-bottom-section\">\n        <p className=\"qr-scanner-bottom-title\">\n          {content.title}{\" \"}\n          <span className=\"qr-scanner-bottom-title-highlight\">\n            {content.target}\n          </span>\n        </p>\n        <p className=\"qr-scanner-bottom-description\">{content.description}</p>\n        <div className=\"qr-scanner-btn\" onClick={onClose}>\n          Cancel Scan\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QRCodeScanner;\n","import { CSSProperties } from \"react\";\n\nexport const AVATAR_SIZE = 55;\n\nexport const AVATAR_CONTAINER_STYLE: CSSProperties = {\n  height: AVATAR_SIZE + \"px\",\n  width: AVATAR_SIZE + \"px\"\n};\n","import React from \"react\";\nimport * as Common from \"shock-common\";\nimport { Link } from \"react-router-dom\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport { AVATAR_CONTAINER_STYLE, AVATAR_SIZE } from \"../common\";\nimport { processDisplayName } from \"../../../../utils/String\";\nimport { subConvoMessages } from \"../../../../actions/ChatActions\";\n\nimport \"./css/index.scoped.css\";\n\n/**\n * @typedef {object} Props\n * @prop {string} id\n */\n\n/**\n * @type {React.FC<Props>}\n */\nconst Message = ({ id }) => {\n  const dispatch = Store.useDispatch();\n  const convo = Store.useSelector(Store.selectSingleConvo(id));\n  const convoMessages = Store.useSelector(Store.selectConvoMessages(id));\n  /** @type {import('../../../../schema').ConvoMsg | undefined} */\n  const latestMsg = convoMessages\n    .slice()\n    .sort((a, b) => a.timestamp - b.timestamp)[convoMessages.length - 1];\n  const user = Store.useSelector(Store.selectUser(convo.with));\n  const subtitle = (() => {\n    if (convoMessages.length === 0 || latestMsg?.body === Common.INITIAL_MSG) {\n      return \"No messages yet\";\n    }\n    if (latestMsg?.state === \"received\") {\n      return \"> \" + latestMsg.body;\n    }\n    return latestMsg.body;\n  })();\n\n  React.useEffect(() => dispatch(subConvoMessages(id)), [dispatch, id]);\n\n  return (\n    <Link to={`/chat/${id}`} className=\"container\">\n      <div className=\"author-container\">\n        <div className=\"author-avatar\" style={AVATAR_CONTAINER_STYLE}>\n          <ShockAvatar publicKey={convo.with} height={AVATAR_SIZE} />\n        </div>\n\n        <div className=\"author-details\">\n          <p className=\"author-username\">\n            {processDisplayName(user.publicKey, user.displayName)}\n          </p>\n          <p className=\"author-text\">{subtitle}</p>\n        </div>\n      </div>\n      <p className=\"timestamp\">\n        {Utils.formatTimestamp(latestMsg?.timestamp || Date.now())}\n      </p>\n    </Link>\n  );\n};\n\nexport default Message;\n","// @ts-check\nimport { Link } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport { AVATAR_CONTAINER_STYLE, AVATAR_SIZE } from \"../common\";\n\nimport \"./css/index.scoped.css\";\n\nconst Request = ({ publicKey = \"\", time, sent, id }) => {\n  const user = Store.useSelector(Store.selectUser(publicKey));\n\n  return (\n    <Link to={`/chat/${id}`} className=\"request-container\">\n      <div className=\"request-author-container\">\n        <div className=\"request-author-avatar\" style={AVATAR_CONTAINER_STYLE}>\n          <ShockAvatar publicKey={publicKey} height={AVATAR_SIZE} />\n        </div>\n        <div className=\"request-author-details\">\n          <p className=\"request-author-username\">\n            {sent ? \"Sent Request\" : \"Received Request\"} - {user.displayName}\n          </p>\n          <p className=\"request-author-text\">Request pending acceptance...</p>\n        </div>\n      </div>\n      <p className=\"request-timestamp\">{time}</p>\n    </Link>\n  );\n};\n\nexport default Request;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport {\n  sendHandshakeRequest,\n  subCurrentHandshakeAddress,\n  subHandshakeNode,\n  subConvos\n} from \"../../actions/ChatActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport BottomBar from \"../../common/BottomBar\";\nimport Message from \"./components/Message\";\nimport Request from \"./components/Request\";\nimport MainNav from \"../../common/MainNav\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Loader from \"../../common/Loader\";\nimport FieldError from \"../../utils/FieldError\";\nimport \"./css/index.scoped.css\";\nimport Modal from \"../../common/Modal\";\nimport * as Store from \"../../store\";\nimport QRCodeScanner from \"../../common/QRCodeScanner\";\nimport * as Utils from \"../../utils\";\n\nconst MessagesPage = () => {\n  const dispatch = Utils.useDispatch();\n  const [addModalOpen, setAddModalOpen] = useState(false);\n  const [sendError, setSendError] = useState(\"\");\n  const [sendRequestLoading, setSendRequestLoading] = useState(false);\n  const convos = Store.useSelector(Store.selectConvos);\n  const sentRequests = Utils.EMPTY_ARR;\n  const receivedRequests = Store.useSelector(Store.selectReceivedRequests);\n  const [scanQR, setScanQR] = useState(false);\n  const currentHandshakeAddress = Store.useSelector(\n    Store.selectCurrentHandshakeAddress\n  );\n\n  useEffect(() => {\n    const sub = dispatch(subCurrentHandshakeAddress());\n\n    return () => {\n      sub.then(sub => sub.off());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    const sub = dispatch(subHandshakeNode(currentHandshakeAddress));\n\n    return () => {\n      sub.then(sub => sub.off());\n    };\n  }, [currentHandshakeAddress, dispatch]);\n\n  useEffect(() => {\n    const subscription = dispatch(subConvos());\n\n    return () => {\n      subscription.then(sub => sub.off());\n    };\n  });\n\n  useEffect(() => {\n    const subscriptions = convos.map(convo =>\n      dispatch(subscribeUserProfile(convo.with))\n    );\n\n    subscriptions.push(\n      ...receivedRequests.map(req => dispatch(subscribeUserProfile(req.from)))\n    );\n\n    return () => {\n      subscriptions.map(unsubscribe => unsubscribe());\n    };\n  }, [convos, dispatch, receivedRequests]);\n\n  const toggleModal = useCallback(() => {\n    setAddModalOpen(!addModalOpen);\n  }, [addModalOpen]);\n\n  const sanitizePublicKey = publicKey => {\n    if (publicKey.startsWith(\"http\")) {\n      const parts = publicKey.split(\"/\");\n      return parts.slice(-1)[0];\n    }\n\n    return publicKey;\n  };\n\n  const sendRequest = useCallback(\n    async input => {\n      if (!input) {\n        return;\n      }\n      try {\n        let shockUser = input;\n        if (input.startsWith(\"https://\")) {\n          const splitted = input.split(\"/\");\n          shockUser = splitted[splitted.length - 1];\n        }\n        setSendError(null);\n        setSendRequestLoading(true);\n        const pk = sanitizePublicKey(shockUser);\n\n        if (!pk?.length) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Please specify a public key\"\n          });\n        }\n\n        if (!/^[0-9A-Za-z\\-_.+/]+[=]{0,3}/.test(pk)) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Invalid public key format specified\"\n          });\n        }\n\n        await dispatch(sendHandshakeRequest(shockUser));\n\n        setAddModalOpen(false);\n      } catch (err) {\n        const errMsg =\n          err instanceof FieldError\n            ? err.message\n            : \"An unknown error has occurred\";\n\n        console.error(err);\n\n        setSendError(errMsg);\n      } finally {\n        setSendRequestLoading(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const sendRequestClipboard = useCallback(async () => {\n    try {\n      const clipboardText = await navigator.clipboard.readText();\n      return sendRequest(clipboardText);\n    } catch (e) {\n      alert(e.message);\n    }\n  }, [sendRequest]);\n\n  const openQR = useCallback(() => {\n    setScanQR(true);\n  }, [setScanQR]);\n\n  const closeQR = useCallback(() => {\n    setScanQR(false);\n  }, [setScanQR]);\n\n  const scanErr = useCallback(\n    e => {\n      console.log(e);\n      setSendError(e.message);\n    },\n    [setSendError]\n  );\n\n  const scanDone = useCallback(\n    content => {\n      if (!content || !content.text) {\n        return;\n      }\n      sendRequest(content.text);\n      setScanQR(false);\n      console.log(content.text);\n    },\n    [sendRequest, setScanQR]\n  );\n\n  if (scanQR) {\n    return (\n      <div>\n        <QRCodeScanner\n          mode=\"invoice\"\n          onClose={closeQR}\n          onError={scanErr}\n          onScan={scanDone}\n        />\n      </div>\n    );\n  }\n  console.log(sendError);\n  return (\n    <div className=\"page-container messages-page\">\n      <MainNav solid pageTitle=\"MESSAGES\" />\n      <div className=\"messages-container\">\n        <div className=\"message-list-container no-scrollbar\">\n          {sentRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Sent Requests</p>\n          ) : null}\n          {sentRequests.map(request => (\n            <Request\n              publicKey={request.pk}\n              sent\n              key={request.id}\n              time={undefined}\n              id={request.id}\n            />\n          ))}\n          {receivedRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Received Requests</p>\n          ) : null}\n          {receivedRequests.map(request => (\n            <Request\n              publicKey={request.from}\n              key={request.id}\n              sent={false}\n              time={undefined}\n              id={request.id}\n            />\n          ))}\n          {convos.length > 0 ? (\n            <p className=\"messages-section-title\">Messages</p>\n          ) : null}\n          {convos.map(convo => {\n            return <Message key={convo.id} id={convo.id} />;\n          })}\n        </div>\n        <AddBtn onClick={toggleModal} label=\"REQUEST\" />\n        {/* TODO: Extract to a separate component */}\n        <Modal\n          modalTitle=\"SEND REQUEST\"\n          toggleModal={toggleModal}\n          modalOpen={addModalOpen}\n        >\n          {sendRequestLoading ? (\n            <Loader\n              text=\"Sending Request...\"\n              overlay\n              style={{\n                borderRadius: \"0 0 15px 15px\"\n              }}\n            />\n          ) : null}\n          {sendError ? (\n            <div className=\"send-request-error\">{sendError}</div>\n          ) : null}\n          <div className=\"send-request-cards\">\n            <div className=\"send-request-card\" onClick={openQR}>\n              <i className=\"send-request-card-icon fas fa-qrcode\" />\n              <p className=\"send-request-card-title\">SCAN QR</p>\n              <p className=\"send-request-card-desc\">\n                Scan another users QR to send a message request.\n              </p>\n            </div>\n            <div className=\"send-request-card\" onClick={sendRequestClipboard}>\n              <i className=\"send-request-card-icon fas fa-clipboard\" />\n              <p className=\"send-request-card-title\">PASTE CLIPBOARD</p>\n              <p className=\"send-request-card-desc\">\n                Paste another users Public Key to send a message request.\n              </p>\n            </div>\n          </div>\n        </Modal>\n      </div>\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default MessagesPage;\n"],"sourceRoot":""}