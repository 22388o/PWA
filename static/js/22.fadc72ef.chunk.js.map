{"version":3,"sources":["common/Post/components/TipRibbon/index.js","common/Post/components/Stream/index.tsx","common/Post/components/Video/index.js","common/Post/components/Image/index.js","common/Post/index.js","images/av1.jpg","common/Post/SharedPost.js"],"names":["TipRibbon","tipCounter","tipValue","zoomed","className","style","opacity","STREAM_STATUS_URI","Stream","id","item","index","postId","hideRibbon","width","timeout","playerDOM","useRef","useState","isLive","setIsLive","videoStyle","useEffect","recheckInterval","checkStatus","a","magnetURI","split","seedToken","Http","get","data","player","videojs","current","autoplay","muted","aspectRatio","src","type","play","then","setInterval","clearInterval","cursor","display","ref","preload","controls","autoPlay","Video","contentURL","decodeURIComponent","replace","data-torrent","data-file-key","data-played","Image","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","useCallback","value","clearTimeout","timer","setTimeout","mainImageStyle","Controlled","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","alt","onLoad","Post","timestamp","avatar","publicKey","openTipModal","openUnlockModal","contentItems","username","openDeleteModal","undefined","unlockedContent","Store","content","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","isOwn","isOnlineNode","getMediaContent","Object","entries","filter","forEach","k","e","path","parseContent","key","text","finalItem","cached","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","on","scrollSnapList","length","window","addEventListener","removeEventListener","off","tipPost","unlockPost","deletePost","shared","Tooltip","rebuild","console","log","to","borderWidth","borderStyle","borderColor","backgroundImage","DateTime","fromMillis","toRelative","onClick","map","Array","from","_","classNames","scrollTo","data-tip","SharedPost","sharerProfile","originalPostProfile","origPost","originalPost","sharedTimestamp","postPublicKey","loadPostMedia","attachMedia","useLayoutEffect","selfPublicKey","Utils","lastSeenApp","displayName","date","av1","alias","Loader"],"mappings":"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","file":"static/js/22.fadc72ef.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./css/index.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst REACT_APP_SL_SEED_URI = \"https://webtorrent.shock.network\";\nconst STREAM_STATUS_URI = `${REACT_APP_SL_SEED_URI}/rtmpapi/api/streams/live`;\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  useEffect(() => {\n    let recheckInterval = null;\n    const checkStatus = async () => {\n      try {\n        //TODO regex (?) `${REACT_APP_SL_RTMP_API_URI}/live/${seedToken}/index.m3u8`\n        const [seedToken] = item.magnetURI\n          .split(\"/live/\")[1]\n          .split(\"/index.m3u8\");\n        const res = await Http.get(`${STREAM_STATUS_URI}/${seedToken}`);\n        if (!res.data.isLive) {\n          return false;\n        }\n        const player = videojs(playerDOM.current, {\n          autoplay: true,\n          muted: true,\n          aspectRatio: \"16:9\"\n        });\n        player.src({\n          src: item.magnetURI,\n          type: \"application/x-mpegURL\"\n        });\n        /*listen for 404s from the player\n        player.tech().on('retryplaylist', () => {\n          console.log('retryplaylist');\n        });*/\n        player.play();\n        return true;\n      } catch (err) {\n        return false;\n      }\n    };\n    checkStatus().then(isLive => {\n      if (isLive) {\n        setIsLive(true);\n        return;\n      }\n      recheckInterval = setInterval(async () => {\n        const isLive = await checkStatus();\n        if (isLive) {\n          setIsLive(true);\n          clearInterval(recheckInterval);\n          return;\n        }\n      }, timeout);\n    });\n\n    return () => {\n      clearInterval(recheckInterval);\n    };\n  }, [item, timeout]);\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            isLive ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","import React from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.css\";\n\nconst Video = ({ id, item, index, postId, tipValue, tipCounter, hideRibbon,width }) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = { }\n  if(width){\n    videoStyle.width = width\n  }\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n        {!hideRibbon && <TipRibbon tipCounter={tipCounter} tipValue={tipValue} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({ id, item, index, postId, tipValue, tipCounter,hideRibbon,width }) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [animationTimer, zoomLoaded]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { opacity: previewVisible ? 1 : 0 }\n  if(width){\n    mainImageStyle.width = width\n  }\n\n  return (\n    <div className=\"media-container\">\n      <ControlledZoom\n        isZoomed={zoomed}\n        onZoomChange={handleZoomChange}\n        overlayBgColorStart=\"#16191c00\"\n        overlayBgColorEnd=\"#16191c\"\n      >\n        <img\n          className={`torrent-img torrent-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          style={mainImageStyle}\n          src={contentURL}\n        />\n        <img\n          className={`enlarged-img enlarged-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-file-key={index}\n          onLoad={() => {\n            setZoomLoaded(true);\n          }}\n          style={{ opacity: zoomLoaded ? 1 : 0, display:zoomLoaded ? 'block' : 'none' }}\n          src={contentURL}\n        />\n        {!hideRibbon && <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />}\n      </ControlledZoom>\n    </div>\n  );\n};\n\nexport default Image;\n","// @ts-check\nimport { useEffect, useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../store\";\nimport * as Utils from \"../../utils\";\n\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport \"./css/index.css\";\n\nconst Post = ({\n  id,\n  timestamp,\n  avatar,\n  tipCounter,\n  tipValue,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  contentItems = {},\n  username,\n  openDeleteModal = undefined\n}) => {\n  const unlockedContent = Store.useSelector(\n    ({ content }) => content.unlockedContent\n  );\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n\n  const selfPublicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const isOwn = selfPublicKey === publicKey;\n\n  const isOnlineNode = /*Utils.isOnline(\n    Store.useSelector(Store.selectUser(publicKey)).lastSeenApp\n  );*/false\n\n  const getMediaContent = useCallback(() => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  }, [contentItems]);\n\n  const getTextContent = () => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(() => {\n    getMediaContent().forEach(([k, e]) => {\n      const path = `${publicKey}>posts>${k}`;\n      if (e.isPrivate && !unlockedContent[path]) {\n        setIsPrivate(true);\n      }\n    });\n  }, [contentItems, getMediaContent, publicKey, unlockedContent]);\n\n  const parseContent = ([key, item], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n    const finalItem = item;\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`;\n      const cached = unlockedContent[path];\n      if (cached) {\n        finalItem.magnetURI = cached;\n      } else {\n        return (\n          <div>\n            <i className=\"fas fa-lock fa-10x\"></i>\n          </div>\n        );\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n    if (item.type === \"stream/embedded\") {\n      return (\n        <Stream\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  // useEffect(() => {\n  //   attachMedia();\n  // }, [contentItems.length]);\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id, shared: false });\n  }, [id, openDeleteModal]);\n\n  useEffect(() => {\n    try {\n      Tooltip.rebuild();\n    } catch (e) {\n      console.log(`Error inside <Post />: `, e);\n    }\n  }, []);\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <Link\n            className=\"av\"\n            to={isOwn ? `/profile` : `/otherUser/${publicKey}`}\n            style={{\n              borderWidth: isOnlineNode && !isOwn ? 2 : undefined,\n              borderStyle: isOnlineNode && !isOwn ? \"solid\" : undefined,\n              borderColor: isOnlineNode && !isOwn ? \"#39B54A\" : undefined,\n              backgroundImage: `url(${avatar})`\n            }}\n          />\n          <div className=\"details\">\n            <Link to={`/otherUser/${publicKey}`}>{username}</Link>\n            <p>\n              {timestamp && typeof timestamp === \"number\"\n                ? DateTime.fromMillis(timestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","export default __webpack_public_path__ + \"static/media/av1.e1539bb2.jpg\";","// @ts-check\nimport { useCallback, useLayoutEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"react-tooltip\";\n\nimport Post from \".\";\n\nimport av1 from \"../../images/av1.jpg\";\nimport \"../Post/css/index.css\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport Loader from \"../Loader\";\nimport * as Store from \"../../store\";\nimport * as Utils from \"../../utils\";\n/**\n * @typedef {import('../../schema').Post} Post\n */\n\nconst SharedPost = ({\n  sharerProfile,\n  originalPostProfile,\n  originalPost: origPost,\n  sharedTimestamp,\n  postPublicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = undefined\n}) => {\n  /** @type {Post|undefined} */\n  const originalPost = origPost;\n  const loadPostMedia = useCallback(async () => {\n    if (originalPost) {\n      attachMedia([originalPost], false);\n    }\n  }, [originalPost]);\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id: originalPost.id, shared: true });\n  }, [originalPost, openDeleteModal]);\n\n  useLayoutEffect(() => {\n    Tooltip.rebuild();\n    loadPostMedia();\n  }, [loadPostMedia]);\n\n  const selfPublicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const isOwn = sharerProfile.publicKey === selfPublicKey;\n  const isOnlineNode = Utils.isOnline(\n    Store.useSelector(Store.selectUser(sharerProfile.publicKey)).lastSeenApp\n  );\n\n  return (\n    <div className=\"post shared-post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <Link\n            to={isOwn ? `/profile` : `/otherUser/${sharerProfile.publicKey}`}\n            className=\"av\"\n            style={{\n              borderWidth: isOnlineNode && !isOwn ? 2 : undefined,\n              borderStyle: isOnlineNode && !isOwn ? \"solid\" : undefined,\n              borderColor: isOnlineNode && !isOwn ? \"#39B54A\" : undefined,\n              backgroundImage: `url(data:image/jpeg;base64,${sharerProfile?.avatar})`\n            }}\n          ></Link>\n          <div className=\"details\">\n            <p>{sharerProfile?.displayName}</p>\n            <p>\n              {sharedTimestamp && typeof sharedTimestamp === \"number\"\n                ? DateTime.fromMillis(sharedTimestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"shared-content\">\n        {originalPost && originalPostProfile ? (\n          <Post\n            id={originalPost.id}\n            timestamp={originalPost.date}\n            avatar={\n              originalPostProfile.avatar\n                ? `data:image/jpeg;base64,${originalPostProfile.avatar}`\n                : av1\n            }\n            // @ts-expect-error tipCounter not wired right now I think\n            tipCounter={originalPost.tipCounter || 0}\n            // @ts-expect-error tipValue ??\n            tipValue={originalPost.tipValue || 0}\n            publicKey={postPublicKey}\n            openTipModal={openTipModal}\n            openUnlockModal={openUnlockModal}\n            contentItems={originalPost.contentItems ?? {}}\n            username={\n              originalPostProfile.displayName ?? originalPostProfile.alias\n            }\n          />\n        ) : (\n          <Loader text=\"Loading Post...\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SharedPost;\n"],"sourceRoot":""}