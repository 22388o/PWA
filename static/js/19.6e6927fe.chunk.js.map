{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/BottomBar/index.js","common/Line/index.tsx","common/AddBtn/index.js","common/ProfileDivider/index.tsx","common/ProfileDivider/css/ProfileDivider.module.css","images/clipboard.svg","images/qrcode.svg","common/ContentHostInput/components/ContentHostInputView.module.css","common/ContentHostInput/components/Host.module.css","common/ContentHostInput/components/Host.tsx","common/ContentHostInput/components/ContentHostInputView.tsx","common/ContentHostInput/index.ts","common/ContentHostInput/ContentHostInput.tsx","images/logo-alone.png","pages/Profile/index.tsx"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","Utils","forceRenderTitleBar","hideXBtn","onClick","Modal","modalOpen","modalTitle","contentStyle","disableBackdropClose","noFullWidth","blueBtn","disableBlueBtn","onClickBlueBtn","redBtn","disableRedBtn","onClickRedBtn","closeModal","useCallback","handleBackdropClick","classNames","modal","open","container","disabled","BottomBar","to","activeClassName","Line","color","length","type","width","useMemo","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","AddBtn","label","icon","iconURL","undefined","nestedMode","large","small","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","src","alt","labelElement","ProfileDivider","onChange","selected","showContentBtn","gStyles","styles","unselected","module","exports","Host","hostError","error","isBeingAddedOrDeleted","isDefault","onClickRemove","onClickWarning","price","publicKey","URI","user","Store","isConfirmingRemoval","setIsConfirmingRemoval","toggleConfirmingRemoval","confirming","handleClickOnWarning","handleRemovalConfirmation","malformedHost","JSON","stringify","pill","ShockAvatar","toLowerCase","displayName","Common","fontSize","yellow","blue","BUTTON_HOLDER_CLASS_NAME","ContentHostInputView","unorderedHosts","hosts","onAddHost","onRemoveHost","onRetryHost","publicKeyOrServerURI","URIHostAwaitingForToken","setPublicKeyOrServerURIData","hostForErrorDialog","setHostForErrorDialog","setOpen","input","useRef","isPasting","setIsPasting","token","setToken","tokenInput","isPastingToken","setIsPastingToken","sortedHosts","slice","sort","a","b","dateAdded","defaultHosts","filter","h","nonDefaultHosts","handleFocus","onClickPaste","navigator","clipboard","readText","then","txt","produce","data","catch","e","alert","message","finally","current","focus","document","execCommand","blur","onClickAdd","url","handleTokenPaste","handleTokenAdd","handleHostRemoval","publicKeyOrURI","closeErrorDialog","handleRemovalOfHostWithError","handleHostRetry","target","value","onKeyUp","key","keyCode","autoCapitalize","autoCorrect","placeholder","ref","onFocus","map","host","find","ContentHostInput","dispatch","useDispatch","seedProviderPub","content","userProfiles","seedInfo","seedUrl","seedToken","setHosts","providerProfile","setProviderProfile","providedService","setProvidedService","priceToUpdate","setPriceToUpdate","providerError","setProviderError","useEffect","provProfile","avatar","offerSeedService","toSet","push","Date","now","Http","get","service","servicePrice","tmpHosts","providerIndex","findIndex","err","addHost","startsWith","setSeedInfo","setSeedProviderPub","removeHost","subscribeUserProfile","filteredHosts","Post","React","lazy","SharedPost","AVAILABLE_WEB_CLIENT_PREFIXES","QR_IMAGE_SETTINGS","logoAlone","excavate","ProfilePage","profileModalOpen","setProfileModalOpen","deletePostModalData","setDeletePostModalData","deletePostModalLoading","setDeletePostModalLoading","node","posts","hostIP","myServices","orders","selectedView","setSelectedView","useSelector","console","log","subscription","subscribeMyServices","rifleCleanup","subscribeUserPosts","subSharedPosts","profileConfigModalOpen","setProfileConfigModalOpen","currWebClientPrefix","webClientPrefix","newWebClientPrefix","setNewWebClientPrefix","copyWebClientUrlToClipboard","writeText","placeholderEl","querySelector","display","select","subscribeClientPrefix","debug","socket","rifle","query","onData","webClientPrefixReceived","setWebclientPrefix","onError","errorMessage","handleViewChange","view","somethingInsideConfigModalChanged","toggleConfigModal","onConfigCancel","onConfigSubmit","post","path","headerImageFileInput","settingHeader","setSettingHeader","onSelectedHeaderFile","preventDefault","files","file","imageObtained","base64","onPressHeader","click","toggleDeleteModal","deleteData","closeDeleteModal","deletePost","id","shared","deleteUserPost","authorId","copyClipboard","text","dnModalOpen","setDnModalOpen","newDisplayName","setNewDisplayName","newDnIfBeingSaved","setNewDnIfBeingSaved","saveNewDisplayName","toBeSaved","put","toggleDnModal","handleOkDnChange","dnModalStyle","padding","bio","bioModalOpen","setBioModalOpen","newBio","setNewBio","newBioIfBeingSaved","setNewBioIfBeingSaved","saveNewBio","toggleBioModal","handleOkBioChange","bioModalStyle","c","header","setsAvatar","greyBorder","disableOnlineRing","backgroundColor","flexDirection","justifyContent","alignItems","borderRadius","fontWeight","fallback","Loader","postID","originalPostID","sharerPublicKey","sharedBy","openTipModal","openUnlockModal","openDeleteModal","openShareModal","shareID","Object","entries","serviceType","serviceTitle","serviceDescription","serviceCondition","deleteService","renderServices","Pad","amt","bgColor","fgColor","size","imageSettings","readOnly","ClipboardIcon","htmlFor","name","prefix","marginTop","QRCodeIcon","hidden","accept"],"mappings":"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","file":"static/js/19.6e6927fe.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import * as Utils from \"../../../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({\n  title = \"\",\n  toggleModal = Utils.EMPTY_FN,\n  forceRenderTitleBar = false,\n  hideXBtn = false\n}) =>\n  title || forceRenderTitleBar ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      {!hideXBtn && (\n        <div className=\"head-close\" onClick={toggleModal}>\n          <i className=\"fas fa-times\"></i>\n        </div>\n      )}\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","import { useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\n\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {},\n  disableBackdropClose = false,\n  forceRenderTitleBar = false,\n  hideXBtn = false,\n  noFullWidth = false,\n  blueBtn = \"\",\n  disableBlueBtn = false,\n  onClickBlueBtn = Utils.EMPTY_FN,\n  redBtn = \"\",\n  disableRedBtn = false,\n  onClickRedBtn = Utils.EMPTY_FN\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  const handleBackdropClick = useCallback(() => {\n    if (!disableBackdropClose) {\n      toggleModal();\n    }\n  }, [disableBackdropClose, toggleModal]);\n  return (\n    <div className={classNames({ modal: true, open: modalOpen })}>\n      <div className=\"backdrop\" onClick={handleBackdropClick} />\n      <div\n        className={classNames({\n          container: true,\n          \"container-no-full-width\": noFullWidth\n        })}\n      >\n        <ModalTitle\n          title={modalTitle}\n          toggleModal={closeModal}\n          forceRenderTitleBar={forceRenderTitleBar}\n          hideXBtn={hideXBtn}\n        />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n\n        <div className=\"color-buttons\">\n          {blueBtn && (\n            <button\n              disabled={disableBlueBtn}\n              className={classNames(\"color-btn\", \"blue-btn\")}\n              onClick={onClickBlueBtn}\n            >\n              {blueBtn}\n            </button>\n          )}\n\n          {redBtn && (\n            <button\n              disabled={disableRedBtn}\n              className={classNames(\"color-btn\", \"red-btn\")}\n              onClick={onClickRedBtn}\n            >\n              {redBtn}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import classNames from \"classnames\";\n\nimport * as gStyles from \"../../styles\";\nimport Line from \"../Line\";\n\nimport styles from \"./css/ProfileDivider.module.css\";\n\nexport interface ProfileDividerProps {\n  onChange(newlySelected: \"posts\" | \"services\" | \"content\"): void;\n  selected: \"posts\" | \"services\" | \"content\";\n  showContentBtn?: boolean;\n}\n\nconst ProfileDivider = ({\n  onChange,\n  selected,\n  showContentBtn\n}: ProfileDividerProps) => {\n  return (\n    <div\n      className={classNames(\n        gStyles.width100,\n        gStyles.rowCentered,\n        gStyles.spaceAround,\n        gStyles.padding12,\n        styles.container\n      )}\n    >\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"posts\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"posts\");\n        }}\n      >\n        Posts\n      </span>\n\n      <div\n        className={classNames(\n          gStyles.absolute,\n          showContentBtn && styles[\"left-line\"]\n        )}\n      >\n        <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n      </div>\n\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"services\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"services\");\n        }}\n      >\n        Services\n      </span>\n\n      {showContentBtn && (\n        <>\n          <div className={classNames(gStyles.absolute, styles[\"right-line\"])}>\n            <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n          </div>\n\n          <span\n            className={classNames(\n              gStyles.unselectable,\n              selected === \"content\" ? styles.selected : styles.unselected\n            )}\n            onClick={() => {\n              onChange(\"content\");\n            }}\n          >\n            Content\n          </span>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileDivider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileDivider_container__3ob9k\",\"selected\":\"ProfileDivider_selected__3U98y\",\"unselected\":\"ProfileDivider_unselected__1Z_qd\",\"left-line\":\"ProfileDivider_left-line__2xjlN\",\"right-line\":\"ProfileDivider_right-line__1d2KH\"};","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentHostInputView_container__1CVAn\",\"uri-or-token-input\":\"ContentHostInputView_uri-or-token-input__3vg5h\",\"plus-or-paste-btn\":\"ContentHostInputView_plus-or-paste-btn__3z_k0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container-base\":\"Host_container-base__r5EJP\",\"remove-or-cancel\":\"Host_remove-or-cancel__2sHhe Host_container-base__r5EJP\",\"container\":\"Host_container__2hPww Host_container-base__r5EJP\",\"pill\":\"Host_pill__1WzlY\",\"display-name-or-uri\":\"Host_display-name-or-uri__2eaUy\",\"price-and-status\":\"Host_price-and-status__3Q4n3\",\"price\":\"Host_price__2oEgL\",\"red\":\"Host_red__1kS00\",\"yellow\":\"Host_yellow__3DLEG\",\"blue\":\"Host_blue__3m2Kb\"};","import { useCallback, useState } from \"react\";\nimport * as Common from \"shock-common\";\nimport classNames from \"classnames\";\n\nimport ShockAvatar from \"../../ShockAvatar\";\nimport * as gStyles from \"../../../styles\";\nimport * as Store from \"../../../store\";\n\nimport styles from \"./Host.module.css\";\n\nexport interface IHost {\n  /**\n   * Can be empty if publicKey is provided.\n   */\n  URI: string | null;\n  /**\n   * Unix timestamp.\n   */\n  dateAdded: number;\n  /**\n   * An empty string means no error. If there's an error adding the host,\n   * instead of making it disappear, have it show up with a warning the user can\n   * interact with, after the user clicks on it the actual error message will\n   * show up in a dialog.\n   */\n  error: string;\n  /**\n   * The host will be rendered with an indication that it is being added as\n   * opposed to being added already.\n   */\n  isBeingAddedOrDeleted: boolean;\n  /**\n   * Will render a check mark.\n   */\n  isDefault: boolean;\n  /**\n   * In sats.\n   */\n  price: number;\n  /**\n   * Can be empty if URI is provided.\n   */\n  publicKey: string | null;\n  /**\n   * Token for the service.\n   */\n  token: string;\n}\n\nexport interface HostProps extends IHost {\n  onClickRemove(publicKeyOrURI: string): void;\n  /**\n   * Called when clicking on the warning icon on a host with an error set.\n   */\n  onClickWarning(publicKeyOrURI: string): void;\n}\n\nconst Host = ({\n  error: hostError,\n  isBeingAddedOrDeleted,\n  isDefault,\n  onClickRemove,\n  onClickWarning,\n  price,\n  publicKey,\n  URI\n}: HostProps) => {\n  const user = Store.useSelector(Store.selectUser(publicKey));\n  const [isConfirmingRemoval, setIsConfirmingRemoval] = useState<boolean>(\n    false\n  );\n  const toggleConfirmingRemoval = useCallback(() => {\n    setIsConfirmingRemoval(confirming => !confirming);\n  }, []);\n\n  const handleClickOnWarning = useCallback(() => {\n    onClickWarning(publicKey || URI);\n  }, [onClickWarning, publicKey, URI]);\n\n  const handleRemovalConfirmation = useCallback(() => {\n    onClickRemove(publicKey || URI);\n  }, [onClickRemove, publicKey, URI]);\n\n  const malformedHost =\n    (hostError && isBeingAddedOrDeleted) ||\n    (publicKey && URI) ||\n    (!publicKey && !URI);\n\n  let error = hostError;\n\n  if (malformedHost) {\n    error = `Malformed host provided to <Host />, it must have either a public key or an URI (though not both), and it must not have both truthy error and isAdding props at the same time: ${JSON.stringify(\n      malformedHost\n    )}`;\n  }\n\n  if (isConfirmingRemoval) {\n    return (\n      <div\n        className={classNames(\n          gStyles.rowCentered,\n          gStyles.centerJustify,\n          gStyles.width100\n        )}\n      >\n        <button\n          onClick={handleRemovalConfirmation}\n          className={classNames(gStyles.flatBtnFullWidth)}\n        >\n          Remove\n        </button>\n\n        <button\n          onClick={toggleConfirmingRemoval}\n          className={classNames(gStyles.flatBtnFullWidth)}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classNames(\n        gStyles.rowCentered,\n        gStyles.spaceBetween,\n        gStyles.childrenSpaced24,\n        styles.container\n      )}\n    >\n      <div\n        className={classNames(\n          gStyles.rowCentered,\n          gStyles.spaceBetween,\n          gStyles.childrenSpaced8,\n          styles.pill\n        )}\n      >\n        {publicKey ? (\n          <ShockAvatar height={24} publicKey={publicKey} />\n        ) : (\n          <i className={classNames(\"fas fa-globe\")}></i>\n        )}\n\n        <span className={styles[\"display-name-or-uri\"]}>\n          {(URI && URI.toLowerCase()) ||\n            user.displayName ||\n            Common.defaultName(publicKey)}\n        </span>\n\n        {isBeingAddedOrDeleted || error ? (\n          <div />\n        ) : (\n          <span\n            className=\"fas fa-times\"\n            onClick={toggleConfirmingRemoval}\n            style={{\n              fontSize: 12\n            }}\n          />\n        )}\n      </div>\n\n      <div\n        className={classNames(\n          gStyles.flex,\n          gStyles.childrenSpaced24,\n          styles[\"price-and-status\"]\n        )}\n      >\n        <span className={classNames(gStyles.flex, styles.price)}>\n          {price} sats\n        </span>\n\n        {(() => {\n          if (error) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-exclamation-triangle\",\n                  gStyles.fontSize12,\n                  styles.yellow\n                )}\n                onClick={handleClickOnWarning}\n              />\n            );\n          }\n\n          if (isBeingAddedOrDeleted) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-hourglass-half\",\n                  gStyles.fontSize12,\n                  styles.yellow\n                )}\n              />\n            );\n          }\n\n          if (isDefault) {\n            return (\n              <i\n                className={classNames(\n                  \"fas fa-check\",\n                  gStyles.fontSize12,\n                  styles.blue\n                )}\n              />\n            );\n          }\n\n          return (\n            <i\n              className={classNames(\n                \"fas fa-link\",\n                gStyles.fontSize12,\n                styles.blue\n              )}\n            ></i>\n          );\n        })()}\n      </div>\n    </div>\n  );\n};\n\nexport default Host;\n","import { useCallback, useMemo, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport produce from \"immer\";\n\nimport * as gStyles from \"../../../styles\";\nimport Modal from \"../../Modal\";\nimport * as Utils from \"../../../utils\";\n\nimport styles from \"./ContentHostInputView.module.css\";\nimport Host, { IHost as _IHost } from \"./Host\";\n\nexport type IHost = _IHost;\n\nexport interface ContentHostInputViewProps {\n  hosts: IHost[];\n  /**\n   * A token will be provided if the content host being added is a URI, the\n   * token will be required from the user before calling this callback.\n   */\n  onAddHost(publicKeyOrServerURI: string, token?: string): void;\n  onRemoveHost(publicKeyOrServerURI: string): void;\n  /**\n   * If a host has an error set, the user will be offered to retry adding it.\n   */\n  onRetryHost(publicKeyOrServerURI: string): void;\n}\n\nconst ContentHostInputView = ({\n  hosts: unorderedHosts,\n  onAddHost,\n  onRemoveHost,\n  onRetryHost\n}: ContentHostInputViewProps) => {\n  type PublicKeyOrServerURIData = {\n    publicKeyOrServerURI: string;\n    URIHostAwaitingForToken: string;\n  };\n  const [\n    { publicKeyOrServerURI, URIHostAwaitingForToken },\n    setPublicKeyOrServerURIData\n  ] = useState<PublicKeyOrServerURIData>({\n    publicKeyOrServerURI: \"\",\n    URIHostAwaitingForToken: \"\"\n  });\n  const [hostForErrorDialog, setHostForErrorDialog] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const input = useRef<HTMLInputElement>(null);\n  const [isPasting, setIsPasting] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const tokenInput = useRef<HTMLInputElement>(null);\n  const [isPastingToken, setIsPastingToken] = useState(false);\n\n  const sortedHosts = useMemo(\n    () =>\n      unorderedHosts.slice().sort((a, b) => {\n        return b.dateAdded - a.dateAdded;\n      }),\n    [unorderedHosts]\n  );\n\n  const defaultHosts = useMemo(() => sortedHosts.filter(h => h.isDefault), [\n    sortedHosts\n  ]);\n\n  const nonDefaultHosts = useMemo(() => sortedHosts.filter(h => !h.isDefault), [\n    sortedHosts\n  ]);\n\n  const hosts = useMemo(() => [...defaultHosts, ...nonDefaultHosts], [\n    defaultHosts,\n    nonDefaultHosts\n  ]);\n\n  const handleFocus = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const onClickPaste = useCallback(() => {\n    if (isPasting) {\n      return;\n    }\n\n    if (navigator.clipboard) {\n      setIsPasting(true);\n      navigator.clipboard\n        .readText()\n        .then(txt => {\n          setPublicKeyOrServerURIData(\n            produce((data: PublicKeyOrServerURIData) => {\n              data.publicKeyOrServerURI = txt;\n            })\n          );\n        })\n        .catch(e => {\n          alert(`Could not paste: ${e.message}`);\n        })\n        .finally(() => {\n          setIsPasting(false);\n        });\n    } else {\n      if (input.current) {\n        input.current.focus();\n        document.execCommand(\"paste\");\n        input.current.blur();\n      }\n    }\n  }, [isPasting, setIsPasting]);\n\n  const onClickAdd = useCallback(() => {\n    setPublicKeyOrServerURIData(\n      produce((data: PublicKeyOrServerURIData) => {\n        const url = Utils.normalizeURL(data.publicKeyOrServerURI);\n\n        if (url) {\n          data.publicKeyOrServerURI = url;\n          data.URIHostAwaitingForToken = url;\n        }\n      })\n    );\n\n    const url = Utils.normalizeURL(publicKeyOrServerURI);\n\n    if (!url) {\n      onAddHost(publicKeyOrServerURI);\n    }\n  }, [setPublicKeyOrServerURIData, publicKeyOrServerURI, onAddHost]);\n\n  const handleTokenPaste = useCallback(() => {\n    if (isPastingToken) {\n      return;\n    }\n\n    if (navigator.clipboard) {\n      setIsPastingToken(true);\n      navigator.clipboard\n        .readText()\n        .then(txt => {\n          setToken(txt);\n        })\n        .catch(e => {\n          alert(`Could not paste: ${e.message}`);\n        })\n        .finally(() => {\n          setIsPastingToken(false);\n        });\n    } else {\n      if (tokenInput.current) {\n        tokenInput.current.focus();\n        document.execCommand(\"paste\");\n        tokenInput.current.blur();\n      }\n    }\n  }, [isPastingToken, setIsPastingToken, setToken]);\n\n  const handleTokenAdd = useCallback(() => {\n    setPublicKeyOrServerURIData(\n      produce((data: PublicKeyOrServerURIData) => {\n        data.publicKeyOrServerURI = \"\";\n        data.URIHostAwaitingForToken = \"\";\n      })\n    );\n\n    onAddHost(publicKeyOrServerURI, token);\n  }, [setPublicKeyOrServerURIData, onAddHost, publicKeyOrServerURI, token]);\n\n  const handleHostRemoval = useCallback(\n    (publicKeyOrURI: string) => {\n      onRemoveHost(publicKeyOrURI);\n    },\n    [onRemoveHost]\n  );\n\n  const closeErrorDialog = useCallback(() => {\n    setHostForErrorDialog(\"\");\n  }, [setHostForErrorDialog]);\n\n  const handleRemovalOfHostWithError = useCallback(() => {\n    onRemoveHost(hostForErrorDialog);\n    closeErrorDialog();\n  }, [onRemoveHost, hostForErrorDialog, closeErrorDialog]);\n\n  const handleHostRetry = useCallback(() => {\n    onRetryHost(hostForErrorDialog);\n    setHostForErrorDialog(\"\");\n  }, [onRetryHost, hostForErrorDialog, setHostForErrorDialog]);\n\n  return (\n    <>\n      <div\n        className={classNames(gStyles.col, gStyles.width100, styles.container)}\n      >\n        <div className={(gStyles.row, gStyles.centerJustify)}>\n          {/* https://stackoverflow.com/a/15314433 */}\n          <input\n            className={classNames(\"input-field\", styles[\"uri-or-token-input\"])}\n            onChange={e => {\n              setPublicKeyOrServerURIData(\n                produce((data: PublicKeyOrServerURIData) => {\n                  data.publicKeyOrServerURI = e.target.value;\n                  data.URIHostAwaitingForToken = \"\";\n                })\n              );\n\n              setToken(\"\");\n            }}\n            type=\"text\"\n            value={publicKeyOrServerURI}\n            onKeyUp={e => {\n              if (e.key === \"Enter\" || e.keyCode === 13) {\n                onClickAdd();\n              }\n            }}\n            autoCapitalize=\"off\"\n            autoCorrect=\"none\"\n            placeholder=\"Provider Pubkey or Server URI (include https or http)\"\n            ref={input}\n            onFocus={handleFocus}\n          />\n\n          {publicKeyOrServerURI.length === 0 && (\n            <button\n              className={classNames(\n                gStyles.flatBtn,\n                styles[\"plus-or-paste-btn\"]\n              )}\n              disabled={isPasting}\n              onClick={onClickPaste}\n            >\n              <i className=\"fas fa-paste\"></i>\n            </button>\n          )}\n\n          {publicKeyOrServerURI.length > 0 &&\n            publicKeyOrServerURI !== URIHostAwaitingForToken && (\n              <button\n                className={classNames(\n                  gStyles.flatBtn,\n                  styles[\"plus-or-paste-btn\"]\n                )}\n                disabled={publicKeyOrServerURI.length === 0}\n                onClick={onClickAdd}\n              >\n                +\n              </button>\n            )}\n        </div>\n\n        {publicKeyOrServerURI.length > 0 &&\n          publicKeyOrServerURI === URIHostAwaitingForToken && (\n            <div className={(gStyles.row, gStyles.centerJustify)}>\n              <input\n                className={classNames(\n                  \"input-field\",\n                  styles[\"uri-or-token-input\"]\n                )}\n                onChange={e => {\n                  setToken(e.target.value);\n                }}\n                type=\"text\"\n                value={token}\n                onKeyUp={e => {\n                  if (e.key === \"Enter\" || e.keyCode === 13) {\n                    handleTokenAdd();\n                  }\n                }}\n                autoCapitalize=\"off\"\n                autoCorrect=\"none\"\n                placeholder=\"Token (required)\"\n                ref={tokenInput}\n              />\n\n              {token.length === 0 && (\n                <button\n                  className={classNames(\n                    gStyles.flatBtn,\n                    styles[\"plus-or-paste-btn\"]\n                  )}\n                  disabled={isPastingToken}\n                  onClick={handleTokenPaste}\n                >\n                  <i className=\"fas fa-paste\"></i>\n                </button>\n              )}\n\n              {token.length > 0 && (\n                <button\n                  className={classNames(\n                    gStyles.flatBtn,\n                    styles[\"plus-or-paste-btn\"]\n                  )}\n                  disabled={token.length === 0}\n                  onClick={handleTokenAdd}\n                >\n                  +\n                </button>\n              )}\n            </div>\n          )}\n\n        <div className={classNames(gStyles.col)}>\n          {(open ? hosts : defaultHosts).map(host => (\n            <Host\n              URI={host.URI}\n              dateAdded={0}\n              error={host.error}\n              isBeingAddedOrDeleted={host.isBeingAddedOrDeleted}\n              isDefault={host.isDefault}\n              key={host.publicKey || host.URI}\n              onClickRemove={handleHostRemoval}\n              onClickWarning={setHostForErrorDialog}\n              price={host.price}\n              publicKey={host.publicKey}\n              token={host.token}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* TODO: change to global modal */}\n      <Modal\n        modalOpen={!!hostForErrorDialog}\n        modalTitle={\n          hosts.find(\n            h =>\n              h.publicKey === hostForErrorDialog || h.URI === hostForErrorDialog\n          )?.error\n        }\n        toggleModal={closeErrorDialog}\n      >\n        <div className={BUTTON_HOLDER_CLASS_NAME}>\n          <button\n            onClick={handleRemovalOfHostWithError}\n            className=\"shock-form-button m-1\"\n          >\n            REMOVE\n          </button>\n\n          <button\n            onClick={handleHostRetry}\n            className=\"shock-form-button-confirm m-1\"\n          >\n            RETRY\n          </button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nconst BUTTON_HOLDER_CLASS_NAME = classNames(\n  gStyles.rowCentered,\n  gStyles.width100,\n  gStyles.centerJustify,\n  gStyles.childrenSpaced16,\n  gStyles.padding12\n);\n\nexport default ContentHostInputView;\n","import ContentHostInput from \"./ContentHostInput\";\n\nexport default ContentHostInput;\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as Store from \"../../store\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\n\nimport ContentHostInputView, { IHost } from \"./components/ContentHostInputView\";\nimport { Http } from \"../../utils\";\nimport { setSeedInfo, setSeedProviderPub } from \"../../actions/ContentActions\";\nimport * as Utils from \"../../utils\";\n\nconst ContentHostInput = () => {\n  const dispatch = useDispatch();\n  const seedProviderPub = Store.useSelector(\n    ({ content }) => content.seedProviderPub\n  );\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const { seedUrl, seedToken } = Store.useSelector(\n    ({ content }) => content.seedInfo\n  );\n  const [hosts, setHosts] = useState<IHost[]>([]);\n  const [providerProfile, setProviderProfile] = useState(null);\n  const [providedService, setProvidedService] = useState(\"\");\n  const [priceToUpdate, setPriceToUpdate] = useState(0);\n  const [providerError, setProviderError] = useState(\"\");\n  //effect for user profile\n  useEffect(() => {\n    const provProfile = userProfiles[seedProviderPub];\n    if (!provProfile) {\n      setProviderProfile(null);\n      return;\n    }\n    if (!providerProfile) {\n      setProviderProfile(provProfile);\n      return;\n    }\n    if (provProfile.avatar !== providerProfile.avatar) {\n      setProviderProfile(provProfile);\n      return;\n    }\n    if (\n      // @ts-expect-error\n      provProfile.offerSeedService !== providerProfile.offerSeedService\n    ) {\n      setProviderProfile(provProfile);\n      return;\n    }\n  }, [userProfiles, seedProviderPub, providerProfile, setProviderProfile]);\n  //effect to check provided service\n  useEffect(() => {\n    if (!providerProfile) {\n      return;\n    }\n    const { offerSeedService } = providerProfile;\n    if (offerSeedService !== providedService) {\n      setProvidedService(offerSeedService);\n    }\n  }, [providerProfile, providedService, setProvidedService]);\n  //effect to populate the hosts\n  useEffect(() => {\n    let toSet: IHost[] = [];\n    if (seedUrl && seedToken) {\n      toSet.push({\n        URI: seedUrl,\n        token: seedToken,\n        price: 0,\n        isBeingAddedOrDeleted: false,\n        dateAdded: Date.now(),\n        isDefault: true,\n        error: null,\n        publicKey: null\n      });\n    }\n    if (seedProviderPub && providerProfile) {\n      toSet.push({\n        dateAdded: Date.now(),\n        isBeingAddedOrDeleted: true,\n        isDefault: true,\n        publicKey: seedProviderPub,\n        price: 0,\n        URI: null,\n        token: null,\n        error: null\n      });\n    }\n    setHosts(toSet);\n  }, [seedUrl, seedToken, seedProviderPub, providerProfile, setHosts]);\n  //effect to fetch provided service\n  useEffect(() => {\n    if (!providedService) {\n      return;\n    }\n    Http.get(\n      `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${providedService}`\n    )\n      .then(({ data }) => {\n        const { data: service } = data;\n        setPriceToUpdate(service.servicePrice);\n      })\n      .catch(e => {\n        setProviderError(e);\n      });\n  }, [providedService, seedProviderPub, setPriceToUpdate, setProviderError]);\n  //effect to update service\n  useEffect(() => {\n    const tmpHosts = [...hosts];\n    const providerIndex = tmpHosts.findIndex(host => !host.URI);\n    if (\n      providerIndex === -1 ||\n      tmpHosts[providerIndex].price === priceToUpdate\n    ) {\n      return;\n    }\n    tmpHosts[providerIndex].isBeingAddedOrDeleted = false;\n    tmpHosts[providerIndex].price = priceToUpdate;\n    setHosts(tmpHosts);\n  }, [priceToUpdate, setPriceToUpdate, hosts, setHosts]);\n  //effect to update error\n  useEffect(() => {\n    //@ts-expect-error\n    const err = providerError.message || providerError;\n    const tmpHosts = [...hosts];\n    const providerIndex = tmpHosts.findIndex(host => !host.URI);\n    if (providerIndex === -1 || err === tmpHosts[providerIndex].error) {\n      return;\n    }\n    tmpHosts[providerIndex].isBeingAddedOrDeleted = false;\n    tmpHosts[providerIndex].error = err;\n    setHosts(tmpHosts);\n  }, [providerError, setProviderError, hosts, setHosts]);\n\n  const addHost = useCallback(\n    (publicKeyOrURI: string, token?: string) => {\n      try {\n        if (publicKeyOrURI.startsWith(\"http\")) {\n          setSeedInfo(publicKeyOrURI, token!)(dispatch);\n        } else {\n          setSeedProviderPub(publicKeyOrURI)(dispatch);\n        }\n      } catch (e) {\n        alert(`Could not add host: ${e.message}`);\n        Utils.logger.error(\"Could not add host: \", e);\n      }\n    },\n    [dispatch]\n  );\n\n  const removeHost = useCallback(\n    (publicKeyOrURI: string) => {\n      try {\n        if (publicKeyOrURI.startsWith(\"http\")) {\n          setSeedInfo(\"\", \"\")(dispatch);\n        } else {\n          setSeedProviderPub(\"\")(dispatch);\n        }\n      } catch (e) {\n        alert(`Could not remove host: ${e.message}`);\n        Utils.logger.error(\"Could not remove host: \", e);\n      }\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    const unsubscribe = (dispatch(\n      subscribeUserProfile(seedProviderPub)\n    ) as unknown) as () => void;\n\n    return unsubscribe;\n  }, [seedProviderPub, dispatch]);\n  const filteredHosts = useMemo(() => {\n    return hosts.filter(h => h);\n  }, [hosts]);\n  return (\n    <ContentHostInputView\n      hosts={filteredHosts}\n      onAddHost={addHost}\n      onRemoveHost={removeHost}\n      onRetryHost={() => {}}\n    />\n  );\n};\n\nexport default ContentHostInput;\n","export default __webpack_public_path__ + \"static/media/logo-alone.512c5854.png\";","import React, {\n  Suspense,\n  useCallback,\n  useMemo,\n  useState,\n  useEffect,\n  useRef,\n  InputHTMLAttributes\n} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport QRCode, { ImageSettings } from \"qrcode.react\";\nimport { Link } from \"react-router-dom\";\nimport c from \"classnames\";\nimport * as Common from \"shock-common\";\n\nimport * as Utils from \"../../utils\";\nimport {\n  deleteService,\n  subscribeMyServices\n} from \"../../actions/OrdersActions\";\nimport * as gStyles from \"../../styles\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ContentHostInput from \"../../common/ContentHostInput\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport logoAlone from \"../../images/logo-alone.png\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport * as Store from \"../../store\";\nimport { rifle, rifleCleanup } from \"../../utils/WebSocket\";\n\nimport \"./css/index.scoped.css\";\nimport {\n  deleteUserPost,\n  subSharedPosts,\n  subscribeUserPosts\n} from \"../../actions/FeedActions\";\nimport { setWebclientPrefix } from \"../../actions/NodeActions\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nexport type WebClientPrefix =\n  | \"https://shock.page\"\n  | \"https://shock.pub\"\n  | \"https://lightning.page\"\n  | \"https://satoshi.watch\";\n\nconst ProfilePage = () => {\n  const dispatch = Store.useDispatch();\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n  const [deletePostModalData, setDeletePostModalData] = useState(null);\n  const [deletePostModalLoading, setDeletePostModalLoading] = useState(false);\n\n  const publicKey = Store.useSelector(({ node }) => node.publicKey);\n  const posts = Store.useSelector(Store.selectPostsNewestToOldest(publicKey));\n  const hostIP = Store.useSelector(({ node }) => node.hostIP);\n  const allPosts = Store.useSelector(Store.selectAllPosts);\n\n  const myServices = Store.useSelector(({ orders }) => orders.myServices);\n  const [selectedView, setSelectedView] = useState<\"posts\" | \"services\">(\n    \"posts\"\n  );\n  const user = useSelector(Store.selectSelfUser);\n\n  useEffect(() => {\n    console.log(user);\n    //@ts-expect-error\n    if (!user.offerSeedService) {\n      return;\n    }\n    //@ts-expect-error\n    const subscription = subscribeMyServices(user.offerSeedService)(dispatch);\n\n    return rifleCleanup(subscription);\n  }, [dispatch]);\n\n  useEffect(() => dispatch(subscribeUserPosts(publicKey)), [\n    dispatch,\n    publicKey\n  ]);\n\n  useEffect(() => dispatch(subSharedPosts(publicKey)), [dispatch, publicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  // ------------------------------------------------------------------------ //\n  // CONFIG MODAL\n\n  const [profileConfigModalOpen, setProfileConfigModalOpen] = useState(false);\n  const currWebClientPrefix = Store.useSelector(\n    ({ node }) => node.webClientPrefix\n  );\n  const [newWebClientPrefix, setNewWebClientPrefix] = useState<WebClientPrefix>(\n    currWebClientPrefix\n  );\n\n  const copyWebClientUrlToClipboard = useCallback(() => {\n    // some browsers/platforms don't support navigator.clipboard\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(newWebClientPrefix + \"/\" + publicKey);\n    } else {\n      const placeholderEl = document.querySelector(\n        \"#web-client-url-holder\"\n      ) as HTMLInputElement;\n      placeholderEl.style.display = \"block\";\n      placeholderEl.select();\n      document.execCommand(\"copy\");\n      placeholderEl.blur();\n      placeholderEl.style.display = \"none\";\n    }\n  }, [newWebClientPrefix, publicKey]);\n\n  const subscribeClientPrefix = useCallback(() => {\n    // Extraneous logs but helps us not having eslint complain about these\n    // \"unnecessary\" dependencies below without disabling the\n    console.debug(\n      `Subbing to webclient prefix on hostIP --| ${hostIP} |-- and public key --| ${publicKey} |--`\n    );\n    const query = `$user::Profile>webClientPrefix::on`;\n\n    const socket = rifle({\n      query,\n      onData: (webClientPrefixReceived: unknown) => {\n        if (\n          typeof webClientPrefixReceived === \"string\" &&\n          webClientPrefixReceived !== currWebClientPrefix\n        ) {\n          setWebclientPrefix(webClientPrefixReceived as WebClientPrefix)(\n            dispatch\n          );\n        }\n      },\n      onError: (errorMessage: string) => {\n        console.error(\n          `There was an error fetching web client prefix: ${errorMessage}`\n        );\n      }\n    });\n\n    return rifleCleanup(socket);\n  }, [\n    currWebClientPrefix,\n    dispatch,\n    hostIP,\n    publicKey /* handles alias/hostIP switch */\n  ]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeClientPrefix();\n\n    return unsubscribe;\n  }, [subscribeClientPrefix]);\n\n  const handleViewChange = useCallback((view: \"posts\" | \"services\") => {\n    setSelectedView(view);\n  }, []);\n  //#region configModal ----------------------------------------------------- //\n  const somethingInsideConfigModalChanged =\n    newWebClientPrefix !== currWebClientPrefix;\n\n  const toggleConfigModal = useCallback(() => {\n    setProfileConfigModalOpen(open => !open);\n    setNewWebClientPrefix(currWebClientPrefix);\n  }, [currWebClientPrefix]);\n\n  const onConfigCancel = useCallback(() => {\n    toggleConfigModal();\n  }, [toggleConfigModal]);\n\n  const onConfigSubmit = useCallback(() => {\n    if (newWebClientPrefix !== currWebClientPrefix) {\n      setWebclientPrefix(newWebClientPrefix)(dispatch);\n      Utils.Http.post(`/api/gun/put`, {\n        path: \"$user>Profile>webClientPrefix\",\n        value: newWebClientPrefix\n      }).catch(e => {\n        alert(\n          `There was an error setting your web client prefix: ${e.message}`\n        );\n      });\n    }\n    toggleConfigModal();\n  }, [newWebClientPrefix, currWebClientPrefix, toggleConfigModal, dispatch]);\n  //#endregion configModal -------------------------------------------------- //\n  //#region header ---------------------------------------------------------- //\n  const headerImageFileInput = useRef<HTMLInputElement>(null);\n  const [settingHeader, setSettingHeader] = useState<boolean>(false);\n\n  const onSelectedHeaderFile: InputHTMLAttributes<{}>[\"onChange\"] = async e => {\n    try {\n      e.preventDefault();\n      if (settingHeader) {\n        return;\n      }\n\n      setSettingHeader(true);\n\n      const { files } = (e.target as unknown) as {\n        files: readonly Utils.File[];\n      };\n\n      if (files.length === 0) {\n        return;\n      }\n\n      if (files.length !== 1) {\n        Utils.logger.error(`Profile -> files.length !== 1`);\n        alert(\n          `An error occurred while trying to set a header. This has been logged.`\n        );\n        return;\n      }\n\n      const [file] = files;\n\n      const imageObtained = await Utils.processImageFile(file, 800, 0.9);\n\n      const DATA_URL_TYPE_PREFIX = \"data:image/jpeg;base64,\";\n      const base64 = imageObtained.slice(DATA_URL_TYPE_PREFIX.length);\n\n      await Utils.Http.post(`/api/gun/put`, {\n        path: \"$user>profileBinary>header\",\n        value: base64\n      });\n    } catch (e) {\n      Utils.logger.error(`Error while trying to load new header.`);\n      Utils.logger.error(e);\n      alert(`There was an error loading the new header: ${e.message}`);\n    } finally {\n      setSettingHeader(false);\n    }\n  };\n\n  const onPressHeader = useCallback(e => {\n    e.preventDefault();\n    const { current } = headerImageFileInput;\n    if (!current) {\n      Utils.logger.error(\"File input element for avatar is falsy.\");\n      alert(\"There was an error and it was logged.\");\n    }\n    current.click();\n  }, []);\n  //#endregion header ------------------------------------------------------- //\n  //#region deleteModal------------------------------------------------------ //\n  const toggleDeleteModal = useCallback(\n    deleteData => {\n      console.log(deleteData);\n      if (deletePostModalData || !deleteData) {\n        setDeletePostModalData(null);\n      }\n      setDeletePostModalData(deleteData);\n    },\n    [deletePostModalData]\n  );\n  const closeDeleteModal = useCallback(() => {\n    setDeletePostModalData(null);\n  }, []);\n\n  const deletePost = useCallback(async () => {\n    try {\n      if (!deletePostModalData || !deletePostModalData.id) {\n        return;\n      }\n      setDeletePostModalLoading(true);\n      console.log(\"deleting:\");\n      console.log(deletePostModalData);\n      const key = deletePostModalData.shared ? \"sharedPosts\" : \"posts\";\n      await Utils.Http.post(\"/api/gun/put\", {\n        path: `$user>${key}>${deletePostModalData.id}`,\n        value: null\n      });\n      dispatch(\n        deleteUserPost({\n          id: deletePostModalData.id,\n          authorId: publicKey\n        })\n      );\n      toggleDeleteModal(null);\n      setDeletePostModalLoading(true);\n    } catch (e) {\n      setDeletePostModalLoading(true);\n      console.log(`Error when deleting post:`);\n      console.log(e);\n      alert(`Could not delete post: ${e.message}`);\n    }\n  }, [\n    deletePostModalData,\n    dispatch,\n    publicKey,\n    toggleDeleteModal,\n    setDeletePostModalLoading\n  ]);\n  const copyClipboard = useCallback(() => {\n    try {\n      // some browsers/platforms don't support navigator.clipboard\n      if (navigator.clipboard) {\n        const text = `${currWebClientPrefix}/${publicKey}`;\n        navigator.clipboard.writeText(text);\n      } else {\n        const placeholderEl = document.querySelector(\n          \"#public-key-holder\"\n        ) as HTMLInputElement;\n        placeholderEl.style.display = \"block\";\n        placeholderEl.select();\n        document.execCommand(\"copy\");\n        placeholderEl.blur();\n        placeholderEl.style.display = \"none\";\n        setProfileModalOpen(false);\n      }\n    } catch (e) {\n      alert(`Could not copy to clipboard: ${e.message}`);\n    }\n  }, [currWebClientPrefix, publicKey]);\n\n  const AVATAR_SIZE = 122;\n\n  const renderPosts = () => {\n    return posts.map(post => {\n      if (Common.isSharedPost(post)) {\n        return (\n          <Suspense fallback={<Loader />} key={post.shareID}>\n            <SharedPost\n              postID={post.originalPostID}\n              sharerPublicKey={post.sharedBy}\n              openTipModal={Utils.EMPTY_FN}\n              openUnlockModal={Utils.EMPTY_FN}\n              openDeleteModal={toggleDeleteModal}\n              openShareModal={null}\n            />\n          </Suspense>\n        );\n      }\n\n      return (\n        <Suspense fallback={<Loader />} key={post.id}>\n          <Post\n            id={post.id}\n            publicKey={post.authorId}\n            openTipModal={Utils.EMPTY_FN}\n            openUnlockModal={Utils.EMPTY_FN}\n            openDeleteModal={toggleDeleteModal}\n            openShareModal={null}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    /*@ts-expect-error*/\n    if (!user.offerSeedService) {\n      return;\n    }\n    return (\n      Object.entries(myServices)\n        /*@ts-expect-error*/\n        .filter(([id, service]) => !!service && user.offerSeedService === id)\n        .map(([id, serv]) => {\n          const service = serv as Record<string, string>;\n          const deleteCB = () => {\n            console.log(\"delete wtf\");\n            deleteService(id)(dispatch);\n          };\n          return (\n            <div className=\"post\" key={id}>\n              <strong>Service ID</strong>\n              <p>{id}</p>\n              <strong>Service Tpe</strong>\n              <p>{service.serviceType || \"\"}</p>\n              <strong>Service Title</strong>\n              <p>{service.serviceTitle || \"\"}</p>\n              <strong>Service Description</strong>\n              <p>{service.serviceDescription || \"\"}</p>\n              <strong>Service Condition</strong>\n              <p>{service.serviceCondition || \"\"}</p>\n              <strong>Service Price</strong>\n              <p>{service.servicePrice || \"\"}</p>\n              <button onClick={deleteCB}>DELETE SERVICE</button>\n            </div>\n          );\n        })\n    );\n  };\n  //#endregion deleteModal------------------------------------------------------ //\n  //#region displayName ----------------------------------------------------- //\n  const [dnModalOpen, setDnModalOpen] = useState(false);\n  const { displayName } = user;\n  // stores the display name input value\n  const [newDisplayName, setNewDisplayName] = useState(\n    user.displayName || \"Anon\"\n  );\n  // stores the new display name while it's being uploaded\n  const [newDnIfBeingSaved, setNewDnIfBeingSaved] = useState<string | null>(\n    null\n  );\n  const saveNewDisplayName = useCallback((toBeSaved: string) => {\n    if (toBeSaved === \"\") {\n      return;\n    }\n    setNewDnIfBeingSaved(toBeSaved); // optimistically render new display name\n    Utils.Http.put(\"/api/gun/me\", {\n      displayName: toBeSaved\n    }).catch(e => {\n      setNewDnIfBeingSaved(null); // reverts to existing display name\n      alert(`There was an error setting a new display name: ${e.message}`);\n    });\n  }, []);\n  useEffect(() => {\n    // set placeholder display name back to null after getting the round trip\n    // from api\n    if (newDnIfBeingSaved === displayName) {\n      console.debug(`Got display name round trip from api.`);\n      setNewDnIfBeingSaved(null);\n    }\n  }, [newDnIfBeingSaved, displayName]);\n  const toggleDnModal = useCallback(() => {\n    setNewDisplayName(displayName);\n    setDnModalOpen(open => !open);\n  }, [displayName]);\n  const handleOkDnChange = useCallback(() => {\n    if (newDisplayName !== displayName) {\n      saveNewDisplayName(newDisplayName);\n    }\n    toggleDnModal();\n  }, [displayName, newDisplayName, saveNewDisplayName, toggleDnModal]);\n  const dnModalStyle = useMemo<React.CSSProperties>(\n    () => ({\n      padding: \"12px 24px\"\n    }),\n    []\n  );\n  const handleNewDisplayNameChange = ({ target: { value } }) => {\n    setNewDisplayName(value);\n  };\n  //#endregion displayName -------------------------------------------------- //\n  //#region bio ------------------------------------------------------------- //\n  const { bio } = user;\n  const [bioModalOpen, setBioModalOpen] = useState(false);\n  // stores the bio input value\n  const [newBio, setNewBio] = useState(bio || \"bio\");\n  // stores the new bio while it's being uploaded\n  const [newBioIfBeingSaved, setNewBioIfBeingSaved] = useState<string | null>(\n    null\n  );\n  const saveNewBio = useCallback((toBeSaved: string) => {\n    if (toBeSaved === \"\") {\n      return;\n    }\n    setNewBioIfBeingSaved(toBeSaved); // optimistically render new bio\n    Utils.Http.put(\"/api/gun/me\", {\n      bio: toBeSaved\n    }).catch(e => {\n      setNewBioIfBeingSaved(null); // reverts to existing bio\n      alert(`There was an error setting a new bio: ${e.message}`);\n    });\n  }, []);\n  useEffect(() => {\n    // set placeholder bio back to null after getting the round trip\n    // from api\n    if (newBioIfBeingSaved === bio) {\n      console.debug(`Got bio round trip from api.`);\n      setNewBioIfBeingSaved(null);\n    }\n  }, [newBioIfBeingSaved, bio]);\n  const toggleBioModal = useCallback(() => {\n    setNewBio(bio);\n    setBioModalOpen(open => !open);\n  }, [bio]);\n  const handleOkBioChange = useCallback(() => {\n    if (newBio !== bio) {\n      saveNewBio(newBio);\n    }\n    toggleBioModal();\n  }, [bio, newBio, saveNewBio, toggleBioModal]);\n  const bioModalStyle = useMemo<React.CSSProperties>(\n    () => ({\n      padding: \"12px 24px\"\n    }),\n    []\n  );\n  const handleNewBioChange = ({ target: { value } }) => {\n    setNewBio(value);\n  };\n  //#endregion bio ---------------------------------------------------------- //\n\n  return (\n    <>\n      <div className=\"page-container profile-page\">\n        <div className=\"profile-container\">\n          <div\n            className={c({\n              \"profile-cover\": true,\n              [gStyles.relative]: true,\n              \"profile-cover-has-cover\": !!user.header\n            })}\n            onClick={onPressHeader}\n          >\n            {user.header && (\n              <img\n                alt=\"User set profile header.\"\n                src={`data:image/jpeg;base64,${user.header}`}\n              />\n            )}\n\n            <i\n              className={c(\n                gStyles.absoluteDeadCenter,\n                \"fas\",\n                \"fa-pencil-alt\",\n                \"cover-pencil\"\n              )}\n            />\n          </div>\n          <div className=\"profile-info-container\">\n            <div\n              className=\"profile-avatar\"\n              style={{\n                height: `${AVATAR_SIZE}px`,\n                width: `${AVATAR_SIZE}px`\n              }}\n            >\n              <ShockAvatar\n                height={AVATAR_SIZE}\n                publicKey={publicKey}\n                setsAvatar\n                greyBorder\n                disableOnlineRing\n              />\n            </div>\n\n            <div className=\"profile-info\">\n              <p\n                className={c(gStyles.unselectable, \"profile-name\")}\n                onClick={toggleDnModal}\n              >\n                {newDnIfBeingSaved || displayName}\n\n                <i className=\"fas fa-pencil-alt pencil-btn\" />\n              </p>\n              <p\n                className={c(gStyles.unselectable, \"profile-desc\")}\n                onClick={toggleBioModal}\n              >\n                {newBioIfBeingSaved || user.bio || \"Lightning.Page user\"}\n\n                <i className=\"fas fa-pencil-alt pencil-btn\" />\n              </p>\n              <div className=\"config-btn\" onClick={toggleConfigModal}>\n                <i className=\"config-btn-icon icon-solid-spending-rule\" />\n                <p className=\"config-btn-text\">Config</p>\n              </div>\n            </div>\n          </div>\n          <div>\n            <Link to={\"/goLive\"} className=\"profile-choice-container\">\n              <div\n                style={{\n                  backgroundColor: \"red\",\n                  color: \"white\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  padding: \"0.2em 0.5em\",\n                  borderRadius: \"0.7em\",\n                  fontSize: \"16px\",\n                  fontWeight: 600\n                }}\n              >\n                <i className=\"fas fa-video\"></i>\n                <p>GO LIVE</p>\n              </div>\n            </Link>\n            <Link to={\"/createPost\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-pen-square\"></i>\n              <p className=\"profile-choice-text\">Create Post</p>\n            </Link>\n            <Link to={\"/publishContent\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fab fa-youtube\"></i>\n              <p className=\"profile-choice-text\">Publish Content</p>\n            </Link>\n            <button className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-shopping-cart\"></i>\n              <p className=\"profile-choice-text\">Offer a Product</p>\n            </button>\n            <Link to={\"/offerService\"} className=\"profile-choice-container\">\n              <i className=\"profile-choice-icon fas fa-running\"></i>\n              <p className=\"profile-choice-text\">Offer a Service</p>\n            </Link>\n          </div>\n\n          <ProfileDivider onChange={handleViewChange} selected={selectedView} />\n          <div className=\"\">\n            {selectedView === \"posts\" && renderPosts()}\n            {selectedView === \"services\" && renderServices()}\n          </div>\n\n          {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n          <Pad amt={200} />\n\n          <Modal\n            toggleModal={toggleModal}\n            modalOpen={profileModalOpen}\n            contentStyle={{\n              padding: \"40px 30px\"\n            }}\n          >\n            <QRCode\n              bgColor=\"#23282d\"\n              fgColor=\"#64bbff\"\n              value={`${currWebClientPrefix}/${publicKey}`}\n              size={180}\n              className=\"profile-qrcode\"\n              imageSettings={QR_IMAGE_SETTINGS}\n            />\n            <p className=\"profile-qrcode-desc\">\n              Other users can scan this code to contact you\n            </p>\n\n            {!navigator.clipboard && (\n              <input\n                className=\"hidden-input\"\n                id=\"public-key-holder\"\n                readOnly\n                type=\"text\"\n                value={`${currWebClientPrefix}/${publicKey}`}\n              ></input>\n            )}\n            <div\n              className=\"profile-clipboard-container\"\n              onClick={copyClipboard}\n            >\n              <img\n                src={ClipboardIcon}\n                className=\"profile-clipboard-icon\"\n                alt=\"\"\n              />\n              <p className=\"profile-clipboard-text\">Tap to copy to clipboard</p>\n            </div>\n          </Modal>\n\n          <Modal\n            toggleModal={toggleConfigModal}\n            modalOpen={profileConfigModalOpen}\n            contentStyle={{\n              padding: \"2em 2em\"\n            }}\n          >\n            <label htmlFor=\"new-web-client-prefix\">Web Client</label>\n\n            <div className=\"web-client-prefix-picker\">\n              <i\n                className=\"far fa-copy\"\n                onClick={copyWebClientUrlToClipboard}\n                style={{ fontSize: 24 }}\n              />\n\n              <select\n                onChange={e => {\n                  setNewWebClientPrefix(e.target.value as WebClientPrefix);\n                }}\n                name=\"new-web-client-prefix\"\n                id=\"new-web-client-prefix\"\n                value={newWebClientPrefix}\n              >\n                {AVAILABLE_WEB_CLIENT_PREFIXES.map(prefix => (\n                  <option key={prefix} value={prefix}>\n                    {prefix}\n                  </option>\n                ))}\n              </select>\n\n              <span>/</span>\n\n              <span style={{ fontSize: 12 }}>{publicKey}</span>\n            </div>\n\n            {!navigator.clipboard && (\n              <input\n                className=\"hidden-input\"\n                id=\"web-client-url-holder\"\n                readOnly\n                type=\"text\"\n                value={newWebClientPrefix + \"/\" + publicKey}\n              ></input>\n            )}\n\n            <br></br>\n\n            <label htmlFor=\"content-host\">Content Host</label>\n\n            <ContentHostInput />\n\n            <br></br>\n\n            {somethingInsideConfigModalChanged && (\n              <div className=\"flex-center\" style={{ marginTop: \"auto\" }}>\n                <button\n                  onClick={onConfigCancel}\n                  className=\"shock-form-button m-1\"\n                >\n                  CANCEL\n                </button>\n                <button\n                  onClick={onConfigSubmit}\n                  className=\"shock-form-button-confirm m-1\"\n                >\n                  SUBMIT\n                </button>\n              </div>\n            )}\n          </Modal>\n\n          <Modal\n            toggleModal={toggleDeleteModal}\n            modalOpen={deletePostModalData}\n            contentStyle={{\n              padding: \"2em 2em\"\n            }}\n            blueBtn={!deletePostModalLoading && \"Cancel\"}\n            disableBlueBtn={deletePostModalLoading}\n            onClickBlueBtn={closeDeleteModal}\n            redBtn={!deletePostModalLoading && \"Delete\"}\n            disableRedBtn={deletePostModalLoading}\n            onClickRedBtn={deletePost}\n            noFullWidth\n          >\n            {!deletePostModalLoading && (\n              <span className=\"text-align-center\">Are you sure?</span>\n            )}\n            {deletePostModalLoading && <Loader />}\n          </Modal>\n          <AddBtn\n            onClick={toggleModal}\n            large\n            iconURL={QRCodeIcon}\n            icon={null}\n            label={null}\n          />\n        </div>\n\n        <BottomBar />\n      </div>\n\n      <input\n        type=\"file\"\n        id=\"avatar-file\"\n        ref={headerImageFileInput}\n        hidden\n        accept=\"image/*\"\n        onChange={onSelectedHeaderFile}\n      />\n\n      {\n        //#region displayNameModal\n      }\n\n      <Modal\n        contentStyle={dnModalStyle}\n        modalOpen={dnModalOpen}\n        toggleModal={toggleDnModal}\n      >\n        <label htmlFor=\"newDisplayName\">Display Name</label>\n        <input\n          autoCapitalize=\"none\"\n          autoCorrect=\"off\"\n          type=\"text\"\n          className=\"input-field\"\n          placeholder={\"New display name\"}\n          name=\"newDisplayName\"\n          onChange={handleNewDisplayNameChange}\n          value={newDisplayName}\n        />\n\n        {newDisplayName !== displayName && newDisplayName !== \"\" ? (\n          <button\n            onClick={handleOkDnChange}\n            className=\"shock-form-button-confirm m-1\"\n          >\n            OK\n          </button>\n        ) : (\n          <button onClick={toggleDnModal} className=\"shock-form-button m-1\">\n            GO BACK\n          </button>\n        )}\n      </Modal>\n\n      {\n        //#endregion displayNameModal\n      }\n\n      {\n        //#region bioModal\n      }\n      <Modal\n        contentStyle={bioModalStyle}\n        modalOpen={bioModalOpen}\n        toggleModal={toggleBioModal}\n      >\n        <label htmlFor=\"newBio\">New Bio</label>\n        <input\n          autoCapitalize=\"none\"\n          autoCorrect=\"off\"\n          type=\"text\"\n          className=\"input-field\"\n          placeholder={\"New bio\"}\n          name=\"newBio\"\n          onChange={handleNewBioChange}\n          value={newBio}\n        />\n        {newBio !== bio && newBio !== \"\" ? (\n          <button\n            onClick={handleOkBioChange}\n            className=\"shock-form-button-confirm m-1\"\n          >\n            OK\n          </button>\n        ) : (\n          <button onClick={toggleBioModal} className=\"shock-form-button m-1\">\n            GO BACK\n          </button>\n        )}\n      </Modal>\n      {\n        //#endregion bioModal\n      }\n    </>\n  );\n};\n\nconst AVAILABLE_WEB_CLIENT_PREFIXES: readonly WebClientPrefix[] = [\n  \"https://shock.pub\",\n  \"https://shock.page\",\n  \"https://lightning.page\",\n  \"https://satoshi.watch\"\n];\n\nconst QR_IMAGE_SETTINGS: ImageSettings = {\n  src: logoAlone,\n  height: 36,\n  width: 36,\n  excavate: true\n};\n\nexport default ProfilePage;\n"],"sourceRoot":""}