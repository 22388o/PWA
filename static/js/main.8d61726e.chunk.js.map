{"version":3,"sources":["actions/OrdersActions.js","utils/Http.js","common/Loader/index.js","actions/AuthActions.ts","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.js","reducers/DrawerReducer.js","reducers/ContentReducer.js","reducers/FeesReducer.js","reducers/FeedReducer.js","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/index.ts","actions/ChatActions.js","utils/WebSocket.js","utils/JSON.ts","utils/Encryption.ts","actions/WalletActions.js","actions/UserProfilesActions.ts","actions/ContentActions.js","actions/NodeActions.js","common/Drawer/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js","actions/FeedActions.js","utils/FieldError.ts","schema/index.ts","utils/Date.ts","utils/index.ts","utils/Error.ts","actions/EncryptionActions.js","actions/DrawerActions.js","actions/FeesActions.js","utils/Gun.js","utils/String.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","dispatch","a","Http","post","path","value","data","ok","id","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","hostIP","query","rifleSocketExists","rifle","host","publicKey","reconnect","on","services","servicesEntries","forEach","get","service","type","serviceInfo","disconnectRifleSocket","buyService","owner","serviceID","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","store","hostKeys","getState","encryption","hostId","node","remotePublicKey","warn","Encryption","message","stringify","encryptedMessage","decryptResponse","userKeys","localPrivateKey","privateKey","decryptedMessage","interceptors","request","use","authToken","deviceId","localRequest","url","indexOf","headers","common","Authorization","method","toUpperCase","includes","error","reject","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","window","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","RESET_AUTH_INFO","SET_AUTH_STEP","SET_AUTHENTICATED","SET_AUTH_METHOD","LOGOUT","setAuthenticated","status","setAuthStep","step","setAuthMethod","logout","INITIAL_STATE","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","SET_ATTEMPTS_DONE","AUTH_ACTIONS","authenticated","authStep","userSessionKey","APISessionKey","defaultSteps","manual","shockWizard","shockCloud","auth","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","_getUnifiedTransactionDate","item","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","filter","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","sort","b","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","contacts","messages","sentRequests","receivedRequests","requestBlacklist","_identicalMessages","oldMessage","newMessage","localId","_sortMessages","timestamp","_processNewMessage","outgoing","userMessages","recipientPublicKey","existingMessage","body","sortedMessages","chat","LOAD_CHAT_DATA","LOAD_SENT_REQUESTS","requestPublicKeys","pk","pendingRequests","loading","LOAD_RECEIVED_REQUESTS","SENT_REQUEST","avatar","changedAddress","displayName","Date","now","ACCEPT_HANDSHAKE_REQUEST","requestId","DECLINE_HANDSHAKE_REQUEST","trim","SENDING_MESSAGE","Schema","SENDING","SENT_MESSAGE","SENT","FAILED_MESSAGE","FAILED","RECEIVED_MESSAGE","RECEIVED","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","publishedContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","SET_SEED_PROVIDER_PUB","ADD_PUBLISHED_CONTENT","res","contentTmp","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","userToken","availableTmp","push","REMOVE_USED_TOKEN","index","splice","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","posts","feed","RESET_FOLLOWS","ADD_FOLLOW","existingFollow","find","follow","user","REMOVE_FOLLOW","UPDATE_FOLLOW","key","profile","ADD_USER_POST","authorId","userPosts","existingPost","DELETE_USER_POST","LOAD_POSTS","LOAD_SHARED_POST","sharerId","updatedPosts","originalPost","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","NODE_ACTIONS","Common","RESET_USER_PROFILES","LOAD_USER_PROFILE","REMOVE_USER_PROFILE","profiles","UPDATE_USER_PROFILE","newProfile","oldProfile","CHAT_ACTIONS","produce","draft","c","req","myServices","boughtServices","orders","tmp","servicesTmp","selectedService","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","users","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","debug","process","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","SET_CHAT_CONTACTS","SET_CHAT_MESSAGES","loadChatData","getChats","loadSentRequests","getSentRequests","err","recipientAvatar","recipientDisplayName","recipientChangedRequestAddress","loadReceivedRequests","getReceivedRequests","requestorPK","requestorAvatar","requestorDisplayName","subscribeChatMessages","userPublicKey","incomingId","incomingMessages","initialMessagePrefix","rawMsg","msg","acceptHandshakeRequest","put","accept","sendHandshakeRequest","sendMessage","tempId","DateTime","utc","toMillis","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","rifleSockets","Map","GunSocket","LNDSocket","connectSocket","SocketIO","connect","disconnectSocket","socket","off","close","decryptEventCallback","callback","encryptedEmit","eventName","encryptedData","emit","encryptedOn","responses","decryptedResponses","fetchSocket","namespace","resolve","then","DataSocket","token","encryptionId","FieldError","field","cachedSocket","delete","opts","$shock","publicKeyForDecryption","set","chats","reduce","safeParseJSON","nonEncryptedEvents","convertBase64ToBuffer","Buffer","from","convertBufferToBase64","processKey","Uint8Array","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","fetchWalletBalance","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","updateUserProfile","subscribeUserProfile","subscription","binarySub","Utils","header","onError","onNotAuth","unsubscribeUserProfile","setSeedProviderPub","pub","setSeedInfo","cleanUrl","endsWith","slice","infoS","addPublishedContent","toSet","unlockContent","postID","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","addAvailableToken","removeUnavailableToken","addStreamToken","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","retryOperation","operation","delay","retries","catch","reason","ms","r","setTimeout","bind","fetchNodeHealth","Error","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","connectHost","resetData","done","health","baseURL","throttledExchangeKeyPair","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","timeout","decodedToken","jwtDecode","authorization","exp","parseError","createWallet","SetAttemptsDone","Drawer","useDispatch","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","createPostPage","GoLivePage","OtherUserPage","Story","Stories","QRScannerPage","PrivateRoute","component","authorizedComponent","App","useEffect","videojs","addLanguage","tokenExpired","JWTDecode","subbedUsers","useRef","contactPKs","sentReqsPKs","receivedReqsPKs","publicKeysToSub","uniq","current","batch","currentSubbedUsers","length","fallback","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","RESET_FEED","POST_TIPPED","removeFollow","addFollow","loadSharedPost","postId","sharerPublicKey","subscribeUserPosts","postEntries","newPosts","GUN_PROPS","deletedPosts","subscribeSharedUserPosts","originalAuthor","subscribeFollows","sendTipPost","deleteUserPost","stack","CHAT_MESSAGE_STATUS","useForceUpdate","setTick","tick","logger","resizeImage","img","desiredLongEdge","compression","canvas","createElement","width","Math","round","getContext","drawImage","toDataURL","processImageFile","file","startsWith","TypeError","size","rej","reader","FileReader","onload","e","target","result","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","src","image","resizedImage","normalizeURL","_url","__url","_","protocol","getContact","contact","EMPTY_FN","errorMessage","exchangingKeypair","addUserKeyPair","addHostKey","getDeviceId","APIPublicKey","openDrawer","loadFeeRates","capitalizeText","split","word","toLowerCase","join","processDisplayName","suffix"],"mappings":"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","file":"static/js/main.8d61726e.chunk.js","sourcesContent":["import Http from \"../utils/Http\"\nimport {rifle,rifleSocketExists,disconnectRifleSocket} from '../utils/WebSocket'\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE:\"service/add/bought\"\n};\n\nexport const createService = (clear,encrypted) => async dispatch => {\n\n  const {data} = await Http.post('/api/gun/set',{\n    path:'$user>offeredServices',\n    value:clear,\n    \n  })\n  const {ok,id} = data\n  if(!ok){\n    return \"\"\n  }\n  const all = Object.entries(encrypted).map(([name,value]) => {\n    if(!value){\n      return\n    }\n    console.log(`setting: ${name} to ${value}`)\n    return Http.post('/api/gun/put',{\n      path:`$user>offeredServices>${id}>${name}`,\n      value:{\n        $$__ENCRYPT__FOR:'me',\n        value\n      },\n    })\n  })\n  await Promise.all(all)\n  const {serviceType} = clear\n  //update the offered service\n  if(serviceType === 'torrentSeed' || serviceType === 'streamSeed'){\n    console.log(\"updating profile with service\")\n    await Http.post('/api/gun/put',{\n      path:`$user>Profile>SeedServiceProvided`,\n      value:id,\n    })\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id\n};\n\n\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post('/api/gun/put',{\n    path:`$user>offeredServices>${id}`,\n    value:null\n  })\n};\n\nexport const subscribeMyServices = (hostIP) => async (dispatch) => {\n  const query = `$user::offeredServices::on`\n  const socketExists = rifleSocketExists(query)\n  const subscription = await rifle({\n    host: hostIP,\n    query,\n    publicKey:\"\",\n    reconnect:false\n  });\n  subscription.on(\"$shock\", async services => {\n    const servicesEntries = Object.entries(services);\n    console.log(servicesEntries)\n\n    servicesEntries.forEach(async ([id]) => {\n      if(id === \"_\"){\n        return\n      }\n      const { data: service } = await  Http.get(\n        `/api/gun/user/load/offeredServices>${id}`\n      )\n      console.log(service.data)\n      if (service.data === null) {\n        dispatch({\n          type: ACTIONS.REMOVE_MY_SERVICE,\n          data: id\n        });\n        return\n      }\n      dispatch({\n        type: ACTIONS.ADD_MY_SERVICE,\n        data: {id,serviceInfo:service.data}\n      });\n    })\n  });\n  return () => {\n    disconnectRifleSocket(query)\n  }\n}\n\nexport const buyService = (owner,serviceID,servicePrice) => async (dispatch) => {\n  const {data} = await Http.post('/api/lnd/unifiedTrx',{\n    type: 'service',\n    amt:Number(servicePrice),\n    to: owner,\n    memo:\"\",\n    feeLimit:500,\n    ackInfo:serviceID\n  })\n  console.log(data)\n  const orderAck = JSON.parse(data.orderAck.response)\n  dispatch({\n    type:ACTIONS.ADD_BOUGHT_SERVICE,\n    data:{orderAck,owner,serviceID}\n  })\n  return orderAck\n\n}","import Http from \"axios\";\nimport * as Encryption from \"./Encryption\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return response;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n    }\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\").matches\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","export const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\"\n};\n\nexport const setAuthenticated = status => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTHENTICATED,\n    data: status\n  });\n};\n\nexport const setAuthStep = step => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_STEP,\n    data: step\n  });\n};\n\nexport const setAuthMethod = method => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_AUTH_METHOD,\n    data: method\n  });\n};\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null,\n  userSessionKey: null,\n  APISessionKey: null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: []\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n */\n/**\n * @template S\n * @typedef {import('redux').Reducer<S, AnyAction>} Reducer\n */\n\nimport * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').ReceivedRequest} ReceivedRequest\n * @typedef {import(\"../schema\").SentRequest} SentRequest\n *\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').LoadSentRequestsAction} LoadSentRequestsAction\n */\n\nconst INITIAL_STATE = {\n  contacts: /** @type {Contact[]} */ ([]),\n  /**\n   * @type {Record<string, Schema.ChatMessage[]>}\n   */\n  messages: {},\n  sentRequests: /** @type {SentRequest[]} */ ([]),\n  receivedRequests: /** @type {ReceivedRequest[]} */ ([]),\n  requestBlacklist: []\n};\n\n/**\n * @param {Schema.ChatMessage} oldMessage\n * @param {Schema.ChatMessage} newMessage\n * @returns {boolean}\n */\nconst _identicalMessages = (oldMessage, newMessage) =>\n  oldMessage.id && newMessage.id\n    ? oldMessage.id === newMessage.id\n    : oldMessage.localId === newMessage.localId;\n\n/**\n * @param {Schema.ChatMessage[]} messages\n * @returns {Schema.ChatMessage[]}\n */\nconst _sortMessages = (messages = []) =>\n  messages.sort((a, b) => b.timestamp - a.timestamp);\n\n/**\n * @typedef {object} ProcessNewMessageParams\n * @prop {Schema.ChatMessage} data\n * @prop {Schema.ChatMessageStatus} status\n * @prop {typeof INITIAL_STATE} state\n * @prop {boolean=} outgoing\n */\n\n/**\n * @param {ProcessNewMessageParams} args\n * @returns {typeof INITIAL_STATE}\n */\nconst _processNewMessage = ({ data, status, state, outgoing = false }) => {\n  const userMessages = state.messages[data.recipientPublicKey] ?? [];\n  const [existingMessage] = userMessages.filter(message =>\n    _identicalMessages(message, data)\n  );\n\n  if (existingMessage) {\n    console.warn(\"Duplicate Message:\", existingMessage?.body);\n  }\n\n  if (existingMessage) {\n    const messages = userMessages.map(message =>\n      _identicalMessages(message, existingMessage)\n        ? { ...existingMessage, ...data, status, outgoing }\n        : message\n    );\n    const sortedMessages = _sortMessages(messages);\n\n    return {\n      ...state,\n      messages: {\n        ...state.messages,\n        [data.recipientPublicKey]: sortedMessages\n      }\n    };\n  }\n\n  const messages = [{ ...data, status, outgoing }, ...userMessages];\n  const sortedMessages = _sortMessages(messages);\n\n  return {\n    ...state,\n    messages: {\n      ...state.messages,\n      [data.recipientPublicKey]: sortedMessages\n    }\n  };\n};\n\n/**\n * @type {Reducer<typeof INITIAL_STATE>}\n */\nconst chat = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_CHAT_DATA: {\n      const {\n        data: { contacts, messages }\n      } = /** @type {LoadChatDataAction} */ (action);\n      return {\n        ...state,\n        contacts,\n        // TODO: Could not replacing messages altogether be bad?\n        messages: {\n          ...state.messages,\n          ...messages\n        }\n      };\n    }\n    case ACTIONS.LOAD_SENT_REQUESTS: {\n      const {\n        data: sentRequests\n      } = /** @type {LoadSentRequestsAction} */ (action);\n      const requestPublicKeys = state.sentRequests.map(request => request.pk);\n      const pendingRequests = state.sentRequests.filter(\n        request => request.loading && !requestPublicKeys.includes(request.pk)\n      );\n\n      return {\n        ...state,\n        sentRequests: [...pendingRequests, ...sentRequests]\n      };\n    }\n    case ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      const {\n        data: receivedRequests\n      } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n      return {\n        ...state,\n        receivedRequests\n      };\n    }\n    case ACTIONS.SENT_REQUEST: {\n      const { data: publicKey } = /** @type {SentRequestAction} */ (action);\n      return {\n        ...state,\n        sentRequests: [\n          ...state.sentRequests,\n          {\n            avatar: null,\n            changedAddress: false,\n            displayName: null,\n            id: \"loading/\" + publicKey,\n            pk: publicKey,\n            timestamp: Date.now(),\n            loading: true\n          }\n        ]\n      };\n    }\n    case ACTIONS.ACCEPT_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      return {\n        ...state,\n        receivedRequests: state.receivedRequests.filter(\n          request => request.id !== requestId\n        )\n      };\n    }\n    case ACTIONS.DECLINE_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      if (!requestId || !requestId.trim()) {\n        return state;\n      }\n\n      return {\n        ...state,\n        requestBlacklist: [...state.requestBlacklist, requestId]\n      };\n    }\n    case ACTIONS.SENDING_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENDING,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.SENT_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.FAILED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.FAILED,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.RECEIVED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.RECEIVED,\n        state\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import { ACTIONS } from \"../actions/ContentActions\";\nconst INITIAL_STATE = {\n  seedProviderPub:'test',\n  streamUserToken:'',\n  streamLiveToken:'',\n  streamUrl:'',\n  publishedContent:{},\n  unlockedContent:{},\n  seedInfo:{},\n  availableTokens:{},\n  availableStreamTokens:{}\n};\n\nconst content = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n    case ACTIONS.ADD_PUBLISHED_CONTENT:{\n      const {data} = action\n      const {content,res} = data\n      const contentTmp = {...state.publishedContent}\n      if(res.ok){\n        contentTmp[res.id] = content \n      }\n      return { ...state, publishedContent:contentTmp} \n    }\n    case ACTIONS.ADD_UNLOCKED_CONTENT:{\n      const {data} = action\n      const unlockedTmp = {...state.unlockedContent}\n      unlockedTmp[data.contentPath] = data.content\n      return {...state,unlockedContent:unlockedTmp}\n    }\n    case ACTIONS.ADD_STREAM:{\n      const {data} = action\n      return {...state, streamLiveToken:data.liveToken,streamUserToken:data.seedToken,streamUrl:data.streamUrl}\n    }\n    case ACTIONS.REMOVE_STREAM:{\n      return {...state, streamLiveToken:'',streamUserToken:''}\n    }\n    case ACTIONS.SET_SEED_INFO:{\n      const {data} = action\n      return {...state, seedInfo:data}\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableTokens}\n      if(!availableTmp[seedUrl]){\n        availableTmp[seedUrl] = []\n      }\n      availableTmp[seedUrl].push(userToken)\n      return {...state,availableTokens:availableTmp}\n    }\n    case ACTIONS.REMOVE_USED_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableTokens}\n      if(!availableTmp[seedUrl]){\n        return state\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return {...state,availableTokens:availableTmp}\n      }\n      return state\n    }\n    case ACTIONS.ADD_STREAM_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableStreamTokens}\n      if(!availableTmp[seedUrl]){\n        availableTmp[seedUrl] = []\n      }\n      availableTmp[seedUrl].push(userToken)\n      return {...state,availableStreamTokens:availableTmp}\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN:{\n      const {data} = action\n      const {seedUrl,userToken} = data\n      const availableTmp = {...state.availableStreamTokens}\n      if(!availableTmp[seedUrl]){\n        return state\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return {...state,availableStreamTokens:availableTmp}\n      }\n      return state\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import { ACTIONS } from \"../actions/FeesActions\";\n\nconst INITIAL_STATE = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n  rate: \"halfHourFee\",\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","import { ACTIONS } from \"../actions/FeedActions\";\n\nconst INITIAL_STATE = {\n  follows: [],\n  posts: {}\n};\n\nconst feed = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_FOLLOWS: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.ADD_USER_POST: {\n      const { data } = action;\n      const authorId = data.authorId;\n      const userPosts = state.posts[authorId] ?? [];\n      const existingPost = userPosts.find(post => data.id === post.id);\n\n      if (existingPost) {\n        return state;\n      }\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: [...userPosts, data]\n        }\n      };\n    }\n    case ACTIONS.DELETE_USER_POST: {\n      const { id, authorId } = action.data;\n      const userPosts = (state.posts[authorId] ?? []).filter(\n        post => post.id !== id\n      );\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [authorId]: userPosts\n        }\n      };\n    }\n    case ACTIONS.LOAD_POSTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        posts: data\n      };\n    }\n    case ACTIONS.LOAD_SHARED_POST: {\n      const { data } = action;\n      const { id, sharerId } = data;\n      const userPosts = state.posts[sharerId] ?? [];\n      const updatedPosts = userPosts.map(post => {\n        if (post.id === id && post.type === \"shared\") {\n          return {\n            ...post,\n            originalPost: data\n          };\n        }\n\n        return post;\n      });\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [sharerId]: updatedPosts\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as CHAT_ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import(\"../actions/ChatActions\").LoadSentRequestsAction} LoadSentRequestsAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n */\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_USER_PROFILE: {\n      const { publicKey, profile } = action.data;\n\n      if (!publicKey || !profile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey],\n          ...profile\n        }\n      };\n    }\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n    case ACTIONS.UPDATE_USER_PROFILE: {\n      const { publicKey, profile: newProfile } = action.data;\n      const oldProfile = state[publicKey];\n\n      if (!oldProfile || !newProfile) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...oldProfile,\n          ...newProfile\n        }\n      };\n    }\n    case CHAT_ACTIONS.LOAD_CHAT_DATA: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadChatDataAction} */ (action);\n\n        data.contacts.forEach(c => {\n          draft[c.pk] = {\n            ...Common.createEmptyUser(c.pk),\n            ...draft[c.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_SENT_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadSentRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.SENT_REQUEST: {\n      return produce(state, draft => {\n        const { data: pk } = /** @type {SentRequestAction} */ (action);\n\n        if (!draft[pk]) {\n          draft[pk] = Common.createEmptyUser(pk);\n        }\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n    myServices:{},\n    services:{},\n    boughtServices:{}\n};\n\n\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const {id,serviceInfo} = action.data\n      const tmp = {...state.myServices}\n      tmp[id] = serviceInfo\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE:{\n      const id = action.data\n      const tmp = {...state.myServices}\n      delete tmp[id]\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE:{\n      const {orderAck,owner,serviceID} = action.data\n      const servicesTmp = {...state.boughtServices}\n      \n      if(!servicesTmp[owner]){\n        servicesTmp[owner] = {}\n      }\n      const selectedService = servicesTmp[owner]\n      if(!selectedService[serviceID]){\n        selectedService[serviceID] = []\n      }\n      selectedService[serviceID].push(orderAck)\n      return {...state, boughtServices:servicesTmp}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","import { combineReducers } from \"redux\";\nimport * as Common from \"shock-common\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\"\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders:OrdersReducer,\n  users: () => {\n    return {} as Record<string, Common.User>;\n  }\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = (publicKey: string) => (\n  state: State\n): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey);\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n","import { createStore, applyMiddleware, compose, AnyAction } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport { useSelector as origUseSelector } from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport * from \"./selectors\";\n","// @ts-check\nimport Http from \"../utils/Http\";\nimport { DateTime } from \"luxon\";\nimport { v4 as uuidv4 } from \"uuid\";\n/**\n * @typedef {import('shock-common').Message} RawMessage\n */\n\nimport {\n  getChats,\n  getReceivedRequests,\n  getSentRequests,\n  rifle\n} from \"../utils/WebSocket\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport * as Schema from \"../schema\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').SentRequest} SentRequest\n * @typedef {import(\"../schema\").ReceivedRequest} ReceivedRequest\n * @typedef {import('../schema').ChatMessage} ChatMessage\n */\n\nexport const ACTIONS = {\n  LOAD_CHAT_DATA: /** @type {\"chat/loadData\"} */ (\"chat/loadData\"),\n  LOAD_SENT_REQUESTS: /** @type {\"chat/loadSentRequests\"} */ (\"chat/loadSentRequests\"),\n  LOAD_RECEIVED_REQUESTS: /** @type {\"chat/loadReceivedRequests\"} */ (\"chat/loadReceivedRequests\"),\n  SET_CHAT_CONTACTS: \"chat/contacts\",\n  SET_CHAT_MESSAGES: \"chat/messages\",\n  SENT_REQUEST: /** @type {\"chat/request/sent\"} */ (\"chat/request/sent\"),\n  ACCEPT_HANDSHAKE_REQUEST: \"chat/request/accept\",\n  DECLINE_HANDSHAKE_REQUEST: \"chat/request/decline\",\n  SENDING_MESSAGE: \"chat/message/sending\",\n  SENT_MESSAGE: \"chat/message/sent\",\n  FAILED_MESSAGE: \"chat/message/failed\",\n  RECEIVED_MESSAGE: /** @type {\"chat/message/received\"} */ (\"chat/message/received\")\n};\n\n/**\n * @typedef {object} SentRequestAction\n * @prop {typeof ACTIONS.SENT_REQUEST} type\n * @prop {string} data The public key.\n */\n\n/**\n * @typedef {object} LoadChatDataAction\n * @prop {typeof ACTIONS.LOAD_CHAT_DATA} type\n * @prop {{ messages: Record<string, ChatMessage[]> , contacts: Contact[] }} data\n */\n\n/**\n * @typedef {object} LoadSentRequestsAction\n * @prop {typeof ACTIONS.LOAD_SENT_REQUESTS} type\n * @prop {SentRequest[]} data\n */\n\n/**\n * @typedef {object} LoadReceivedRequestsAction\n * @prop {typeof ACTIONS.LOAD_RECEIVED_REQUESTS} type\n * @prop {ReceivedRequest[]} data\n */\n\n/**\n * @typedef {object} ReceivedMessageAction\n * @prop {typeof ACTIONS.RECEIVED_MESSAGE} type\n * @prop {ChatMessage} data\n */\n\nexport const loadChatData = () => async (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  const data = await getChats({ hostIP, authToken });\n  console.log(\"LOAD_CHAT_DATA:\", data);\n\n  dispatch({\n    type: ACTIONS.LOAD_CHAT_DATA,\n    data\n  });\n};\n\nexport const loadSentRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getSentRequests({ hostIP, authToken }, (err, sentRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"sentRequests:\", sentRequests);\n\n    /** @type {LoadSentRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_SENT_REQUESTS,\n      data: sentRequests.map(request => {\n        /** @type {SentRequest} */\n        const req = {\n          id: request.id,\n          pk: request.recipientPublicKey,\n          avatar: request.recipientAvatar,\n          displayName: request.recipientDisplayName,\n          changedAddress: request.recipientChangedRequestAddress,\n          timestamp: request.timestamp,\n          loading: false\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const loadReceivedRequests = () => (dispatch, getState) => {\n  const { hostIP, authToken } = getState().node;\n  getReceivedRequests({ hostIP, authToken }, (err, receivedRequests) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    console.log(\"receivedRequests:\", receivedRequests);\n\n    /** @type {LoadReceivedRequestsAction} */\n    const action = {\n      type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n      data: receivedRequests.map(request => {\n        /** @type {ReceivedRequest} */\n        const req = {\n          id: request.id,\n          pk: request.requestorPK,\n          avatar: request.requestorAvatar,\n          displayName: request.requestorDisplayName,\n          timestamp: request.timestamp\n        };\n\n        return req;\n      })\n    };\n\n    dispatch(action);\n  });\n};\n\nexport const subscribeChatMessages = (\n  userPublicKey,\n  recipientPublicKey\n) => async (dispatch, getState) => {\n  const { hostIP } = getState().node;\n  const { data: incomingId } = await Http.get(\n    `/api/gun/user/once/userToIncoming>${recipientPublicKey}`,\n    {\n      headers: {\n        \"public-key-for-decryption\": userPublicKey\n      }\n    }\n  );\n\n  if (!incomingId.data) {\n    console.warn(\"Unable to retrieve incoming ID for selected contact\");\n    return null;\n  }\n\n  const incomingMessages = await rifle({\n    host: hostIP,\n    query: `${recipientPublicKey}::outgoings>${incomingId.data}>messages::map.on`,\n    publicKey: recipientPublicKey\n  });\n\n  incomingMessages.on(\"$shock\", (message, id) => {\n    if (!message.body || message.body === initialMessagePrefix) {\n      return;\n    }\n    /** @type {RawMessage} */\n    const rawMsg = message;\n\n    /** @type {ChatMessage} */\n    const msg = {\n      body: rawMsg.body,\n      id,\n      localId: id,\n      outgoing: false,\n      recipientPublicKey,\n      status: Schema.CHAT_MESSAGE_STATUS.SENT,\n      timestamp: rawMsg.timestamp\n    };\n\n    /** @type {ReceivedMessageAction} */\n    const action = {\n      type: ACTIONS.RECEIVED_MESSAGE,\n      data: msg\n    };\n\n    dispatch(action);\n  });\n\n  return incomingMessages;\n};\n\nexport const acceptHandshakeRequest = requestId => async dispatch => {\n  const { data } = await Http.put(`/api/gun/requests/${requestId}`, {\n    accept: true\n  });\n\n  dispatch({\n    type: ACTIONS.ACCEPT_HANDSHAKE_REQUEST,\n    data: requestId\n  });\n\n  return data;\n};\n\nexport const sendHandshakeRequest = publicKey => async (dispatch, getState) => {\n  const { data } = await Http.post(`/api/gun/requests`, {\n    publicKey\n  });\n\n  /** @type {SentRequest[]} */\n  const sentRequests = getState().chat.sentRequests;\n  const [userExists] = sentRequests.filter(request => request.pk === publicKey);\n\n  if (!userExists) {\n    /** @type {SentRequestAction} */\n    const action = {\n      type: ACTIONS.SENT_REQUEST,\n      data: publicKey\n    };\n    dispatch(action);\n  }\n\n  return data;\n};\n\nexport const sendMessage = ({\n  publicKey,\n  message,\n  localId = null\n}) => async dispatch => {\n  const tempId = localId ?? uuidv4();\n  try {\n    dispatch({\n      type: ACTIONS.SENDING_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n    const { data } = await Http.post(`/api/gun/chats/${publicKey}`, {\n      body: message\n    });\n    console.log(data);\n    dispatch({\n      type: ACTIONS.SENT_MESSAGE,\n      data: { ...data, localId: tempId, recipientPublicKey: publicKey }\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIONS.FAILED_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n  }\n};\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport FieldError from \"./FieldError\";\n/**\n * @typedef {import('../schema').Contact} Contact\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true\n};\n\nconst rifleSockets = new Map();\n\nexport let GunSocket = null;\n\nexport let LNDSocket = null;\n\nexport const connectSocket = url => {\n  GunSocket = SocketIO.connect(`${url}/gun`, options);\n  LNDSocket = SocketIO.connect(`${url}/lndstreaming`, options);\n  return { GunSocket, LNDSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: data\n    });\n\n    callback(err, decryptedMessage);\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (!Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        if (!response) {\n          return response;\n        }\n\n        if (response && !Encryption.isEncryptedMessage(response)) {\n          console.warn(\"Non-encrypted socket message\", response);\n          return response;\n        }\n\n        return Encryption.decryptMessage({\n          privateKey: localPrivateKey,\n          encryptedMessage: response\n        });\n      })\n    );\n\n    callback(...decryptedResponses);\n  });\n};\n\nconst fetchSocket = ({ hostIP, authToken, namespace, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const { encryption } = store.getState();\n        const DataSocket = SocketIO.connect(`${hostIP}/${namespace}`, {\n          ...options,\n          auth: {\n            token: authToken,\n            encryptionId: encryption.deviceId\n          }\n        });\n        const on = encryptedOn(DataSocket);\n\n        on(\"$shock\", async data => {\n          if (callback) {\n            callback(null, data);\n            return;\n          }\n          resolve(data);\n        });\n\n        on(\"$error\", async error => {\n          if (callback) {\n            callback(error);\n            return;\n          }\n          disconnectSocket(DataSocket);\n          reject(\n            new FieldError({\n              field: \"socket\",\n              message: error\n            })\n          );\n        });\n\n        on(\"error\", error => {\n          console.error(error);\n          if (callback) {\n            callback(error);\n            return;\n          }\n          disconnectSocket(DataSocket);\n          reject(\n            new FieldError({\n              field: \"socket\",\n              message: error\n            })\n          );\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const disconnectRifleSocket = query => {\n  const cachedSocket = rifleSockets.get(query);\n\n  if (cachedSocket) {\n    cachedSocket.off(\"*\");\n    cachedSocket.close();\n    rifleSockets.delete(query);\n  }\n};\n\nexport const rifleSocketExists = query => {\n  const cachedSocket = rifleSockets.get(query);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} host\n * @prop {string} query\n * @prop {string=} publicKeyForDecryption\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {boolean=} reconnect\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.on('$shock')` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map()once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<SocketIOClient.Socket>}\n */\nexport const rifle = async ({ host, query, publicKey, reconnect }) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const opts = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId,\n      $shock: query,\n      publicKeyForDecryption: publicKey ?? \"\"\n    }\n  };\n\n  const cachedSocket = rifleSockets.get(query);\n\n  if (reconnect && cachedSocket) {\n    disconnectRifleSocket(query);\n  }\n\n  if (!cachedSocket || reconnect) {\n    const socket = SocketIO(`${host}/gun`, opts);\n    rifleSockets.set(query, socket);\n    const on = encryptedOn(socket);\n    const emit = encryptedEmit(socket);\n\n    on(\"$error\", err => {\n      console.error(`Gun rifle error (${query})`);\n\n      console.error(err);\n    });\n\n    return {\n      on,\n      emit,\n      off: () => socket.off(),\n      close: () => socket.close()\n    };\n  }\n\n  return cachedSocket;\n};\n\n/**\n * @returns {{ messages: any , contacts: Contact[]}}\n */\nexport const getChats = async ({ hostIP, authToken }) => {\n  try {\n    const chats = await fetchSocket({ hostIP, authToken, namespace: \"chats\" });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\nexport const getSentRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const sentRequests = await fetchSocket({\n      hostIP,\n      authToken,\n      namespace: \"sentReqs\",\n      callback\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getReceivedRequests = async ({ hostIP, authToken }, callback) => {\n  try {\n    const receivedRequests = await fetchSocket({\n      hostIP,\n      authToken,\n      namespace: \"receivedReqs\",\n      callback\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Uint8Array;\n  ephemPublicKey: Uint8Array;\n  iv: Uint8Array;\n  mac: Uint8Array;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface DeriveKey {\n  localPrivateKey: Uint8Array | string;\n  remotePublicKey: Uint8Array | string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Uint8Array | string;\n  sharedKey: Uint8Array | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Uint8Array | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Uint8Array) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Uint8Array | string): Uint8Array => {\n  if (key instanceof Uint8Array) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    encryptedMessage.ciphertext instanceof Uint8Array &&\n    encryptedMessage.iv instanceof Uint8Array &&\n    encryptedMessage.mac instanceof Uint8Array &&\n    encryptedMessage.ephemPublicKey instanceof Uint8Array\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName);\n\nexport const generateKeyPair = () => {\n  const privateKey: Uint8Array = ECCrypto.generatePrivate();\n  const publicKey: Uint8Array = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const deriveKey = async ({\n  localPrivateKey,\n  remotePublicKey\n}: DeriveKey) => {\n  const sharedKey: Uint8Array = await ECCrypto.derive(\n    processKey(localPrivateKey),\n    processKey(remotePublicKey)\n  );\n  const sharedKeyBase64 = convertBufferToBase64(sharedKey);\n\n  return { sharedKey, sharedKeyBase64 };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  const processedPrivateKey = processKey(privateKey);\n  const decryptedMessageBuffer: Uint8Array = await ECCrypto.decrypt(\n    processedPrivateKey,\n    convertToEncryptedMessage(encryptedMessage)\n  );\n  const decryptedMessage = Buffer.from(decryptedMessageBuffer).toString();\n  const parsedMessage = safeParseJSON(decryptedMessage);\n\n  return parsedMessage;\n};\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\"\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  const { data } = await Http.get(`/api/lnd/balance`);\n\n  dispatch({\n    type: ACTIONS.LOAD_BALANCE,\n    data: {\n      channelBalance: data.channel_balance,\n      confirmedBalance: data.confirmed_balance,\n      pendingChannelBalance: data.pending_channel_balance\n    }\n  });\n\n  return data;\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  const { data } = await Http.get(\n    \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n  );\n  const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n  dispatch({\n    type: ACTIONS.LOAD_USD_RATE,\n    data: exchangeRate\n  });\n\n  return exchangeRate;\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { transactions } = getState().wallet;\n\n  if ((transactions.page >= page && !reset) || transactions.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/transactions\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchChannels = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n  dispatch({\n    type: ACTIONS.LOAD_CHANNELS,\n    data: data.channels\n  });\n\n  return data;\n};\n\nexport const fetchPeers = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n  dispatch({\n    type: ACTIONS.LOAD_PEERS,\n    data: data.peers\n  });\n\n  return data;\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { invoices } = getState().wallet;\n\n  if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/invoices\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchPayments = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  const { payments } = getState().wallet;\n\n  if ((payments.page >= page && !reset) || payments.totalPages < page) {\n    return;\n  }\n\n  const { data } = await Http.get(\"/api/lnd/payments\", {\n    params: {\n      page,\n      itemsPerPage\n    }\n  });\n\n  dispatch({\n    type: reset ? ACTIONS.LOAD_PAYMENTS : ACTIONS.LOAD_MORE_PAYMENTS,\n    data\n  });\n\n  return data;\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n\n    return newPeer;\n  } catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    const data = await fetchChannels()(dispatch);\n\n    return data.channels;\n  } catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n};\n","import * as Common from \"shock-common\";\n\nimport * as Utils from \"../utils\";\nimport { disconnectRifleSocket, rifle } from \"../utils/WebSocket\";\n\nimport { setAuthenticated } from \"./AuthActions\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  LOAD_USER_PROFILE: \"userProfiles/profiles/load\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\",\n  UPDATE_USER_PROFILE: \"userProfiles/profiles/update\"\n};\n\nexport const updateUserProfile = (\n  publicKey: string,\n  profile: Partial<Common.User>\n) => ({\n  type: ACTIONS.UPDATE_USER_PROFILE,\n  data: {\n    publicKey,\n    profile\n  }\n});\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => async (\n  dispatch: (action: object) => void,\n  getState: () => {\n    node: { hostIP: string };\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  const { hostIP } = getState().node;\n  const [subscription, binarySub] = await Promise.all([\n    rifle({\n      host: hostIP,\n      query: `${publicKey}::Profile::on`,\n      reconnect: true\n    }),\n    rifle({\n      host: hostIP,\n      query: `${publicKey}::profileBinary::map.on`,\n      reconnect: true\n    })\n  ]);\n\n  binarySub.on(\"$shock\", (data, key: string) => {\n    if (key === \"avatar\") {\n      if (typeof data !== \"string\" && data !== null) {\n        Utils.logger.error(\n          `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n        );\n        return;\n      }\n      dispatch(\n        updateUserProfile(publicKey, {\n          avatar: data\n        })\n      );\n    } else if (key === \"header\") {\n      if (typeof data !== \"string\" && data !== null) {\n        Utils.logger.error(\n          `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n        );\n        return;\n      }\n      dispatch(\n        updateUserProfile(publicKey, {\n          header: data\n        })\n      );\n    } else {\n      Utils.logger.error(\n        `Unknown key: ${key} for user binary profile data gun RPC socket`\n      );\n    }\n  });\n\n  subscription.on(\"$shock\", profile => {\n    const { [publicKey]: existingUser } = getState().userProfiles;\n\n    if (existingUser) {\n      dispatch({\n        type: ACTIONS.UPDATE_USER_PROFILE,\n        data: { publicKey, profile }\n      });\n      return profile;\n    }\n\n    dispatch({\n      type: ACTIONS.LOAD_USER_PROFILE,\n      data: { publicKey, profile }\n    });\n  });\n\n  const onError = (err: unknown) => {\n    if (err === Common.NOT_AUTH) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    Utils.logger.error(\n      `Error inside user profile subscription ( ${publicKey} )`\n    );\n    Utils.logger.error(err);\n  };\n\n  const onNotAuth = () => {\n    dispatch(setAuthenticated(false));\n  };\n\n  binarySub.on(\"$error\", onError);\n  subscription.on(\"$error\", onError);\n  binarySub.on(Common.NOT_AUTH, onNotAuth);\n  subscription.on(Common.NOT_AUTH, onNotAuth);\n\n  return () => {\n    binarySub.off(\"*\");\n    binarySub.close();\n    subscription.off(\"*\");\n    subscription.close();\n  };\n};\n\nexport const unsubscribeUserProfile = publicKey => async () => {\n  disconnectRifleSocket(`${publicKey}::Profile::on`);\n  disconnectRifleSocket(`${publicKey}::profileBinary::map.on`);\n};\n","import Http from '../utils/Http'\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB:'content/setSeedProviderPub',\n  SET_SEED_INFO:'content/setSeedInfo',\n  ADD_PUBLISHED_CONTENT:'content/addPublishedContent',\n  ADD_UNLOCKED_CONTENT:'content/addUnlocked',\n  ADD_STREAM:'content/addStream',\n  REMOVE_STREAM:'content/removeStream',\n  ADD_AVAILABLE_TOKEN:'content/addToken',\n  REMOVE_USED_TOKEN:'content/removeToken',\n  ADD_STREAM_TOKEN:'content/addStreamToken',\n  REMOVE_STREAM_TOKEN:'content/removeStreamToken',\n};\n\nexport const setSeedProviderPub = pub => async dispatch => {\n  let value = {\n    $$__ENCRYPT__FOR:'me',\n    value:pub\n  }\n  if(!pub){\n    value = \"\"\n  }\n  await Http.post('/api/gun/put',{\n    path:'$user>seedServiceProviderPubKey',\n    value\n  })\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (seedUrl,seedToken) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0,-1) : seedUrl\n  const infoS = JSON.stringify({seedUrl:cleanUrl,seedToken})\n  await Http.post('/api/gun/put',{\n    path:'$user>seedServiceSeedData',\n    value:{\n      $$__ENCRYPT__FOR:'me',\n      value:infoS\n    }\n  })\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: {seedUrl:cleanUrl,seedToken}\n  });\n};\nexport const addPublishedContent = content => async dispatch => {\n  let toSet = content\n  if(typeof content !== 'string'){\n    toSet = JSON.stringify(content)\n  }\n  const {data} = await Http.post('/api/gun/set',{\n    path:'$user>publishedContent',\n    value:{\n      $$__ENCRYPT__FOR:'me',\n      value:toSet\n    }\n  })\n  dispatch({\n    type: ACTIONS.ADD_PUBLISHED_CONTENT,\n    data: {content,res:data}\n  });\n  return data\n};\n\nexport const unlockContent = (amt,owner,postID) => async dispatch => {\n  const {data} = await Http.post('/api/lnd/unifiedTrx',{\n    type: 'contentReveal',\n    amt,\n    to: owner,\n    memo:'',\n    feeLimit:500,\n    ackInfo:postID\n  })\n  const revealRes = JSON.parse(data.orderAck.response)\n  if(revealRes && revealRes.unlockedContents){\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type:ACTIONS.ADD_UNLOCKED_CONTENT,\n          data:{contentPath:`${owner}>posts>${postID}`,content}\n        })\n      }\n    }\n  }\n}\nexport const addStream = (seedToken, liveToken,streamUrl) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {seedToken,liveToken,streamUrl}\n  });\n};\nexport const removeStream = () => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM,\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const removeUnavailableToken = (seedUrl,userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};\nexport const removeStreamToken = (seedUrl,userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: {seedUrl,userToken}\n  });\n};","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { throttledExchangeKeyPair } from \"./EncryptionActions\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_ATTEMPTS_DONE: \"node/attemptsDone\"\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nconst wait = ms => new Promise(r => setTimeout(r, ms));\n\nconst retryOperation = (operation, delay, retries) =>\n  new Promise((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return wait(delay)\n            .then(\n              retryOperation.bind(null, operation, delay * retries, retries - 1)\n            )\n            .then(resolve)\n            .catch(reject);\n        }\n        return reject(reason);\n      });\n  });\n\nexport const fetchNodeHealth = (hostIP, retries) => async dispatch => {\n  try {\n    const { data } = await retryOperation(\n      async () => {\n        const { data } = await Http.get(`${hostIP}/healthz`);\n        if (!data) {\n          throw new Error(\n            `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n          );\n        }\n        return { data };\n      },\n      1000,\n      retries\n    );\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (\n  hostIP,\n  resetData = true,\n  retries = 0\n) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(throttledExchangeKeyPair())\n    ]);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(\n      `https://${sanitizedHostIP}`,\n      retries\n    )(dispatch);\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(\n    `http://${sanitizedHostIP}`,\n    retries\n  )(dispatch);\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/auth\",\n      {\n        alias,\n        password\n      },\n      {\n        // Unlocking can take significantly longer than other endpoints\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/wallet\",\n      {\n        alias,\n        password\n      },\n      {\n        // Creating a wallet can take longer than any other endpoints.\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const SetAttemptsDone = () => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_ATTEMPTS_DONE\n  });\n};\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </div>\n        </div>\n        <div className=\"drawer-bottom-section\" >\n          <NavLink className=\"drawer-item\"  to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n        <NavLink  to=\"/QRScanner\" onClick={close}>\n          <i\n            onClick={onClickScan}\n            className=\"icon-solid-scan\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, { Suspense, useEffect, useRef } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { batch, useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\nimport uniq from \"lodash/uniq\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\nimport { loadReceivedRequests, loadSentRequests } from \"./actions/ChatActions\";\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport \"./styles/App.css\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as Store from \"./store\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/publishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst createPostPage = React.lazy(() => import(\"./pages/Profile/createPost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/goLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst Story = React.lazy(() => import(\"./pages/Story\"));\nconst Stories = React.lazy(() => import(\"./pages/Stories\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const contacts = Store.useSelector(({ chat }) => chat.contacts);\n  const sentRequests = Store.useSelector(({ chat }) => chat.sentRequests);\n  const receivedRequests = Store.useSelector(\n    ({ chat }) => chat.receivedRequests\n  );\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  const subbedUsers = useRef(/** @type {string[]} */ ([]));\n\n  useEffect(() => {\n    if (authenticated && dispatch) {\n      dispatch(loadSentRequests());\n      dispatch(loadReceivedRequests());\n      dispatch(subscribeUserProfile(publicKey));\n    }\n  }, [authenticated, dispatch, publicKey]);\n\n  // Keep this effect separate from the one above, as having both together\n  // causes an infinite loop due to implicit/explicit dependencies.\n  useEffect(() => {\n    if (authenticated && dispatch) {\n      const contactPKs = contacts.map(c => c.pk);\n      const sentReqsPKs = sentRequests.map(r => r.pk);\n      const receivedReqsPKs = receivedRequests.map(r => r.pk);\n\n      const publicKeysToSub = uniq(\n        /** @type {string[]} */ ([\n          ...contactPKs,\n          ...sentReqsPKs,\n          ...receivedReqsPKs\n        ])\n      ).filter(pk => !subbedUsers.current.includes(pk));\n\n      publicKeysToSub.forEach(pk => {\n        subbedUsers.current.push(pk);\n      });\n\n      batch(() => {\n        publicKeysToSub.forEach(pk => {\n          dispatch(subscribeUserProfile(pk));\n        });\n      });\n    }\n\n    return () => {\n      // https://github.com/facebook/react/issues/15841#issuecomment-500133759\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const { current: currentSubbedUsers } = subbedUsers;\n\n      batch(() => {\n        currentSubbedUsers.forEach(pk => {\n          dispatch(unsubscribeUserProfile(pk));\n        });\n      });\n\n      currentSubbedUsers.splice(0, currentSubbedUsers.length);\n    };\n  }, [\n    authenticated,\n    dispatch,\n    publicKey,\n    contacts,\n    sentRequests,\n    receivedRequests\n  ]);\n\n  return (\n    <FullHeight className=\"ShockWallet\">\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:publicKey\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={createPostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey\"\n            exact\n            component={OtherUserPage}\n          />\n          <Route path=\"/story\" exact component={Story} />\n          <Route path=\"/stories\" exact component={Stories} />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n    </FullHeight>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Http from \"axios\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nHttp.defaults.timeout = 10000;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import { GUN_PROPS } from \"../utils/Gun\";\nimport Http from \"../utils/Http\";\nimport { disconnectRifleSocket, rifle } from \"../utils/WebSocket\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const loadSharedPost = (\n  postId,\n  publicKey,\n  sharerPublicKey\n) => async dispatch => {\n  const { data: post } = await Http.get(\n    `/api/gun/otheruser/${publicKey}/load/posts>${postId}`\n  );\n  dispatch(subscribeUserProfile(publicKey));\n\n  dispatch({\n    type: ACTIONS.LOAD_SHARED_POST,\n    data: {\n      ...post.data,\n      authorId: publicKey,\n      sharerId: sharerPublicKey,\n      id: postId\n    }\n  });\n};\n\nexport const subscribeUserPosts = publicKey => async (dispatch, getState) => {\n  const { hostIP } = getState().node;\n  const subscription = await rifle({\n    host: hostIP,\n    query: `${publicKey}::posts::on`\n  });\n  subscription.on(\"$shock\", posts => {\n    const postEntries = Object.entries(posts);\n    const newPosts = postEntries\n      .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n      .map(([key]) => key);\n    const deletedPosts = postEntries\n      .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n      .map(([key]) => key);\n\n    newPosts.map(async id => {\n      const { data: post } = await Http.get(\n        `/api/gun/otheruser/${publicKey}/load/posts>${id}`\n      );\n\n      dispatch({\n        type: ACTIONS.ADD_USER_POST,\n        data: {\n          ...post.data,\n          id,\n          authorId: publicKey,\n          type: \"post\"\n        }\n      });\n    });\n\n    deletedPosts.map(id =>\n      dispatch({\n        type: ACTIONS.DELETE_USER_POST,\n        data: {\n          id,\n          authorId: publicKey,\n          type: \"post\"\n        }\n      })\n    );\n  });\n  return subscription;\n};\n\nexport const subscribeSharedUserPosts = publicKey => async (\n  dispatch,\n  getState\n) => {\n  const { hostIP } = getState().node;\n  const subscription = await rifle({\n    host: hostIP,\n    query: `${publicKey}::sharedPosts::on`\n  });\n  subscription.on(\"$shock\", posts => {\n    const postEntries = Object.entries(posts);\n    const newPosts = postEntries\n      .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n      .map(([key]) => key);\n    const deletedPosts = postEntries\n      .filter(([key, value]) => value === null && !GUN_PROPS.includes(key))\n      .map(([key]) => key);\n\n    newPosts.map(async id => {\n      const { data: post } = await Http.get(\n        `/api/gun/otheruser/${publicKey}/load/sharedPosts>${id}`\n      );\n\n      dispatch({\n        type: ACTIONS.ADD_USER_POST,\n        data: {\n          ...post.data,\n          id,\n          authorId: publicKey,\n          type: \"shared\"\n        }\n      });\n\n      await loadSharedPost(id, post.data.originalAuthor, publicKey)(dispatch);\n    });\n\n    deletedPosts.map(id =>\n      dispatch({\n        type: ACTIONS.DELETE_USER_POST,\n        data: {\n          id,\n          authorId: publicKey\n        }\n      })\n    );\n  });\n  return subscription;\n};\n\nexport const subscribeFollows = () => async (dispatch, getState) => {\n  const { hostIP, publicKey } = getState().node;\n  const subscription = await rifle({\n    host: hostIP,\n    query: \"$user::follows::map.on\",\n    reconnect: true\n  });\n  console.log(\"subbing follows\");\n  //-- Subscribe to self, posts and shared posts are merged\n  //dispatch(subscribeUserProfile(publicKey))\n  dispatch(subscribeUserPosts(publicKey));\n  dispatch(subscribeSharedUserPosts(publicKey));\n\n  subscription.on(\"$shock\", async (follow, key) => {\n    if (typeof key !== \"string\") {\n      console.warn(`Invalid follow key received: ${key}`);\n      return;\n    }\n\n    if (!follow) {\n      unsubscribeUserProfile(key);\n      dispatch(removeFollow(key));\n      return;\n    }\n\n    if (typeof follow.user !== \"string\") {\n      console.warn(`Invalid follow user received (${follow.user})`);\n      return;\n    }\n\n    dispatch(addFollow(follow));\n    dispatch(subscribeUserProfile(follow.user));\n    dispatch(subscribeUserPosts(follow.user));\n    dispatch(subscribeSharedUserPosts(follow.user));\n  });\n\n  return subscription;\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({id,authorId}) => dispatch => {\n  dispatch({\n    type:ACTIONS.DELETE_USER_POST,\n    data:{\n      id,authorId\n    }\n  })\n}","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","export type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n","import * as React from \"react\";\nimport * as Common from \"shock-common\";\n\nexport function useForceUpdate(): () => void {\n  const [, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return update;\n}\n\nexport const isOnline = (lastSeen: number): boolean =>\n  Date.now() - lastSeen < Common.SET_LAST_SEEN_APP_INTERVAL * 2;\n","import * as Common from \"shock-common\";\n\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not an url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangingKeypair = null;\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(`/api/encryption/exchange`, {\n      publicKey: keyPair.publicKeyBase64,\n      deviceId\n    });\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n\nexport const throttledExchangeKeyPair = () => async dispatch => {\n  try {\n    if (!exchangingKeypair) {\n      exchangingKeypair = dispatch(exchangeKeyPair());\n    }\n\n    const result = await exchangingKeypair;\n\n    // eslint-disable-next-line require-atomic-updates\n    exchangingKeypair = null;\n\n    return result;\n  } catch (err) {\n    console.error(err);\n    exchangingKeypair = null;\n    throw err;\n  }\n};\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\nexport const setSource = source => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_SOURCE,\n    data: source\n  });\n\n  return source;\n};\n\nexport const setRate = rate => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_RATE,\n    data: rate\n  });\n\n  return rate;\n};\n","export const GUN_PROPS = [\"_\", \"#\"];\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n"],"sourceRoot":""}