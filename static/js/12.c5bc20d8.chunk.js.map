{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/Post/components/Image/index.js","utils/Cache.js","utils/Promise.js","utils/Torrents.js","common/BottomBar/index.js","common/Line/index.tsx","common/Modal/components/ModalSubmit/index.js","common/AddBtn/index.js","common/ProfileDivider/index.tsx","common/ProfileDivider/css/ProfileDivider.module.css","images/clipboard.svg","images/qrcode.svg","pages/Feed/components/SendTipModal/index.js","pages/Feed/components/ShareModal/index.js","pages/Feed/components/UnlockModal/index.js","pages/OtherUser/css/OtherUser.module.css","pages/OtherUser/components/FollowBtn/FollowBtn.module.css","pages/OtherUser/components/SendReqBtn/SendReqBtn.module.css","common/ContentWall/ContentWall.tsx","images/logo-alone-2.png","pages/Feed/components/BuyServiceModal/index.js","pages/OtherUser/components/FollowBtn/FollowBtn.tsx","pages/OtherUser/components/SendReqBtn/SendReqBtn.tsx","pages/OtherUser/index.tsx"],"names":["ModalContent","children","style","contentClass","className","classNames","ModalTitle","title","toggleModal","Utils","forceRenderTitleBar","hideXBtn","onClick","OVERLAY_STYLE","borderRadius","Modal","modalOpen","modalTitle","contentStyle","disableBackdropClose","noFullWidth","blueBtn","disableBlueBtn","onClickBlueBtn","redBtn","disableRedBtn","onClickRedBtn","error","textIfLoading","closeModal","useCallback","handleBackdropClick","modal","open","container","Loader","overlay","text","disabled","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","group","fas","Image","id","item","index","postId","tipValue","tipCounter","hideRibbon","width","disableZoom","useState","zoomed","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","clearTimeout","timer","setTimeout","contentURL","decodeURIComponent","magnetURI","replace","mainImageStyle","opacity","imgNode","alt","data-torrent","data-file-key","src","onLoad","display","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","getCachedFile","fileName","a","FileCache","_init","Promise","resolve","reject","init","then","console","log","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","length","forEach","muted","autoplay","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","file","extension","split","slice","supportedFileType","Object","entries","filter","includes","fileType","webTorrentClient","WebTorrent","isURLCompatible","url","format","toLowerCase","endsWith","attachMedia","posts","torrentMode","allowDuplicates","torrentTasks","map","post","contentItems","key","get","add","torrent","files","target","destroy","torrentElement","compatibleURL","elementSrc","getAttribute","renderTo","setAttribute","on","getBlob","err","blob","querySelector","dataset","played","reduce","torrents","BottomBar","to","activeClassName","Line","color","useMemo","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","height","borderTopStyle","borderTopWidth","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","ModalSubmit","AddBtn","icon","iconURL","undefined","nestedMode","large","relative","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","labelElement","ProfileDivider","selected","showContentBtn","gStyles","styles","unselected","module","exports","SendTipModal","tipData","toggleOpen","dispatch","useDispatch","setError","loading","setLoading","amount","setAmount","tipSuccess","setTipSuccess","onInputChange","e","submitTip","preventDefault","sendTipPost","publicKey","postID","errorMessage","message","responseError","response","data","useEffect","onSubmit","ShareModal","shareData","success","setSuccess","submitShare","sharedPostRaw","originalAuthor","shareDate","Date","now","Http","path","ok","close","UnlockModal","unlockData","unlockSuccess","setUnlockSuccess","submitUnlock","unlockContent","MEDIA_STYLE","objectFit","ContentWall","history","useHistory","React","content","setContent","subscription","rifle","query","onError","JSON","stringify","onData","produce","draft","Schema","sub","off","orderedContent","values","sort","b","timestamp","i","push","author","description","BuyServiceModal","service","buySuccess","setBuySuccess","copied","setCopied","submitBuy","servicePrice","owner","serviceID","serviceType","Number","buyService","revealRes","addAvailableToken","seedUrl","tokens","addStreamToken","copyRes","navigator","clipboard","writeText","FollowBtn","isFollowed","Store","find","f","user","changingStatus","setChangingStatus","handleFollow","res","delete","put","Error","alert","c","SendReqBtn","isInContact","handleClick","sendHandshakeRequest","Post","lazy","SharedPost","QR_IMAGE_SETTINGS","logoAlone","excavate","OtherUserPage","myGunPub","node","profileModalOpen","setProfileModalOpen","useParams","userPublicKey","selectedView","userServices","setUserServices","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","buyServiceModalData","setBuyServiceModalOpen","shareModalData","setShareModalData","isMe","subscribeFollows","unsubscribeFollows","subPosts","subSharedPosts","subscribeUserProfile","catch","msg","startsWith","toast","dark","displayName","toggleTipModal","toggleBuyServiceModal","buyData","toggleUnlockModal","toggleShareModal","copyClipboard","handleViewChange","useLayoutEffect","Common","header","ShockAvatar","greyBorder","bio","Pad","amt","insideRow","fallback","openTipModal","openUnlockModal","openShareModal","originalPostID","sharerPublicKey","sharedBy","authorId","openDeleteModal","serviceTitle","serviceDescription","serviceCondition","padding","bgColor","fgColor","size","imageSettings","ClipboardIcon","QRCodeIcon"],"mappings":"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","file":"static/js/12.c5bc20d8.chunk.js","sourcesContent":["import classNames from \"classnames\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children = null, style = {}, contentClass = \"\" }) => (\n  <div className={classNames(\"content\", contentClass)} style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import * as Utils from \"../../../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({\n  title = \"\",\n  toggleModal = Utils.EMPTY_FN,\n  forceRenderTitleBar = false,\n  hideXBtn = false\n}) =>\n  title || forceRenderTitleBar ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      {!hideXBtn && (\n        <div className=\"head-close\" onClick={toggleModal}>\n          <i className=\"fas fa-times\"></i>\n        </div>\n      )}\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","import { useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\nimport Loader from \"../../common/Loader\";\n\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\n\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = Utils.EMPTY_OBJ,\n  disableBackdropClose = false,\n  forceRenderTitleBar = false,\n  hideXBtn = false,\n  noFullWidth = false,\n  blueBtn = \"\",\n  disableBlueBtn = false,\n  onClickBlueBtn = Utils.EMPTY_FN,\n  redBtn = \"\",\n  disableRedBtn = false,\n  onClickRedBtn = Utils.EMPTY_FN,\n  contentClass = \"\",\n  error = \"\",\n  textIfLoading = \"\"\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  const handleBackdropClick = useCallback(() => {\n    if (!disableBackdropClose) {\n      toggleModal();\n    }\n  }, [disableBackdropClose, toggleModal]);\n  return (\n    <div className={classNames({ modal: true, open: modalOpen })}>\n      <div className=\"backdrop\" onClick={handleBackdropClick} />\n      <div\n        className={classNames({\n          container: true,\n          \"container-no-full-width\": noFullWidth\n        })}\n      >\n        {textIfLoading && (\n          <Loader overlay style={OVERLAY_STYLE} text={textIfLoading} />\n        )}\n\n        <ModalTitle\n          title={modalTitle}\n          toggleModal={closeModal}\n          forceRenderTitleBar={forceRenderTitleBar}\n          hideXBtn={hideXBtn}\n        />\n\n        {error && <div className={\"form-error form-error-margin\"}>{error}</div>}\n\n        <ModalContent style={contentStyle} contentClass={contentClass}>\n          {typeof children === \"string\" ? (\n            <p className=\"text-align-center\">{children}</p>\n          ) : (\n            children\n          )}\n        </ModalContent>\n\n        <div className=\"color-buttons\">\n          {blueBtn && (\n            <button\n              disabled={disableBlueBtn}\n              className={classNames(\"color-btn\", \"blue-btn\")}\n              onClick={onClickBlueBtn}\n            >\n              {blueBtn}\n            </button>\n          )}\n\n          {redBtn && (\n            <button\n              disabled={disableRedBtn}\n              className={classNames(\"color-btn\", \"red-btn\")}\n              onClick={onClickRedBtn}\n            >\n              {redBtn}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst OVERLAY_STYLE = {\n  borderRadius: \"15px\"\n};\n\nexport default Modal;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport * as Utils from \"../../utils\";\n\nimport \"./css/index.scoped.css\";\n\nconst InputGroup = ({\n  label = \"\",\n  name = \"\",\n  onChange,\n  inputAction = Utils.EMPTY_FN,\n  actionIcon = \"\",\n  value,\n  inputMode = /** @type {React.HTMLAttributes['inputMode']} */ (\"text\"),\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled = false\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.scoped.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null,\n  disableZoom = false,\n  style = /** @type {import('react').CSSProperties} */ ({})\n}) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [\n      animationTimer,\n      zoomLoaded,\n      setZoomed,\n      setZoomLoaded,\n      setPreviewVisible,\n      setAnimationTimer\n    ]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { ...style, opacity: previewVisible ? 1 : 0 };\n  if (width) {\n    mainImageStyle.width = width;\n  }\n\n  const imgNode = (\n    <>\n      <img\n        className={`image torrent-img torrent-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-torrent={item.magnetURI}\n        data-file-key={index}\n        style={mainImageStyle}\n        src={contentURL}\n      />\n      <img\n        className={`image enlarged-img enlarged-img-${postId}-${id}`}\n        alt=\"Post Media\"\n        data-file-key={index}\n        onLoad={() => {\n          setZoomLoaded(true);\n        }}\n        style={{\n          opacity: zoomed ? 1 : 0,\n          display: zoomed ? \"block\" : \"none\"\n        }}\n        src={contentURL}\n      />\n      {!hideRibbon && (\n        <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"media-container\">\n      {disableZoom ? (\n        imgNode\n      ) : (\n        <ControlledZoom\n          isZoomed={zoomed}\n          onZoomChange={handleZoomChange}\n          overlayBgColorStart=\"#16191c00\"\n          overlayBgColorEnd=\"#16191c\"\n        >\n          {imgNode}\n        </ControlledZoom>\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = true;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import WebTorrent from \"webtorrent\";\nimport { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nconst supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: true,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\", \"gif\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nconst _getFileType = file => {\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const supportedFileType = Object.entries(\n    supportedFileTypes\n  ).filter(([type, options]) => options.formats.includes(extension))[0];\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport const webTorrentClient = new WebTorrent();\n\nexport const isURLCompatible = ({ url, type = \"video/embedded\" }) => {\n  const fileType = supportedFileTypes[type];\n  const [compatibleURL] = fileType.formats.filter(format =>\n    url.toLowerCase().endsWith(`.${format.toLowerCase()}`)\n  );\n\n  return !!compatibleURL;\n};\n\nexport const attachMedia = (\n  posts = [],\n  torrentMode = true,\n  allowDuplicates = false\n) => {\n  const torrentTasks = posts\n    .map(post => {\n      const { contentItems, id } = post;\n      return Object.entries(contentItems ?? {})\n        .filter(([key, item]) => supportedFileTypes[item.type])\n        .map(([key, item]) => () =>\n          new Promise(resolve => {\n            const torrentExists = webTorrentClient.get(item.magnetURI);\n\n            if (torrentExists && !allowDuplicates) {\n              resolve(true);\n              return;\n            }\n\n            webTorrentClient.add(item.magnetURI, async torrent => {\n              // Proceed to the next torrent in queue\n              resolve(true);\n\n              const files = torrent.files.filter(file => {\n                const extension = file.name?.split(\".\")?.slice(-1)[0];\n                const supportedFileType = Object.entries(\n                  supportedFileTypes\n                ).filter(([type, options]) =>\n                  options.formats.includes(extension)\n                )[0];\n                if (supportedFileType) {\n                  const [, fileType] = supportedFileType;\n                  const matched = fileType.formats.includes(extension);\n                  return matched;\n                }\n                return false;\n              });\n\n              files.map(async file => {\n                const fileType = _getFileType(file);\n\n                if (!fileType) {\n                  return;\n                }\n\n                const fileName = `${id}-${key}-${file.name}`;\n\n                const element = fileType.element;\n                const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                const cachedFile = await getCachedFile(fileName);\n\n                if (cachedFile) {\n                  const torrent = webTorrentClient.get(item.magnetURI);\n\n                  if (torrent) {\n                    torrent.destroy();\n                  }\n\n                  renderCachedFile(cachedFile, target);\n                  return;\n                }\n\n                const torrentElements = document.querySelectorAll(target);\n                torrentElements.forEach(torrentElement => {\n                  const compatibleURL = isURLCompatible({\n                    url: item.magnetURI,\n                    type: fileType.name\n                  });\n                  const elementSrc = torrentElement.getAttribute(\"src\");\n\n                  if ((torrentMode && !elementSrc) || !compatibleURL) {\n                    file.renderTo(torrentElement, fileType.options);\n                    return;\n                  }\n\n                  const contentURL = decodeURIComponent(\n                    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n                  );\n\n                  torrentElement.setAttribute(\"src\", contentURL);\n                });\n              });\n\n              torrent.on(\"done\", () => {\n                files.map(file => {\n                  const fileType = _getFileType(file);\n                  const fileName = `${id}-${key}-${file.name}`;\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n\n                  file.getBlob(async (err, blob) => {\n                    if (err) {\n                      console.warn(err);\n                      return;\n                    }\n\n                    await saveFile(fileName, blob);\n                    const element = document.querySelector(target);\n                    if (\n                      element?.dataset.played === \"false\" &&\n                      !element?.getAttribute(\"src\")\n                    ) {\n                      const cachedFile = await getCachedFile(fileName);\n                      renderCachedFile(cachedFile, target);\n                    }\n                  });\n\n                  return file;\n                });\n              });\n            });\n          })\n        );\n    })\n    .reduce((torrents, contentItems) => [...torrents, ...contentItems], []);\n\n  runSerial(torrentTasks);\n};\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useMemo } from \"react\";\n\nexport interface LineProps {\n  color: string;\n  length: number;\n  type: \"vertical\" | \"horizontal\";\n  width: number;\n}\n\nconst Line = ({ color, length, type, width }: LineProps) => {\n  const style = useMemo<React.CSSProperties>(() => {\n    if (type === \"vertical\") {\n      return {\n        borderLeftStyle: \"solid\",\n        borderLeftWidth: `${width / 2}px`,\n        borderLeftColor: color,\n        borderRightStyle: \"solid\",\n        borderRightWidth: `${width / 2}px`,\n        borderRightColor: color,\n        height: length\n      };\n    }\n\n    if (type === \"horizontal\") {\n      return {\n        borderTopStyle: \"solid\",\n        borderTopWidth: width / 2,\n        borderTopColor: color,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: width / 2,\n        borderBottomColor: color,\n        width: length\n      };\n    }\n\n    return {};\n  }, [color, length, type, width]);\n\n  return <div style={style} />;\n};\n\nexport default Line;\n","import \"./ModalSubmit.scoped.css\";\n\nconst ModalSubmit = ({ text = \"Submit\", onClick }) => {\n  return (\n    <div className=\"submit-btn\" onClick={onClick}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default ModalSubmit;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import classNames from \"classnames\";\n\nimport * as gStyles from \"../../styles\";\nimport Line from \"../Line\";\n\nimport styles from \"./css/ProfileDivider.module.css\";\n\nexport interface ProfileDividerProps {\n  onChange(newlySelected: \"posts\" | \"services\" | \"content\"): void;\n  selected: \"posts\" | \"services\" | \"content\";\n  showContentBtn?: boolean;\n}\n\nconst ProfileDivider = ({\n  onChange,\n  selected,\n  showContentBtn\n}: ProfileDividerProps) => {\n  return (\n    <div\n      className={classNames(\n        gStyles.width100,\n        gStyles.rowCentered,\n        gStyles.spaceAround,\n        gStyles.padding12,\n        styles.container\n      )}\n    >\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"posts\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"posts\");\n        }}\n      >\n        Posts\n      </span>\n\n      <div\n        className={classNames(\n          gStyles.absolute,\n          showContentBtn && styles[\"left-line\"]\n        )}\n      >\n        <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n      </div>\n\n      <span\n        className={classNames(\n          gStyles.unselectable,\n          selected === \"services\" ? styles.selected : styles.unselected\n        )}\n        onClick={() => {\n          onChange(\"services\");\n        }}\n      >\n        Services\n      </span>\n\n      {showContentBtn && (\n        <>\n          <div className={classNames(gStyles.absolute, styles[\"right-line\"])}>\n            <Line color=\"white\" length={16} type=\"vertical\" width={2} />\n          </div>\n\n          <span\n            className={classNames(\n              gStyles.unselectable,\n              selected === \"content\" ? styles.selected : styles.unselected\n            )}\n            onClick={() => {\n              onChange(\"content\");\n            }}\n          >\n            Content\n          </span>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileDivider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileDivider_container__3ob9k\",\"selected\":\"ProfileDivider_selected__3U98y\",\"unselected\":\"ProfileDivider_unselected__1Z_qd\",\"left-line\":\"ProfileDivider_left-line__2xjlN\",\"right-line\":\"ProfileDivider_right-line__1d2KH\"};","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { sendTipPost } from \"../../../../actions/FeedActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst SendTipModal = ({ tipData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [tipSuccess, setTipSuccess] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n  }, []);\n\n  const submitTip = useCallback(\n    async e => {\n      e.preventDefault();\n      if (loading) {\n        return;\n      }\n      try {\n        setLoading(true);\n        await dispatch(\n          sendTipPost({\n            amount,\n            publicKey: tipData.publicKey,\n            postId: tipData.postID\n          })\n        );\n        setTipSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (tipData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, amount, loading, tipData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!tipData) {\n      setLoading(false);\n      setError(null);\n      setTipSuccess(false);\n    }\n  }, [tipData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!tipData}\n      modalTitle=\"Send Tip\"\n      noFullWidth\n    >\n      {tipSuccess ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post tipped successfully!</p>\n          <p className=\"tip-success-desc\"></p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitTip}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc m-1\">\n            Please specify the amount of sats you'd like to tip this user with\n            below.\n          </p>\n          <InputGroup\n            name=\"amount\"\n            onChange={onInputChange}\n            value={amount}\n            inputMode=\"decimal\"\n            small\n          />\n          <ModalSubmit text=\"SEND TIP\" onClick={submitTip} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SendTipModal;\n","import { useCallback, useEffect, useState } from \"react\";\nimport Modal from \"../../../../common/Modal\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\nimport { Http } from \"../../../../utils\";\n\nconst ShareModal = ({ shareData, toggleOpen }) => {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const submitShare = useCallback(\n    async e => {\n      e.preventDefault();\n      if(loading){\n        return\n      }\n      try {\n        setLoading(true);\n        const { postID: id, publicKey } = shareData;\n        const sharedPostRaw = {\n          originalAuthor: publicKey,\n          shareDate: Date.now()\n        };\n        const { data } = await Http.post(`/api/gun/put`, {\n          path: `$user>sharedPosts>${id}`,\n          value: sharedPostRaw\n        });\n        if (data.ok) {\n          setSuccess(true);\n        } else {\n          setError(\"Share operation failed\");\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [shareData,loading]\n  );\n\n  const close = useCallback(() => {\n    toggleOpen(null);\n  }, [toggleOpen]);\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!shareData) {\n      setLoading(false);\n      setError(null);\n      setSuccess(false);\n    }\n  }, [shareData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!shareData}\n      modalTitle=\"Share post\"\n      blueBtn={\n        (!loading && !error && !success && \"SHARE\") ||\n        ((success || error) && \"OK\")\n      }\n      disableBlueBtn={loading}\n      onClickBlueBtn={success || error ? close : submitShare}\n      hideXBtn={success}\n      noFullWidth\n    >\n      {success ? (\n        <div className=\"tip-modal-success m-1\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post shared successfully!</p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form m-1\" onSubmit={submitShare}>\n          {error ? <p className=\"form-error\">{error}</p> : null}\n          {error && <p className=\"tip-modal-desc m-1\">You can try again.</p>}\n          {loading ? <Loader text=\"Sharing...\" /> : null}\n          {!error && !loading && (\n            <p className=\"tip-modal-desc m-1\">\n              This post will be shared on your profile\n            </p>\n          )}\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default ShareModal;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { unlockContent } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst UnlockModal = ({ unlockData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [unlockSuccess, setUnlockSuccess] = useState(false);\n\n  const submitUnlock = useCallback(\n    async e => {\n      e.preventDefault();\n      if(loading){\n        return\n      }\n      try {\n        setLoading(true);\n        await unlockContent(\n          100,\n          unlockData.publicKey,\n          unlockData.postID\n        )(dispatch);\n        setUnlockSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (unlockData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch,loading, unlockData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!unlockData) {\n      setLoading(false);\n      setError(null);\n      setUnlockSuccess(false);\n    }\n  }, [unlockData]);\n\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!unlockData}\n      modalTitle=\"Unlock content\"\n    >\n      {unlockSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Content unlocked successfully!</p>\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitUnlock}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            100 sats will be sent to the owner of the post to unlock the content\n          </p>\n          <ModalSubmit text=\"UNLOCK\" onClick={submitUnlock} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default UnlockModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"OtherUser_profile-page__OhC-_\",\"profile-container\":\"OtherUser_profile-container__2oq7s\",\"profile-cover\":\"OtherUser_profile-cover__3Fq6P\",\"profile-info-container\":\"OtherUser_profile-info-container__3qnqN\",\"profile-avatar\":\"OtherUser_profile-avatar__S6INq\",\"profile-name\":\"OtherUser_profile-name__3chmC\",\"profile-desc\":\"OtherUser_profile-desc__f9Dsj\",\"config-btn\":\"OtherUser_config-btn__t33_B\",\"config-btn-icon\":\"OtherUser_config-btn-icon__1p_6O\",\"config-btn-text\":\"OtherUser_config-btn-text__1Wg_T\",\"profile-choice-container\":\"OtherUser_profile-choice-container__3-xgF\",\"profile-choice-icon\":\"OtherUser_profile-choice-icon__3iOE1\",\"profile-choice-text\":\"OtherUser_profile-choice-text__deYLl\",\"profile-qrcode\":\"OtherUser_profile-qrcode__2Ok54\",\"profile-qrcode-desc\":\"OtherUser_profile-qrcode-desc__3cp0P\",\"profile-clipboard-container\":\"OtherUser_profile-clipboard-container__1P_p8\",\"profile-clipboard-icon\":\"OtherUser_profile-clipboard-icon__1nW2U\",\"profile-clipboard-text\":\"OtherUser_profile-clipboard-text__2g4AC\",\"publish-content-form\":\"OtherUser_publish-content-form__1YdVa\",\"publish-content-title\":\"OtherUser_publish-content-title__3EsYE\",\"publish-content-icon\":\"OtherUser_publish-content-icon__291ch\",\"m-1\":\"OtherUser_m-1__1dpvP\",\"content-container\":\"OtherUser_content-container__1lOOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FollowBtn_container__2c7Cj\",\"text\":\"FollowBtn_text__1o7CS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SendReqBtn_container__2nY4E\",\"text\":\"SendReqBtn_text__2_2zC\"};","import React from \"react\";\nimport produce from \"immer\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { rifle } from \"../../utils/WebSocket\";\nimport * as Schema from \"../../schema\";\nimport * as Utils from \"../../utils\";\nimport Image from \"../../common/Post/components/Image\";\n\nimport \"./css/ContentWall.scoped.css\";\n\nexport interface ContentWallProps {\n  publicKey: string;\n}\n\nconst ContentWall: React.FC<ContentWallProps> = ({ publicKey }) => {\n  const history = useHistory();\n  const [content, setContent] = React.useState<\n    Record<string, Schema.PublicContentItem>\n  >({});\n  const [error, setError] = React.useState<string>(\"\");\n\n  React.useEffect(() => {\n    const subscription = rifle({\n      query: `${publicKey}::publishedContentPublic::map.on`,\n      onError(e) {\n        setError(JSON.stringify(e, null, 4));\n      },\n      onData(item, key) {\n        setContent(\n          produce(draft => {\n            if (Schema.isPublicContentItem(item)) {\n              draft[key] = item;\n            } else {\n              Utils.logger.warn(\n                `Invalid/incomplete public published content found for public key ...${publicKey.slice(\n                  -8\n                )}, might be due to pending replication or was deleted if null: ${JSON.stringify(\n                  item,\n                  null,\n                  4\n                )}`\n              );\n            }\n          })\n        );\n      }\n    });\n\n    return () => {\n      subscription.then(sub => sub.off());\n    };\n  }, [publicKey]);\n\n  const orderedContent = React.useMemo(() => {\n    return Object.values(content).sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  }, [content]);\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <>\n      {orderedContent.map((item, i) => {\n        return (\n          <div\n            className=\"item\"\n            key={item.id}\n            onClick={() => {\n              history.push(`/item/${item.author}/${item.id}`);\n            }}\n          >\n            {item.type === \"image/embedded\" && (\n              <div style={MEDIA_STYLE}>\n                <Image\n                  disableZoom\n                  hideRibbon\n                  id={item.id}\n                  index={i}\n                  item={item}\n                  postId={null}\n                  tipCounter={null}\n                  tipValue={null}\n                  style={MEDIA_STYLE}\n                />\n              </div>\n            )}\n\n            {item.type === \"video/embedded\" && (\n              <div className=\"video-placeholder\" style={MEDIA_STYLE}>\n                <i className=\"fas fa-video video-icon\" />\n              </div>\n            )}\n\n            <div className=\"title-and-description\">\n              <h2 className=\"title\">{item.title}</h2>\n\n              <p className=\"description\">{item.description || \" \"}</p>\n\n              <span className=\"timestamp\">\n                {Utils.formatTimestamp(item.timestamp)}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst MAX_MEDIA_LONG_EDGE = 100;\n\nconst MEDIA_STYLE: React.CSSProperties = {\n  height: MAX_MEDIA_LONG_EDGE,\n  width: MAX_MEDIA_LONG_EDGE,\n  objectFit: \"contain\"\n};\n\nexport default ContentWall;\n","export default __webpack_public_path__ + \"static/media/logo-alone-2.512c5854.png\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { buyService } from \"../../../../actions/OrdersActions\";\nimport {\n  addAvailableToken,\n  addStreamToken\n} from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.scoped.css\";\n\nconst BuyServiceModal = ({ service, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [buySuccess, setBuySuccess] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const submitBuy = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        const { servicePrice, owner, serviceID, serviceType } = service;\n        if (!owner || !serviceID || typeof Number(servicePrice) !== \"number\") {\n          console.error(\"invalid service provided\");\n          console.error(service);\n          return;\n        }\n        setLoading(true);\n        const revealRes = await buyService(\n          owner,\n          serviceID,\n          servicePrice\n        )(dispatch);\n        console.log(revealRes);\n        setBuySuccess(revealRes);\n        if (serviceType === \"torrentSeed\") {\n          addAvailableToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n        if (serviceType === \"streamSeed\") {\n          addStreamToken(revealRes.seedUrl, revealRes.tokens[0])(dispatch);\n        }\n      } catch (err) {\n        console.error(err);\n        if (service) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, service]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!service) {\n      setLoading(false);\n      setError(null);\n      setBuySuccess(null);\n    }\n  }, [buySuccess]);\n  const copyRes = useCallback(() => {\n    navigator.clipboard.writeText(JSON.stringify(buySuccess));\n    setCopied(true);\n  }, [buySuccess, setCopied]);\n  return (\n    <Modal\n      toggleModal={toggleOpen}\n      modalOpen={!!service}\n      modalTitle=\"Buy Service\"\n    >\n      {buySuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">\n            You successfully bought this service!\n          </p>\n          <p>{JSON.stringify(buySuccess)}</p>\n          <button onClick={copyRes}>COPY TO CLIPBOARD</button>\n          {copied && <p>Copied!</p>}\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitBuy}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            {service && service.servicePrice} sats will be sent to the owner of\n            the service provider\n          </p>\n          <ModalSubmit text=\"BUY\" onClick={submitBuy} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default BuyServiceModal;\n","import { useCallback, useState } from \"react\";\nimport c from \"classnames\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\n\nimport styles from \"./FollowBtn.module.css\";\n\nexport interface FollowBtnProps {\n  publicKey: string;\n}\n\nconst FollowBtn = ({ publicKey }: FollowBtnProps) => {\n  const isFollowed = !!Store.useSelector(Store.selectFollows).find(\n    f => f.user === publicKey\n  );\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleFollow = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n      setChangingStatus(true);\n\n      let res = { status: -1, data: { errorMessage: \"\" } };\n\n      if (isFollowed) {\n        res = await Utils.Http.delete(`/api/gun/follows/${publicKey}`);\n      } else {\n        res = await Utils.Http.put(`/api/gun/follows/${publicKey}`, {});\n      }\n\n      if (res.status !== 200) {\n        throw new Error(res.data.errorMessage);\n      }\n    } catch (e) {\n      if (isFollowed) {\n        alert(`Could not unfollow: ${e.message}`);\n      } else {\n        alert(`Could not follow: ${e.message}`);\n      }\n    } finally {\n      setChangingStatus(false);\n    }\n  }, [changingStatus, setChangingStatus, isFollowed, publicKey]);\n\n  return (\n    <div className={styles.container} onClick={handleFollow}>\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isFollowed ? \"Unfollow\" : \"Follow\"}\n      </p>\n    </div>\n  );\n};\n\nexport default FollowBtn;\n","import { useCallback, useState } from \"react\";\nimport c from \"classnames\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\nimport * as Utils from \"../../../../utils\";\nimport * as gStyles from \"../../../../styles\";\nimport { sendHandshakeRequest } from \"../../../../actions/ChatActions\";\n\nimport styles from \"./SendReqBtn.module.css\";\n\nexport interface SendReqBtnProps {\n  publicKey: string;\n}\n\nconst SendReqBtn = ({ publicKey }: SendReqBtnProps) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isInContact = Store.useSelector(Store.selectIsInContact(publicKey));\n\n  const [changingStatus, setChangingStatus] = useState(false);\n\n  const handleClick = useCallback(async () => {\n    try {\n      if (changingStatus) {\n        return;\n      }\n\n      if (isInContact) {\n        history.push(`/chat/${publicKey}`);\n        return;\n      }\n\n      setChangingStatus(true);\n\n      await dispatch(sendHandshakeRequest(publicKey));\n\n      setChangingStatus(false);\n    } catch (e) {\n      alert(`Could not send contact request: ${e.message}`);\n      Utils.logger.error(e);\n      setChangingStatus(false);\n    }\n  }, [changingStatus, dispatch, history, isInContact, publicKey]);\n\n  return (\n    <div className={c(styles.container)} onClick={handleClick}>\n      <p className={c(gStyles.unselectable, styles.text)}>\n        {changingStatus ? \"...\" : isInContact ? \"Message\" : \"Request Contact\"}\n      </p>\n    </div>\n  );\n};\n\nexport default SendReqBtn;\n","import React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useState\n} from \"react\";\nimport QRCode, { ImageSettings } from \"qrcode.react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport * as Common from \"shock-common\";\nimport { toast } from \"react-toastify\";\n\nimport Http from \"../../utils/Http\";\n\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\nimport ShockAvatar from \"../../common/ShockAvatar\";\nimport ProfileDivider from \"../../common/ProfileDivider\";\nimport Pad from \"../../common/Pad\";\nimport ContentWall from \"../../common/ContentWall\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport logoAlone from \"../../images/logo-alone-2.png\";\nimport SendTipModal from \"../Feed/components/SendTipModal\";\nimport UnlockModal from \"../Feed/components/UnlockModal\";\nimport BuyServiceModal from \"../Feed/components/BuyServiceModal\";\nimport ShareModal from \"../Feed/components/ShareModal\";\nimport * as Store from \"../../store\";\nimport * as gStyles from \"../../styles\";\n\nimport styles from \"./css/OtherUser.module.css\";\nimport FollowBtn from \"./components/FollowBtn\";\nimport SendReqBtn from \"./components/SendReqBtn\";\nimport {\n  subscribeFollows,\n  unsubscribeFollows,\n  subscribeUserPosts as subPosts,\n  subSharedPosts\n} from \"../../actions/FeedActions\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport * as Utils from \"../../utils\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst AVATAR_SIZE = 122;\n\nconst OtherUserPage = () => {\n  //#region controller\n  const dispatch = Store.useDispatch();\n  const history = useHistory();\n  const myGunPub = Store.useSelector(({ node }) => node.publicKey);\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n\n  const { publicKey: userPublicKey, selectedView = \"posts\" } = useParams<{\n    publicKey: string;\n    selectedView: \"posts\" | \"services\" | \"content\";\n  }>();\n  const user = Store.useSelector(Store.selectUser(userPublicKey));\n  const [userServices, setUserServices] = useState({});\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [buyServiceModalData, setBuyServiceModalOpen] = useState(null);\n  const [shareModalData, setShareModalData] = useState(null);\n  const isMe = myGunPub === user.publicKey;\n  // Effect to sub follows\n  useEffect(() => {\n    dispatch(subscribeFollows());\n    return () => {\n      dispatch(unsubscribeFollows());\n    };\n  }, [dispatch]);\n\n  useEffect(() => dispatch(subPosts(userPublicKey)), [dispatch, userPublicKey]);\n  useEffect(() => dispatch(subSharedPosts(userPublicKey)), [\n    dispatch,\n    userPublicKey\n  ]);\n\n  // effect for user profile\n  useEffect(() => {\n    const unsubscribe = dispatch(subscribeUserProfile(userPublicKey));\n\n    return unsubscribe;\n  }, [dispatch, userPublicKey]);\n\n  //effect for services\n  useEffect(() => {\n    Http.get(`/api/gun/otheruser/${userPublicKey}/load/offeredServices`)\n      .then(({ data }) => {\n        setUserServices(data.data);\n      })\n      .catch(e => {\n        const msg = Utils.extractErrorMessage(e);\n\n        if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n          Utils.logger.warn(\n            `Could not fetch this user's (...${userPublicKey.slice(\n              -8\n            )}) offered services due to a timeout error, this can be expected if the data hasn't been populated yet.`\n          );\n        } else {\n          toast.dark(\n            `There was an error fetching ${user.displayName}'s offered services: ${msg}`\n          );\n          Utils.logger.error(e);\n        }\n      });\n  }, [user.displayName, userPublicKey]);\n\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n      }\n\n      setTipModalOpen(tipData);\n    },\n    [tipModalData]\n  );\n  const toggleBuyServiceModal = useCallback(\n    buyData => {\n      if (buyServiceModalData || !buyData) {\n        setBuyServiceModalOpen(null);\n      }\n\n      setBuyServiceModalOpen(buyData);\n    },\n    [buyServiceModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const toggleShareModal = useCallback(\n    shareData => {\n      console.log(\"share click yo\");\n      console.log(shareData);\n      if (shareModalData || !shareData) {\n        setShareModalData(null);\n      }\n\n      setShareModalData(shareData);\n    },\n    [shareModalData]\n  );\n\n  const posts = Store.useSelector(\n    Store.selectPostsNewestToOldest(userPublicKey)\n  );\n\n  const copyClipboard = useCallback(() => {\n    navigator.clipboard.writeText(userPublicKey);\n  }, [userPublicKey]);\n  const renderPosts = () => {\n    if (posts.length === 0) {\n      return <Loader text=\"loading posts...\" />;\n    }\n    return posts.map(post => {\n      if (Common.isSharedPost(post)) {\n        return (\n          <Suspense fallback={<Loader />} key={post.originalPostID}>\n            <SharedPost\n              openTipModal={toggleTipModal}\n              openUnlockModal={toggleUnlockModal}\n              openShareModal={toggleShareModal}\n              postID={post.originalPostID}\n              sharerPublicKey={post.sharedBy}\n            />\n          </Suspense>\n        );\n      }\n\n      return (\n        <Suspense fallback={<Loader />} key={post.id}>\n          <Post\n            id={post.id}\n            publicKey={post.authorId}\n            openTipModal={toggleTipModal}\n            openUnlockModal={toggleUnlockModal}\n            openDeleteModal={null}\n            openShareModal={toggleShareModal}\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    return Object.entries(userServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, service]) => {\n        const buyCB = () => {\n          setBuyServiceModalOpen({\n            // @ts-expect-error\n            ...service,\n            serviceID: id,\n            owner: userPublicKey\n          });\n        };\n        return (\n          <div className={styles.post}>\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceType}</p>\n            <strong>Service Title</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceTitle}</p>\n            <strong>Service Description</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceDescription}</p>\n            <strong>Service Condition</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceCondition}</p>\n            <strong>Service Price</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.servicePrice}</p>\n            <button onClick={buyCB}>BUY SERVICE</button>\n          </div>\n        );\n      });\n  };\n  const renderContent = () => {\n    return (\n      <div className={styles[\"content-container\"]}>\n        <ContentWall publicKey={userPublicKey} />\n      </div>\n    );\n  };\n  const handleViewChange = useCallback(\n    (selected: \"posts\" | \"services\" | \"content\") => {\n      history.replace(`/otherUser/${userPublicKey}/${selected}`);\n    },\n    [history, userPublicKey]\n  );\n  //#endregion controller\n\n  useLayoutEffect(() => {\n    attachMedia(\n      posts.filter(post => !Common.isSharedPost(post)),\n      false\n    );\n  }, [posts]);\n\n  return (\n    <div className={classNames(\"page-container\", styles[\"profile-page\"])}>\n      <div className={classNames(styles[\"profile-container\"])}>\n        <div className=\"profile-cover\">\n          {user.header && (\n            <img\n              className=\"w-100\"\n              alt=\"User set profile header.\"\n              src={`data:image/jpeg;base64,${user.header}`}\n            />\n          )}\n        </div>\n\n        <div className={styles[\"profile-info-container\"]}>\n          <div\n            className={styles[\"profile-avatar\"]}\n            style={{\n              height: `${AVATAR_SIZE}px`,\n              width: `${AVATAR_SIZE}px`\n            }}\n          >\n            <ShockAvatar\n              height={AVATAR_SIZE}\n              publicKey={userPublicKey}\n              greyBorder\n            />\n          </div>\n          <div>\n            <p className={styles[\"profile-name\"]}>{user.displayName}</p>\n            <p className={styles[\"profile-desc\"]}>\n              {user.bio || \"Lightning.Page user\"}\n            </p>\n\n            <div className={gStyles.rowCentered}>\n              {!isMe && <FollowBtn publicKey={userPublicKey} />}\n\n              <Pad amt={24} insideRow />\n\n              {!isMe && <SendReqBtn publicKey={userPublicKey} />}\n            </div>\n          </div>\n        </div>\n\n        <ProfileDivider\n          onChange={handleViewChange}\n          selected={selectedView}\n          showContentBtn\n        />\n\n        <div>\n          {selectedView === \"posts\" && renderPosts()}\n          {selectedView === \"services\" && renderServices()}\n          {selectedView === \"content\" && renderContent()}\n        </div>\n\n        {/* Allow some wiggle room to avoid the QR btn covering the view selector */}\n        <Pad amt={200} />\n\n        <Modal\n          toggleModal={toggleModal}\n          modalOpen={profileModalOpen}\n          contentStyle={{\n            padding: \"40px 30px\"\n          }}\n          noFullWidth\n        >\n          <QRCode\n            bgColor=\"#23282d\"\n            fgColor=\"#64bbff\"\n            value={userPublicKey}\n            size={180}\n            className={styles[\"profile-qrcode\"]}\n            imageSettings={QR_IMAGE_SETTINGS}\n          />\n          <p className={styles[\"profile-qrcode-desc\"]}>\n            Scan this code to contact this user\n          </p>\n          <div\n            className={styles[\"profile-clipboard-container\"]}\n            onClick={copyClipboard}\n          >\n            <img\n              src={ClipboardIcon}\n              className={styles[\"profile-clipboard-icon\"]}\n              alt=\"\"\n            />\n            <p className={styles[\"profile-clipboard-text\"]}>\n              Tap to copy to clipboard\n            </p>\n          </div>\n        </Modal>\n        <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n        <UnlockModal\n          unlockData={unlockModalData}\n          toggleOpen={toggleUnlockModal}\n        />\n        <BuyServiceModal\n          service={buyServiceModalData}\n          toggleOpen={toggleBuyServiceModal}\n        />\n        <ShareModal shareData={shareModalData} toggleOpen={toggleShareModal} />\n\n        <AddBtn\n          onClick={toggleModal}\n          large\n          iconURL={QRCodeIcon}\n          icon={null}\n          label={null}\n        />\n      </div>\n\n      <BottomBar />\n    </div>\n  );\n};\n\nconst QR_IMAGE_SETTINGS: ImageSettings = {\n  src: logoAlone,\n  height: 36,\n  width: 36,\n  excavate: true\n};\n\nexport default OtherUserPage;\n"],"sourceRoot":""}