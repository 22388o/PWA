{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/BottomBar/index.js","common/AddBtn/index.js","pages/Messages/components/common.ts","pages/Messages/components/Message/index.js","pages/Messages/components/Request/index.js","pages/Messages/index.js"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","BottomBar","to","activeClassName","AddBtn","label","icon","iconURL","undefined","nestedMode","large","small","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","AVATAR_CONTAINER_STYLE","height","AVATAR_SIZE","width","Message","subtitle","time","publicKey","chatLoaded","dispatch","useDispatch","gunPublicKey","Store","node","user","subscribeMessages","subscription","subscribeChatMessages","rifleCleanup","useEffect","ShockAvatar","displayName","Request","sent","MessagesPage","addModalOpen","setAddModalOpen","sendError","setSendError","sendRequestLoading","setSendRequestLoading","setChatLoaded","contacts","chat","messages","sentRequests","receivedRequests","loadChat","a","loadChatData","subscriptions","map","entry","subscribeUserProfile","pk","unsubscribe","sendRequest","shockUser","startsWith","split","slice","length","FieldError","field","message","test","sendHandshakeRequest","console","error","sendRequestClipboard","navigator","clipboard","readText","clipboardText","alert","MainNav","solid","pageTitle","request","contact","lastMessage","body","timestamp","Date","now","DateTime","fromMillis","toRelative","Loader","text","overlay","borderRadius"],"mappings":"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","file":"static/js/20.6a9fd11a.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.scoped.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.scoped.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"head\">\n      <p className=\"head-title\">{title}</p>\n      <div className=\"head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.scoped.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"open\": modalOpen })}>\n      <div className=\"backdrop\" onClick={closeModal} />\n      <div className=\"container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import { CSSProperties } from \"react\";\n\nexport const AVATAR_SIZE = 55;\n\nexport const AVATAR_CONTAINER_STYLE: CSSProperties = {\n  height: AVATAR_SIZE + \"px\",\n  width: AVATAR_SIZE + \"px\"\n};\n","// @ts-check\nimport { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { subscribeChatMessages } from \"../../../../actions/ChatActions\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport { AVATAR_CONTAINER_STYLE, AVATAR_SIZE } from \"../common\";\nimport * as Store from \"../../../../store\";\n\nimport \"./css/index.scoped.css\";\nimport { rifleCleanup } from \"../../../../utils/WebSocket\";\n\nconst Message = ({ subtitle = \"\", time, publicKey, chatLoaded = false }) => {\n  const dispatch = useDispatch();\n  const gunPublicKey = Store.useSelector(({ node }) => node.publicKey);\n  const user = Store.useSelector(Store.selectUser(publicKey));\n\n  const subscribeMessages = useCallback(() => {\n    const subscription = dispatch(\n      subscribeChatMessages(gunPublicKey, publicKey)\n    );\n\n    return rifleCleanup(subscription);\n  }, [dispatch, gunPublicKey, publicKey]);\n\n  useEffect(() => {\n    if (chatLoaded) {\n      const unsubscribe = subscribeMessages();\n\n      return unsubscribe;\n    }\n  }, [subscribeMessages, publicKey, chatLoaded]);\n\n  return (\n    <Link to={`/chat/${publicKey}`} className=\"message-container\">\n      <div className=\"message-author-container\">\n        <div className=\"message-author-avatar\" style={AVATAR_CONTAINER_STYLE}>\n          <ShockAvatar publicKey={publicKey} height={AVATAR_SIZE} />\n        </div>\n\n        <div className=\"message-author-details\">\n          <p className=\"message-author-username\">{user.displayName}</p>\n          <p className=\"message-author-text\">{subtitle}</p>\n        </div>\n      </div>\n      <p className=\"message-timestamp\">{time}</p>\n    </Link>\n  );\n};\n\nexport default Message;\n","// @ts-check\nimport { Link } from \"react-router-dom\";\n\nimport * as Store from \"../../../../store\";\nimport ShockAvatar from \"../../../../common/ShockAvatar\";\nimport { AVATAR_CONTAINER_STYLE, AVATAR_SIZE } from \"../common\";\n\nimport \"./css/index.scoped.css\";\n\nconst Request = ({ publicKey = \"\", time, sent }) => {\n  const user = Store.useSelector(Store.selectUser(publicKey));\n\n  return (\n    <Link to={`/chat/${publicKey}`} className=\"request-container\">\n      <div className=\"request-author-container\">\n        <div className=\"request-author-avatar\" style={AVATAR_CONTAINER_STYLE}>\n          <ShockAvatar publicKey={publicKey} height={AVATAR_SIZE} />\n        </div>\n        <div className=\"request-author-details\">\n          <p className=\"request-author-username\">\n            {sent ? \"Sent Request\" : \"Received Request\"} - {user.displayName}\n          </p>\n          <p className=\"request-author-text\">Request pending acceptance...</p>\n        </div>\n      </div>\n      <p className=\"request-timestamp\">{time}</p>\n    </Link>\n  );\n};\n\nexport default Request;\n","// @ts-check\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { DateTime } from \"luxon\";\n\nimport { loadChatData, sendHandshakeRequest } from \"../../actions/ChatActions\";\nimport { subscribeUserProfile } from \"../../actions/UserProfilesActions\";\nimport BottomBar from \"../../common/BottomBar\";\nimport Message from \"./components/Message\";\nimport Request from \"./components/Request\";\nimport MainNav from \"../../common/MainNav\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Loader from \"../../common/Loader\";\nimport FieldError from \"../../utils/FieldError\";\nimport \"./css/index.scoped.css\";\nimport Modal from \"../../common/Modal\";\nimport * as Store from \"../../store\";\n\nconst MessagesPage = () => {\n  const dispatch = useDispatch();\n  const [addModalOpen, setAddModalOpen] = useState(false);\n  const [sendError, setSendError] = useState(\"\");\n  const [sendRequestLoading, setSendRequestLoading] = useState(false);\n  const [chatLoaded, setChatLoaded] = useState(false);\n  const contacts = Store.useSelector(({ chat }) => chat.contacts);\n  const messages = Store.useSelector(({ chat }) => chat.messages);\n  const sentRequests = Store.useSelector(({ chat }) => chat.sentRequests);\n  const receivedRequests = Store.useSelector(\n    ({ chat }) => chat.receivedRequests\n  );\n\n  const loadChat = useCallback(async () => {\n    await dispatch(loadChatData());\n    setChatLoaded(true);\n  }, [dispatch]);\n\n  useEffect(() => {\n    loadChat();\n  }, [loadChat]);\n\n  useEffect(() => {\n    const subscriptions = [\n      ...contacts,\n      ...sentRequests,\n      ...receivedRequests\n    ].map(entry => dispatch(subscribeUserProfile(entry.pk)));\n\n    return () => {\n      // @ts-ignore\n      subscriptions.map(unsubscribe => unsubscribe());\n    };\n  }, [contacts, sentRequests, receivedRequests, dispatch]);\n\n  const toggleModal = useCallback(() => {\n    setAddModalOpen(!addModalOpen);\n  }, [addModalOpen]);\n\n  const sanitizePublicKey = publicKey => {\n    if (publicKey.startsWith(\"http\")) {\n      const parts = publicKey.split(\"/\");\n      return parts.slice(-1)[0];\n    }\n\n    return publicKey;\n  };\n\n  const sendRequest = useCallback(\n    async shockUser => {\n      try {\n        setSendError(null);\n        setSendRequestLoading(true);\n        const pk = sanitizePublicKey(shockUser);\n\n        if (!pk?.length) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Please specify a public key\"\n          });\n        }\n\n        if (!/^[0-9A-Za-z\\-_.+/]+[=]{0,3}/.test(pk)) {\n          throw new FieldError({\n            field: \"publicKey\",\n            message: \"Invalid public key format specified\"\n          });\n        }\n\n        await dispatch(sendHandshakeRequest(shockUser));\n\n        setAddModalOpen(false);\n        return;\n      } catch (err) {\n        if (err instanceof FieldError) {\n          setSendError(err.message);\n          return;\n        }\n\n        console.error(err);\n        setSendError(\"An unknown error has occurred\");\n      } finally {\n        setSendRequestLoading(false);\n      }\n    },\n    [dispatch]\n  );\n\n  const sendRequestClipboard = useCallback(async () => {\n    try {\n      const clipboardText = await navigator.clipboard.readText();\n      return sendRequest(clipboardText);\n    } catch (e) {\n      alert(e.message);\n    }\n  }, [sendRequest]);\n\n  return (\n    <div className=\"page-container messages-page\">\n      <MainNav solid pageTitle=\"MESSAGES\" />\n      <div className=\"messages-container\">\n        <div className=\"message-list-container\">\n          {sentRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Sent Requests</p>\n          ) : null}\n          {sentRequests.map(request => (\n            <Request\n              publicKey={request.pk}\n              sent\n              key={request.pk}\n              time={undefined}\n            />\n          ))}\n          {receivedRequests.length > 0 ? (\n            <p className=\"messages-section-title\">Received Requests</p>\n          ) : null}\n          {receivedRequests.map(request => (\n            <Request\n              publicKey={request.pk}\n              key={request.pk}\n              sent={false}\n              time={undefined}\n            />\n          ))}\n          {contacts.length > 0 ? (\n            <p className=\"messages-section-title\">Messages</p>\n          ) : null}\n          {contacts.map(contact => {\n            const contactMessages = messages[contact.pk] ?? [];\n            const lastMessage = contactMessages[0] ?? {\n              body: \"Unable to preview last message...\",\n              timestamp: Date.now()\n            };\n\n            return (\n              <Message\n                key={contact.pk}\n                publicKey={contact.pk}\n                subtitle={lastMessage.body}\n                time={DateTime.fromMillis(lastMessage.timestamp).toRelative()}\n                chatLoaded={chatLoaded}\n              />\n            );\n          })}\n        </div>\n        <AddBtn onClick={toggleModal} label=\"REQUEST\" />\n        {/* TODO: Extract to a separate component */}\n        <Modal\n          modalTitle=\"SEND REQUEST\"\n          toggleModal={toggleModal}\n          modalOpen={addModalOpen}\n        >\n          {sendRequestLoading ? (\n            <Loader\n              text=\"Sending Request...\"\n              overlay\n              style={{\n                borderRadius: \"0 0 15px 15px\"\n              }}\n            />\n          ) : null}\n          {sendError ? (\n            <div className=\"send-request-error\">{sendError}</div>\n          ) : null}\n          <div className=\"send-request-cards\">\n            <div className=\"send-request-card\" onClick={sendRequest}>\n              <i className=\"send-request-card-icon fas fa-qrcode\" />\n              <p className=\"send-request-card-title\">SCAN QR</p>\n              <p className=\"send-request-card-desc\">\n                Scan another users QR to send a message request.\n              </p>\n            </div>\n            <div className=\"send-request-card\" onClick={sendRequestClipboard}>\n              <i className=\"send-request-card-icon fas fa-clipboard\" />\n              <p className=\"send-request-card-title\">PASTE CLIPBOARD</p>\n              <p className=\"send-request-card-desc\">\n                Paste another users Public Key to send a message request.\n              </p>\n            </div>\n          </div>\n        </Modal>\n      </div>\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default MessagesPage;\n"],"sourceRoot":""}