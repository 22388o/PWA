{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/InputGroup/index.js","common/BottomBar/index.js","common/AddBtn/index.js","common/Modal/components/ModalSubmit/index.js","images/clipboard.svg","images/qrcode.svg","pages/Feed/components/SendTipModal/index.js","pages/Feed/components/UnlockModal/index.js","pages/Feed/components/BuyServiceModal/index.js","pages/OtherUser/index.tsx"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","InputGroup","label","name","onChange","inputAction","actionIcon","value","inputMode","type","element","small","disabled","group","fas","BottomBar","to","activeClassName","AddBtn","icon","iconURL","undefined","nestedMode","large","relative","useState","optionsOpen","setOptionsOpen","toggleOptionsOpen","iconElement","useMemo","src","alt","labelElement","ModalSubmit","text","SendTipModal","tipData","toggleOpen","dispatch","useDispatch","error","setError","loading","setLoading","amount","setAmount","tipSuccess","setTipSuccess","onInputChange","e","target","submitTip","a","preventDefault","sendTipPost","publicKey","postId","postID","console","errorMessage","message","responseError","response","data","useEffect","onSubmit","overlay","UnlockModal","unlockData","unlockSuccess","setUnlockSuccess","submitUnlock","unlockContent","BuyServiceModal","service","buySuccess","setBuySuccess","copied","setCopied","submitBuy","servicePrice","owner","serviceID","serviceType","Number","buyService","revealRes","log","addAvailableToken","seedUrl","tokens","addStreamToken","copyRes","navigator","clipboard","writeText","JSON","stringify","Loader","Post","React","lazy","SharedPost","OtherUserPage","profileModalOpen","setProfileModalOpen","hostIP","useSelector","node","userProfiles","feed","follows","userPublicKey","useParams","userPosts","setUserPosts","userSharedPosts","setUserSharedPosts","finalPosts","setFinalPosts","userServices","setUserServices","tipModalData","setTipModalOpen","unlockModalData","setUnlockModalOpen","buyServiceModalData","setBuyServiceModalOpen","selectedView","setSelectedView","subscribeUserPosts","query","rifleSocketExists","rifle","host","reconnect","on","posts","postEntries","Object","entries","newPosts","filter","key","GUN_PROPS","includes","map","proms","id","Http","get","post","authorId","Promise","allSettled","postsAlmostReady","postsReady","maybeok","status","res","subscribeSharedPosts","socketExists","shared","originalAuthor","originalPost","disconnectRifleSocket","subscribeUserProfile","unsubscribeUserProfile","final","sort","b","date","unSubProfiles","pub","forEach","unSub","then","userProfile","avatar","processedDisplayName","processDisplayName","displayName","toggleTipModal","toggleBuyServiceModal","buyData","toggleUnlockModal","copyClipboard","backgroundImage","bio","index","profile","originalPublicKey","originalProfile","fallback","originalPostProfile","sharedTimestamp","shareDate","sharerProfile","postPublicKey","openTipModal","openUnlockModal","isOnlineNode","timestamp","contentItems","username","user","tipCounter","tipValue","serviceTitle","serviceDescription","serviceCondition","padding","bgColor","fgColor","size","ClipboardIcon","QRCodeIcon","backgroundColor"],"mappings":"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","file":"static/js/14.c860a1d6.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"modal-content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"modal-head\">\n      <p className=\"modal-head-title\">{title}</p>\n      <div className=\"modal-head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"modal-open\": modalOpen })}>\n      <div className=\"modal-backdrop\" onClick={closeModal} />\n      <div className=\"modal-container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst InputGroup = ({\n  label,\n  name,\n  onChange,\n  inputAction,\n  actionIcon,\n  value,\n  inputMode = \"text\",\n  type = \"text\",\n  element = \"input\",\n  small = false,\n  disabled\n}) => {\n  return (\n    <div\n      className={classNames({\n        group: true,\n        \"group-disabled\": disabled,\n        \"group-small\": small\n      })}\n    >\n      {label ? <p className=\"group-label\">{label}</p> : null}\n      <div\n        className={classNames({\n          \"group-input-container\": true,\n          \"group-input-textarea-container\": element === \"textarea\"\n        })}\n      >\n        {element === \"textarea\" ? (\n          <textarea\n            className=\"group-input group-input-textarea\"\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        ) : (\n          <input\n            className=\"group-input\"\n            type={type}\n            name={name}\n            onChange={onChange}\n            inputMode={inputMode}\n            value={value}\n            disabled={disabled}\n          />\n        )}\n        {inputAction && actionIcon ? (\n          <div className=\"group-input-action\" onClick={inputAction}>\n            <i\n              className={classNames({\n                \"group-input-action-icon\": true,\n                fas: true,\n                [actionIcon]: true\n              })}\n              onClick={inputAction}\n            ></i>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import { NavLink } from \"react-router-dom\";\n\nconst BottomBar = () => (\n  <div className=\"bottom-nav-container\">\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/overview\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-wallet\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/chat\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-chat\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/profile\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-profile\"></i>\n    </NavLink>\n    <NavLink\n      className=\"bottom-nav-btn\"\n      to=\"/feed\"\n      activeClassName=\"active-nav-btn\"\n    >\n      <i className=\"bottom-nav-btn-icon icon-thin-feed\"></i>\n    </NavLink>\n  </div>\n);\n\nexport default BottomBar;\n","import { useCallback, useMemo, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst AddBtn = ({\n  label = null,\n  icon = null,\n  iconURL = null,\n  onClick = undefined,\n  nestedMode = false,\n  large = false,\n  small = false,\n  relative = false,\n  children = null,\n  style = {}\n}) => {\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const toggleOptionsOpen = useCallback(() => {\n    if (nestedMode) {\n      setOptionsOpen(!optionsOpen);\n    }\n  }, [optionsOpen, nestedMode]);\n\n  const iconElement = useMemo(() => {\n    if (iconURL) {\n      return <img src={iconURL} className=\"add-btn-icon\" alt=\"\" />;\n    }\n\n    return <i className={`fas fa-${icon ?? \"plus\"}`}></i>;\n  }, [icon, iconURL]);\n\n  const labelElement = useMemo(() => {\n    if (label) {\n      return <p className=\"add-btn-label\">{label}</p>;\n    }\n\n    return null;\n  }, [label]);\n\n  return (\n    <div\n      className={classNames({\n        \"add-btn-container\": true,\n        \"add-btn-round-container\": !label,\n        \"add-btn-large\": large,\n        \"add-btn-small\": small\n      })}\n    >\n      <div\n        className={classNames({\n          \"add-btn\": true,\n          \"add-btn-round\": !label,\n          \"add-btn-extended\": !!label,\n          \"add-btn-relative\": relative,\n          \"add-btn-open\": optionsOpen,\n          \"add-btn-nested\": nestedMode\n        })}\n        onClick={onClick ?? toggleOptionsOpen}\n        style={style}\n      >\n        {iconElement}\n        {labelElement}\n      </div>\n\n      {children ? (\n        <div\n          className={classNames({\n            \"add-btn-options\": true,\n            \"add-btn-options-open\": optionsOpen\n          })}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst ModalSubmit = ({ text = \"Submit\", onClick }) => {\n  return (\n    <div className=\"modal-submit-btn\" onClick={onClick}>\n      <p className=\"modal-submit-btn-text\">{text}</p>\n    </div>\n  );\n};\n\nexport default ModalSubmit;\n","export default __webpack_public_path__ + \"static/media/clipboard.beb19e1e.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.69103c6c.svg\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { sendTipPost } from \"../../../../actions/FeedActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.css\";\n\nconst SendTipModal = ({ tipData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(0);\n  const [tipSuccess, setTipSuccess] = useState(false);\n\n  const onInputChange = useCallback(e => {\n    if (e.target.name === \"amount\") {\n      setAmount(e.target.value);\n    }\n  }, []);\n\n  const submitTip = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await dispatch(\n          sendTipPost({\n            amount,\n            publicKey: tipData.publicKey,\n            postId: tipData.postID\n          })\n        );\n        setTipSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (tipData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, amount, tipData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!tipData) {\n      setLoading(false);\n      setError(null);\n      setTipSuccess(false);\n    }\n  }, [tipData]);\n\n  return (\n    <Modal toggleModal={toggleOpen} modalOpen={!!tipData} modalTitle=\"Send Tip\">\n      {tipSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Post tipped successfully!</p>\n          <p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitTip}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            Please specify the amount of sats you'd like to tip this user with\n            below.\n          </p>\n          <InputGroup\n            name=\"amount\"\n            onChange={onInputChange}\n            value={amount}\n            inputMode=\"decimal\"\n            small\n          />\n          <ModalSubmit text=\"SEND TIP\" onClick={submitTip} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SendTipModal;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport InputGroup from \"../../../../common/InputGroup\";\nimport { unlockContent } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.css\";\n\nconst UnlockModal = ({ unlockData, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [unlockSuccess, setUnlockSuccess] = useState(false);\n\n\n  const submitUnlock = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        setLoading(true);\n        await unlockContent(100,unlockData.publicKey,unlockData.postID)(dispatch)\n        setUnlockSuccess(true);\n      } catch (err) {\n        console.error(err);\n        if (unlockData) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, unlockData]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!unlockData) {\n      setLoading(false);\n      setError(null);\n      setUnlockSuccess(false);\n    }\n  }, [unlockData]);\n\n  return (\n    <Modal toggleModal={toggleOpen} modalOpen={!!unlockData} modalTitle=\"Unlock content\">\n      {unlockSuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">Content unlocked successfully!</p>\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitUnlock}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            100 sats will be sent to the owner of the post to unlock the content\n          </p>\n          <ModalSubmit text=\"UNLOCK\" onClick={submitUnlock} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default UnlockModal;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../../../../common/Modal\";\nimport ModalSubmit from \"../../../../common/Modal/components/ModalSubmit\";\nimport { buyService } from \"../../../../actions/OrdersActions\";\nimport { addAvailableToken,addStreamToken } from \"../../../../actions/ContentActions\";\nimport Loader from \"../../../../common/Loader\";\nimport \"./css/index.css\";\n\nconst BuyServiceModal = ({ service, toggleOpen }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [buySuccess, setBuySuccess] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n\n  const submitBuy = useCallback(\n    async e => {\n      e.preventDefault();\n      try {\n        const {servicePrice,owner,serviceID,serviceType} = service\n        if(!owner || !serviceID || typeof Number(servicePrice) !== 'number'){\n          console.error(\"invalid service provided\")\n          console.error(service)\n          return\n        }\n        setLoading(true);\n        const revealRes = await buyService(owner,serviceID,servicePrice)(dispatch)\n        console.log(revealRes)\n        setBuySuccess(revealRes);\n        if(serviceType === 'torrentSeed'){\n          addAvailableToken(revealRes.seedUrl,revealRes.tokens[0])(dispatch)\n        }\n        if(serviceType === 'streamSeed'){\n          addStreamToken(revealRes.seedUrl,revealRes.tokens[0])(dispatch)\n        }\n      } catch (err) {\n        console.error(err);\n        if (service) {\n          const errorMessage = err.message;\n          const responseError = err.response?.data?.errorMessage;\n          setError(responseError ?? errorMessage);\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [dispatch, service]\n  );\n\n  // Reset the modal's state\n  useEffect(() => {\n    if (!service) {\n      setLoading(false);\n      setError(null);\n      setBuySuccess(null);\n    }\n  }, [buySuccess]);\n  const copyRes = useCallback(() => {\n    navigator.clipboard.writeText(JSON.stringify(buySuccess));\n    setCopied(true)\n  }, [buySuccess,setCopied]);\n  return (\n    <Modal toggleModal={toggleOpen} modalOpen={!!service} modalTitle=\"Buy Service\">\n      {buySuccess ? (\n        <div className=\"tip-modal-success\">\n          <i className=\"tip-success-icon fas fa-check-circle\"></i>\n          <p className=\"tip-success-title\">You successfully bought this service!</p>\n          <p>{JSON.stringify(buySuccess)}</p>\n          <button onClick={copyRes}>COPY TO CLIPBOARD</button>\n          {copied && <p>Copied!</p>}\n          {/*<p className=\"tip-success-desc\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sunt\n            ratione repudiandae voluptates debitis esse ea ut molestiae\n            praesentium possimus quia\n          </p>*/}\n        </div>\n      ) : (\n        <form className=\"modal-form tip-form\" onSubmit={submitBuy}>\n          {error ? <div className=\"form-error\">{error}</div> : null}\n          {loading ? <Loader overlay text=\"Sending Tip...\" /> : null}\n          <p className=\"tip-modal-desc\">\n            {service && service.servicePrice} sats will be sent to the owner of the service provider\n          </p>\n          <ModalSubmit text=\"BUY\" onClick={submitBuy} />\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default BuyServiceModal;\n","import React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport QRCode from \"qrcode.react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { GUN_PROPS } from \"../../utils/Gun\";\nimport Http from \"../../utils/Http\";\nimport { processDisplayName } from \"../../utils/String\";\n\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"../../actions/UserProfilesActions\";\nimport {\n  rifle,\n  rifleSocketExists,\n  disconnectRifleSocket\n} from \"../../utils/WebSocket\";\n\nimport BottomBar from \"../../common/BottomBar\";\nimport AddBtn from \"../../common/AddBtn\";\nimport Modal from \"../../common/Modal\";\nimport Loader from \"../../common/Loader\";\n\nimport ClipboardIcon from \"../../images/clipboard.svg\";\nimport QRCodeIcon from \"../../images/qrcode.svg\";\nimport \"./css/index.css\";\nimport SendTipModal from \"../Feed/components/SendTipModal\";\nimport UnlockModal from \"../Feed/components/UnlockModal\";\nimport BuyServiceModal from \"../Feed/components/BuyServiceModal\";\n\nconst Post = React.lazy(() => import(\"../../common/Post\"));\nconst SharedPost = React.lazy(() => import(\"../../common/Post/SharedPost\"));\n\nconst OtherUserPage = () => {\n  const dispatch = useDispatch();\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\n  //@ts-expect-error\n  const hostIP = useSelector(({ node }) => node.hostIP);\n  //@ts-expect-error\n  const follows = useSelector(({ feed }) => feed.follows);\n  //@ts-expect-error\n  const userProfiles = useSelector(({ userProfiles }) => userProfiles);\n  const { publicKey: userPublicKey } = useParams<{ publicKey: string }>();\n  const [userPosts, setUserPosts] = useState([]);\n  const [userSharedPosts, setUserSharedPosts] = useState([]);\n  const [finalPosts, setFinalPosts] = useState([]);\n  const [userServices, setUserServices] = useState({});\n  const [tipModalData, setTipModalOpen] = useState(null);\n  const [unlockModalData, setUnlockModalOpen] = useState(null);\n  const [buyServiceModalData, setBuyServiceModalOpen] = useState(null);\n  const [selectedView, setSelectedView] = useState(\"posts\");\n  const subscribeUserPosts = useCallback(async () => {\n    const query = `${userPublicKey}::posts::on`;\n    const socketExists = rifleSocketExists(query);\n    const subscription = await rifle({\n      host: hostIP,\n      query,\n      publicKey: \"\",\n      reconnect: false\n    });\n    subscription.on(\"$shock\", async posts => {\n      console.log(posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      const proms = newPosts.map(async id => {\n        const { data: post } = await Http.get(\n          `/api/gun/otheruser/${userPublicKey}/load/posts>${id}`\n        );\n        return { ...post.data, id, authorId: userPublicKey };\n      });\n      const postsAlmostReady = await Promise.allSettled(proms);\n      const postsReady = postsAlmostReady\n        .filter(maybeok => maybeok.status === \"fulfilled\")\n        //@ts-expect-error\n        .map(res => res.value);\n      console.log(postsReady);\n      setUserPosts(postsReady);\n    });\n  }, [userPublicKey]);\n\n  const subscribeSharedPosts = useCallback(async () => {\n    const query = `${userPublicKey}::sharedPosts::on`;\n    const socketExists = rifleSocketExists(query);\n    const subscription = await rifle({\n      host: hostIP,\n      query,\n      publicKey: \"\",\n      reconnect: false\n    });\n    subscription.on(\"$shock\", async posts => {\n      console.log(posts);\n      const postEntries = Object.entries(posts);\n      const newPosts = postEntries\n        .filter(([key, value]) => value !== null && !GUN_PROPS.includes(key))\n        .map(([key]) => key);\n\n      const proms = newPosts.map(async id => {\n        const { data: shared } = await Http.get(\n          `/api/gun/otheruser/${userPublicKey}/load/sharedPosts>${id}`\n        );\n        const { data: post } = await Http.get(\n          `/api/gun/otheruser/${shared.data.originalAuthor}/load/posts>${id}`\n        );\n        return {\n          ...shared.data,\n          originalPost: { ...post.data, id },\n          authorId: userPublicKey,\n          type: \"shared\"\n        };\n      });\n      const postsAlmostReady = await Promise.allSettled(proms);\n      console.log(postsAlmostReady);\n      const postsReady = postsAlmostReady\n        .filter(maybeok => maybeok.status === \"fulfilled\")\n        // @ts-expect-error\n        .map(res => res.value);\n      console.log(postsReady);\n      setUserSharedPosts(postsReady);\n    });\n    if (!socketExists) {\n      return () => {\n        disconnectRifleSocket(query);\n      };\n    }\n  }, [userPublicKey]);\n\n  //effect for user profile\n  useEffect(() => {\n    dispatch(subscribeUserProfile(userPublicKey));\n    return () => {\n      dispatch(unsubscribeUserProfile(userPublicKey));\n    };\n  }, [userPublicKey]);\n  //effect for user posts\n  useEffect(() => {\n    subscribeUserPosts();\n  }, [subscribeUserPosts]);\n  //effect for shared posts\n  useEffect(() => {\n    subscribeSharedPosts();\n  }, [subscribeSharedPosts]);\n  //effect for merge posts and shared posts\n  useEffect(() => {\n    const final = [...userPosts, ...userSharedPosts].sort(\n      (a, b) => b.date - a.date\n    );\n    setFinalPosts(final);\n    const unSubProfiles = userSharedPosts\n      .filter(post => !userProfiles[post.originalAuthor])\n      .map(post => {\n        const pub = post.originalAuthor;\n        dispatch(subscribeUserProfile(pub));\n        return () => {\n          dispatch(unsubscribeUserProfile(pub));\n        };\n      });\n    return () => {\n      unSubProfiles.forEach(unSub => unSub());\n    };\n  }, [userPosts, userSharedPosts]);\n  //effect for services\n  useEffect(() => {\n    Http.get(`/api/gun/otheruser/${userPublicKey}/load/offeredServices`).then(\n      ({ data }) => {\n        console.log(\"SERVICES\");\n        console.log(data);\n        setUserServices(data.data);\n      }\n    );\n  }, [userPublicKey]);\n  const userProfile = userProfiles[userPublicKey];\n  console.log(userProfile);\n  const avatar =\n    userProfile?.avatar && `data:image/jpeg;base64,${userProfile?.avatar}`;\n\n  const processedDisplayName = useMemo(\n    () => processDisplayName(userPublicKey, userProfile?.displayName),\n    [userPublicKey, userProfile]\n  );\n  const toggleModal = useCallback(() => {\n    setProfileModalOpen(!profileModalOpen);\n  }, [profileModalOpen]);\n\n  const toggleTipModal = useCallback(\n    tipData => {\n      console.log(tipData);\n      if (tipModalData || !tipData) {\n        setTipModalOpen(null);\n      }\n\n      setTipModalOpen(tipData);\n    },\n    [tipModalData]\n  );\n  const toggleBuyServiceModal = useCallback(\n    buyData => {\n      console.log(buyData);\n      if (buyServiceModalData || !buyData) {\n        setBuyServiceModalOpen(null);\n      }\n\n      setBuyServiceModalOpen(buyData);\n    },\n    [buyServiceModalData]\n  );\n  const toggleUnlockModal = useCallback(\n    unlockData => {\n      console.log(unlockData);\n      if (unlockModalData || !unlockData) {\n        setUnlockModalOpen(null);\n      }\n\n      setUnlockModalOpen(unlockData);\n    },\n    [unlockModalData]\n  );\n\n  const copyClipboard = useCallback(() => {\n    navigator.clipboard.writeText(userPublicKey);\n  }, [userPublicKey]);\n  const onInputChange = useCallback(\n    e => {\n      const { value, name } = e.target;\n      switch (name) {\n        case \"selectedView\": {\n          setSelectedView(value);\n          return;\n        }\n        default:\n          return;\n      }\n    },\n    [setSelectedView]\n  );\n  const renderPosts = () => {\n    return finalPosts.map((post, index) => {\n      const profile = userProfiles[post.authorId];\n      if (post.type === \"shared\") {\n        const originalPublicKey = post.originalAuthor;\n        const originalProfile = userProfiles[originalPublicKey];\n        return (\n          <Suspense fallback={<Loader />} key={index}>\n            <SharedPost\n              originalPost={post.originalPost}\n              originalPostProfile={originalProfile}\n              sharedTimestamp={post.shareDate}\n              sharerProfile={profile}\n              postPublicKey={originalPublicKey}\n              openTipModal={toggleTipModal}\n              openUnlockModal={toggleUnlockModal}\n              // TODO: User online status handling\n              isOnlineNode\n            />\n          </Suspense>\n        );\n      }\n\n      return (\n        <Suspense fallback={<Loader />} key={index}>\n          <Post\n            id={post.id}\n            timestamp={post.date}\n            contentItems={post.contentItems}\n            avatar={`data:image/jpeg;base64,${profile?.avatar}`}\n            username={processDisplayName(profile?.user, profile?.displayName)}\n            publicKey={post.authorId}\n            openTipModal={toggleTipModal}\n            openUnlockModal={toggleUnlockModal}\n            tipCounter={0}\n            tipValue={0}\n            // TODO: User online status handling\n            isOnlineNode\n          />\n        </Suspense>\n      );\n    });\n  };\n  const renderServices = () => {\n    console.log(userServices);\n    return Object.entries(userServices)\n      .filter(([id, service]) => !!service)\n      .map(([id, service]) => {\n        const buyCB = () => {\n          setBuyServiceModalOpen({\n            //@ts-expect-error\n            ...service,\n            serviceID: id,\n            owner: userPublicKey\n          });\n        };\n        return (\n          <div className=\"post\">\n            <strong>Service ID</strong>\n            <p>{id}</p>\n            <strong>Service Tpe</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceType}</p>\n            <strong>Service Title</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceTitle}</p>\n            <strong>Service Description</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceDescription}</p>\n            <strong>Service Condition</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.serviceCondition}</p>\n            <strong>Service Price</strong>\n            {/*@ts-expect-error*/}\n            <p>{service.servicePrice}</p>\n            <button onClick={buyCB}>BUY SERVICE</button>\n          </div>\n        );\n      });\n  };\n  return (\n    <div className=\"page-container profile-page\">\n      <div className=\"profile-container\">\n        <div className=\"profile-cover\" />\n        <div className=\"profile-info-container\">\n          <div\n            className=\"profile-avatar\"\n            style={{ backgroundImage: `url(${avatar})` }}\n          />\n          <div className=\"profile-info\">\n            <p className=\"profile-name\">{processedDisplayName}</p>\n            <p className=\"profile-desc\">{userProfile?.bio || \"\"}</p>\n          </div>\n        </div>\n        <div className=\"\">\n          <select\n            value={selectedView}\n            name=\"selectedView\"\n            onChange={onInputChange}\n          >\n            <option value=\"posts\">POSTS</option>\n            <option value=\"services\">SERVICES</option>\n          </select>\n          {selectedView === \"posts\" && renderPosts()}\n          {selectedView === \"services\" && renderServices()}\n        </div>\n        <Modal\n          toggleModal={toggleModal}\n          modalOpen={profileModalOpen}\n          contentStyle={{\n            padding: \"40px 30px\"\n          }}\n        >\n          <QRCode\n            bgColor=\"#23282d\"\n            fgColor=\"#4285b9\"\n            value={userPublicKey}\n            size={180}\n            className=\"profile-qrcode\"\n          />\n          <p className=\"profile-qrcode-desc\">Scan this code to contact me</p>\n          <div className=\"profile-clipboard-container\" onClick={copyClipboard}>\n            <img\n              src={ClipboardIcon}\n              className=\"profile-clipboard-icon\"\n              alt=\"\"\n            />\n            <p className=\"profile-clipboard-text\">Tap to copy to clipboard</p>\n          </div>\n        </Modal>\n        <SendTipModal tipData={tipModalData} toggleOpen={toggleTipModal} />\n        <UnlockModal\n          unlockData={unlockModalData}\n          toggleOpen={toggleUnlockModal}\n        />\n        <BuyServiceModal\n          service={buyServiceModalData}\n          toggleOpen={toggleBuyServiceModal}\n        />\n\n        <AddBtn\n          onClick={toggleModal}\n          large\n          iconURL={QRCodeIcon}\n          style={{ backgroundColor: \"var(--yellow)\" }}\n          icon={null}\n          label={null}\n        />\n      </div>\n\n      <BottomBar />\n    </div>\n  );\n};\n\nexport default OtherUserPage;\n"],"sourceRoot":""}