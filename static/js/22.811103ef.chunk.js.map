{"version":3,"sources":["common/Modal/components/ModalContent/index.js","common/Modal/components/ModalTitle/index.js","common/Modal/index.js","common/DialogNav/index.js","utils/seed.tsx","pages/Profile/publishContent.tsx"],"names":["ModalContent","children","style","className","ModalTitle","title","toggleModal","onClick","Modal","modalOpen","modalTitle","contentStyle","closeModal","useCallback","classNames","modal","DialogNav","pageTitle","drawerVisible","goBack","window","history","back","EnrollToken","seedUrl","seedToken","a","array","Uint8Array","crypto","getRandomValues","token","Array","prototype","map","call","x","toString","slice","join","reqData","seed_token","wallet_token","fetch","method","headers","body","JSON","stringify","status","Error","RequestToken","availableTokens","seedProviderPub","serviceID","servicePrice","tokenInfo","deleteToken","availableToken","key","Object","hasOwnProperty","element","tokens","console","log","Http","post","type","amt","to","memo","feeLimit","ackInfo","data","orderAck","parse","response","PublishContentPage","dispatch","useDispatch","useHistory","Store","content","seedInfo","userProfiles","useState","error","setError","loading","setLoading","mediaPreviews","setMediaPreviews","setTitle","description","setDescription","postType","setPostType","setCreatePost","imageFile","useRef","videoFile","promptInfo","setPromptInfo","selectedFiles","setSelectedFiles","onSubmitCb","length","finalSeedUrl","formData","FormData","from","forEach","file","append","Authorization","res","json","resJson","message","err","removeUnavailableToken","torrent","magnet","firstFile","contentItem","magnetURI","width","height","addPublishedContent","published","push","errorMessage","closePrompt","submitPrompt","onSubmit","e","preventDefault","SeedServiceProvided","get","service","onDiscard","onInputChange","target","value","name","checked","onSelectedFile","files","promises","index","Promise","reader","FileReader","onload","startsWith","uri","result","readAsDataURL","allSettled","then","previews","singleRes","onSelectImageFile","current","click","onSelectVideoFile","overlay","fullScreen","text","onReset","display","flexDirection","alignItems","justifyContent","htmlFor","id","onChange","appearance","backgroundColor","color","marginLeft","placeholder","ref","accept","multiple","prev","src","controls","rows","padding"],"mappings":"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","file":"static/js/22.811103ef.chunk.js","sourcesContent":["// @ts-check\nimport \"./css/index.css\";\n\nconst ModalContent = ({ children, style }) => (\n  <div className=\"modal-content\" style={style}>\n    {children}\n  </div>\n);\n\nexport default ModalContent;\n","import React from \"react\";\nimport \"./css/index.css\";\n\nconst ModalTitle = ({ title, toggleModal }) =>\n  title ? (\n    <div className=\"modal-head\">\n      <p className=\"modal-head-title\">{title}</p>\n      <div className=\"modal-head-close\" onClick={toggleModal}>\n        <i className=\"fas fa-times\"></i>\n      </div>\n    </div>\n  ) : null;\n\nexport default ModalTitle;\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport ModalContent from \"./components/ModalContent\";\nimport ModalTitle from \"./components/ModalTitle\";\nimport \"./css/index.css\";\n\nconst Modal = ({\n  modalOpen = false,\n  toggleModal,\n  modalTitle = \"\",\n  children,\n  contentStyle = {}\n}) => {\n  const closeModal = useCallback(() => {\n    toggleModal();\n  }, [toggleModal]);\n  return (\n    <div className={classNames({ modal: true, \"modal-open\": modalOpen })}>\n      <div className=\"modal-backdrop\" onClick={closeModal} />\n      <div className=\"modal-container\">\n        <ModalTitle title={modalTitle} toggleModal={closeModal} />\n        <ModalContent style={contentStyle}>{children}</ModalContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst DialogNav = ({ pageTitle, drawerVisible }) => {\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n  return (\n    <div className=\"dialog-nav-container\">\n      <div className=\"dialog-nav-back\" onClick={goBack}>\n        <i className=\"icon icon-thin-back\"></i>\n      </div>\n      <p className=\"dialog-nav-title\">{pageTitle}</p>\n      <div\n        className={classNames({\n          \"dialog-nav-menu-btn\": true,\n          \"dialog-nav-hidden\": !drawerVisible\n        })}\n      >\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DialogNav;\n","import Http from \"./Http\";\n\n\nexport const EnrollToken = async (seedUrl,seedToken) => {\n    const array = new Uint8Array(32);\n    window.crypto.getRandomValues(array);\n    const token = Array.prototype.map.call(array, x => ('00' + x.toString(16)).slice(-2)).join('');\n    const reqData = {\n      seed_token: seedToken,\n      wallet_token: token\n    }\n    const res = await fetch(`${seedUrl}/api/enroll_token`, {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'\n    },\n      body: JSON.stringify(reqData)\n    })\n    if (res.status !== 200) {\n      throw new Error('torrentSeed service currently not available')\n    }\n    return token\n}\n\nexport const RequestToken = async ({\n  availableTokens,\n  seedUrl,\n  seedToken,\n  seedProviderPub,\n  serviceID,\n  servicePrice\n}) => {\n  let tokenInfo = null\n  let deleteToken = false\n  let availableToken = null\n  for (const key in availableTokens) {\n    if (Object.prototype.hasOwnProperty.call(availableTokens, key)) {\n      const element = availableTokens[key];\n      if(element[0]){\n        availableToken = {seedUrl:key,tokens:element}\n        break\n      }\n    }\n  }\n  console.log(seedProviderPub)\n  console.log(serviceID)\n  console.log(servicePrice)\n  if(seedUrl && seedToken){\n    console.log(\"USING SELF SEED TOKEN\")\n    const token = await EnrollToken(seedUrl,seedToken)\n    console.log(\"token\")\n    console.log(token)\n    tokenInfo = {seedUrl, tokens:[token]}\n  } else if(availableToken) {\n    console.log(\"USING AVAILABLE TOKEN\")\n    tokenInfo = availableToken\n    deleteToken = true\n  } else if(seedProviderPub && serviceID && servicePrice){\n    console.log(\"USING DEFAULT TOKEN PROVIDER\")\n    const {data,status} = await Http.post('/api/lnd/unifiedTrx',{\n      type: 'service',\n      amt: servicePrice,\n      to:seedProviderPub,\n      memo:'',\n      feeLimit:500,\n      ackInfo:serviceID\n    })\n    if(status !== 200){\n      throw new Error(\"seed token request failed\")\n    }\n    console.log(data)\n    const {orderAck} = data\n    tokenInfo = JSON.parse(orderAck.response)\n  } else {\n    throw new Error(\"provide the token data or use default seed provider\")\n  }\n  return {...tokenInfo,deleteToken}\n}","import React, {  useCallback,  useRef, useState } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport \"./css/index.css\";\n\nimport Loader from \"../../common/Loader\";\nimport DialogNav from \"../../common/DialogNav\";\nimport Http from \"../../utils/Http\";\nimport {addPublishedContent,removeUnavailableToken} from '../../actions/ContentActions'\nimport { EnrollToken, RequestToken } from \"../../utils/seed\";\nimport { useHistory } from \"react-router\";\nimport * as Store from \"../../store\";\nimport Modal from \"../../common/Modal\";\nconst PublishContentPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory()\n  const seedProviderPub = Store.useSelector(({content}) => content.seedProviderPub)\n  const {seedUrl,seedToken} = Store.useSelector(({content}) => content.seedInfo)\n  const availableTokens = Store.useSelector(({ content }) => content.availableTokens)\n  const userProfiles = Store.useSelector(({ userProfiles }) => userProfiles);\n  const [error, setError] = useState<string|null>(null);\n  const [loading, setLoading] = useState(false);\n  const [mediaPreviews,setMediaPreviews] = useState([])\n  const [title,setTitle] = useState(\"\")\n  const [description,setDescription] = useState(\"\")\n  const [postType,setPostType] = useState(\"public\")\n  const [createPost,setCreatePost] = useState(false)\n  const imageFile = useRef(null)\n  const videoFile = useRef(null)\n  const [promptInfo,setPromptInfo] = useState(null)\n\n\n  const [selectedFiles,setSelectedFiles] = useState([]) \n  \n  const onSubmitCb = useCallback(\n    async (servicePrice?,serviceID?) => {\n      console.log([title,description,selectedFiles])\n      if(selectedFiles.length === 0){\n        setError(\"no selected files\")\n        return\n      }\n      setLoading(true)\n      try{\n        \n        const {seedUrl:finalSeedUrl,tokens,deleteToken} = await RequestToken({\n          availableTokens,\n          seedProviderPub,\n          seedToken,\n          seedUrl,\n          serviceID,\n          servicePrice\n        })\n        const formData = new FormData()\n        //TODO support public/private content by requesting two tokens and doing this req twice\n        Array.from(selectedFiles).forEach(file => formData.append('files', file))\n        formData.append('info', 'extraInfo')\n        formData.append('comment', 'comment')\n        const res = await fetch(`${finalSeedUrl}/api/put_file`, {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${tokens[0]}`,\n          },\n          body: formData,\n        })\n        const resJson = await res.json()\n        console.log(resJson)\n        if(resJson.error && resJson.error.message){\n          const err = resJson.error.message\n          if(err === \"The provided token has already been used\"){\n            setError(\"An error occurred, please try again\")\n            removeUnavailableToken(finalSeedUrl,tokens[0])(dispatch)\n          } else {\n            setError(err)\n          }\n          setLoading(false)\n          return\n        }\n        const {torrent} = resJson.data\n        const {magnet} = torrent\n        const [firstFile] = mediaPreviews\n        console.log(firstFile)\n        let type = 'image/embedded'\n        if(firstFile.type === 'video'){\n          type = 'video/embedded'\n        }\n        const contentItem = {\n          type,\n          magnetURI:magnet,\n          width:0,\n          height:0\n        }\n        const published = await addPublishedContent(contentItem)(dispatch)\n        console.log(\"content publish complete\")\n        console.log(published)\n        setLoading(false)\n        if(deleteToken){\n          removeUnavailableToken(finalSeedUrl,tokens[0])(dispatch)\n        }\n        history.push(\"/profile\")\n      }catch(err){\n        console.log(err)\n        setError(err?.errorMessage ?? err?.message)\n        setLoading(false)\n      }\n\n    },\n    [title,description,selectedFiles,mediaPreviews,availableTokens,seedUrl, seedToken,history, dispatch, setError]\n  );\n\n  const closePrompt = useCallback(()=>{\n    setPromptInfo(null)\n  },[setPromptInfo])\n  const submitPrompt = useCallback(()=>{\n    const {servicePrice,serviceID} = promptInfo\n    onSubmitCb(servicePrice,serviceID)\n    setPromptInfo(null)\n  },[promptInfo,onSubmitCb,setPromptInfo])\n\n  const onSubmit = useCallback(async(e)=>{\n    e.preventDefault();\n    let availableToken = false\n    for (const key in availableTokens) {\n      if (Object.prototype.hasOwnProperty.call(availableTokens, key)) {\n        const element = availableTokens[key];\n        if(element[0]){\n          availableToken = true\n          break\n        }\n      }\n    }\n    let serviceID = \"\"\n    if(userProfiles[seedProviderPub]){\n      //@ts-expect-error\n      serviceID = userProfiles[seedProviderPub].SeedServiceProvided\n    }\n    if(availableToken || (seedUrl && seedToken)){\n      onSubmitCb()\n    } else if(serviceID && seedProviderPub) {\n      const {data:service} = await Http.get(\n        `/api/gun/otheruser/${seedProviderPub}/load/offeredServices>${serviceID}`\n      )\n      const {servicePrice} = service.data\n      console.log(service)\n      setPromptInfo({servicePrice,serviceID})\n    } else {\n      setError(\"No way found to publish content\")\n    }\n  },[availableTokens,setPromptInfo,setError,onSubmitCb])\n\n  \n  \n  const onDiscard = useCallback(\n    async e => {\n      e.preventDefault();\n      setTitle(\"\")\n      setDescription(\"\")\n      setError(null)\n      setPromptInfo(null)\n      setSelectedFiles([])\n      setMediaPreviews([])\n      \n    },\n    [setDescription, setTitle, setError,setPromptInfo,setSelectedFiles,setMediaPreviews]\n  );\n  const onInputChange = useCallback(e => {\n    const { value, name,checked } = e.target;\n    //e.preventDefault()\n    switch (name) {\n      case \"title\": {\n        setTitle(value);\n        return;\n      }\n      case \"description\": {\n        setDescription(value);\n        return;\n      }\n      case \"postType\":{\n        setPostType(value)\n        return\n      }\n      case \"createPost\":{\n        console.log(\"create post\")\n        return\n      }\n      default:\n        return;\n    }\n  }, [setTitle,setDescription,setCreatePost]);\n  const onSelectedFile = useCallback(e =>{\n    e.preventDefault()\n    \n    console.log(e.target.files)\n    setSelectedFiles(e.target.files)\n    const promises = Array.from(e.target.files).map((file,index) => {\n      console.log(\"doing file...\")\n      return new Promise(res => {\n        //@ts-ignore\n        const {type} = file\n        //@ts-ignore\n        const reader = new FileReader();\n\n        reader.onload = function (e) {\n          if(type.startsWith('image/')){\n            res({type:'image',uri:e.target.result,index})\n          }\n          if(type.startsWith('video/')){\n            res({type:'video',uri:e.target.result,index})\n          }\n        }\n        //@ts-ignore\n        reader.readAsDataURL(file);\n        \n      })\n    })\n    Promise.allSettled(promises)\n    .then(res =>{\n      const previews = []\n      res.forEach(singleRes => {\n        if(singleRes.status === 'fulfilled'){\n          previews.push(singleRes.value)\n        }\n      })\n      console.log(previews)\n      setMediaPreviews(previews)\n    })\n  },[setSelectedFiles,setMediaPreviews])\n  const onSelectImageFile = useCallback(e => {\n    e.preventDefault()\n    //imageFile.current.onChange = \n    imageFile.current.click()\n  },[imageFile])\n  const onSelectVideoFile = useCallback(e => {\n    e.preventDefault()\n    videoFile.current.click()\n  },[videoFile])\n  return (<div className=\"publish-content-form-container m-1\">\n    {loading ? (\n      <Loader overlay fullScreen text=\"Creating content...\" />\n    ) : null}\n    <DialogNav  drawerVisible={false} pageTitle=\"PUBLISH CONTENT\" />\n    \n    <form className=\"publish-content-form\" onSubmit={onSubmit} onReset={onDiscard}>\n    <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\n      <h2>Say Something<div className=\"line\"></div></h2>\n      \n    </div>\n      <div style={{display:'flex',alignItems:'center',justifyContent:'space-between'}}>\n        <div className=\"publish-content-title\">\n          <label htmlFor=\"title\" ><strong>Title</strong></label>\n          \n        </div>\n        <div>\n          <strong >Audience: <i className={`fas ${postType === 'public' ? \"fa-globe-europe\" : \"fa-credit-card\"}`}></i></strong>\n          <select name=\"postType\" id=\"postType\" onChange={onInputChange} style={{appearance:'none',backgroundColor:\"rgba(0,0,0,0)\",color:'var(--main-blue)', marginLeft:\"0.3rem\"}}>\n            <option value=\"public\" style={{backgroundColor:\"rgba(0,0,0,0)\",color:'var(--main-blue)'}}>Public</option>\n            <option value=\"private\">Paywall</option>\n          </select>\n        </div>\n      </div>\n      <input\n        type=\"text\"\n        name=\"title\"\n        placeholder=\"How I monetized my content with ShockWallet\"\n        value={title}\n        onChange={onInputChange}\n        className=\"input-field\"\n      />\n      <div className=\"publish-content-title\">\n        <label htmlFor=\"contents\"><strong>Contents</strong></label>\n      </div>\n      <div className=\"m-b-1\">\n      <input type='file' id='file' ref={imageFile} style={{display: 'none'}} accept=\"image/*\" multiple onChange={onSelectedFile}/>\n      <input type='file' id='file' ref={videoFile} style={{display: 'none'}} accept=\"video/*\" multiple onChange={onSelectedFile}/>\n      <i className=\"fas fa-images publish-content-icon\" onClick={onSelectImageFile}></i>\n      <i className=\"fas fa-video publish-content-icon\" onClick={onSelectVideoFile}></i>\n      <div >\n        {mediaPreviews.length > 0 && mediaPreviews.map(prev => {\n          if(prev.type === 'image'){\n            return <img src={prev.uri} key={prev.index.toString()} width={100} className=\"m-1\" ></img>\n          }\n          if(prev.type === 'video'){\n            return <video src={prev.uri} key={prev.index.toString()} controls width={100} className=\"m-1\"></video>\n          }\n        })}\n      </div>\n      {/*<i className=\"fas fa-music publish-content-icon\"></i>\n      <i className=\"fas fa-paperclip publish-content-icon\"></i>*/}\n      </div>\n      <div className=\"publish-content-title\">\n        <label htmlFor=\"description\"><strong>Description</strong></label>\n      </div>\n      <textarea\n        name=\"description\"\n        placeholder=\"I made a quick video to show you guys how easy it is to run your own social platform on ShockWallet, and start earning Bitcoin\"\n        rows={3}\n        value={description}\n        onChange={onInputChange}\n        className=\"input-field\"\n      />\n      <div style={{display:'flex',alignItems:'center',marginLeft:'auto'}}>\n        <label htmlFor=\"createPost\">Create Post/Teaser?</label>\n      <input type=\"checkbox\" name=\"createPost\" style={{marginLeft:\"0.2em\"}}  />\n      </div>\n      \n      {error ? <p className=\"error-container\">{error}</p> : null}\n      <div className='flex-center'>\n      <input type=\"reset\" value=\"reset\" className='shock-form-button m-1'/>\n      <input type=\"submit\" value=\"submit\" className='shock-form-button-confirm m-1' />\n      </div>\n    </form>\n    {promptInfo && <Modal modalOpen={(promptInfo && !loading)} toggleModal={closePrompt}>\n      <div style={{padding:\"1rem\"}}>\n        <p>The service from the default service provider will cost: <strong>{promptInfo.servicePrice} sats</strong></p>\n        \n        <button className='shock-form-button m-1' onClick={onDiscard}>cancel</button>\n        <button className='shock-form-button-confirm m-1' onClick={submitPrompt}>confirm</button>\n      </div>\n    </Modal>}\n  </div>)\n};\n\nexport default PublishContentPage;\n"],"sourceRoot":""}