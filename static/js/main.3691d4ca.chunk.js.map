{"version":3,"sources":["actions/OrdersActions.js","utils/JSON.ts","utils/WebSocket.js","actions/CoordinateActions.ts","common/Loader/index.js","common/Post/components/TipRibbon/index.js","actions/AuthActions.ts","common/Post/components/Stream/index.tsx","utils/String.js","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.ts","reducers/DrawerReducer.js","reducers/ContentReducer.ts","reducers/FeesReducer.ts","reducers/FeedReducer.ts","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/AppReducer.ts","reducers/settings.ts","reducers/CoordinatesReducer.ts","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/selectors/publishedContent.ts","store/selectors/chat.ts","store/selectors/feed.ts","store/selectors/coordinates.ts","store/selectors/index.ts","store/index.ts","utils/Http.js","actions/SettingsActions.ts","actions/ContentActions.ts","actions/WalletActions.js","utils/Encryption.ts","actions/FeedActions.ts","actions/NodeActions.js","schema/index.ts","actions/ChatActions.ts","common/Drawer/index.js","App.js","utils/ui.tsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js","utils/Date.ts","utils/index.ts","actions/EncryptionActions.js","utils/dialogCallback.ts","actions/AppActions.ts","actions/UserProfilesActions.ts","utils/Error.ts","utils/FieldError.ts","actions/DrawerActions.js","actions/FeesActions.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","dispatch","a","Http","post","path","value","data","ok","newID","id","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","providedServiceId","query","rifle","publicKey","reconnect","onData","serviceNode","type","serviceInfo","buyService","owner","serviceID","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","safeParseJSON","err","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","transports","rifleSubscriptions","Map","GunSocket","reconnectRifleSubscriptions","Array","from","forEach","key","unsubscribeRifleById","delete","connectSocket","host","store","socketOptions","auth","encryptionId","getState","encryption","deviceId","isInitial","connected","disconnectSocket","SocketIO","relayId","node","emit","GunOn","encryptedOn","event","subscription","get","subscriptionId","onError","on","Common","setAuthenticated","field","message","onlineListener","window","removeEventListener","addEventListener","socket","off","close","decryptEventCallback","callback","privateKey","Encryption","encryptedMessage","decryptedMessage","encryptedEmit","eventName","hostKeys","userKeys","hostId","remotePublicKey","localPrivateKey","error","stringify","encryptedData","responses","warn","decryptedResponses","unsubscribeEvent","unsubscribeRifleByQuery","resolve","debug","epubForDecryption","epubField","reject","then","$shock","token","authToken","set","rifleCleanup","subscriptions","unsubscribe","coordinateDeleted","createAction","coordinateReceived","subCoordinates","Utils","unparsed","coordinateSHA256","coordinate","fetchWalletBalance","sub","e","alert","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","TipRibbon","tipCounter","tipValue","zoomed","opacity","RESET_AUTH_INFO","SET_AUTH_STEP","SET_AUTHENTICATED","SET_AUTH_METHOD","LOGOUT","SET_RELAY_ID","status","setAuthStep","step","setAuthMethod","method","logout","Stream","item","index","postId","hideRibbon","width","playerDOM","timeout","useRef","useState","isLive","videoStyle","liveStatus","useEffect","player","videojs","current","autoplay","muted","aspectRatio","src","magnetURI","play","viewersSocketUrl","WebSocket","userToken","cursor","display","ref","preload","controls","autoPlay","initialMessagePrefix","processDisplayName","displayName","suffix","slice","INITIAL_STATE","hostIP","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","webClientPrefix","accessSecret","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","headers","common","Authorization","SET_ATTEMPTS_DONE","AUTH_ACTIONS","SET_WEBCLIENT_PREFIX","SET_ACCESS_SECRET","authenticated","authStep","defaultSteps","manual","shockWizard","shockCloud","hostingTiers","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","lightningInfo","_getUnifiedTransactionDate","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","filter","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","sort","b","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","LOAD_LIGHTNING_INFO","chat","produce","draft","handshakeAddressUpdated","match","handshakeAddress","payload","currentHandshakeAddress","receivedRequests","receivedHandshakeRequest","receivedRequest","convoReceived","convo","convos","convoToMessages","convoDeleted","messageTransmissionFailed","convoID","errorMessage","messageID","messageTransmissionRequested","body","timestamp","Date","now","messageTransmissionRetried","messageTransmissionSucceeded","handshakeRequestDeleted","receivedConvoMessage","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","streamPostId","streamContentId","streamStatusUrl","streamBroadcasterUrl","publishedContent","publicContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","tipOverlayUrl","publicContentAdded","publishedContentAdded","res","publishedContentRemoved","SET_SEED_PROVIDER_PUB","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","availableTmp","push","REMOVE_USED_TOKEN","indexOf","splice","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","posts","sharedPosts","reloadDone","feed","postDeleted","author","idx","findIndex","p","postReceived","newPost","authorId","contentItems","tags","title","tips","contentItemReceived","contentItem","postID","sharedPostDeleted","sharerPublicKey","sharedPostReceived","originalAuthor","shareDate","originalPostID","shareID","sharedBy","postTipReceived","tipAmt","tipID","find","ADD_FOLLOW","existingFollow","follow","user","REMOVE_FOLLOW","UPDATE_FOLLOW","profile","RELOAD_FEED","RESET_DEFAULT_FOLLOWS","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","updatedUserProfile","assign","NODE_ACTIONS","RESET_USER_PROFILES","REMOVE_USER_PROFILE","profiles","myServices","services","boughtServices","orders","tmp","servicesTmp","selectedService","dialogText","dialogHasCallback","app","OPEN_DIALOG","hasCallback","CLOSE_DIALOG","settings","coordinates","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","AppReducer","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","Schema","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectAllOtherUsers","createSelector","users","values","selectFollows","f","selectOwnPublishedContent","privateContent","selectConvos","selectSingleConvo","selectIsInContact","with","selectCurrentHandshakeAddress","selectReceivedRequests","req","receiverConvoID","selectAllMessages","selectContacts","_publicKeys","uniq","selectCommunication","convoIDOrRequestID","maybeConvo","maybeRequest","selectConvoMessages","selectFeedPosts","pickBy","_","selectAllPosts","selectAllSharedPosts","selectSinglePost","selectPostsNewestToOldest","sharedPostsMap","allPosts","alpha","selectSharedPost","sharer","selectAllPostsFromFollowedNewestToOldest","followedPublicKeys","filteredPosts","pick","filteredShared","allNonShared","flat","allShared","records","selectAllCoordinates","selectAllCoordinatesNewestToOldest","coords","selectSingleCoordinate","selectRoot","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","process","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","useDispatch","originalUseDispatch","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","REACT_APP_SHOCK_ENCRYPTION_ECC","decryptResponse","interceptors","request","use","localRequest","url","originalData","toUpperCase","includes","retries","exchangeKeyPair","PUBLISHED_CONTENT_ADDED","PUBLISHED_CONTENT_REMOVED","setSeedProviderPub","pub","dontBackup","setSeedInfo","cleanUrl","endsWith","infoS","addPublishedContent","isPublicContentItem","TypeError","unlockContent","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","noDialog","openDialog","addAvailableToken","removeUnavailableToken","addStreamToken","OWN_PUBLISHED_CONTENT_QUERY","subOwnPublishedContent","parsed","parseJson","isPublishedContent","unsubOwnPublishedContent","subOwnPublicContent","logger","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","FetchLightningInfo","nonEncryptedEvents","convertBase64ToBuffer","Buffer","convertBufferToBase64","processKey","isBuffer","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","FieldError","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","toLowerCase","RESET_FEED","LOAD_POSTS","ADD_USER_POST","DELETE_USER_POST","LOAD_SHARED_POST","POST_TIPPED","removeFollow","addFollow","subSinglePost","subscribeUserPosts","subPostContent","FOLLOWS_QUERY","subscribeFollows","info","unsubscribeFollows","sendTipPost","deleteUserPost","reloadFeed","reloadFollows","subSharedPosts","sharedPost","subPostTips","nTipAmount","isNaN","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","fetchNodeHealth","Error","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","connectHost","resetData","done","health","baseURL","setRelayId","setAccessSecret","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","decodedToken","jwtDecode","authorization","exp","parseError","createAlias","createWallet","setWebclientPrefix","prefix","isHandshakeReqNew","o","obj","epub","senderConvoID","isConvo","counterpartConvoID","isConvoMsg","description","isPostRaw","valMap","baseValidator","every","validator","createValidator","isFinite","val","subCurrentHandshakeAddress","subHandshakeNode","handshakeRequest","createOutgoingConversationFeed","outgoingConvoID","incomingConvoID","msgID","withEpub","messages","$$__EPUB__FOR","acceptHandshakeRequest","requestId","sendHandshakeRequest","epubP","rej","handshakeAddressP","selfEpubP","requestID","selfEpub","handshakeReqForGun","subConvos","sendMessage","messageBody","trim","length","subConvoMessages","outgoingSub","incomingSub","subs","Drawer","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","WalletSettingsPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","CreatePostPage","GoLivePage","OtherUserPage","QRScannerPage","BackupsPage","PublicContentItemPage","PrivateRoute","component","authorizedComponent","App","history","useHistory","setUpdate","setIsLive","showFloatingPlayer","setShowFloatingPlayer","interval","setInterval","clearInterval","setTimeout","clearTimeout","StreamRender","useMemo","undefined","stopStream","contentId","endUrl","urlForMagnet","obsToken","addLanguage","tokenExpired","JWTDecode","subscribeUserProfile","unsubscribeUserProfile","elementId","elmnt","document","getElementById","pos1","pos2","pos3","pos4","onpointerdown","preventDefault","clientX","clientY","onpointerup","closeDragElement","onpointermove","elementDrag","top","offsetTop","left","offsetLeft","dragElement","loadContentInfo","serviceProvider","msg","startsWith","toast","dark","seedData","JObject","loadStreamInfo","streamData","DialogClose","closeDialog","ConfirmDialog","fallback","exact","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","closeButton","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","loading","StrictMode","URL","href","origin","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","useForceUpdate","tick","setTick","forceUpdate","formatTimestamp","relativeTime","DateTime","fromMillis","toRelative","resizeImage","img","desiredLongEdge","compression","canvas","createElement","Math","round","getContext","drawImage","toDataURL","processImageFile","file","size","reader","FileReader","onload","target","result","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","image","resizedImage","normalizeURL","_url","__url","protocol","EMPTY_FN","EMPTY_ARR","EMPTY_OBJ","useBooleanState","initialState","setState","_state","safeParseJson","useLastSeen","lastSeenApp","setLastSeenApp","lastSeenNode","setLastSeenNode","appSub","lastSeen","nodeSub","memoize","exchangeSource","CancelToken","addUserKeyPair","addHostKey","getDeviceId","cancel","cancelToken","APIPublicKey","dialogCallback","callDialogCallBack","cb","addDialogCallback","executeCb","subscribedProfiles","Set","has","bio","offerSeedService","binarySub","avatar","header","extractErrorMessage","stack","openDrawer","loadFeeRates","setSource","setRate"],"mappings":"iVAEaA,EAAU,CACrBC,eAAgB,cAChBC,kBAAmB,iBACnBC,mBAAoB,sBAGTC,EAAgB,SAACC,EAAOC,GAAR,8CAAsB,WAAMC,GAAN,2BAAAC,EAAA,sEAC1BC,IAAKC,KAAK,eAAgB,CAC/CC,KAAM,wBACNC,MAAOP,IAHwC,mBACzCQ,EADyC,EACzCA,KAIAC,EAAkBD,EAAlBC,GAAQC,EAAUF,EAAdG,GACPF,EAN4C,yCAOxC,IAPwC,cAS3CE,EAAKD,EAELE,EAAMC,OAAOC,QAAQb,GAAWc,KAAI,YAAoB,IAAD,mBAAjBC,EAAiB,KAAXT,EAAW,KAC3D,OAAKA,GAGLU,QAAQC,IAAR,mBAAwBF,EAAxB,eAAmCT,IAC5BH,IAAKC,KAAK,eAAgB,CAC/BC,KAAK,yBAAD,OAA2BK,EAA3B,YAAiCK,GACrCT,MAAO,CACLY,iBAAkB,KAClBZ,YAPK,QAbsC,UAwB3Ca,QAAQR,IAAIA,GAxB+B,WA2B7B,iBAFZS,EAAgBrB,EAAhBqB,cAE6C,eAAhBA,EA3BY,wBA4B/CJ,QAAQC,IAAI,iCA5BmC,UA6BzCd,IAAKC,KAAK,eAAgB,CAC9BC,KAAK,iCACLC,MAAOI,IA/BsC,iCAuC1CA,GAvC0C,4CAAtB,uDA0ChBW,EAAgB,SAAAX,GAAE,8CAAI,WAAMT,GAAN,SAAAC,EAAA,sEACpBC,IAAKC,KAAK,eAAgB,CACrCC,KAAK,yBAAD,OAA2BK,GAC/BJ,MAAO,OAHwB,mFAAJ,uDAMlBgB,EAAsB,SAAAC,GAAiB,OAAI,SAAAtB,GACtD,IAAMuB,EAAK,iCAA6BD,EAA7B,QAwBX,OAvBAP,QAAQC,IAAIO,GACSC,YAAM,CACzBD,QACAE,UAAW,KACXC,WAAW,EAEXC,OAAO,WAAD,4BAAE,WAAOC,EAAanB,GAApB,SAAAR,EAAA,yDACNc,QAAQC,IAAIY,GACQ,OAAhBA,EAFE,uBAGJ5B,EAAS,CACP6B,KAAMpC,EAAQE,kBACdW,KAAMG,IALJ,0BASNT,EAAS,CACP6B,KAAMpC,EAAQC,eACdY,KAAM,CAAEG,KAAIqB,YAAaF,KAE3Bb,QAAQC,IAAI,oBAbN,2CAAF,qDAAC,OAoBEe,EAAa,SACxBC,EACAC,EACAC,GAHwB,8CAIrB,WAAMlC,GAAN,mBAAAC,EAAA,sEACoBC,IAAKC,KAAK,sBAAuB,CACtD0B,KAAM,UACNM,IAAKC,OAAOF,GACZG,GAAIL,EACJM,KAAM,GACNC,SAAU,IACVC,QAASP,IAPR,uBACK3B,EADL,EACKA,KAQRS,QAAQC,IAAIV,GACNmC,EAAWC,KAAKC,MAAMrC,EAAKmC,SAASG,UAC1C5C,EAAS,CACP6B,KAAMpC,EAAQG,mBACdU,KAAM,CAAEmC,WAAUT,QAAOC,eAbxB,kBAeIQ,GAfJ,2CAJqB,wD,iCCpF1B,kCAAO,IAAMI,EAAgB,SAACvC,GAC5B,IAEE,OADmBoC,KAAKC,MAAMrC,GAE9B,MAAOwC,GACP,OAAOxC,K,oSCMLyC,EAAU,CACdC,cAAc,EACdC,oBAAoB,EACpBC,OAAQC,IACRC,iBAAiB,EACjBC,WAAY,CAAC,cAGTC,EAAqB,IAAIC,IAGpBC,EAAY,KAEjBC,EAA8B,WAClCC,MAAMC,KAAKL,EAAmB1C,WAAWgD,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXxD,EAAW,KACjEyD,EAAqBD,GACrBrC,EAAMnB,GACNiD,EAAmBS,OAAOF,OAIjBG,EAAa,uCAAG,wDAAA/D,EAAA,6DAAOgE,EAAP,+BAAc,GAAIvC,EAAlB,yCACH,wCADG,mBACnBwC,EADmB,EACnBA,MACFC,EAFqB,2BAGtBpB,GAHsB,IAIzBqB,KAAM,CACJC,aAAcH,EAAMI,WAAWC,WAAWC,SAK1CC,WAAW,OAIF,QAAT,EAAAjB,SAAA,eAAWkB,YAAchD,EAdF,yCAelB,CAAE8B,cAfgB,cAkBvBA,GAAa9B,GACfiD,EAAiBnB,GAGnBA,EAAYoB,IAAS,GAAD,OAAIX,EAAJ,QAAgBE,IAE9BU,EAAUX,EAAMI,WAAWQ,KAAKD,UAEpCrB,EAAUuB,KAAK,gBAAiB,CAAEtE,GAAIoE,KAGlCG,EAAQC,EAAYzB,IAGpB,cAAc,SAAA0B,GAClB,IAEkB,EAFZC,EAAe7B,EAAmB8B,IAAIF,EAAMG,gBAE9CF,IACF,UAAAA,EAAaxD,cAAb,cAAAwD,EAAsBD,EAAMtC,SAAStC,KAAM4E,EAAMtC,SAASiB,SAI9DmB,EAAM,eAAe,SAAAE,GACnB,IAEkB,EAFZC,EAAe7B,EAAmB8B,IAAIF,EAAMG,gBAE9CF,IACF,UAAAA,EAAaG,eAAb,cAAAH,EAAuBD,EAAMtC,SAAStC,KAAM4E,EAAMtC,SAASiB,SAI/DL,EAAU+B,GAAGC,KAAiB,WAC5BtB,EAAMlE,SAASyF,aAAiB,OAGlCjC,EAAU+B,GAAG,mBAAb,uCAAiC,WAAMzC,GAAN,SAAA7C,EAAA,sDACb,aAAd6C,EAAI4C,OAAwC,YAAhB5C,EAAI6C,SAClCzB,EAAMlE,SAASyF,aAAiB,IAFH,2CAAjC,uDAMAhC,IAEAD,EAAU+B,GAAG,WAAW,WACtBxE,QAAQC,IAAI,2BACZyC,OAGImC,EAAiB,SAAjBA,IACJ5B,EAAcC,GAAM,GACpB4B,OAAOC,oBAAoB,gBAAiBF,IAG9CC,OAAOE,iBAAiB,gBAAiBH,GAtEd,kBAwEpB,CAAEpC,cAxEkB,4CAAH,qDA2EbmB,EAAmB,SAAAqB,GAC9BA,EAAOC,IAAI,KACXD,EAAOE,SAGHC,EAAoB,uCAAG,uCAAAlG,EAAA,yDAAS6C,EAAT,EAASA,IAAKxC,EAAd,EAAcA,KAAM8F,EAApB,EAAoBA,SAAUC,EAA9B,EAA8BA,aAEtDvD,IAAQwD,IAA8BxD,IACtCxC,IAASgG,IAA8BhG,IAHf,uBAKzB8F,EAAStD,EAAKxC,GALW,8BASvBwC,EATuB,iCAUMwD,IAA0B,CACvDD,aACAE,iBAAkBzD,IAZK,cAUnB0D,EAVmB,OAezBJ,EAASI,EAAkBlG,GAfF,+BAmBvBA,EAnBuB,kCAoBMgG,IAA0B,CACvDD,aACAE,iBAAkBjG,IAtBK,eAoBnBkG,EApBmB,OAyBzBJ,EAAStD,EAAK0D,GAzBW,+DAAH,sDA8BpBC,EAAgB,SAAAT,GAAM,8CAAI,WAAOU,EAAWf,EAASS,GAA3B,iCAAAnG,EAAA,sEAEN,wCAFM,mBAEtBiE,EAFsB,EAEtBA,MAFsB,EAGCA,EAAMI,WAAWC,WAAxCoC,EAHsB,EAGtBA,SAAUC,EAHY,EAGZA,SACVC,EAAW3C,EAAMI,WAAWQ,KAA5B+B,QAEJP,IAA0BI,GANA,uBAO5BV,EAAOjB,KAAK2B,EAAWf,EAASS,GAPJ,6BAWxBU,EAAkBH,EAASE,GAC3BE,EAZwB,UAYNH,EAASC,UAZH,aAYN,EAAkBR,WAErCS,GAAoBC,EAdK,wBAe5BhG,QAAQiG,MAAM,qDAAsDH,GAfxC,4CAoBDlB,EACzBW,IAA0B,CACxB7E,UAAWqF,EACXnB,QAASjD,KAAKuE,UAAUtB,KAE1B,KAzB0B,QAoBxBuB,EApBwB,OA2B9BlB,EAAOjB,KAAK2B,EAAWQ,GAAe,SAACpE,EAAKxC,GAC1C6F,EAAqB,CACnBrD,MACAxC,OACA8F,WACAC,WAAYU,OAhCc,4CAAJ,2DAqCtB9B,EAAc,SAAAe,GAAM,8CAAI,WAAOU,EAAWN,GAAlB,yBAAAnG,EAAA,sEAEJ,wCAFI,mBAEpBiE,EAFoB,EAEpBA,MACA0C,EAAa1C,EAAMI,WAAWC,WAA9BqC,SACAC,EAAW3C,EAAMI,WAAWQ,KAA5B+B,QAEJP,IAA0BI,GANF,uBAO1BV,EAAOT,GAAGmB,EAAWN,GAPK,6BAWtBW,EAXsB,UAWJH,EAASC,UAXL,aAWJ,EAAkBR,WAXd,wBAc1BtF,QAAQiG,MAAM,qDAAsDH,GAd1C,2BAmB5Bb,EAAOT,GAAGmB,EAAV,sBAAqB,8CAAAzG,EAAA,qEAAUkH,EAAV,yBAAUA,EAAV,wBACcjG,QAAQR,IACvCyG,EAAUtG,IAAV,uCAAc,WAAM+B,GAAN,SAAA3C,EAAA,yDACP2C,EADO,yCAEHA,GAFG,WAKRA,GAAa0D,IAA8B1D,GALnC,uBAMV7B,QAAQqG,KAAK,+BAAgCxE,GANnC,kBAOHA,GAPG,gCAUL0D,IAA0B,CAC/BD,WAAYU,EACZR,iBAAkB3D,KAZR,2CAAd,wDAFiB,OACbyE,EADa,OAmBnBjB,EAAQ,WAAR,cAAYiB,IAnBO,4CAnBO,4CAAJ,yDAmFbvD,EAAuB,SAAAuB,GACb/B,EAAmB8B,IAAIC,KAG1CiC,EAAiBjC,GACjB/B,EAAmBS,OAAOsB,KAIjBkC,EAA0B,SAAAhG,GACTmC,MAAMC,KAAKL,EAAmB1C,WAEtCC,KAAI,YAAyB,IAAD,mBAAtBJ,EAAsB,KAAlB0E,EAAkB,KAC9C,OAAIA,EAAa5D,QAAUA,IACzBR,QAAQC,IAAI,0BAA2BmE,GACvCrB,EAAqBrD,IACd,OAOA6G,EAAmB,SAAAjC,GAAc,OAC5C,IAAInE,SAAQ,SAAAsG,GACGf,EAAcjD,EAC3BuB,CACE,cACA,CACEM,mBAEF,WACEtE,QAAQ0G,MAAR,0DACqDpC,EADrD,MAGAmC,GAAQ,UA2CHhG,EAAQ,SAAC,GAAD,IACnBD,EADmB,EACnBA,MACAE,EAFmB,EAEnBA,UACAiG,EAHmB,EAGnBA,kBACAC,EAJmB,EAInBA,UACAjG,EALmB,EAKnBA,UACAC,EANmB,EAMnBA,OACA2D,EAPmB,EAOnBA,QAPmB,OASnB,IAAIpE,SAAQ,SAACsG,EAASI,GACpB,wCAAmBC,MAAK,YAAgB,IAAb3D,EAAY,EAAZA,MACrBxC,GACF6F,EAAwBhG,GAGbkF,EAAcjD,EAE3BuB,CACE,kBACA,CACE+C,OAAQvG,EACRwG,MAAO7D,EAAMI,WAAWQ,KAAKkD,UAC7BvG,YACAiG,oBACAC,cAEF,SAAC7E,EAAKxC,GACJ,GAAIwC,EAIF,OAHA/B,QAAQiG,MAAR,2BAAkCzF,EAAlC,MACAR,QAAQiG,MAAMlE,QACd8E,EAAO9E,GAITQ,EAAmB2E,IAAI3H,EAAK+E,eAAgB,CAC1C5D,YACAiG,oBACAC,YACAjG,YACAC,SACA2D,UACA/D,UAGFiG,EAAQ,CACNvB,IAAK,kBAAMnC,EAAqBxD,EAAK+E,6BAUpC6C,EAAe,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAsB,WAChDA,EAActH,KAAI,SAAAsE,GAAY,OAC5BA,EAAa0C,MAAK,SAAAO,GAChBA,EAAYnC,e,iCC9YlB,wIAMaoC,EAAoBC,YAE9B,uBAEUC,EAAqBD,YAG/B,wBAEUE,EAAiB,kBAAM,SAACxI,GACnCyI,IAAahB,MAAb,+BACA,IACE,IAAMtC,EAAesD,IAAY,CAC/BlH,MAAM,6BACNE,UAAW,KACXE,OAAQ,SAAC+G,EAAUC,GACjB,IAAMC,EAAaH,IAAoBC,GAEnClD,IAAoBoD,IACtB5I,EACEuI,EAAmB,CACjBK,aACAD,sBAGJE,cAAqB7I,IACG,OAAf4I,EACT5I,EACEqI,EAAkB,CAChBM,sBAIJF,IAAazB,MAAb,4DAEE4B,MAMR,OAAO,WACLzD,EAAa0C,MAAK,SAAAiB,GAChBA,EAAI7C,UAGR,MAAO8C,GACPC,MAAM,sDAAD,OAAuDD,EAAEpD,UAC9D8C,IAAazB,MAAb,wDAEE+B,O,sFCHSE,IAjDA,SAAC,GAOT,IAAD,MANJC,YAMI,MANG,aAMH,MALJC,kBAKI,aAJJC,aAII,aAHJC,eAGI,aAFJC,yBAEI,MAFgB,yBAEhB,MADJC,aACI,MADI,GACJ,EACEC,EAAM,UAAGC,qBAAH,QAAiB,QAEvBC,EAAiB7D,OAAO8D,WAAW,8BACtCC,QACGC,EAAmBV,EACrB,CAAEK,OAAQE,EAAiB,OAASF,EAAQM,aAAc,GAC1D,GACEC,EAAgBV,EAClB,CACEW,gBAAiBV,GAEnB,GACJ,OACE,sBACEW,UAAWC,IAAW,CACpB,gBAAgB,EAChB,gBAAiBd,EACjB,kBAAmBC,IAErBE,MAAK,uCACAM,GACAE,GACAR,GATP,+BAYE,sBAAKU,UAAU,oBAAf,+BACE,sBAAMA,UAAU,kCAAhB,uBACA,sBAAMA,UAAU,kCAAhB,uBACA,sBAAMA,UAAU,kCAAhB,uBACEb,EAKE,KAJF,qCACE,sBAAMa,UAAU,kCAAhB,uBACA,sBAAMA,UAAU,kCAAhB,6BAILf,EAAO,qBAAKe,UAAU,oBAAf,8BAAoCf,IAAc,U,iCChDhE,kBAYeiB,IAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,OAAzB,OAChBD,EAAW,EACT,sBAAKJ,UAAU,mBAAmBV,MAAO,CAAEgB,QAAUD,EAAa,EAAJ,GAA9D,+BACE,mBAAGL,UAAU,eAAb,6CACA,oBAAGA,UAAU,eAAb,+BACGG,EADH,IAC+B,IAAfA,EAAmB,MAAQ,aAG3C,O,gCCVN,0KACO,IAAM3K,EAAU,CACrB+K,gBAAiB,aACjBC,cAAe,gBACfC,kBAAmB,yBACnBC,gBAAiB,kBACjBC,OAAQ,cACRC,aAAc,kBAIHpF,EAAmB,SAAAqF,GAAM,MAAK,CACzCjJ,KAAMpC,EAAQiL,kBACdpK,KAAMwK,IAGKC,EAAc,SAAAC,GAAI,MAAK,CAClCnJ,KAAMpC,EAAQgL,cACdnK,KAAM0K,IAGKC,EAAgB,SAAAC,GAAM,MAAK,CACtCrJ,KAAMpC,EAAQkL,gBACdrK,KAAM4K,IAGKC,EAAS,iBAAO,CAC3BtJ,KAAMpC,EAAQmL,U,sFC+DDQ,IArFA,SAAC,GAUV,EATJ3K,GASK,IARL4K,EAQI,EARJA,KAGAhB,GAKI,EAPJiB,MAOI,EANJC,OAMI,EALJlB,UACAD,EAII,EAJJA,WACAoB,EAGI,EAHJA,WACAC,EAEI,EAFJA,MAGMC,GADF,EADJC,QAEkBC,iBAAO,OADrB,EAEwBC,oBAAS,GAFjC,mBAEGC,EAFH,KAGEC,GAHF,KAGe,CAAEN,MAAO,SACxBA,IACFM,EAAWN,MAAQA,GALjB,IAOIO,EAAeX,EAAfW,WA6BR,OA5BAC,qBAAU,WACR,IAAMC,EAASC,YAAQT,EAAUU,QAAS,CACxCC,UAAU,EACVC,OAAO,EACPC,YAAa,SAEfL,EAAOM,IAAI,CACTA,IAAKnB,EAAKoB,UACV5K,KAAM,0BAMRqK,EAAOQ,SACN,CAACrB,IACJY,qBAAU,WACR,GAAIZ,EAAKsB,iBAAkB,CACzB,IAAM3G,EAAS,IAAI4G,UAAJ,UAAiBvB,EAAKsB,iBAAtB,yBAAuDtB,EAAKwB,YAI3E,OAHA7G,EAAOD,iBAAiB,QAAQ,WAC9BhF,QAAQC,IAAI,yBAEP,WACLgF,EAAOE,YAGV,CAACmF,IAGF,qBAAKpB,UAAU,wBAAf,8BACE,sBACEA,UAAU,wBACVV,MAAO,CACLuD,OAAQ,UACRrB,MAAO,QAJX,gCAOIK,GAAyB,YAAfE,GAA4B,oFACtCF,GAAyB,YAAfE,GAA4B,yEACtCF,IAAWE,GAAc,oFAC3B,qBACEzC,MACiB,SAAfyC,EAAwB,CAAEP,MAAO,QAAW,CAAEsB,QAAS,OAAQtB,MAAO,QAF1E,8BAKE,uBACExB,UAAU,4BACV+C,IAAKtB,EACLnC,MAAOwC,EACPkB,QAAQ,OACRC,UAAQ,EACRZ,OAAK,EACLa,UAAQ,EAPV,0BAUA3B,GACA,cAAC,IAAD,CACEpB,WAAYA,EACZC,SAAUA,EACVC,QAAQ,EAHV,8B,iCC/EV,oEAAO,IAAM8C,EAAuB,oCAcvBC,EAAqB,WAAuC,IAAtC5L,EAAqC,uDAAzB,GAAI6L,EAAqB,uDAAP,GAC/D,GAAIA,EACF,OAAOA,EAGT,IAAMC,EAAS9L,EAAU+L,OAAO,GAEhC,MAAM,OAAN,OAAcD,K,yzDCjBVE,EAAgB,CACpB5G,OAAQ,KACR6G,OAAQ,KACRC,MAAO,KACP3F,UAAW,KACXvG,UAAW,KACXmM,wBAAyB,KACzBC,WAAY,KACZC,qBAAqB,EACrBC,gBAAgB,yBAChBlJ,QAAQ,KACRmJ,aAAa,MAyEAlJ,EAtEF,WAAoC,IAAnCmJ,EAAkC,uDAA1BR,EAAeS,EAAW,uCAC9C,OAAQA,EAAOrM,MACb,KAAKpC,IAAQ0O,gBACX,OAAOV,EAET,KAAKhO,IAAQ2O,YACX,IAAMV,EAASQ,EAAO5N,KACtB,OAAO,2BACF2N,GADL,IAEEP,WAGJ,KAAKjO,IAAQ4O,YACX,IAAMxH,EAASqH,EAAO5N,KACtB,OAAO,2BACF2N,GADL,IAEEpH,WAGJ,KAAKpH,IAAQ6O,uBAAyB,IAAD,EAO/BJ,EAAO5N,KALT0H,EAFiC,EAEjCA,UACA2F,EAHiC,EAGjCA,MACAlM,EAJiC,EAIjCA,UACAmM,EALiC,EAKjCA,wBACAC,EANiC,EAMjCA,WAKF,OAFA3N,IAAKqO,SAASC,QAAQC,OAAOC,cAA7B,iBAAuD1G,GAEhD,2BACFiG,GADL,IAEEjG,YACA4F,0BACAD,QACAlM,YACAoM,eAGJ,KAAKpO,IAAQkP,kBACX,OAAO,2BAAKV,GAAZ,IAAmBH,qBAAqB,IAE1C,KAAKrO,IAAQoL,aACX,OAAO,2BACFoD,GADL,IAEEpJ,QAAQqJ,EAAO5N,OAGnB,KAAKsO,IAAahE,OAChB,OAAO,2BACFqD,GADL,IAEEjG,UAAW,KACXvG,UAAW,KACXmM,wBAAyB,KACzBC,WAAY,KACZC,qBAAqB,IAGzB,KAAKrO,IAAQoP,qBACX,OAAO,2BAAIZ,GAAX,IAAkBF,gBAAgBG,EAAO5N,OAG3C,KAAKb,IAAQqP,kBACX,OAAO,2BAAIb,GAAX,IAAkBD,aAAaE,EAAO5N,OAExC,QACE,OAAO2N,IClFPR,EAAgB,CACpBsB,eAAe,EACfC,SAAU,OACVnB,WAAY,KACZhJ,QAAQ,MAGJoK,EAAe,CACnBC,OAAQ,OACRC,YAAa,OACbC,WAAY,aACZC,aAAc,cA8BDjL,EA3BF,WAAoC,IAAnC6J,EAAkC,uDAA1BR,EAAeS,EAAW,uCAC9C,OAAQA,EAAOrM,MACb,KAAKpC,IAAQiL,kBACX,OAAO,2BAAKuD,GAAZ,IAAmBc,cAAeb,EAAO5N,OAE3C,KAAKb,IAAQgL,cACX,OAAO,2BACFwD,GADL,IAEEe,SAAUd,EAAO5N,OAGrB,KAAKb,IAAQkL,gBACX,IAAMO,EAASgD,EAAO5N,KACtB,OAAO,2BACF2N,GADL,IAEEJ,WAAY3C,EACZ8D,SAAUC,EAAa/D,KAG3B,KAAKzL,IAAQmL,OACX,OAAO6C,EAET,QACE,OAAOQ,I,kCC9BPR,EAAgB,CAEpB6B,aAAc,IACdC,eAAgB,IAChBC,iBAAkB,IAClBC,sBAAuB,IACvBC,QAAS,KAETC,aAAc,CAAEC,QAAS,GAAIC,MAAO,EAAGC,WAAY,EAAGC,WAAY,GAClEC,SAAU,CAAEJ,QAAS,GAAIC,MAAO,EAAGC,WAAY,EAAGC,WAAY,GAI9DE,SAAU,GACVC,SAAU,CAAEN,QAAS,GAAIC,MAAO,EAAGC,WAAY,EAAGC,WAAY,GAI9DI,MAAO,GAGPC,mBAAoB,GACpBC,cAAe,IAGXC,EAA6B,SAAAjF,GAAI,OACrCkF,SAASlF,EAAKmF,eAAiBnF,EAAKoF,aAAepF,EAAKqF,WAAY,KAuMvDC,EAlMA,WAAoC,IAAnC1C,EAAkC,uDAA1BR,EAAeS,EAAW,uCAChD,OAAQA,EAAOrM,MACb,KAAKpC,IAAQmR,aAAe,IAAD,EAKrB1C,EAAO5N,KAHTiP,EAFuB,EAEvBA,eACAC,EAHuB,EAGvBA,iBACAC,EAJuB,EAIvBA,sBAEIH,EAAe,IAAIuB,IAAIrB,GAC1BsB,IAAIvB,GACJuB,IAAIrB,GACJsB,WAEH,OAAO,2BACF9C,GADL,IAEEqB,eACAC,iBACAC,mBACAC,0BAGJ,KAAKhQ,IAAQuR,cAAgB,IACnB1Q,EAAS4N,EAAT5N,KAER,OAAO,2BACF2N,GADL,IAEEyB,QAASpP,IAGb,KAAKb,IAAQwR,WAAa,IAChB3Q,EAAS4N,EAAT5N,KAER,OAAO,2BACF2N,GADL,IAEEkC,MAAO7P,IAGX,KAAKb,IAAQyR,SAAW,IACd5Q,EAAS4N,EAAT5N,KAER,OAAO,2BACF2N,GADL,IAEEkC,MAAM,CAAE7P,GAAH,mBAAY2N,EAAMkC,UAG3B,KAAK1Q,IAAQ0R,YAAc,IACjB7Q,EAAS4N,EAAT5N,KAER,OAAO,2BACF2N,GADL,IAEEkC,MAAOlC,EAAMkC,MAAMiB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,UAAYhR,EAAKmB,eAG5D,KAAKhC,IAAQ8R,cAAgB,IACnBjR,EAAS4N,EAAT5N,KAER,OAAO,2BACF2N,GADL,IAEEgC,SAAU3P,IAGd,KAAKb,IAAQ+R,kBAAoB,IACvBlR,EAAS4N,EAAT5N,KAER,OAAO,2BACF2N,GADL,IAEE0B,aAAcrP,IAGlB,KAAKb,IAAQgS,uBAAyB,IAC5BnR,EAAS4N,EAAT5N,KAER,OAAO,2BACF2N,GADL,IAEE0B,aAAa,2BACRrP,GADO,IAEVsP,QAAQ,GAAD,mBAAM3B,EAAM0B,aAAaC,SAAzB,YAAqCtP,EAAKsP,cAIvD,KAAKnQ,IAAQiS,cAAgB,IACnBpR,EAAS4N,EAAT5N,KAER,OAAO,2BACF2N,GADL,IAEEiC,SAAU5P,IAGd,KAAKb,IAAQkS,mBAAqB,IACxBrR,EAAS4N,EAAT5N,KAER,OAAO,2BACF2N,GADL,IAEEiC,SAAS,2BACJ5P,GADG,IAENsP,QAAQ,GAAD,mBAAM3B,EAAMiC,SAASN,SAArB,YAAiCtP,EAAKsP,cAInD,KAAKnQ,IAAQmS,cAAgB,IACnBtR,EAAS4N,EAAT5N,KAER,OAAO,2BACF2N,GADL,IAEE+B,SAAU1P,IAGd,KAAKb,IAAQoS,mBAAqB,IACxBvR,EAAS4N,EAAT5N,KAER,OAAO,2BACF2N,GADL,IAEE+B,SAAS,2BACJ1P,GADG,IAENsP,QAAQ,GAAD,mBAAM3B,EAAM+B,SAASJ,SAArB,YAAiCtP,EAAKsP,cAInD,KAAKnQ,IAAQqS,yBAA2B,IAAD,EACQ5D,EAAO5N,KAA5CqP,EAD6B,EAC7BA,aAAcK,EADe,EACfA,SAAUE,EADK,EACLA,SAC1B6B,EAAwB,sBACzBpC,EAAaC,SADY,YAEzBI,EAASJ,SAFgB,YAGzBM,EAASN,UAEXoC,MAAK,SAAC/R,EAAGgS,GACR,IAAMC,EAAQ5B,EAA2BrQ,GACnCkS,EAAQ7B,EAA2B2B,GAEzC,OAAOC,EAAQC,EAAQ,EAAID,EAAQC,GAAS,EAAI,KAEjDtR,KAAI,SAAAwK,GACH,IAAM+G,EAAO9B,EAA2BjF,GAExC,OAAIA,EAAKgH,aACA,CACLxQ,KAAM,UACNyQ,KAAMjH,EAAKgH,aACXhS,MAAOgL,EAAKhL,MACZ+R,QAIA/G,EAAKkH,gBACA,CACL1Q,KAAM,UACNyQ,KAAMjH,EAAKkH,gBACXlS,MAAOgL,EAAKhL,MACZ+R,OACAzM,QAAS0F,EAAK/I,MAId+I,EAAKmH,QACA,CACL3Q,KAAM,QACNyQ,KAAMjH,EAAKmH,QACXnS,MAAOgL,EAAKoH,OACZL,OACAzM,QAAS0F,EAAKqH,QAIlB3R,QAAQqG,KAAK,+BAAgCiE,GACtC,SAER+F,QAAO,SAAA/F,GAAI,OAAa,OAATA,KAElB,OAAO,2BACF4C,GADL,IAEE0B,eACAK,WACAE,WACAE,mBAAoB2B,IAGxB,KAAKtS,IAAQkT,0BACX,OAAO,2BACF1E,GADL,IAEEmC,mBAAoB,KAGxB,KAAK3Q,IAAQmT,oBAAqB,IACzBtS,EAAS4N,EAAT5N,KACP,OAAO,2BACF2N,GADL,IAEEoC,cAAc/P,IAGlB,QACE,OAAO2N,I,uBCnHE4E,EAhFFC,aAAQ,SAACC,EAAO7E,GAC3B,GAAI8E,IAAwBC,MAAM/E,GAAS,CAAC,IAClCgF,EAAqBhF,EAAOiF,QAA5BD,iBAENH,EAAMK,0BAA4BF,GAClC1N,IAAyB0N,KAEzBH,EAAMM,iBAAmB,GACzBN,EAAMK,wBAA0BF,GAIpC,GAAII,IAAyBL,MAAM/E,GAAS,CAAC,IACnCqF,EAAoBrF,EAAOiF,QAA3BI,gBACHR,EAAMM,iBAAiBE,EAAgB9S,MAC1CsS,EAAMM,iBAAiBE,EAAgB9S,IAAM8S,GAIjD,GAAIC,IAAcP,MAAM/E,GAAS,CAAC,IACxBuF,EAAUvF,EAAOiF,QAAjBM,MACHV,EAAMW,OAAOD,EAAMhT,MACtBsS,EAAMY,gBAAgBF,EAAMhT,IAAM,GAClCsS,EAAMW,OAAOD,EAAMhT,IAAMgT,GAI7B,GAAIG,IAAaX,MAAM/E,GAAS,CAAC,IACvBzN,EAAOyN,EAAOiF,QAAd1S,GACJsS,EAAMW,OAAOjT,WACRsS,EAAMW,OAAOjT,GAIxB,GAAIoT,IAA0BZ,MAAM/E,GAAS,CAAC,IAAD,EACEA,EAAOiF,QAA5CW,EADmC,EACnCA,QAASC,EAD0B,EAC1BA,aAAcC,EADY,EACZA,UAC/BjB,EAAMY,gBAAgBG,GAASE,GAAWlR,IAAMiR,EAChDhB,EAAMY,gBAAgBG,GAASE,GAAW/F,MAAQ,QAEpD,GAAIgG,IAA6BhB,MAAM/E,GAAS,CAAC,IAAD,EACNA,EAAOiF,QAAvCW,EADsC,EACtCA,QAASnO,EAD6B,EAC7BA,QAASqO,EADoB,EACpBA,UAC1BjB,EAAMY,gBAAgBG,GAASE,GAAa,CAC1CE,KAAMvO,EACNmO,UACAhR,IAAK,GACLrC,GAAIuT,EACJ/F,MAAO,UACPkG,UAAWC,KAAKC,OAGpB,GAAIC,IAA2BrB,MAAM/E,GAAS,CAAC,IAAD,EACbA,EAAOiF,QAA9BW,EADoC,EACpCA,QAASE,EAD2B,EAC3BA,UACjBjB,EAAMY,gBAAgBG,GAASE,GAAWlR,IAAM,GAChDiQ,EAAMY,gBAAgBG,GAASE,GAAW/F,MAAQ,UAEpD,GAAIsG,IAA6BtB,MAAM/E,GAAS,CAAC,IAAD,EACfA,EAAOiF,QAA9BW,EADsC,EACtCA,QAASE,EAD6B,EAC7BA,UACjBjB,EAAMY,gBAAgBG,GAASE,GAAWlR,IAAM,GAChDiQ,EAAMY,gBAAgBG,GAASE,GAAW/F,MAAQ,KAEpD,GAAIuG,IAAwBvB,MAAM/E,GAAS,CAAC,IAClCzN,EAAOyN,EAAOiF,QAAd1S,GACJsS,EAAMM,iBAAiB5S,WAClBsS,EAAMM,iBAAiB5S,GAGlC,GAAIgU,IAAqBxB,MAAM/E,GAAS,CAAC,IAC/BvI,EAAYuI,EAAOiF,QAAnBxN,QACHoN,EAAMY,gBAAgBhO,EAAQmO,WACjCf,EAAMY,gBAAgBhO,EAAQmO,SAAW,IAEtCf,EAAMY,gBAAgBhO,EAAQmO,SAASnO,EAAQlF,MAClDsS,EAAMY,gBAAgBhO,EAAQmO,SAASnO,EAAQlF,IAA/C,2BACKkF,GADL,IAEE7C,IAAK,SApFS,CACpBsQ,wBAAyB,iBACzBM,OAAQ,GAIRC,gBAAiB,GACjBN,iBAAkB,K,QC3Bd5F,EAAgB,CACpBiH,MAAM,GAaOC,EAVA,WAAoC,IAAnC1G,EAAkC,uDAA1BR,EAAeS,EAAW,uCAChD,OAAQA,EAAOrM,MACb,KAAKpC,IAAQmV,gBACX,OAAO,2BAAK3G,GAAZ,IAAmByG,KAAMxG,EAAO5N,OAElC,QACE,OAAO2N,I,QCLPR,EAAgB,CACpBoH,gBACE,0FACFC,gBAAiB,GACjBC,gBAAiB,GACjBC,UAAW,GACXC,aAAc,GACdC,gBAAiB,GACjBC,gBAAiB,GACjBC,qBAAsB,GACtBC,iBAAkB,GAClBC,cAAe,GACfC,gBAAiB,GACjBC,SAAU,GACVC,gBAAiB,GACjBC,sBAAuB,GACvBC,cAAc,IA2HD/F,EAxHC,WAA0D,IAAzD3B,EAAwD,uDAAhDR,EAAeS,EAAiC,uCACvE,GAAI0H,IAAmB3C,MAAM/E,GAC3B,OAAO4E,YAAQ7E,GAAO,SAAA8E,GAAU,IACtB1H,EAAS6C,EAAOiF,QAAhB9H,KACH0H,EAAMuC,cAAcjK,EAAK5K,MAC5BsS,EAAMuC,cAAcjK,EAAK5K,IAAM4K,MAIrC,GAAIwK,IAAsB5C,MAAM/E,GAC9B,OAAO4E,YAAQ7E,GAAO,SAAA8E,GAAU,IAAD,EAGzB7E,EADFiF,QAAWvD,EAFgB,EAEhBA,QAASkG,EAFO,EAEPA,IAElBA,EAAIvV,KACNwS,EAAMsC,iBAAiBS,EAAIrV,IAAMmP,MAKvC,GAAImG,IAAwB9C,MAAM/E,GAChC,OAAO4E,YAAQ7E,GAAO,SAAA8E,UACbA,EAAMsC,iBAAiBnH,EAAOiF,QAAQ1S,OAIjD,OAAQyN,EAAOrM,MACb,KAAKpC,IAAQuW,sBACX,OAAO,2BAAK/H,GAAZ,IAAmB4G,gBAAiB3G,EAAO5N,OAG7C,KAAKb,IAAQwW,qBAAuB,IAC1B3V,EAAS4N,EAAT5N,KACF4V,EAAW,eAAQjI,EAAMsH,iBAE/B,OADAW,EAAY5V,EAAK6V,aAAe7V,EAAKsP,QAC9B,2BAAK3B,GAAZ,IAAmBsH,gBAAiBW,IAEtC,KAAKzW,IAAQ2W,WAAa,IAChB9V,EAAS4N,EAAT5N,KACR,OAAO,2BACF2N,GADL,IAEE8G,gBAAiBzU,EAAK+V,UACtBvB,gBAAiBxU,EAAKgW,UACtBtB,UAAW1U,EAAK0U,UAChBC,aAAc3U,EAAK2U,aACnBC,gBAAiB5U,EAAK4U,gBACtBC,gBAAiB7U,EAAK6U,gBACtBC,qBAAsB9U,EAAK8U,qBAC3BO,cAAcrV,EAAKqV,gBAGvB,KAAKlW,IAAQ8W,cACX,OAAO,2BACFtI,GADL,IAEE8G,gBAAiB,GACjBD,gBAAiB,GACjBE,UAAW,GACXC,aAAc,GACdC,gBAAiB,GACjBC,gBAAiB,GACjBC,qBAAsB,KAG1B,KAAK3V,IAAQ+W,cAAgB,IACnBlW,EAAS4N,EAAT5N,KACR,OAAO,2BAAK2N,GAAZ,IAAmBuH,SAAUlV,IAE/B,KAAKb,IAAQgX,oBAAsB,IACzBnW,EAAS4N,EAAT5N,KACAoW,EAAuBpW,EAAvBoW,QAAS7J,EAAcvM,EAAduM,UACX8J,EAAY,eAAQ1I,EAAMwH,iBAKhC,OAJKkB,EAAaD,KAChBC,EAAaD,GAAW,IAE1BC,EAAaD,GAASE,KAAK/J,GACpB,2BAAKoB,GAAZ,IAAmBwH,gBAAiBkB,IAEtC,KAAKlX,IAAQoX,kBAAoB,IACvBvW,EAAS4N,EAAT5N,KACAoW,EAAuBpW,EAAvBoW,QAAS7J,EAAcvM,EAAduM,UACX8J,EAAY,eAAQ1I,EAAMwH,iBAChC,IAAKkB,EAAaD,GAChB,OAAOzI,EAET,IAAM3C,EAAQqL,EAAaD,GAASI,QAAQjK,GAC5C,OAAIvB,GAAS,GACXqL,EAAaD,GAASK,OAAOzL,EAAO,GAC7B,2BAAK2C,GAAZ,IAAmBwH,gBAAiBkB,KAE/B1I,EAET,KAAKxO,IAAQuX,iBAAmB,IACtB1W,EAAS4N,EAAT5N,KACAoW,EAAuBpW,EAAvBoW,QAAS7J,EAAcvM,EAAduM,UACX8J,EAAY,eAAQ1I,EAAMyH,uBAKhC,OAJKiB,EAAaD,KAChBC,EAAaD,GAAW,IAE1BC,EAAaD,GAASE,KAAK/J,GACpB,2BAAKoB,GAAZ,IAAmByH,sBAAuBiB,IAE5C,KAAKlX,IAAQwX,oBAAsB,IACzB3W,EAAS4N,EAAT5N,KACAoW,EAAuBpW,EAAvBoW,QAAS7J,EAAcvM,EAAduM,UACX8J,EAAY,eAAQ1I,EAAMyH,uBAChC,IAAKiB,EAAaD,GAChB,OAAOzI,EAET,IAAM3C,EAAQqL,EAAaD,GAASI,QAAQjK,GAC5C,OAAIvB,GAAS,GACXqL,EAAaD,GAASK,OAAOzL,EAAO,GAC7B,2BAAK2C,GAAZ,IAAmByH,sBAAuBiB,KAErC1I,EAET,QACE,OAAOA,I,QCtIPR,EAA2B,CAC/ByJ,OAAQ,gDAERC,KAAM,cAENC,SAAU,CACRC,WAAY,EACZC,YAAa,EACbC,QAAS,IAuCEC,EAnCF,WAGI,IAFfvJ,EAEc,uDAFKR,EACnBS,EACc,uCACd,OAAQA,EAAOrM,MACb,KAAKpC,IAAQgY,WACX,OAAOhK,EAET,KAAKhO,IAAQiY,eACX,IAAMN,EAAWlJ,EAAO5N,KACxB,OAAO,2BACF2N,GADL,IAEEmJ,aAGJ,KAAK3X,IAAQkY,WACX,IAAMT,EAAShJ,EAAO5N,KACtB,OAAO,2BACF2N,GADL,IAEEmJ,SAAU3J,EAAa,SACvByJ,WAGJ,KAAKzX,IAAQmY,SACX,IAAMT,EAAOjJ,EAAO5N,KACpB,OAAO,2BACF2N,GADL,IAEEkJ,SAGJ,QACE,OAAOlJ,I,eCtCPR,EAAgB,CACpBoK,QAAS,GAITC,MAAO,GACPC,YAAa,GACbC,YAAY,GA6LCC,EA1LF,WAA+D,IAA9DhK,EAA6D,uDAArDR,EAAeS,EAAsC,uCACzE,GAAIgK,IAAYjF,MAAM/E,GAAS,CAAC,IAAD,EAGzBA,EADFiF,QAAWgF,EAFgB,EAEhBA,OAAQ1X,EAFQ,EAERA,GAErB,OAAOqS,YAAQ7E,GAAO,SAAA8E,GACfA,EAAM+E,MAAMK,KACfpF,EAAM+E,MAAMK,GAAU,IAGxB,IAAMC,EAAMrF,EAAM+E,MAAMK,GAAQE,WAAU,SAAAC,GAAC,OAAIA,EAAE7X,KAAOA,KAEpD2X,GAAO,GACTrF,EAAM+E,MAAMK,GAAQpB,OAAOqB,EAAK,MAItC,GAAIG,IAAatF,MAAM/E,GAAS,CAAC,IAAD,EAG1BA,EADFiF,QAAWgF,EAFiB,EAEjBA,OAAQ1X,EAFS,EAETA,GAAIN,EAFK,EAELA,KAEzB,OAAO2S,YAAQ7E,GAAO,SAAA8E,GAMpB,GALKA,EAAM+E,MAAMK,KACfpF,EAAM+E,MAAMK,GAAU,KAIX,IAFDpF,EAAM+E,MAAMK,GAAQE,WAAU,SAAAC,GAAC,OAAIA,EAAE7X,KAAOA,KAExC,CACd,IAAM+X,EAAuB,CAC3BC,SAAUN,EACVO,aAAc,GACdtG,KAAMjS,EAAKiS,KACX3R,KACAqK,OAAQ3K,EAAK2K,OACb6N,KAAMxY,EAAKwY,KACXC,MAAOzY,EAAKyY,MACZC,KAAM,GACNhX,KAAM,QAERkR,EAAM+E,MAAMK,GAAQvB,KAAK4B,OAI/B,GAAIM,IAAoB7F,MAAM/E,GAAS,CAAC,IAAD,EAGjCA,EADFiF,QAAWgF,EAFwB,EAExBA,OAAQY,EAFgB,EAEhBA,YAAatY,EAFG,EAEHA,GAAIuY,EAFD,EAECA,OAEtC,OAAOlG,YAAQ7E,GAAO,SAAA8E,GACpB,GAAKA,EAAM+E,MAAMK,GAAjB,CAQA,IAAMC,EAAMrF,EAAM+E,MAAMK,GAAQE,WAAU,SAAAC,GAAC,OAAIA,EAAE7X,KAAOuY,MAC3C,IAATZ,EAQHrF,EAAM+E,MAAMK,GAAQC,GAAqBM,aAAajY,GAAMsY,EAP3DtQ,IAAazB,MAAb,wGACmGgS,EADnG,2BAC4Hb,EAAO3K,OAC9H,UAXL/E,IAAazB,MAAb,0HACqHgS,EADrH,2BAC8Ib,EAAO3K,OAChJ,QAiBX,GAAIyL,IAAkBhG,MAAM/E,GAAS,CAAC,IAAD,EACCA,EAAOiF,QAAnC6F,EAD2B,EAC3BA,OAAQE,EADmB,EACnBA,gBAEhB,OAAOpG,YAAQ7E,GAAO,SAAA8E,GACfA,EAAMgF,YAAYmB,KACrBnG,EAAMgF,YAAYmB,GAAmB,IAEnCnG,EAAMgF,YAAYmB,GAAiBF,WAC9BjG,EAAMgF,YAAYmB,GAAiBF,MAIhD,GAAIG,IAAmBlG,MAAM/E,GAAS,CAAC,IAAD,EAMhCA,EAAOiF,QAJTiG,EAFkC,EAElCA,eACAJ,EAHkC,EAGlCA,OACAK,EAJkC,EAIlCA,UACAH,EALkC,EAKlCA,gBAGF,OAAOpG,YAAQ7E,GAAO,SAAA8E,GACfA,EAAMgF,YAAYmB,KACrBnG,EAAMgF,YAAYmB,GAAmB,IAEvCnG,EAAMgF,YAAYmB,GAAiBF,GAAU,CAC3CI,iBACAE,eAAgBN,EAChBK,YACAE,QAASL,EAAkBF,EAC3BQ,SAAUN,MAKhB,GAAIO,IAAgBxG,MAAM/E,GAAS,CAAC,IAAD,EACSA,EAAOiF,QAAzCgF,EADyB,EACzBA,OAAQa,EADiB,EACjBA,OAAQU,EADS,EACTA,OAAQC,EADC,EACDA,MAEhC,OAAO7G,YAAQ7E,GAAO,SAAA8E,GACpB,IAAM5S,EAAO4S,EAAM+E,MAAMK,GAAQyB,MAAK,SAAAtB,GAAC,OAAIA,EAAE7X,KAAOuY,KAC/C7Y,GACHsI,IAAazB,MAAb,wCACmCgS,EADnC,2BAC4Db,EAAO3K,OAC9D,KAIFrN,EAAK0Y,OAER1Y,EAAK0Y,KAAO,IAET1Y,EAAK0Y,KAAKc,KACbxZ,EAAK0Y,KAAKc,GAASD,MAKzB,OAAQxL,EAAOrM,MACb,KAAKpC,IAAQoa,WAAa,IAChBvZ,EAAS4N,EAAT5N,KACFwZ,EAAiB7L,EAAM4J,QAAQ+B,MACnC,SAAAG,GAAM,OAAIzZ,EAAK0Z,OAASD,EAAOC,QAGjC,OAAIF,EACK,2BACF7L,GADL,IAEE4J,QAAS5J,EAAM4J,QAAQhX,KAAI,SAAAkZ,GAAM,OAC/BA,EAAOC,OAAS1Z,EAAK0Z,KAAO1Z,EAAOyZ,OAKlC,2BACF9L,GADL,IAEE4J,QAAQ,GAAD,mBAAM5J,EAAM4J,SAAZ,CAAqBvX,MAGhC,KAAKb,IAAQwa,cAAgB,IACnB3Z,EAAS4N,EAAT5N,KACR,OAAO,2BACF2N,GADL,IAEE4J,QAAS5J,EAAM4J,QAAQzG,QAAO,SAAA2I,GAAM,OAAIA,EAAOC,OAAS1Z,OAG5D,KAAKb,IAAQya,cAAgB,IACnB5Z,EAAS4N,EAAT5N,KAEFuX,EAAU5J,EAAM4J,QAAQhX,KAAI,SAAAkZ,GAChC,OAAIA,EAAOC,OAAS1Z,EAAKuD,IAChB,2BACFkW,GADL,IAEEI,QAAS7Z,IAINyZ,KAGT,OAAO,2BACF9L,GADL,IAEE4J,YAGJ,KAAKpY,IAAQ2a,YACX,OAAO,2BAAKnM,GAAZ,IAAmB+J,YAAY,IAEjC,KAAKvY,IAAQ4a,sBAAwB,IAC5B/Z,EAAQ4N,EAAR5N,KACP,OAAO,2BAAI2N,GAAX,IAAkB4J,QAAQvX,IAE5B,KAAKsO,IAAahE,OAChB,OAAO6C,EAET,QACE,OAAOQ,I,wBC7MPR,EAAgB,CACpBjJ,SAAU8V,cACV1T,SAAU,GACVD,SAAU,IAyBGpC,EAtBI,WAAoC,IAAnC0J,EAAkC,uDAA1BR,EAAeS,EAAW,uCACpD,OAAQA,EAAOrM,MACb,KAAKpC,IAAQ8a,cACX,IAAM/V,EAAW0J,EAAO5N,KACxB,OAAO,2BACF2N,GADL,IAEEzJ,aAGJ,KAAK/E,IAAQ+a,kBAAoB,IAAD,EACFtM,EAAO5N,KAA3BuG,EADsB,EACtBA,OAAQ4T,EADc,EACdA,QAChB,OAAO,2BAAKxM,GAAZ,IAAmBrH,SAAS,2BAAMqH,EAAMrH,UAAb,kBAAwBC,EAAS4T,MAE9D,KAAKhb,IAAQib,aAAe,IAAD,EACKxM,EAAO5N,KAA7BuG,EADiB,EACjBA,OAAQpF,EADS,EACTA,UAChB,OAAO,2BAAKwM,GAAZ,IAAmBtH,SAAS,2BAAMsH,EAAMtH,UAAb,kBAAwBE,EAASpF,MAE9D,QACE,OAAOwM,I,0BCbPR,EAAgB,GAwDPkN,EAjDM,WAAoC,IAAnC1M,EAAkC,uDAA1BR,EAAeS,EAAW,uCACtD,GAAIiL,IAAmBlG,MAAM/E,GAAS,CAAC,IAC7BkL,EAAmBlL,EAAOiF,QAA1BiG,eACR,OAAOtG,YAAQ7E,GAAO,SAAA8E,GACfA,EAAMqG,KACTrG,EAAMqG,GAAkB5T,IAAuB4T,OAIrD,GAAIwB,IAAmB3H,MAAM/E,GAC3B,OAAO4E,YAAQ7E,GAAO,SAAA8E,GAAU,IAAD,EACE7E,EAAOiF,QAA9BgH,EADqB,EACrBA,QAAS1Y,EADY,EACZA,UAEZsR,EAAMtR,KACTsR,EAAMtR,GAAa+D,IAAuB/D,IAG5Cd,OAAOka,OAAO9H,EAAMtR,GAAY0Y,MAIpC,OAAQjM,EAAOrM,MACb,KAAKiZ,IAAaxM,uBAAyB,IACjC7M,EAAcyM,EAAO5N,KAArBmB,UACR,OAAO,2BACFwM,GADL,kBAEGxM,EAFH,2BAGO+D,IAAuB/D,IACvBwM,EAAMxM,MAIf,KAAKhC,IAAQsb,oBACX,OAAOtN,EAGT,KAAKhO,IAAQub,oBAAsB,IACzBvZ,EAAcyM,EAAO5N,KAArBmB,UAEgCwZ,GAAahN,EAA5CxM,GAHuB,YAGqBwM,EAHrB,CAGvBxM,GAHuB,WAKhC,OAAOwZ,EAGT,QACE,OAAOhN,I,SChEPR,EAAgB,CACpByN,WAAY,GACZC,SAAU,GACVC,eAAgB,IAoCHC,EAjCA,WAAoC,IAAnCpN,EAAkC,uDAA1BR,EAAeS,EAAW,uCAChD,OAAQA,EAAOrM,MACb,KAAKpC,IAAQC,eAAiB,IAAD,EACCwO,EAAO5N,KAA3BG,EADmB,EACnBA,GAAIqB,EADe,EACfA,YACNwZ,EAAG,eAAQrN,EAAMiN,YAEvB,OADAI,EAAI7a,GAAMqB,EACH,2BAAKmM,GAAZ,IAAmBiN,WAAYI,IAEjC,KAAK7b,IAAQE,kBACX,IAAMc,EAAKyN,EAAO5N,KACZgb,EAAG,eAAQrN,EAAMiN,YAEvB,cADOI,EAAI7a,GACJ,2BAAKwN,GAAZ,IAAmBiN,WAAYI,IAEjC,KAAK7b,IAAQG,mBAAqB,IAAD,EACQsO,EAAO5N,KAAtCmC,EADuB,EACvBA,SAAUT,EADa,EACbA,MAAOC,EADM,EACNA,UACnBsZ,EAAW,eAAQtN,EAAMmN,gBAE1BG,EAAYvZ,KACfuZ,EAAYvZ,GAAS,IAEvB,IAAMwZ,EAAkBD,EAAYvZ,GAKpC,OAJKwZ,EAAgBvZ,KACnBuZ,EAAgBvZ,GAAa,IAE/BuZ,EAAgBvZ,GAAW2U,KAAKnU,GACzB,2BAAKwL,GAAZ,IAAmBmN,eAAgBG,IAErC,QACE,OAAOtN,I,QChCPR,EAAgB,CACpBgO,WAAY,GACZC,mBAAkB,GAgBLC,GAdH,WAAoC,IAAnC1N,EAAkC,uDAA1BR,EAAeS,EAAW,uCAC7C,OAAQA,EAAOrM,MACb,KAAKpC,IAAQmc,YAAc,IAAD,EACG1N,EAAO5N,KAA3B4I,EADiB,EACjBA,KAAK2S,EADY,EACZA,YACZ,OAAO,2BAAK5N,GAAZ,IAAmBwN,WAAYvS,EAAKwS,kBAAkBG,IAExD,KAAKpc,IAAQqc,aACX,OAAO,2BAAI7N,GAAX,IAAkBwN,WAAY,GAAGC,mBAAmB,IAEtD,QACE,OAAOzN,I,UCAE8N,GAZEjJ,aAAQ,SAACC,EAAO7E,GAC/B,IACE,GAAIjG,KAAIgL,MAAM/E,GAAS,CAAC,IAAD,EACEA,EAAOiF,QAAtBtP,EADa,EACbA,IAAKxD,EADQ,EACRA,MACb0S,EAAMlP,GAAOxD,GAEf,MAAO0I,GACPN,IAAazB,MAAb,kCACAyB,IAAazB,MAAM+B,MAV0C,I,UCiBlDiT,GAXKlJ,aAAQ,SAACC,EAAO7E,GAC9B7F,KAAkB4K,MAAM/E,WAEnB6E,EADsB7E,EAAOiF,QAA5BxK,kBAGV,GAAIJ,KAAmB0K,MAAM/E,GAAS,CAAC,IAAD,EACKA,EAAOiF,QAAxCvK,EAD4B,EAC5BA,WAAYD,EADgB,EAChBA,iBACpBoK,EAAMpK,GAAN,2BAA+BC,GAA/B,IAA2CD,wBATzB,IC2BPsT,GAnBEC,YAAgB,CAC/BpX,KAAMqX,EACN/X,KAAMgY,EACN7X,WAAY8X,EACZ1L,OAAQ2L,EACRzJ,KAAM0J,EACN5H,OAAQ6H,EACR5M,QAAS6M,EACTjF,KAAMkF,EACNzE,KAAM0E,EACNhC,aAAciC,EACdvB,OAAQwB,EACRlB,IAAKmB,GACLf,YACAC,iB,wCCzBae,GAJI,CACjBC,ECHoB,SAAA/O,GACpBlN,QAAQC,IAAI,iCACZ,IAAMic,EAAQ,2BACThP,GADS,IAEZ0C,OAAO,2BACF1C,EAAM0C,QADL,IAEJR,MAAO,OAIX,OADApP,QAAQC,IAAI,8BAA+Bic,GACpCA,I,oBCRIC,GAAsB,SAACjP,GAAD,OACjCA,EAAMnJ,KAAKrD,WAEA0b,GAAS,SAAClP,GAAD,QAA6BA,EAAMnJ,KAAKrD,WAEjD2b,GAAa,SAACnP,GAAD,OAA0BA,EAAMnJ,KAAK4I,Q,SCAlD2P,GAAiB,SAACpP,GAAkB,IAAD,EACxCqP,EAAa,UAAGJ,GAAoBjP,UAAvB,QAAiC,GAC9CsP,EAAYtP,EAAM0M,aAAa2C,GACrC,OAAIC,IAGFxc,QAAQiG,MAAM,iCACPwW,IAAOC,gBAAgBH,KAIrBI,GAAa,SAAAjc,GAAS,OAAI,SAACwM,GACtC,IAAMsP,EAAYtP,EAAM0M,aAAalZ,GAErC,OAAI8b,GAGKC,IAAOC,gBAAP,OAAuBhc,QAAvB,IAAuBA,IAAa,MAIlCkc,GAAsB,SAAC1P,GAClC,OAAOtN,OAAOid,KAAK3P,EAAM0M,eAGdkD,GAA2B,SAAC5P,GACvC,IAAMqP,EAAgBJ,GAAoBjP,GAC1C,OAAO0P,GAAoB1P,GAAOmD,QAAO,SAAAvN,GAAG,OAAIA,IAAQyZ,MAG7CQ,GAAsBC,cACjC,SAAC9P,GAAD,OAAkBA,EAAM0M,gBACxB,SAAC1M,GAAD,OAAkBA,EAAMnJ,KAAKrD,aAC7B,SAACuc,EAAOV,GACN,OAAO3c,OAAOsd,OAAOD,GAAO5M,QAC1B,SAAA4I,GAAI,OAAIA,EAAKvY,YAAc6b,QCpCpBY,GAAgBH,aAC3Bb,IACA,SAACjP,GAAD,OAAkBA,EAAMgK,KAAKJ,WAC7B,SAACyF,EAAezF,GACd,OAAOA,EAAQzG,QAAO,SAAA+M,GAAC,OAAIA,EAAEnE,OAASsD,QCJ7Bc,GAA4BL,cACvC,SAAC9P,GAAD,OAAkBA,EAAM2B,QAAQyF,oBAChC,SAACpH,GAAD,OAAkBA,EAAM2B,QAAQ0F,iBAChC,SAAC+I,EAAgB/I,GACf,OAAO,2BACF+I,GACA/I,M,qBCLIgJ,GAAiDP,cAC5D,SAAC9P,GAAD,OAAkBA,EAAM4E,KAAKa,UAC7B,SAAAA,GACE,OAAO/S,OAAOsd,OAAOvK,MAIZ6K,GAAoB,SAACzK,GAAD,OAAqB,SACpD7F,GAEA,IAAMwF,EAAQxF,EAAM4E,KAAKa,OAAOI,GAChC,cAAOL,QAAP,IAAOA,IAAS,OAML+K,GAAoB,SAAC/c,GAAD,OAAuB,SACtDwM,GAEA,QAAStN,OAAOsd,OAAOhQ,EAAM4E,KAAKa,QAAQkG,MACxC,SAAAnG,GAAK,OAAIA,EAAMgL,OAAShd,OAIfid,GAAgC,SAACzQ,GAAD,OAC3CA,EAAM4E,KAAKO,yBAEAuL,GAEmBZ,cAC9B,SAAC9P,GAAD,OAAkBA,EAAM4E,KAAKQ,mBAC7BiL,IACA,SAACjL,EAAkBK,GACjB,OAAO/S,OAAOsd,OAAO5K,GAAkBjC,QACrC,SAAAwN,GAAG,OAAKlL,EAAOkG,MAAK,SAAAnG,GAAK,OAAIA,EAAMhT,KAAOme,EAAIC,yBAKvCC,GAAoB,SAAC7Q,GAAD,OAAkBA,EAAM4E,KAAKc,iBAEjDoL,GAAiBhB,cAC5B,SAAC9P,GAAD,OAAkBA,EAAM4E,KAAKa,UAC7B,SAACzF,GAAD,OAAkBA,EAAM0M,gBACxB,SAACjH,EAAQsK,GACP,IAAMgB,EAAcre,OAAOsd,OAAOvK,GAAQ7S,KAAI,SAAA4S,GAAK,OAAIA,EAAMgL,QAE7D,OADmBQ,KAAKD,GACNne,KAAI,SAAAY,GACpB,IAAMuY,EAAOgE,EAAMvc,GACnB,OAAKuY,GACIxU,IAAuB/D,SAOzByd,GAAsB,SAACC,GAAD,OAAgC,SACjElR,GAEA,IAAMmR,EAAanR,EAAM4E,KAAKa,OAAOyL,GAC/BE,EAAepR,EAAM4E,KAAKQ,iBAAiB8L,GAEjD,OAAIE,IAIAD,GAIG,QAGIE,GAAsB,SAACxL,GAAD,OAAqB,SACtD7F,GAEA,OAAOtN,OAAOsd,OAAOhQ,EAAM4E,KAAKc,gBAAgBG,IAAU9B,MAAK,SAAC/R,EAAGgS,GACjE,OAAOA,EAAEkC,UAAYlU,EAAEkU,e,0CC3EdoL,GAAkBxB,aAC7Bb,IACA,SAACjP,GAAD,OAAkBA,EAAMgK,KAAKH,SAC7B,SAACwF,EAAexF,GAEd,OAAO0H,KAAO1H,GAAO,SAAC2H,EAAGhe,GAAJ,OAAkBA,IAAc6b,QAI5CoC,GAAiB,SAACzR,GAAD,OAAkBA,EAAMgK,KAAKH,OAE9C6H,GAAuB,SAAC1R,GAAD,OAAkBA,EAAMgK,KAAKF,aAEpD6H,GAAmB,SAACnH,EAAkBO,GAAnB,OAAsC,SACpE/K,GACwB,IAAD,EACvB,OAAO,UAAAA,EAAMgK,KAAKH,MAAMW,UAAjB,eAA4BmB,MAAK,SAAAzZ,GAAI,OAAIA,EAAKM,KAAOuY,OAAW,OAG5D6G,GAA4B,SAACpe,GAAD,OAAuB,SAC9DwM,GAC4C,IAAD,EACrC6J,GAAQ,UAAA7J,EAAMgK,KAAKH,MAAMrW,UAAjB,eAA6B+L,UAAW,GAChDsS,EAAiB7R,EAAMgK,KAAKF,YAAYtW,IAAc,GACtDsW,EAAcpX,OAAOsd,OAAO6B,GAC5BC,EAAQ,sBAAOjI,GAAP,YAAiBC,IAS/B,OAPAgI,EAAS/N,MAAK,SAAC/R,EAAGgS,GAChB,IAAM+N,EAAQxa,IAAoBvF,GAAKA,EAAEoZ,UAAYpZ,EAAEmS,KAGvD,OAFa5M,IAAoByM,GAAKA,EAAEoH,UAAYpH,EAAEG,MAExC4N,KAGTD,IAGIE,GAAmB,SAACC,EAAgBlH,GAAjB,OAAoC,SAClE/K,GAGA,OADuBA,EAAMgK,KAAKF,YAAYmI,IAAW,IACnClH,IAAW,OAGtBmH,GAA2CpC,aACtD2B,GACAC,GACAzB,IACA,SAACpG,EAAOC,EAAaF,GACnB,IAAMuI,EAAqBvI,EAAQhX,KAAI,SAAAsd,GAAC,OAAIA,EAAEnE,QACxCqG,EAAgBC,KAAKxI,EAAOsI,GAC5BG,EAAiBD,KAAKvI,EAAaqI,GAEnCI,EAAe7f,OAAOsd,OAAOoC,GAAeI,OAC5CC,EAAY/f,OAAOsd,OAAOsC,GAC7B1f,KAAI,SAAA8f,GAAO,OAAIhgB,OAAOsd,OAAO0C,MAC7BF,OASH,MAPY,sBAAID,GAAJ,YAAqBE,IAAW1O,MAAK,SAAC/R,EAAGgS,GACnD,IAAM+N,EAAQxa,IAAoBvF,GAAKA,EAAEoZ,UAAYpZ,EAAEmS,KAGvD,OAFa5M,IAAoByM,GAAKA,EAAEoH,UAAYpH,EAAEG,MAExC4N,QCpEPY,GAAuB7C,cAClC,SAAC9P,GAAD,OAAkBA,EAAM+N,eACxB,SAACA,GACC,OAAOrb,OAAOsd,OAAOjC,MAIZ6E,GAAqC9C,aAChD6C,IACA,SAACE,GACC,OAAOA,EAAOtT,QAAQwE,MAAK,SAAC/R,EAAGgS,GAC7B,OAAOA,EAAEkC,UAAYlU,EAAEkU,gBAKhB4M,GAAyB,SAACpY,GAAD,OAA8B,SAClEsF,GADkE,OAE/DA,EAAM+N,YAAYrT,KCbVqY,GAAa,SAAC/S,GAAD,OAAkBA,GCStCgT,GAAgB,CACpBpd,IAAK,OACLqd,aACAC,UAAW,CAAC,QACZC,QAAS,EACTC,gBAAiBC,KACjBC,QAASC,aAAczE,GAAY,CACjCtV,OAAOga,KAILC,GAAmBC,aACvBV,GACAW,IAiBIC,GAdkB,WACtB,IAAMC,EAAoBC,YAAgBC,KAEpC9d,EAAQ2B,OAAOoc,6BACjBC,YACER,GAEAS,YAAQL,EAAmBjc,OAAOoc,iCAEpCC,YAAYR,GAAkBI,GAElC,MAAO,CAAE5d,QAAOke,UADAC,aAAane,IAINoe,GAEZpe,GAAQ2d,GAAiB3d,MAEzBke,GAAYP,GAAiBO,UAK7BG,GAAc,SACzBC,GADyB,OAEXC,aAAkCD,IAErCE,GAAc,WACzB,OAAOC,iB,oHCzDHC,EAAoB,CACxBC,IAAK,CACH,WACA,QAEA,eACA,0BAEFC,KAAM,CAAC,6BAA8B,4BACrCC,IAAK,GACLC,OAAQ,IAGJC,EAAc,uCAAG,WAAMC,GAAN,2BAAAjjB,EAAA,sEACG,wCADH,mBACbiE,EADa,EACbA,MACAyC,EAAazC,EAAMI,WAAWC,WAA9BoC,SACAE,EAAW3C,EAAMI,WAAWQ,KAA5B+B,OAEAvG,EAAS4iB,EAAT5iB,KAEFwG,EAAkBH,EAASE,GAEkB,UAA/C4a,mIAAY0B,+BATK,0CAUZD,GAVY,WAahBpc,EAbgB,wBAcnB/F,QAAQqG,KACN,6DACAP,EACAF,GAjBiB,kBAmBZuc,GAnBY,yBAsBU5c,IAA0B,CACvD7E,UAAWqF,EACXnB,QAASjD,KAAKuE,UAAU3G,KAxBL,eAsBfiG,EAtBe,oDA4BhB2c,GA5BgB,IA6BnB5iB,KAAMiG,KA7Ba,4CAAH,sDAiCd6c,EAAe,uCAAG,WAAMxgB,GAAN,6BAAA3C,EAAA,yDACjB2C,EADiB,yCAEbA,GAFa,uBAKE,wCALF,mBAKdsB,EALc,EAKdA,MACA0C,EAAa1C,EAAMI,WAAWC,WAA9BqC,SACAC,EAAW3C,EAAMI,WAAWQ,KAA5B+B,OAEAvG,EAASsC,EAATtC,KAEHgG,IAA8BhG,GAXb,qEAYRsC,GAZQ,IAYEtC,KAAMuC,YAAcD,EAAStC,SAZ/B,WAehByG,EAfgB,UAeEH,EAASC,UAfX,aAeE,EAAkBR,WAfpB,wBAkBpBtF,QAAQqG,KACN,6DACAP,EACAD,GArBkB,kBAuBbhE,GAvBa,yBA0BS0D,IAA0B,CACvDD,WAAYU,EACZR,iBAAkBjG,IA5BE,eA0BhBkG,EA1BgB,oDA+BV5D,GA/BU,IA+BAtC,KAAMkG,KA/BN,4CAAH,sDAkCrBtG,IAAKmjB,aAAaC,QAAQC,IAA1B,uCAA8B,WAAML,GAAN,yBAAAjjB,EAAA,+EAEF,wCAFE,mBAElBiE,EAFkB,EAElBA,MACA8D,EAAc9D,EAAMI,WAAWQ,KAA/BkD,UACAxD,EAAaN,EAAMI,WAAWC,WAA9BC,SACAK,EAAYX,EAAMI,WAAWQ,KAA7BD,SACF2e,EAA2C,IAA5BN,EAAOO,IAAI3M,QAAQ,QAGtCoM,EAAO1U,QAAQC,OAAOC,cAAtB,iBAAgD1G,GAChDkb,EAAO1U,QAAQC,OAAO,wBAA0BjK,EAC5CK,IAEFqe,EAAO1U,QAAQC,OAAO,6BAA+B5J,IAMzDqe,EAAOQ,aAAeR,EAAOQ,cAAgBR,EAAO5iB,MAGlDkjB,GACCZ,EAAkBM,EAAOhY,OAAOyY,eAAeC,SAASV,EAAOO,KAvBxC,kCAyBXR,EAAeC,GAzBJ,0EA4BnBA,GA5BmB,kCA8B1BniB,QAAQiG,MAAR,MA9B0B,0DAA9B,uDAkCA9G,IAAKmjB,aAAazgB,SAAS2gB,IAA3B,uCACE,WAAM3gB,GAAN,SAAA3C,EAAA,+EACSmjB,EAAgBxgB,IADzB,2CADF,6FAIE,WAAMoE,GAAN,yBAAA/G,EAAA,+EAE4B,wCAF5B,uBAEYiE,EAFZ,EAEYA,MAFZ,SAG2Bkf,EAAgBpc,EAAMpE,UAHjD,UAGUA,EAHV,OAIIoE,EAAMpE,SAAWA,IAEU,cAAjB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUtC,KAAKoF,SACf,UAACsB,EAAMkc,OAAOW,eAAd,QAAyB,GAAK,GAPpC,wBASM3f,EAAMlE,SAASyF,aAAiB,IATtC,UAU4Bqe,cAAkB5f,EAAMlE,UAVpD,eAUYya,EAVZ,OAWMzT,EAAMkc,OAAOW,SAAU,UAAC7c,EAAMkc,OAAOW,eAAd,QAAyB,GAAK,EAX3D,kBAYa3jB,IAAK,2BACP8G,EAAMkc,QADA,IAET5iB,KAAM0G,EAAMkc,OAAOQ,aACnBlV,QAAQ,2BACHxH,EAAMkc,OAAO1U,SADX,IAEL,uBAAwBiM,EAAQjW,eAjB1C,iCAqBWtD,QAAQ0G,OAAOZ,IArB1B,wCAuBIjG,QAAQiG,MAAR,MACMA,EAxBV,0DAJF,uDAiCe9G,MAAf,G,iCCzJA,8CAEa+H,EAAMK,YAGhB,iB,0oBCQU7I,EAAU,CACrBuW,sBAAuB,6BACvBQ,cAAe,sBAEfuN,wBAAyB,gCACzBC,0BAA2B,kCAE3B/N,qBAAsB,sBACtBG,WAAY,oBACZG,cAAe,uBACfE,oBAAqB,mBACrBI,kBAAmB,sBACnBG,iBAAkB,yBAClBC,oBAAqB,6BAGVgN,EAAqB,SAChCC,GADgC,IAEhCC,EAFgC,sGAG7B,WAAMnkB,GAAN,eAAAC,EAAA,yDACEkkB,EADF,uBAEG9jB,EAAsC,CACxCY,iBAAkB,KAClBZ,MAAO6jB,GAEJA,IACH7jB,EAAQ,IAPT,SASKH,IAAKC,KAAK,eAAgB,CAC9BC,KAAM,uCACNC,UAXD,OAcHL,EAAS,CACP6B,KAAMpC,EAAQuW,sBACd1V,KAAM4jB,IAhBL,2CAH6B,uDAsBrBE,EAAc,SACzB1N,EACAJ,GAFyB,IAGzB6N,EAHyB,sGAItB,WAAMnkB,GAAN,iBAAAC,EAAA,yDACGokB,EAAW3N,EAAQ4N,SAAS,KAAO5N,EAAQlJ,MAAM,GAAI,GAAKkJ,EAC3DyN,EAFF,uBAGKI,EAAQ7hB,KAAKuE,UAAU,CAAEyP,QAAS2N,EAAU/N,cAHjD,SAIKpW,IAAKC,KAAK,eAAgB,CAC9BC,KAAM,mCACNC,MAAO,CACLY,iBAAkB,KAClBZ,MAAOkkB,KARV,OAYHvkB,EAAS,CACP6B,KAAMpC,EAAQ+W,cACdlW,KAAM,CAAEoW,QAAS2N,EAAU/N,eAd1B,2CAJsB,uDAsBdT,EAAwBvN,YAGlC7I,EAAQskB,yBAEEnO,EAAqBtN,YAE/B,8BAEUkc,EAAsB,SACjC5U,EACA/N,GAFiC,8CAG9B,WAAM7B,GAAN,iBAAAC,EAAA,yDACU,WAAT4B,EADD,mBAEI4iB,YAAoB7U,GAFxB,sBAGO,IAAI8U,UAAJ,wDAHP,uBAQKxkB,IAAKC,KAAK,eAAgB,CAC9BC,KAAK,gCAAD,OAAkCwP,EAAQnP,IAC9CJ,MAAOuP,IAVR,cAaD5P,EACE4V,EAAmB,CACjBvK,KAAMuE,KAfT,kBAmBMA,GAnBN,wBAqBsB1P,IAAKC,KAC1B,eACA,CACEC,KAAM,yBACNC,MAAO,CACLY,iBAAkB,KAClBZ,MAAOqC,KAAKuE,UAAU2I,MA3B3B,wBAqBOtP,EArBP,EAqBOA,KAURN,EACE6V,EAAsB,CACpBjG,UACAkG,IAAKxV,KAlCR,kBAqCMA,GArCN,4CAH8B,uDA4CtByV,EAA0BzN,YACrC7I,EAAQukB,2BAGGW,EAAgB,SAACxiB,EAAKH,EAAOgX,GAAb,8CAAwB,WAAMhZ,GAAN,uBAAAC,EAAA,sEAC5BC,IAAKC,KAAK,sBAAuB,CACtD0B,KAAM,gBACNM,MACAE,GAAIL,EACJM,KAAM,GACNC,SAAU,IACVC,QAASwW,IAPwC,OAUnD,GAVmD,SAC3C1Y,EAD2C,EAC3CA,MAQFskB,EAAYtkB,EAAKmC,SAASG,WACfgiB,EAAUC,iBACzB,IAAWC,KAAaF,EAAUC,iBAC5BlkB,OAAOokB,eAAeC,KAAKJ,EAAUC,iBAAkBC,KACnDlV,EAAUgV,EAAUC,iBAAiBC,GAC3C9kB,EAAS,CACP6B,KAAMpC,EAAQwW,qBACd3V,KAAM,CAAE6V,YAAY,GAAD,OAAKnU,EAAL,kBAAoBgX,GAAUpJ,cAhBN,2CAAxB,uDAsBhBqV,EAAY,SAAC,GAAD,IAErB3O,EAFqB,EAErBA,UACAD,EAHqB,EAGrBA,UACArB,EAJqB,EAIrBA,UACAC,EALqB,EAKrBA,aACAC,EANqB,EAMrBA,gBACAC,EAPqB,EAOrBA,gBACAC,EARqB,EAQrBA,qBACAO,EATqB,EASrBA,cAEFwO,EAXuB,sGAYpB,WAAMnkB,GAAN,SAAAC,EAAA,yDACEkkB,EADF,gCAEKjkB,IAAKC,KAAK,eAAgB,CAC9BC,KAAM,0BACNC,MAAO,CACLY,iBAAkB,KAClBZ,MAAOqC,KAAKuE,UAAU,CACpBqP,YACAD,YACArB,YACAC,eACAC,kBACAC,kBACAC,uBACAO,qBAdL,OAmBH3V,EAAS,CACP6B,KAAMpC,EAAQ2W,WACd9V,KAAM,CACJgW,YACAD,YACArB,YACAC,eACAC,kBACAC,kBACAC,uBACAO,mBA7BD,2CAZoB,uDA6CZuP,EAAe,eAC1Bf,EAD0B,wDAE1BgB,EAF0B,sGAGvB,WAAMnlB,GAAN,SAAAC,EAAA,yDACEklB,GACHC,YAAW,CACTlc,KAAM,mEADRkc,CAEGplB,GAEAmkB,EANF,gCAOKjkB,IAAKC,KAAK,eAAgB,CAC9BC,KAAM,0BACNC,MAAO,CACLY,iBAAkB,KAClBZ,MAAO,aAXV,OAeHL,EAAS,CACP6B,KAAMpC,EAAQ8W,gBAhBb,2CAHuB,uDAsBf8O,EAAoB,SAAC3O,EAAS7J,GAAV,OAAwB,SAAA7M,GACvDA,EAAS,CACP6B,KAAMpC,EAAQgX,oBACdnW,KAAM,CAAEoW,UAAS7J,iBAGRyY,EAAyB,SAAC5O,EAAS7J,GAAV,OAAwB,SAAA7M,GAC5DA,EAAS,CACP6B,KAAMpC,EAAQoX,kBACdvW,KAAM,CAAEoW,UAAS7J,iBAGR0Y,EAAiB,SAAC7O,EAAS7J,GAAV,OAAwB,SAAA7M,GACpDA,EAAS,CACP6B,KAAMpC,EAAQuX,iBACd1W,KAAM,CAAEoW,UAAS7J,iBAUf2Y,EAA8B,kCAEvBC,EAAyB,yDAAM,WAC1CzlB,GAD0C,eAAAC,EAAA,6DAG1Cc,QAAQ0G,MAAR,wCAH0C,SAIfjG,YAAM,CAC/BD,MAAOikB,EACP9jB,WAAW,EACXD,UAAW,KACXE,OAAO,WAAD,4BAAE,WAAOiO,EAAiB/L,GAAxB,eAAA5D,EAAA,kEAEJc,QAAQ0G,MAAR,yBACA1G,QAAQ0G,MAAMmI,GAEK,kBAAR/L,EALP,sBAMI,IAAI6gB,UAAJ,wCAA+C7gB,IANnD,UASC+L,EATD,uBAUF5P,EACE+V,EAAwB,CACtBtV,GAAIoD,KAZN,6BAkBmB,kBAAZ+L,EAlBP,uBAmBI,IAAI8U,UAAJ,kCACuB7gB,EADvB,uBACyCnB,KAAKuE,UAChD2I,GAFE,MAnBJ,WA0BE8V,EAASC,YAAU/V,GAEpBgW,YAAmBF,GA5BpB,uBA6BI,IAAIhB,UAAJ,sEAC2DhiB,KAAKuE,UAClEye,EACA,KACA,KAjCF,QAsCJ1lB,EACE6V,EAAsB,CACpBjG,QAAS8V,EACT5P,IAAK,CACHrV,GAAIoD,EACJtD,IAAI,MA3CN,kDAgDJQ,QAAQiG,MAAR,2CACAjG,QAAQiG,MAAR,MAjDI,0DAAF,qDAAC,KARiC,cAIpC7B,EAJoC,yBA8DnCA,GA9DmC,2CAAN,uDAiEzB0gB,EAA2B,kBAAM,WAC5C9kB,QAAQ0G,MAAR,oCACAF,YAAwBie,KAGbM,EAAsB,yDAAM,WACvC9lB,GADuC,eAAAC,EAAA,6DAGvC8lB,IAAOte,MAAP,qCAHuC,SAIZjG,YAAM,CAC/BD,MAAO,wCACPG,WAAW,EACX4D,QAH+B,SAGvByD,GACNC,MAAM,0CAAD,OAA2CtG,KAAKuE,UAAU8B,KAC/Dgd,IAAO/e,MAAP,0CAAwD+B,IAE1DpH,OAAO,WAAD,4BAAE,WAAO0J,GAAP,SAAApL,EAAA,kEAES,OAAToL,EAFA,oDAKJ0a,IAAOte,MAAP,6BACAse,IAAOte,MAAM4D,GAERoZ,YAAoBpZ,GARrB,sBASI,IAAIqZ,UAAJ,uCAC4BhiB,KAAKuE,UAAUoE,EAAM,KAAM,KAV3D,OAcJrL,EACE4V,EAAmB,CACjBvK,UAhBA,kDAoBJ0a,IAAO/e,MAAP,wCACA+e,IAAO/e,MAAP,MArBI,0DAAF,mDAAC,KAX8B,cAIjC7B,EAJiC,yBAqChCA,GArCgC,2CAAN,wD,kcC1TtB1F,EAAU,CACrBmR,aAAc,sBACdI,cAAe,sBACfQ,kBAAmB,2BACnBC,uBAAwB,+BACxBF,cAAe,uBACfG,cAAe,uBACfC,mBAAoB,2BACpBC,cAAe,uBACfC,mBAAoB,2BACpBZ,WAAY,oBACZC,SAAU,mBACVC,YAAa,sBACbW,yBAA0B,iCAC1Ba,0BAA2B,kCAC3BC,oBAAqB,6BAGV/J,EAAqB,yDAAM,WAAM7I,GAAN,iBAAAC,EAAA,+EAEbC,IAAKkF,IAAL,oBAFa,gBAE5B9E,EAF4B,EAE5BA,KAERN,EAAS,CACP6B,KAAMpC,EAAQmR,aACdtQ,KAAM,CACJiP,eAAgBjP,EAAK0lB,gBACrBxW,iBAAkBlP,EAAK2lB,kBACvBxW,sBAAuBnP,EAAK4lB,2BATI,gDAapCnlB,QAAQiG,MAAR,2EAboC,yDAAN,uDAoBrBmf,EAAe,yDAAM,WAAMnmB,GAAN,mBAAAC,EAAA,+EAEPC,IAAKkF,IAC1B,wDAH4B,gBAEtB9E,EAFsB,EAEtBA,KAGF8lB,EAAe9lB,EAAKA,KAAKmS,OAAO4T,QAAQ,KAAM,IAEpDrmB,EAAS,CACP6B,KAAMpC,EAAQuR,cACd1Q,KAAM8lB,IATsB,gDAY9BrlB,QAAQiG,MAAR,6DAZ8B,yDAAN,uDAgBfsf,EAAoB,SAAC,GAAD,IAC/BzW,EAD+B,EAC/BA,KAD+B,IAE/B0W,oBAF+B,MAEhB,GAFgB,MAG/BC,aAH+B,uDAI3B,WAAOxmB,EAAUsE,GAAjB,mBAAArE,EAAA,qEAEM0P,EAAiBrL,IAAWqM,OAA5BhB,cAGQE,MAAQA,IAAS2W,GAC/B7W,EAAaG,WAAaD,GAN1B,iEAWqB3P,IAAKkF,IAAI,wBAAyB,CACvDqhB,OAAQ,CACN5W,OACA0W,kBAdF,gBAWMjmB,EAXN,EAWMA,KAORN,EAAS,CACP6B,KAAM2kB,EAAQ/mB,EAAQ+R,kBAAoB/R,EAAQgS,uBAClDnR,SApBA,kDAuBFS,QAAQiG,MAAR,2EAvBE,0DAJ2B,yDAkCpB0f,EAAgB,yDAAM,WAAM1mB,GAAN,iBAAAC,EAAA,+EAERC,IAAKkF,IAAI,yBAFD,gBAEvB9E,EAFuB,EAEvBA,KAERN,EAAS,CACP6B,KAAMpC,EAAQ8R,cACdjR,KAAMA,EAAK2P,WANkB,gDAS/BlP,QAAQiG,MAAR,qEAT+B,yDAAN,uDAgBhB2f,EAAa,yDAAM,WAAM3mB,GAAN,iBAAAC,EAAA,+EAELC,IAAKkF,IAAI,sBAFJ,uBAEpB9E,EAFoB,EAEpBA,KAERN,EAAS,CACP6B,KAAMpC,EAAQwR,WACd3Q,KAAMA,EAAK6P,QANe,kBASrB7P,GATqB,sCAW5BS,QAAQiG,MAAR,kFAX4B,8DAAN,uDAmBb4f,EAAgB,SAAC,GAAD,IAC3B/W,EAD2B,EAC3BA,KAD2B,IAE3B0W,oBAF2B,MAEZ,GAFY,MAG3BC,aAH2B,uDAIvB,WAAOxmB,EAAUsE,GAAjB,mBAAArE,EAAA,qEAEMiQ,EAAa5L,IAAWqM,OAAxBT,UAEML,MAAQA,IAAS2W,GAAUtW,EAASJ,WAAaD,GAJ7D,iEAQqB3P,IAAKkF,IAAI,oBAAqB,CACnDqhB,OAAQ,CACN5W,OACA0W,kBAXF,gBAQMjmB,EARN,EAQMA,KAORN,EAAS,CACP6B,KAAM2kB,EAAQ/mB,EAAQiS,cAAgBjS,EAAQkS,mBAC9CrR,SAjBA,kDAoBFS,QAAQiG,MAAR,oEApBE,0DAJuB,yDA+BhB6f,EAA2B,yDAAM,WAAM7mB,GAAN,iBAAAC,EAAA,sEACrBC,IAAKkF,IAAI,uBADY,uBACpC9E,EADoC,EACpCA,KAERN,EAAS,CACP6B,KAAMpC,EAAQqS,yBACdxR,SAL0C,kBAQrCA,GARqC,2CAAN,uDAW3BwmB,EAAc,SAAC,GAAD,IAAGrlB,EAAH,EAAGA,UAAWwC,EAAd,EAAcA,KAAd,8CAAyB,WAAMjE,GAAN,mBAAAC,EAAA,+EAE1CC,IAAKC,KAAK,uBAAwB,CACtC4mB,OAAQtlB,EACRwC,KAAMA,IAJwC,OAO1C+iB,EAAU,CACd1V,QAAS7P,EACTwlB,QAAShjB,EACTijB,WAAY,EACZC,WAAY,EACZC,SAAU,EACVC,SAAU,EACVC,SAAS,GAGXtnB,EAAS,CACP6B,KAAMpC,EAAQyR,SACd5Q,KAAM0mB,IAnBwC,sDAsBhDjmB,QAAQiG,MAAR,qDACgD/C,EADhD,oCACgFxC,EADhF,+BAtBgD,gDA0B1C,KAAKmB,gBA1BqC,aA0B1C,EAAetC,YA1B2B,sEAAzB,uDA8BdinB,EAAc,SAAC,GAAD,QACzB9lB,iBADyB,MACb,GADa,MAEzB+lB,uBAFyB,MAEP,EAFO,MAGzBC,kBAHyB,MAGZ,EAHY,gDAIrB,WAAOznB,EAAUsE,GAAjB,uBAAArE,EAAA,wEAEyBqE,IAAWkT,KAA9BJ,EAFN,EAEMA,SAAUD,EAFhB,EAEgBA,KAFhB,SAGIjX,IAAKC,KAAK,uBAAwB,CACtC4mB,OAAQtlB,EACR+lB,gBAAiBA,EAAgBzW,WACjC2W,kBAAmBD,EAAW1W,WAC9B4W,WAAYvQ,EAASD,KAPrB,OAUFnX,EAAS0mB,KAVP,sDAYF3lB,QAAQiG,MAAR,uFACkFvF,EADlF,uCAC0H+lB,EAD1H,qCACsKC,EADtK,eAZE,gDAgBI,KAAK7kB,gBAhBT,aAgBI,EAAetC,YAhBnB,sEAJqB,yDAwBdsnB,EAAqB,yDAAM,WAAM5nB,GAAN,qBAAAC,EAAA,+EAEbC,IAAKkF,IAAI,oBAFI,gBAE5B9E,EAF4B,EAE5BA,KACRN,EAAS,CACP6B,KAAMpC,EAAQmT,oBACdtS,SALkC,sDAQpCS,QAAQiG,MAAR,MARoC,gDAS9B,KAAKpE,gBATyB,aAS9B,EAAetC,YATe,sEAAN,wD,wTChM5BunB,EAAqB,CACzB,OACA,aACA,cACA,oBACA,YAOWC,EAAwB,SAACznB,GACpC,OAAO0nB,SAAOpkB,KAAKtD,EAAO,WAOf2nB,EAAwB,SAAC3nB,GACpC,OAAO0nB,SAAOpkB,KAAKtD,GAAO0Q,SAAS,WAGxBkX,EAAa,SAACpkB,GACzB,OAAIkkB,SAAOG,SAASrkB,GACXA,EAGYikB,EAAsBjkB,IAIhCskB,EAAoC,SAC/C5hB,GAEA,GACyC,kBAAhCA,EAAiB6hB,YACO,kBAAxB7hB,EAAiB8hB,IACQ,kBAAzB9hB,EAAiB+hB,KACmB,kBAApC/hB,EAAiBgiB,eAGxB,OAAOhiB,EAGT,GACEwhB,SAAOG,SAAS3hB,EAAiB6hB,aACjCL,SAAOG,SAAS3hB,EAAiB8hB,KACjCN,SAAOG,SAAS3hB,EAAiB+hB,MACjCP,SAAOG,SAAS3hB,EAAiBgiB,gBAEjC,MAAO,CACLH,WAAYJ,EAAsBzhB,EAAiB6hB,YACnDC,GAAIL,EAAsBzhB,EAAiB8hB,IAC3CC,IAAKN,EAAsBzhB,EAAiB+hB,KAC5CC,eAAgBP,EAAsBzhB,EAAiBgiB,iBAI3D,MAAM,IAAIC,IAAW,CACnB9iB,MAAO,mBACPC,QAAS,sCAIA8iB,EAA4B,SACvCliB,GAEA,GACEwhB,SAAOG,SAAS3hB,EAAiB6hB,aACjCL,SAAOG,SAAS3hB,EAAiB8hB,KACjCN,SAAOG,SAAS3hB,EAAiB+hB,MACjCP,SAAOG,SAAS3hB,EAAiBgiB,gBAGjC,OAAOhiB,EAGT,GACyC,kBAAhCA,EAAiB6hB,YACO,kBAAxB7hB,EAAiB8hB,IACQ,kBAAzB9hB,EAAiB+hB,KACmB,kBAApC/hB,EAAiBgiB,eAExB,MAAO,CACLH,WAAYN,EAAsBvhB,EAAiB6hB,YACnDC,GAAIP,EAAsBvhB,EAAiB8hB,IAC3CC,IAAKR,EAAsBvhB,EAAiB+hB,KAC5CC,eAAgBT,EAAsBvhB,EAAiBgiB,iBAI3D,MAAM,IAAIC,IAAW,CACnB9iB,MAAO,mBACPC,QAAS,sCAIA+iB,EAAqB,SAAC/iB,GAAD,OACzB,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASyiB,cAAT,OAAuBziB,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAS0iB,MAAhC,OAAsC1iB,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAS2iB,OAA/C,OAAsD3iB,QAAtD,IAAsDA,OAAtD,EAAsDA,EAAS4iB,iBAEpDI,EAAiB,SAACjiB,GAAD,OAC5BmhB,EAAmBjE,SAASld,IACmB,UAA/C+a,mIAAY0B,gCAEDyF,EAAkB,WAC7B,IAAMviB,EAAqBwiB,IAASC,kBAC9BrnB,EAAoBonB,IAASE,UAAU1iB,GAK7C,MAAO,CACLA,aACA5E,YACAunB,iBANuBhB,EAAsB3hB,GAO7C4iB,gBANsBjB,EAAsBvmB,KAUnCynB,EAAc,uCAAG,yCAAAjpB,EAAA,6DAC5BwB,EAD4B,EAC5BA,UAD4B,IAE5BkE,eAF4B,MAElB,GAFkB,EAItBwjB,EAAqBlB,EAAWxmB,GA7GJpB,EA8GQsF,EAApCyjB,EA7GCrB,SAAOpkB,KAAKtD,EAAO,SAwGE,SAMqBwoB,IAASQ,QACxDF,EACAC,GAR0B,cAMtB7iB,EANsB,OAUtB+iB,EAA2B,CAC/BlB,WAAY7hB,EAAiB6hB,WAC7BC,GAAI9hB,EAAiB8hB,GACrBC,IAAK/hB,EAAiB+hB,IACtBC,eAAgBhiB,EAAiBgiB,gBAdP,kBAiBrBJ,EAAkCmB,IAjBb,iCAzGK,IAACjpB,IAyGN,OAAH,sDAoBdkpB,EAAc,uCAAG,yCAAAtpB,EAAA,6DAC5BoG,EAD4B,EAC5BA,WACAE,EAF4B,EAE5BA,iBAF4B,SAKpBijB,EAAsBvB,EAAW5hB,GALb,SAMmBwiB,IAASY,QACpDD,EACAf,EAA0BliB,IARF,cAMpBmjB,EANoB,OAUpBljB,EAAmBkjB,EAAuB3Y,SAAS,SACnD4Y,EAAgB9mB,YAAc2D,GAXV,kBAanBmjB,GAbmB,wCAeS,aAA/B,eAAIhkB,eAAJ,eAAaikB,gBACf7oB,QAAQqG,KACN,WADF,KAGEqhB,EAA0BliB,IAnBJ,+DAAH,uD,6sBChKd9G,EAAU,CACrBoqB,WAAY,aACZhQ,WAAY,mBACZI,cAAe,sBACfC,cAAe,sBACf4P,WAAY,kBACZC,cAAe,iBACfC,iBAAkB,oBAClBC,iBAAkB,wBAClBC,YAAa,oBACb9P,YAAa,cACbC,sBAAuB,kBAGZ8P,EAAe,SAAAtmB,GAAG,OAAI,SAAA7D,GAAQ,OACzCA,EAAS,CACP6B,KAAMpC,EAAQwa,cACd3Z,KAAMuD,MAGGumB,EAAY,SAAArQ,GAAM,OAAI,SAAA/Z,GAAQ,OACzCA,EAAS,CACP6B,KAAMpC,EAAQoa,WACdvZ,KAAMyZ,MAGG7B,EAAc5P,YAGxB,oBAEUiQ,EAAejQ,YAIzB,qBAEU+hB,EAAgB,SAAClS,EAAgBa,GAAjB,OAAoC,SAC/DhZ,GAEA,IACE,IAAMmF,EAAe3D,YAAM,CACzBD,MAAM,GAAD,OAAK4W,EAAL,mBAAsBa,EAAtB,QACLrX,OAFyB,SAElBxB,GACDqd,IAAiBrd,GACnBH,EACEuY,EAAa,CACXJ,SACA1X,GAAIuY,EACJ7Y,UAGc,OAATA,GACTH,EACEkY,EAAY,CACVC,SACA1X,GAAIuY,MAKZ1T,QApByB,SAoBjByD,GACNN,IAAazB,MAAb,uCACkCgS,EADlC,oBACoDb,EAAO3K,OACtD,GAFL,QAIEzE,GAEFC,MAAM,gCAAD,OAC6BgQ,EAD7B,oBAC+Cb,EAAO3K,OACtD,GAFA,aAGGzE,EAAEpD,aAKd,OAAO,WACLR,EAAa0C,MAAK,SAAAiB,GAChBA,EAAI7C,UAGR,MAAO8C,GAWP,OAVAN,IAAazB,MAAb,uCACkCgS,EADlC,oBACoDb,EAAO3K,OAAO,GADlE,QAEEzE,GAEFC,MAAM,gCAAD,OAC6BgQ,EAD7B,oBAC+Cb,EAAO3K,OAAO,GAD7D,aAEDzE,EAAEpD,UAIC,gBAIE2kB,EAAqB,SAAC7oB,GAAD,OAAuB,SACvDzB,GAEA,IACE,IAAMmF,EAAe3D,YAAM,CACzBD,MAAM,GAAD,OAAKE,EAAL,mBACL6D,QAFyB,SAEjByD,GACNN,IAAazB,MAAb,iDAC4CvF,EAAU+L,OAAO,GAD7D,QAEEzE,GAEFC,MAAM,0CAAD,OACuCvH,EAAU+L,OAAO,GADxD,aAEDzE,EAAEpD,WAIRhE,OAAQ,SAACxB,EAAe6Y,GAClBwE,IAAiBrd,GACnBH,EACEuY,EAAa,CACXJ,OAAQ1W,EACRhB,GAAIuY,EACJ7Y,UAGc,OAATA,EACTH,EACEkY,EAAY,CACVC,OAAQ1W,EACRhB,GAAIuY,KAIRvQ,IAAazB,MAAb,4CACuCvF,EAAU+L,OAC5C,GAFL,sBAIErN,MAMR,OAAO,WACLgF,EAAa0C,MAAK,SAAAiB,GAChBA,EAAI7C,UAGR,MAAO8C,GAOP,OANAN,IAAazB,MAAb,wCACmCvF,EAAU+L,OAAO,GADpD,QAEEzE,GAEFC,MAAM,iCAAD,OAAkCvH,EAAU+L,OAAO,GAAnD,aAA0DzE,EAAEpD,UAE1D,gBAIEmT,EAAsBxQ,YAKhC,4BAEUiiB,EAAiB,SAACpS,EAAgBa,GAAjB,OAAoC,SAChEhZ,GAEA,IACE,IAAMmF,EAAe3D,YAAM,CACzBD,MAAM,GAAD,OAAK4W,EAAL,mBAAsBa,EAAtB,yBACLrX,OAFyB,SAElBoX,EAAsBtY,GAEvB+E,IAAqBuT,GACvB/Y,EACE8Y,EAAoB,CAClBX,SACAY,cACAtY,KACAuY,YAIJvQ,IAAazB,MAAb,gCAC2BvG,EAD3B,iDACsE0X,EAAO3K,OACxE,GAFL,qBAGgBwL,EAHhB,QAIED,IAINzT,QAtByB,SAsBjByD,GACNN,IAAazB,MAAb,yDACoDmR,EAAO3K,OACtD,GAFL,qBAGgBwL,EAHhB,QAIEjQ,GAEFC,MAAM,kDAAD,OAC+CmP,EAAO3K,OACtD,GAFA,qBAGWwL,EAHX,aAGsBjQ,EAAEpD,aAIjC,OAAO,WACLR,EAAa0C,MAAK,SAAAiB,GAChBA,EAAI7C,UAGR,MAAO8C,GAaP,OAZAN,IAAazB,MAAb,gDAC2CmR,EAAO3K,OAC7C,GAFL,qBAGgBwL,EAHhB,QAIEjQ,GAEFC,MAAM,kCAAD,OAC+BmP,EAAO3K,OAAO,GAD7C,qBAC4DwL,EAD5D,aAEDjQ,EAAEpD,UAIC,gBAIL6kB,EAAgB,yBAETC,EAAmB,yDAAM,WAAMzqB,GAAN,eAAAC,EAAA,sEACTuB,YAAM,CAC/BD,MAAOipB,EACP9oB,WAAW,EACXC,OAAO,WAAD,4BAAE,WAAOoY,EAAQlW,GAAf,SAAA5D,EAAA,yDACNc,QAAQ2pB,KAAR,qBACA3pB,QAAQ2pB,KAAK3Q,GACM,kBAARlW,EAHL,uBAIJ9C,QAAQqG,KAAR,uCAA6CvD,IAJzC,6BAQDkW,EARC,uBASJ/Z,EAASmqB,EAAatmB,IATlB,6BAaqB,kBAAhBkW,EAAOC,KAbZ,wBAcJjZ,QAAQqG,KAAR,wCAA8C2S,EAAOC,KAArD,MAdI,2BAkBNha,EAASoqB,EAAUrQ,IAlBb,4CAAF,qDAAC,KAJ2B,cAC9B5U,EAD8B,OA0BpCpE,QAAQ0G,MAAM,mBA1BsB,kBA4B7BtC,GA5B6B,2CAAN,uDA+BnBwlB,EAAqB,kBAAM,WACtC5pB,QAAQ0G,MAAM,qBACdF,YAAwBijB,KAGbI,EAAc,SAAC,GAAD,IACzBnpB,EADyB,EACzBA,UACA8J,EAFyB,EAEzBA,OACAkH,EAHyB,EAGzBA,OAHyB,8CAIrB,WAAMzS,GAAN,iBAAAC,EAAA,sEACmBC,IAAKC,KAAK,sBAAuB,CACtD0B,KAAM,MACNM,IAAKsQ,EACLpQ,GAAIZ,EACJa,KAAM,eACNC,SAAmB,KAATkQ,EAAiB,GAC3BjQ,QAAS+I,IAPP,gBACIjL,EADJ,EACIA,KAQRS,QAAQC,IAAIV,GACZN,EAAS,CACP6B,KAAMpC,EAAQyqB,YACd5pB,KAAM,CACJmB,YACA8J,SACAkH,YAfA,2CAJqB,uDAwBdoY,EAAiB,SAAC,GAAD,IAAGpqB,EAAH,EAAGA,GAAIgY,EAAP,EAAOA,SAAP,MAAuB,CACnD5W,KAAMpC,EAAQuqB,iBACd1pB,KAAM,CACJG,KACAgY,cAISqS,EAAa,iBAAO,CAC/BjpB,KAAMpC,EAAQ2a,cAGH2Q,EAAgB,SAAClT,GAAD,MAA+B,CAC1DhW,KAAMpC,EAAQ4a,sBACd/Z,KAAMuX,IAKKoB,EAAoB3Q,YAG9B,0BAEU6Q,EAAqB7Q,YAK/B,2BAEU0iB,EAAiB,SAAC9R,GAAD,OAA6B,SACzDlZ,GAEA,IACE,IAAMmF,EAAe3D,YAAM,CACzBD,MAAM,GAAD,OAAK2X,EAAL,yBACL5T,QAFyB,SAEjByD,GACNN,IAAazB,MAAb,wDACmDkS,EAAgB1L,OAC9D,GAFL,QAIEzE,GAEFC,MAAM,iDAAD,OAC8CkQ,EAAgB1L,OAC9D,GAFA,aAGGzE,EAAEpD,WAGZhE,OAAQ,SAACspB,EAAqBjS,GACxBxT,IAAuBylB,GACzBjrB,EACEmZ,EAAmB,CACjBC,eAAgB6R,EAAW7R,eAC3BJ,SACAK,UAAW4R,EAAW5R,UACtBH,qBAGoB,OAAf+R,EACTjrB,EACEiZ,EAAkB,CAChBD,SACAE,qBAIJzQ,IAAazB,MAAb,mDAC8CkS,EAAgB1L,OACzD,GAFL,sBAIEyd,MAMR,OAAO,WACL9lB,EAAa0C,MAAK,SAAAiB,GAChBA,EAAI7C,UAGR,MAAO8C,GAWP,OAVAN,IAAazB,MAAb,+CAC0CkS,EAAgB1L,OAAO,GADjE,QAEEzE,GAEFC,MAAM,wCAAD,OACqCkQ,EAAgB1L,OAAO,GAD5D,aAEDzE,EAAEpD,UAIC,gBAME8T,EAAkBnR,YAK5B,wBAEU4iB,EAAc,SAAC/S,EAAgBa,GAAjB,OAAoC,SAC7DhZ,GAEA,IACE,IAAMmF,EAAe3D,YAAM,CACzBD,MAAM,GAAD,OAAK4W,EAAL,mBAAsBa,EAAtB,oBACLrX,OAFyB,SAElB+X,EAAiBC,GACtB,IAAMwR,EAAa/oB,OAAOsX,GACrB0R,MAAMD,GAUT1iB,IAAazB,MAAb,eACUgS,EADV,4BACoCW,EADpC,6BAEED,GAXF1Z,EACEyZ,EAAgB,CACdtB,SACAa,SACAU,OAAQyR,EACRxR,cAYV,OAAO,WACLxU,EAAa0C,MAAK,SAAAiB,GAChBA,EAAI7C,UAGR,MAAO8C,GAYP,OAXAN,IAAazB,MAAb,0DACqDmR,EAAO3K,OACvD,GAFL,oBAGewL,EAHf,QAIEjQ,GAEFC,MAAM,mDAAD,OACgDmP,EAAO3K,OACvD,GAFA,oBAGUwL,EAHV,aAGqBjQ,EAAEpD,UAErB,iB,gaCvbElG,EAAU,CACrB0O,gBAAiB,aACjBC,YAAa,cACbC,YAAa,cACbC,uBAAwB,yBACxB+c,sBAAuB,wBACvBC,gBAAiB,cACjBzc,qBAAsB,0BACtBhE,aAAc,iBACdiE,kBAAmB,yBASRyc,EAAY,SAAA1kB,GAAM,OAAI,SAAA7G,GACjCA,EAAS,CACP6B,KAAMpC,EAAQ4O,YACd/N,KAAMuG,MAIG2kB,EAAkB,SAAC9d,EAAQ7I,GAAT,8CAAqB,WAAM7E,GAAN,qBAAAC,EAAA,sEAE1CuO,EAAU,GACZ3J,IACF2J,EAAQ,6BAA+B3J,GAJO,SAMzB3E,IAAKkF,IAAL,UAAYsI,EAAZ,YAA8B,CACnDc,YAP8C,mBAMxClO,EANwC,EAMxCA,KANwC,sBAUxC,IAAImrB,MAAJ,0EAVwC,cAehD,UAAInrB,EAAKorB,iBAAT,aAAI,EAAgB/lB,UAClB3F,EAAS,CACP6B,KAAMpC,EAAQ4rB,sBACd/qB,MAAM,IAlBsC,kBAsBzCA,GAtByC,kCAwBhDS,QAAQC,IAAR,sDACAD,QAAQC,IAAR,MACAhB,EAAS,CACP6B,KAAMpC,EAAQ4rB,sBACd/qB,MAAM,IA5BwC,0DAArB,uDAiClBqrB,EAAwB,yDAAM,WAAM3rB,GAAN,qBAAAC,EAAA,sEAClBC,IAAKkF,IAAI,0BADS,mBACjC9E,EADiC,EACjCA,KACAsrB,EAA+BtrB,EAA/BsrB,aAAcC,EAAiBvrB,EAAjBurB,cAElBD,EAJqC,uBAKvC5rB,EAAS,CACP6B,KAAM+M,IAAanE,cACnBnK,KAAuB,WAAjBurB,EAA4B,eAAiB,YAPd,kBAShCA,GATgC,cAYzC7rB,EAAS,CACP6B,KAAM+M,IAAanE,cACnBnK,KAAM,iBAdiC,kBAiBlC,gBAjBkC,4CAAN,uDAoBxBwrB,EAAc,SACzBpe,GADyB,IAEzBqe,IAFyB,yDAGzBlnB,EAHyB,uDAGf,KACVmJ,EAJyB,uDAIV,KAJU,8CAKtB,WAAMhO,GAAN,qBAAAC,EAAA,6DACC8rB,IACF/rB,EAAS,CACP6B,KAAMpC,EAAQ0O,kBAEhBnO,EAAS,CACP6B,KAAM+M,IAAapE,mBAGjBwhB,EATH,+BAAA/rB,EAAA,MASU,WAAOgE,EAAMgoB,GAAb,SAAAhsB,EAAA,6DACXC,IAAKqO,SAAS2d,QAAd,UAA2BjoB,GACvBY,GACF7E,EAASmsB,EAAWtnB,IAElBmJ,GACFhO,EAASosB,EAAgBpe,IAE3BhO,EAAS,CACP6B,KAAMpC,EAAQ2O,YACd9N,KAAM2D,IAVG,SAaL/C,QAAQR,IAAI,CAChBV,EAAS2rB,KACT3rB,EAAS8jB,iBAfA,OAkBX9f,YAAcC,GAAM,GAlBT,2CATV,wDA+BGooB,EAAkB3e,EAAO2Y,QAAQ,iBAAkB,IA/BtD,kBAiCuBmF,EAAgB,WAAD,OAC1Ba,GACXxnB,EAFsB2mB,CAGtBxrB,GApCD,YAiCDssB,EAjCC,gCAsCCA,EAAgBC,mBAAhB,kBAAgDF,GAtCjD,UAuCOL,EAAK,WAAD,OAAYK,GAAmBC,GAvC1C,iCAwCQA,GAxCR,0DA2CDvrB,QAAQC,IAAR,MA3CC,eA8CHD,QAAQiG,MAAM,oDA9CX,UA+CsBwkB,EAAgB,UAAD,OAC5Ba,GACVxnB,EAFuB2mB,CAGvBxrB,GAlDC,eA+CGwsB,EA/CH,QAmDQD,mBAAX,iBAA0CF,GAnDvC,UAoDGL,EAAK,UAAD,OAAWK,GAAmBG,GApDrC,iCAqDIF,GAAmBE,GArDvB,0DALsB,uDA6DdC,EAAe,SAAC,GAAD,IAC1B9e,EAD0B,EAC1BA,MACA+e,EAF0B,EAE1BA,SACA1e,EAH0B,EAG1BA,aAH0B,8CAItB,WAAMhO,GAAN,mBAAAC,EAAA,+EAEqBC,IAAKC,KAAK,gBAAiB,CAChDwN,QACA+e,WACA1e,iBALA,uBAEM1N,EAFN,EAEMA,KAMRN,EAASyF,aAAiB,IACpBknB,EAAeC,YAAUtsB,EAAKusB,eACpC7sB,EAAS,CACP6B,KAAMpC,EAAQ6O,uBACdhO,KAAM,CACJqN,MAAOrN,EAAK0Z,KAAKrM,MACjB3F,UAAW1H,EAAKusB,cAChBprB,UAAWnB,EAAK0Z,KAAKvY,UAErBmM,wBAAyB+e,EAAaG,OAjBxC,kBAoBKxsB,GApBL,wCAsBFN,EAASyF,aAAiB,IACpBsnB,YAAW,EAAD,IAvBd,0DAJsB,uDA+BfC,EAAc,SAAC,GAAD,IACzBrf,EADyB,EACzBA,MACA+e,EAFyB,EAEzBA,SACA1e,EAHyB,EAGzBA,aAHyB,8CAIrB,WAAMhO,GAAN,mBAAAC,EAAA,+EAEqBC,IAAKC,KAAK,2BAA4B,CAC3DwN,QACA+e,WACA1e,iBALA,uBAEM1N,EAFN,EAEMA,KAKRN,EAASyF,aAAiB,IACpBknB,EAAeC,YAAUtsB,EAAKusB,eACpC7sB,EAAS,CACP6B,KAAMpC,EAAQ6O,uBACdhO,KAAM,CACJqN,MAAOrN,EAAK0Z,KAAKrM,MACjB3F,UAAW1H,EAAKusB,cAChBprB,UAAWnB,EAAK0Z,KAAKvY,UAErBmM,wBAAyB+e,EAAaG,OAhBxC,UAmBI5sB,IAAKC,KAAK,2BAA4B,IAnB1C,iCAoBKG,GApBL,wCAsBFN,EAASyF,aAAiB,IACpBsnB,YAAW,EAAD,IAvBd,0DAJqB,uDA+BdE,EAAe,SAAC,GAAD,IAAGtf,EAAH,EAAGA,MAAO+e,EAAV,EAAUA,SAAV,8CAAyB,WAAM1sB,GAAN,mBAAAC,EAAA,+EAE1BC,IAAKC,KAAK,kBAAmB,CAClDwN,QACA+e,aAJ+C,uBAEzCpsB,EAFyC,EAEzCA,KAIRN,EAASyF,aAAiB,IACpBknB,EAAeC,YAAUtsB,EAAKusB,eACpC7sB,EAAS,CACP6B,KAAMpC,EAAQ6O,uBACdhO,KAAM,CACJqN,MAAOrN,EAAK0Z,KAAKrM,MACjB3F,UAAW1H,EAAKusB,cAChBprB,UAAWnB,EAAK0Z,KAAKvY,UAErBmM,wBAAyB+e,EAAaG,OAfO,UAkB3C5sB,IAAKC,KAAK,2BAA4B,IAlBK,iCAmB1CG,GAnB0C,wCAqBjDN,EAASyF,aAAiB,IACpBsnB,YAAW,EAAD,IAtBiC,0DAAzB,uDA0BfG,EAAqB,SAAAC,GAAM,OAAI,SAAAntB,GAC1CA,EAAS,CACP6B,KAAMpC,EAAQoP,qBACdvO,KAAM6sB,MAIGhB,EAAa,SAAAtnB,GAAO,MAAK,CACpChD,KAAMpC,EAAQoL,aACdvK,KAAMuE,IAGKunB,EAAkB,SAAApe,GAAY,MAAK,CAC9CnM,KAAMpC,EAAQqP,kBACdxO,KAAM0N,K,+XC/KKof,EAAoB,SAACC,GAChC,IAAK7nB,IAAa6nB,GAChB,OAAO,EAGT,IAAMC,EAAOD,EAEb,QAAK7nB,IAAyB8nB,EAAIC,UAI7B/nB,IAAyB8nB,EAAI3pB,UAI7B6B,IAAyB8nB,EAAIpa,sBAI7B1N,IAAyB8nB,EAAI7sB,QAI7B+E,IAAyB8nB,EAAIzO,qBAI7BrZ,IAAyB8nB,EAAIE,gBAIL,kBAAlBF,EAAInZ,gBAuDJsZ,EAAU,SAACJ,GACtB,IAAK7nB,IAAa6nB,GAChB,OAAO,EAGT,IAAMC,EAAOD,EAEb,QAAK7nB,IAAyB8nB,EAAII,wBAI7BloB,IAAyB8nB,EAAI7sB,KAI3B+E,IAAyB8nB,EAAI7O,QAYzBkP,EAAa,SAACN,GACzB,IAAK7nB,IAAa6nB,GAChB,OAAO,EAGT,IAAMC,EAAOD,EAEb,QAAK7nB,IAAyB8nB,EAAIpZ,UAI7B1O,IAAyB8nB,EAAIxZ,aAI7BtO,IAAyB8nB,EAAI7sB,KAIL,kBAAlB6sB,EAAInZ,aAuBJyR,EAAqB,SAACyH,GACjC,IAAK7nB,IAAa6nB,GAChB,OAAO,EAET,IAAMC,EAAOD,EAEb,MAA+B,kBAApBC,EAAIM,cAGW,kBAAfN,EAAI9jB,SAGU,kBAAd8jB,EAAI7hB,UAGVjG,IAAyB8nB,EAAI1U,SAGjB,mBAAb0U,EAAIzrB,MAA0C,mBAAbyrB,EAAIzrB,UAqB9B4iB,EAAsB,SAAC4I,GAClC,IAAKzH,EAAmByH,GACtB,OAAO,EAET,IAAMC,EAAOD,EAEb,QAAK7nB,IAAyB8nB,EAAInV,SAIF,kBAAlBmV,EAAInZ,WAoCP0Z,EAvTW,SACtBC,GADsB,IAEtBC,EAFsB,uDAEmB,kBAAM,GAFzB,OAGnB,SAACV,GACJ,QAAK7nB,IAAa6nB,OAIbU,EAAcV,IAIZ1sB,OAAOC,QAAQktB,GAAQE,OAAM,YAAuB,IAAD,mBAApBnqB,EAAoB,KACxD,OAAOoqB,EADiD,MACvCZ,EAAExpB,SA0SEqqB,CAAyB,CAChD9b,K,OAAM+b,EACNrjB,OAAQtF,IACRmT,KAAM,SAACyV,GAAD,MAAgC,kBAARA,GAC9BxV,MAAOpT,O,kxBCjTIwN,EAA0B1K,YAEpC,2BAMU+lB,EAA6B,kBAAM,SAC9CruB,GAEAyI,IAAahB,MAAb,6CACA,IACE,OAAOjG,YAAM,CACXD,MAAM,qCACNI,OAAQ,SAAAuR,GACNzK,IAAahB,MAAb,8CACyCyL,IAGpC1N,IAAyB0N,GAQ9BlT,EACEgT,EAAwB,CACtBE,sBATFzK,IAAazB,MAAb,8CAEEtE,KAAKuE,UAAUiM,OAYvB,MAAOnK,GACPC,MAAM,oEAAD,OACiED,EAAEpD,UAExE8C,IAAazB,MAAb,mEAEE+B,MASOuK,EAA2BhL,YAErC,iCAKUkM,EAA0BlM,YAEpC,gCAMUgmB,EAAmB,SAACpb,GAAD,OAA8B,SAC5DlT,EACAsE,GAEAmE,IAAahB,MAAb,yCAAqDyL,EAArD,OACA,IACE,OAAO1R,YAAM,CACXD,MAAM,wBAAD,OAA0B2R,EAA1B,YACLvL,UAAW,OACXhG,OAAQ,SAAC4sB,EAA0C9tB,GACjDgI,IAAahB,MAAb,0CACqCyL,EADrC,QAEEqb,GAH8D,IAMtDnb,EACN9O,IADFuO,KAAQO,wBAEV3K,IAAahB,MAAb,2BAAuC2L,IACnCF,IAAqBE,IAGrBoK,IAAyB+Q,GAC3BvuB,EACEsT,EAAyB,CACvBC,gBAAiBgb,KAGS,OAArBA,EACTvuB,EACEwU,EAAwB,CACtB/T,QAIJgI,IAAahB,MAAb,8BAAkD8mB,OAIxD,MAAOxlB,GACPC,MAAM,sEAAD,OACmEkK,EADnE,cACyFnK,EAAEpD,UAEhG8C,IAAazB,MAAb,6EACwEkM,EADxE,OAEEnK,MASAylB,EAAiC,SACrCC,EACAhtB,EACA8rB,EACAmB,GAEA,IAAMC,EAAQrU,cA6Cd,MAlCI,CACF7Z,GAAIguB,EAEJhQ,KAAM,CACJxd,iBAAkB,KAClBZ,MAAOoB,GAGTmtB,SAAU,CACR3tB,iBAAkB,KAClBZ,MAAOktB,GAGTG,mBAAoB,CAClBzsB,iBAAkB,KAClBZ,MAAOquB,GAGTG,SAAS,eACNF,EAAQ,CACPluB,GAAIkuB,EACJza,KAAM,CACJjT,iBAAkBQ,EAClBqtB,cAAevB,EACfltB,MAAOmF,KAET2O,UAAWC,KAAKC,MAChBP,QAAS2a,EACTxgB,MAAO,KACPnL,IAAK,OAQAisB,EAAyB,SAACC,GAAD,8CAAuB,WAC3DvP,EACAnb,GAF2D,eAAArE,EAAA,6DAMrD2e,EAA8Bta,IAAWuO,KAAKQ,iBAClD2b,GAPyD,SAUrDvmB,IAAWtI,KAAX,eAAgC,CACpCC,KAAK,gBAAD,OAAkBwe,EAAIC,iBAC1Bxe,MAAOmuB,EACL5P,EAAIC,gBACJD,EAAIjb,KACJib,EAAI2O,KACJ3O,EAAI4O,iBAhBmD,OAoB3D/kB,IAAWtI,KAAX,eAAgC,CAC9BC,KAAK,uBAAD,OAAyBwe,EAAI1L,iBAA7B,YAAiD0L,EAAIne,IACzDJ,MAAO,OAtBkD,2CAAvB,yDA0BzB4uB,EAAuB,SAACxtB,GAAD,8CAAuB,WACzDge,EACAnb,GAFyD,qCAAArE,EAAA,6DAIzDwI,IAAahB,MAAb,uCACkChG,EAAU+L,MAAM,EAAG,GADrD,QAGM0hB,EAAQ1pB,KAA2B,SAACsQ,EAAKqZ,GAC7C,IAAMhqB,EAAe3D,YAAM,CACzBG,OADyB,SAClB4rB,GACL9kB,IAAahB,MAAb,kCAC6BhG,EAAU+L,MAAM,EAAG,GADhD,iBAC2D+f,IAEvD/nB,IAAyB+nB,IAC3BpoB,EAAa0C,MAAK,SAAAiB,GAAG,OAAIA,EAAI7C,SAC7B6P,EAAIyX,KAEJ9kB,IAAahB,MAAb,8CACyChG,EAAU+L,MAC/C,EACA,GAHJ,iBAIY+f,IAEZpoB,EAAa0C,MAAK,SAAAiB,GAAG,OAAIA,EAAI7C,SAC7BkpB,EAAI,IAAIzK,UAAJ,2BAGRnjB,MAAM,GAAD,OAAKE,EAAL,cACL6D,QApByB,SAoBjByD,GACNN,IAAahB,MAAb,+CAC0ChG,EAAU+L,MAChD,EACA,GAHJ,iBAIY+f,IAEZ9kB,IAAazB,MAAM+B,GAEjBomB,EADe,kBAANpmB,EACL,IAAI0iB,MAAM1iB,GAEVA,SAMNqmB,EAAoB5pB,KAA2B,SAACsQ,EAAKqZ,GACzD,IAAMhqB,EAAe3D,YAAM,CACzBG,OADyB,SAClBuR,GACD1N,IAAyB0N,IAC3B4C,EAAI5C,GACJ/N,EAAa0C,MAAK,SAAAiB,GAAG,OAAIA,EAAI7C,WAE7BkpB,EAAI,IAAIzK,UAAJ,yBACJvf,EAAa0C,MAAK,SAAAiB,GAAG,OAAIA,EAAI7C,WAGjC1E,MAAM,GAAD,OAAKE,EAAL,iCACL6D,QAXyB,SAWjByD,GAEJomB,EADe,kBAANpmB,EACL,IAAI0iB,MAAM1iB,GAEVA,SAMNsmB,EAAY7pB,KAA2B,SAACsQ,EAAKqZ,GACjD,IAAMhqB,EAAe3D,YAAM,CACzBG,OADyB,SAClB4rB,GACD/nB,IAAyB+nB,IAC3BzX,EAAIyX,GACJpoB,EAAa0C,MAAK,SAAAiB,GAAG,OAAIA,EAAI7C,WAE7BkpB,EAAI,IAAIzK,UAAJ,8BACJvf,EAAa0C,MAAK,SAAAiB,GAAG,OAAIA,EAAI7C,WAGjC1E,MAAM,kBACN+D,QAXyB,SAWjByD,GAEJomB,EADe,kBAANpmB,EACL,IAAI0iB,MAAM1iB,GAEVA,SAMN0lB,EAAkBnU,cAClBoU,EAAkBpU,cAClBgV,EAAYhV,cA3FuC,SA4FRpZ,QAAQR,IAAI,CAC3DwuB,EACAE,EACAC,IA/FuD,0CA4FlD9B,EA5FkD,KA4F5Cra,EA5F4C,KA4F1Bqc,EA5F0B,KAkGzD9mB,IAAahB,MAAb,4EACuEhG,EAAU+L,MAC7E,EACA,GAHJ,QAOMgiB,EAEF,CACF/uB,GAAI6uB,EACJ3rB,KAAM,CACJ1C,iBAAkBQ,EAClBqtB,cAAevB,EACfltB,MAAOiE,IAAWQ,KAAKrD,WAEzB8rB,KAAMgC,EACNpb,UAAWC,KAAKC,MAChBwK,gBAAiB,CACf5d,iBAAkBQ,EAClBqtB,cAAevB,EACfltB,MAAOquB,GAETlB,cAAe,CACbvsB,iBAAkBQ,EAClBqtB,cAAevB,EACfltB,MAAOouB,GAETvb,oBA9HuD,UAiInDzK,IAAWtI,KAAX,eAAgC,CACpCC,KAAK,uBAAD,OAAyB8S,EAAzB,YAA6Coc,GACjDjvB,MAAOmvB,IAnIgD,eAwIzD/mB,IAAahB,MAAb,qCACgChG,EAAU+L,MACtC,EACA,GAHJ,mDAxIyD,UA+InD/E,IAAWtI,KAAX,eAAgC,CACpCC,KAAK,gBAAD,OAAkBquB,GACtBpuB,MAAOmuB,EACLC,EACAhtB,EACA8rB,EACAmB,KArJqD,4CAAvB,yDA0JvBlb,EAAgBlL,YAC3B,sBAGWsL,EAAetL,YAA6B,qBAE5CmnB,EAAY,yDAAM,WAC7BzvB,EACAsE,GAF6B,SAAArE,EAAA,wFAKpBuB,YAAM,CACXD,MAAM,wBACNI,OAAQ,SAAC8R,EAAqBhT,GAC5BM,QAAQC,IAAI,kBACZD,QAAQC,IAAIyS,GACZ1S,QAAQC,IAAI,kBACE,OAAVyS,EAQC+J,IAAe/J,YAIbA,EAAMgM,SAENhM,EAAMob,SACb7uB,EACEwT,EAAc,CACZC,YAhBFzT,EACE4T,EAAa,CACXnT,SAkBRgB,UAAW6C,IAAWQ,KAAKrD,aAhCF,gCAmC3BuH,MAAM,sEAAD,OACmE,KAAErD,UAE1E8C,IAAazB,MAAb,8EAtC2B,wDAAN,yDA6CZiN,EAA+B3L,YAIzC,qCAEUiM,EAA+BjM,YAGzC,qCAEUuL,EAA4BvL,YAItC,kCAEUonB,EAAc,SAAC5b,EAAiB6b,GAAlB,8CAA0C,WACnE3vB,EACAsE,GAFmE,mBAAArE,EAAA,yDAQ7D+T,EAAYsG,cARiD,SAW3D7G,EAAQnP,IAAWuO,KAAKa,OAAOI,GAEH,IAA9B6b,EAAYC,OAAOC,OAb0C,wDAiBjE7vB,EACEiU,EAA6B,CAC3BH,UACAE,YACArO,QAASgqB,EAAYC,UAInBjqB,EAA2B,CAC/BuO,KAAO,CACLjT,iBAAkBwS,EAAMgL,KACxBqQ,cAAerb,EAAMmb,SACrBvuB,MAAOsvB,GAET7b,UACArT,GAAIuT,EACJG,UAAWC,KAAKC,MAChBpG,MAAO,KACPnL,IAAK,IAnC0D,SAsC3D2F,IAAWtI,KAAX,eAAgC,CACpCC,KAAK,gBAAD,OAAkB0T,EAAlB,qBAAsCE,GAC1C3T,MAAOsF,IAxCwD,OA2CjE3F,EACEuU,EAA6B,CAC3BT,UACAE,eA9C6D,kDAkDjEvL,IAAazB,MAAb,uCACAhH,EACE6T,EAA0B,CACxBC,UACAC,aAAc,KAAEpO,QAChBqO,eAvD6D,0DAA1C,yDA6DdM,EAA6BhM,YAGvC,mCAqEUmM,EAAuBnM,YAEjC,6BAEUwnB,EAAmB,SAAChc,GAAD,OAAqB,SACnD9T,EACAsE,GAMA,IACEmE,IAAahB,MAAb,6CAAyDqM,IAEzD,IAAML,EAAQnP,IAAWuO,KAAKa,OAAOI,GAE/Bic,EAAcvuB,YAAM,CACxBD,MAAM,iBAAD,OAAmBuS,EAAnB,qBACLnS,OAAQ,SAACgE,GACP8C,IAAahB,MAAb,2CACsCqM,EADtC,QAEEnO,GAEE6X,IAAkB7X,GACpB3F,EACEyU,EAAqB,CACnB9O,aAGiB,OAAZA,GAGT8C,IAAarB,KAAb,oCAC+BqM,EAAMhT,GADrC,sCAEEkF,IAIN+B,kBAAmB+L,EAAMmb,SACzBtpB,QAvBwB,SAuBhByD,GACNN,IAAazB,MAAb,mDAEE+B,GAEFC,MAAM,gDAAD,OAAiDD,EAAEpD,aAItDqqB,EAAcxuB,YAAM,CACxBD,MAAM,GAAD,OAAKkS,EAAMgL,KAAX,oBAA2BhL,EAAMia,mBAAjC,qBACL/rB,OAAQ,SAACgE,GACP8C,IAAahB,MAAb,2CACsCqM,EADtC,QAEEnO,GAEE6X,IAAkB7X,GACpB3F,EACEyU,EAAqB,CACnB9O,QAAQ,2BACHA,GADE,IAELsI,MAAO,WAEP6F,QAASL,EAAMhT,QAIA,OAAZkF,GAGT8C,IAAarB,KAAb,oCAC+BqM,EAAMhT,GADrC,sCAEEkF,IAIN+B,kBAAmB+L,EAAMmb,SACzBtpB,QA5BwB,SA4BhByD,GACNN,IAAazB,MAAb,mDAEE+B,GAEFC,MAAM,gDAAD,OAAiDD,EAAEpD,aAI5D,OAAO,WACLzE,QAAQR,IAAI,CAACqvB,EAAaC,IAAcnoB,MAAK,SAAAooB,GAAI,OAC/CA,EAAKrsB,SAAQ,SAAAkF,GAAG,OAAIA,EAAI7C,aAG5B,MAAO8C,GACPN,IAAazB,MAAb,sCAA0D+B,GAC1DC,MAAM,iDAAD,OAAkDD,EAAEpD,c,sWCniB9CuqB,EAnGA,WACb,IAAMlwB,EAAW0iB,cACXhO,EAAOyb,eAAkB,qBAAGxb,OAAoBD,QAChDxO,EAAQkqB,uBAAY,WACxBpwB,EAASqwB,iBACR,CAACrwB,IACEswB,EAAgBF,uBAAY,WAC5BvqB,OAAO0qB,QAAQ,uCACjBvwB,EAASmL,eACTnL,EAASqwB,kBAEV,CAACrwB,IAEEwwB,EAAcJ,uBAAY,cAAU,IAE1C,OACE,qCACE,qBACEnmB,UAAWC,IAAW,CACpB,kBAAkB,EAClB,sBAAuBwK,IAEzB+b,QAASvqB,EALX,uBAOA,sBACE+D,UAAWC,IAAW,CACpB,oBAAoB,EACpB,wBAAyBwK,IAH7B,+BAME,sBAAKzK,UAAU,qBAAf,+BAaE,eAAC,IAAD,CAASA,UAAU,cAAc5H,GAAG,YAAYouB,QAASvqB,EAAzD,+BACE,qBAAK+D,UAAU,mBAAf,8BACE,mBAAGA,UAAU,2BAAb,yBAEF,mBAAGA,UAAU,iCAAb,wDAEF,eAAC,IAAD,CAAS5H,GAAG,WAAW4H,UAAU,cAAcwmB,QAASvqB,EAAxD,+BACE,qBAAK+D,UAAU,mBAAf,8BACE,mBAAGA,UAAU,iBAAb,yBAEF,mBAAGA,UAAU,iCAAb,iDAEF,eAAC,IAAD,CAAS5H,GAAG,kBAAkB4H,UAAU,cAAcwmB,QAASvqB,EAA/D,+BACE,qBAAK+D,UAAU,mBAAf,8BACE,mBAAGA,UAAU,2BAAb,yBAEF,mBAAGA,UAAU,iCAAb,wDAIJ,sBAAMA,UAAU,qBAAhB,8BAAsC,YACtC,sBAAKA,UAAU,wBAAf,+BACE,eAAC,IAAD,CAASA,UAAU,cAAc5H,GAAG,WAAWouB,QAASvqB,EAAxD,+BACE,qBAAK+D,UAAU,mBAAf,8BACE,mBAAGA,UAAU,kBAAb,yBAEF,mBAAGA,UAAU,iCAAb,kDAGF,sBAAKA,UAAU,cAAf,+BACE,qBAAKA,UAAU,mBAAf,8BACE,mBAAGA,UAAU,kBAAb,yBAEF,mBAAGA,UAAU,iCAAb,6CAIJ,sBAAKA,UAAU,yBAAf,+BACE,cAAC,IAAD,CAAS5H,GAAG,aAAaouB,QAASvqB,EAAlC,8BACE,mBACEuqB,QAASD,EACTvmB,UAAU,kBACVV,MAAO,CAAEmnB,MAAO,oBAHlB,yBAMF,mBACED,QAASH,EACTrmB,UAAU,mBACVV,MAAO,CAAEmnB,MAAO,oBAHlB,iC,qDC9DJC,EAAeC,IAAMC,MAAK,kBAAM,wDAChCC,EAAeF,IAAMC,MAAK,kBAAM,wDAChCE,EAAqBH,IAAMC,MAAK,kBAAM,kCACtCG,EAAeJ,IAAMC,MAAK,kBAAM,+DAChCI,EAAcL,IAAMC,MAAK,kBAAM,+DAC/BK,EAAWN,IAAMC,MAAK,kBAAM,wDAC5BM,EAAWP,IAAMC,MAAK,kBAAM,wDAC5BO,EAAcR,IAAMC,MAAK,kBAAM,+DAC/BQ,EAAWT,IAAMC,MAAK,kBAAM,wDAC5BS,EAAWV,IAAMC,MAAK,kBAAM,+DAC5BU,EAAcX,IAAMC,MAAK,kBAAM,wDAC/BW,EAAqBZ,IAAMC,MAAK,kBACpC,wDAEIY,EAAmBb,IAAMC,MAAK,kBAClC,kCAEIa,EAAiBd,IAAMC,MAAK,kBAAM,kCAClCc,EAAaf,IAAMC,MAAK,kBAAM,wDAC9Be,EAAgBhB,IAAMC,MAAK,kBAAM,6EACjCgB,EAAgBjB,IAAMC,MAAK,kBAAM,gEACjCiB,EAAclB,IAAMC,MAAK,kBAAM,wDAC/BkB,EAAwBnB,IAAMC,MAAK,kBACvC,+DAGImB,EAAe,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAclvB,EAAc,6BAE5CmvB,EADgB/B,eAAkB,qBAAG/rB,KAAgB2K,iBACfkjB,EAAYZ,EAExD,OAAO,cAAC,IAAD,2BAAWtuB,GAAX,IAAoBkvB,UAAWC,MAqXzBC,EAlXH,WACV,IAAMnyB,EAAW0iB,cACX0P,EAAUC,cACVrqB,EAAYmoB,eAAkB,qBAAGrrB,KAAgBkD,aACjD+G,EAAgBohB,eAAkB,qBAAG/rB,KAAgB2K,iBACrDtN,EAAY0uB,cAAkBA,uBAC9Bnb,EAAYmb,eAAkB,qBAAGvgB,QAAsBoF,aACvDG,EAAkBgb,eACtB,qBAAGvgB,QAAsBuF,mBAErBD,EAAkBib,eACtB,qBAAGvgB,QAAsBsF,mBAErBD,EAAekb,eAAkB,qBAAGvgB,QAAsBqF,gBAC1DH,EAAkBqb,eACtB,qBAAGvgB,QAAsBkF,mBAErBC,EAAkBob,eACtB,qBAAGvgB,QAAsBmF,mBAErB0G,EAAa0U,eAAkB,qBAAGxU,IAAcF,cAChDC,EAAoByU,eACxB,qBAAGxU,IAAcD,qBAtBH,EAyBY7P,mBAAS,GAzBrB,oBAyBDymB,IAzBC,gBA0BYzmB,oBAAS,GA1BrB,qBA0BTC,GA1BS,MA0BDymB,GA1BC,SA2BoC1mB,oBAAS,GA3B7C,qBA2BT2mB,GA3BS,MA2BWC,GA3BX,MA6BhBxmB,qBAAU,WACR,GAAKkJ,EAAL,CAGA,IAAIxJ,EACE+mB,EAAWC,YAAW,sBAAC,sBAAA1yB,EAAA,+EAEPC,IAAKkF,IAAI+P,GAFF,iBAGhB7U,KAAKwL,OAHW,iDAMzBymB,IAAU,GACVK,cAAcF,GACd/mB,EAAUknB,YAAW,WACnB9xB,QAAQ2pB,KAAK,OACb4H,GAAUle,KAAKC,SACd,KAXsB,4GAa1B,KACH,OAAO,WACLue,cAAcF,GACdI,aAAannB,OAEd,CAACwJ,EAAiBod,GAAWD,KAChC,IAAMS,GAAeC,mBAAQ,WAC3B,OACE,cAAC5nB,EAAA,EAAD,CACEI,YAAY,EACZH,KAAM,CAAEoB,UAAWuI,EAAWhJ,WAAY,QAC1CL,QAAS,KACTlL,QAAIwyB,EACJ3nB,WAAO2nB,EACP1nB,YAAQ0nB,EACR7oB,gBAAY6oB,EACZ5oB,cAAU4oB,EACVxnB,WAAOwnB,MAGV,CAACje,IAEEke,GAAa9C,uBAAY,WAC7BlwB,IAAKC,KAAK,kBAAmB,CAC3BoL,OAAQ0J,EACRke,UAAWje,EACXke,OAAO,8CACPC,aAAa,mDAAD,OAAqDve,GACjEwe,SAAUve,IAEZmQ,cAAellB,GACfe,QAAQ2pB,KAAK5V,GACbsd,EAAQxb,KAAK,cACZ,CACD5W,EACAoyB,EACAld,EACAH,EACAE,EACAH,IAGF7I,qBAAU,WACRE,IAAQonB,YAAY,KAAM,CACxB,qHACE,2BAEH,IAEHtnB,qBAAU,WACR,GAAKjE,EAAL,CAKA,IAEMwrB,EAAkC,IAFnBC,YAAUzrB,GAEG8kB,IAAa1Y,KAAKC,MACpD5O,YAAiB+tB,QAPfxzB,EAASyF,aAAiB,MAQ3B,CAACuC,EAAWhI,IAEfiM,qBAAU,WACR,GAAI8C,GAAiBtN,EAInB,OAFAzB,EAAS0zB,YAAqBjyB,IAEvB,WACLzB,EAAS2zB,YAAuBlyB,OAGnC,CAACsN,EAAe/O,EAAUyB,IAE7BwK,qBAAU,WACR,IAAMqP,KAASvM,GAAiBjD,IAAUkJ,GACtCsG,IAAQkX,IACVC,GAAsBnX,KAEvB,CACDvM,EACAjD,GACAkJ,EACAwd,GACAC,KAEFxmB,qBAAU,WACJumB,IC5MD,SAAqBoB,GAC1B,IAAMC,EAAQC,SAASC,eAAeH,GACtC,GAAIC,EAAJ,CAKA,IAAIG,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EACzCL,SAASC,eAAeF,EAAMpzB,GAAK,UAAU2zB,cAE7C,SAAuBrrB,IACrBA,EAAIA,GAAKlD,OAAOX,OACdmvB,iBAEFH,EAAOnrB,EAAEurB,QACTH,EAAOprB,EAAEwrB,QACTT,SAASU,YAAcC,EAEvBX,SAASY,cAAgBC,QAfzB5zB,QAAQC,IAAI,sBAkBd,SAAS2zB,EAAY5rB,GACjBhI,QAAQC,IAAI,kBACd+H,EAAIA,GAAKlD,OAAOX,OACdmvB,iBAEFL,EAAOE,EAAOnrB,EAAEurB,QAChBL,EAAOE,EAAOprB,EAAEwrB,QAChBL,EAAOnrB,EAAEurB,QACTH,EAAOprB,EAAEwrB,QAETV,EAAMtqB,MAAMqrB,IAAOf,EAAMgB,UAAYZ,EAAQ,KAC7CJ,EAAMtqB,MAAMurB,KAAQjB,EAAMkB,WAAaf,EAAQ,KAGjD,SAASS,IACL1zB,QAAQC,IAAI,gBAEd8yB,SAASU,YAAc,KACvBV,SAASY,cAAgB,MDsKvBM,CAAY,iBAEb,CAACxC,KAGJ,IAAMyC,GAAkB7E,sBAAW,sBAAC,wCAAAnwB,EAAA,kEAE3BwB,EAF2B,iEAKQvB,IAAKkF,IAAL,oDAEtC,CACEoJ,QAAS,CACP,4BAA6B/M,KATH,iBAKlByzB,EALkB,EAKxB50B,OAU0B,kBAAzB40B,EAAgB50B,MACE,KAAzB40B,EAAgB50B,MAEhB2jB,YAAmBiR,EAAgB50B,MAAM,EAAzC2jB,CAA+CjkB,GAlBjB,mDAqB1Bm1B,EAAM1sB,IAAA,OAEJ2sB,WAAW,gBAA0B,gBAARD,EACnC1sB,IAAarB,KAAb,8HAIAiuB,IAAMC,KAAN,kEAC6DH,IAE7D1sB,IAAazB,MAAb,OA/B8B,qBAmC3BvF,EAnC2B,oEAsCCvB,IAAKkF,IAAL,gDAE/B,CACEoJ,QAAS,CACP,4BAA6B/M,KA1CH,kBAsClB8zB,EAtCkB,EAsCxBj1B,OAUmB,kBAAlBi1B,EAASj1B,MACE,KAAlBi1B,EAASj1B,OAEHk1B,EAAU9yB,KAAKC,MAAM4yB,EAASj1B,QACrBk1B,EAAQ9e,SAAW8e,EAAQlf,WACxC8N,YAAYoR,EAAQ9e,QAAS8e,EAAQlf,WAAW,EAAhD8N,CAAsDpkB,GArD1B,oDAyD1Bm1B,EAAM1sB,IAAA,OAEJ2sB,WAAW,gBAA0B,gBAARD,EACnC1sB,IAAarB,KAAb,0HAIAiuB,IAAMC,KAAN,8DACyDH,IAEzD1sB,IAAazB,MAAb,OAnE8B,kEAsEjC,CAAChH,EAAUyB,IACdwK,qBAAU,WACH8C,GAAkBtN,GAGvBwzB,OACC,CAAClmB,EAAekmB,GAAiBxzB,IAGpC,IAAMg0B,GAAiBrF,sBAAW,sBAAC,kCAAAnwB,EAAA,kEAE1BwB,EAF0B,iEAKIvB,IAAKkF,IAAL,uCAEjC,CACEoJ,QAAS,CACP,4BAA6B/M,KATJ,qBAKjBi0B,EALiB,EAKvBp1B,OAUqB,kBAApBo1B,EAAWp1B,MACE,KAApBo1B,EAAWp1B,KAhBkB,oBAkBL,YAApBo1B,EAAWp1B,KAlBc,wBAmB3B4kB,aAAa,GAAM,EAAnBA,CAAyBllB,GAnBE,4BAsBvBw1B,EAAU9yB,KAAKC,MAAM+yB,EAAWp1B,QAGpC2kB,YAAUuQ,GAAS,EAAnBvQ,CAAyBjlB,GAzBE,2DA6BzBm1B,EAAM1sB,IAAA,OAEJ2sB,WAAW,gBAA0B,gBAARD,EACnC1sB,IAAarB,KAAb,4HAIAiuB,IAAMC,KAAN,gEAC2DH,IAE3D1sB,IAAazB,MAAb,OAvC6B,0DA0ChC,CAAChH,EAAUyB,IACdwK,qBAAU,WACH8C,GAAkBtN,GAGvBg0B,OACC,CAAC1mB,EAAe0mB,GAAgBh0B,IAEnC,IAAMk0B,GAAcvF,uBAAY,WAC9BwF,aAAY,EAAZA,CAAmB51B,KAClB,CAACA,IAEE61B,GAAgBzF,uBAAY,WAChCwF,YAAYla,EAAZka,CAA+B51B,KAC9B,CAAC0b,EAAmB1b,IACvB,OACE,eAAC,IAAD,CAAYiK,UAAU,iBAAtB,UACGuoB,IACC,sBAAK/xB,GAAG,cAAcwJ,UAAU,mBAAhC,UACE,mBAAGxJ,GAAG,oBAAoBwJ,UAAU,yBACnC8oB,GACD,wBAAQtC,QAASyC,GAAjB,6BAGHzX,GACC,qBAAKxR,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,4BAAIwR,IACJ,sBAAKxR,UAAU,kCAAf,UACGyR,GACC,wBACEzR,UAAU,+BACVwmB,QAASkF,GAFX,oBAODja,GAAqB,qBAAKnS,MAAO,CAAEkC,MAAO,UAC3C,wBACExB,UAAU,uCACVwmB,QAASoF,GAFX,wBAUR,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,cAAC7sB,EAAA,EAAD,CAAQE,YAAU,EAACD,KAAM,OAA7C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO9I,KAAK,QAAQ21B,OAAK,EAAC9D,UAAWZ,IACrC,cAAC,EAAD,CAAcjxB,KAAK,YAAY21B,OAAK,EAAC9D,UAAWtB,IAChD,cAAC,EAAD,CAAcvwB,KAAK,YAAY21B,OAAK,EAAC9D,UAAWnB,IAChD,cAAC,EAAD,CACE1wB,KAAK,kBACL21B,OAAK,EACL9D,UAAWlB,IAEb,cAAC,EAAD,CAAc3wB,KAAK,QAAQ21B,OAAK,EAAC9D,UAAWjB,IAC5C,cAAC,EAAD,CAAc5wB,KAAK,sBAAsB6xB,UAAWf,IACpD,cAAC,EAAD,CAAc9wB,KAAK,QAAQ21B,OAAK,EAAC9D,UAAWd,IAC5C,cAAC,EAAD,CAAc/wB,KAAK,WAAW21B,OAAK,EAAC9D,UAAWb,IAC/C,cAAC,EAAD,CAAchxB,KAAK,WAAW21B,OAAK,EAAC9D,UAAWhB,IAC/C,cAAC,EAAD,CACE7wB,KAAK,kBACL21B,OAAK,EACL9D,UAAWT,IAEb,cAAC,EAAD,CAAcpxB,KAAK,QAAQ21B,OAAK,EAAC9D,UAAWX,IAC5C,cAAC,EAAD,CAAclxB,KAAK,WAAW21B,OAAK,EAAC9D,UAAWV,IAC/C,cAAC,EAAD,CAAcnxB,KAAK,cAAc21B,OAAK,EAAC9D,UAAWP,IAClD,cAAC,EAAD,CAActxB,KAAK,UAAU21B,OAAK,EAAC9D,UAAWN,IAC9C,cAAC,EAAD,CACEvxB,KAAK,gBACL21B,OAAK,EACL9D,UAAWR,IAEb,cAAC,EAAD,CAAcrxB,KAAK,aAAa21B,OAAK,EAAC9D,UAAWJ,IACjD,cAAC,EAAD,CACEzxB,KAAK,uCACL21B,OAAK,EACL9D,UAAWL,IAEb,cAAC,EAAD,CAAcxxB,KAAK,WAAW21B,OAAK,EAAC9D,UAAWH,IAE/C,cAAC,EAAD,CACE1xB,KAAK,uBACL21B,OAAK,EACL9D,UAAWF,IAEb,cAAC,IAAD,CAAU1vB,GAAG,mBAIjB,cAAC,IAAD,CACE2zB,SAAS,eACTC,UAAW,IACXC,iBAAe,EACfC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAkB,EAClBC,WAAS,EACTC,cAAc,EACdC,aAAa,QExafC,GAAcC,QACW,cAA7B9wB,OAAO+wB,SAASC,UAEe,UAA7BhxB,OAAO+wB,SAASC,UAEhBhxB,OAAO+wB,SAASC,SAAS5jB,MACvB,2DAsCN,SAAS6jB,GAAgBC,EAAO7T,GAC9B8T,UAAUC,cACPC,SAASH,GACTlvB,MAAK,SAAAsvB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBppB,QACf+oB,UAAUC,cAAcO,YAI1Bz2B,QAAQC,IACN,+GAKEkiB,GAAUA,EAAOuU,UACnBvU,EAAOuU,SAASN,KAMlBp2B,QAAQC,IAAI,sCAGRkiB,GAAUA,EAAOwU,WACnBxU,EAAOwU,UAAUP,WAO5BQ,OAAM,SAAA3wB,GACLjG,QAAQiG,MAAM,4CAA6CA,MChGjE,IAYe4wB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBjwB,MAAK,YAAkD,IAA/CkwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCIdO,IAASC,OACP,cAAC,IAAD,CAAUn0B,MAAOA,QAAjB,SACE,cAAC,KAAD,CAAao0B,QAAS,KAAMlW,UAAWA,YAAvC,SACE,cAAC,IAAMmW,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRzE,SAASC,eAAe,SFCnB,SAAkB7Q,GACvB,GAA6C,kBAAmB8T,UAAW,CAGzE,GADkB,IAAIwB,IAAI/W,GAAwB5b,OAAO+wB,SAAS6B,MACpDC,SAAW7yB,OAAO+wB,SAAS8B,OAIvC,OAGF7yB,OAAOE,iBAAiB,QAAQ,WAC9B,IAAMgxB,EAAK,UAAMtV,GAAN,sBAEPiV,KAgEV,SAAiCK,EAAO7T,GAEtCyV,MAAM5B,EAAO,CACXvoB,QAAS,CAAE,iBAAkB,YAE5B3G,MAAK,SAAAjF,GAEJ,IAAMg2B,EAAch2B,EAAS4L,QAAQpJ,IAAI,gBAEnB,MAApBxC,EAASkI,QACO,MAAf8tB,IAA8D,IAAvCA,EAAY9hB,QAAQ,cAG5CkgB,UAAUC,cAAc4B,MAAMhxB,MAAK,SAAAsvB,GACjCA,EAAa2B,aAAajxB,MAAK,WAC7BhC,OAAO+wB,SAASmC,eAKpBjC,GAAgBC,EAAO7T,MAG1ByU,OAAM,WACL52B,QAAQC,IACN,oEAvFAg4B,CAAwBjC,EAAO7T,GAI/B8T,UAAUC,cAAc4B,MAAMhxB,MAAK,WACjC9G,QAAQC,IACN,+GAMJ81B,GAAgBC,EAAO7T,OEvB/B+V,GAKArB,GAAgB72B,QAAQC,M,0qBC5BjB,SAASk4B,IAAkB,IAAD,EACPtI,IAAM/kB,SAAS,GADR,mBACxBstB,EADwB,KAClBC,EADkB,KAK/B,MAAO,CAAEC,YAHMzI,IAAMR,aAAY,WAC/BgJ,GAAQ,SAAAD,GAAI,OAAIA,EAAO,OACtB,IAC2BA,QAOzB,IAAMG,EAAkB,SAACnlB,GAC9B,IAAmB,IAAfA,EACF,MAAO,GAET,IAAMolB,EAAeC,WAASC,WAC5Bj0B,IAA8B2O,IAC9BulB,aACF,MAAwB,iBAAjBH,EAAkC,WAAaA,G,gBCL3CxT,EAAS,CACpB/kB,IAAK,wBAAoB,EAAAD,SAAQC,IAAR,oBACzBoG,KAAM,wBAAoB,EAAArG,SAAQqG,KAAR,oBAC1BJ,MAAO,wBAAoB,EAAAjG,SAAQiG,MAAR,oBAC3BS,MAAO,wBAAoB,EAAA1G,SAAQ0G,MAAR,qBAgBhBkyB,EAAc,SACzBC,EACAC,EACAC,GAEA,IAAMC,EAASjG,SAASkG,cAAc,UAChCvuB,EAAkBmuB,EAAlBnuB,MAAOjC,EAAWowB,EAAXpwB,OAmBb,OAjBIiC,EAAQjC,EACNiC,EAAQouB,IAEVrwB,EAASywB,KAAKC,MAAO1wB,GAAUqwB,EAAkBpuB,GACjDA,EAAQouB,GAGNrwB,EAASqwB,IACXpuB,EAAQwuB,KAAKC,MAAOzuB,GAASouB,EAAkBrwB,GAC/CA,EAASqwB,GAIbE,EAAOtuB,MAAQA,EACfsuB,EAAOvwB,OAASA,EAEhBuwB,EAAOI,WAAW,MAAMC,UAAUR,EAAK,EAAG,EAAGnuB,EAAOjC,GAC7CuwB,EAAOM,UAAU,aAAcP,IAM3BQ,EAAgB,uCAAG,WAC9BC,EACAV,EACAC,GAH8B,uBAAA75B,EAAA,yDAMzBs6B,EAAK14B,KAAKuzB,WAAW,UANI,sBAOtB,IAAI1Q,UAAJ,6BACkB6V,EAAK14B,KADvB,uBAC0C04B,EAAKC,KAD/C,0CAPsB,uBAYJh1B,KAAgC,SAACsQ,EAAKqZ,GAC9D,IAAMsL,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAA5xB,GACVA,EAAE6xB,OAAOC,kBAAkBC,YAC7BhlB,EAAI/M,EAAE6xB,OAAOC,QAEb1L,EACE,IAAIzK,UAAJ,wEAON,IAAMqW,EAAS,SAAChyB,GACdomB,EACE,IAAI1D,MAAJ,wDACmD/oB,KAAKuE,UAAU8B,OAItE0xB,EAAOO,QAAUD,EACjBN,EAAOQ,QAAUF,EAGjBN,EAAOS,kBAAkBX,MAtCG,cAYxBY,EAZwB,OAyCxB1X,GAAM,UAAC5d,OAAO2yB,WAAR,QAAe3yB,OAAOu1B,WAAWC,gBAC3C,IAAIC,KAAK,CAACH,GAAc,CAAEt5B,KAAM,gBA1CJ,SA6CV2D,KAAqC,SAACsQ,EAAKqZ,GAC7D,IAAMoM,EAAS,IAAIC,MACnBD,EAAO/uB,IAAMiX,EAEb8X,EAAOZ,OAAS,WACd7kB,EAAIylB,IAGNA,EAAOP,QAAU,SAAAjyB,GAEbomB,EADe,kBAANpmB,EACL,IAAI0iB,MAAM1iB,GAEV,IAAI0iB,MAAM/oB,KAAKuE,UAAU8B,SAzDL,cA6CxB0yB,EA7CwB,OA8DxBC,EAAe/B,EAAY8B,EAAO5B,EAAiBC,GA9D3B,kBAgEvB4B,GAhEuB,4CAAH,0DAiGhBC,EAAe,SAACC,GAC3B,IAAInY,EAAMmY,EAmBV,OAjBInY,EAAI2R,WAAW,UACjB3R,EAAM,WAAaA,GAIN,WACb,IAAIoY,EAEJ,IACEA,EAAQ,IAAIrD,IAAI/U,GAChB,MAAOhE,GACP,OAAO,EAGT,MAA0B,UAAnBoc,EAAMC,UAA2C,WAAnBD,EAAMC,SAT9B,GAaN,IAAItD,IAAI/U,GAAKgV,KAGf,IAQIsD,EAAqC,aAErCC,EAAY,GAEZC,EAAY,GAEZC,EAAkB,SAACC,GAA2B,IAAD,EAC9BtwB,mBAAkBswB,GADY,mBACjDluB,EADiD,KAC1CmuB,EAD0C,KAMxD,MAAO,CAACnuB,EAJOmiB,uBAAY,WACzBgM,GAAS,SAAAC,GAAM,OAAKA,OACnB,MAKQ1W,EAAY,SAAC0H,GAAD,OAAe3qB,KAAKC,MAAM0qB,IAMtCiP,EAAgB,SAACjP,GAC5B,IAAK7nB,IAAyB6nB,GAC5B,OAAO,KAET,IACE,OAAO3qB,KAAKC,MAAM0qB,GAClB,MAAOtkB,GAGP,OAFAgd,EAAO3e,KAAP,mCAAgD2B,GAChDgd,EAAO/kB,IAAP,oDAAgEqsB,GACzD,OAIE3K,EAAc,WACzB,OAAOC,eAGI4Z,EAAc,SAAC96B,GAAuB,IAAD,EACVoK,mBAAS,GADC,mBACzC2wB,EADyC,KAC5BC,EAD4B,OAER5wB,mBAAS,GAFD,mBAEzC6wB,EAFyC,KAE3BC,EAF2B,KA2ChD,OAvCA1wB,qBAAU,WACR,IAAM2wB,EAASp7B,YAAM,CACnBD,MAAM,GAAD,OAAKE,EAAL,6BACLE,OAFmB,SAEZk7B,GACmB,kBAAbA,EACTJ,EAAeI,GAEf9W,EAAO/e,MAAP,gDAGJ1B,QATmB,SASXyD,GACNgd,EAAO/e,MAAP,yCAAuD+B,MAIrD+zB,EAAUt7B,YAAM,CACpBD,MAAM,GAAD,OAAKE,EAAL,8BACLE,OAFoB,SAEbk7B,GACmB,kBAAbA,EACTF,EAAgBE,GAEhB9W,EAAO/e,MAAP,iDAGJ1B,QAToB,SASZyD,GACNgd,EAAO/e,MAAP,0CAAwD+B,MAI5D,OAAO,WACL6zB,EAAO/0B,MAAK,SAAAiB,GACVA,EAAI7C,SAEN62B,EAAQj1B,MAAK,SAAAiB,GACXA,EAAI7C,YAGP,CAACxE,IAEG,CAAE+6B,cAAaE,iBAGAK,mBAAQ,SAACt7B,GAC/B,OAAO,kBAAM86B,EAAY96B,Q,wKCtRdhC,EAAU,CACrB+a,kBAAmB,yBACnBE,aAAc,qBACdH,cAAe,uBAGbyiB,EAAiB98B,IAAK+8B,YAAY/lB,SAWzBgmB,EAAiB,SAAC,GAAD,IAAGr2B,EAAH,EAAGA,OAAQ4T,EAAX,EAAWA,QAAX,OAAyB,SAAAza,GACrDA,EAAS,CACP6B,KAAMpC,EAAQ+a,kBACdla,KAAM,CAAEuG,SAAQ4T,eAIP0iB,EAAa,SAAC,GAAD,IAAGt2B,EAAH,EAAGA,OAAQpF,EAAX,EAAWA,UAAX,OAA2B,SAAAzB,GACnDA,EAAS,CACP6B,KAAMpC,EAAQib,aACdpa,KAAM,CACJuG,SACApF,iBAKA27B,EAAc,kBAAM,SAACp9B,EAAUsE,GAAc,IACzCE,EAAaF,IAAWQ,KAAxBN,SAER,OAAKA,GACiBxE,GA9Bc,SAAAA,GACpC,IAAMwE,EAAW8V,cAKjB,OAJAta,EAAS,CACP6B,KAAMpC,EAAQ8a,cACdja,KAAMkE,IAEDA,OA+BIsf,EAAkB,yDAAM,WAAM9jB,GAAN,qBAAAC,EAAA,sEAE7B+8B,IACFA,EAAeK,OACb,0DAEFL,EAAiB,MAGnBA,EAAiB98B,IAAK+8B,YAAY/lB,SAC5B1S,EAAWxE,EAASo9B,KAEpB3iB,EAAUmO,cAZiB,SAaV1oB,IAAKC,KAAL,2BAErB,CACEsB,UAAWgZ,EAAQwO,gBACnBzkB,YAEF,CACE84B,YAAaN,EAAej1B,QApBC,uBAazBzH,EAbyB,EAazBA,KAWRN,EACEk9B,EAAe,CACbr2B,OAAQvG,EAAKuG,OACb4T,aAIJza,EACEm9B,EAAW,CACTt2B,OAAQvG,EAAKuG,OACbpF,UAAWnB,EAAKi9B,gBAIpBv9B,EAASurB,YAAUjrB,EAAKuG,SAtCS,kBAwC1B,CACLrC,WACAwV,KAAMS,EACNxW,KAAM3D,IA3CyB,wCA8CjCS,QAAQiG,MAAM,mCAAd,MA9CiC,+DAAN,wD,iKClD3Bw2B,EAAiB,KAKRC,EAAkB,uCAAG,sBAAAx9B,EAAA,yDAC1Bu9B,EAD0B,yCAEnBt8B,QAAQsG,WAFW,gCAIvBg2B,KAJuB,2CAAH,qDCDlB/9B,EAAU,CACrBmc,YAAa,iBACbE,aAAa,mBAEFsJ,EAAa,SAAC,GAAD,IAAElc,EAAF,EAAEA,KAAF,IAAOw0B,UAAP,MAAY,KAAZ,SAAsB,SAAA19B,IDPf,SAAA09B,GAC7BF,EAAiBE,ECOnBC,CAAkBD,GAClB19B,EAAS,CACP6B,KAAMpC,EAAQmc,YACdtb,KAAM,CAAC4I,OAAK2S,cAAe6hB,OAIlB9H,EAAc,SAAAgI,GAAS,OAAI,SAAA59B,GACnC49B,GACDH,IAEFz9B,EAAS,CACP6B,KAAMpC,EAAQqc,kB,0NCXLrc,EAAU,CACrBsb,oBAAqB,8BACrBC,oBAAqB,gCAGjB6iB,EAAqB,IAAIC,IAElBljB,EAAqBtS,YAG/B,gCAKUorB,EAAuB,SAACjyB,GAAD,OAAuB,SACzDzB,EACAsE,GAIA,GAAIu5B,EAAmBE,IAAIt8B,GACzB,OAAO,aAGTV,QAAQ2pB,KAAK,kBAAoBjpB,GACjCo8B,EAAmB/sB,IAAIrP,GAEvB,IAAM0D,EAAe3D,YAAM,CACzBD,MAAM,GAAD,OAAKE,EAAL,qBACLC,WAAW,EACXC,OAAQ,SAACrB,EAAWuD,GACN,QAARA,GACF7D,EACE4a,EAAmB,CACjBT,QAAS,CACP6jB,IAAK19B,GAEPmB,eAIM,gBAARoC,GACF7D,EACE4a,EAAmB,CACjBT,QAAS,CACP7M,YAAahN,GAEfmB,eAIM,qBAARoC,GACF7D,EACE4a,EAAmB,CACjBT,QAAS,CACP8jB,iBAAkB39B,GAEpBmB,kBAOJy8B,EAAY18B,YAAM,CACtBD,MAAM,GAAD,OAAKE,EAAL,2BACLC,WAAW,EACXC,OAAQ,SAACrB,EAAMuD,GACb,GAAY,WAARA,EAAkB,CACpB,GAAoB,kBAATvD,GAA8B,OAATA,EAI9B,YAHAmI,IAAazB,MAAb,yEACoE1G,EADpE,yBACyFmB,IAI3FzB,EACE4a,EAAmB,CACjBT,QAAS,CACPgkB,OAAQ79B,GAEVmB,oBAGC,GAAY,WAARoC,EAAkB,CAC3B,GAAoB,kBAATvD,GAA8B,OAATA,EAI9B,YAHAmI,IAAazB,MAAb,yEACoE1G,EADpE,yBACyFmB,IAI3FzB,EACE4a,EAAmB,CACjBT,QAAS,CACPikB,OAAQ99B,GAEVmB,oBAIJgH,IAAazB,MAAb,uBACkBnD,EADlB,oDAON,OAAO,WACLqE,YAAa/C,EAAc+4B,EAA3Bh2B,GACA21B,EAAmB95B,OAAOtC,MAIjBkyB,EAAyB,SAAClyB,GAAD,6BAAuB,sBAAAxB,EAAA,sDAC3DsH,YAAwB,GAAD,OAAI9F,EAAJ,kBACvB8F,YAAwB,GAAD,OAAI9F,EAAJ,4BAFoC,6C,gCC1H7D,gFAIasrB,EAAa,SAAC/lB,GAAuB,IAAD,IAC/C,GAAI,aAAcA,EAAO,CAAC,IAAD,MACjBpE,EAAQ,UAAGoE,EAAMpE,gBAAT,aAAG,EAAgBtC,KACjC,OAAO,IAAIkoB,IAAW,CACpB9iB,MAAK,iBAAE9C,QAAF,IAAEA,OAAF,EAAEA,EAAU8C,aAAZ,QAAqB,UAC1BC,QAAO,iBAAE/C,QAAF,IAAEA,OAAF,EAAEA,EAAUmR,oBAAZ,QAA4B,kCAIvC,OAAO,IAAIyU,IAAW,CACpB9iB,MAAK,UAAG,UAAWsB,GAASA,EAAMtB,aAA7B,QAAuC,UAC5CC,QAAO,UAAEqB,EAAMrB,eAAR,QAAmB,mCAIjB04B,EAAsB,SAACr3B,GAAwB,IAAD,IACzD,OACO,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOpE,gBAAP,mBAAiBtC,YAAjB,eAAuByT,eAAgB/M,EAAMrB,SAAW,kB,wECftD6iB,E,kDAGJ,WAAYxhB,GAAa,IAAD,kCACtB,gBAHFtB,WAEwB,EAEtB,EAAKC,QAAL,iBAAeqB,QAAf,IAAeA,OAAf,EAAeA,EAAOrB,eAAtB,QAAiC,gCACjC,EAAKD,MAAL,iBAAasB,QAAb,IAAaA,OAAb,EAAaA,EAAOtB,aAApB,QAA6B,UAC7B,EAAK5E,KAAL,OAAYkG,QAAZ,IAAYA,OAAZ,EAAYA,EAAOlG,KACnB,EAAKw9B,MAAL,OAAat3B,QAAb,IAAaA,OAAb,EAAaA,EAAOs3B,MALE,E,sBAHD7S,QAYVjD,O,iKCnBF/oB,EAAU,CACrBmV,gBAAiB,eAGN2pB,EAAa,yDAAM,WAAMv+B,GAAN,SAAAC,EAAA,sDAC9BD,EAAS,CACP6B,KAAMpC,EAAQmV,gBACdtU,MAAM,IAHsB,2CAAN,uDAOb+vB,EAAc,yDAAM,WAAMrwB,GAAN,SAAAC,EAAA,sDAC/BD,EAAS,CACP6B,KAAMpC,EAAQmV,gBACdtU,MAAM,IAHuB,2CAAN,wD,2MCTdb,EAAU,CACrBgY,WAAY,aACZC,eAAgB,qBAChBC,WAAY,kBACZC,SAAU,iBAGC4mB,EAAe,yDAAM,WAAOx+B,EAAUsE,GAAjB,mBAAArE,EAAA,6DACxBiX,EAAW5S,IAAWkT,KAAtBN,OADwB,SAEThX,IAAKkF,IAAI8R,GAFA,uBAExB5W,EAFwB,EAExBA,KAERN,EAAS,CACP6B,KAAMpC,EAAQiY,eACdpX,SAN8B,kBASzBA,GATyB,2CAAN,yDAefm+B,EAAY,SAAAvnB,GAAM,MAAK,CAClCrV,KAAMpC,EAAQkY,WACdrX,KAAM4W,IAMKwnB,EAAU,SAAAvnB,GAAI,MAAK,CAC9BtV,KAAMpC,EAAQmY,SACdtX,KAAM6W,M","file":"static/js/main.3691d4ca.chunk.js","sourcesContent":["import Http from \"../utils/Http\";\nimport { rifle } from \"../utils/WebSocket\";\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE: \"service/add/bought\"\n};\n\nexport const createService = (clear, encrypted) => async dispatch => {\n  const { data } = await Http.post(\"/api/gun/set\", {\n    path: \"$user>offeredServices\",\n    value: clear\n  });\n  const { ok, id: newID } = data;\n  if (!ok) {\n    return \"\";\n  }\n  const id = newID;\n\n  const all = Object.entries(encrypted).map(([name, value]) => {\n    if (!value) {\n      return null;\n    }\n    console.log(`setting: ${name} to ${value}`);\n    return Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}>${name}`,\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value\n      }\n    });\n  });\n  await Promise.all(all);\n  const { serviceType } = clear;\n  //update the offered service\n  if (serviceType === \"torrentSeed\" || serviceType === \"streamSeed\") {\n    console.log(\"updating profile with service\");\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>Profile>offerSeedService`,\n      value: id\n    });\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id;\n};\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post(\"/api/gun/put\", {\n    path: `$user>offeredServices>${id}`,\n    value: null\n  });\n};\nexport const subscribeMyServices = providedServiceId => dispatch => {\n  const query = `$user::offeredServices>${providedServiceId}::on`;\n  console.log(query);\n  const subscription = rifle({\n    query,\n    publicKey: \"me\",\n    reconnect: false,\n\n    onData: async (serviceNode, id) => {\n      console.log(serviceNode);\n      if (serviceNode === null) {\n        dispatch({\n          type: ACTIONS.REMOVE_MY_SERVICE,\n          data: id\n        });\n        return;\n      }\n      dispatch({\n        type: ACTIONS.ADD_MY_SERVICE,\n        data: { id, serviceInfo: serviceNode }\n      });\n      console.log(\"got service data\");\n    }\n  });\n\n  return subscription;\n};\n\nexport const buyService = (\n  owner,\n  serviceID,\n  servicePrice\n) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"service\",\n    amt: Number(servicePrice),\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: serviceID\n  });\n  console.log(data);\n  const orderAck = JSON.parse(data.orderAck.response);\n  dispatch({\n    type: ACTIONS.ADD_BOUGHT_SERVICE,\n    data: { orderAck, owner, serviceID }\n  });\n  return orderAck;\n};\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Common from \"shock-common\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"./String\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').Subscription} Subscription\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true,\n  transports: [\"websocket\"]\n};\n\nconst rifleSubscriptions = new Map();\n\n/** @type {import(\"socket.io-client\").Socket<import(\"socket.io-client/build/typed-events\").DefaultEventsMap, import(\"socket.io-client/build/typed-events\").DefaultEventsMap>} */\nexport let GunSocket = null;\n\nconst reconnectRifleSubscriptions = () => {\n  Array.from(rifleSubscriptions.entries()).forEach(([key, value]) => {\n    unsubscribeRifleById(key);\n    rifle(value);\n    rifleSubscriptions.delete(key);\n  });\n};\n\nexport const connectSocket = async (host = \"\", reconnect = false) => {\n  const { store } = await import(\"../store\");\n  const socketOptions = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId,\n      /**\n       * Signals LND rpc socket handling that this is just the intial handshake\n       * and to not try to process non-existent arguments.\n       */\n      isInitial: true\n    }\n  };\n\n  if (GunSocket?.connected && !reconnect) {\n    return { GunSocket };\n  }\n\n  if (GunSocket && reconnect) {\n    disconnectSocket(GunSocket);\n  }\n\n  GunSocket = SocketIO(`${host}/gun`, socketOptions);\n\n  const relayId = store.getState().node.relayId;\n  if (relayId) {\n    GunSocket.emit(\"hybridRelayId\", { id: relayId });\n  }\n\n  const GunOn = encryptedOn(GunSocket);\n\n  // Subscribe to Rifle query events as soon as the socket is connected\n  GunOn(\"query:data\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onData?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunOn(\"query:error\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onError?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunSocket.on(Common.NOT_AUTH, () => {\n    store.dispatch(setAuthenticated(false));\n  });\n  //TODO listen on relay error\n  GunSocket.on(\"encryption:error\", async err => {\n    if (err.field === \"deviceId\" || err.message === \"Bad Mac\") {\n      store.dispatch(setAuthenticated(false));\n    }\n  });\n\n  reconnectRifleSubscriptions();\n\n  GunSocket.on(\"connect\", () => {\n    console.log(\"Connected to new socket\");\n    reconnectRifleSubscriptions();\n  });\n\n  const onlineListener = () => {\n    connectSocket(host, true);\n    window.removeEventListener(\"online resume\", onlineListener);\n  };\n\n  window.addEventListener(\"online resume\", onlineListener);\n\n  return { GunSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: data\n    });\n\n    callback(err, decryptedMessage);\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.emit(eventName, message, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message: JSON.stringify(message)\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        if (!response) {\n          return response;\n        }\n\n        if (response && !Encryption.isEncryptedMessage(response)) {\n          console.warn(\"Non-encrypted socket message\", response);\n          return response;\n        }\n\n        return Encryption.decryptMessage({\n          privateKey: localPrivateKey,\n          encryptedMessage: response\n        });\n      })\n    );\n\n    callback(...decryptedResponses);\n  });\n};\n\n/**\n * @returns {Promise<Subscription>}\n */\nexport const subscribeSocket = ({ eventName, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const on = encryptedOn(GunSocket);\n        const emit = encryptedEmit(GunSocket);\n\n        emit(\n          `subscribe:${eventName}`,\n          {\n            token: store.getState().node.authToken\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              reject(err);\n              return;\n            }\n          }\n        );\n\n        if (callback) {\n          on(eventName, data => {\n            callback(null, data);\n          });\n        }\n\n        resolve({\n          off() {\n            emit(`unsubscribe:${eventName}`);\n          }\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const unsubscribeRifleById = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n\n  if (cachedSocket) {\n    unsubscribeEvent(subscriptionId);\n    rifleSubscriptions.delete(subscriptionId);\n  }\n};\n\nexport const unsubscribeRifleByQuery = query => {\n  const subscriptionEntries = Array.from(rifleSubscriptions.entries());\n\n  subscriptionEntries.map(([id, subscription]) => {\n    if (subscription.query === query) {\n      console.log(\"Unsubscribing by query:\", subscription);\n      unsubscribeRifleById(id);\n      return true;\n    }\n\n    return false;\n  });\n};\n\nexport const unsubscribeEvent = subscriptionId =>\n  new Promise(resolve => {\n    const emit = encryptedEmit(GunSocket);\n    emit(\n      \"unsubscribe\",\n      {\n        subscriptionId\n      },\n      () => {\n        console.debug(\n          `[SOCKET] Unsubscribed from event successfully! (${subscriptionId})`\n        );\n        resolve(true);\n      }\n    );\n  });\n\nexport const rifleSocketExists = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} query\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {string=} epubForDecryption If epub is known before hand.\n * @prop {string=} epubField If the epub is included in the received data\n * itself. Handshake requests for example, have an epub field.\n * @prop {boolean=} reconnect\n * @prop {(data, key) => void} onData\n * @prop {((error) => void)=} onError\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.onData(callback)` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map().once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<Subscription>}\n */\nexport const rifle = ({\n  query,\n  publicKey,\n  epubForDecryption,\n  epubField,\n  reconnect,\n  onData,\n  onError\n}) =>\n  new Promise((resolve, reject) => {\n    import(\"../store\").then(({ store }) => {\n      if (reconnect) {\n        unsubscribeRifleByQuery(query);\n      }\n\n      const emit = encryptedEmit(GunSocket);\n\n      emit(\n        \"subscribe:query\",\n        {\n          $shock: query,\n          token: store.getState().node.authToken,\n          publicKey,\n          epubForDecryption,\n          epubField\n        },\n        (err, data) => {\n          if (err) {\n            console.error(`Gun rifle error (${query})`);\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          rifleSubscriptions.set(data.subscriptionId, {\n            publicKey,\n            epubForDecryption,\n            epubField,\n            reconnect,\n            onData,\n            onError,\n            query\n          });\n\n          resolve({\n            off: () => unsubscribeRifleById(data.subscriptionId)\n          });\n        }\n      );\n    });\n  });\n\n/**\n * @param {Promise<Subscription>[]} subscriptions\n */\nexport const rifleCleanup = (...subscriptions) => () => {\n  subscriptions.map(subscription =>\n    subscription.then(unsubscribe => {\n      unsubscribe.off();\n    })\n  );\n};\n\n/**\n * @returns {Promise<{ messages: any , contacts: Contact[]}>}\n */\nexport const getChats = async () => {\n  try {\n    const chats = await new Promise(res => {\n      const subscription = subscribeSocket({\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        },\n        eventName: \"chats\"\n      });\n    });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName,\n      didDisconnect: chat.didDisconnect\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleSentRequest[]>}\n */\nexport const getSentRequests = async () => {\n  try {\n    const sentRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"sentRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleReceivedRequest[]>}\n */\nexport const getReceivedRequests = async () => {\n  try {\n    const receivedRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"receivedRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Utils from \"../utils\";\nimport { fetchWalletBalance } from \"./WalletActions\";\n\nexport const coordinateDeleted = createAction<{\n  coordinateSHA256: string;\n}>(\"coordinates/deleted\");\n\nexport const coordinateReceived = createAction<{\n  coordinate: Common.Coordinate;\n  coordinateSHA256: string;\n}>(\"coordinates/received\");\n\nexport const subCoordinates = () => (dispatch: (action: any) => void) => {\n  Utils.logger.debug(`Subscribing to coordinates.`);\n  try {\n    const subscription = Utils.rifle({\n      query: `$user::coordinates::map.on`,\n      publicKey: \"me\",\n      onData: (unparsed, coordinateSHA256) => {\n        const coordinate = Utils.safeParseJson(unparsed);\n\n        if (Common.isCoordinate(coordinate)) {\n          dispatch(\n            coordinateReceived({\n              coordinate,\n              coordinateSHA256\n            })\n          );\n          fetchWalletBalance()(dispatch)\n        } else if (coordinate === null) {\n          dispatch(\n            coordinateDeleted({\n              coordinateSHA256\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Coordinate subscription invalid (or incomplete) value -> `,\n            coordinate\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    alert(`Could not establish a subscription to coordinates: ${e.message}`);\n    Utils.logger.error(\n      `Could not establish a subscription to coordinates -> `,\n      e\n    );\n  }\n};\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.scoped.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\")\n    .matches;\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","import \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","// @ts-check\nexport const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\",\n  SET_RELAY_ID: \"auth/relay/set\"\n\n};\n\nexport const setAuthenticated = status => ({\n  type: ACTIONS.SET_AUTHENTICATED,\n  data: status\n});\n\nexport const setAuthStep = step => ({\n  type: ACTIONS.SET_AUTH_STEP,\n  data: step\n});\n\nexport const setAuthMethod = method => ({\n  type: ACTIONS.SET_AUTH_METHOD,\n  data: method\n});\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const { liveStatus } = item\n  useEffect(() => {\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  }, [item])\n  useEffect(() => {\n    if (item.viewersSocketUrl) {\n      const socket = new WebSocket(`${item.viewersSocketUrl}/stream/watch/${item.userToken}`);\n      socket.addEventListener(\"open\", () => {\n        console.log(\"viewer socket open\")\n      });\n      return () => {\n        socket.close()\n      }\n    }\n  }, [item])\n\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {!isLive && liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!isLive && !liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false,\n  webClientPrefix:\"https://lightning.page\",\n  relayId:null,\n  accessSecret:null\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n    case ACTIONS.SET_RELAY_ID:{\n      return {\n        ...state,\n        relayId:action.data\n      }\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    case ACTIONS.SET_WEBCLIENT_PREFIX:{\n      return {...state, webClientPrefix:action.data}\n    }\n\n    case ACTIONS.SET_ACCESS_SECRET:{\n      return {...state, accessSecret:action.data}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null,\n  relayId:null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\",\n  hostingTiers: \"chooseTier\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n * @typedef {import('shock-common').Peer} Peer\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Peer[]}\n   */\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: [],\n  lightningInfo: {}\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    case ACTIONS.LOAD_LIGHTNING_INFO:{\n      const {data}  = action\n      return {\n        ...state,\n        lightningInfo:data\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\nimport produce from \"immer\";\nimport * as Common from \"shock-common\";\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n * @typedef {import(\"shock-common\").StoredRequest} StoredReq\n */\n\nimport * as Schema from \"../schema\";\nimport {\n  handshakeAddressUpdated,\n  receivedHandshakeRequest,\n  convoReceived,\n  convoDeleted,\n  messageTransmissionFailed,\n  messageTransmissionRequested,\n  messageTransmissionRetried,\n  messageTransmissionSucceeded,\n  handshakeRequestDeleted,\n  receivedConvoMessage\n} from \"../actions/ChatActions\";\n\nconst INITIAL_STATE = {\n  currentHandshakeAddress: \"DOES_NOT_EXIST\" as string,\n  convos: {} as Record<string, Schema.Convo>,\n  /**\n   * Maps convo id to a set of the messages corresponding to it.\n   */\n  convoToMessages: {} as Record<string, Record<string, Schema.ConvoMsg>>,\n  receivedRequests: {} as Record<string, Schema.HandshakeReqNew>\n};\n\nconst chat = produce((draft, action) => {\n  if (handshakeAddressUpdated.match(action)) {\n    const { handshakeAddress } = action.payload;\n    if (\n      draft.currentHandshakeAddress !== handshakeAddress &&\n      Common.isPopulatedString(handshakeAddress)\n    ) {\n      draft.receivedRequests = {};\n      draft.currentHandshakeAddress = handshakeAddress;\n    }\n  }\n\n  if (receivedHandshakeRequest.match(action)) {\n    const { receivedRequest } = action.payload;\n    if (!draft.receivedRequests[receivedRequest.id]) {\n      draft.receivedRequests[receivedRequest.id] = receivedRequest;\n    }\n  }\n\n  if (convoReceived.match(action)) {\n    const { convo } = action.payload;\n    if (!draft.convos[convo.id]) {\n      draft.convoToMessages[convo.id] = {};\n      draft.convos[convo.id] = convo;\n    }\n  }\n\n  if (convoDeleted.match(action)) {\n    const { id } = action.payload;\n    if (draft.convos[id]) {\n      delete draft.convos[id];\n    }\n  }\n\n  if (messageTransmissionFailed.match(action)) {\n    const { convoID, errorMessage, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = errorMessage;\n    draft.convoToMessages[convoID][messageID].state = \"error\";\n  }\n  if (messageTransmissionRequested.match(action)) {\n    const { convoID, message, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID] = {\n      body: message,\n      convoID,\n      err: \"\",\n      id: messageID,\n      state: \"sending\",\n      timestamp: Date.now()\n    };\n  }\n  if (messageTransmissionRetried.match(action)) {\n    const { convoID, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = \"\";\n    draft.convoToMessages[convoID][messageID].state = \"sending\";\n  }\n  if (messageTransmissionSucceeded.match(action)) {\n    const { convoID, messageID } = action.payload;\n    draft.convoToMessages[convoID][messageID].err = \"\";\n    draft.convoToMessages[convoID][messageID].state = \"ok\";\n  }\n  if (handshakeRequestDeleted.match(action)) {\n    const { id } = action.payload;\n    if (draft.receivedRequests[id]) {\n      delete draft.receivedRequests[id];\n    }\n  }\n  if (receivedConvoMessage.match(action)) {\n    const { message } = action.payload;\n    if (!draft.convoToMessages[message.convoID]) {\n      draft.convoToMessages[message.convoID] = {};\n    }\n    if (!draft.convoToMessages[message.convoID][message.id]) {\n      draft.convoToMessages[message.convoID][message.id] = {\n        ...message,\n        err: \"\"\n      };\n    }\n  }\n}, INITIAL_STATE);\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import produce from \"immer\";\n\nimport {\n  ACTIONS,\n  publishedContentAdded,\n  publishedContentRemoved,\n  publicContentAdded\n} from \"../actions/ContentActions\";\nimport { PublishedContent, PublicContentItem } from \"../schema\";\n\nconst INITIAL_STATE = {\n  seedProviderPub:\n    \"tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\",\n  streamUserToken: \"\",\n  streamLiveToken: \"\",\n  streamUrl: \"\",\n  streamPostId: \"\",\n  streamContentId: \"\",\n  streamStatusUrl: \"\",\n  streamBroadcasterUrl: \"\",\n  publishedContent: {} as Record<string, PublishedContent>,\n  publicContent: {} as Record<string, PublicContentItem>,\n  unlockedContent: {},\n  seedInfo: {} as { seedUrl?: string; seedToken?: string },\n  availableTokens: {},\n  availableStreamTokens: {},\n  tipOverlayUrl:\"\"\n};\n\nconst content = (state = INITIAL_STATE, action): typeof INITIAL_STATE => {\n  if (publicContentAdded.match(action)) {\n    return produce(state, draft => {\n      const { item } = action.payload;\n      if (!draft.publicContent[item.id]) {\n        draft.publicContent[item.id] = item;\n      }\n    });\n  }\n  if (publishedContentAdded.match(action)) {\n    return produce(state, draft => {\n      const {\n        payload: { content, res }\n      } = action;\n      if (res.ok) {\n        draft.publishedContent[res.id] = content;\n      }\n    });\n  }\n\n  if (publishedContentRemoved.match(action)) {\n    return produce(state, draft => {\n      delete draft.publishedContent[action.payload.id];\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n\n    case ACTIONS.ADD_UNLOCKED_CONTENT: {\n      const { data } = action;\n      const unlockedTmp = { ...state.unlockedContent };\n      unlockedTmp[data.contentPath] = data.content;\n      return { ...state, unlockedContent: unlockedTmp };\n    }\n    case ACTIONS.ADD_STREAM: {\n      const { data } = action;\n      return {\n        ...state,\n        streamLiveToken: data.liveToken,\n        streamUserToken: data.seedToken,\n        streamUrl: data.streamUrl,\n        streamPostId: data.streamPostId,\n        streamContentId: data.streamContentId,\n        streamStatusUrl: data.streamStatusUrl,\n        streamBroadcasterUrl: data.streamBroadcasterUrl,\n        tipOverlayUrl:data.tipOverlayUrl,\n      };\n    }\n    case ACTIONS.REMOVE_STREAM: {\n      return {\n        ...state,\n        streamLiveToken: \"\",\n        streamUserToken: \"\",\n        streamUrl: \"\",\n        streamPostId: \"\",\n        streamContentId: \"\",\n        streamStatusUrl: \"\",\n        streamBroadcasterUrl: \"\"\n      };\n    }\n    case ACTIONS.SET_SEED_INFO: {\n      const { data } = action;\n      return { ...state, seedInfo: data };\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_USED_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableTokens: availableTmp };\n      }\n      return state;\n    }\n    case ACTIONS.ADD_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableStreamTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableStreamTokens: availableTmp };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/FeesActions\";\n\nexport interface FeesState {\n  source: string;\n\n  rate: Schema.FeeRate;\n\n  feeRates: Record<Schema.FeeRate, number>;\n}\n\nconst INITIAL_STATE: FeesState = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n\n  rate: \"halfHourFee\",\n\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (\n  state: FeesState = INITIAL_STATE,\n  action: { type: string; data: any }\n): FeesState => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        feeRates: INITIAL_STATE[\"feeRates\"],\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport * as Utils from \"../utils\";\nimport * as Schema from \"../schema\";\nimport {\n  ACTIONS,\n  postDeleted,\n  postReceived,\n  contentItemReceived,\n  sharedPostDeleted,\n  sharedPostReceived,\n  postTipReceived\n} from \"../actions/FeedActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  follows: [],\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: {} as Record<string, Schema.Post[]>,\n  sharedPosts: {} as Record<string, Record<string, Common.SharedPost>>,\n  reloadDone: false\n};\n\nconst feed = (state = INITIAL_STATE, action: any): typeof INITIAL_STATE => {\n  if (postDeleted.match(action)) {\n    const {\n      payload: { author, id }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx > -1) {\n        draft.posts[author].splice(idx, 1);\n      }\n    });\n  }\n  if (postReceived.match(action)) {\n    const {\n      payload: { author, id, post }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx === -1) {\n        const newPost: Schema.Post = {\n          authorId: author,\n          contentItems: {},\n          date: post.date,\n          id,\n          status: post.status,\n          tags: post.tags,\n          title: post.title,\n          tips: {},\n          type: \"post\"\n        };\n        draft.posts[author].push(newPost);\n      }\n    });\n  }\n  if (contentItemReceived.match(action)) {\n    const {\n      payload: { author, contentItem, id, postID }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state (no author found), post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === postID);\n      if (idx === -1) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state, post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      (draft.posts[author][idx] as Schema.Post).contentItems[id] = contentItem;\n    });\n  }\n  if (sharedPostDeleted.match(action)) {\n    const { postID, sharerPublicKey } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      if (draft.sharedPosts[sharerPublicKey][postID]) {\n        delete draft.sharedPosts[sharerPublicKey][postID];\n      }\n    });\n  }\n  if (sharedPostReceived.match(action)) {\n    const {\n      originalAuthor,\n      postID,\n      shareDate,\n      sharerPublicKey\n    } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      draft.sharedPosts[sharerPublicKey][postID] = {\n        originalAuthor,\n        originalPostID: postID,\n        shareDate,\n        shareID: sharerPublicKey + postID,\n        sharedBy: sharerPublicKey\n      };\n    });\n  }\n\n  if (postTipReceived.match(action)) {\n    const { author, postID, tipAmt, tipID } = action.payload;\n\n    return produce(state, draft => {\n      const post = draft.posts[author].find(p => p.id === postID);\n      if (!post) {\n        Utils.logger.error(\n          `Got tip for non existent post ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n      }\n      if (!post.tips) {\n        // cached data from previous app version won't have the tips object\n        post.tips = {};\n      }\n      if (!post.tips[tipID]) {\n        post.tips[tipID] = tipAmt;\n      }\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.RELOAD_FEED: {\n      return { ...state, reloadDone: true };\n    }\n    case ACTIONS.RESET_DEFAULT_FOLLOWS: {\n      const {data} = action\n      return {...state, follows:data}\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS, updatedUserProfile } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { sharedPostReceived } from \"../actions/FeedActions\";\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  if (sharedPostReceived.match(action)) {\n    const { originalAuthor } = action.payload;\n    return produce(state, draft => {\n      if (!draft[originalAuthor]) {\n        draft[originalAuthor] = Common.createEmptyUser(originalAuthor);\n      }\n    });\n  }\n  if (updatedUserProfile.match(action)) {\n    return produce(state, draft => {\n      const { profile, publicKey } = action.payload;\n\n      if (!draft[publicKey]) {\n        draft[publicKey] = Common.createEmptyUser(publicKey);\n      }\n\n      Object.assign(draft[publicKey], profile);\n    });\n  }\n\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n  myServices: {},\n  services: {},\n  boughtServices: {}\n};\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const { id, serviceInfo } = action.data;\n      const tmp = { ...state.myServices };\n      tmp[id] = serviceInfo;\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE: {\n      const id = action.data;\n      const tmp = { ...state.myServices };\n      delete tmp[id];\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE: {\n      const { orderAck, owner, serviceID } = action.data;\n      const servicesTmp = { ...state.boughtServices };\n\n      if (!servicesTmp[owner]) {\n        servicesTmp[owner] = {};\n      }\n      const selectedService = servicesTmp[owner];\n      if (!selectedService[serviceID]) {\n        selectedService[serviceID] = [];\n      }\n      selectedService[serviceID].push(orderAck);\n      return { ...state, boughtServices: servicesTmp };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/AppActions\";\n\nconst INITIAL_STATE = {\n  dialogText: '',\n  dialogHasCallback:false\n};\nconst app = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.OPEN_DIALOG: {\n      const {text,hasCallback} = action.data\n      return { ...state, dialogText: text,dialogHasCallback:hasCallback };\n    }\n    case ACTIONS.CLOSE_DIALOG: {\n      return {...state, dialogText: '',dialogHasCallback: false}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","import produce from \"immer\";\n\nimport * as Utils from \"../utils\";\nimport { set } from \"../actions/SettingsActions\";\n\nconst INITIAL_STATE: Record<string, string | number | boolean> = {};\n\nconst settings = produce((draft, action) => {\n  try {\n    if (set.match(action)) {\n      const { key, value } = action.payload;\n      draft[key] = value;\n    }\n  } catch (e) {\n    Utils.logger.error(`Error inside settings reducer:`);\n    Utils.logger.error(e);\n  }\n}, INITIAL_STATE);\n\nexport default settings;\n","import produce from \"immer\";\n\nimport { CoordinateWithHash } from \"../schema\";\n\nimport {\n  coordinateDeleted,\n  coordinateReceived\n} from \"../actions/CoordinateActions\";\n\nconst INITIAL_STATE = {} as Record<string, CoordinateWithHash>;\n\nconst coordinates = produce((draft, action) => {\n  if (coordinateDeleted.match(action)) {\n    const { coordinateSHA256 } = action.payload;\n    delete draft[coordinateSHA256];\n  }\n  if (coordinateReceived.match(action)) {\n    const { coordinate, coordinateSHA256 } = action.payload;\n    draft[coordinateSHA256] = { ...coordinate, coordinateSHA256 };\n  }\n}, INITIAL_STATE);\n\nexport default coordinates;\n","import { combineReducers } from \"redux\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\";\nimport AppReducer from \"./AppReducer\";\nimport settings from \"./settings\";\nimport coordinates from \"./CoordinatesReducer\";\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders: OrdersReducer,\n  app: AppReducer,\n  settings,\n  coordinates\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\nimport { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state) ?? \"\";\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = publicKey => (state: State): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey ?? \"\");\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n\nexport const selectAllOtherUsers = createSelector(\n  (state: State) => state.userProfiles,\n  (state: State) => state.node.publicKey,\n  (users, selfPublicKey): Schema.User[] => {\n    return Object.values(users).filter(\n      user => user.publicKey !== selfPublicKey\n    );\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectFollows = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.follows,\n  (selfPublicKey, follows) => {\n    return follows.filter(f => f.user !== selfPublicKey);\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { PublishedContent } from \"../../schema\";\n\nexport const selectOwnPublishedContent = createSelector(\n  (state: State) => state.content.publishedContent,\n  (state: State) => state.content.publicContent,\n  (privateContent, publicContent): Record<string, PublishedContent> => {\n    return {\n      ...privateContent,\n      ...publicContent\n    };\n  }\n);\n","import { createSelector } from \"reselect\";\nimport uniq from \"lodash/uniq\";\nimport * as Common from \"shock-common\";\n\nimport { State } from \"../../reducers\";\nimport * as Schema from \"../../schema\";\n\nexport const selectConvos: (state: State) => Schema.Convo[] = createSelector(\n  (state: State) => state.chat.convos,\n  convos => {\n    return Object.values(convos);\n  }\n);\n\nexport const selectSingleConvo = (convoID: string) => (\n  state: State\n): Schema.Convo | null => {\n  const convo = state.chat.convos[convoID];\n  return convo ?? null;\n};\n\n/**\n * TODO: Memoize.\n */\nexport const selectIsInContact = (publicKey: string) => (\n  state: State\n): boolean => {\n  return !!Object.values(state.chat.convos).find(\n    convo => convo.with === publicKey\n  );\n};\n\nexport const selectCurrentHandshakeAddress = (state: State) =>\n  state.chat.currentHandshakeAddress;\n\nexport const selectReceivedRequests: (\n  state: State\n) => Schema.HandshakeReqNew[] = createSelector(\n  (state: State) => state.chat.receivedRequests,\n  selectConvos,\n  (receivedRequests, convos) => {\n    return Object.values(receivedRequests).filter(\n      req => !convos.find(convo => convo.id === req.receiverConvoID)\n    );\n  }\n);\n\nexport const selectAllMessages = (state: State) => state.chat.convoToMessages;\n\nexport const selectContacts = createSelector(\n  (state: State) => state.chat.convos,\n  (state: State) => state.userProfiles,\n  (convos, users): Common.User[] => {\n    const _publicKeys = Object.values(convos).map(convo => convo.with);\n    const publicKeys = uniq(_publicKeys);\n    return publicKeys.map(publicKey => {\n      const user = users[publicKey];\n      if (!user) {\n        return Common.createEmptyUser(publicKey);\n      }\n      return user;\n    });\n  }\n);\n\nexport const selectCommunication = (convoIDOrRequestID: string) => (\n  state: State\n): Schema.Convo | Schema.HandshakeReqNew | null => {\n  const maybeConvo = state.chat.convos[convoIDOrRequestID];\n  const maybeRequest = state.chat.receivedRequests[convoIDOrRequestID];\n\n  if (maybeRequest) {\n    return maybeRequest;\n  }\n\n  if (maybeConvo) {\n    return maybeConvo;\n  }\n\n  return null;\n};\n\nexport const selectConvoMessages = (convoID: string) => (\n  state: State\n): Schema.ConvoMsg[] => {\n  return Object.values(state.chat.convoToMessages[convoID]).sort((a, b) => {\n    return b.timestamp - a.timestamp;\n  });\n};\n","import * as Common from \"shock-common\";\nimport pick from \"lodash/pick\";\nimport pickBy from \"lodash/pickBy\";\nimport { createSelector } from \"reselect\";\n\nimport * as Schema from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\nimport { selectFollows } from \"./follows\";\n\nexport const selectFeedPosts = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.posts,\n  (selfPublicKey, posts) => {\n    // TODO: fix self-follow bug\n    return pickBy(posts, (_, publicKey) => publicKey !== selfPublicKey);\n  }\n);\n\nexport const selectAllPosts = (state: State) => state.feed.posts;\n\nexport const selectAllSharedPosts = (state: State) => state.feed.sharedPosts;\n\nexport const selectSinglePost = (authorId: string, postID: string) => (\n  state: State\n): Schema.Post | null => {\n  return state.feed.posts[authorId]?.find(post => post.id === postID) || null;\n};\n\nexport const selectPostsNewestToOldest = (publicKey: string) => (\n  state: State\n): Array<Schema.Post | Common.SharedPost> => {\n  const posts = state.feed.posts[publicKey]?.slice() || [];\n  const sharedPostsMap = state.feed.sharedPosts[publicKey] || {};\n  const sharedPosts = Object.values(sharedPostsMap);\n  const allPosts = [...posts, ...sharedPosts];\n\n  allPosts.sort((a, b) => {\n    const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n    const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n    return beta - alpha;\n  });\n\n  return allPosts;\n};\n\nexport const selectSharedPost = (sharer: string, postID: string) => (\n  state: State\n): Common.SharedPost | null => {\n  const sharedPostsMap = state.feed.sharedPosts[sharer] || {};\n  return sharedPostsMap[postID] || null;\n};\n\nexport const selectAllPostsFromFollowedNewestToOldest = createSelector(\n  selectAllPosts,\n  selectAllSharedPosts,\n  selectFollows,\n  (posts, sharedPosts, follows): Array<Schema.Post | Common.SharedPost> => {\n    const followedPublicKeys = follows.map(f => f.user);\n    const filteredPosts = pick(posts, followedPublicKeys);\n    const filteredShared = pick(sharedPosts, followedPublicKeys);\n\n    const allNonShared = Object.values(filteredPosts).flat();\n    const allShared = Object.values(filteredShared)\n      .map(records => Object.values(records))\n      .flat();\n\n    const all = [...allNonShared, ...allShared].sort((a, b) => {\n      const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n      const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n      return beta - alpha;\n    });\n\n    return all;\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { CoordinateWithHash } from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nexport const selectAllCoordinates = createSelector(\n  (state: State) => state.coordinates,\n  (coordinates): CoordinateWithHash[] => {\n    return Object.values(coordinates);\n  }\n);\n\nexport const selectAllCoordinatesNewestToOldest = createSelector(\n  selectAllCoordinates,\n  (coords): CoordinateWithHash[] => {\n    return coords.slice().sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  }\n);\n\nexport const selectSingleCoordinate = (coordinateSHA256: string) => (\n  state: State\n) => state.coordinates[coordinateSHA256];\n","import {\n  useSelector as originalUseSelector,\n  TypedUseSelectorHook\n} from \"react-redux\";\n\nimport { State } from \"../../reducers\";\n\nexport const useSelector: TypedUseSelectorHook<State> = (selector, eqFn) =>\n  originalUseSelector(selector, eqFn);\n\nexport const selectRoot = (state: State) => state;\n\nexport * from \"./auth\";\nexport * from \"./users\";\nexport * from \"./follows\";\nexport * from \"./publishedContent\";\nexport * from \"./chat\";\nexport * from \"./feed\";\nexport * from \"./coordinates\";\n","import {\n  createStore,\n  applyMiddleware,\n  compose,\n  AnyAction,\n  Action\n} from \"redux\";\nimport thunk, { ThunkDispatch } from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport {\n  useSelector as origUseSelector,\n  useDispatch as originalUseDispatch\n} from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport const useDispatch = (): ThunkDispatch<State, undefined, Action> => {\n  return originalUseDispatch() as ThunkDispatch<State, undefined, Action>;\n};\n\nexport * from \"./selectors\";\n","import Http from \"axios\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\nimport { exchangeKeyPair } from \"../actions/EncryptionActions\";\nimport * as Encryption from \"./Encryption\";\nimport { safeParseJSON } from \"./JSON\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\") {\n    return config;\n  }\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return { ...response, data: safeParseJSON(response.data) };\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const { relayId } = store.getState().node;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n      if (relayId) {\n        /////\n        config.headers.common[\"x-shock-hybrid-relay-id-x\"] = relayId;\n        /////\n      }\n    }\n\n    // @ts-ignore\n    config.originalData = config.originalData || config.data;\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const { store } = await import(\"../store\");\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      if (\n        response?.data.field === \"deviceId\" &&\n        (error.config.retries ?? 0) < 2\n      ) {\n        store.dispatch(setAuthenticated(false));\n        const keyPair = await exchangeKeyPair()(store.dispatch);\n        error.config.retries = (error.config.retries ?? 0) + 1;\n        return Http({\n          ...error.config,\n          data: error.config.originalData,\n          headers: {\n            ...error.config.headers,\n            \"encryption-device-id\": keyPair.deviceId\n          }\n        });\n      }\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const set = createAction<{\n  key: string;\n  value: string | number | boolean;\n}>(\"settings/set\");\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\nimport {\n  PublishedContent,\n  isPublishedContent,\n  PublicContentItem,\n  isPublicContentItem\n} from \"../schema\";\nimport { parseJson, logger } from \"../utils\";\nimport { openDialog } from \"./AppActions\";\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB: \"content/setSeedProviderPub\",\n  SET_SEED_INFO: \"content/setSeedInfo\",\n\n  PUBLISHED_CONTENT_ADDED: \"content/publishedContentAdded\",\n  PUBLISHED_CONTENT_REMOVED: \"content/publishedContentRemoved\",\n\n  ADD_UNLOCKED_CONTENT: \"content/addUnlocked\",\n  ADD_STREAM: \"content/addStream\",\n  REMOVE_STREAM: \"content/removeStream\",\n  ADD_AVAILABLE_TOKEN: \"content/addToken\",\n  REMOVE_USED_TOKEN: \"content/removeToken\",\n  ADD_STREAM_TOKEN: \"content/addStreamToken\",\n  REMOVE_STREAM_TOKEN: \"content/removeStreamToken\"\n} as const;\n\nexport const setSeedProviderPub = (\n  pub,\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    let value: string | Record<string, any> = {\n      $$__ENCRYPT__FOR: \"me\",\n      value: pub\n    };\n    if (!pub) {\n      value = \"\";\n    }\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>preferencesSeedServiceProvider\",\n      value\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (\n  seedUrl: string,\n  seedToken: string,\n  dontBackup = false\n) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0, -1) : seedUrl;\n  if (!dontBackup) {\n    const infoS = JSON.stringify({ seedUrl: cleanUrl, seedToken });\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>preferencesSeedServiceData\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: infoS\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: { seedUrl: cleanUrl, seedToken }\n  });\n};\n\nexport const publishedContentAdded = createAction<{\n  content: PublishedContent;\n  res: { ok: boolean; id: string };\n}>(ACTIONS.PUBLISHED_CONTENT_ADDED);\n\nexport const publicContentAdded = createAction<{\n  item: PublicContentItem;\n}>(\"content/publicContentAdded\");\n\nexport const addPublishedContent = (\n  content: PublishedContent | PublicContentItem,\n  type: \"public\" | \"private\"\n) => async dispatch => {\n  if (type === \"public\") {\n    if (!isPublicContentItem(content)) {\n      throw new TypeError(\n        `Expected content to upload to be a PublicContentItem`\n      );\n    }\n\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>publishedContentPublic>${content.id}`,\n      value: content\n    });\n\n    dispatch(\n      publicContentAdded({\n        item: content\n      })\n    );\n\n    return content;\n  } else {\n    const { data } = await Http.post<{ ok: boolean; id: string }>(\n      \"/api/gun/set\",\n      {\n        path: \"$user>publishedContent\",\n        value: {\n          $$__ENCRYPT__FOR: \"me\",\n          value: JSON.stringify(content)\n        }\n      }\n    );\n    dispatch(\n      publishedContentAdded({\n        content,\n        res: data\n      })\n    );\n    return data;\n  }\n};\n\nexport const publishedContentRemoved = createAction<{ id: string }>(\n  ACTIONS.PUBLISHED_CONTENT_REMOVED\n);\n\nexport const unlockContent = (amt, owner, postID) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"contentReveal\",\n    amt,\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: postID\n  });\n  const revealRes = data.orderAck.response;\n  if (revealRes && revealRes.unlockedContents) {\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type: ACTIONS.ADD_UNLOCKED_CONTENT,\n          data: { contentPath: `${owner}>posts>${postID}`, content }\n        });\n      }\n    }\n  }\n};\nexport const addStream = (\n  {\n    seedToken,\n    liveToken,\n    streamUrl,\n    streamPostId,\n    streamContentId,\n    streamStatusUrl,\n    streamBroadcasterUrl,\n    tipOverlayUrl\n  },\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: JSON.stringify({\n          seedToken,\n          liveToken,\n          streamUrl,\n          streamPostId,\n          streamContentId,\n          streamStatusUrl,\n          streamBroadcasterUrl,\n          tipOverlayUrl\n        })\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {\n      seedToken,\n      liveToken,\n      streamUrl,\n      streamPostId,\n      streamContentId,\n      streamStatusUrl,\n      streamBroadcasterUrl,\n      tipOverlayUrl\n    }\n  });\n};\nexport const removeStream = (\n  dontBackup = false,\n  noDialog = false\n) => async dispatch => {\n  if (!noDialog) {\n    openDialog({\n      text: \"The recording of the stream will be published in a few moments.\"\n    })(dispatch);\n  }\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: \"NO DATA\"\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeUnavailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\n\nconst OWN_PUBLISHED_CONTENT_QUERY = \"$user::publishedContent::map.on\";\n\nexport const subOwnPublishedContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  console.debug(`Subscribing to own published content`);\n  const subscription = await rifle({\n    query: OWN_PUBLISHED_CONTENT_QUERY,\n    reconnect: true,\n    publicKey: \"me\",\n    onData: async (content: string, key) => {\n      try {\n        console.debug(`Received own content:`);\n        console.debug(content);\n\n        if (typeof key !== \"string\") {\n          throw new TypeError(`Invalid content key received: ${key}`);\n        }\n\n        if (!content) {\n          dispatch(\n            publishedContentRemoved({\n              id: key\n            })\n          );\n          return;\n        }\n\n        if (typeof content !== \"string\") {\n          throw new TypeError(\n            `Invalid content (in key ${key}) received (${JSON.stringify(\n              content\n            )})`\n          );\n        }\n\n        const parsed = parseJson(content);\n\n        if (!isPublishedContent(parsed)) {\n          throw new TypeError(\n            `Invalid content received (might be incomplete replication): ${JSON.stringify(\n              parsed,\n              null,\n              2\n            )}`\n          );\n        }\n\n        dispatch(\n          publishedContentAdded({\n            content: parsed,\n            res: {\n              id: key,\n              ok: true\n            }\n          })\n        );\n      } catch (e) {\n        console.error(`Error inside own published content sub:`);\n        console.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n\nexport const unsubOwnPublishedContent = () => () => {\n  console.debug(`Unsubbing own published content.`);\n  unsubscribeRifleByQuery(OWN_PUBLISHED_CONTENT_QUERY);\n};\n\nexport const subOwnPublicContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  logger.debug(`Subscribing to own public content`);\n  const subscription = await rifle({\n    query: \"$user::publishedContentPublic::map.on\",\n    reconnect: true,\n    onError(e) {\n      alert(`Error inside own public content rifle: ${JSON.stringify(e)}`);\n      logger.error(`Error inside own public content rifle: `, e);\n    },\n    onData: async (item: unknown) => {\n      try {\n        if (item === null) {\n          return; // was deleted\n        }\n        logger.debug(`Received own public item:`);\n        logger.debug(item);\n\n        if (!isPublicContentItem(item)) {\n          throw new TypeError(\n            `Invalid public content item: ${JSON.stringify(item, null, 2)}`\n          );\n        }\n\n        dispatch(\n          publicContentAdded({\n            item\n          })\n        );\n      } catch (e) {\n        logger.error(`Error inside own public content sub:`);\n        logger.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\",\n  LOAD_LIGHTNING_INFO: \"wallet/lightningInfo/load\"\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  try {\n    const { data } = await Http.get(`/api/lnd/balance`);\n\n    dispatch({\n      type: ACTIONS.LOAD_BALANCE,\n      data: {\n        channelBalance: data.channel_balance,\n        confirmedBalance: data.confirmed_balance,\n        pendingChannelBalance: data.pending_channel_balance\n      }\n    });\n  } catch (e) {\n    console.error(\n      `When trying to fetch the balance for the wallet, an error ocurred:`,\n      e\n    );\n  }\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\n      \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n    );\n    const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n    dispatch({\n      type: ACTIONS.LOAD_USD_RATE,\n      data: exchangeRate\n    });\n  } catch (e) {\n    console.error(`An error happened when trying to fetch the USD rate:`, e);\n  }\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { transactions } = getState().wallet;\n\n    if (\n      (transactions.page >= page && !reset) ||\n      transactions.totalPages < page\n    ) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/transactions\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred when fetching transactions (fetchTransactions()):`,\n      e\n    );\n  }\n};\n\nexport const fetchChannels = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n    dispatch({\n      type: ACTIONS.LOAD_CHANNELS,\n      data: data.channels\n    });\n  } catch (e) {\n    console.error(\n      `An ocurred ocurred when fetching channels (fetchChannels()):`,\n      e\n    );\n  }\n};\n\nexport const fetchPeers = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n    dispatch({\n      type: ACTIONS.LOAD_PEERS,\n      data: data.peers\n    });\n\n    return data;\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching peers (fetchPeers()) (will be re-thrown):`,\n      e\n    );\n    throw e;\n  }\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { invoices } = getState().wallet;\n\n    if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/invoices\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching invoices (fetchInvoices()):`,\n      e\n    );\n  }\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n  } catch (err) {\n    console.error(\n      `An error ocurred while connecting peer --| ${host} |-- with public key --| ${publicKey} |-- in connectPeer()`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    dispatch(fetchChannels());\n  } catch (err) {\n    console.error(\n      `An error ocurred while opening a channel (openChannel()) with public key --| ${publicKey} |--, channel capacity: --| ${channelCapacity} |-- and push amount: --| ${pushAmount} |--:`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const FetchLightningInfo = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/getinfo\");\n    dispatch({\n      type: ACTIONS.LOAD_LIGHTNING_INFO,\n      data\n    });\n  } catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Buffer;\n  ephemPublicKey: Buffer;\n  iv: Buffer;\n  mac: Buffer;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Buffer | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Buffer | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Buffer) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Buffer | string): Buffer => {\n  if (Buffer.isBuffer(key)) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    Buffer.isBuffer(encryptedMessage.ciphertext) &&\n    Buffer.isBuffer(encryptedMessage.iv) &&\n    Buffer.isBuffer(encryptedMessage.mac) &&\n    Buffer.isBuffer(encryptedMessage.ephemPublicKey)\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    Buffer.isBuffer(encryptedMessage.ciphertext) &&\n    Buffer.isBuffer(encryptedMessage.iv) &&\n    Buffer.isBuffer(encryptedMessage.mac) &&\n    Buffer.isBuffer(encryptedMessage.ephemPublicKey)\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName) ||\n  process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\";\n\nexport const generateKeyPair = () => {\n  const privateKey: Buffer = ECCrypto.generatePrivate();\n  const publicKey: Buffer = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  try {\n    const processedPrivateKey = processKey(privateKey);\n    const decryptedMessageBuffer: Buffer = await ECCrypto.decrypt(\n      processedPrivateKey,\n      convertToEncryptedMessage(encryptedMessage)\n    );\n    const decryptedMessage = decryptedMessageBuffer.toString(\"utf-8\");\n    const parsedMessage = safeParseJSON(decryptedMessage);\n\n    return parsedMessage;\n  } catch (err) {\n    if (err.message?.toLowerCase() === \"bad mac\") {\n      console.warn(\n        \"Bad Mac!\",\n        err,\n        convertToEncryptedMessage(encryptedMessage)\n      );\n    }\n\n    throw err;\n  }\n};\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Schema from \"../schema\";\nimport * as Utils from \"../utils\";\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\",\n  RELOAD_FEED: \"feed/reload\",\n  RESET_DEFAULT_FOLLOWS: \"follows/reload\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const postDeleted = createAction<{\n  author: string;\n  id: string;\n}>(\"feed/postDeleted\");\n\nexport const postReceived = createAction<{\n  author: string;\n  id: string;\n  post: Schema.PostRaw;\n}>(\"feed/postReceived\");\n\nexport const subSinglePost = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}::on`,\n      onData(post: string) {\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author,\n              id: postID\n            })\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )}: ${e.message}`\n        );\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nexport const subscribeUserPosts = (publicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${publicKey}::posts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside posts subscription for ...${publicKey.slice(-8)} -> `,\n          e\n        );\n        alert(\n          `Error inside posts subscription for ...${publicKey.slice(-8)}: ${\n            e.message\n          }`\n        );\n      },\n      onData: (post: unknown, postID: string) => {\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author: publicKey,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author: publicKey,\n              id: postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In posts subscription for user ...${publicKey.slice(\n              -8\n            )}, invalid data -> `,\n            post\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to posts for ...${publicKey.slice(-8)} -> `,\n      e\n    );\n    alert(`Could not sub to posts for ...${publicKey.slice(-8)}: ${e.message}`);\n\n    return () => {};\n  }\n};\n\nexport const contentItemReceived = createAction<{\n  author: string;\n  contentItem: Common.ContentItem;\n  id: string;\n  postID: string;\n}>(\"feed/contentItemReceived\");\n\nexport const subPostContent = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}>contentItems::map.on`,\n      onData(contentItem: unknown, id: string) {\n        // CAST: unfortunate isContentItem typings\n        if (Common.isContentItem(contentItem)) {\n          dispatch(\n            contentItemReceived({\n              author,\n              contentItem,\n              id,\n              postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Invalid content item (${id}) in post content subscription from ..${author.slice(\n              -8\n            )} for post ${postID} -> `,\n            contentItem\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID} -> `,\n          e\n        );\n        alert(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID}: ${e.message}`\n        );\n      }\n    });\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to post content from ...${author.slice(\n        -8\n      )} for post ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not sub to posts from ...${author.slice(-8)} for post ${postID}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async dispatch => {\n  const subscription = await rifle({\n    query: FOLLOWS_QUERY,\n    reconnect: true,\n    onData: async (follow, key) => {\n      console.info(`processing follow`);\n      console.info(follow);\n      if (typeof key !== \"string\") {\n        console.warn(`Invalid follow key received: ${key}`);\n        return;\n      }\n\n      if (!follow) {\n        dispatch(removeFollow(key));\n        return;\n      }\n\n      if (typeof follow.user !== \"string\") {\n        console.warn(`Invalid follow user received (${follow.user})`);\n        return;\n      }\n\n      dispatch(addFollow(follow));\n    }\n  });\n\n  console.debug(\"subbing follows\");\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  unsubscribeRifleByQuery(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n\nexport const reloadFeed = () => ({\n  type: ACTIONS.RELOAD_FEED\n});\n\nexport const reloadFollows = (follows: Common.Follow[]) => ({\n  type: ACTIONS.RESET_DEFAULT_FOLLOWS,\n  data: follows\n});\n\n// #region sharedPosts\n\nexport const sharedPostDeleted = createAction<{\n  postID: string;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostDeleted\");\n\nexport const sharedPostReceived = createAction<{\n  originalAuthor: string;\n  postID: string;\n  shareDate: number;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostReceived\");\n\nexport const subSharedPosts = (sharerPublicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${sharerPublicKey}::sharedPosts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )}: ${e.message}`\n        );\n      },\n      onData: (sharedPost: unknown, postID: string) => {\n        if (Common.isSharedPostRaw(sharedPost)) {\n          dispatch(\n            sharedPostReceived({\n              originalAuthor: sharedPost.originalAuthor,\n              postID,\n              shareDate: sharedPost.shareDate,\n              sharerPublicKey\n            })\n          );\n        } else if (sharedPost === null) {\n          dispatch(\n            sharedPostDeleted({\n              postID,\n              sharerPublicKey\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In shared posts subscription for user ...${sharerPublicKey.slice(\n              -8\n            )}, invalid data -> `,\n            sharedPost\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\n// #endregion sharedPosts\n\nexport const postTipReceived = createAction<{\n  author: string;\n  postID: string;\n  tipAmt: number;\n  tipID: string;\n}>(\"feed/postTipReceived\");\n\nexport const subPostTips = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}>tipsSet::map.on`,\n      onData(tipAmt: unknown, tipID: string) {\n        const nTipAmount = Number(tipAmt);\n        if (!isNaN(nTipAmount)) {\n          dispatch(\n            postTipReceived({\n              author,\n              postID,\n              tipAmt: nTipAmount,\n              tipID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Post ${postID} tips sub, tipID ${tipID} got non number value -> `,\n            tipAmt\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID}: ${e.message}`\n    );\n    return () => {};\n  }\n};\n","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { exchangeKeyPair } from \"./EncryptionActions\";\nimport { connectSocket } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_WEBCLIENT_PREFIX: \"node/setWebClientPrefix\",\n  SET_RELAY_ID: \"auth/relay/set\",\n  SET_ACCESS_SECRET: \"auth/accessSecret/set\"\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nexport const fetchNodeHealth = (hostIP, relayId) => async dispatch => {\n  try {\n    const headers = {};\n    if (relayId) {\n      headers[\"x-shock-hybrid-relay-id-x\"] = relayId;\n    }\n    const { data } = await Http.get(`${hostIP}/healthz`, {\n      headers\n    });\n    if (!data) {\n      throw new Error(\n        `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n      );\n    }\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (\n  hostIP,\n  resetData = true,\n  relayId = null,\n  accessSecret = null\n) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n    if (relayId) {\n      dispatch(setRelayId(relayId));\n    }\n    if (accessSecret) {\n      dispatch(setAccessSecret(accessSecret));\n    }\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(exchangeKeyPair())\n    ]);\n\n    connectSocket(host, true);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(\n      `https://${sanitizedHostIP}`,\n      relayId\n    )(dispatch);\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(\n    `http://${sanitizedHostIP}`,\n    relayId\n  )(dispatch);\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({\n  alias,\n  password,\n  accessSecret\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/auth\", {\n      alias,\n      password,\n      accessSecret\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({\n  alias,\n  password,\n  accessSecret\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password,\n      accessSecret\n    });\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    await Http.post(\"/api/initUserInformation\", {});\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({ alias, password }) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet\", {\n      alias,\n      password\n    });\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    await Http.post(\"/api/initUserInformation\", {});\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const setWebclientPrefix = prefix => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_WEBCLIENT_PREFIX,\n    data: prefix\n  });\n};\n\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n\nexport const setAccessSecret = accessSecret => ({\n  type: ACTIONS.SET_ACCESS_SECRET,\n  data: accessSecret\n});\n","import * as Common from \"shock-common\";\nimport isFinite from \"lodash/isFinite\";\n\nconst createValidator = <T extends Record<string, unknown>>(\n  valMap: Record<keyof T, (val: any) => void>,\n  baseValidator: (o: unknown) => boolean = () => true\n) => (o: unknown): o is T => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  if (!baseValidator(o)) {\n    return false;\n  }\n\n  return Object.entries(valMap).every(([key, validator]) => {\n    return validator(o[key]);\n  });\n};\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface HandshakeReqNew {\n  /**\n   * Sender's epub.\n   */\n  epub: string;\n  /**\n   * Sender's public key.\n   */\n  from: string;\n  /**\n   * Handshake address where the request was written to.\n   */\n  handshakeAddress: string;\n  /**\n   * The request's unique id.\n   */\n  id: string;\n\n  /**\n   * The ID for the receiver's conversation feed in their user graph. The sender\n   * will preemptively watch for messages in the receiver's conversation part of\n   * their user graph under this ID. When the receiver accepts, they will create\n   * the conversation feed under this ID and start sending messages. The initial\n   * $$__INITIAL__MSG sentinel message signals to the sender the request was\n   * accepted.\n   */\n  receiverConvoID: string;\n\n  /**\n   * The ID for the sender's conversation feed in their user graph. This\n   * conversation feed is already present upon sending the request.\n   */\n  senderConvoID: string;\n\n  /**\n   * Timestamp.\n   */\n  timestamp: number;\n}\n\nexport const isHandshakeReqNew = (o: unknown): o is HandshakeReqNew => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as HandshakeReqNew;\n\n  if (!Common.isPopulatedString(obj.epub)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.from)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.handshakeAddress)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.receiverConvoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.senderConvoID)) {\n    return false;\n  }\n\n  if (typeof obj.timestamp !== \"number\") {\n    return false;\n  }\n\n  return true;\n};\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Convo {\n  /**\n   * The id for the conversation in the recipient's user graph.\n   */\n  counterpartConvoID: string;\n  /**\n   * The id.\n   */\n  id: string;\n  /**\n   * The recipient's public key.\n   */\n  with: string;\n  /**\n   * The recipient's epub.\n   */\n  withEpub: string;\n}\n\nexport const isConvo = (o: unknown): o is Convo => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as Convo;\n\n  if (!Common.isPopulatedString(obj.counterpartConvoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  return Common.isPopulatedString(obj.with);\n};\n\nexport interface ConvoMsg {\n  body: string;\n  convoID: string;\n  err: string;\n  id: string;\n  state: \"ok\" | \"error\" | \"received\" | \"sending\";\n  timestamp: number;\n}\n\nexport const isConvoMsg = (o: unknown): o is ConvoMsg => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  const obj = (o as unknown) as ConvoMsg;\n\n  if (!Common.isPopulatedString(obj.body)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.convoID)) {\n    return false;\n  }\n\n  if (!Common.isPopulatedString(obj.id)) {\n    return false;\n  }\n\n  if (typeof obj.timestamp !== \"number\") {\n    return false;\n  }\n\n  return true;\n};\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  tips: Record<string, number>;\n  type: \"post\";\n}\n\nexport interface PublishedContent {\n  type: \"image/embedded\" | \"video/embedded\";\n  magnetURI: string;\n  width: number;\n  height: number;\n  title: string;\n  description: string;\n}\n\nexport const isPublishedContent = (o: unknown): o is PublishedContent => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublishedContent;\n\n  if (typeof obj.description !== \"string\") {\n    return false;\n  }\n  if (typeof obj.height !== \"number\") {\n    return false;\n  }\n  if (typeof obj.width !== \"number\") {\n    return false;\n  }\n  if (!Common.isPopulatedString(obj.title)) {\n    return false;\n  }\n  if (obj.type !== \"image/embedded\" && obj.type !== \"video/embedded\") {\n    return false;\n  }\n  return true;\n};\n\nexport interface Subscription {\n  off(): void;\n}\n\n/**\n * Sentinel value that signals the recipient disconnected inside the user to\n * incoming map.\n */\nexport const DID_DISCONNECT = \"DID_DISCONNECT\";\nexport interface PublicContentItem extends PublishedContent {\n  id: string;\n  author: string;\n  timestamp: number;\n}\n\nexport const isPublicContentItem = (o: unknown): o is PublicContentItem => {\n  if (!isPublishedContent(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublicContentItem;\n\n  if (!Common.isPopulatedString(obj.author)) {\n    return false;\n  }\n\n  return typeof obj.timestamp === \"number\";\n};\n\nexport type FeeRate = \"hourFee\" | \"halfHourFee\" | \"fastestFee\";\n\nexport interface CoordinateWithHash extends Common.Coordinate {\n  coordinateSHA256: string;\n}\n\nexport interface ContentRevealCoordinateMetadataInbound {\n  /**\n   * The post ID.\n   */\n  ackInfo: string;\n  /**\n   * Content ID to magnet URI.\n   */\n  unlockedContents: Record<string, string>;\n}\n\nexport interface ContentRevealCoordinateMetadataOutbound {\n  /**\n   * Same as ContentRevealCoordinateMetadataInbound.\n   */\n  response: ContentRevealCoordinateMetadataInbound;\n  /**\n   * Order type.\n   */\n  type: \"orderAck\";\n}\n\n/**\n * Post as stored in Gun. Without `contentItems`.\n */\nexport type PostRaw = Omit<Common.RawPost, \"contentItems\">;\n\nexport const isPostRaw = createValidator<PostRaw>({\n  date: isFinite,\n  status: Common.isPopulatedString,\n  tags: (val: string) => typeof val === \"string\",\n  title: Common.isPopulatedString\n});\n\nexport interface NodeInfo {\n  uris: string[];\n  synced_to_chain: boolean;\n  synced_to_graph: boolean;\n  identity_pubkey: string;\n  best_header_timestamp: string;\n  block_height: number;\n  num_pending_channels: number;\n  version: string;\n}\n","import { createAction } from \"@reduxjs/toolkit\";\nimport * as Common from \"shock-common\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport * as Utils from \"../utils\";\nimport * as Schema from \"../schema\";\nimport { rifle } from \"../utils/WebSocket\";\n\n//#region receivedRequests\n\n/**\n * Dispatched when the handshake address changes.\n */\nexport const handshakeAddressUpdated = createAction<{\n  handshakeAddress: string;\n}>(\"handshakeAddressUpdated\");\n\n/**\n * Subscribe to the current handshake address stored in gun.\n * @returns A thunk that returns a subscription.\n */\nexport const subCurrentHandshakeAddress = () => (\n  dispatch: (action: any) => void\n) => {\n  Utils.logger.debug(`Subscribing to current handshake address.`);\n  try {\n    return rifle({\n      query: `$user::currentHandshakeAddress::on`,\n      onData: handshakeAddress => {\n        Utils.logger.debug(\n          `Received current handshake address: ${handshakeAddress}`\n        );\n\n        if (!Common.isPopulatedString(handshakeAddress)) {\n          Utils.logger.error(\n            `Current handshake address not an string -> `,\n            JSON.stringify(handshakeAddress)\n          );\n          return;\n        }\n\n        dispatch(\n          handshakeAddressUpdated({\n            handshakeAddress\n          })\n        );\n      }\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to current handshake address: ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to current handshake address:`,\n      e\n    );\n  }\n};\n\n/**\n * Dispatched when a handshake request is received inside the current handshake\n * node.\n */\nexport const receivedHandshakeRequest = createAction<{\n  receivedRequest: Schema.HandshakeReqNew;\n}>(\"chat/receivedHandshakeRequest\");\n\n/**\n * Dispatched when a handshake request is deleted after accepting  it.\n */\nexport const handshakeRequestDeleted = createAction<{\n  id: string;\n}>(\"chat/handshakeRequestDeleted\");\n\n/**\n * Subscribe to received requests inside the specified handshake node.\n * @returns A thunk that returns a subscription.\n */\nexport const subHandshakeNode = (handshakeAddress: string) => (\n  dispatch: (action: any) => void,\n  getState: () => { chat: { currentHandshakeAddress: string } }\n): Promise<Schema.Subscription> => {\n  Utils.logger.debug(`Subscribing to handshake node: ${handshakeAddress} .`);\n  try {\n    return rifle({\n      query: `$gun::handshakeNodes>${handshakeAddress}::map.on`,\n      epubField: \"epub\",\n      onData: (handshakeRequest: Schema.HandshakeReqNew, id: string) => {\n        Utils.logger.debug(\n          `Subscription to handshake node: ${handshakeAddress} -> `,\n          handshakeRequest\n        );\n        const {\n          chat: { currentHandshakeAddress }\n        } = getState();\n        Utils.logger.debug(`Current address: ${currentHandshakeAddress}`);\n        if (handshakeAddress !== currentHandshakeAddress) {\n          return;\n        }\n        if (Schema.isHandshakeReqNew(handshakeRequest)) {\n          dispatch(\n            receivedHandshakeRequest({\n              receivedRequest: handshakeRequest\n            })\n          );\n        } else if (handshakeRequest === null) {\n          dispatch(\n            handshakeRequestDeleted({\n              id\n            })\n          );\n        } else {\n          Utils.logger.debug(`Not a handshake request -> `, handshakeRequest);\n        }\n      }\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to handshake node with address: ${handshakeAddress} : ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to handshake node with address: ${handshakeAddress} : `,\n      e\n    );\n  }\n};\n\n//#endregion receivedRequests\n\n//#endregion sentRequests\n\nconst createOutgoingConversationFeed = (\n  outgoingConvoID: string,\n  publicKey: string,\n  epub: string,\n  incomingConvoID: string\n) => {\n  const msgID = uuidv4();\n\n  const newOutgoingConvo: {\n    [K in keyof Schema.Convo]: any;\n  } & {\n    messages: Record<\n      string,\n      {\n        [K in keyof Schema.ConvoMsg]: any;\n      }\n    >;\n  } = {\n    id: outgoingConvoID,\n\n    with: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: publicKey\n    },\n\n    withEpub: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: epub\n    },\n\n    counterpartConvoID: {\n      $$__ENCRYPT__FOR: \"me\",\n      value: incomingConvoID\n    },\n\n    messages: {\n      [msgID]: {\n        id: msgID,\n        body: {\n          $$__ENCRYPT__FOR: publicKey,\n          $$__EPUB__FOR: epub,\n          value: Common.INITIAL_MSG\n        },\n        timestamp: Date.now(),\n        convoID: outgoingConvoID,\n        state: \"ok\",\n        err: \"\"\n      }\n    }\n  };\n\n  return newOutgoingConvo;\n};\n\nexport const acceptHandshakeRequest = (requestId: string) => async (\n  _: unknown,\n  getState: () => {\n    chat: { receivedRequests: Record<string, Schema.HandshakeReqNew> };\n  }\n) => {\n  const req: Schema.HandshakeReqNew = getState().chat.receivedRequests[\n    requestId\n  ];\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$user>convos>${req.receiverConvoID}`,\n    value: createOutgoingConversationFeed(\n      req.receiverConvoID,\n      req.from,\n      req.epub,\n      req.senderConvoID\n    )\n  });\n\n  Utils.Http.post(`/api/gun/put`, {\n    path: `$gun>handshakeNodes>${req.handshakeAddress}>${req.id}`,\n    value: null\n  });\n};\n\nexport const sendHandshakeRequest = (publicKey: string) => async (\n  _: unknown,\n  getState: () => { node: { publicKey: string } }\n) => {\n  Utils.logger.debug(\n    `Sending handshake request to ${publicKey.slice(0, 8)}...`\n  );\n  const epubP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(epub) {\n        Utils.logger.debug(\n          `Got epub for public Key ${publicKey.slice(0, 8)}... : ${epub}`\n        );\n        if (Common.isPopulatedString(epub)) {\n          subscription.then(sub => sub.off());\n          res(epub);\n        } else {\n          Utils.logger.debug(\n            `Could not fetch epub for public Key ${publicKey.slice(\n              0,\n              8\n            )}... : ${epub}`\n          );\n          subscription.then(sub => sub.off());\n          rej(new TypeError(`Could not fetch epub`));\n        }\n      },\n      query: `${publicKey}::epub::on`,\n      onError(e) {\n        Utils.logger.debug(\n          `Error when fetch epub for public Key ${publicKey.slice(\n            0,\n            8\n          )}... : ${epub}`\n        );\n        Utils.logger.error(e);\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const handshakeAddressP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(handshakeAddress) {\n        if (Common.isPopulatedString(handshakeAddress)) {\n          res(handshakeAddress);\n          subscription.then(sub => sub.off());\n        } else {\n          rej(new TypeError(`Could not fetch epub`));\n          subscription.then(sub => sub.off());\n        }\n      },\n      query: `${publicKey}::currentHandshakeAddress::on`,\n      onError(e) {\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const selfEpubP = Common.makePromise<string>((res, rej) => {\n    const subscription = rifle({\n      onData(epub) {\n        if (Common.isPopulatedString(epub)) {\n          res(epub);\n          subscription.then(sub => sub.off());\n        } else {\n          rej(new TypeError(`Could not fetch self epub`));\n          subscription.then(sub => sub.off());\n        }\n      },\n      query: `$user::epub::on`,\n      onError(e) {\n        if (typeof e === \"string\") {\n          rej(new Error(e));\n        } else {\n          rej(e);\n        }\n      }\n    });\n  });\n\n  const outgoingConvoID = uuidv4();\n  const incomingConvoID = uuidv4();\n  const requestID = uuidv4();\n  const [epub, handshakeAddress, selfEpub] = await Promise.all([\n    epubP,\n    handshakeAddressP,\n    selfEpubP\n  ]);\n\n  Utils.logger.debug(\n    `Got epub/handshakeaddress/selfEpub, sending request to public Key ${publicKey.slice(\n      0,\n      8\n    )}...`\n  );\n\n  const handshakeReqForGun: {\n    [K in keyof Schema.HandshakeReqNew]: any;\n  } = {\n    id: requestID,\n    from: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: getState().node.publicKey\n    },\n    epub: selfEpub,\n    timestamp: Date.now(),\n    receiverConvoID: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: incomingConvoID\n    },\n    senderConvoID: {\n      $$__ENCRYPT__FOR: publicKey,\n      $$__EPUB__FOR: epub,\n      value: outgoingConvoID\n    },\n    handshakeAddress\n  };\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$gun>handshakeNodes>${handshakeAddress}>${requestID}`,\n    value: handshakeReqForGun\n  });\n\n  // after request was sent let's now create our outgoing feed\n\n  Utils.logger.debug(\n    `Sent request to public Key ${publicKey.slice(\n      0,\n      8\n    )}... will now create outgoing conversation feed`\n  );\n\n  await Utils.Http.post(`/api/gun/put`, {\n    path: `$user>convos>${outgoingConvoID}`,\n    value: createOutgoingConversationFeed(\n      outgoingConvoID,\n      publicKey,\n      epub,\n      incomingConvoID\n    )\n  });\n};\n\nexport const convoReceived = createAction<{ convo: Schema.Convo }>(\n  \"chat/convoReceived\"\n);\n\nexport const convoDeleted = createAction<{ id: string }>(\"chat/convoDeleted\");\n\nexport const subConvos = () => async (\n  dispatch: (action: any) => void,\n  getState: () => { node: { publicKey: string } }\n) => {\n  try {\n    return rifle({\n      query: `$user::convos::map.on`,\n      onData: (convo: Schema.Convo, id: string) => {\n        console.log(\"--------------\");\n        console.log(convo);\n        console.log(\"--------------\");\n        if (convo === null) {\n          dispatch(\n            convoDeleted({\n              id\n            })\n          );\n          return;\n        }\n        if (!Schema.isConvo(convo)) {\n          return;\n        }\n        // @ts-expect-error\n        delete convo._;\n        // @ts-expect-error\n        delete convo.messages;\n        dispatch(\n          convoReceived({\n            convo\n          })\n        );\n      },\n      publicKey: getState().node.publicKey\n    });\n  } catch (e) {\n    alert(\n      `Could not establish a subscription to outgoing conversation feeds: ${e.message}`\n    );\n    Utils.logger.error(\n      `Could not establish a subscription to outgoing conversation feeds -> `,\n      e\n    );\n  }\n};\n\nexport const messageTransmissionRequested = createAction<{\n  convoID: string;\n  messageID: string;\n  message: string;\n}>(\"chat/messageTransmissionRequested\");\n\nexport const messageTransmissionSucceeded = createAction<{\n  convoID: string;\n  messageID: string;\n}>(\"chat/messageTransmissionSucceeded\");\n\nexport const messageTransmissionFailed = createAction<{\n  convoID: string;\n  errorMessage: string;\n  messageID: string;\n}>(\"chat/messageTransmissionFailed\");\n\nexport const sendMessage = (convoID: string, messageBody: string) => async (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n    };\n  }\n) => {\n  const messageID = uuidv4(); // does not throw, ever...?\n\n  try {\n    const convo = getState().chat.convos[convoID];\n\n    if (messageBody.trim().length === 0) {\n      return;\n    }\n\n    dispatch(\n      messageTransmissionRequested({\n        convoID,\n        messageID,\n        message: messageBody.trim()\n      })\n    );\n\n    const message: Schema.ConvoMsg = {\n      body: ({\n        $$__ENCRYPT__FOR: convo.with,\n        $$__EPUB__FOR: convo.withEpub,\n        value: messageBody\n      } as unknown) as string,\n      convoID,\n      id: messageID,\n      timestamp: Date.now(),\n      state: \"ok\",\n      err: \"\"\n    };\n\n    await Utils.Http.post(`/api/gun/put`, {\n      path: `$user>convos>${convoID}>messages>${messageID}`,\n      value: message\n    });\n\n    dispatch(\n      messageTransmissionSucceeded({\n        convoID,\n        messageID\n      })\n    );\n  } catch (e) {\n    Utils.logger.error(`Error inside sendMessage() -> `, e);\n    dispatch(\n      messageTransmissionFailed({\n        convoID,\n        errorMessage: e.message,\n        messageID\n      })\n    );\n  }\n};\n\nexport const messageTransmissionRetried = createAction<{\n  convoID: string;\n  messageID: string;\n}>(\"chat/messageTransmissionRetried\");\n\nexport const retryMessage = (convoID: string, messageID: string) => async (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n      convoToMessages: Record<\n        string,\n        Record<\n          string,\n          Schema.ConvoMsg & { err: string; state: \"ok\" | \"sending\" | \"error\" }\n        >\n      >;\n    };\n  }\n) => {\n  try {\n    const convo = getState().chat.convos[convoID];\n    const existingMessage = getState().chat.convoToMessages[convoID][messageID];\n\n    if (!existingMessage) {\n      throw new ReferenceError(\n        `Tried to retry sending a message that was not found in redux convoID: ${convoID} & messageID: ${messageID}`\n      );\n    }\n\n    dispatch(\n      messageTransmissionRetried({\n        convoID,\n        messageID\n      })\n    );\n\n    const message: Schema.ConvoMsg = {\n      body: ({\n        $$__ENCRYPT__FOR: convo.with,\n        $$__EPUB__FOR: convo.withEpub\n      } as unknown) as string,\n      convoID,\n      id: messageID,\n      timestamp: Date.now(),\n      state: \"ok\",\n      err: \"\"\n    };\n\n    await Utils.Http.post(`/api/gun/put`, {\n      path: `$user>convos>${convoID}>messages>${messageID}`,\n      value: message\n    });\n\n    dispatch(\n      messageTransmissionSucceeded({\n        convoID,\n        messageID\n      })\n    );\n  } catch (e) {\n    Utils.logger.error(`Error inside retryMessage() -> `, e);\n    dispatch(\n      messageTransmissionFailed({\n        convoID,\n        errorMessage: e.message,\n        messageID\n      })\n    );\n  }\n};\n\nexport const receivedConvoMessage = createAction<{\n  message: Schema.ConvoMsg;\n}>(\"chat/receivedConvoMessage\");\n\nexport const subConvoMessages = (convoID: string) => (\n  dispatch: (action: any) => void,\n  getState: () => {\n    chat: {\n      convos: Record<string, Schema.Convo>;\n    };\n  }\n) => {\n  try {\n    Utils.logger.debug(`Subscribing to messages for convo: ${convoID}`);\n\n    const convo = getState().chat.convos[convoID];\n\n    const outgoingSub = rifle({\n      query: `$user::convos>${convoID}>messages::map.on`,\n      onData: (message: unknown) => {\n        Utils.logger.debug(\n          `Outgoing subscription for convo: ${convoID} -> `,\n          message\n        );\n        if (Schema.isConvoMsg(message)) {\n          dispatch(\n            receivedConvoMessage({\n              message\n            })\n          );\n        } else if (message === null) {\n          // TODO: message deleted\n        } else {\n          Utils.logger.warn(\n            `Outgoing message in convo ${convo.id} does not correspond to schema -> `,\n            message\n          );\n        }\n      },\n      epubForDecryption: convo.withEpub,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside subConvoMessages() outgoing sub -> `,\n          e\n        );\n        alert(`Error inside outgoing messages subscription: ${e.message}`);\n      }\n    });\n\n    const incomingSub = rifle({\n      query: `${convo.with}::convos>${convo.counterpartConvoID}>messages::map.on`,\n      onData: (message: unknown) => {\n        Utils.logger.debug(\n          `Incoming subscription for convo: ${convoID} -> `,\n          message\n        );\n        if (Schema.isConvoMsg(message)) {\n          dispatch(\n            receivedConvoMessage({\n              message: {\n                ...message,\n                state: \"received\",\n                // Otherwise it will reference the other user's convo\n                convoID: convo.id\n              }\n            })\n          );\n        } else if (message === null) {\n          // TODO: message deleted\n        } else {\n          Utils.logger.warn(\n            `Incoming message in convo ${convo.id} does not correspond to schema -> `,\n            message\n          );\n        }\n      },\n      epubForDecryption: convo.withEpub,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside subConvoMessages() incoming sub -> `,\n          e\n        );\n        alert(`Error inside incoming messages subscription: ${e.message}`);\n      }\n    });\n\n    return () => {\n      Promise.all([outgoingSub, incomingSub]).then(subs =>\n        subs.forEach(sub => sub.off())\n      );\n    };\n  } catch (e) {\n    Utils.logger.error(`Error inside subConvoMessages() -> `, e);\n    alert(`Could not subscribe to conversation messages: ${e.message}`);\n  }\n};\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport GitInfo from \"react-git-info/macro\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nimport \"./css/index.scoped.css\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <NavLink to=\"/Backups\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </NavLink>\n          <NavLink to=\"/walletSettings\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\" />\n            </div>\n            <p className=\"drawer-item-title unselectable\">Wallet Settings</p>\n          </NavLink>\n        </div>\n\n        <span className=\"drawer-commit-hash\">{GitInfo().commit.shortHash}</span>\n        <div className=\"drawer-bottom-section\">\n          <NavLink className=\"drawer-item\" to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>\n\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n          <NavLink to=\"/QRScanner\" onClick={close}>\n            <i\n              onClick={onClickScan}\n              className=\"icon-solid-scan\"\n              style={{ color: \"var(--main-blue)\" }}\n            ></i>\n          </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\nimport { toast } from \"react-toastify\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\n\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as Store from \"./store\";\nimport \"./styles/App.global.css\";\nimport Stream from \"./common/Post/components/Stream\";\nimport { dragElement } from \"./utils/ui\";\nimport * as Utils from \"./utils\";\nimport { Http } from \"./utils\";\nimport {\n  addStream,\n  removeStream,\n  setSeedInfo,\n  setSeedProviderPub\n} from \"./actions/ContentActions\";\nimport { closeDialog } from \"./actions/AppActions\";\n\nimport { ToastContainer } from \"react-toastify\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst WalletSettingsPage = React.lazy(() => import(\"./pages/WalletSettings\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/PublishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst CreatePostPage = React.lazy(() => import(\"./pages/Profile/CreatePost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/GoLive/GoLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\nconst BackupsPage = React.lazy(() => import(\"./pages/Backups\"));\nconst PublicContentItemPage = React.lazy(() =>\n  import(\"./pages/PublicContentItem\")\n);\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const streamUrl = Store.useSelector(({ content }) => content.streamUrl);\n  const streamStatusUrl = Store.useSelector(\n    ({ content }) => content.streamStatusUrl\n  );\n  const streamContentId = Store.useSelector(\n    ({ content }) => content.streamContentId\n  );\n  const streamPostId = Store.useSelector(({ content }) => content.streamPostId);\n  const streamUserToken = Store.useSelector(\n    ({ content }) => content.streamUserToken\n  );\n  const streamLiveToken = Store.useSelector(\n    ({ content }) => content.streamLiveToken\n  );\n  const dialogText = Store.useSelector(({ app }) => app.dialogText);\n  const dialogHasCallback = Store.useSelector(\n    ({ app }) => app.dialogHasCallback\n  );\n  // @ts-ignore\n  const [update, setUpdate] = useState(0);\n  const [isLive, setIsLive] = useState(false);\n  const [showFloatingPlayer, setShowFloatingPlayer] = useState(false);\n  // effect to update live status\n  useEffect(() => {\n    if (!streamStatusUrl) {\n      return;\n    }\n    let timeout;\n    const interval = setInterval(async () => {\n      try {\n        const res = await Http.get(streamStatusUrl);\n        if (!res.data.isLive) {\n          return;\n        }\n        setIsLive(true);\n        clearInterval(interval);\n        timeout = setTimeout(() => {\n          console.info(\"upp\");\n          setUpdate(Date.now());\n        }, 5000);\n      } catch (e) {}\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, [streamStatusUrl, setIsLive, setUpdate]);\n  const StreamRender = useMemo(() => {\n    return (\n      <Stream\n        hideRibbon={true}\n        item={{ magnetURI: streamUrl, liveStatus: \"live\" }}\n        timeout={1500}\n        id={undefined}\n        index={undefined}\n        postId={undefined}\n        tipCounter={undefined}\n        tipValue={undefined}\n        width={undefined}\n      />\n    );\n  }, [streamUrl]);\n\n  const stopStream = useCallback(() => {\n    Http.post(\"/api/stopStream\", {\n      postId: streamPostId,\n      contentId: streamContentId,\n      endUrl: `https://stream.shock.network/api/stream/end`,\n      urlForMagnet: `https://stream.shock.network/api/stream/torrent/${streamUserToken}`,\n      obsToken: streamLiveToken\n    });\n    removeStream()(dispatch);\n    console.info(streamUserToken);\n    history.push(\"/profile\");\n  }, [\n    dispatch,\n    history,\n    streamContentId,\n    streamLiveToken,\n    streamPostId,\n    streamUserToken\n  ]);\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated && publicKey) {\n      // Get current user's profile on login\n      dispatch(subscribeUserProfile(publicKey));\n\n      return () => {\n        dispatch(unsubscribeUserProfile(publicKey));\n      };\n    }\n  }, [authenticated, dispatch, publicKey]);\n\n  useEffect(() => {\n    const tmp = !!(authenticated && isLive && streamUrl);\n    if (tmp !== showFloatingPlayer) {\n      setShowFloatingPlayer(tmp);\n    }\n  }, [\n    authenticated,\n    isLive,\n    streamUrl,\n    showFloatingPlayer,\n    setShowFloatingPlayer\n  ]);\n  useEffect(() => {\n    if (showFloatingPlayer) {\n      dragElement(\"floatyVideo\");\n    }\n  }, [showFloatingPlayer]);\n\n  //load info about content provider stored into gun\n  const loadContentInfo = useCallback(async () => {\n    try {\n      if (!publicKey) {\n        return;\n      }\n      const { data: serviceProvider } = await Http.get(\n        `/api/gun/user/once/preferencesSeedServiceProvider`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        serviceProvider &&\n        typeof serviceProvider.data === \"string\" &&\n        serviceProvider.data !== \"\"\n      ) {\n        setSeedProviderPub(serviceProvider.data, true)(dispatch);\n      }\n    } catch (err) {\n      const msg = Utils.extractErrorMessage(err);\n\n      if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n        Utils.logger.warn(\n          `Could not fetch seed service provider due to a timeout error, this can be expected if the data hasn't been populated yet.`\n        );\n      } else {\n        toast.dark(\n          `There was an error fetching your seed service provider: ${msg}`\n        );\n        Utils.logger.error(err);\n      }\n    }\n    try {\n      if (!publicKey) {\n        return;\n      }\n      const { data: seedData } = await Http.get(\n        `/api/gun/user/once/preferencesSeedServiceData`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        seedData &&\n        typeof seedData.data === \"string\" &&\n        seedData.data !== \"\"\n      ) {\n        const JObject = JSON.parse(seedData.data);\n        if (JObject && JObject.seedUrl && JObject.seedToken) {\n          setSeedInfo(JObject.seedUrl, JObject.seedToken, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      const msg = Utils.extractErrorMessage(err);\n\n      if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n        Utils.logger.warn(\n          `Could not fetch seed service data due to a timeout error, this can be expected if the data hasn't been populated yet.`\n        );\n      } else {\n        toast.dark(\n          `There was an error fetching your seed service data: ${msg}`\n        );\n        Utils.logger.error(err);\n      }\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated || !publicKey) {\n      return;\n    }\n    loadContentInfo();\n  }, [authenticated, loadContentInfo, publicKey]);\n\n  //load info about current stream stored into gun\n  const loadStreamInfo = useCallback(async () => {\n    try {\n      if (!publicKey) {\n        return;\n      }\n      const { data: streamData } = await Http.get(\n        `/api/gun/user/once/currentStreamInfo`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        streamData &&\n        typeof streamData.data === \"string\" &&\n        streamData.data !== \"\"\n      ) {\n        if (streamData.data === \"NO DATA\") {\n          removeStream(true, true)(dispatch);\n          return;\n        }\n        const JObject = JSON.parse(streamData.data);\n\n        if (JObject) {\n          addStream(JObject, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      const msg = Utils.extractErrorMessage(err);\n\n      if (msg.startsWith(\"timeout of \") || msg === \"TIMEOUT_ERR\") {\n        Utils.logger.warn(\n          `Could not fetch current stream info due to a timeout error, this can be expected if the data hasn't been populated yet.`\n        );\n      } else {\n        toast.dark(\n          `There was an error fetching your current stream info: ${msg}`\n        );\n        Utils.logger.error(err);\n      }\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated || !publicKey) {\n      return;\n    }\n    loadStreamInfo();\n  }, [authenticated, loadStreamInfo, publicKey]);\n\n  const DialogClose = useCallback(() => {\n    closeDialog(false)(dispatch);\n  }, [dispatch]);\n\n  const ConfirmDialog = useCallback(() => {\n    closeDialog(dialogHasCallback)(dispatch);\n  }, [dialogHasCallback, dispatch]);\n  return (\n    <FullHeight className=\"root-container\">\n      {showFloatingPlayer && (\n        <div id=\"floatyVideo\" className=\"floaty-container\">\n          <i id=\"floatyVideoHeader\" className=\"fas fa-grip-vertical\"></i>\n          {StreamRender}\n          <button onClick={stopStream}>CLOSE STREAM</button>\n        </div>\n      )}\n      {dialogText && (\n        <div className=\"fixed-container\">\n          <div className=\"global-dialog\">\n            <p>{dialogText}</p>\n            <div className=\"d-flex flex-justify-center w-80\">\n              {dialogHasCallback && (\n                <button\n                  className=\"shock-form-button m-t-1 w-50\"\n                  onClick={DialogClose}\n                >\n                  Cancel\n                </button>\n              )}\n              {dialogHasCallback && <div style={{ width: \"1rem\" }}></div>}\n              <button\n                className=\"shock-form-button-confirm m-t-1 w-50\"\n                onClick={ConfirmDialog}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute\n            path=\"/walletSettings\"\n            exact\n            component={WalletSettingsPage}\n          />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:convoOrReqID\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={CreatePostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey/:selectedView?\"\n            exact\n            component={OtherUserPage}\n          />\n          <PrivateRoute path=\"/Backups\" exact component={BackupsPage} />\n\n          <PrivateRoute\n            path=\"/item/:publicKey/:id\"\n            exact\n            component={PublicContentItemPage}\n          />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover={false}\n        closeButton={false}\n      />\n    </FullHeight>\n  );\n};\n\nexport default App;\n","export function dragElement(elementId) {\n  const elmnt = document.getElementById(elementId)\n  if(!elmnt){\n    console.log(\"draggable set fail\")\n    return\n      \n  }\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  document.getElementById(elmnt.id + \"Header\").onpointerdown = dragMouseDown;\n\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onpointerup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onpointermove = elementDrag;\n  }\n\n  function elementDrag(e) {\n      console.log(\"dragging yooo\")\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n  }\n\n  function closeDragElement() {\n      console.log(\"not anymore!\")\n    // stop moving when mouse button is released:\n    document.onpointerup = null;\n    document.onpointermove = null;\n  }\n  }\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./styles/index.global.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\nimport * as Common from \"shock-common\";\n\nexport function useForceUpdate() {\n  const [tick, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return { forceUpdate: update, tick };\n}\n\n/**\n * Handle the ugly \"in 0 seconds\" cases (returning \"Just now\"), returns an empty\n * string if the timestamp is -1.\n */\nexport const formatTimestamp = (timestamp: number): string => {\n  if (timestamp === -1) {\n    return \"\";\n  }\n  const relativeTime = DateTime.fromMillis(\n    Common.normalizeTimestampToMs(timestamp)\n  ).toRelative();\n  return relativeTime === \"in 0 seconds\" ? \"Just now\" : relativeTime;\n};\n","import * as Common from \"shock-common\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Action } from \"redux\";\nimport { useDispatch as originalUseDispatch } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { useBetween } from \"use-between\";\nimport { memoize } from \"lodash\";\n\nimport { State } from \"../reducers\";\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nimport { rifle } from \"./WebSocket\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\nexport * from \"./WebSocket\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args),\n  debug: (...args: any[]) => console.debug(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not a url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n\nexport const EMPTY_ARR = [] as readonly Readonly<any>[];\n\nexport const EMPTY_OBJ = {} as const;\n\nexport const useBooleanState = (initialState: boolean) => {\n  const [state, setState] = useState<boolean>(initialState);\n  const toggle = useCallback(() => {\n    setState(_state => !_state);\n  }, []);\n\n  return [state, toggle] as const;\n};\n\nexport const parseJson = (o: string) => JSON.parse(o) as unknown;\n\n/**\n * Returns null if the value provided is not a valid JSON string.\n * @param o\n */\nexport const safeParseJson = (o: unknown): unknown => {\n  if (!Common.isPopulatedString(o)) {\n    return null;\n  }\n  try {\n    return JSON.parse(o);\n  } catch (e) {\n    logger.warn(`Error inside safeParseJson() -> `, e);\n    logger.log(`Error inside safeParseJson(), string provided -> `, o);\n    return null;\n  }\n};\n\nexport const useDispatch = (): ThunkDispatch<State, undefined, Action> => {\n  return originalUseDispatch() as ThunkDispatch<State, undefined, Action>;\n};\n\nexport const useLastSeen = (publicKey: string) => {\n  const [lastSeenApp, setLastSeenApp] = useState(0);\n  const [lastSeenNode, setLastSeenNode] = useState(0);\n\n  useEffect(() => {\n    const appSub = rifle({\n      query: `${publicKey}::Profile>lastSeenApp::on`,\n      onData(lastSeen) {\n        if (typeof lastSeen === \"number\") {\n          setLastSeenApp(lastSeen);\n        } else {\n          logger.error(`useLastSeen() -> got non-number lastSeenApp`);\n        }\n      },\n      onError(e) {\n        logger.error(`useLastSeen() -> lastSeenApp rifle -> `, e);\n      }\n    });\n\n    const nodeSub = rifle({\n      query: `${publicKey}::Profile>lastSeenNode::on`,\n      onData(lastSeen) {\n        if (typeof lastSeen === \"number\") {\n          setLastSeenNode(lastSeen);\n        } else {\n          logger.error(`useLastSeen() -> got non-number lastSeenNode`);\n        }\n      },\n      onError(e) {\n        logger.error(`useLastSeen() -> lastSeenNode rifle -> `, e);\n      }\n    });\n\n    return () => {\n      appSub.then(sub => {\n        sub.off();\n      });\n      nodeSub.then(sub => {\n        sub.off();\n      });\n    };\n  }, [publicKey]);\n\n  return { lastSeenApp, lastSeenNode };\n};\n\nconst useLastSeenMemo = memoize((publicKey: string) => {\n  return () => useLastSeen(publicKey);\n});\n\nexport const useLastSeenShared = (publicKey: string) =>\n  useBetween(useLastSeenMemo(publicKey));\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangeSource = Http.CancelToken.source();\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    if (exchangeSource) {\n      exchangeSource.cancel(\n        \"Key Pair exchange operation is preceded by another one\"\n      );\n      exchangeSource = null;\n    }\n\n    exchangeSource = Http.CancelToken.source();\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(\n      `/api/encryption/exchange`,\n      {\n        publicKey: keyPair.publicKeyBase64,\n        deviceId\n      },\n      {\n        cancelToken: exchangeSource.token\n      }\n    );\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      deviceId,\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n","let dialogCallback = null\nexport const addDialogCallback = cb => {\n    dialogCallback = cb\n}\n\nexport const callDialogCallBack = async () => {\n    if(!dialogCallback){\n        return Promise.resolve()\n    }\n    return dialogCallback()\n}","import {\n  addDialogCallback,\n  callDialogCallBack\n} from '../utils/dialogCallback'\nexport const ACTIONS = {\n  OPEN_DIALOG: \"app/openDialog\",\n  CLOSE_DIALOG:\"app/closeDialog\"\n};\nexport const openDialog = ({text,cb = null}) => dispatch => {\n  addDialogCallback(cb)\n  dispatch({\n    type: ACTIONS.OPEN_DIALOG,\n    data: {text,hasCallback: !!cb}\n  });\n};\n\nexport const closeDialog = executeCb => dispatch => {\n  if(executeCb){\n    callDialogCallBack()\n  }\n  dispatch({\n    type: ACTIONS.CLOSE_DIALOG\n  });\n}","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Utils from \"../utils\";\nimport {\n  rifle,\n  rifleCleanup,\n  unsubscribeRifleByQuery\n} from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\"\n};\n\nconst subscribedProfiles = new Set();\n\nexport const updatedUserProfile = createAction<{\n  profile: Partial<Common.User & {offerSeedService:string}>;\n  publicKey: string;\n}>(\"userProfiles/profiles/update\");\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => (\n  dispatch: (action: object) => void,\n  getState: () => {\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  if (subscribedProfiles.has(publicKey)) {\n    return () => {};\n  }\n\n  console.info(\"subbing user...\" + publicKey);\n  subscribedProfiles.add(publicKey);\n\n  const subscription = rifle({\n    query: `${publicKey}::Profile::map.on`,\n    reconnect: true,\n    onData: (data: any, key: string) => {\n      if (key === \"bio\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              bio: data\n            },\n            publicKey\n          })\n        );\n      }\n      if (key === \"displayName\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              displayName: data\n            },\n            publicKey\n          })\n        );\n      }\n      if (key === \"offerSeedService\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              offerSeedService: data\n            },\n            publicKey\n          })\n        );\n      }\n    }\n  });\n\n  const binarySub = rifle({\n    query: `${publicKey}::profileBinary::map.on`,\n    reconnect: true,\n    onData: (data, key: string) => {\n      if (key === \"avatar\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              avatar: data\n            },\n            publicKey\n          })\n        );\n      } else if (key === \"header\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              header: data\n            },\n            publicKey\n          })\n        );\n      } else {\n        Utils.logger.error(\n          `Unknown key: ${key} for user binary profile data gun RPC socket`\n        );\n      }\n    }\n  });\n\n  return () => {\n    rifleCleanup(subscription, binarySub)();\n    subscribedProfiles.delete(publicKey);\n  };\n};\n\nexport const unsubscribeUserProfile = (publicKey: string) => async () => {\n  unsubscribeRifleByQuery(`${publicKey}::Profile::on`);\n  unsubscribeRifleByQuery(`${publicKey}::profileBinary::map.on`);\n};\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n\nexport const extractErrorMessage = (error: any): string => {\n  return (\n    error?.response?.data?.errorMessage || error.message || \"Unknown error\"\n  );\n};\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\n/**\n * @param {string} source\n */\nexport const setSource = source => ({\n  type: ACTIONS.SET_SOURCE,\n  data: source\n});\n\n/**\n * @param {import('../schema').FeeRate} rate\n */\nexport const setRate = rate => ({\n  type: ACTIONS.SET_RATE,\n  data: rate\n});\n"],"sourceRoot":""}