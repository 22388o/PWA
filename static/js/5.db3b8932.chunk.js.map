{"version":3,"sources":["common/Post/components/TipRibbon/index.js","common/Post/components/Stream/index.tsx","utils/Cache.js","utils/Promise.js","utils/Torrents.js","common/Post/components/Video/index.js","common/Post/components/Image/index.js","common/Post/index.js","images/av1.jpg","common/Post/SharedPost.js"],"names":["TipRibbon","tipCounter","tipValue","zoomed","className","style","opacity","STREAM_STATUS_URI","Stream","id","item","index","postId","hideRibbon","width","timeout","playerDOM","useRef","useState","isLive","setIsLive","videoStyle","useEffect","recheckInterval","checkStatus","a","magnetURI","split","seedToken","Http","get","data","player","videojs","current","autoplay","muted","aspectRatio","src","type","play","then","setInterval","clearInterval","cursor","display","ref","preload","controls","autoPlay","getCachedFile","fileName","FileCache","_init","Promise","resolve","reject","init","console","log","persist","status","persistent","load","cachedFile","createURL","warn","renderCachedFile","fileURL","selector","elements","document","querySelectorAll","length","forEach","element","saveFile","buffer","save","runSerial","tasks","result","task","supportedFileTypes","formats","options","_getFileType","file","extension","name","slice","supportedFileType","Object","entries","filter","includes","fileType","webTorrentClient","WebTorrent","attachMedia","posts","torrentMode","allowDuplicates","torrentTasks","map","post","contentItems","key","add","torrent","files","target","destroy","torrentElement","contentURL","decodeURIComponent","replace","format","toLowerCase","endsWith","compatibleURL","elementSrc","getAttribute","setAttribute","renderTo","on","getBlob","err","blob","querySelector","dataset","played","reduce","torrents","Video","data-torrent","data-file-key","data-played","Image","setZoomed","zoomLoaded","setZoomLoaded","previewVisible","setPreviewVisible","animationTimer","setAnimationTimer","handleZoomChange","useCallback","value","clearTimeout","timer","setTimeout","mainImageStyle","Controlled","isZoomed","onZoomChange","overlayBgColorStart","overlayBgColorEnd","alt","onLoad","Post","timestamp","avatar","publicKey","openTipModal","openUnlockModal","username","openDeleteModal","undefined","unlockedContent","Store","content","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","isOwn","isOnlineNode","Utils","lastSeenNode","getMediaContent","k","e","path","parseContent","text","finalItem","cached","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","scrollSnapList","window","addEventListener","removeEventListener","off","tipPost","targetType","postID","unlockPost","deletePost","shared","Tooltip","rebuild","to","borderWidth","borderStyle","borderColor","backgroundImage","DateTime","fromMillis","toRelative","onClick","Array","from","_","classNames","scrollTo","data-tip","SharedPost","sharerProfile","originalPostProfile","origPost","originalPost","sharedTimestamp","postPublicKey","loadPostMedia","useLayoutEffect","selfPublicKey","displayName","date","av1","alias","Loader"],"mappings":"yHAAA,uBAaeA,IAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,OAAzB,OAChBD,EAAW,EACT,sBAAKE,UAAU,mBAAmBC,MAAO,CAAEC,QAAUH,EAAa,EAAJ,GAA9D,UACE,mBAAGC,UAAU,eAAb,wBACA,oBAAGA,UAAU,eAAb,UACGH,EADH,IAC+B,IAAfA,EAAmB,MAAQ,aAG3C,O,2ICJAM,EAAiB,UADO,mCACP,6BA0GRC,IAxGA,SAAC,GAUV,EATJC,GASK,IARLC,EAQI,EARJA,KAGAR,GAKI,EAPJS,MAOI,EANJC,OAMI,EALJV,UACAD,EAII,EAJJA,WACAY,EAGI,EAHJA,WACAC,EAEI,EAFJA,MAEI,IADJC,eACI,MADM,IACN,EACEC,EAAYC,iBAAO,MADrB,EAEwBC,oBAAS,GAFjC,mBAEGC,EAFH,KAEWC,EAFX,KAGEC,EAAa,CAAEP,MAAO,QAsD5B,OArDIA,IACFO,EAAWP,MAAQA,GAErBQ,qBAAU,WACR,IAAIC,EAAkB,KAChBC,EAAW,uCAAG,kCAAAC,EAAA,wEAGIf,EAAKgB,UACtBC,MAAM,UAAU,GAChBA,MAAM,eALO,mBAGTC,EAHS,cAMEC,IAAKC,IAAL,UAAYvB,EAAZ,YAAiCqB,IANnC,iBAOPG,KAAKZ,OAPE,0CAQP,GARO,cAUVa,EAASC,YAAQjB,EAAUkB,QAAS,CACxCC,UAAU,EACVC,OAAO,EACPC,YAAa,UAERC,IAAI,CACTA,IAAK5B,EAAKgB,UACVa,KAAM,0BAMRP,EAAOQ,OAvBS,mBAwBT,GAxBS,4DA0BT,GA1BS,0DAAH,qDA4CjB,OAfAhB,IAAciB,MAAK,SAAAtB,GACbA,EACFC,GAAU,GAGZG,EAAkBmB,YAAW,sBAAC,sBAAAjB,EAAA,sEACPD,IADO,yCAG1BJ,GAAU,GACVuB,cAAcpB,GAJY,8DAO3BR,MAGE,WACL4B,cAAcpB,MAEf,CAACb,EAAMK,IAER,qBAAKX,UAAU,wBAAf,SACE,sBACEA,UAAU,wBACVC,MAAO,CACLuC,OAAQ,UACR9B,MAAO,QAJX,WAOIK,GAAU,+DACZ,qBACEd,MACEc,EAAS,CAAEL,MAAO,QAAW,CAAE+B,QAAS,OAAQ/B,MAAO,QAF3D,SAKE,uBACEV,UAAU,4BACV0C,IAAK9B,EACLX,MAAOgB,EACP0B,QAAQ,OACRC,UAAQ,EACRZ,OAAK,EACLa,UAAQ,OAGVpC,GACA,cAAC,IAAD,CACEZ,WAAYA,EACZC,SAAUA,EACVC,QAAQ,W,qMCrFP+C,EAAa,uCAAG,WAAMC,GAAN,eAAA1B,EAAA,kEAEpB2B,IAAUC,MAFU,gCAf3B,IAAIC,SAAQ,SAACC,EAASC,GACpBJ,IAAUK,KAJS,oBAKhBhB,MAAK,WAEJ,OADAiB,QAAQC,IAAI,2BACLP,IAAUQ,aAElBnB,MAAK,SAAAoB,GACAA,EAAOC,WACTP,EAAQM,GAERL,EAAOK,SAKY,uBAMAT,IAAUW,KAAKZ,GANf,cAMnBa,EANmB,yBAOlBA,EAAWC,aAPO,yCASzBP,QAAQQ,KAAR,MATyB,mBAUlB,GAVkB,0DAAH,sDAcbC,EAAmB,SAACC,EAASC,GACxC,IAAMC,EAAWC,SAASC,iBAAiBH,GAU3C,OATIC,GAAYA,EAASG,QACvBH,EAASI,SAAQ,SAAAC,GACVA,EAAQrC,MACXqC,EAAQrC,IAAM8B,EACdO,EAAQvC,OAAQ,EAChBuC,EAAQxC,UAAW,SAIjB,OAACmC,QAAD,IAACA,OAAD,EAACA,EAAUG,SAGRG,EAAW,SAACzB,EAAU0B,GACjC,OAAOzB,IAAU0B,KAAK3B,EAAU0B,ICjDrBE,EAAY,SAAAC,GACvB,IAAIC,EAAS3B,QAAQC,UAIrB,OAHAyB,EAAMN,SAAQ,SAAAQ,GACZD,EAASA,EAAOxC,MAAK,kBAAMyC,UAEtBD,GCDHE,EAAqB,CACzB,iBAAkB,CAChBC,QAAS,CAAC,MAAO,QACjBT,QAAS,QACTU,QAAS,CACPlD,UAAU,EACVC,OAAO,IAGX,iBAAkB,CAChBgD,QAAS,CAAC,MAAO,MAAO,OAAQ,QAChCT,QAAS,MACTU,QAAS,KAIPC,EAAe,SAAAC,GAAS,IAAD,IACrBC,EAAS,UAAGD,EAAKE,YAAR,iBAAG,EAAW9D,MAAM,YAApB,aAAG,EAAuB+D,OAAO,GAAG,GAC7CC,EAAoBC,OAAOC,QAC/BV,GACAW,QAAO,oDAA6BV,QAAQW,SAASP,MAAY,GAEnE,GAAIG,EAAmB,CAAC,IAAD,cACIA,EADJ,GACdF,EADc,KACRO,EADQ,KAErB,OAAO,aACLP,QACGO,GAIP,OAAO,MAGIC,EAAmB,IAAIC,IAEvBC,EAAc,WAIrB,IAHJC,EAGG,uDAHK,GACRC,IAEG,yDADHC,EACG,wDACGC,EAAeH,EAClBI,KAAI,SAAAC,GAAS,IACJC,EAAqBD,EAArBC,aAAcjG,EAAOgG,EAAPhG,GACtB,OAAOmF,OAAOC,QAAQa,GACnBZ,QAAO,mCAAOpF,GAAP,kBAAiByE,EAAmBzE,EAAK6B,SAChDiE,KAAI,mCAAEG,EAAF,KAAOjG,EAAP,YAAiB,kBACpB,IAAI4C,SAAQ,SAAAC,IACY0C,EAAiBnE,IAAIpB,EAAKgB,YAE1B4E,EAKtBL,EAAiBW,IAAIlG,EAAKgB,UAA1B,uCAAqC,WAAMmF,GAAN,eAAApF,EAAA,sDAEnC8B,GAAQ,IAEFuD,EAAQD,EAAQC,MAAMhB,QAAO,SAAAP,GAAS,IAAD,IACnCC,EAAS,UAAGD,EAAKE,YAAR,iBAAG,EAAW9D,MAAM,YAApB,aAAG,EAAuB+D,OAAO,GAAG,GAC7CC,EAAoBC,OAAOC,QAC/BV,GACAW,QAAO,oDACCV,QAAQW,SAASP,MACzB,GACF,QAAIG,GAAmB,YACAA,EADA,MAEIP,QAAQW,SAASP,OAMxCgB,IAAN,uCAAU,WAAMjB,GAAN,yBAAA9D,EAAA,yDACFuE,EAAWV,EAAaC,GADtB,wDAOFpC,EAPE,UAOY1C,EAPZ,YAOkBkG,EAPlB,YAOyBpB,EAAKE,MAEhCd,EAAUqB,EAASrB,QACnBoC,EAVE,UAUUpC,EAVV,0BAUmCjE,EAAKgB,UAVxC,eAWiBwB,EAAcC,GAX/B,YAWFa,EAXE,gCAcA6C,EAAUZ,EAAiBnE,IAAIpB,EAAKgB,aAGxCmF,EAAQG,UAGV7C,EAAiBH,EAAY+C,GApBvB,2BAwBgBxC,SAASC,iBAAiBuC,GAClCrC,SAAQ,SAAAuC,GACtB,IAAMC,EAAaC,mBACjBzG,EAAKgB,UAAU0F,QAAQ,YAAa,KAFE,EAIhBpB,EAASZ,QAAQU,QAAO,SAAAuB,GAAM,OACpDH,EACGI,cACAC,SAFH,WAEgBF,EAAOC,mBAHlBE,EAJiC,oBASlCC,EAAaR,EAAeS,aAAa,QAE1CrB,GAAgBmB,GAAmBC,EAKxCR,EAAeU,aAAa,MAAOT,GAJjC3B,EAAKqC,SAASX,EAAgBjB,EAASX,YArCnC,4CAAV,uDA6CAwB,EAAQgB,GAAG,QAAQ,WACjBf,EAAMN,KAAI,SAAAjB,GACR,IAAMS,EAAWV,EAAaC,GACxBpC,EAAQ,UAAM1C,EAAN,YAAYkG,EAAZ,YAAmBpB,EAAKE,MAChCd,EAAUqB,EAASrB,QACnBoC,EAAM,UAAMpC,EAAN,0BAA+BjE,EAAKgB,UAApC,MAgBZ,OAdA6D,EAAKuC,QAAL,uCAAa,WAAOC,EAAKC,GAAZ,iBAAAvG,EAAA,0DACPsG,EADO,uBAETrE,QAAQQ,KAAK6D,GAFJ,0CAMLnD,EAASzB,EAAU6E,GANd,UAQqB,WAArB,QADLrD,EAAUJ,SAAS0D,cAAclB,UAC5B,IAAPpC,OAAA,EAAAA,EAASuD,QAAQC,UAAsB,OAACxD,QAAD,IAACA,OAAD,EAACA,EAAS+C,aAAa,QARvD,iCASgBxE,EAAcC,GAT9B,OASHa,EATG,OAUTG,EAAiBH,EAAY+C,GAVpB,4CAAb,yDAcOxB,QArFwB,2CAArC,uDAJEhC,GAAQ,aAgGjB6E,QAAO,SAACC,EAAU3B,GAAX,4BAAgC2B,GAAhC,YAA6C3B,MAAe,IAEtE3B,EAAUwB,K,oMCrHG+B,EA/BD,SAAC,GAAyE,IAAvE7H,EAAsE,EAAtEA,GAAIC,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,OAAQV,EAA6C,EAA7CA,SAAUD,EAAmC,EAAnCA,WAAYY,EAAuB,EAAvBA,WAAWC,EAAY,EAAZA,MACnEoG,EAAaC,mBACjBzG,EAAKgB,UAAU0F,QAAQ,YAAa,KAEhC/F,EAAa,GAInB,OAHGP,IACDO,EAAWP,MAAQA,GAGnB,qBAAKV,UAAU,kBAAf,SACE,sBACEA,UAAU,kBACVC,MAAO,CACLuC,OAAQ,WAHZ,UAME,uBACEvC,MAAOgB,EACPjB,UAAS,sCAAiCQ,EAAjC,YAA2CH,GACpD8H,eAAc7H,EAAKgB,UACnB8G,gBAAe7H,EACfqC,UAAQ,EACRyF,cAAY,QACZnG,IAAK4E,KAELrG,GAAc,cAACb,EAAA,EAAD,CAAWC,WAAYA,EAAYC,SAAUA,U,SCgDtDwI,G,cArED,SAAC,GAAwE,IAAtEjI,EAAqE,EAArEA,GAAIC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,OAAQV,EAA4C,EAA5CA,SAAUD,EAAkC,EAAlCA,WAAWY,EAAuB,EAAvBA,WAAWC,EAAY,EAAZA,MAAY,EACxDI,oBAAS,GAD+C,mBAC7Ef,EAD6E,KACrEwI,EADqE,OAEhDzH,oBAAS,GAFuC,mBAE7E0H,EAF6E,KAEjEC,EAFiE,OAGxC3H,oBAAS,GAH+B,mBAG7E4H,EAH6E,KAG7DC,EAH6D,OAIxC7H,mBAAS,MAJ+B,mBAI7E8H,EAJ6E,KAI7DC,EAJ6D,KAM9EC,EAAmBC,uBACvB,SAAAC,GAGE,GAFAC,aAAaL,GACbL,EAAUS,IACLA,GAASR,EAAY,CACxBC,GAAc,GACd,IAAMS,EAAQC,YAAW,WACvBR,GAAkB,KAfA,KAiBpBE,EAAkBK,GAGhBF,GACFL,GAAkB,KAGtB,CAACC,EAAgBJ,IAGb1B,EAAaC,mBACjBzG,EAAKgB,UAAU0F,QAAQ,YAAa,KAEhCoC,EAAiB,CAAElJ,QAASwI,EAAiB,EAAI,GAKvD,OAJGhI,IACD0I,EAAe1I,MAAQA,GAIvB,qBAAKV,UAAU,kBAAf,SACE,eAACqJ,EAAA,EAAD,CACEC,SAAUvJ,EACVwJ,aAAcT,EACdU,oBAAoB,YACpBC,kBAAkB,UAJpB,UAME,qBACEzJ,UAAS,kCAA6BQ,EAA7B,YAAuCH,GAChDqJ,IAAI,aACJvB,eAAc7H,EAAKgB,UACnB8G,gBAAe7H,EACfN,MAAOmJ,EACPlH,IAAK4E,IAEP,qBACE9G,UAAS,oCAA+BQ,EAA/B,YAAyCH,GAClDqJ,IAAI,aACJtB,gBAAe7H,EACfoJ,OAAQ,WACNlB,GAAc,IAEhBxI,MAAO,CAAEC,QAASsI,EAAa,EAAI,GACnCtG,IAAK4E,KAELrG,GAAc,cAACb,EAAA,EAAD,CACdC,WAAYA,EACZC,SAAUA,EACVC,OAAQA,W,gBCwOH6J,UA9RF,SAAC,GAYP,IAXLvJ,EAWI,EAXJA,GACAwJ,EAUI,EAVJA,UACAC,EASI,EATJA,OACAjK,EAQI,EARJA,WACAC,EAOI,EAPJA,SACAiK,EAMI,EANJA,UACAC,EAKI,EALJA,aACAC,EAII,EAJJA,gBAII,IAHJ3D,oBAGI,MAHW,GAGX,EAFJ4D,EAEI,EAFJA,SAEI,IADJC,uBACI,WADcC,EACd,EACEC,EAAkBC,eACtB,qBAAGC,QAAsBF,mBAFvB,EAI+BG,2BAAiB,CAClDC,eAAgB,EAChBC,MAAO,WANL,mBAIGC,EAJH,KAIgBC,EAJhB,OASoC9J,mBAAS,GAT7C,mBASG+J,EATH,KASiBC,EATjB,OAUkChK,mBAAS,GAV3C,mBAUGiK,EAVH,KAUgBC,EAVhB,OAW8BlK,oBAAS,GAXvC,mBAWGmK,EAXH,KAWcC,EAXd,KAcEC,EADgBb,cAAkBA,yBACRP,EAE1BqB,EAAeC,IACnBf,cAAkBA,aAAiBP,IAAYuB,cAG3CC,EAAkBxC,uBAAY,WAClC,OAAOvD,OAAOC,QAAQa,GAAcZ,QAClC,8CAA6B,mBAA7B,KAAoBvD,UAErB,CAACmE,IAQJpF,qBAAU,WACRqK,IAAkBjH,SAAQ,YAAa,IAAD,mBAAVkH,EAAU,KAAPC,EAAO,KAC9BC,EAAI,UAAM3B,EAAN,kBAAyByB,GAC/BC,EAAER,YAAcZ,EAAgBqB,IAClCR,GAAa,QAGhB,CAAC5E,EAAciF,EAAiBxB,EAAWM,IAE9C,IAAMsB,EAAe,SAAC,EAAapL,GAAW,IAAD,mBAAtBgG,EAAsB,KAAjBjG,EAAiB,KAC3C,GAAkB,mBAAdA,EAAK6B,KACP,OAAO,4BAAc7B,EAAKsL,MAAXrF,GAEjB,IAAMsF,EAAYvL,EAClB,GAAIA,EAAK2K,UAAW,CAClB,IAAMS,EAAI,UAAM3B,EAAN,kBAAyB1J,GAC7ByL,EAASzB,EAAgBqB,GAC/B,IAAII,EAGF,OACE,8BACE,mBAAG9L,UAAU,yBAJjB6L,EAAUvK,UAAYwK,EAU1B,MAAkB,mBAAdxL,EAAK6B,KAEL,cAAC,EAAD,CACE9B,GAAIkG,EACJjG,KAAMuL,EACNtL,MAAOA,EACPC,OAAQH,EACRR,WAAYA,EACZC,SAAUA,EAEVW,gBAAY2J,EACZ1J,WAAO0J,GATT,UAOU/J,EAPV,YAOgBE,IAOF,mBAAdD,EAAK6B,KAEL,cAAC,EAAD,CACE9B,GAAIkG,EACJjG,KAAMuL,EACNtL,MAAOA,EACPC,OAAQH,EACRR,WAAYA,EACZC,SAAUA,EAEVW,gBAAY2J,EACZ1J,WAAO0J,GATT,UAOU/J,EAPV,YAOgBE,IAMF,oBAAdD,EAAK6B,KAEL,cAAC/B,EAAA,EAAD,CACEC,GAAIkG,EACJjG,KAAMuL,EACNtL,MAAOA,EACPC,OAAQH,EACRR,WAAYA,EACZC,SAAUA,EAEVW,gBAAY2J,EACZ1J,WAAO0J,GATT,UAOU/J,EAPV,YAOgBE,IAOb,MAOHwL,EAAYhD,uBAAY,WACvB6B,GAEDA,EAAYoB,iBACdpB,EAAYqB,eAEb,CAACrB,IAEEsB,EAAYnD,uBAAY,WACvB6B,GAEDA,EAAYuB,iBACdvB,EAAYwB,eAEb,CAACxB,IAEEyB,EAAoBtD,uBACxB,SAAA0C,GACE,GAAqB,IAAjBZ,EAAJ,CADG,IAEKtE,EAAQkF,EAARlF,IAEI,eAARA,GACFwF,IAGU,cAARxF,GACF2F,OAGJ,CAACrB,EAAcqB,EAAWH,IAGtBO,EAAoBvD,uBAAY,WACpCiC,EAAeJ,EAAY2B,wBAC1B,CAAC3B,EAAaI,IAEjB9J,qBAAU,WACR,GAAK0J,EAML,OAJAA,EAAYnD,GAAG,SAAU6E,GACzBxB,EAAgBF,EAAY4B,iBAAiBnI,QAC7CoI,OAAOC,iBAAiB,UAAWL,GAE5B,WACLI,OAAOE,oBAAoB,UAAWN,GACtCzB,EAAYgC,IAAI,SAAUN,MAE3B,CAAC1B,EAAaC,EAAcwB,EAAmBC,IAElD,IAAMO,EAAU9D,uBAAY,WACrBqC,GAILpB,EAAa,CACX8C,WAAY,OACZC,OAAQ1M,EACR0J,gBAED,CAAC1J,EAAI+K,EAAcpB,EAAcD,IAE9BiD,EAAajE,uBAAY,WACxBqC,GAILnB,EAAgB,CACd6C,WAAY,SACZC,OAAQ1M,EACR0J,gBAED,CAAC1J,EAAI+K,EAAcnB,EAAiBF,IAEjCkD,GAAalE,uBAAY,WAC7BoB,EAAgB,CAAE9J,KAAI6M,QAAQ,MAC7B,CAAC7M,EAAI8J,IAUR,OARAjJ,qBAAU,WACR,IACEiM,IAAQC,UACR,MAAO3B,GACPnI,QAAQC,IAAR,0BAAuCkI,MAExC,IAGD,sBAAKzL,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CACEA,UAAU,KACVqN,GAAIlC,EAAK,gCAA8BpB,GACvC9J,MAAO,CACLqN,YAAalC,IAAiBD,EAAQ,OAAIf,EAC1CmD,YAAanC,IAAiBD,EAAQ,aAAUf,EAChDoD,YAAapC,IAAiBD,EAAQ,eAAYf,EAClDqD,gBAAgB,OAAD,OAAS3D,EAAT,QAGnB,sBAAK9J,UAAU,UAAf,UACE,cAAC,IAAD,CAAMqN,GAAE,qBAAgBtD,GAAxB,SAAsCG,IACtC,4BACGL,GAAkC,kBAAdA,EACjB6D,WAASC,WAAW9D,GAAW+D,aAC/B,qBAITzD,GACC,mBAAGnK,UAAU,eAAe6N,QAASZ,QAIzC,sBAAKjN,UAAU,UAAf,UAxMKwF,OAAOC,QAAQa,GAAcZ,QAClC,+CAA6B,mBAA7B,KAAoBvD,QAwMAiE,IAAIuF,GACtB,sBAAK3L,UAAU,yBAAf,UACG6K,EAAe,EACd,sBAAK7K,UAAU,oCAAf,UACE,qBACEA,UAAU,yCACV6N,QAAS3B,IAEX,qBAAKlM,UAAU,uBAAf,SACG8N,MAAMC,KAAK,CAAE1J,OAAQwG,IAAgBzE,KAAI,SAAC4H,EAAGzH,GAAJ,OACxC,qBACEvG,UAAWiO,IAAW,CACpB,uBAAuB,EACvB,uBAAwBlD,IAAgBxE,IAE1CsH,QAAS,yBAAMjD,QAAN,IAAMA,OAAN,EAAMA,EAAasD,SAAS3H,WAI3C,qBACEvG,UAAU,0CACV6N,QAAS9B,OAGX,KACJ,qBAAK/L,UAAU,qBAAqB0C,IAAKiI,EAAzC,SACE,qBAAK3K,UAAU,0BAAf,SACGuL,IAAkBnF,IAAIuF,aAM/B,qBAAK3L,UAAU,UAAf,SACE,qBACEA,UAAU,eACVmO,WAAUlD,EAAY,mBAAqB,gBAC3C4C,QAAS5C,EAAY+B,EAAaH,EAHpC,SAKE,qBAAK7M,UAAU,qC,qiBCvSV,MAA0B,gC,kDC4G1BoO,UA1FI,SAAC,GASb,IAAD,IARJC,EAQI,EARJA,cACAC,EAOI,EAPJA,oBACcC,EAMV,EANJC,aACAC,EAKI,EALJA,gBACAC,EAII,EAJJA,cACA1E,EAGI,EAHJA,aACAC,EAEI,EAFJA,gBAEI,IADJE,uBACI,WADcC,EACd,EAEEoE,EAAeD,EACfI,EAAgB5F,sBAAW,sBAAC,sBAAA1H,EAAA,sDAC5BmN,GACFzI,YAAY,CAACyI,IAAe,GAFE,2CAI/B,CAACA,IACEvB,EAAalE,uBAAY,WAC7BoB,EAAgB,CAAE9J,GAAImO,EAAanO,GAAI6M,QAAQ,MAC9C,CAACsB,EAAcrE,IAElByE,2BAAgB,WACdzB,IAAQC,UACRuB,MACC,CAACA,IAEJ,IAAME,EAAgBvE,cAAkBA,uBAClCa,EAAQkD,EAActE,YAAc8E,EACpCzD,EAAeC,IACnBf,cAAkBA,aAAiB+D,EAActE,YAAYuB,cAG/D,OACE,sBAAKtL,UAAU,mBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CACEqN,GAAIlC,EAAK,gCAA8BkD,EAActE,WACrD/J,UAAU,KACVC,MAAO,CACLqN,YAAalC,IAAiBD,EAAQ,OAAIf,EAC1CmD,YAAanC,IAAiBD,EAAQ,aAAUf,EAChDoD,YAAapC,IAAiBD,EAAQ,eAAYf,EAClDqD,gBAAgB,8BAAD,cAAgCY,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAevE,OAA/C,QAGnB,sBAAK9J,UAAU,UAAf,UACE,mCAAIqO,QAAJ,IAAIA,OAAJ,EAAIA,EAAeS,cACnB,4BACGL,GAA8C,kBAApBA,EACvBf,WAASC,WAAWc,GAAiBb,aACrC,qBAITzD,GACC,mBAAGnK,UAAU,eAAe6N,QAASZ,OAIzC,qBAAKjN,UAAU,iBAAf,SACGwO,GAAgBF,EACf,cAAC1E,EAAA,QAAD,CACEvJ,GAAImO,EAAanO,GACjBwJ,UAAW2E,EAAaO,KACxBjF,OACEwE,EAAoBxE,OAApB,iCAC8BwE,EAAoBxE,QAC9CkF,EAGNnP,WAAY2O,EAAa3O,YAAc,EAEvCC,SAAU0O,EAAa1O,UAAY,EACnCiK,UAAW2E,EACX1E,aAAcA,EACdC,gBAAiBA,EACjB3D,aAAY,UAAEkI,EAAalI,oBAAf,QAA+B,GAC3C4D,SAAQ,UACNoE,EAAoBQ,mBADd,QAC6BR,EAAoBW,QAI3D,cAACC,EAAA,EAAD,CAAQtD,KAAK","file":"static/js/5.db3b8932.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./css/index.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst REACT_APP_SL_SEED_URI = \"https://webtorrent.shock.network\";\nconst STREAM_STATUS_URI = `${REACT_APP_SL_SEED_URI}/rtmpapi/api/streams/live`;\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  useEffect(() => {\n    let recheckInterval = null;\n    const checkStatus = async () => {\n      try {\n        //TODO regex (?) `${REACT_APP_SL_RTMP_API_URI}/live/${seedToken}/index.m3u8`\n        const [seedToken] = item.magnetURI\n          .split(\"/live/\")[1]\n          .split(\"/index.m3u8\");\n        const res = await Http.get(`${STREAM_STATUS_URI}/${seedToken}`);\n        if (!res.data.isLive) {\n          return false;\n        }\n        const player = videojs(playerDOM.current, {\n          autoplay: true,\n          muted: true,\n          aspectRatio: \"16:9\"\n        });\n        player.src({\n          src: item.magnetURI,\n          type: \"application/x-mpegURL\"\n        });\n        /*listen for 404s from the player\n        player.tech().on('retryplaylist', () => {\n          console.log('retryplaylist');\n        });*/\n        player.play();\n        return true;\n      } catch (err) {\n        return false;\n      }\n    };\n    checkStatus().then(isLive => {\n      if (isLive) {\n        setIsLive(true);\n        return;\n      }\n      recheckInterval = setInterval(async () => {\n        const isLive = await checkStatus();\n        if (isLive) {\n          setIsLive(true);\n          clearInterval(recheckInterval);\n          return;\n        }\n      }, timeout);\n    });\n\n    return () => {\n      clearInterval(recheckInterval);\n    };\n  }, [item, timeout]);\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            isLive ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","import FileCache from \"browser-file-storage\";\n\nexport const DB_NAME = \"ShockWalletStore\";\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    FileCache.init(DB_NAME)\n      .then(() => {\n        console.log(\"File cache initialized!\");\n        return FileCache.persist();\n      })\n      .then(status => {\n        if (status.persistent) {\n          resolve(status);\n        } else {\n          reject(status);\n        }\n      });\n  });\n\nexport const getCachedFile = async fileName => {\n  try {\n    if (!FileCache._init) {\n      await init();\n    }\n\n    const cachedFile = await FileCache.load(fileName);\n    return cachedFile.createURL();\n  } catch (err) {\n    console.warn(err);\n    return false;\n  }\n};\n\nexport const renderCachedFile = (fileURL, selector) => {\n  const elements = document.querySelectorAll(selector);\n  if (elements && elements.length) {\n    elements.forEach(element => {\n      if (!element.src) {\n        element.src = fileURL;\n        element.muted = true;\n        element.autoplay = true;\n      }\n    });\n  }\n  return !!elements?.length;\n};\n\nexport const saveFile = (fileName, buffer) => {\n  return FileCache.save(fileName, buffer);\n};\n","export const runSerial = tasks => {\n  let result = Promise.resolve();\n  tasks.forEach(task => {\n    result = result.then(() => task());\n  });\n  return result;\n};\n","import WebTorrent from \"webtorrent\";\nimport { getCachedFile, renderCachedFile, saveFile } from \"./Cache\";\nimport { runSerial } from \"./Promise\";\n\nconst supportedFileTypes = {\n  \"video/embedded\": {\n    formats: [\"mp4\", \"webm\"],\n    element: \"video\",\n    options: {\n      autoplay: true,\n      muted: true\n    }\n  },\n  \"image/embedded\": {\n    formats: [\"jpg\", \"png\", \"webp\", \"jpeg\"],\n    element: \"img\",\n    options: {}\n  }\n};\n\nconst _getFileType = file => {\n  const extension = file.name?.split(\".\")?.slice(-1)[0];\n  const supportedFileType = Object.entries(\n    supportedFileTypes\n  ).filter(([type, options]) => options.formats.includes(extension))[0];\n\n  if (supportedFileType) {\n    const [name, fileType] = supportedFileType;\n    return {\n      name,\n      ...fileType\n    };\n  }\n\n  return null;\n};\n\nexport const webTorrentClient = new WebTorrent();\n\nexport const attachMedia = (\n  posts = [],\n  torrentMode = true,\n  allowDuplicates = false\n) => {\n  const torrentTasks = posts\n    .map(post => {\n      const { contentItems, id } = post;\n      return Object.entries(contentItems)\n        .filter(([key, item]) => supportedFileTypes[item.type])\n        .map(([key, item]) => () =>\n          new Promise(resolve => {\n            const torrentExists = webTorrentClient.get(item.magnetURI);\n\n            if (torrentExists && !allowDuplicates) {\n              resolve(true);\n              return;\n            }\n\n            webTorrentClient.add(item.magnetURI, async torrent => {\n              // Proceed to the next torrent in queue\n              resolve(true);\n\n              const files = torrent.files.filter(file => {\n                const extension = file.name?.split(\".\")?.slice(-1)[0];\n                const supportedFileType = Object.entries(\n                  supportedFileTypes\n                ).filter(([type, options]) =>\n                  options.formats.includes(extension)\n                )[0];\n                if (supportedFileType) {\n                  const [, fileType] = supportedFileType;\n                  const matched = fileType.formats.includes(extension);\n                  return matched;\n                }\n                return false;\n              });\n\n              files.map(async file => {\n                const fileType = _getFileType(file);\n\n                if (!fileType) {\n                  return;\n                }\n\n                const fileName = `${id}-${key}-${file.name}`;\n\n                const element = fileType.element;\n                const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n                const cachedFile = await getCachedFile(fileName);\n\n                if (cachedFile) {\n                  const torrent = webTorrentClient.get(item.magnetURI);\n\n                  if (torrent) {\n                    torrent.destroy();\n                  }\n\n                  renderCachedFile(cachedFile, target);\n                  return;\n                }\n\n                const torrentElements = document.querySelectorAll(target);\n                torrentElements.forEach(torrentElement => {\n                  const contentURL = decodeURIComponent(\n                    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n                  );\n                  const [compatibleURL] = fileType.formats.filter(format =>\n                    contentURL\n                      .toLowerCase()\n                      .endsWith(`.${format.toLowerCase()}`)\n                  );\n                  const elementSrc = torrentElement.getAttribute(\"src\");\n\n                  if ((torrentMode || !compatibleURL) && !elementSrc) {\n                    file.renderTo(torrentElement, fileType.options);\n                    return;\n                  }\n\n                  torrentElement.setAttribute(\"src\", contentURL);\n                });\n              });\n\n              torrent.on(\"done\", () => {\n                files.map(file => {\n                  const fileType = _getFileType(file);\n                  const fileName = `${id}-${key}-${file.name}`;\n                  const element = fileType.element;\n                  const target = `${element}[data-torrent=\"${item.magnetURI}\"]`;\n\n                  file.getBlob(async (err, blob) => {\n                    if (err) {\n                      console.warn(err);\n                      return;\n                    }\n\n                    await saveFile(fileName, blob);\n                    const element = document.querySelector(target);\n                    if (element?.dataset.played === \"false\" && !element?.getAttribute(\"src\")) {\n                      const cachedFile = await getCachedFile(fileName);\n                      renderCachedFile(cachedFile, target);\n                    }\n                  });\n\n                  return file;\n                });\n              });\n            });\n          })\n        );\n    })\n    .reduce((torrents, contentItems) => [...torrents, ...contentItems], []);\n\n  runSerial(torrentTasks);\n};\n","import React from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.css\";\n\nconst Video = ({ id, item, index, postId, tipValue, tipCounter, hideRibbon,width }) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = { }\n  if(width){\n    videoStyle.width = width\n  }\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n        {!hideRibbon && <TipRibbon tipCounter={tipCounter} tipValue={tipValue} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import React, { useState, useCallback } from \"react\";\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport \"./css/index.css\";\n\nconst IMAGE_TRANSITION_MS = 200;\n\nconst Image = ({ id, item, index, postId, tipValue, tipCounter,hideRibbon,width }) => {\n  const [zoomed, setZoomed] = useState(false);\n  const [zoomLoaded, setZoomLoaded] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(true);\n  const [animationTimer, setAnimationTimer] = useState(null);\n\n  const handleZoomChange = useCallback(\n    value => {\n      clearTimeout(animationTimer);\n      setZoomed(value);\n      if (!value && zoomLoaded) {\n        setZoomLoaded(false);\n        const timer = setTimeout(() => {\n          setPreviewVisible(true);\n        }, IMAGE_TRANSITION_MS);\n        setAnimationTimer(timer);\n      }\n\n      if (value) {\n        setPreviewVisible(false);\n      }\n    },\n    [animationTimer, zoomLoaded]\n  );\n\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const mainImageStyle = { opacity: previewVisible ? 1 : 0 }\n  if(width){\n    mainImageStyle.width = width\n  }\n\n  return (\n    <div className=\"media-container\">\n      <ControlledZoom\n        isZoomed={zoomed}\n        onZoomChange={handleZoomChange}\n        overlayBgColorStart=\"#16191c00\"\n        overlayBgColorEnd=\"#16191c\"\n      >\n        <img\n          className={`torrent-img torrent-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          style={mainImageStyle}\n          src={contentURL}\n        />\n        <img\n          className={`enlarged-img enlarged-img-${postId}-${id}`}\n          alt=\"Post Media\"\n          data-file-key={index}\n          onLoad={() => {\n            setZoomLoaded(true);\n          }}\n          style={{ opacity: zoomLoaded ? 1 : 0 }}\n          src={contentURL}\n        />\n        {!hideRibbon && <TipRibbon\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          zoomed={zoomed}\n        />}\n      </ControlledZoom>\n    </div>\n  );\n};\n\nexport default Image;\n","// @ts-check\nimport { useEffect, useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../store\";\nimport * as Utils from \"../../utils\";\n\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport \"./css/index.css\";\n\nconst Post = ({\n  id,\n  timestamp,\n  avatar,\n  tipCounter,\n  tipValue,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  contentItems = {},\n  username,\n  openDeleteModal = undefined\n}) => {\n  const unlockedContent = Store.useSelector(\n    ({ content }) => content.unlockedContent\n  );\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n\n  const selfPublicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const isOwn = selfPublicKey === publicKey;\n\n  const isOnlineNode = Utils.isOnline(\n    Store.useSelector(Store.selectUser(publicKey)).lastSeenNode\n  );\n\n  const getMediaContent = useCallback(() => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  }, [contentItems]);\n\n  const getTextContent = () => {\n    return Object.entries(contentItems).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(() => {\n    getMediaContent().forEach(([k, e]) => {\n      const path = `${publicKey}>posts>${k}`;\n      if (e.isPrivate && !unlockedContent[path]) {\n        setIsPrivate(true);\n      }\n    });\n  }, [contentItems, getMediaContent, publicKey, unlockedContent]);\n\n  const parseContent = ([key, item], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n    const finalItem = item;\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`;\n      const cached = unlockedContent[path];\n      if (cached) {\n        finalItem.magnetURI = cached;\n      } else {\n        return (\n          <div>\n            <i className=\"fas fa-lock fa-10x\"></i>\n          </div>\n        );\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n    if (item.type === \"stream/embedded\") {\n      return (\n        <Stream\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  // useEffect(() => {\n  //   attachMedia();\n  // }, [contentItems.length]);\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id, shared: false });\n  }, [id, openDeleteModal]);\n\n  useEffect(() => {\n    try {\n      Tooltip.rebuild();\n    } catch (e) {\n      console.log(`Error inside <Post />: `, e);\n    }\n  }, []);\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <Link\n            className=\"av\"\n            to={isOwn ? `/profile` : `/otherUser/${publicKey}`}\n            style={{\n              borderWidth: isOnlineNode && !isOwn ? 2 : undefined,\n              borderStyle: isOnlineNode && !isOwn ? \"solid\" : undefined,\n              borderColor: isOnlineNode && !isOwn ? \"#39B54A\" : undefined,\n              backgroundImage: `url(${avatar})`\n            }}\n          />\n          <div className=\"details\">\n            <Link to={`/otherUser/${publicKey}`}>{username}</Link>\n            <p>\n              {timestamp && typeof timestamp === \"number\"\n                ? DateTime.fromMillis(timestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","export default __webpack_public_path__ + \"static/media/av1.e1539bb2.jpg\";","// @ts-check\nimport { useCallback, useLayoutEffect } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"react-tooltip\";\n\nimport Post from \".\";\n\nimport av1 from \"../../images/av1.jpg\";\nimport \"../Post/css/index.css\";\nimport { attachMedia } from \"../../utils/Torrents\";\nimport Loader from \"../Loader\";\nimport * as Store from \"../../store\";\nimport * as Utils from \"../../utils\";\n/**\n * @typedef {import('../../schema').Post} Post\n */\n\nconst SharedPost = ({\n  sharerProfile,\n  originalPostProfile,\n  originalPost: origPost,\n  sharedTimestamp,\n  postPublicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = undefined\n}) => {\n  /** @type {Post} */\n  const originalPost = origPost;\n  const loadPostMedia = useCallback(async () => {\n    if (originalPost) {\n      attachMedia([originalPost], false);\n    }\n  }, [originalPost]);\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id: originalPost.id, shared: true });\n  }, [originalPost, openDeleteModal]);\n\n  useLayoutEffect(() => {\n    Tooltip.rebuild();\n    loadPostMedia();\n  }, [loadPostMedia]);\n\n  const selfPublicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const isOwn = sharerProfile.publicKey === selfPublicKey;\n  const isOnlineNode = Utils.isOnline(\n    Store.useSelector(Store.selectUser(sharerProfile.publicKey)).lastSeenNode\n  );\n\n  return (\n    <div className=\"post shared-post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <Link\n            to={isOwn ? `/profile` : `/otherUser/${sharerProfile.publicKey}`}\n            className=\"av\"\n            style={{\n              borderWidth: isOnlineNode && !isOwn ? 2 : undefined,\n              borderStyle: isOnlineNode && !isOwn ? \"solid\" : undefined,\n              borderColor: isOnlineNode && !isOwn ? \"#39B54A\" : undefined,\n              backgroundImage: `url(data:image/jpeg;base64,${sharerProfile?.avatar})`\n            }}\n          ></Link>\n          <div className=\"details\">\n            <p>{sharerProfile?.displayName}</p>\n            <p>\n              {sharedTimestamp && typeof sharedTimestamp === \"number\"\n                ? DateTime.fromMillis(sharedTimestamp).toRelative()\n                : \"Loading...\"}\n            </p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"shared-content\">\n        {originalPost && originalPostProfile ? (\n          <Post\n            id={originalPost.id}\n            timestamp={originalPost.date}\n            avatar={\n              originalPostProfile.avatar\n                ? `data:image/jpeg;base64,${originalPostProfile.avatar}`\n                : av1\n            }\n            // @ts-expect-error tipCounter not wired right now I think\n            tipCounter={originalPost.tipCounter || 0}\n            // @ts-expect-error tipValue ??\n            tipValue={originalPost.tipValue || 0}\n            publicKey={postPublicKey}\n            openTipModal={openTipModal}\n            openUnlockModal={openUnlockModal}\n            contentItems={originalPost.contentItems ?? {}}\n            username={\n              originalPostProfile.displayName ?? originalPostProfile.alias\n            }\n          />\n        ) : (\n          <Loader text=\"Loading Post...\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SharedPost;\n"],"sourceRoot":""}