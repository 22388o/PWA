{"version":3,"sources":["common/Post/components/Video/index.js","images/share.svg","common/Post/index.tsx"],"names":["Video","id","item","index","postId","tipValue","tipCounter","hideRibbon","width","contentURL","decodeURIComponent","magnetURI","replace","videoStyle","className","style","cursor","data-torrent","data-file-key","controls","data-played","src","TipRibbon","zoomed","Post","publicKey","openTipModal","openUnlockModal","openDeleteModal","undefined","openShareModal","_","dispatch","Store","unlockedContent","content","useEmblaCarousel","slidesToScroll","align","carouselRef","carouselAPI","author","post","React","useMemo","tips","Object","values","length","sum","useState","sliderLength","setSliderLength","activeSlide","setActiveSlide","isPrivate","setIsPrivate","isOnlineNode","useEffect","subPostContent","subPostTips","liveStatus","stream","contentItems","find","type","viewersCounter","getMediaContent","useCallback","entries","filter","forEach","k","e","path","parseContent","key","text","finalItem","cached","Image","Common","playbackMagnet","Stream","nextSlide","canScrollNext","scrollNext","prevSlide","canScrollPrev","scrollPrev","handleUserKeyDown","updateActiveSlide","selectedScrollSnap","on","scrollSnapList","window","addEventListener","removeEventListener","off","tipPost","targetType","postID","unlockPost","deletePost","shared","sharePost","Tooltip","rebuild","console","log","ShockAvatar","height","Pad","amt","insideRow","to","displayName","live","waiting","wasLive","DateTime","fromMillis","date","toRelative","onClick","getTextContent","map","Array","from","classNames","scrollTo","ref","data-tip","alt","ShareIcon","color","marginLeft"],"mappings":"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","file":"static/js/34.9c91d2aa.chunk.js","sourcesContent":["import TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\n\nconst Video = ({\n  id = \"\",\n  item,\n  index = 0,\n  postId = \"\",\n  tipValue = 0,\n  tipCounter = 0,\n  hideRibbon = false,\n  width = null\n}) => {\n  const contentURL = decodeURIComponent(\n    item.magnetURI.replace(/.*(ws=)/gi, \"\")\n  );\n  const videoStyle = {};\n  if (width) {\n    videoStyle.width = width;\n  }\n  return (\n    <div className=\"media-container\">\n      <div\n        className=\"video-container\"\n        style={{\n          cursor: \"pointer\"\n        }}\n      >\n        <video\n          style={videoStyle}\n          className={`torrent-video torrent-video-${postId}-${id}`}\n          data-torrent={item.magnetURI}\n          data-file-key={index}\n          controls\n          data-played=\"false\"\n          src={contentURL}\n        />\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","export default __webpack_public_path__ + \"static/media/share.8ed36b2d.svg\";","import React, { useEffect, useState, useCallback } from \"react\";\nimport * as Common from \"shock-common\";\nimport { Link } from \"react-router-dom\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Tooltip from \"react-tooltip\";\nimport classNames from \"classnames\";\nimport sum from \"lodash/sum\";\nimport { DateTime } from \"luxon\";\n\nimport * as Store from \"../../store\";\nimport ShockAvatar from \"../ShockAvatar\";\nimport Pad from \"../Pad\";\nimport { subPostContent, subPostTips } from \"../../actions/FeedActions\";\n\nimport Video from \"./components/Video\";\nimport Image from \"./components/Image\";\nimport Stream from \"./components/Stream\";\nimport \"./css/index.scoped.css\";\n\nimport ShareIcon from \"../../images/share.svg\";\n\nconst Post = ({\n  id,\n  publicKey,\n  openTipModal,\n  openUnlockModal,\n  openDeleteModal = undefined,\n  openShareModal = _ => {}\n}) => {\n  const dispatch = Store.useDispatch();\n  const unlockedContent = Store.useSelector(\n    ({ content }) => content.unlockedContent\n  );\n  const [carouselRef, carouselAPI] = useEmblaCarousel({\n    slidesToScroll: 1,\n    align: \"center\"\n  });\n  const author = Store.useSelector(Store.selectUser(publicKey));\n  const post = Store.useSelector(Store.selectSinglePost(publicKey, id));\n  const [tipCounter, tipValue] = React.useMemo(() => {\n    const tips = Object.values(\n      post.tips ||\n        {} /* cached data from previous app version won't have the tips object */\n    );\n\n    return [tips.length, sum(tips)];\n  }, [post]);\n\n  const [sliderLength, setSliderLength] = useState(0);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [isPrivate, setIsPrivate] = useState(false);\n\n  const isOnlineNode = /*Utils.isOnline(\n    Store.useSelector(Store.selectUser(publicKey)).lastSeenApp\n  );*/ true;\n\n  useEffect(() => dispatch(subPostContent(publicKey, id)), [\n    dispatch,\n    id,\n    publicKey\n  ]);\n\n  useEffect(() => dispatch(subPostTips(publicKey, id)), [\n    dispatch,\n    id,\n    publicKey\n  ]);\n\n  const liveStatus = React.useMemo<Common.LiveStatus | null>(() => {\n    const stream = Object.values(post.contentItems ?? {}).find(\n      item => item.type === \"stream/embedded\"\n    ) as Common.EmbeddedStream;\n\n    if (stream) {\n      return stream.liveStatus;\n    }\n\n    return null;\n  }, [post.contentItems]);\n\n  const viewersCounter = React.useMemo<number | null>(() => {\n    const stream = Object.values(post.contentItems ?? {}).find(\n      item => item.type === \"stream/embedded\"\n    ) as Common.EmbeddedStream;\n\n    if (stream && stream.liveStatus === \"live\") {\n      return stream.viewersCounter;\n    }\n\n    return null;\n  }, [post.contentItems]);\n\n  const getMediaContent = useCallback(() => {\n    return Object.entries(post.contentItems ?? {}).filter(\n      ([_, item]) => item.type !== \"text/paragraph\"\n    );\n  }, [post.contentItems]);\n\n  const getTextContent = () => {\n    return Object.entries(post.contentItems ?? {}).filter(\n      ([_, item]) => item.type === \"text/paragraph\"\n    );\n  };\n\n  useEffect(() => {\n    getMediaContent().forEach(([k, e]) => {\n      const path = `${publicKey}>posts>${k}`;\n      // @ts-expect-error\n      if (e.isPrivate && !unlockedContent[path]) {\n        setIsPrivate(true);\n      }\n    });\n  }, [getMediaContent, publicKey, unlockedContent]);\n\n  const parseContent = ([key, item]: [string, Common.ContentItem], index) => {\n    if (item.type === \"text/paragraph\") {\n      return <p key={key}>{item.text}</p>;\n    }\n    const finalItem = item;\n    if (item.isPrivate) {\n      const path = `${publicKey}>posts>${id}`;\n      const cached = unlockedContent[path];\n      if (cached) {\n        finalItem.magnetURI = cached;\n      } else {\n        return (\n          <div key={key}>\n            <i className=\"fas fa-lock fa-10x\"></i>\n          </div>\n        );\n      }\n    }\n\n    if (item.type === \"image/embedded\") {\n      return (\n        <Image\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    if (item.type === \"video/embedded\") {\n      return (\n        <Video\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n    if (Common.isEmbeddedStream(finalItem)) {\n      if (item.playbackMagnet) {\n        return (\n          <Video\n            id={key}\n            item={{\n              ...finalItem,\n              magnetURI: finalItem.playbackMagnet\n            }}\n            index={index}\n            postId={id}\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            key={`${id}-${index}`}\n            hideRibbon={undefined}\n            width={undefined}\n          />\n        );\n      }\n      return (\n        <Stream\n          id={key}\n          item={finalItem}\n          index={index}\n          postId={id}\n          tipCounter={tipCounter}\n          tipValue={tipValue}\n          key={`${id}-${index}`}\n          hideRibbon={undefined}\n          width={undefined}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  const nextSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollNext()) {\n      carouselAPI.scrollNext();\n    }\n  }, [carouselAPI]);\n\n  const prevSlide = useCallback(() => {\n    if (!carouselAPI) return;\n\n    if (carouselAPI.canScrollPrev()) {\n      carouselAPI.scrollPrev();\n    }\n  }, [carouselAPI]);\n\n  const handleUserKeyDown = useCallback(\n    e => {\n      if (sliderLength === 0) return;\n      const { key } = e;\n\n      if (key === \"ArrowRight\") {\n        nextSlide();\n      }\n\n      if (key === \"ArrowLeft\") {\n        prevSlide();\n      }\n    },\n    [sliderLength, prevSlide, nextSlide]\n  );\n\n  const updateActiveSlide = useCallback(() => {\n    setActiveSlide(carouselAPI.selectedScrollSnap());\n  }, [carouselAPI, setActiveSlide]);\n\n  useEffect(() => {\n    if (!carouselAPI) return;\n\n    carouselAPI.on(\"scroll\", updateActiveSlide);\n    setSliderLength(carouselAPI.scrollSnapList().length);\n    window.addEventListener(\"keydown\", handleUserKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyDown);\n      carouselAPI.off(\"scroll\", updateActiveSlide);\n    };\n  }, [carouselAPI, sliderLength, handleUserKeyDown, updateActiveSlide]);\n\n  const tipPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openTipModal({\n      targetType: \"post\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openTipModal, publicKey]);\n\n  const unlockPost = useCallback(() => {\n    if (!isOnlineNode) {\n      return;\n    }\n\n    openUnlockModal({\n      targetType: \"unlock\",\n      postID: id,\n      publicKey\n    });\n  }, [id, isOnlineNode, openUnlockModal, publicKey]);\n\n  const deletePost = useCallback(() => {\n    openDeleteModal({ id, shared: false });\n  }, [id, openDeleteModal]);\n\n  const sharePost = useCallback(() => {\n    openShareModal({\n      targetType: \"share\",\n      postID: id,\n      publicKey\n    });\n  }, [publicKey, id, openShareModal]);\n\n  useEffect(() => {\n    try {\n      Tooltip.rebuild();\n    } catch (e) {\n      console.log(`Error inside <Post />: `, e);\n    }\n  }, []);\n\n  const readableLiveStatus: Record<Common.LiveStatus, string> = {\n    live: \"Is Live\",\n    waiting: \"Waiting\",\n    wasLive: \"Was Live\"\n  };\n\n  return (\n    <div className=\"post\">\n      <div className=\"head\">\n        <div className=\"user\">\n          <ShockAvatar height={50} publicKey={publicKey} />\n\n          <Pad amt={10} insideRow />\n\n          <div className=\"details\">\n            <div className=\"username\">\n              <Link to={`/otherUser/${publicKey}`}>{author.displayName}</Link>\n              {liveStatus && (\n                <p className=\"liveStatus\">\n                  {readableLiveStatus[liveStatus]}\n                  <i\n                    className={`fas fa-circle liveStatusIcon ${\n                      liveStatus === \"live\" ? \"liveIcon\" : \"\"\n                    }`}\n                  ></i>\n                  {liveStatus === \"live\" && (\n                    <span> | {viewersCounter} watching</span>\n                  )}\n                </p>\n              )}\n            </div>\n            <p>{DateTime.fromMillis(post.date).toRelative()}</p>\n          </div>\n        </div>\n        {openDeleteModal && (\n          <i className=\"fas fa-trash\" onClick={deletePost}></i>\n        )}\n      </div>\n\n      <div className=\"content\">\n        {getTextContent().map(parseContent)}\n        <div className=\"media-content-carousel\">\n          {sliderLength > 1 ? (\n            <div className=\"media-carousel-controls-container\">\n              <div\n                className=\"media-carousel-arrow fas fa-angle-left\"\n                onClick={prevSlide}\n              ></div>\n              <div className=\"media-carousel-pages\">\n                {Array.from({ length: sliderLength }).map((_, key) => (\n                  <div\n                    // TODO: Get the actual ID here. However posts can't be\n                    // edited so index is stable.\n                    key={key}\n                    className={classNames({\n                      \"media-carousel-page\": true,\n                      \"active-carousel-page\": activeSlide === key\n                    })}\n                    onClick={() => carouselAPI?.scrollTo(key)}\n                  ></div>\n                ))}\n              </div>\n              <div\n                className=\"media-carousel-arrow fas fa-angle-right\"\n                onClick={nextSlide}\n              ></div>\n            </div>\n          ) : null}\n          <div className=\"media-content-root\" ref={carouselRef}>\n            <div className=\"media-content-container\">\n              {getMediaContent().map(parseContent)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <div></div>\n        <div\n          className=\"icon-tip-btn\"\n          data-tip={isPrivate ? \"Unlock this post\" : \"Tip this post\"}\n          onClick={isPrivate ? unlockPost : tipPost}\n        >\n          <div className=\"tip-icon icon-thin-feed\"></div>\n        </div>\n        {openShareModal && (\n          <div className=\"icon-tip-btn\" data-tip={\"share\"} onClick={sharePost}>\n            <img\n              alt=\"Share this post\"\n              src={ShareIcon}\n              style={{ color: \"#4285b9\", marginLeft: \"auto\" }}\n            />\n          </div>\n        )}\n        {!openShareModal && <div></div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"],"sourceRoot":""}