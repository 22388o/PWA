{"version":3,"sources":["common/DialogNav/index.js","utils/seed.tsx","pages/Profile/publishContent.tsx"],"names":["DialogNav","pageTitle","drawerVisible","goBack","useCallback","window","history","back","className","onClick","classNames","EnrollToken","seedUrl","seedToken","a","array","Uint8Array","crypto","getRandomValues","token","Array","prototype","map","call","x","toString","slice","join","reqData","seed_token","wallet_token","fetch","method","headers","body","JSON","stringify","status","Error","PublishContentPage","dispatch","useDispatch","useHistory","seedProviderPub","useSelector","content","seedInfo","availableTokens","useState","error","setError","loading","setLoading","mediaPreviews","setMediaPreviews","title","setTitle","description","setDescription","postType","setPostType","setCreatePost","imageFile","useRef","videoFile","useDefault","setUseDefault","selectedFiles","setSelectedFiles","onSubmit","e","preventDefault","console","log","length","tokenInfo","deleteToken","availableToken","key","Object","hasOwnProperty","element","tokens","Http","post","type","amt","to","memo","feeLimit","ackInfo","data","orderAck","parse","response","finalSeedUrl","orderData","formData","FormData","from","forEach","file","append","Authorization","res","json","resJson","message","err","removeUnavailableToken","torrent","magnet","firstFile","contentItem","magnetURI","width","height","addPublishedContent","published","push","errorMessage","onDiscard","onInputChange","target","value","name","checked","onSelectedFile","files","promises","index","Promise","reader","FileReader","onload","startsWith","uri","result","readAsDataURL","allSettled","then","previews","singleRes","onSelectImageFile","current","click","onSelectVideoFile","overlay","fullScreen","text","onReset","style","display","flexDirection","alignItems","justifyContent","htmlFor","id","onChange","appearance","backgroundColor","color","marginLeft","placeholder","ref","accept","multiple","prev","src","controls","rows"],"mappings":"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","file":"static/js/25.ff12b85d.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.css\";\n\nconst DialogNav = ({ pageTitle, drawerVisible }) => {\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n  return (\n    <div className=\"dialog-nav-container\">\n      <div className=\"dialog-nav-back\" onClick={goBack}>\n        <i className=\"icon icon-thin-back\"></i>\n      </div>\n      <p className=\"dialog-nav-title\">{pageTitle}</p>\n      <div\n        className={classNames({\n          \"dialog-nav-menu-btn\": true,\n          \"dialog-nav-hidden\": !drawerVisible\n        })}\n      >\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n        <div className=\"dialog-nav-menu-dash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DialogNav;\n","export const EnrollToken = async (seedUrl,seedToken) => {\n    const array = new Uint8Array(32);\n    window.crypto.getRandomValues(array);\n    const token = Array.prototype.map.call(array, x => ('00' + x.toString(16)).slice(-2)).join('');\n    const reqData = {\n      seed_token: seedToken,\n      wallet_token: token\n    }\n    const res = await fetch(`${seedUrl}/api/enroll_token`, {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'\n    },\n      body: JSON.stringify(reqData)\n    })\n    if (res.status !== 200) {\n      throw new Error('torrentSeed service currently not available')\n    }\n    return token\n}","import React, {  useCallback,  useRef, useState } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport \"./css/index.css\";\n\nimport Loader from \"../../common/Loader\";\nimport DialogNav from \"../../common/DialogNav\";\nimport Http from \"../../utils/Http\";\nimport {addPublishedContent,removeUnavailableToken} from '../../actions/ContentActions'\nimport { EnrollToken } from \"../../utils/seed\";\nimport { useHistory } from \"react-router\";\nconst PublishContentPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory()\n  //@ts-ignore\n  const seedProviderPub = useSelector(({content}) => content.seedProviderPub)\n  //@ts-ignore\n  const {seedUrl,seedToken} = useSelector(({content}) => content.seedInfo)\n  //@ts-ignore\n  const availableTokens = useSelector(({content}) => content.availableTokens)\n  const [error, setError] = useState<string|null>(null);\n  const [loading, setLoading] = useState(false);\n  const [mediaPreviews,setMediaPreviews] = useState([])\n  const [title,setTitle] = useState(\"\")\n  const [description,setDescription] = useState(\"\")\n  const [postType,setPostType] = useState(\"public\")\n  const [createPost,setCreatePost] = useState(false)\n  const imageFile = useRef(null)\n  const videoFile = useRef(null)\n\n  const [useDefault,setUseDefault] = useState(false)\n\n  const [selectedFiles,setSelectedFiles] = useState([]) \n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      \n      console.log([title,description,selectedFiles])\n      if(selectedFiles.length === 0){\n        setError(\"no selected files\")\n        return\n      }\n      setLoading(true)\n      try{\n        let tokenInfo = null\n        let deleteToken = false\n        let availableToken = null\n        console.log(\"useDefault\")\n        console.log(useDefault)\n        for (const key in availableTokens) {\n          if (Object.prototype.hasOwnProperty.call(availableTokens, key)) {\n            const element = availableTokens[key];\n            if(element[0]){\n              availableToken = {seedUrl:key,tokens:element}\n              break\n            }\n          }\n        }\n        if(seedUrl && seedToken){\n          console.log(\"USING SELF SEED TOKEN\")\n          const token = await EnrollToken(seedUrl,seedToken)\n          console.log(\"token\")\n          console.log(token)\n          tokenInfo = {seedUrl, tokens:[token]}\n        } else if(useDefault){\n          console.log(\"USING DEFAULT TOKEN PROVIDER\")\n          const {data,status} = await Http.post('/api/lnd/unifiedTrx',{\n            type: 'torrentSeed',\n            amt: 100,\n            to:seedProviderPub,\n            memo:'',\n            feeLimit:500,\n            ackInfo:1\n          })\n          if(status !== 200){\n            setError(\"seed token request failed\")\n            setLoading(false)\n          }\n          console.log(data)\n          const {orderAck} = data\n          tokenInfo = JSON.parse(orderAck.response)\n        } else if(availableToken) {\n          console.log(\"USING AVAILABLE TOKEN\")\n          tokenInfo = availableToken\n          deleteToken = true\n        } else {\n          setError(\"provide the token data or use default seed provider\")\n          setLoading(false)\n        return\n        }\n        const orderData = tokenInfo\n        const {seedUrl:finalSeedUrl,tokens} = orderData\n        const formData = new FormData()\n        //TODO support public/private content by requesting two tokens and doing this req twice\n        Array.from(selectedFiles).forEach(file => formData.append('files', file))\n        formData.append('info', 'extraInfo')\n        formData.append('comment', 'comment')\n        const res = await fetch(`${finalSeedUrl}/api/put_file`, {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${tokens[0]}`,\n          },\n          body: formData,\n        })\n        const resJson = await res.json()\n        console.log(resJson)\n        if(resJson.error && resJson.error.message){\n          const err = resJson.error.message\n          if(err === \"The provided token has already been used\"){\n            setError(\"An error occurred, please try again\")\n            removeUnavailableToken(finalSeedUrl,tokens[0])(dispatch)\n            \n          } else {\n            setError(err)\n          }\n          setLoading(false)\n          return\n        }\n        const {torrent} = resJson.data\n        const {magnet} = torrent\n        const [firstFile] = mediaPreviews\n        console.log(firstFile)\n        let type = 'image/embedded'\n        if(firstFile.type === 'video'){\n          type = 'video/embedded'\n        }\n        const contentItem = {\n          type,\n          magnetURI:magnet,\n          width:0,\n          height:0\n        }\n        const published = await addPublishedContent(contentItem)(dispatch)\n        console.log(\"content publish complete\")\n        console.log(published)\n        setLoading(false)\n        if(deleteToken){\n          removeUnavailableToken(finalSeedUrl,tokens[0])(dispatch)\n        }\n        history.push(\"/profile\")\n      }catch(err){\n        console.log(err)\n        setError(err?.errorMessage ?? err?.message)\n        setLoading(false)\n      }\n\n    },\n    [title,description,selectedFiles,mediaPreviews,availableTokens,seedUrl, seedToken,useDefault,history, dispatch, setError]\n  );\n  const onDiscard = useCallback(\n    async e => {\n      e.preventDefault();\n      setTitle(\"\")\n      setDescription(\"\")\n      setError(null)\n      \n    },\n    [setDescription, setTitle, setError]\n  );\n  const onInputChange = useCallback(e => {\n    const { value, name,checked } = e.target;\n    //e.preventDefault()\n    switch (name) {\n      case \"title\": {\n        setTitle(value);\n        return;\n      }\n      case \"description\": {\n        setDescription(value);\n        return;\n      }\n      case \"postType\":{\n        setPostType(value)\n        return\n      }\n      case \"createPost\":{\n        console.log(\"create post\")\n        return\n      }\n      case \"useDefault\":{\n        setUseDefault(checked)\n        console.log(checked)\n        return\n      }\n      default:\n        return;\n    }\n  }, [setTitle,setDescription,setCreatePost,setUseDefault]);\n  const onSelectedFile = useCallback(e =>{\n    e.preventDefault()\n    \n    console.log(e.target.files)\n    setSelectedFiles(e.target.files)\n    const promises = Array.from(e.target.files).map((file,index) => {\n      console.log(\"doing file...\")\n      return new Promise(res => {\n        //@ts-ignore\n        const {type} = file\n        //@ts-ignore\n        const reader = new FileReader();\n\n        reader.onload = function (e) {\n          if(type.startsWith('image/')){\n            res({type:'image',uri:e.target.result,index})\n          }\n          if(type.startsWith('video/')){\n            res({type:'video',uri:e.target.result,index})\n          }\n        }\n        //@ts-ignore\n        reader.readAsDataURL(file);\n        \n      })\n    })\n    Promise.allSettled(promises)\n    .then(res =>{\n      const previews = []\n      res.forEach(singleRes => {\n        if(singleRes.status === 'fulfilled'){\n          previews.push(singleRes.value)\n        }\n      })\n      console.log(previews)\n      setMediaPreviews(previews)\n    })\n  },[setSelectedFiles,setMediaPreviews])\n  const onSelectImageFile = useCallback(e => {\n    e.preventDefault()\n    //imageFile.current.onChange = \n    imageFile.current.click()\n  },[imageFile])\n  const onSelectVideoFile = useCallback(e => {\n    e.preventDefault()\n    videoFile.current.click()\n  },[videoFile])\n  return (<div className=\"publish-content-form-container m-1\">\n    {loading ? (\n      <Loader overlay fullScreen text=\"\" />\n    ) : null}\n    <DialogNav  drawerVisible={false} pageTitle=\"PUBLISH CONTENT\" />\n    \n    <form className=\"publish-content-form\" onSubmit={onSubmit} onReset={onDiscard}>\n    <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\n      <h2>Say Something<div className=\"line\"></div></h2>\n      \n    </div>\n      <div style={{display:'flex',alignItems:'center',justifyContent:'space-between'}}>\n        <div className=\"publish-content-title\">\n          <label htmlFor=\"title\" ><strong>Title</strong></label>\n          \n        </div>\n        <div>\n          <strong >Audience: <i className={`fas ${postType === 'public' ? \"fa-globe-europe\" : \"fa-credit-card\"}`}></i></strong>\n          <select name=\"postType\" id=\"postType\" onChange={onInputChange} style={{appearance:'none',backgroundColor:\"rgba(0,0,0,0)\",color:'var(--main-blue)', marginLeft:\"0.3rem\"}}>\n            <option value=\"public\" style={{backgroundColor:\"rgba(0,0,0,0)\",color:'var(--main-blue)'}}>Public</option>\n            <option value=\"private\">Paywall</option>\n          </select>\n        </div>\n      </div>\n      <input\n        type=\"text\"\n        name=\"title\"\n        placeholder=\"How I monetized my content with ShockWallet\"\n        value={title}\n        onChange={onInputChange}\n        className=\"input-field\"\n      />\n      <div className=\"publish-content-title\">\n        <label htmlFor=\"contents\"><strong>Contents</strong></label>\n      </div>\n      <div className=\"m-b-1\">\n      <input type='file' id='file' ref={imageFile} style={{display: 'none'}} accept=\"image/*\" multiple onChange={onSelectedFile}/>\n      <input type='file' id='file' ref={videoFile} style={{display: 'none'}} accept=\"video/*\" multiple onChange={onSelectedFile}/>\n      <i className=\"fas fa-images publish-content-icon\" onClick={onSelectImageFile}></i>\n      <i className=\"fas fa-video publish-content-icon\" onClick={onSelectVideoFile}></i>\n      <div >\n        {mediaPreviews.length > 0 && mediaPreviews.map(prev => {\n          if(prev.type === 'image'){\n            return <img src={prev.uri} key={prev.index.toString()} width={100} className=\"m-1\" ></img>\n          }\n          if(prev.type === 'video'){\n            return <video src={prev.uri} key={prev.index.toString()} controls width={100} className=\"m-1\"></video>\n          }\n        })}\n      </div>\n      {/*<i className=\"fas fa-music publish-content-icon\"></i>\n      <i className=\"fas fa-paperclip publish-content-icon\"></i>*/}\n      </div>\n      <div className=\"publish-content-title\">\n        <label htmlFor=\"description\"><strong>Description</strong></label>\n      </div>\n      <textarea\n        name=\"description\"\n        placeholder=\"I made a quick video to show you guys how easy it is to run your own social platform on ShockWallet, and start earning Bitcoin\"\n        rows={3}\n        value={description}\n        onChange={onInputChange}\n        className=\"input-field\"\n      />\n      <div style={{display:'flex',alignItems:'center',marginLeft:'auto'}}>\n        <label htmlFor=\"useDefault\">Use default seed provider</label>\n        <input type=\"checkbox\" name=\"useDefault\" checked={useDefault} onChange={onInputChange} style={{marginLeft:\"0.2em\"}}  />\n      </div>\n      <div style={{display:'flex',alignItems:'center',marginLeft:'auto'}}>\n        <label htmlFor=\"createPost\">Create Post/Teaser?</label>\n      <input type=\"checkbox\" name=\"createPost\" style={{marginLeft:\"0.2em\"}}  />\n      </div>\n      \n      {error ? <p className=\"error-container\">{error}</p> : null}\n      <div className='flex-center'>\n      <input type=\"reset\" value=\"reset\" className='shock-form-button m-1'/>\n      <input type=\"submit\" value=\"submit\" className='shock-form-button-confirm m-1' />\n      </div>\n    </form>\n  </div>)\n};\n\nexport default PublishContentPage;\n"],"sourceRoot":""}