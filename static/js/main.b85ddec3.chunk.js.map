{"version":3,"sources":["actions/OrdersActions.js","utils/WebSocket.js","actions/CoordinateActions.ts","common/Loader/index.js","common/Post/components/TipRibbon/index.js","common/Post/components/Stream/index.tsx","utils/Http.js","reducers/NodeReducer.js","reducers/AuthReducer.js","reducers/WalletReducer.js","reducers/ChatReducer.js","reducers/DrawerReducer.js","reducers/ContentReducer.ts","reducers/FeesReducer.ts","reducers/FeedReducer.ts","reducers/EncryptionReducer.js","reducers/UserProfilesReducer.js","reducers/OrdersReducer.js","reducers/AppReducer.ts","reducers/CoordinatesReducer.ts","reducers/settings.ts","reducers/index.ts","store/Migrations/index.js","store/Migrations/PeerMigration.js","store/selectors/auth.ts","store/selectors/users.ts","store/selectors/follows.ts","store/selectors/publishedContent.ts","store/selectors/feed.ts","store/selectors/coordinates.ts","store/selectors/index.ts","store/index.ts","actions/AuthActions.ts","actions/SettingsActions.ts","actions/ContentActions.ts","actions/ChatActions.js","actions/WalletActions.js","utils/JSON.ts","utils/Encryption.ts","schema/index.ts","actions/FeedActions.ts","actions/NodeActions.js","utils/dialogCallback.ts","actions/AppActions.ts","actions/UserProfilesActions.ts","common/Drawer/index.js","App.js","utils/ui.tsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js","utils/Error.ts","utils/FieldError.ts","actions/EncryptionActions.js","actions/DrawerActions.js","utils/Date.ts","utils/index.ts","utils/String.js","actions/FeesActions.js"],"names":["ACTIONS","ADD_MY_SERVICE","REMOVE_MY_SERVICE","ADD_BOUGHT_SERVICE","createService","clear","encrypted","serviceID","dispatch","a","id","Http","post","path","value","data","ok","newID","all","Object","entries","map","name","console","log","$$__ENCRYPT__FOR","Promise","serviceType","deleteService","subscribeMyServices","rifle","query","publicKey","reconnect","onData","services","servicesEntries","forEach","get","service","type","serviceInfo","buyService","owner","servicePrice","amt","Number","to","memo","feeLimit","ackInfo","orderAck","JSON","parse","response","options","reconnection","rejectUnauthorized","parser","binaryParser","withCredentials","transports","rifleSubscriptions","Map","GunSocket","LNDSocket","connectSocket","host","store","socketOptions","auth","encryptionId","getState","encryption","deviceId","connected","disconnectSocket","SocketIO","relayId","node","emit","GunOn","encryptedOn","event","subscription","subscriptionId","key","onError","on","Common","setAuthenticated","err","field","message","hostIP","socket","off","close","decryptEventCallback","callback","privateKey","Encryption","encryptedMessage","decryptedMessage","encryptedEmit","eventName","hostKeys","userKeys","hostId","remotePublicKey","localPrivateKey","error","stringify","encryptedData","responses","warn","decryptedResponses","subscribeSocket","resolve","reject","then","token","authToken","unsubscribeRifleById","unsubscribeEvent","delete","unsubscribeRifleByQuery","Array","from","debug","$shock","set","rifleCleanup","subscriptions","unsubscribe","getChats","res","_","sub","chats","contacts","chat","pk","recipientPublicKey","avatar","recipientAvatar","displayName","recipientDisplayName","didDisconnect","messages","reduce","filter","body","trim","initialMessagePrefix","sort","b","timestamp","getSentRequests","sentRequests","getReceivedRequests","receivedRequests","request","changedAddress","recipientChangedRequestAddress","coordinateDeleted","createAction","coordinateReceived","subCoordinates","Utils","unparsed","coordinateSHA256","coordinate","e","alert","Loader","text","fullScreen","small","overlay","overlayBackground","style","height","use100vh","standaloneMode","window","matchMedia","matches","fullScreenStyles","marginBottom","overlayStyles","backgroundColor","className","classNames","TipRibbon","tipCounter","tipValue","zoomed","opacity","Stream","item","index","postId","hideRibbon","width","playerDOM","timeout","useRef","useState","isLive","videoStyle","liveStatus","useEffect","player","videojs","current","autoplay","muted","aspectRatio","src","magnetURI","play","viewersSocketUrl","WebSocket","userToken","addEventListener","cursor","display","ref","preload","controls","autoPlay","unprotectedRoutes","GET","POST","PUT","DELETE","encryptRequest","config","process","REACT_APP_SHOCK_ENCRYPTION_ECC","decryptResponse","interceptors","use","localRequest","url","indexOf","headers","common","Authorization","method","toUpperCase","includes","INITIAL_STATE","alias","authTokenExpirationDate","authMethod","hostingAttemptsDone","webClientPrefix","state","action","RESET_NODE_INFO","SET_HOST_IP","SET_HOST_ID","SET_AUTHENTICATED_USER","defaults","SET_ATTEMPTS_DONE","SET_RELAY_ID","AUTH_ACTIONS","LOGOUT","SET_WEBCLIENT_PREFIX","authenticated","authStep","defaultSteps","manual","shockWizard","shockCloud","hostingTiers","SET_AUTHENTICATED","SET_AUTH_STEP","SET_AUTH_METHOD","totalBalance","channelBalance","confirmedBalance","pendingChannelBalance","USDRate","transactions","content","page","totalPages","totalItems","payments","channels","invoices","peers","recentTransactions","lightningInfo","_getUnifiedTransactionDate","parseInt","creation_date","settle_date","time_stamp","wallet","LOAD_BALANCE","Big","add","toString","LOAD_USD_RATE","LOAD_PEERS","ADD_PEER","REMOVE_PEER","peer","pub_key","LOAD_CHANNELS","LOAD_TRANSACTIONS","LOAD_MORE_TRANSACTIONS","LOAD_INVOICES","LOAD_MORE_INVOICES","LOAD_PAYMENTS","LOAD_MORE_PAYMENTS","LOAD_RECENT_TRANSACTIONS","newRecentTransactions","aDate","bDate","date","payment_hash","hash","payment_request","tx_hash","amount","label","RESET_RECENT_TRANSACTIONS","LOAD_LIGHTNING_INFO","requestBlacklist","_identicalMessages","oldMessage","newMessage","localId","_sortMessages","_processNewMessage","status","outgoing","userMessages","existingMessage","sortedMessages","LOAD_CHAT_DATA","LOAD_SENT_REQUESTS","requestPublicKeys","pendingRequests","loading","LOAD_RECEIVED_REQUESTS","SENT_REQUEST","Date","now","ACCEPT_HANDSHAKE_REQUEST","requestId","DECLINE_HANDSHAKE_REQUEST","SENDING_MESSAGE","Schema","SENDING","SENT_MESSAGE","SENT","FAILED_MESSAGE","FAILED","RECEIVED_MESSAGE","RECEIVED","CHAT_WAS_DELETED","produce","draft","idx","findIndex","c","splice","open","drawer","SET_DRAWER_OPEN","seedProviderPub","streamUserToken","streamLiveToken","streamUrl","streamPostId","streamContentId","streamStatusUrl","streamBroadcasterUrl","publishedContent","publicContent","unlockedContent","seedInfo","availableTokens","availableStreamTokens","tipOverlayUrl","publicContentAdded","match","payload","publishedContentAdded","publishedContentRemoved","SET_SEED_PROVIDER_PUB","ADD_UNLOCKED_CONTENT","unlockedTmp","contentPath","ADD_STREAM","liveToken","seedToken","REMOVE_STREAM","SET_SEED_INFO","ADD_AVAILABLE_TOKEN","seedUrl","availableTmp","push","REMOVE_USED_TOKEN","ADD_STREAM_TOKEN","REMOVE_STREAM_TOKEN","source","rate","feeRates","fastestFee","halfHourFee","hourFee","fees","RESET_FEES","LOAD_FEE_RATES","SET_SOURCE","SET_RATE","follows","user","private","posts","sharedPosts","reloadDone","feed","postDeleted","author","p","postReceived","newPost","authorId","contentItems","tags","title","tips","contentItemReceived","contentItem","postID","slice","sharedPostDeleted","sharerPublicKey","sharedPostReceived","originalAuthor","shareDate","originalPostID","shareID","sharedBy","postTipReceived","tipAmt","tipID","find","ADD_FOLLOW","existingFollow","follow","REMOVE_FOLLOW","UPDATE_FOLLOW","profile","RELOAD_FEED","uuidv4","SET_DEVICE_ID","ADD_USER_KEY_PAIR","keyPair","ADD_HOST_KEY","userProfiles","updatedUserProfile","assign","NODE_ACTIONS","RESET_USER_PROFILES","REMOVE_USER_PROFILE","profiles","CHAT_ACTIONS","req","myServices","boughtServices","orders","tmp","servicesTmp","selectedService","dialogText","dialogHasCallback","app","OPEN_DIALOG","hasCallback","CLOSE_DIALOG","coordinates","settings","reducers","combineReducers","NodeReducer","AuthReducer","EncryptionReducer","WalletReducer","ChatReducer","DrawerReducer","ContentReducer","FeesReducer","FeedReducer","UserProfilesReducer","OrdersReducer","AppReducer","CoordinatesReducer","users","Migrations","1","newState","selectSelfPublicKey","isAuth","selectHost","selectSelfUser","selfPublicKey","maybeUser","createEmptyUser","selectUser","selectAllPublicKeys","keys","selectAllOtherPublicKeys","selectFollows","createSelector","f","selectOwnPublishedContent","privateContent","selectFeedPosts","pickBy","selectAllPosts","selectAllSharedPosts","selectSinglePost","selectPostsNewestToOldest","sharedPostsMap","values","allPosts","alpha","selectSharedPost","sharer","selectAllPostsFromFollowedNewestToOldest","followedPublicKeys","filteredPosts","pick","filteredShared","allNonShared","flat","allShared","records","selectAllCoordinates","selectAllCoordinatesNewestToOldest","coords","selectSingleCoordinate","selectRoot","selectIsInContact","isContact","hasSentReq","r","hasReceivedReq","persistConfig","storage","blacklist","version","stateReconciler","autoMergeLevel2","migrate","createMigrate","persistedReducer","persistReducer","rootReducer","initializedStore","appliedMiddleware","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","persistor","persistStore","initializeStore","useSelector","selector","origUseSelector","useDispatch","originalUseDispatch","RESET_AUTH_INFO","setAuthStep","step","setAuthMethod","logout","PUBLISHED_CONTENT_ADDED","PUBLISHED_CONTENT_REMOVED","setSeedProviderPub","pub","dontBackup","setSeedInfo","cleanUrl","endsWith","infoS","addPublishedContent","isPublicContentItem","TypeError","unlockContent","revealRes","unlockedContents","contentID","hasOwnProperty","call","addStream","removeStream","noDialog","openDialog","addAvailableToken","removeUnavailableToken","addStreamToken","OWN_PUBLISHED_CONTENT_QUERY","subOwnPublishedContent","parsed","parseJson","isPublishedContent","unsubOwnPublishedContent","subOwnPublicContent","logger","SET_CHAT_CONTACTS","SET_CHAT_MESSAGES","loadChatData","loadSentRequests","loadReceivedRequests","requestorPK","requestorAvatar","requestorDisplayName","subscribeChatMessages","userPublicKey","incomingId","Error","rawMsg","msg","incomingMessages","acceptHandshakeRequest","put","accept","sendHandshakeRequest","sendMessage","tempId","DateTime","utc","toMillis","chatWasDeleted","subChats","subReceivedRequests","subSentRequests","fetchWalletBalance","channel_balance","confirmed_balance","pending_channel_balance","fetchUSDRate","exchangeRate","replace","fetchTransactions","itemsPerPage","reset","params","fetchChannels","fetchPeers","fetchInvoices","fetchUnifiedTransactions","connectPeer","pubkey","newPeer","address","bytes_sent","bytes_recv","sat_sent","sat_recv","inbound","openChannel","channelCapacity","pushAmount","channelPushAmount","satPerByte","FetchLightningInfo","safeParseJSON","nonEncryptedEvents","convertBase64ToBuffer","Buffer","convertBufferToBase64","processKey","isBuffer","convertToEncryptedMessageResponse","ciphertext","iv","mac","ephemPublicKey","FieldError","convertToEncryptedMessage","isEncryptedMessage","isNonEncrypted","generateKeyPair","ECCrypto","generatePrivate","getPublic","privateKeyBase64","publicKeyBase64","encryptMessage","processedPublicKey","messageBuffer","encrypt","encryptedMessageResponse","decryptMessage","processedPrivateKey","decrypt","decryptedMessageBuffer","parsedMessage","toLowerCase","CHAT_MESSAGE_STATUS","o","obj","description","isPostRaw","valMap","baseValidator","every","validator","createValidator","isFinite","val","RESET_FEED","LOAD_POSTS","ADD_USER_POST","DELETE_USER_POST","LOAD_SHARED_POST","POST_TIPPED","removeFollow","addFollow","subSinglePost","subscribeUserPosts","subPostContent","FOLLOWS_QUERY","subscribeFollows","info","unsubscribeFollows","sendTipPost","deleteUserPost","reloadFeed","subSharedPosts","sharedPost","subPostTips","nTipAmount","NaN","SET_CONNECTION_STATUS","SET_NODE_HEALTH","setHostId","fetchNodeHealth","APIStatus","fetchNodeUnlockStatus","walletExists","walletStatus","connectHost","resetData","done","health","baseURL","setRelayId","exchangeKeyPair","sanitizedHostIP","nodeHealthHttps","withProtocolHostIP","nodeHealth","unlockWallet","password","decodedToken","jwtDecode","authorization","exp","parseError","createAlias","createWallet","setWebclientPrefix","prefix","dialogCallback","callDialogCallBack","cb","addDialogCallback","closeDialog","executeCb","subscribedProfiles","Set","subscribeUserProfile","has","bio","binarySub","header","unsubscribeUserProfile","Drawer","Store","useCallback","closeDrawer","onClickLogout","confirm","onClickScan","onClick","color","OverviewPage","React","lazy","AdvancedPage","WalletSettingsPage","MessagesPage","ProfilePage","ChatPage","SendPage","RequestPage","AuthPage","FeedPage","MoonPayPage","PublishContentPage","offerServicePage","CreatePostPage","GoLivePage","OtherUserPage","QRScannerPage","BackupsPage","PublicContentItemPage","PrivateRoute","component","authorizedComponent","App","history","useHistory","update","setUpdate","setIsLive","showFloatingPlayer","setShowFloatingPlayer","interval","setInterval","clearInterval","setTimeout","clearTimeout","StreamRender","useMemo","undefined","stopStream","contentId","endUrl","urlForMagnet","obsToken","addLanguage","tokenExpired","JWTDecode","elementId","elmnt","document","getElementById","pos1","pos2","pos3","pos4","onpointerdown","preventDefault","clientX","clientY","onpointerup","closeDragElement","onpointermove","elementDrag","top","offsetTop","left","offsetLeft","dragElement","loadContentInfo","serviceProvider","seedData","JObject","loadStreamInfo","streamData","DialogClose","ConfirmDialog","fallback","exact","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","closeButton","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","href","origin","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","errorMessage","stack","exchangeSource","CancelToken","addUserKeyPair","addHostKey","getDeviceId","cancel","cancelToken","APIPublicKey","openDrawer","useForceUpdate","setTick","tick","formatTimestamp","relativeTime","fromMillis","toRelative","resizeImage","img","desiredLongEdge","compression","canvas","createElement","Math","round","getContext","drawImage","toDataURL","processImageFile","file","startsWith","size","rej","reader","FileReader","onload","target","result","ArrayBuffer","onFail","onerror","onabort","readAsArrayBuffer","imageBuffer","webkitURL","createObjectURL","Blob","_image","Image","image","resizedImage","normalizeURL","_url","__url","protocol","getContact","contact","EMPTY_FN","useBooleanState","initialState","setState","_state","safeParseJson","useLastSeen","lastSeenApp","setLastSeenApp","lastSeenNode","setLastSeenNode","appSub","lastSeen","nodeSub","processDisplayName","suffix","loadFeeRates","setSource","setRate"],"mappings":"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","file":"static/js/main.b85ddec3.chunk.js","sourcesContent":["import Http from \"../utils/Http\";\nimport {\n  rifle,\n  rifleSocketExists,\n  unsubscribeRifleById\n} from \"../utils/WebSocket\";\nexport const ACTIONS = {\n  ADD_MY_SERVICE: \"service/add\",\n  REMOVE_MY_SERVICE: \"service/remove\",\n  ADD_BOUGHT_SERVICE: \"service/add/bought\"\n};\n\nexport const createService = (\n  clear,\n  encrypted,\n  serviceID\n) => async dispatch => {\n  let id = serviceID;\n  if (serviceID) {\n    const { data } = await Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}`,\n      value: clear\n    });\n    const { ok } = data;\n    if (!ok) {\n      return \"\";\n    }\n  } else {\n    const { data } = await Http.post(\"/api/gun/set\", {\n      path: \"$user>offeredServices\",\n      value: clear\n    });\n    const { ok, id: newID } = data;\n    if (!ok) {\n      return \"\";\n    }\n    id = newID;\n  }\n\n  const all = Object.entries(encrypted).map(([name, value]) => {\n    if (!value) {\n      return;\n    }\n    console.log(`setting: ${name} to ${value}`);\n    return Http.post(\"/api/gun/put\", {\n      path: `$user>offeredServices>${id}>${name}`,\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value\n      }\n    });\n  });\n  await Promise.all(all);\n  const { serviceType } = clear;\n  //update the offered service\n  if (serviceType === \"torrentSeed\" || serviceType === \"streamSeed\") {\n    console.log(\"updating profile with service\");\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>Profile>SeedServiceProvided`,\n      value: id\n    });\n  }\n  /* - The update will come from APi, this should not be needed \n  dispatch({\n    type: ACTIONS.ADD_MY_SERVICE,\n    data: {id,serviceInfo}\n  });*/\n  return id;\n};\n\nexport const deleteService = id => async dispatch => {\n  return await Http.post(\"/api/gun/put\", {\n    path: `$user>offeredServices>${id}`,\n    value: null\n  });\n};\n\nexport const subscribeMyServices = () => dispatch => {\n  const query = `$user::offeredServices::on`;\n  const subscription = rifle({\n    query,\n    publicKey: \"\",\n    reconnect: false,\n    onData: async services => {\n      const servicesEntries = Object.entries(services);\n      console.log(servicesEntries);\n\n      servicesEntries.forEach(async ([id]) => {\n        if (id === \"_\") {\n          return;\n        }\n        const { data: service } = await Http.get(\n          `/api/gun/user/load/offeredServices>${id}`\n        );\n        console.log(service.data);\n        if (service.data === null) {\n          dispatch({\n            type: ACTIONS.REMOVE_MY_SERVICE,\n            data: id\n          });\n          return;\n        }\n        dispatch({\n          type: ACTIONS.ADD_MY_SERVICE,\n          data: { id, serviceInfo: service.data }\n        });\n      });\n    }\n  });\n\n  return subscription;\n};\n\nexport const buyService = (\n  owner,\n  serviceID,\n  servicePrice\n) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"service\",\n    amt: Number(servicePrice),\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: serviceID\n  });\n  console.log(data);\n  const orderAck = JSON.parse(data.orderAck.response);\n  dispatch({\n    type: ACTIONS.ADD_BOUGHT_SERVICE,\n    data: { orderAck, owner, serviceID }\n  });\n  return orderAck;\n};\n","import SocketIO from \"socket.io-client\";\nimport binaryParser from \"socket.io-msgpack-parser\";\nimport * as Common from \"shock-common\";\nimport * as Encryption from \"./Encryption\";\nimport { initialMessagePrefix } from \"./String\";\nimport { setAuthenticated } from \"../actions/AuthActions\";\nimport { connectHost } from \"../actions/NodeActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').Subscription} Subscription\n */\n\nconst options = {\n  reconnection: true,\n  rejectUnauthorized: false,\n  parser: binaryParser,\n  withCredentials: true,\n  transports: [\"websocket\"]\n};\n\nconst rifleSubscriptions = new Map();\n\n/** @type {import(\"socket.io-client\").Socket<import(\"socket.io-client/build/typed-events\").DefaultEventsMap, import(\"socket.io-client/build/typed-events\").DefaultEventsMap>} */\nexport let GunSocket = null;\n\n/** @type {import(\"socket.io-client\").Socket<import(\"socket.io-client/build/typed-events\").DefaultEventsMap, import(\"socket.io-client/build/typed-events\").DefaultEventsMap>} */\nexport let LNDSocket = null;\n\nexport const connectSocket = async (host = \"\", reconnect = false) => {\n  const { store } = await import(\"../store\");\n  const socketOptions = {\n    ...options,\n    auth: {\n      encryptionId: store.getState().encryption.deviceId\n    }\n  };\n\n  if (GunSocket?.connected && LNDSocket?.connected && !reconnect) {\n    return { GunSocket, LNDSocket };\n  }\n\n  if (GunSocket && LNDSocket && reconnect) {\n    disconnectSocket(GunSocket);\n    disconnectSocket(LNDSocket);\n  }\n\n  GunSocket = SocketIO(`${host}/gun`, socketOptions);\n  LNDSocket = SocketIO(`${host}/lndstreaming`, socketOptions);\n  \n  const relayId = store.getState().node.relayId\n  if(relayId){\n    GunSocket.emit('hybridRelayId',{id:relayId})\n    LNDSocket.emit('hybridRelayId',{id:relayId})\n  }\n\n  const GunOn = encryptedOn(GunSocket);\n\n  // Subscribe to Rifle query events as soon as the socket is connected\n  GunOn(\"query:data\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onData?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunOn(\"query:error\", event => {\n    const subscription = rifleSubscriptions.get(event.subscriptionId);\n\n    if (subscription) {\n      subscription.onError?.(event.response.data, event.response.key);\n    }\n  });\n\n  GunSocket.on(Common.NOT_AUTH, () => {\n    store.dispatch(setAuthenticated(false));\n  });\n  //TODO listen on relay error\n  GunSocket.on(\"encryption:error\", async err => {\n    if (err.field === \"deviceId\" || err.message === \"Bad Mac\") {\n      const {hostIP:cachedNodeIP,relayId} = store.getState().node;\n      store.dispatch(setAuthenticated(false));\n    }\n  });\n\n  return { GunSocket, LNDSocket };\n};\n\nexport const disconnectSocket = socket => {\n  socket.off(\"*\");\n  socket.close();\n};\n\nconst decryptEventCallback = async ({ err, data, callback, privateKey }) => {\n  if (\n    (err && !Encryption.isEncryptedMessage(err)) ||\n    (data && !Encryption.isEncryptedMessage(data))\n  ) {\n    callback(err, data);\n    return;\n  }\n\n  if (err) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: err\n    });\n\n    callback(decryptedMessage, data);\n    return;\n  }\n\n  if (data) {\n    const decryptedMessage = await Encryption.decryptMessage({\n      privateKey,\n      encryptedMessage: data\n    });\n\n    callback(err, decryptedMessage);\n    return;\n  }\n};\n\nconst encryptedEmit = socket => async (eventName, message, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { hostKeys, userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.emit(eventName, message, callback);\n    return;\n  }\n\n  const remotePublicKey = hostKeys[hostId];\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!remotePublicKey || !localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  const encryptedData = await (message\n    ? Encryption.encryptMessage({\n        publicKey: remotePublicKey,\n        message: JSON.stringify(message)\n      })\n    : null);\n\n  socket.emit(eventName, encryptedData, (err, data) => {\n    decryptEventCallback({\n      err,\n      data,\n      callback,\n      privateKey: localPrivateKey\n    });\n  });\n};\n\nconst encryptedOn = socket => async (eventName, callback) => {\n  // TODO: remove circular dep\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  if (Encryption.isNonEncrypted(eventName)) {\n    socket.on(eventName, callback);\n    return;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.error(\"[WS] Unable to retrieve key for specified Host ID:\", hostId);\n\n    return;\n  }\n\n  socket.on(eventName, async (...responses) => {\n    const decryptedResponses = await Promise.all(\n      responses.map(async response => {\n        if (!response) {\n          return response;\n        }\n\n        if (response && !Encryption.isEncryptedMessage(response)) {\n          console.warn(\"Non-encrypted socket message\", response);\n          return response;\n        }\n\n        return Encryption.decryptMessage({\n          privateKey: localPrivateKey,\n          encryptedMessage: response\n        });\n      })\n    );\n\n    callback(...decryptedResponses);\n  });\n};\n\n/**\n * @returns {Promise<Subscription>}\n */\nexport const subscribeSocket = ({ eventName, callback }) =>\n  new Promise((resolve, reject) => {\n    try {\n      import(\"../store\").then(({ store }) => {\n        const on = encryptedOn(GunSocket);\n        const emit = encryptedEmit(GunSocket);\n\n        emit(\n          `subscribe:${eventName}`,\n          {\n            token: store.getState().node.authToken\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              reject(err);\n              return;\n            }\n          }\n        );\n\n        if (callback) {\n          on(eventName, data => {\n            callback(null, data);\n          });\n        }\n\n        resolve({\n          off() {\n            emit(`unsubscribe:${eventName}`);\n          }\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\nexport const unsubscribeRifleById = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n\n  if (cachedSocket) {\n    unsubscribeEvent(subscriptionId);\n    rifleSubscriptions.delete(subscriptionId);\n  }\n};\n\nexport const unsubscribeRifleByQuery = query => {\n  const subscriptionEntries = Array.from(rifleSubscriptions.entries());\n\n  subscriptionEntries.map(([id, subscription]) => {\n    if (subscription.query === query) {\n      console.log(\"Unsubscribing by query:\", subscription);\n      unsubscribeRifleById(id);\n      return true;\n    }\n\n    return false;\n  });\n};\n\nexport const unsubscribeEvent = subscriptionId =>\n  new Promise(resolve => {\n    const emit = encryptedEmit(GunSocket);\n    emit(\n      \"unsubscribe\",\n      {\n        subscriptionId\n      },\n      () => {\n        console.debug(\n          `[SOCKET] Unsubscribed from event successfully! (${subscriptionId})`\n        );\n        resolve(true);\n      }\n    );\n  });\n\nexport const rifleSocketExists = subscriptionId => {\n  const cachedSocket = rifleSubscriptions.get(subscriptionId);\n  return !!cachedSocket;\n};\n\n/**\n * @typedef {object} RifleParams\n * @prop {string} query\n * @prop {string=} publicKey Alias for publicKeyForDecryption\n * @prop {boolean=} reconnect\n * @prop {(data, key) => void} onData\n * @prop {((error) => void)=} onError\n */\n\n/**\n * Returns a socket wired up to the given query. Use `.onData(callback)` for values.\n * Please do not forget to listen to the NOT_AUTH event and react accordingly.\n * Query example:\n * ```js\n * rifle(`$user::Profile>displayName::on`)\n * // results in:\n * gun.user().get('Profile').get('displayName').on(...)\n *\n * const pk = '....'\n * rifle(`${pk}::Profile::map.once`)\n * // results in:\n * gun.user(pk).get('Profile').get('displayName').map().once(...)\n *\n * rifle(`$gun::handshakeNodes::on`)\n * // results in:\n * gun.get('handshakeNodes').on(...)\n * ```\n * @param {RifleParams} args\n * @returns {Promise<{ off: () => void }>}\n */\nexport const rifle = ({ query, publicKey, reconnect, onData, onError }) =>\n  new Promise((resolve, reject) => {\n    import(\"../store\").then(({ store }) => {\n      if (reconnect) {\n        unsubscribeRifleByQuery(query);\n      }\n\n      const emit = encryptedEmit(GunSocket);\n\n      emit(\n        \"subscribe:query\",\n        {\n          $shock: query,\n          token: store.getState().node.authToken,\n          publicKey\n        },\n        (err, data) => {\n          if (err) {\n            console.error(`Gun rifle error (${query})`);\n            console.error(err);\n            reject(err);\n            return;\n          }\n\n          rifleSubscriptions.set(data.subscriptionId, {\n            onData,\n            onError,\n            query\n          });\n\n          resolve({\n            off: () => unsubscribeRifleById(data.subscriptionId)\n          });\n        }\n      );\n    });\n  });\n\n/**\n * @param {Promise<Subscription>[]} subscriptions\n */\nexport const rifleCleanup = (...subscriptions) => () => {\n  subscriptions.map(subscription =>\n    subscription.then(unsubscribe => {\n      unsubscribe.off();\n    })\n  );\n};\n\n/**\n * @returns {Promise<{ messages: any , contacts: Contact[]}>}\n */\nexport const getChats = async () => {\n  try {\n    const chats = await new Promise(res => {\n      const subscription = subscribeSocket({\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        },\n        eventName: \"chats\"\n      });\n    });\n\n    const contacts = chats.map(chat => ({\n      pk: chat.recipientPublicKey,\n      avatar: chat.recipientAvatar,\n      displayName: chat.recipientDisplayName,\n      didDisconnect: chat.didDisconnect\n    }));\n\n    const messages = chats.reduce(\n      (messages, chat) => ({\n        ...messages,\n        [chat.recipientPublicKey]: chat.messages\n          ?.filter(\n            message =>\n              message.body &&\n              message.body.trim() &&\n              message.body !== initialMessagePrefix\n          )\n          .sort((a, b) => b.timestamp - a.timestamp)\n      }),\n      {}\n    );\n\n    return {\n      contacts,\n      messages\n    };\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleSentRequest[]>}\n */\nexport const getSentRequests = async () => {\n  try {\n    const sentRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"sentRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return sentRequests;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * @returns {Promise<Common.SimpleReceivedRequest[]>}\n */\nexport const getReceivedRequests = async () => {\n  try {\n    const receivedRequests = await new Promise(res => {\n      const subscription = subscribeSocket({\n        eventName: \"receivedRequests\",\n        callback(_, data) {\n          subscription.then(sub => sub.off());\n          res(data);\n        }\n      });\n    });\n\n    return receivedRequests.map(request => ({\n      id: request.id,\n      pk: request.recipientPublicKey,\n      avatar: request.recipientAvatar,\n      displayName: request.recipientDisplayName,\n      changedAddress: request.recipientChangedRequestAddress,\n      timestamp: request.timestamp\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Utils from \"../utils\";\n\nexport const coordinateDeleted = createAction<{\n  coordinateSHA256: string;\n}>(\"coordinates/deleted\");\n\nexport const coordinateReceived = createAction<{\n  coordinate: Common.Coordinate;\n  coordinateSHA256: string;\n}>(\"coordinates/received\");\n\nexport const subCoordinates = () => (dispatch: (action: any) => void) => {\n  Utils.logger.debug(`Subscribing to coordinates.`);\n  try {\n    const subscription = Utils.rifle({\n      query: `$user::coordinates::map.on`,\n      publicKey: \"me\",\n      onData: (unparsed, coordinateSHA256) => {\n        const coordinate = Utils.safeParseJson(unparsed);\n\n        if (Common.isCoordinate(coordinate)) {\n          dispatch(\n            coordinateReceived({\n              coordinate,\n              coordinateSHA256\n            })\n          );\n        } else if (coordinate === null) {\n          dispatch(\n            coordinateDeleted({\n              coordinateSHA256\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Coordinate subscription invalid (or incomplete) value -> `,\n            coordinate\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    alert(`Could not establish a subscription to coordinates: ${e.message}`);\n    Utils.logger.error(\n      `Could not establish a subscription to coordinates -> `,\n      e\n    );\n  }\n};\n","import classNames from \"classnames\";\nimport { use100vh } from \"react-div-100vh\";\nimport \"./css/index.scoped.css\";\n\nconst Loader = ({\n  text = \"Loading...\",\n  fullScreen = false,\n  small = false,\n  overlay = false,\n  overlayBackground = \"rgba(44, 51, 58, 0.95)\",\n  style = {}\n}) => {\n  const height = use100vh() ?? \"100vh\";\n  // Fixes cutoff loading overlay in PWA mode\n  const standaloneMode = window.matchMedia(\"(display-mode: standalone)\")\n    .matches;\n  const fullScreenStyles = fullScreen\n    ? { height: standaloneMode ? \"100%\" : height, marginBottom: 0 }\n    : {};\n  const overlayStyles = overlay\n    ? {\n        backgroundColor: overlayBackground\n      }\n    : {};\n  return (\n    <div\n      className={classNames({\n        \"loading-wall\": true,\n        \"loading-small\": small,\n        \"loading-overlay\": overlay\n      })}\n      style={{\n        ...fullScreenStyles,\n        ...overlayStyles,\n        ...style\n      }}\n    >\n      <div className=\"loading-wall-icon\">\n        <span className=\"loading-circle loading-circle-1\"></span>\n        <span className=\"loading-circle loading-circle-2\"></span>\n        <span className=\"loading-circle loading-circle-3\"></span>\n        {!small ? (\n          <>\n            <span className=\"loading-circle loading-circle-4\"></span>\n            <span className=\"loading-circle loading-circle-5\"></span>\n          </>\n        ) : null}\n      </div>\n      {text ? <div className=\"loading-wall-text\">{text}</div> : null}\n    </div>\n  );\n};\n\nexport default Loader;\n","import \"./css/index.scoped.css\";\n\nconst TipRibbon = ({ tipCounter, tipValue, zoomed }) =>\n  tipValue > 0 ? (\n    <div className=\"ribbon-container\" style={{ opacity: !zoomed ? 1 : 0 }}>\n      <p className=\"ribbon-title\">Total Tips</p>\n      <p className=\"ribbon-value\">\n        {tipCounter} {tipCounter === 1 ? \"Tip\" : \"Tips\"}\n      </p>\n    </div>\n  ) : null;\n\nexport default TipRibbon;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport TipRibbon from \"../TipRibbon\";\nimport \"./css/index.scoped.css\";\nimport videojs from \"video.js\";\nimport Http from \"../../../../utils/Http\";\n\nconst Stream = ({\n  id,\n  item,\n  index,\n  postId,\n  tipValue,\n  tipCounter,\n  hideRibbon,\n  width,\n  timeout = 10000\n}) => {\n  const playerDOM = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const videoStyle = { width: \"100%\" };\n  if (width) {\n    videoStyle.width = width;\n  }\n  const {liveStatus} = item\n  useEffect(() =>{\n    const player = videojs(playerDOM.current, {\n      autoplay: true,\n      muted: true,\n      aspectRatio: \"16:9\"\n    });\n    player.src({\n      src: item.magnetURI,\n      type: \"application/x-mpegURL\"\n    });\n    //listen for 404s from the player\n    //player.tech().on('retryplaylist', () => {\n    //  console.log('retryplaylist');\n    //});\n    player.play();\n  },[item])\n  useEffect(()=>{\n    if(item.viewersSocketUrl){\n      const socket = new WebSocket(`${item.viewersSocketUrl}/stream/watch/${item.userToken}`);\n      socket.addEventListener(\"open\", () => {\n        console.log(\"viewer socket open\")\n      });\n      return () => {\n        socket.close()\n      }\n    }\n  },[item])\n\n  return (\n    <div className=\"media-container w-100\">\n      <div\n        className=\"video-container w-100\"\n        style={{\n          cursor: \"pointer\",\n          width: \"100%\"\n        }}\n      >\n        {!isLive && liveStatus === 'waiting' && <p>The stream did not start yet.</p>}\n        {!isLive && liveStatus === 'wasLive' && <p>The stream is over</p>}\n        {!isLive && !liveStatus && <p>The streamer has disconnected.</p>}\n        <div\n          style={\n            liveStatus === 'live' ? { width: \"100%\" } : { display: \"none\", width: \"100%\" }\n          }\n        >\n          <video\n            className=\"video-js vjs-default-skin\"\n            ref={playerDOM}\n            style={videoStyle}\n            preload=\"auto\"\n            controls\n            muted\n            autoPlay\n          />\n        </div>\n        {!hideRibbon && (\n          <TipRibbon\n            tipCounter={tipCounter}\n            tipValue={tipValue}\n            zoomed={false}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","import Http from \"axios\";\nimport * as Encryption from \"./Encryption\";\n\nconst unprotectedRoutes = {\n  GET: [\n    \"/healthz\",\n    \"/ping\",\n    // Errors out when viewing an API page from the browser\n    \"/favicon.ico\",\n    \"/api/lnd/wallet/status\"\n  ],\n  POST: [\"/api/security/exchangeKeys\", \"/api/encryption/exchange\"],\n  PUT: [],\n  DELETE: []\n};\n\nconst encryptRequest = async config => {\n  const { store } = await import(\"../store\");\n  const { hostKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = config;\n\n  const remotePublicKey = hostKeys[hostId];\n\n  if (process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\") {\n    return config;\n  }\n\n  if (!remotePublicKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      hostKeys\n    );\n    return config;\n  }\n\n  const encryptedMessage = await Encryption.encryptMessage({\n    publicKey: remotePublicKey,\n    message: JSON.stringify(data)\n  });\n\n  return {\n    ...config,\n    data: encryptedMessage\n  };\n};\n\nconst decryptResponse = async response => {\n  if (!response) {\n    return response;\n  }\n\n  const { store } = await import(\"../store\");\n  const { userKeys } = store.getState().encryption;\n  const { hostId } = store.getState().node;\n\n  const { data } = response;\n\n  if (!Encryption.isEncryptedMessage(data)) {\n    return response;\n  }\n\n  const localPrivateKey = userKeys[hostId]?.privateKey;\n\n  if (!localPrivateKey) {\n    console.warn(\n      \"[ENCRYPTION] Unable to retrieve key for specified Host ID:\",\n      hostId,\n      userKeys\n    );\n    return response;\n  }\n\n  const decryptedMessage = await Encryption.decryptMessage({\n    privateKey: localPrivateKey,\n    encryptedMessage: data\n  });\n\n  return { ...response, data: decryptedMessage };\n};\n\nHttp.interceptors.request.use(async config => {\n  try {\n    const { store } = await import(\"../store\");\n    const { authToken } = store.getState().node;\n    const { deviceId } = store.getState().encryption;\n    const { relayId } = store.getState().node;\n    const localRequest = config.url.indexOf(\"/\") === 0;\n\n    if (localRequest) {\n      config.headers.common.Authorization = `Bearer ${authToken}`;\n      config.headers.common[\"encryption-device-id\"] = deviceId;\n      if(relayId){\n        /////\n        config.headers.common[\"x-shock-hybrid-relay-id-x\"] = relayId;\n        /////\n      }\n    }\n\n    if (\n      localRequest &&\n      !unprotectedRoutes[config.method.toUpperCase()].includes(config.url)\n    ) {\n      return await encryptRequest(config);\n    }\n\n    return config;\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nHttp.interceptors.response.use(\n  async response => {\n    return decryptResponse(response);\n  },\n  async error => {\n    try {\n      const response = await decryptResponse(error.response);\n      error.response = response;\n      return Promise.reject(error);\n    } catch (err) {\n      console.error(err);\n      throw error;\n    }\n  }\n);\n\nexport default Http;\n","import Http from \"axios\";\nimport { ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  hostId: null,\n  hostIP: null,\n  alias: null,\n  authToken: null,\n  publicKey: null,\n  authTokenExpirationDate: null,\n  authMethod: null,\n  hostingAttemptsDone: false,\n  webClientPrefix:\"https://lightning.page\",\n  relayId:null\n};\n\nconst node = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.RESET_NODE_INFO: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.SET_HOST_IP: {\n      const hostIP = action.data;\n      return {\n        ...state,\n        hostIP\n      };\n    }\n    case ACTIONS.SET_HOST_ID: {\n      const hostId = action.data;\n      return {\n        ...state,\n        hostId\n      };\n    }\n    case ACTIONS.SET_AUTHENTICATED_USER: {\n      const {\n        authToken,\n        alias,\n        publicKey,\n        authTokenExpirationDate,\n        authMethod\n      } = action.data;\n\n      Http.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n\n      return {\n        ...state,\n        authToken,\n        authTokenExpirationDate,\n        alias,\n        publicKey,\n        authMethod\n      };\n    }\n    case ACTIONS.SET_ATTEMPTS_DONE: {\n      return { ...state, hostingAttemptsDone: true };\n    }\n    case ACTIONS.SET_RELAY_ID:{\n      return {\n        ...state,\n        relayId:action.data\n      }\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return {\n        ...state,\n        authToken: null,\n        publicKey: null,\n        authTokenExpirationDate: null,\n        authMethod: null,\n        hostingAttemptsDone: false\n      };\n    }\n    case ACTIONS.SET_WEBCLIENT_PREFIX:{\n      return {...state, webClientPrefix:action.data}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default node;\n","import { ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  authenticated: false,\n  authStep: \"host\",\n  authMethod: null,\n  relayId:null\n};\n\nconst defaultSteps = {\n  manual: \"host\",\n  shockWizard: \"scan\",\n  shockCloud: \"inviteCode\",\n  hostingTiers: \"chooseTier\"\n};\n\nconst auth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_AUTHENTICATED: {\n      return { ...state, authenticated: action.data };\n    }\n    case ACTIONS.SET_AUTH_STEP: {\n      return {\n        ...state,\n        authStep: action.data\n      };\n    }\n    case ACTIONS.SET_AUTH_METHOD: {\n      const method = action.data;\n      return {\n        ...state,\n        authMethod: method,\n        authStep: defaultSteps[method]\n      };\n    }\n    case ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","// @ts-check\n/**\n * @typedef {import('shock-common').Channel} Channel\n */\n\nimport Big from \"big.js\";\nimport { ACTIONS } from \"../actions/WalletActions\";\n\nconst INITIAL_STATE = {\n  // Wallet Balance\n  totalBalance: \"0\",\n  channelBalance: \"0\",\n  confirmedBalance: \"0\",\n  pendingChannelBalance: \"0\",\n  USDRate: null,\n\n  transactions: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  payments: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  /**\n   * @type {readonly Channel[]}\n   */\n  channels: [],\n  invoices: { content: [], page: -1, totalPages: 0, totalItems: 0 },\n  peers: [],\n  // Includes transactions, payments and invoices combined with a unified schema\n  // and sorted by date\n  recentTransactions: [],\n  lightningInfo:{},\n};\n\nconst _getUnifiedTransactionDate = item =>\n  parseInt(item.creation_date || item.settle_date || item.time_stamp, 10);\n\n/**\n * @returns {typeof INITIAL_STATE}\n */\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_BALANCE: {\n      const {\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      } = action.data;\n      const totalBalance = new Big(confirmedBalance)\n        .add(channelBalance)\n        .add(pendingChannelBalance)\n        .toString();\n\n      return {\n        ...state,\n        totalBalance,\n        channelBalance,\n        confirmedBalance,\n        pendingChannelBalance\n      };\n    }\n    case ACTIONS.LOAD_USD_RATE: {\n      const { data } = action;\n\n      return {\n        ...state,\n        USDRate: data\n      };\n    }\n    case ACTIONS.LOAD_PEERS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: data\n      };\n    }\n    case ACTIONS.ADD_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: [data, ...state.peers]\n      };\n    }\n    case ACTIONS.REMOVE_PEER: {\n      const { data } = action;\n\n      return {\n        ...state,\n        peers: state.peers.filter(peer => peer.pub_key !== data.publicKey)\n      };\n    }\n    case ACTIONS.LOAD_CHANNELS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        channels: data\n      };\n    }\n    case ACTIONS.LOAD_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_TRANSACTIONS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        transactions: {\n          ...data,\n          content: [...state.transactions.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_INVOICES: {\n      const { data } = action;\n\n      return {\n        ...state,\n        invoices: {\n          ...data,\n          content: [...state.invoices.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: data\n      };\n    }\n    case ACTIONS.LOAD_MORE_PAYMENTS: {\n      const { data } = action;\n\n      return {\n        ...state,\n        payments: {\n          ...data,\n          content: [...state.payments.content, ...data.content]\n        }\n      };\n    }\n    case ACTIONS.LOAD_RECENT_TRANSACTIONS: {\n      const { transactions, payments, invoices } = action.data;\n      const newRecentTransactions = [\n        ...transactions.content,\n        ...payments.content,\n        ...invoices.content\n      ]\n        .sort((a, b) => {\n          const aDate = _getUnifiedTransactionDate(a);\n          const bDate = _getUnifiedTransactionDate(b);\n\n          return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;\n        })\n        .map(item => {\n          const date = _getUnifiedTransactionDate(item);\n\n          if (item.payment_hash) {\n            return {\n              type: \"payment\",\n              hash: item.payment_hash,\n              value: item.value,\n              date\n            };\n          }\n\n          if (item.payment_request) {\n            return {\n              type: \"invoice\",\n              hash: item.payment_request,\n              value: item.value,\n              date,\n              message: item.memo\n            };\n          }\n\n          if (item.tx_hash) {\n            return {\n              type: \"chain\",\n              hash: item.tx_hash,\n              value: item.amount,\n              date,\n              message: item.label\n            };\n          }\n\n          console.warn(\"Invalid transaction detected\", item);\n          return null;\n        })\n        .filter(item => item !== null);\n\n      return {\n        ...state,\n        transactions,\n        payments,\n        invoices,\n        recentTransactions: newRecentTransactions\n      };\n    }\n    case ACTIONS.RESET_RECENT_TRANSACTIONS: {\n      return {\n        ...state,\n        recentTransactions: []\n      };\n    }\n    case ACTIONS.LOAD_LIGHTNING_INFO:{\n      const {data}  = action\n      return {\n        ...state,\n        lightningInfo:data\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default wallet;\n","// @ts-check\n/**\n * @format\n */\nimport produce from \"immer\";\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n */\n/**\n * @template S\n * @typedef {import('redux').Reducer<S, AnyAction>} Reducer\n */\n\nimport * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/ChatActions\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').ReceivedRequest} ReceivedRequest\n * @typedef {import(\"../schema\").SentRequest} SentRequest\n *\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').LoadSentRequestsAction} LoadSentRequestsAction\n */\n\nconst INITIAL_STATE = {\n  contacts: /** @type {Contact[]} */ ([]),\n  /**\n   * @type {Record<string, Schema.ChatMessage[]>}\n   */\n  messages: {},\n  sentRequests: /** @type {SentRequest[]} */ ([]),\n  receivedRequests: /** @type {ReceivedRequest[]} */ ([]),\n  requestBlacklist: []\n};\n\n/**\n * @param {Schema.ChatMessage} oldMessage\n * @param {Schema.ChatMessage} newMessage\n * @returns {boolean}\n */\nconst _identicalMessages = (oldMessage, newMessage) =>\n  oldMessage.id && newMessage.id\n    ? oldMessage.id === newMessage.id\n    : oldMessage.localId === newMessage.localId;\n\n/**\n * @param {Schema.ChatMessage[]} messages\n * @returns {Schema.ChatMessage[]}\n */\nconst _sortMessages = (messages = []) =>\n  messages.sort((a, b) => b.timestamp - a.timestamp);\n\n/**\n * @typedef {object} ProcessNewMessageParams\n * @prop {Schema.ChatMessage} data\n * @prop {Schema.ChatMessageStatus} status\n * @prop {typeof INITIAL_STATE} state\n * @prop {boolean=} outgoing\n */\n\n/**\n * @param {ProcessNewMessageParams} args\n * @returns {typeof INITIAL_STATE}\n */\nconst _processNewMessage = ({ data, status, state, outgoing = false }) => {\n  const userMessages = state.messages[data.recipientPublicKey] ?? [];\n  const [existingMessage] = userMessages.filter(message =>\n    _identicalMessages(message, data)\n  );\n\n  if (existingMessage) {\n    console.warn(\"Duplicate Message:\", existingMessage?.body);\n  }\n\n  if (existingMessage) {\n    const messages = userMessages.map(message =>\n      _identicalMessages(message, existingMessage)\n        ? { ...existingMessage, ...data, status, outgoing }\n        : message\n    );\n    const sortedMessages = _sortMessages(messages);\n\n    return {\n      ...state,\n      messages: {\n        ...state.messages,\n        [data.recipientPublicKey]: sortedMessages\n      }\n    };\n  }\n\n  const messages = [{ ...data, status, outgoing }, ...userMessages];\n  const sortedMessages = _sortMessages(messages);\n\n  return {\n    ...state,\n    messages: {\n      ...state.messages,\n      [data.recipientPublicKey]: sortedMessages\n    }\n  };\n};\n\n/**\n * @type {Reducer<typeof INITIAL_STATE>}\n */\nconst chat = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_CHAT_DATA: {\n      const {\n        data: { contacts, messages }\n      } = /** @type {LoadChatDataAction} */ (action);\n      return {\n        ...state,\n        contacts,\n        // TODO: Could not replacing messages altogether be bad?\n        messages: {\n          ...state.messages,\n          ...messages\n        }\n      };\n    }\n    case ACTIONS.LOAD_SENT_REQUESTS: {\n      const {\n        data: sentRequests\n      } = /** @type {LoadSentRequestsAction} */ (action);\n      const requestPublicKeys = state.sentRequests.map(request => request.pk);\n      const pendingRequests = state.sentRequests.filter(\n        request => request.loading && !requestPublicKeys.includes(request.pk)\n      );\n\n      return {\n        ...state,\n        sentRequests: [...pendingRequests, ...sentRequests]\n      };\n    }\n    case ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      const {\n        data: receivedRequests\n      } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n      return {\n        ...state,\n        receivedRequests\n      };\n    }\n    case ACTIONS.SENT_REQUEST: {\n      const { data: publicKey } = /** @type {SentRequestAction} */ (action);\n      return {\n        ...state,\n        sentRequests: [\n          ...state.sentRequests,\n          {\n            avatar: null,\n            changedAddress: false,\n            displayName: null,\n            id: \"loading/\" + publicKey,\n            pk: publicKey,\n            timestamp: Date.now(),\n            loading: true\n          }\n        ]\n      };\n    }\n    case ACTIONS.ACCEPT_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      return {\n        ...state,\n        receivedRequests: state.receivedRequests.filter(\n          request => request.id !== requestId\n        )\n      };\n    }\n    case ACTIONS.DECLINE_HANDSHAKE_REQUEST: {\n      const requestId = action.data;\n      if (!requestId || !requestId.trim()) {\n        return state;\n      }\n\n      return {\n        ...state,\n        requestBlacklist: [...state.requestBlacklist, requestId]\n      };\n    }\n    case ACTIONS.SENDING_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENDING,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.SENT_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.SENT,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.FAILED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.FAILED,\n        state,\n        outgoing: true\n      });\n    }\n    case ACTIONS.RECEIVED_MESSAGE: {\n      const { data } = action;\n      return _processNewMessage({\n        data,\n        status: Schema.CHAT_MESSAGE_STATUS.RECEIVED,\n        state\n      });\n    }\n    case ACTIONS.CHAT_WAS_DELETED: {\n      const {\n        data: { publicKey }\n      } = action;\n      return produce(state, draft => {\n        const idx = draft.contacts.findIndex(c => c.pk === publicKey);\n        idx > -1 && draft.contacts.splice(idx, 1);\n        delete draft.messages[publicKey];\n        draft.messages[publicKey] = [];\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default chat;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/DrawerActions\";\n\nconst INITIAL_STATE = {\n  open: false\n};\n\nconst drawer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DRAWER_OPEN: {\n      return { ...state, open: action.data };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default drawer;\n","import produce from \"immer\";\n\nimport {\n  ACTIONS,\n  publishedContentAdded,\n  publishedContentRemoved,\n  publicContentAdded\n} from \"../actions/ContentActions\";\nimport { PublishedContent, PublicContentItem } from \"../schema\";\n\nconst INITIAL_STATE = {\n  seedProviderPub:\n    \"tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\",\n  streamUserToken: \"\",\n  streamLiveToken: \"\",\n  streamUrl: \"\",\n  streamPostId: \"\",\n  streamContentId: \"\",\n  streamStatusUrl: \"\",\n  streamBroadcasterUrl: \"\",\n  publishedContent: {} as Record<string, PublishedContent>,\n  publicContent: {} as Record<string, PublicContentItem>,\n  unlockedContent: {},\n  seedInfo: {} as { seedUrl?: string; seedToken?: string },\n  availableTokens: {},\n  availableStreamTokens: {},\n  tipOverlayUrl:\"\"\n};\n\nconst content = (state = INITIAL_STATE, action): typeof INITIAL_STATE => {\n  if (publicContentAdded.match(action)) {\n    return produce(state, draft => {\n      const { item } = action.payload;\n      if (!draft.publicContent[item.id]) {\n        draft.publicContent[item.id] = item;\n      }\n    });\n  }\n  if (publishedContentAdded.match(action)) {\n    return produce(state, draft => {\n      const {\n        payload: { content, res }\n      } = action;\n      if (res.ok) {\n        draft.publishedContent[res.id] = content;\n      }\n    });\n  }\n\n  if (publishedContentRemoved.match(action)) {\n    return produce(state, draft => {\n      delete draft.publishedContent[action.payload.id];\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.SET_SEED_PROVIDER_PUB: {\n      return { ...state, seedProviderPub: action.data };\n    }\n\n    case ACTIONS.ADD_UNLOCKED_CONTENT: {\n      const { data } = action;\n      const unlockedTmp = { ...state.unlockedContent };\n      unlockedTmp[data.contentPath] = data.content;\n      return { ...state, unlockedContent: unlockedTmp };\n    }\n    case ACTIONS.ADD_STREAM: {\n      const { data } = action;\n      return {\n        ...state,\n        streamLiveToken: data.liveToken,\n        streamUserToken: data.seedToken,\n        streamUrl: data.streamUrl,\n        streamPostId: data.streamPostId,\n        streamContentId: data.streamContentId,\n        streamStatusUrl: data.streamStatusUrl,\n        streamBroadcasterUrl: data.streamBroadcasterUrl,\n        tipOverlayUrl:data.tipOverlayUrl,\n      };\n    }\n    case ACTIONS.REMOVE_STREAM: {\n      return {\n        ...state,\n        streamLiveToken: \"\",\n        streamUserToken: \"\",\n        streamUrl: \"\",\n        streamPostId: \"\",\n        streamContentId: \"\",\n        streamStatusUrl: \"\",\n        streamBroadcasterUrl: \"\"\n      };\n    }\n    case ACTIONS.SET_SEED_INFO: {\n      const { data } = action;\n      return { ...state, seedInfo: data };\n    }\n    case ACTIONS.ADD_AVAILABLE_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_USED_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableTokens: availableTmp };\n      }\n      return state;\n    }\n    case ACTIONS.ADD_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        availableTmp[seedUrl] = [];\n      }\n      availableTmp[seedUrl].push(userToken);\n      return { ...state, availableStreamTokens: availableTmp };\n    }\n    case ACTIONS.REMOVE_STREAM_TOKEN: {\n      const { data } = action;\n      const { seedUrl, userToken } = data;\n      const availableTmp = { ...state.availableStreamTokens };\n      if (!availableTmp[seedUrl]) {\n        return state;\n      }\n      const index = availableTmp[seedUrl].indexOf(userToken);\n      if (index > -1) {\n        availableTmp[seedUrl].splice(index, 1);\n        return { ...state, availableStreamTokens: availableTmp };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default content;\n","import * as Schema from \"../schema\";\nimport { ACTIONS } from \"../actions/FeesActions\";\n\nexport interface FeesState {\n  source: string;\n\n  rate: Schema.FeeRate;\n\n  feeRates: Record<Schema.FeeRate, number>;\n}\n\nconst INITIAL_STATE: FeesState = {\n  source: \"https://mempool.space/api/v1/fees/recommended\",\n\n  rate: \"halfHourFee\",\n\n  feeRates: {\n    fastestFee: 0,\n    halfHourFee: 0,\n    hourFee: 0\n  }\n};\n\nconst fees = (\n  state: FeesState = INITIAL_STATE,\n  action: { type: string; data: any }\n): FeesState => {\n  switch (action.type) {\n    case ACTIONS.RESET_FEES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.LOAD_FEE_RATES: {\n      const feeRates = action.data;\n      return {\n        ...state,\n        feeRates\n      };\n    }\n    case ACTIONS.SET_SOURCE: {\n      const source = action.data;\n      return {\n        ...state,\n        feeRates: INITIAL_STATE[\"feeRates\"],\n        source\n      };\n    }\n    case ACTIONS.SET_RATE: {\n      const rate = action.data;\n      return {\n        ...state,\n        rate\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fees;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport * as Utils from \"../utils\";\nimport * as Schema from \"../schema\";\nimport {\n  ACTIONS,\n  postDeleted,\n  postReceived,\n  contentItemReceived,\n  sharedPostDeleted,\n  sharedPostReceived,\n  postTipReceived\n} from \"../actions/FeedActions\";\nimport { ACTIONS as AUTH_ACTIONS } from \"../actions/AuthActions\";\n\nconst INITIAL_STATE = {\n  follows: [\n    {\n      user:\n        \"tcUUzRkyzXYhIZQbmopiCLREyZ_kQJqQ-C4XesecOm4.GX1Dv-eGcfKuOPobBK9Q-Sc-o697XgVCQzOCfqfimIo\",\n      status: \"ok\",\n      private: false\n    }\n  ] as Common.Follow[],\n  /**\n   * Maps public key to posts/shared posts.\n   */\n  posts: {} as Record<string, Schema.Post[]>,\n  sharedPosts: {} as Record<string, Record<string, Common.SharedPost>>,\n  reloadDone: false\n};\n\nconst feed = (state = INITIAL_STATE, action: any): typeof INITIAL_STATE => {\n  if (postDeleted.match(action)) {\n    const {\n      payload: { author, id }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx > -1) {\n        draft.posts[author].splice(idx, 1);\n      }\n    });\n  }\n  if (postReceived.match(action)) {\n    const {\n      payload: { author, id, post }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        draft.posts[author] = [];\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === id);\n\n      if (idx === -1) {\n        const newPost: Schema.Post = {\n          authorId: author,\n          contentItems: {},\n          date: post.date,\n          id,\n          status: post.status,\n          tags: post.tags,\n          title: post.title,\n          tips: {},\n          type: \"post\"\n        };\n        draft.posts[author].push(newPost);\n      }\n    });\n  }\n  if (contentItemReceived.match(action)) {\n    const {\n      payload: { author, contentItem, id, postID }\n    } = action;\n    return produce(state, draft => {\n      if (!draft.posts[author]) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state (no author found), post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      const idx = draft.posts[author].findIndex(p => p.id === postID);\n      if (idx === -1) {\n        Utils.logger.error(\n          `Error inside feed reducer, received a content item but post is not in existing state, post id ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n        return;\n      }\n      (draft.posts[author][idx] as Schema.Post).contentItems[id] = contentItem;\n    });\n  }\n  if (sharedPostDeleted.match(action)) {\n    const { postID, sharerPublicKey } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      if (draft.sharedPosts[sharerPublicKey][postID]) {\n        delete draft.sharedPosts[sharerPublicKey][postID];\n      }\n    });\n  }\n  if (sharedPostReceived.match(action)) {\n    const {\n      originalAuthor,\n      postID,\n      shareDate,\n      sharerPublicKey\n    } = action.payload;\n\n    return produce(state, draft => {\n      if (!draft.sharedPosts[sharerPublicKey]) {\n        draft.sharedPosts[sharerPublicKey] = {};\n      }\n      draft.sharedPosts[sharerPublicKey][postID] = {\n        originalAuthor,\n        originalPostID: postID,\n        shareDate,\n        shareID: sharerPublicKey + postID,\n        sharedBy: sharerPublicKey\n      };\n    });\n  }\n\n  if (postTipReceived.match(action)) {\n    const { author, postID, tipAmt, tipID } = action.payload;\n\n    return produce(state, draft => {\n      const post = draft.posts[author].find(p => p.id === postID);\n      if (!post) {\n        Utils.logger.error(\n          `Got tip for non existent post ${postID} from author ...${author.slice(\n            -8\n          )}`\n        );\n      }\n      if (!post.tips) {\n        // cached data from previous app version won't have the tips object\n        post.tips = {};\n      }\n      if (!post.tips[tipID]) {\n        post.tips[tipID] = tipAmt;\n      }\n    });\n  }\n\n  switch (action.type) {\n    case ACTIONS.ADD_FOLLOW: {\n      const { data } = action;\n      const existingFollow = state.follows.find(\n        follow => data.user === follow.user\n      );\n\n      if (existingFollow) {\n        return {\n          ...state,\n          follows: state.follows.map(follow =>\n            follow.user === data.user ? data : follow\n          )\n        };\n      }\n\n      return {\n        ...state,\n        follows: [...state.follows, data]\n      };\n    }\n    case ACTIONS.REMOVE_FOLLOW: {\n      const { data } = action;\n      return {\n        ...state,\n        follows: state.follows.filter(follow => follow.user !== data)\n      };\n    }\n    case ACTIONS.UPDATE_FOLLOW: {\n      const { data } = action;\n\n      const follows = state.follows.map(follow => {\n        if (follow.user === data.key) {\n          return {\n            ...follow,\n            profile: data\n          };\n        }\n\n        return follow;\n      });\n\n      return {\n        ...state,\n        follows\n      };\n    }\n    case ACTIONS.RELOAD_FEED: {\n      return { ...state, reloadDone: true };\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      return INITIAL_STATE;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default feed;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ACTIONS } from \"../actions/EncryptionActions\";\n\nconst INITIAL_STATE = {\n  deviceId: uuidv4(),\n  userKeys: {},\n  hostKeys: {}\n};\n\nconst encryption = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DEVICE_ID: {\n      const deviceId = action.data;\n      return {\n        ...state,\n        deviceId\n      };\n    }\n    case ACTIONS.ADD_USER_KEY_PAIR: {\n      const { hostId, keyPair } = action.data;\n      return { ...state, userKeys: { ...state.userKeys, [hostId]: keyPair } };\n    }\n    case ACTIONS.ADD_HOST_KEY: {\n      const { hostId, publicKey } = action.data;\n      return { ...state, hostKeys: { ...state.hostKeys, [hostId]: publicKey } };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encryption;\n","import * as Common from \"shock-common\";\nimport produce from \"immer\";\n\nimport { ACTIONS, updatedUserProfile } from \"../actions/UserProfilesActions\";\nimport { ACTIONS as NODE_ACTIONS } from \"../actions/NodeActions\";\nimport { ACTIONS as CHAT_ACTIONS } from \"../actions/ChatActions\";\nimport { sharedPostReceived } from \"../actions/FeedActions\";\n/**\n * @typedef {import('../actions/ChatActions').LoadChatDataAction} LoadChatDataAction\n * @typedef {import(\"../actions/ChatActions\").LoadSentRequestsAction} LoadSentRequestsAction\n * @typedef {import('../actions/ChatActions').LoadReceivedRequestsAction} LoadReceivedRequestsAction\n * @typedef {import('../actions/ChatActions').SentRequestAction} SentRequestAction\n */\n\n/**\n * @typedef {Record<string, Common.User>} UserProfilesState\n */\n\n/**\n * @type {UserProfilesState}\n */\nconst INITIAL_STATE = {};\n\n/**\n * @param {UserProfilesState} state\n * @param {import('redux').AnyAction} action\n * @returns {UserProfilesState}\n */\nconst userProfiles = (state = INITIAL_STATE, action) => {\n  if (sharedPostReceived.match(action)) {\n    const { originalAuthor } = action.payload;\n    return produce(state, draft => {\n      if (!draft[originalAuthor]) {\n        draft[originalAuthor] = Common.createEmptyUser(originalAuthor);\n      }\n    });\n  }\n  if (updatedUserProfile.match(action)) {\n    return produce(state, draft => {\n      const { profile, publicKey } = action.payload;\n\n      if (!draft[publicKey]) {\n        draft[publicKey] = Common.createEmptyUser(publicKey);\n      }\n\n      Object.assign(draft[publicKey], profile);\n    });\n  }\n\n  switch (action.type) {\n    case NODE_ACTIONS.SET_AUTHENTICATED_USER: {\n      const { publicKey } = action.data;\n      return {\n        ...state,\n        [publicKey]: {\n          ...Common.createEmptyUser(publicKey),\n          ...state[publicKey]\n        }\n      };\n    }\n    case ACTIONS.RESET_USER_PROFILES: {\n      return INITIAL_STATE;\n    }\n    case ACTIONS.REMOVE_USER_PROFILE: {\n      const { publicKey } = action.data;\n      // Deletes the user profile property without mutating the state object\n      const { [publicKey]: deletedProfile, ...profiles } = state;\n\n      return profiles;\n    }\n    case CHAT_ACTIONS.LOAD_CHAT_DATA: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadChatDataAction} */ (action);\n\n        data.contacts.forEach(({ pk }) => {\n          if (!draft[pk]) {\n            draft[pk] = Common.createEmptyUser(pk);\n          }\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_RECEIVED_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadReceivedRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.LOAD_SENT_REQUESTS: {\n      return produce(state, draft => {\n        const { data } = /** @type {LoadSentRequestsAction} */ (action);\n\n        data.forEach(req => {\n          draft[req.pk] = {\n            ...Common.createEmptyUser(req.pk),\n            ...draft[req.pk]\n          };\n        });\n      });\n    }\n    case CHAT_ACTIONS.SENT_REQUEST: {\n      return produce(state, draft => {\n        const { data: pk } = /** @type {SentRequestAction} */ (action);\n\n        if (!draft[pk]) {\n          draft[pk] = Common.createEmptyUser(pk);\n        }\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userProfiles;\n","import { ACTIONS } from \"../actions/OrdersActions\";\n\nconst INITIAL_STATE = {\n  myServices: {},\n  services: {},\n  boughtServices: {}\n};\n\nconst orders = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_MY_SERVICE: {\n      const { id, serviceInfo } = action.data;\n      const tmp = { ...state.myServices };\n      tmp[id] = serviceInfo;\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.REMOVE_MY_SERVICE: {\n      const id = action.data;\n      const tmp = { ...state.myServices };\n      delete tmp[id];\n      return { ...state, myServices: tmp };\n    }\n    case ACTIONS.ADD_BOUGHT_SERVICE: {\n      const { orderAck, owner, serviceID } = action.data;\n      const servicesTmp = { ...state.boughtServices };\n\n      if (!servicesTmp[owner]) {\n        servicesTmp[owner] = {};\n      }\n      const selectedService = servicesTmp[owner];\n      if (!selectedService[serviceID]) {\n        selectedService[serviceID] = [];\n      }\n      selectedService[serviceID].push(orderAck);\n      return { ...state, boughtServices: servicesTmp };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","/**\n * @format\n */\nimport { ACTIONS } from \"../actions/AppActions\";\n\nconst INITIAL_STATE = {\n  dialogText: '',\n  dialogHasCallback:false\n};\nconst app = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTIONS.OPEN_DIALOG: {\n      const {text,hasCallback} = action.data\n      return { ...state, dialogText: text,dialogHasCallback:hasCallback };\n    }\n    case ACTIONS.CLOSE_DIALOG: {\n      return {...state, dialogText: '',dialogHasCallback: false}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","import produce from \"immer\";\n\nimport { CoordinateWithHash } from \"../schema\";\n\nimport {\n  coordinateDeleted,\n  coordinateReceived\n} from \"../actions/CoordinateActions\";\n\nconst INITIAL_STATE = {} as Record<string, CoordinateWithHash>;\n\nconst coordinates = produce((draft, action) => {\n  if (coordinateDeleted.match(action)) {\n    const { coordinateSHA256 } = action.payload;\n    delete draft[coordinateSHA256];\n  }\n  if (coordinateReceived.match(action)) {\n    const { coordinate, coordinateSHA256 } = action.payload;\n    draft[coordinateSHA256] = { ...coordinate, coordinateSHA256 };\n  }\n}, INITIAL_STATE);\n\nexport default coordinates;\n","import produce from \"immer\";\n\nimport * as Utils from \"../utils\";\nimport { set } from \"../actions/SettingsActions\";\n\nconst INITIAL_STATE: Record<string, string | number | boolean> = {};\n\nconst settings = produce((draft, action) => {\n  try {\n    if (set.match(action)) {\n      const { key, value } = action.payload;\n      draft[key] = value;\n    }\n  } catch (e) {\n    Utils.logger.error(`Error inside settings reducer:`);\n    Utils.logger.error(e);\n  }\n}, INITIAL_STATE);\n\nexport default settings;\n","import { combineReducers } from \"redux\";\nimport * as Common from \"shock-common\";\n\nimport NodeReducer from \"./NodeReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport WalletReducer from \"./WalletReducer\";\nimport ChatReducer from \"./ChatReducer\";\nimport DrawerReducer from \"./DrawerReducer\";\nimport ContentReducer from \"./ContentReducer\";\nimport FeesReducer from \"./FeesReducer\";\nimport FeedReducer from \"./FeedReducer\";\nimport EncryptionReducer from \"./EncryptionReducer\";\nimport UserProfilesReducer from \"./UserProfilesReducer\";\nimport OrdersReducer from \"./OrdersReducer\";\nimport AppReducer from \"./AppReducer\";\nimport CoordinatesReducer from \"./CoordinatesReducer\";\nimport settings from \"./settings\";\n\nconst reducers = combineReducers({\n  node: NodeReducer,\n  auth: AuthReducer,\n  encryption: EncryptionReducer,\n  wallet: WalletReducer,\n  chat: ChatReducer,\n  drawer: DrawerReducer,\n  content: ContentReducer,\n  fees: FeesReducer,\n  feed: FeedReducer,\n  userProfiles: UserProfilesReducer,\n  orders: OrdersReducer,\n  app: AppReducer,\n  coordinates: CoordinatesReducer,\n  settings,\n  users: () => {\n    return {} as Record<string, Common.User>;\n  }\n});\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default reducers;\n","import PeerMigration from \"./PeerMigration\";\n\nconst Migrations = {\n  1: PeerMigration\n};\n\nexport default Migrations;\n","const PeerMigration = state => {\n  console.log(\"--- PeerMigration Started ---\");\n  const newState = {\n    ...state,\n    wallet: {\n      ...state.wallet,\n      peers: []\n    }\n  };\n  console.log(\"--- PeerMigration Ended ---\", newState);\n  return newState;\n};\n\nexport default PeerMigration;\n","import { State } from \"../../reducers\";\n\nexport const selectSelfPublicKey = (state: State): string =>\n  state.node.publicKey;\n\nexport const isAuth = (state: State): boolean => !!state.node.publicKey;\n\nexport const selectHost = (state: State): string => state.node.hostIP;\n","import { Schema } from \"shock-common\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectSelfUser = (state: State) => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  const maybeUser = state.userProfiles[selfPublicKey];\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    console.error(\"No self user created at auth?\");\n    return Schema.createEmptyUser(selfPublicKey);\n  }\n};\n\nexport const selectUser = (publicKey: string) => (\n  state: State\n): Schema.User => {\n  const maybeUser = state.userProfiles[publicKey];\n\n  if (maybeUser) {\n    return maybeUser;\n  } else {\n    return Schema.createEmptyUser(publicKey);\n  }\n};\n\nexport const selectAllPublicKeys = (state: State): string[] => {\n  return Object.keys(state.userProfiles);\n};\n\nexport const selectAllOtherPublicKeys = (state: State): string[] => {\n  const selfPublicKey = selectSelfPublicKey(state);\n  return selectAllPublicKeys(state).filter(key => key !== selfPublicKey);\n};\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\n\nexport const selectFollows = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.follows,\n  (selfPublicKey, follows) => {\n    return follows.filter(f => f.user !== selfPublicKey);\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../../reducers\";\n\nimport { PublishedContent } from \"../../schema\";\n\nexport const selectOwnPublishedContent = createSelector(\n  (state: State) => state.content.publishedContent,\n  (state: State) => state.content.publicContent,\n  (privateContent, publicContent): Record<string, PublishedContent> => {\n    return {\n      ...privateContent,\n      ...publicContent\n    };\n  }\n);\n","import * as Common from \"shock-common\";\nimport pick from \"lodash/pick\";\nimport pickBy from \"lodash/pickBy\";\nimport { createSelector } from \"reselect\";\n\nimport * as Schema from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nimport { selectSelfPublicKey } from \"./auth\";\nimport { selectFollows } from \"./follows\";\n\nexport const selectFeedPosts = createSelector(\n  selectSelfPublicKey,\n  (state: State) => state.feed.posts,\n  (selfPublicKey, posts) => {\n    // TODO: fix self-follow bug\n    return pickBy(posts, (_, publicKey) => publicKey !== selfPublicKey);\n  }\n);\n\nexport const selectAllPosts = (state: State) => state.feed.posts;\n\nexport const selectAllSharedPosts = (state: State) => state.feed.sharedPosts;\n\nexport const selectSinglePost = (authorId: string, postID: string) => (\n  state: State\n): Schema.Post | null => {\n  return state.feed.posts[authorId]?.find(post => post.id === postID) || null;\n};\n\nexport const selectPostsNewestToOldest = (publicKey: string) => (\n  state: State\n): Array<Schema.Post | Common.SharedPost> => {\n  const posts = state.feed.posts[publicKey]?.slice() || [];\n  const sharedPostsMap = state.feed.sharedPosts[publicKey] || {};\n  const sharedPosts = Object.values(sharedPostsMap);\n  const allPosts = [...posts, ...sharedPosts];\n\n  allPosts.sort((a, b) => {\n    const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n    const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n    return beta - alpha;\n  });\n\n  return allPosts;\n};\n\nexport const selectSharedPost = (sharer: string, postID: string) => (\n  state: State\n): Common.SharedPost | null => {\n  const sharedPostsMap = state.feed.sharedPosts[sharer] || {};\n  return sharedPostsMap[postID] || null;\n};\n\nexport const selectAllPostsFromFollowedNewestToOldest = createSelector(\n  selectAllPosts,\n  selectAllSharedPosts,\n  selectFollows,\n  (posts, sharedPosts, follows): Array<Schema.Post | Common.SharedPost> => {\n    const followedPublicKeys = follows.map(f => f.user);\n    const filteredPosts = pick(posts, followedPublicKeys);\n    const filteredShared = pick(sharedPosts, followedPublicKeys);\n\n    const allNonShared = Object.values(filteredPosts).flat();\n    const allShared = Object.values(filteredShared)\n      .map(records => Object.values(records))\n      .flat();\n\n    const all = [...allNonShared, ...allShared].sort((a, b) => {\n      const alpha = Common.isSharedPost(a) ? a.shareDate : a.date;\n      const beta = Common.isSharedPost(b) ? b.shareDate : b.date;\n\n      return beta - alpha;\n    });\n\n    return all;\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { CoordinateWithHash } from \"../../schema\";\nimport { State } from \"../../reducers\";\n\nexport const selectAllCoordinates = createSelector(\n  (state: State) => state.coordinates,\n  (coordinates): CoordinateWithHash[] => {\n    return Object.values(coordinates);\n  }\n);\n\nexport const selectAllCoordinatesNewestToOldest = createSelector(\n  selectAllCoordinates,\n  (coords): CoordinateWithHash[] => {\n    return coords.slice().sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  }\n);\n\nexport const selectSingleCoordinate = (coordinateSHA256: string) => (\n  state: State\n) => state.coordinates[coordinateSHA256];\n","import {\n  useSelector as originalUseSelector,\n  TypedUseSelectorHook\n} from \"react-redux\";\n\nimport { State } from \"../../reducers\";\n\nexport const useSelector: TypedUseSelectorHook<State> = (selector, eqFn) =>\n  originalUseSelector(selector, eqFn);\n\nexport const selectRoot = (state: State) => state;\n\nexport const selectIsInContact = (publicKey: string) => (\n  state: State\n): boolean => {\n  const {\n    chat: { contacts, sentRequests, receivedRequests }\n  } = state;\n\n  const isContact = !!contacts.find(c => c.pk === publicKey);\n  const hasSentReq = !!sentRequests.find(r => r.pk === publicKey);\n  const hasReceivedReq = !!receivedRequests.find(r => r.pk === publicKey);\n\n  return isContact || hasSentReq || hasReceivedReq;\n};\n\nexport * from \"./auth\";\nexport * from \"./users\";\nexport * from \"./follows\";\nexport * from \"./publishedContent\";\nexport * from \"./feed\";\nexport * from \"./coordinates\";\n","import {\n  createStore,\n  applyMiddleware,\n  compose,\n  AnyAction,\n  Action\n} from \"redux\";\nimport thunk, { ThunkDispatch } from \"redux-thunk\";\nimport rootReducer, { State } from \"../reducers\";\nimport {\n  useSelector as origUseSelector,\n  useDispatch as originalUseDispatch\n} from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport Migrations from \"./Migrations\";\nimport createMigrate from \"redux-persist/es/createMigrate\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"],\n  version: 1,\n  stateReconciler: autoMergeLevel2,\n  migrate: createMigrate(Migrations, {\n    debug: process.env.NODE_ENV === \"development\"\n  })\n};\n\nconst persistedReducer = persistReducer<State, AnyAction>(\n  persistConfig,\n  rootReducer\n);\n\nconst initializeStore = () => {\n  const appliedMiddleware = applyMiddleware(thunk);\n  // @ts-expect-error\n  const store = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? createStore(\n        persistedReducer,\n        // @ts-expect-error\n        compose(appliedMiddleware, window.__REDUX_DEVTOOLS_EXTENSION__())\n      )\n    : createStore(persistedReducer, appliedMiddleware);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nconst initializedStore = initializeStore();\n\nexport const store = initializedStore.store;\n\nexport const persistor = initializedStore.persistor;\n\n/**\n * React-redux 's useSelector with our state type pre-specified.\n */\nexport const useSelector = <TSelected = unknown>(\n  selector: (state: State) => TSelected\n): TSelected => origUseSelector<State, TSelected>(selector);\n\nexport const useDispatch = (): ThunkDispatch<State, undefined, Action> => {\n  return originalUseDispatch() as ThunkDispatch<State, undefined, Action>;\n};\n\nexport * from \"./selectors\";\n","// @ts-check\nexport const ACTIONS = {\n  RESET_AUTH_INFO: \"auth/reset\",\n  SET_AUTH_STEP: \"auth/step/set\",\n  SET_AUTHENTICATED: \"auth/authenticated/set\",\n  SET_AUTH_METHOD: \"auth/method/set\",\n  LOGOUT: \"auth/logout\",\n  SET_RELAY_ID: \"auth/relay/set\"\n\n};\n\nexport const setAuthenticated = status => ({\n  type: ACTIONS.SET_AUTHENTICATED,\n  data: status\n});\n\nexport const setAuthStep = step => ({\n  type: ACTIONS.SET_AUTH_STEP,\n  data: step\n});\n\nexport const setAuthMethod = method => ({\n  type: ACTIONS.SET_AUTH_METHOD,\n  data: method\n});\n\nexport const logout = () => ({\n  type: ACTIONS.LOGOUT\n});\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const set = createAction<{\n  key: string;\n  value: string | number | boolean;\n}>(\"settings/set\");\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\nimport {\n  PublishedContent,\n  isPublishedContent,\n  PublicContentItem,\n  isPublicContentItem\n} from \"../schema\";\nimport { parseJson, logger } from \"../utils\";\nimport { openDialog } from \"./AppActions\";\n\nexport const ACTIONS = {\n  SET_SEED_PROVIDER_PUB: \"content/setSeedProviderPub\",\n  SET_SEED_INFO: \"content/setSeedInfo\",\n\n  PUBLISHED_CONTENT_ADDED: \"content/publishedContentAdded\",\n  PUBLISHED_CONTENT_REMOVED: \"content/publishedContentRemoved\",\n\n  ADD_UNLOCKED_CONTENT: \"content/addUnlocked\",\n  ADD_STREAM: \"content/addStream\",\n  REMOVE_STREAM: \"content/removeStream\",\n  ADD_AVAILABLE_TOKEN: \"content/addToken\",\n  REMOVE_USED_TOKEN: \"content/removeToken\",\n  ADD_STREAM_TOKEN: \"content/addStreamToken\",\n  REMOVE_STREAM_TOKEN: \"content/removeStreamToken\"\n} as const;\n\nexport const setSeedProviderPub = (\n  pub,\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    let value: string | Record<string, any> = {\n      $$__ENCRYPT__FOR: \"me\",\n      value: pub\n    };\n    if (!pub) {\n      value = \"\";\n    }\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>seedServiceProviderPubKey\",\n      value\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_PROVIDER_PUB,\n    data: pub\n  });\n};\nexport const setSeedInfo = (\n  seedUrl: string,\n  seedToken: string,\n  dontBackup = false\n) => async dispatch => {\n  const cleanUrl = seedUrl.endsWith(\"/\") ? seedUrl.slice(0, -1) : seedUrl;\n  if (!dontBackup) {\n    const infoS = JSON.stringify({ seedUrl: cleanUrl, seedToken });\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>seedServiceSeedData\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: infoS\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.SET_SEED_INFO,\n    data: { seedUrl: cleanUrl, seedToken }\n  });\n};\n\nexport const publishedContentAdded = createAction<{\n  content: PublishedContent;\n  res: { ok: boolean; id: string };\n}>(ACTIONS.PUBLISHED_CONTENT_ADDED);\n\nexport const publicContentAdded = createAction<{\n  item: PublicContentItem;\n}>(\"content/publicContentAdded\");\n\nexport const addPublishedContent = (\n  content: PublishedContent | PublicContentItem,\n  type: \"public\" | \"private\"\n) => async dispatch => {\n  if (type === \"public\") {\n    if (!isPublicContentItem(content)) {\n      throw new TypeError(\n        `Expected content to upload to be a PublicContentItem`\n      );\n    }\n\n    await Http.post(\"/api/gun/put\", {\n      path: `$user>publishedContentPublic>${content.id}`,\n      value: content\n    });\n\n    dispatch(\n      publicContentAdded({\n        item: content\n      })\n    );\n\n    return content;\n  } else {\n    const { data } = await Http.post<{ ok: boolean; id: string }>(\n      \"/api/gun/set\",\n      {\n        path: \"$user>publishedContent\",\n        value: {\n          $$__ENCRYPT__FOR: \"me\",\n          value: JSON.stringify(content)\n        }\n      }\n    );\n    dispatch(\n      publishedContentAdded({\n        content,\n        res: data\n      })\n    );\n    return data;\n  }\n};\n\nexport const publishedContentRemoved = createAction<{ id: string }>(\n  ACTIONS.PUBLISHED_CONTENT_REMOVED\n);\n\nexport const unlockContent = (amt, owner, postID) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"contentReveal\",\n    amt,\n    to: owner,\n    memo: \"\",\n    feeLimit: 500,\n    ackInfo: postID\n  });\n  const revealRes = data.orderAck.response;\n  if (revealRes && revealRes.unlockedContents) {\n    for (const contentID in revealRes.unlockedContents) {\n      if (Object.hasOwnProperty.call(revealRes.unlockedContents, contentID)) {\n        const content = revealRes.unlockedContents[contentID];\n        dispatch({\n          type: ACTIONS.ADD_UNLOCKED_CONTENT,\n          data: { contentPath: `${owner}>posts>${postID}`, content }\n        });\n      }\n    }\n  }\n};\nexport const addStream = (\n  {\n    seedToken,\n    liveToken,\n    streamUrl,\n    streamPostId,\n    streamContentId,\n    streamStatusUrl,\n    streamBroadcasterUrl,\n    tipOverlayUrl,\n  },\n  dontBackup = false\n) => async dispatch => {\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: JSON.stringify({\n          seedToken,\n          liveToken,\n          streamUrl,\n          streamPostId,\n          streamContentId,\n          streamStatusUrl,\n          streamBroadcasterUrl,\n          tipOverlayUrl\n        })\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.ADD_STREAM,\n    data: {\n      seedToken,\n      liveToken,\n      streamUrl,\n      streamPostId,\n      streamContentId,\n      streamStatusUrl,\n      streamBroadcasterUrl,\n      tipOverlayUrl\n    }\n  });\n};\nexport const removeStream = (\n  dontBackup = false,\n  noDialog = false\n) => async dispatch => {\n  if (!noDialog) {\n    openDialog({\n      text: \"The recording of the stream will be published in a few moments.\"\n    })(dispatch);\n  }\n  if (!dontBackup) {\n    await Http.post(\"/api/gun/put\", {\n      path: \"$user>currentStreamInfo\",\n      value: {\n        $$__ENCRYPT__FOR: \"me\",\n        value: \"NO DATA\"\n      }\n    });\n  }\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM\n  });\n};\nexport const addAvailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_AVAILABLE_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeUnavailableToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_USED_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const addStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\nexport const removeStreamToken = (seedUrl, userToken) => dispatch => {\n  dispatch({\n    type: ACTIONS.REMOVE_STREAM_TOKEN,\n    data: { seedUrl, userToken }\n  });\n};\n\nconst OWN_PUBLISHED_CONTENT_QUERY = \"$user::publishedContent::map.on\";\n\nexport const subOwnPublishedContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  console.debug(`Subscribing to own published content`);\n  const subscription = await rifle({\n    query: OWN_PUBLISHED_CONTENT_QUERY,\n    reconnect: true,\n    publicKey: \"me\",\n    onData: async (content: string, key) => {\n      try {\n        console.debug(`Received own content:`);\n        console.debug(content);\n\n        if (typeof key !== \"string\") {\n          throw new TypeError(`Invalid content key received: ${key}`);\n        }\n\n        if (!content) {\n          dispatch(\n            publishedContentRemoved({\n              id: key\n            })\n          );\n          return;\n        }\n\n        if (typeof content !== \"string\") {\n          throw new TypeError(\n            `Invalid content (in key ${key}) received (${JSON.stringify(\n              content\n            )})`\n          );\n        }\n\n        const parsed = parseJson(content);\n\n        if (!isPublishedContent(parsed)) {\n          throw new TypeError(\n            `Invalid content received (might be incomplete replication): ${JSON.stringify(\n              parsed,\n              null,\n              2\n            )}`\n          );\n        }\n\n        dispatch(\n          publishedContentAdded({\n            content: parsed,\n            res: {\n              id: key,\n              ok: true\n            }\n          })\n        );\n      } catch (e) {\n        console.error(`Error inside own published content sub:`);\n        console.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n\nexport const unsubOwnPublishedContent = () => () => {\n  console.debug(`Unsubbing own published content.`);\n  unsubscribeRifleByQuery(OWN_PUBLISHED_CONTENT_QUERY);\n};\n\nexport const subOwnPublicContent = () => async (\n  dispatch: (action: any) => void\n) => {\n  logger.debug(`Subscribing to own public content`);\n  const subscription = await rifle({\n    query: \"$user::publishedContentPublic::map.on\",\n    reconnect: true,\n    onError(e) {\n      alert(`Error inside own public content rifle: ${JSON.stringify(e)}`);\n      logger.error(`Error inside own public content rifle: `, e);\n    },\n    onData: async (item: unknown) => {\n      try {\n        if (item === null) {\n          return; // was deleted\n        }\n        logger.debug(`Received own public item:`);\n        logger.debug(item);\n\n        if (!isPublicContentItem(item)) {\n          throw new TypeError(\n            `Invalid public content item: ${JSON.stringify(item, null, 2)}`\n          );\n        }\n\n        dispatch(\n          publicContentAdded({\n            item\n          })\n        );\n      } catch (e) {\n        logger.error(`Error inside own public content sub:`);\n        logger.error(e);\n      }\n    }\n  });\n\n  return subscription;\n};\n","// @ts-check\nimport Http from \"../utils/Http\";\nimport { DateTime } from \"luxon\";\nimport { v4 as uuidv4 } from \"uuid\";\n/**\n * @typedef {import('shock-common').Message} RawMessage\n */\n\nimport {\n  getChats,\n  getReceivedRequests,\n  getSentRequests,\n  rifle,\n  subscribeSocket\n} from \"../utils/WebSocket\";\nimport { initialMessagePrefix } from \"../utils/String\";\nimport * as Schema from \"../schema\";\nimport * as Utils from \"../utils\";\n/**\n * @typedef {import('../schema').Contact} Contact\n * @typedef {import('../schema').SentRequest} SentRequest\n * @typedef {import(\"../schema\").ReceivedRequest} ReceivedRequest\n * @typedef {import('../schema').ChatMessage} ChatMessage\n */\n\nexport const ACTIONS = {\n  LOAD_CHAT_DATA: /** @type {\"chat/loadData\"} */ (\"chat/loadData\"),\n  LOAD_SENT_REQUESTS: /** @type {\"chat/loadSentRequests\"} */ (\"chat/loadSentRequests\"),\n  LOAD_RECEIVED_REQUESTS: /** @type {\"chat/loadReceivedRequests\"} */ (\"chat/loadReceivedRequests\"),\n  SET_CHAT_CONTACTS: \"chat/contacts\",\n  SET_CHAT_MESSAGES: \"chat/messages\",\n  SENT_REQUEST: /** @type {\"chat/request/sent\"} */ (\"chat/request/sent\"),\n  ACCEPT_HANDSHAKE_REQUEST: \"chat/request/accept\",\n  DECLINE_HANDSHAKE_REQUEST: \"chat/request/decline\",\n  SENDING_MESSAGE: \"chat/message/sending\",\n  SENT_MESSAGE: \"chat/message/sent\",\n  FAILED_MESSAGE: \"chat/message/failed\",\n  RECEIVED_MESSAGE: /** @type {\"chat/message/received\"} */ (\"chat/message/received\"),\n  CHAT_WAS_DELETED: /** @type {'chat/deleted'} */ (\"chat/deleted\")\n};\n\n/**\n * @typedef {object} SentRequestAction\n * @prop {typeof ACTIONS.SENT_REQUEST} type\n * @prop {string} data The public key.\n */\n\n/**\n * @typedef {object} LoadChatDataAction\n * @prop {typeof ACTIONS.LOAD_CHAT_DATA} type\n * @prop {{ messages: Record<string, ChatMessage[]> , contacts: Contact[] }} data\n */\n\n/**\n * @typedef {object} LoadSentRequestsAction\n * @prop {typeof ACTIONS.LOAD_SENT_REQUESTS} type\n * @prop {SentRequest[]} data\n */\n\n/**\n * @typedef {object} LoadReceivedRequestsAction\n * @prop {typeof ACTIONS.LOAD_RECEIVED_REQUESTS} type\n * @prop {ReceivedRequest[]} data\n */\n\n/**\n * @typedef {object} ReceivedMessageAction\n * @prop {typeof ACTIONS.RECEIVED_MESSAGE} type\n * @prop {ChatMessage} data\n */\n\nexport const loadChatData = () => async dispatch => {\n  const data = await getChats();\n  console.log(\"LOAD_CHAT_DATA:\", data);\n\n  dispatch({\n    type: ACTIONS.LOAD_CHAT_DATA,\n    data\n  });\n};\n\nexport const loadSentRequests = () => async dispatch => {\n  const sentRequests = await getSentRequests();\n\n  /** @type {LoadSentRequestsAction} */\n  const action = {\n    type: ACTIONS.LOAD_SENT_REQUESTS,\n    data: sentRequests.map(request => {\n      /** @type {SentRequest} */\n      const req = {\n        id: request.id,\n        pk: request.recipientPublicKey,\n        avatar: request.recipientAvatar,\n        displayName: request.recipientDisplayName,\n        changedAddress: request.recipientChangedRequestAddress,\n        timestamp: request.timestamp,\n        loading: false\n      };\n\n      return req;\n    })\n  };\n\n  dispatch(action);\n};\n\nexport const loadReceivedRequests = () => async (dispatch, getState) => {\n  const receivedRequests = await getReceivedRequests();\n\n  /** @type {LoadReceivedRequestsAction} */\n  const action = {\n    type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n    data: receivedRequests.map(request => {\n      /** @type {ReceivedRequest} */\n      const req = {\n        id: request.id,\n        pk: request.requestorPK,\n        avatar: request.requestorAvatar,\n        displayName: request.requestorDisplayName,\n        timestamp: request.timestamp\n      };\n\n      return req;\n    })\n  };\n\n  dispatch(action);\n};\n\n/**\n * @param {string} userPublicKey\n * @param {string} recipientPublicKey\n * @returns {(dispatch: (action: any) => void) => Promise<{off(): void}>}\n */\nexport const subscribeChatMessages = (\n  userPublicKey,\n  recipientPublicKey\n) => async dispatch => {\n  try {\n    const { data: incomingId } = await Http.get(\n      `/api/gun/user/once/userToIncoming>${recipientPublicKey}`,\n      {\n        headers: {\n          \"public-key-for-decryption\": userPublicKey\n        }\n      }\n    );\n\n    if (!incomingId.data) {\n      throw new Error(`Unable to retrieve incoming ID for selected contact.`);\n    }\n\n    const incomingMessages = await rifle({\n      query: `${recipientPublicKey}::outgoings>${incomingId.data}>messages::map.on`,\n      publicKey: recipientPublicKey,\n      onData: (message, id) => {\n        if (!message.body || message.body === initialMessagePrefix) {\n          return;\n        }\n        /** @type {RawMessage} */\n        const rawMsg = message;\n\n        /** @type {ChatMessage} */\n        const msg = {\n          body: rawMsg.body,\n          id,\n          localId: id,\n          outgoing: false,\n          recipientPublicKey,\n          status: Schema.CHAT_MESSAGE_STATUS.SENT,\n          timestamp: rawMsg.timestamp\n        };\n\n        /** @type {ReceivedMessageAction} */\n        const action = {\n          type: ACTIONS.RECEIVED_MESSAGE,\n          data: msg\n        };\n\n        dispatch(action);\n      }\n    });\n\n    return incomingMessages;\n  } catch (e) {\n    Utils.logger.error(\n      `Error inside subscribeChatMessages, recipient public key: ${recipientPublicKey}: `,\n      e\n    );\n    return Promise.resolve({\n      off() {}\n    });\n  }\n};\n\nexport const acceptHandshakeRequest = requestId => async dispatch => {\n  const { data } = await Http.put(`/api/gun/requests/${requestId}`, {\n    accept: true\n  });\n\n  dispatch({\n    type: ACTIONS.ACCEPT_HANDSHAKE_REQUEST,\n    data: requestId\n  });\n\n  return data;\n};\n\nexport const sendHandshakeRequest = publicKey => async (dispatch, getState) => {\n  const { data } = await Http.post(`/api/gun/requests`, {\n    publicKey\n  });\n\n  /** @type {SentRequest[]} */\n  const sentRequests = getState().chat.sentRequests;\n  const [userExists] = sentRequests.filter(request => request.pk === publicKey);\n\n  if (!userExists) {\n    /** @type {SentRequestAction} */\n    const action = {\n      type: ACTIONS.SENT_REQUEST,\n      data: publicKey\n    };\n    dispatch(action);\n  }\n\n  return data;\n};\n\nexport const sendMessage = ({\n  publicKey,\n  message,\n  localId = null\n}) => async dispatch => {\n  const tempId = localId ?? uuidv4();\n  try {\n    dispatch({\n      type: ACTIONS.SENDING_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n    const { data } = await Http.post(`/api/gun/chats/${publicKey}`, {\n      body: message\n    });\n    console.log(data);\n    dispatch({\n      type: ACTIONS.SENT_MESSAGE,\n      data: { ...data, localId: tempId, recipientPublicKey: publicKey }\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIONS.FAILED_MESSAGE,\n      data: {\n        body: message,\n        localId: tempId,\n        timestamp: DateTime.utc().toMillis(),\n        recipientPublicKey: publicKey\n      }\n    });\n  }\n};\n\n/**\n * @param {string} publicKey\n */\nexport const chatWasDeleted = publicKey => ({\n  type: ACTIONS.CHAT_WAS_DELETED,\n  data: {\n    publicKey\n  }\n});\n\nexport const subChats = () => async dispatch => {\n  try {\n    console.debug(`Subbing to chats`);\n    const sub = await subscribeSocket({\n      callback(err, chats) {\n        if (err) {\n          console.error(`Error in chats subscription: `, err);\n        } else {\n          console.debug(`sub chat data received: `, chats);\n\n          const contacts = chats.map(chat => ({\n            pk: chat.recipientPublicKey,\n            avatar: chat.recipientAvatar,\n            displayName: chat.recipientDisplayName,\n            didDisconnect: chat.didDisconnect\n          }));\n\n          const messages = chats.reduce(\n            (messages, chat) => ({\n              ...messages,\n              [chat.recipientPublicKey]: chat.messages\n                ?.filter(\n                  message =>\n                    message.body &&\n                    message.body.trim() &&\n                    message.body !== initialMessagePrefix\n                )\n                .sort((a, b) => b.timestamp - a.timestamp)\n            }),\n            {}\n          );\n\n          dispatch({\n            type: ACTIONS.LOAD_CHAT_DATA,\n            data: { contacts, messages }\n          });\n        }\n      },\n      eventName: \"chats\"\n    });\n\n    return sub;\n  } catch (e) {\n    alert(`Could not subscribe to chats: ${e.message}`);\n    console.error(`Could not subscribe to chats: `, e);\n  }\n};\n\nexport const subReceivedRequests = () => async dispatch => {\n  try {\n    console.debug(`Subbing to received requests`);\n    const sub = await subscribeSocket({\n      callback(err, receivedRequests) {\n        if (err) {\n          console.error(`Error in received requests subscription: `, err);\n        } else {\n          console.debug(\n            `sub received requests data received: `,\n            receivedRequests\n          );\n\n          /** @type {LoadReceivedRequestsAction} */\n          const action = {\n            type: ACTIONS.LOAD_RECEIVED_REQUESTS,\n            data: receivedRequests.map(request => {\n              /** @type {ReceivedRequest} */\n              const req = {\n                id: request.id,\n                pk: request.requestorPK,\n                avatar: request.requestorAvatar,\n                displayName: request.requestorDisplayName,\n                timestamp: request.timestamp\n              };\n\n              return req;\n            })\n          };\n\n          dispatch(action);\n        }\n      },\n      eventName: \"receivedRequests\"\n    });\n\n    return sub;\n  } catch (e) {\n    alert(`Could not subscribe to received requests: ${e.message}`);\n    console.error(`Could not subscribe to received requests: `, e);\n  }\n};\n\nexport const subSentRequests = () => async dispatch => {\n  try {\n    console.debug(`Subbing to sent requests`);\n    const sub = await subscribeSocket({\n      callback(err, sentRequests) {\n        if (err) {\n          console.error(`Error in sent requests subscription: `, err);\n        } else {\n          console.debug(`sub sent requests data received: `, sentRequests);\n\n          /** @type {LoadSentRequestsAction} */\n          const action = {\n            type: ACTIONS.LOAD_SENT_REQUESTS,\n            data: sentRequests.map(request => {\n              /** @type {SentRequest} */\n              const req = {\n                id: request.id,\n                pk: request.recipientPublicKey,\n                avatar: request.recipientAvatar,\n                displayName: request.recipientDisplayName,\n                changedAddress: request.recipientChangedRequestAddress,\n                timestamp: request.timestamp,\n                loading: false\n              };\n\n              return req;\n            })\n          };\n\n          dispatch(action);\n        }\n      },\n      eventName: \"sentRequests\"\n    });\n\n    return sub;\n  } catch (e) {\n    alert(`Could not subscribe to sent requests: ${e.message}`);\n    console.error(`Could not subscribe to sent requests: `, e);\n  }\n};\n","import Http from \"axios\";\n\nexport const ACTIONS = {\n  LOAD_BALANCE: \"wallet/balance/load\",\n  LOAD_USD_RATE: \"wallet/usdRate/load\",\n  LOAD_TRANSACTIONS: \"wallet/transactions/load\",\n  LOAD_MORE_TRANSACTIONS: \"wallet/transactions/loadMore\",\n  LOAD_CHANNELS: \"wallet/channels/load\",\n  LOAD_INVOICES: \"wallet/invoices/load\",\n  LOAD_MORE_INVOICES: \"wallet/invoices/loadMore\",\n  LOAD_PAYMENTS: \"wallet/payments/load\",\n  LOAD_MORE_PAYMENTS: \"wallet/payments/loadMore\",\n  LOAD_PEERS: \"wallet/peers/load\",\n  ADD_PEER: \"wallet/peers/add\",\n  REMOVE_PEER: \"wallet/peers/remove\",\n  LOAD_RECENT_TRANSACTIONS: \"wallet/recentTransactions/load\",\n  RESET_RECENT_TRANSACTIONS: \"wallet/recentTransactions/reset\",\n  LOAD_LIGHTNING_INFO: \"wallet/lightningInfo/load\",\n};\n\nexport const fetchWalletBalance = () => async dispatch => {\n  try {\n    const { data } = await Http.get(`/api/lnd/balance`);\n\n    dispatch({\n      type: ACTIONS.LOAD_BALANCE,\n      data: {\n        channelBalance: data.channel_balance,\n        confirmedBalance: data.confirmed_balance,\n        pendingChannelBalance: data.pending_channel_balance\n      }\n    });\n  } catch (e) {\n    console.error(\n      `When trying to fetch the balance for the wallet, an error ocurred:`,\n      e\n    );\n  }\n};\n\nexport const fetchUSDRate = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\n      \"https://api.coinbase.com/v2/prices/spot?currency=USD\"\n    );\n    const exchangeRate = data.data.amount.replace(/,/g, \"\");\n\n    dispatch({\n      type: ACTIONS.LOAD_USD_RATE,\n      data: exchangeRate\n    });\n  } catch (e) {\n    console.error(`An error happened when trying to fetch the USD rate:`, e);\n  }\n};\n\nexport const fetchTransactions = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { transactions } = getState().wallet;\n\n    if (\n      (transactions.page >= page && !reset) ||\n      transactions.totalPages < page\n    ) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/transactions\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_TRANSACTIONS : ACTIONS.LOAD_MORE_TRANSACTIONS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred when fetching transactions (fetchTransactions()):`,\n      e\n    );\n  }\n};\n\nexport const fetchChannels = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listchannels\");\n\n    dispatch({\n      type: ACTIONS.LOAD_CHANNELS,\n      data: data.channels\n    });\n  } catch (e) {\n    console.error(\n      `An ocurred ocurred when fetching channels (fetchChannels()):`,\n      e\n    );\n  }\n};\n\nexport const fetchPeers = () => async dispatch => {\n  try {\n    const { data } = await Http.get(\"/api/lnd/listpeers\");\n\n    dispatch({\n      type: ACTIONS.LOAD_PEERS,\n      data: data.peers\n    });\n\n    return data;\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching peers (fetchPeers()) (will be re-thrown):`,\n      e\n    );\n    throw e;\n  }\n};\n\nexport const fetchInvoices = ({\n  page,\n  itemsPerPage = 10,\n  reset = false\n}) => async (dispatch, getState) => {\n  try {\n    const { invoices } = getState().wallet;\n\n    if ((invoices.page >= page && !reset) || invoices.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/invoices\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_INVOICES : ACTIONS.LOAD_MORE_INVOICES,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching invoices (fetchInvoices()):`,\n      e\n    );\n  }\n};\n\nconst fetchPayments = ({ page, itemsPerPage = 10, reset = false }) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    const { payments } = getState().wallet;\n\n    if ((payments.page >= page && !reset) || payments.totalPages < page) {\n      return;\n    }\n\n    const { data } = await Http.get(\"/api/lnd/payments\", {\n      params: {\n        page,\n        itemsPerPage\n      }\n    });\n\n    dispatch({\n      type: reset ? ACTIONS.LOAD_PAYMENTS : ACTIONS.LOAD_MORE_PAYMENTS,\n      data\n    });\n  } catch (e) {\n    console.error(\n      `An error ocurred while fetching payments (fetchPayments()):`,\n      e\n    );\n  }\n};\n\nexport const fetchUnifiedTransactions = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/unifiedTrx\");\n\n  dispatch({\n    type: ACTIONS.LOAD_RECENT_TRANSACTIONS,\n    data\n  });\n\n  return data;\n};\n\nexport const connectPeer = ({ publicKey, host }) => async dispatch => {\n  try {\n    await Http.post(\"/api/lnd/connectpeer\", {\n      pubkey: publicKey,\n      host: host\n    });\n\n    const newPeer = {\n      pub_key: publicKey,\n      address: host,\n      bytes_sent: 0,\n      bytes_recv: 0,\n      sat_sent: 0,\n      sat_recv: 0,\n      inbound: false\n    };\n\n    dispatch({\n      type: ACTIONS.ADD_PEER,\n      data: newPeer\n    });\n  } catch (err) {\n    console.error(\n      `An error ocurred while connecting peer --| ${host} |-- with public key --| ${publicKey} |-- in connectPeer()`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const openChannel = ({\n  publicKey = \"\",\n  channelCapacity = 0,\n  pushAmount = 0\n}) => async (dispatch, getState) => {\n  try {\n    const { feeRates, rate } = getState().fees;\n    await Http.post(\"/api/lnd/openchannel\", {\n      pubkey: publicKey,\n      channelCapacity: channelCapacity.toString(),\n      channelPushAmount: pushAmount.toString(),\n      satPerByte: feeRates[rate]\n    });\n\n    dispatch(fetchChannels());\n  } catch (err) {\n    console.error(\n      `An error ocurred while opening a channel (openChannel()) with public key --| ${publicKey} |--, channel capacity: --| ${channelCapacity} |-- and push amount: --| ${pushAmount} |--:`,\n      err\n    );\n    throw err?.response?.data ?? err;\n  }\n};\n\nexport const FetchLightningInfo = () =>async dispatch => {\n  \n  try{\n    const {data}= await Http.get(\"/api/lnd/getinfo\");\n    dispatch({\n      type:ACTIONS.LOAD_LIGHTNING_INFO,\n      data\n    })\n  }catch (err) {\n    console.error(err);\n    throw err?.response?.data ?? err;\n  }\n}\n","export const safeParseJSON = (data: string): string | object => {\n  try {\n    const parsedJSON = JSON.parse(data);\n    return parsedJSON;\n  } catch (err) {\n    return data;\n  }\n};\n","import { Buffer } from \"buffer\";\nimport ECCrypto from \"eccrypto\";\nimport FieldError from \"./FieldError\";\nimport { safeParseJSON } from \"./JSON\";\n\ninterface EncryptedMessage {\n  ciphertext: Buffer;\n  ephemPublicKey: Buffer;\n  iv: Buffer;\n  mac: Buffer;\n}\n\ninterface EncryptedMessageResponse {\n  ciphertext: string;\n  ephemPublicKey: string;\n  iv: string;\n  mac: string;\n}\n\ninterface EncryptMessageArgs {\n  publicKey: Buffer | string;\n  message: string;\n}\n\ninterface DecryptMessageArgs {\n  privateKey: Buffer | string;\n  encryptedMessage: EncryptedMessage;\n}\n\nconst nonEncryptedEvents = [\n  \"ping\",\n  \"disconnect\",\n  \"IS_GUN_AUTH\",\n  \"SET_LAST_SEEN_APP\",\n  \"NOT_AUTH\"\n];\n\nexport const convertUTF8ToBase64 = (value: string) => {\n  return Buffer.from(value, \"utf-8\").toString(\"base64\");\n};\n\nexport const convertBase64ToBuffer = (value: string) => {\n  return Buffer.from(value, \"base64\");\n};\n\nexport const convertUTF8ToBuffer = (value: string) => {\n  return Buffer.from(value, \"utf-8\");\n};\n\nexport const convertBufferToBase64 = (value: Buffer) => {\n  return Buffer.from(value).toString(\"base64\");\n};\n\nexport const processKey = (key: Buffer | string): Buffer => {\n  if (Buffer.isBuffer(key)) {\n    return key;\n  }\n\n  const convertedKey = convertBase64ToBuffer(key);\n  return convertedKey;\n};\n\nexport const convertToEncryptedMessageResponse = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessageResponse => {\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    Buffer.isBuffer(encryptedMessage.ciphertext) &&\n    Buffer.isBuffer(encryptedMessage.iv) &&\n    Buffer.isBuffer(encryptedMessage.mac) &&\n    Buffer.isBuffer(encryptedMessage.ephemPublicKey)\n  ) {\n    return {\n      ciphertext: convertBufferToBase64(encryptedMessage.ciphertext),\n      iv: convertBufferToBase64(encryptedMessage.iv),\n      mac: convertBufferToBase64(encryptedMessage.mac),\n      ephemPublicKey: convertBufferToBase64(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const convertToEncryptedMessage = (\n  encryptedMessage: EncryptedMessage | EncryptedMessageResponse\n): EncryptedMessage => {\n  if (\n    Buffer.isBuffer(encryptedMessage.ciphertext) &&\n    Buffer.isBuffer(encryptedMessage.iv) &&\n    Buffer.isBuffer(encryptedMessage.mac) &&\n    Buffer.isBuffer(encryptedMessage.ephemPublicKey)\n  ) {\n    // @ts-ignore\n    return encryptedMessage;\n  }\n\n  if (\n    typeof encryptedMessage.ciphertext === \"string\" &&\n    typeof encryptedMessage.iv === \"string\" &&\n    typeof encryptedMessage.mac === \"string\" &&\n    typeof encryptedMessage.ephemPublicKey === \"string\"\n  ) {\n    return {\n      ciphertext: convertBase64ToBuffer(encryptedMessage.ciphertext),\n      iv: convertBase64ToBuffer(encryptedMessage.iv),\n      mac: convertBase64ToBuffer(encryptedMessage.mac),\n      ephemPublicKey: convertBase64ToBuffer(encryptedMessage.ephemPublicKey)\n    };\n  }\n\n  throw new FieldError({\n    field: \"encryptedMessage\",\n    message: \"Unknown encrypted message format\"\n  });\n};\n\nexport const isEncryptedMessage = (message: any) =>\n  message?.ciphertext && message?.iv && message?.mac && message?.ephemPublicKey;\n\nexport const isNonEncrypted = (eventName: string) =>\n  nonEncryptedEvents.includes(eventName) ||\n  process.env.REACT_APP_SHOCK_ENCRYPTION_ECC === \"false\";\n\nexport const generateKeyPair = () => {\n  const privateKey: Buffer = ECCrypto.generatePrivate();\n  const publicKey: Buffer = ECCrypto.getPublic(privateKey);\n\n  const privateKeyBase64 = convertBufferToBase64(privateKey);\n  const publicKeyBase64 = convertBufferToBase64(publicKey);\n\n  return {\n    privateKey,\n    publicKey,\n    privateKeyBase64,\n    publicKeyBase64\n  };\n};\n\nexport const encryptMessage = async ({\n  publicKey,\n  message = \"\"\n}: EncryptMessageArgs): Promise<EncryptedMessageResponse> => {\n  const processedPublicKey = processKey(publicKey);\n  const messageBuffer = convertUTF8ToBuffer(message);\n  const encryptedMessage: EncryptedMessage = await ECCrypto.encrypt(\n    processedPublicKey,\n    messageBuffer\n  );\n  const encryptedMessageResponse = {\n    ciphertext: encryptedMessage.ciphertext,\n    iv: encryptedMessage.iv,\n    mac: encryptedMessage.mac,\n    ephemPublicKey: encryptedMessage.ephemPublicKey\n  };\n\n  return convertToEncryptedMessageResponse(encryptedMessageResponse);\n};\n\nexport const decryptMessage = async ({\n  privateKey,\n  encryptedMessage\n}: DecryptMessageArgs): Promise<string | object> => {\n  try {\n    const processedPrivateKey = processKey(privateKey);\n    const decryptedMessageBuffer: Buffer = await ECCrypto.decrypt(\n      processedPrivateKey,\n      convertToEncryptedMessage(encryptedMessage)\n    );\n    const decryptedMessage = decryptedMessageBuffer.toString(\"utf-8\");\n    const parsedMessage = safeParseJSON(decryptedMessage);\n\n    return parsedMessage;\n  } catch (err) {\n    if (err.message?.toLowerCase() === \"bad mac\") {\n      console.warn(\n        \"Bad Mac!\",\n        err,\n        convertToEncryptedMessage(encryptedMessage)\n      );\n    }\n\n    throw err;\n  }\n};\n","import * as Common from \"shock-common\";\nimport isFinite from \"lodash/isFinite\";\n\nconst createValidator = <T extends Record<string, unknown>>(\n  valMap: Record<keyof T, (val: any) => void>,\n  baseValidator: (o: unknown) => boolean = () => true\n) => (o: unknown): o is T => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n\n  if (!baseValidator(o)) {\n    return false;\n  }\n\n  return Object.entries(valMap).every(([key, validator]) => {\n    return validator(o[key]);\n  });\n};\n\nexport type Contact = {\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  didDisconnect: boolean;\n};\n\nexport interface ReceivedRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  timestamp: number;\n}\n\nexport interface SentRequest {\n  id: string;\n  pk: string;\n  avatar: string | null;\n  displayName: string | null;\n  changedAddress: boolean;\n  timestamp: number;\n  loading: boolean;\n}\n\nexport type ChatMessageStatus = \"SENT\" | \"SENDING\" | \"FAILED\" | \"RECEIVED\";\n\nexport const CHAT_MESSAGE_STATUS = {\n  SENT: \"SENT\",\n  SENDING: \"SENDING\",\n  FAILED: \"FAILED\",\n  RECEIVED: \"RECEIVED\"\n} as const;\n\nexport interface ChatMessage {\n  body: string;\n  id: string;\n  localId: string;\n  outgoing: boolean;\n  recipientPublicKey: string;\n  status: ChatMessageStatus;\n  timestamp: number;\n}\n\nexport interface Post extends Common.RawPost {\n  authorId: string;\n  id: string;\n  tips: Record<string, number>;\n  type: \"post\";\n}\n\nexport interface PublishedContent {\n  type: \"image/embedded\" | \"video/embedded\";\n  magnetURI: string;\n  width: number;\n  height: number;\n  title: string;\n  description: string;\n}\n\nexport const isPublishedContent = (o: unknown): o is PublishedContent => {\n  if (!Common.isObj(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublishedContent;\n\n  if (typeof obj.description !== \"string\") {\n    return false;\n  }\n  if (typeof obj.height !== \"number\") {\n    return false;\n  }\n  if (typeof obj.width !== \"number\") {\n    return false;\n  }\n  if (!Common.isPopulatedString(obj.title)) {\n    return false;\n  }\n  if (obj.type !== \"image/embedded\" && obj.type !== \"video/embedded\") {\n    return false;\n  }\n  return true;\n};\n\nexport interface Subscription {\n  off(): void;\n}\n\nexport interface PublicContentItem extends PublishedContent {\n  id: string;\n  author: string;\n  timestamp: number;\n}\n\nexport const isPublicContentItem = (o: unknown): o is PublicContentItem => {\n  if (!isPublishedContent(o)) {\n    return false;\n  }\n  const obj = (o as unknown) as PublicContentItem;\n\n  if (!Common.isPopulatedString(obj.author)) {\n    return false;\n  }\n\n  return typeof obj.timestamp === \"number\";\n};\n\nexport type FeeRate = \"hourFee\" | \"halfHourFee\" | \"fastestFee\";\n\nexport interface CoordinateWithHash extends Common.Coordinate {\n  coordinateSHA256: string;\n}\n\nexport interface ContentRevealCoordinateMetadataInbound {\n  /**\n   * The post ID.\n   */\n  ackInfo: string;\n  /**\n   * Content ID to magnet URI.\n   */\n  unlockedContents: Record<string, string>;\n}\n\nexport interface ContentRevealCoordinateMetadataOutbound {\n  /**\n   * Same as ContentRevealCoordinateMetadataInbound.\n   */\n  response: ContentRevealCoordinateMetadataInbound;\n  /**\n   * Order type.\n   */\n  type: \"orderAck\";\n}\n\n\n/**\n * Post as stored in Gun. Without `contentItems`.\n */\nexport type PostRaw = Omit<Common.RawPost, \"contentItems\">;\n\nexport const isPostRaw = createValidator<PostRaw>({\n  date: isFinite,\n  status: Common.isPopulatedString,\n  tags: (val: string) => typeof val === \"string\",\n  title: Common.isPopulatedString\n});\n\nexport interface NodeInfo {\n  uris: string[];\n  synced_to_chain: boolean;\n  synced_to_graph: boolean;\n  identity_pubkey: string;\n  best_header_timestamp: string;\n  block_height: number;\n  num_pending_channels: number;\n  version: string;\n}\n\n","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Schema from \"../schema\";\nimport * as Utils from \"../utils\";\nimport Http from \"../utils/Http\";\nimport { rifle, unsubscribeRifleByQuery } from \"../utils/WebSocket\";\n\nimport { subscribeUserProfile } from \"./UserProfilesActions\";\n\nexport const ACTIONS = {\n  RESET_FEED: \"feed/reset\",\n  ADD_FOLLOW: \"feed/follows/add\",\n  REMOVE_FOLLOW: \"feed/follows/remove\",\n  UPDATE_FOLLOW: \"feed/follows/update\",\n  LOAD_POSTS: \"feed/posts/load\",\n  ADD_USER_POST: \"feed/posts/add\",\n  DELETE_USER_POST: \"feed/posts/delete\",\n  LOAD_SHARED_POST: \"feed/sharedPosts/load\",\n  POST_TIPPED: \"feed/posts/tipped\",\n  RELOAD_FEED: \"feed/reload\"\n};\n\nexport const removeFollow = key => dispatch =>\n  dispatch({\n    type: ACTIONS.REMOVE_FOLLOW,\n    data: key\n  });\n\nexport const addFollow = follow => dispatch =>\n  dispatch({\n    type: ACTIONS.ADD_FOLLOW,\n    data: follow\n  });\n\nexport const loadSharedPost = (\n  originalPostId,\n  originalPublicKey,\n  sharerPublicKey\n) => async dispatch => {\n  const { data: post } = await Http.get(\n    `/api/gun/otheruser/${originalPublicKey}/load/posts>${originalPostId}`\n  );\n  dispatch(subscribeUserProfile(originalPublicKey));\n  const tipSet = post.data.tipsSet ? Object.values(post.data.tipsSet) : [];\n  const lenSet = tipSet.length;\n  const tot =\n    lenSet > 0 ? tipSet.reduce((acc, val) => Number(val) + Number(acc)) : 0;\n  dispatch({\n    type: ACTIONS.LOAD_SHARED_POST,\n    data: {\n      ...post.data,\n      authorId: originalPublicKey,\n      sharerId: sharerPublicKey,\n      id: originalPostId,\n      tipCounter: lenSet,\n      tipValue: tot\n    }\n  });\n};\n\nexport const postDeleted = createAction<{\n  author: string;\n  id: string;\n}>(\"feed/postDeleted\");\n\nexport const postReceived = createAction<{\n  author: string;\n  id: string;\n  post: Schema.PostRaw;\n}>(\"feed/postReceived\");\n\nexport const subSinglePost = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}::on`,\n      onData(post: string) {\n\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author,\n              id: postID\n            })\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside single post sub ${postID} from ...${author.slice(\n            -8\n          )}: ${e.message}`\n        );\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to single post ${postID} from ...${author.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nexport const subscribeUserPosts = (publicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n\n    const subscription = rifle({\n      query: `${publicKey}::posts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside posts subscription for ...${publicKey.slice(-8)} -> `,\n          e\n        );\n        alert(\n          `Error inside posts subscription for ...${publicKey.slice(-8)}: ${\n            e.message\n          }`\n        );\n      },\n      onData: (post: unknown, postID: string) => {\n\n        if (Schema.isPostRaw(post)) {\n          dispatch(\n            postReceived({\n              author: publicKey,\n              id: postID,\n              post\n            })\n          );\n        } else if (post === null) {\n          dispatch(\n            postDeleted({\n              author: publicKey,\n              id: postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In posts subscription for user ...${publicKey.slice(\n              -8\n            )}, invalid data -> `,\n            post\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to posts for ...${publicKey.slice(-8)} -> `,\n      e\n    );\n    alert(`Could not sub to posts for ...${publicKey.slice(-8)}: ${e.message}`);\n\n    return () => {};\n  }\n};\n\nexport const contentItemReceived = createAction<{\n  author: string;\n  contentItem: Common.ContentItem;\n  id: string;\n  postID: string;\n}>(\"feed/contentItemReceived\");\n\nexport const subPostContent = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n\n    const subscription = rifle({\n      query: `${author}::posts>${postID}>contentItems::map.on`,\n      onData(contentItem: unknown, id: string) {\n\n        // CAST: unfortunate isContentItem typings\n        if (Common.isContentItem(contentItem)) {\n          dispatch(\n            contentItemReceived({\n              author,\n              contentItem,\n              id,\n              postID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Invalid content item in post content subscription from ..${author.slice(\n              -8\n            )} for post ${postID} -> `,\n            contentItem\n          );\n        }\n      },\n      onError(e) {\n        Utils.logger.error(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID} -> `,\n          e\n        );\n        alert(\n          `Error inside post content subscription from ...${author.slice(\n            -8\n          )} for post ${postID}: ${e.message}`\n        );\n      }\n    });\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to post content from ...${author.slice(\n        -8\n      )} for post ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not sub to posts from ...${author.slice(-8)} for post ${postID}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\nconst FOLLOWS_QUERY = \"$user::follows::map.on\";\n\nexport const subscribeFollows = () => async dispatch => {\n  const subscription = await rifle({\n    query: FOLLOWS_QUERY,\n    reconnect: true,\n    onData: async (follow, key) => {\n      console.info(`processing follow`);\n      console.info(follow);\n      if (typeof key !== \"string\") {\n        console.warn(`Invalid follow key received: ${key}`);\n        return;\n      }\n\n      if (!follow) {\n        dispatch(removeFollow(key));\n        return;\n      }\n\n      if (typeof follow.user !== \"string\") {\n        console.warn(`Invalid follow user received (${follow.user})`);\n        return;\n      }\n\n      dispatch(addFollow(follow));\n    }\n  });\n\n  console.debug(\"subbing follows\");\n\n  return subscription;\n};\n\nexport const unsubscribeFollows = () => () => {\n  console.debug(\"unsubbing follows\");\n  unsubscribeRifleByQuery(FOLLOWS_QUERY);\n};\n\nexport const sendTipPost = ({\n  publicKey,\n  postId,\n  amount\n}) => async dispatch => {\n  const { data } = await Http.post(\"/api/lnd/unifiedTrx\", {\n    type: \"tip\",\n    amt: amount,\n    to: publicKey,\n    memo: \"Post Tipped!\",\n    feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\n    ackInfo: postId\n  });\n  console.log(data);\n  dispatch({\n    type: ACTIONS.POST_TIPPED,\n    data: {\n      publicKey,\n      postId,\n      amount\n    }\n  });\n};\n\nexport const deleteUserPost = ({ id, authorId }) => ({\n  type: ACTIONS.DELETE_USER_POST,\n  data: {\n    id,\n    authorId\n  }\n});\n\nexport const reloadFeed = () => ({\n  type: ACTIONS.RELOAD_FEED\n});\n\n// #region sharedPosts\n\nexport const sharedPostDeleted = createAction<{\n  postID: string;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostDeleted\");\n\nexport const sharedPostReceived = createAction<{\n  originalAuthor: string;\n  postID: string;\n  shareDate: number;\n  sharerPublicKey: string;\n}>(\"feed/sharedPostReceived\");\n\nexport const subSharedPosts = (sharerPublicKey: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n\n    const subscription = rifle({\n      query: `${sharerPublicKey}::sharedPosts::map.on`,\n      onError(e) {\n        Utils.logger.error(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )} -> `,\n          e\n        );\n        alert(\n          `Error inside shared posts subscription for ...${sharerPublicKey.slice(\n            -8\n          )}: ${e.message}`\n        );\n      },\n      onData: (sharedPost: unknown, postID: string) => {\n\n        if (Common.isSharedPostRaw(sharedPost)) {\n          dispatch(\n            sharedPostReceived({\n              originalAuthor: sharedPost.originalAuthor,\n              postID,\n              shareDate: sharedPost.shareDate,\n              sharerPublicKey\n            })\n          );\n        } else if (sharedPost === null) {\n          dispatch(\n            sharedPostDeleted({\n              postID,\n              sharerPublicKey\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `In shared posts subscription for user ...${sharerPublicKey.slice(\n              -8\n            )}, invalid data -> `,\n            sharedPost\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)} -> `,\n      e\n    );\n    alert(\n      `Could not sub to shared posts for ...${sharerPublicKey.slice(-8)}: ${\n        e.message\n      }`\n    );\n\n    return () => {};\n  }\n};\n\n// #endregion sharedPosts\n\nexport const postTipReceived = createAction<{\n  author: string;\n  postID: string;\n  tipAmt: number;\n  tipID: string;\n}>(\"feed/postTipReceived\");\n\nexport const subPostTips = (author: string, postID: string) => (\n  dispatch: (action: any) => void\n): (() => void) => {\n  try {\n    const subscription = rifle({\n      query: `${author}::posts>${postID}>tipsSet::map.on`,\n      onData(tipAmt: unknown, tipID: string) {\n          const nTipAmount = Number(tipAmt)\n        if (nTipAmount !== NaN) {\n          dispatch(\n            postTipReceived({\n              author,\n              postID,\n              tipAmt:nTipAmount,\n              tipID\n            })\n          );\n        } else {\n          Utils.logger.error(\n            `Post ${postID} tips sub, tipID ${tipID} got non number value -> `,\n            tipAmt\n          );\n        }\n      }\n    });\n\n    return () => {\n      subscription.then(sub => {\n        sub.off();\n      });\n    };\n  } catch (e) {\n    Utils.logger.error(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID} -> `,\n      e\n    );\n    alert(\n      `Could not subscribe to post tips from author ...${author.slice(\n        -8\n      )} with ID ${postID}: ${e.message}`\n    );\n    return () => {};\n  }\n};\n","// @ts-check\nimport jwtDecode from \"jwt-decode\";\nimport Http from \"axios\";\nimport { ACTIONS as AUTH_ACTIONS, setAuthenticated } from \"./AuthActions\";\nimport { parseError } from \"../utils/Error\";\nimport { exchangeKeyPair } from \"./EncryptionActions\";\nimport { connectSocket } from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_NODE_INFO: \"node/reset\",\n  SET_HOST_IP: \"node/hostIP\",\n  SET_HOST_ID: \"node/hostId\",\n  SET_AUTHENTICATED_USER: \"node/authenticatedUser\",\n  SET_CONNECTION_STATUS: \"node/connectionStatus\",\n  SET_NODE_HEALTH: \"node/health\",\n  SET_WEBCLIENT_PREFIX: \"node/setWebClientPrefix\",\n  SET_RELAY_ID: \"auth/relay/set\"\n};\n\nexport const resetNodeInfo = () => dispatch => {\n  dispatch({\n    type: ACTIONS.RESET_NODE_INFO\n  });\n};\n\nexport const setHostId = hostId => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_HOST_ID,\n    data: hostId\n  });\n};\n\nexport const fetchNodeHealth = (hostIP, relayId) => async dispatch => {\n  try {\n    const headers = {};\n    if (relayId) {\n      headers[\"x-shock-hybrid-relay-id-x\"] = relayId;\n    }\n    const { data } = await Http.get(`${hostIP}/healthz`, {\n      headers\n    });\n    if (!data) {\n      throw new Error(\n        `NodeActions->fetchNodeHealth()->No data obtained from healthz endpoint`\n      );\n    }\n\n    if (data.APIStatus?.message) {\n      dispatch({\n        type: ACTIONS.SET_CONNECTION_STATUS,\n        data: true\n      });\n    }\n\n    return data;\n  } catch (err) {\n    console.log(`NodeActions->fetchNodeHealth()->Error encountered:`);\n    console.log(err);\n    dispatch({\n      type: ACTIONS.SET_CONNECTION_STATUS,\n      data: false\n    });\n  }\n};\n\nexport const fetchNodeUnlockStatus = () => async dispatch => {\n  const { data } = await Http.get(\"/api/lnd/wallet/status\");\n  const { walletExists, walletStatus } = data;\n\n  if (walletExists) {\n    dispatch({\n      type: AUTH_ACTIONS.SET_AUTH_STEP,\n      data: walletStatus === \"locked\" ? \"unlockWallet\" : \"gunAuth\"\n    });\n    return walletStatus;\n  }\n\n  dispatch({\n    type: AUTH_ACTIONS.SET_AUTH_STEP,\n    data: \"createWallet\"\n  });\n\n  return \"createWallet\";\n};\n\nexport const connectHost = (\n  hostIP,\n  resetData = true,\n  relayId = null\n) => async dispatch => {\n  if (resetData) {\n    dispatch({\n      type: ACTIONS.RESET_NODE_INFO\n    });\n    dispatch({\n      type: AUTH_ACTIONS.RESET_AUTH_INFO\n    });\n  }\n  const done = async (host, health) => {\n    Http.defaults.baseURL = `${host}`;\n    if (relayId) {\n      dispatch(setRelayId(relayId));\n    }\n    dispatch({\n      type: ACTIONS.SET_HOST_IP,\n      data: host\n    });\n\n    await Promise.all([\n      dispatch(fetchNodeUnlockStatus()),\n      dispatch(exchangeKeyPair())\n    ]);\n\n    connectSocket(host, true);\n  };\n\n  let nodeHealthHttps;\n  const sanitizedHostIP = hostIP.replace(/^http(s)?:\\/\\//, \"\");\n  try {\n    nodeHealthHttps = await fetchNodeHealth(\n      `https://${sanitizedHostIP}`,\n      relayId\n    )(dispatch);\n    if (nodeHealthHttps) {\n      nodeHealthHttps.withProtocolHostIP = `https://${sanitizedHostIP}`;\n      await done(`https://${sanitizedHostIP}`, nodeHealthHttps);\n      return nodeHealthHttps;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.error(\"cannot establish https connection, will try http\");\n  const nodeHealth = await fetchNodeHealth(\n    `http://${sanitizedHostIP}`,\n    relayId\n  )(dispatch);\n  nodeHealth.withProtocolHostIP = `http://${sanitizedHostIP}`;\n  await done(`http://${sanitizedHostIP}`, nodeHealth);\n  return nodeHealthHttps || nodeHealth;\n};\n\nexport const unlockWallet = ({\n  alias,\n  password,\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/auth\",\n      {\n        alias,\n        password\n      },\n      {\n        // Unlocking can take significantly longer than other endpoints\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createAlias = ({\n  alias,\n  password,\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\"/api/lnd/wallet/existing\", {\n      alias,\n      password\n    });\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const createWallet = ({\n  alias,\n  password\n}) => async dispatch => {\n  try {\n    const { data } = await Http.post(\n      \"/api/lnd/wallet\",\n      {\n        alias,\n        password\n      },\n      {\n        // Creating a wallet can take longer than any other endpoints.\n        timeout: 30000\n      }\n    );\n\n    dispatch(setAuthenticated(true));\n    const decodedToken = jwtDecode(data.authorization);\n    dispatch({\n      type: ACTIONS.SET_AUTHENTICATED_USER,\n      data: {\n        alias: data.user.alias,\n        authToken: data.authorization,\n        publicKey: data.user.publicKey,\n        // @ts-expect-error\n        authTokenExpirationDate: decodedToken.exp\n      }\n    });\n    return data;\n  } catch (err) {\n    dispatch(setAuthenticated(false));\n    throw parseError(err);\n  }\n};\n\nexport const setWebclientPrefix = prefix => dispatch => {\n  dispatch({\n    type: ACTIONS.SET_WEBCLIENT_PREFIX,\n    data: prefix\n  });\n};\n\nexport const setRelayId = relayId => ({\n  type: ACTIONS.SET_RELAY_ID,\n  data: relayId\n});\n","let dialogCallback = null\nexport const addDialogCallback = cb => {\n    dialogCallback = cb\n}\n\nexport const callDialogCallBack = async () => {\n    if(!dialogCallback){\n        return Promise.resolve()\n    }\n    return dialogCallback()\n}","import {\n  addDialogCallback,\n  callDialogCallBack\n} from '../utils/dialogCallback'\nexport const ACTIONS = {\n  OPEN_DIALOG: \"app/openDialog\",\n  CLOSE_DIALOG:\"app/closeDialog\"\n};\nexport const openDialog = ({text,cb = null}) => dispatch => {\n  addDialogCallback(cb)\n  dispatch({\n    type: ACTIONS.OPEN_DIALOG,\n    data: {text,hasCallback: !!cb}\n  });\n};\n\nexport const closeDialog = executeCb => dispatch => {\n  if(executeCb){\n    callDialogCallBack()\n  }\n  dispatch({\n    type: ACTIONS.CLOSE_DIALOG\n  });\n}","import * as Common from \"shock-common\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nimport * as Utils from \"../utils\";\nimport {\n  rifle,\n  rifleCleanup,\n  unsubscribeRifleByQuery\n} from \"../utils/WebSocket\";\n\nexport const ACTIONS = {\n  RESET_USER_PROFILES: \"userProfiles/profiles/reset\",\n  REMOVE_USER_PROFILE: \"userProfiles/profiles/remove\"\n};\n\nconst subscribedProfiles = new Set();\n\nexport const updatedUserProfile = createAction<{\n  profile: Partial<Common.User>;\n  publicKey: string;\n}>(\"userProfiles/profiles/update\");\n\n/**\n * Returns an un subscription function.\n */\nexport const subscribeUserProfile = (publicKey: string) => (\n  dispatch: (action: object) => void,\n  getState: () => {\n    userProfiles: Record<string, Common.User>;\n  }\n) => {\n  if (subscribedProfiles.has(publicKey)) {\n    return () => {};\n  }\n\n  console.info(\"subbing user...\" + publicKey);\n  subscribedProfiles.add(publicKey);\n\n  const subscription = rifle({\n    query: `${publicKey}::Profile::map.on`,\n    reconnect: true,\n    onData: (data: any, key: string) => {\n      if (key === \"bio\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              bio: data\n            },\n            publicKey\n          })\n        );\n      }\n      if (key === \"displayName\") {\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              displayName: data\n            },\n            publicKey\n          })\n        );\n      }\n    }\n  });\n\n  const binarySub = rifle({\n    query: `${publicKey}::profileBinary::map.on`,\n    reconnect: true,\n    onData: (data, key: string) => {\n      if (key === \"avatar\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected avatar data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              avatar: data\n            },\n            publicKey\n          })\n        );\n      } else if (key === \"header\") {\n        if (typeof data !== \"string\" && data !== null) {\n          Utils.logger.error(\n            `Expected header data to be string or null, instead got: ${typeof data}. Public key: ${publicKey}`\n          );\n          return;\n        }\n        dispatch(\n          updatedUserProfile({\n            profile: {\n              header: data\n            },\n            publicKey\n          })\n        );\n      } else {\n        Utils.logger.error(\n          `Unknown key: ${key} for user binary profile data gun RPC socket`\n        );\n      }\n    }\n  });\n\n  return () => {\n    rifleCleanup(subscription, binarySub)();\n    subscribedProfiles.delete(publicKey);\n  };\n};\n\nexport const unsubscribeUserProfile = (publicKey: string) => async () => {\n  unsubscribeRifleByQuery(`${publicKey}::Profile::on`);\n  unsubscribeRifleByQuery(`${publicKey}::profileBinary::map.on`);\n};\n","// @ts-check\nimport { useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./css/index.scoped.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/AuthActions\";\nimport { closeDrawer } from \"../../actions/DrawerActions\";\nimport * as Store from \"../../store\";\n\nconst Drawer = () => {\n  const dispatch = useDispatch();\n  const open = Store.useSelector(({ drawer }) => drawer.open);\n  const close = useCallback(() => {\n    dispatch(closeDrawer());\n  }, [dispatch]);\n  const onClickLogout = useCallback(() => {\n    if (window.confirm(\"Are you sure you wish to log out?\")) {\n      dispatch(logout());\n      dispatch(closeDrawer());\n    }\n  }, [dispatch]);\n\n  const onClickScan = useCallback(() => {}, []);\n\n  return (\n    <>\n      <div\n        className={classNames({\n          \"drawer-overlay\": true,\n          \"drawer-overlay-open\": open\n        })}\n        onClick={close}\n      ></div>\n      <div\n        className={classNames({\n          \"drawer-container\": true,\n          \"drawer-container-open\": open\n        })}\n      >\n        <div className=\"drawer-top-section\">\n          {/* <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-wallet\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n          </div> */}\n          {/* <div className=\"drawer-item\">\n        <div className=\"drawer-item-icon\">\n          <i className=\"icon-solid-spending-rule\"></i>\n        </div>\n        <p className=\"drawer-item-title unselectable\">Spending Rules</p>\n      </div> */}\n          <NavLink className=\"drawer-item\" to=\"/advanced\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Advanced Lightning</p>\n          </NavLink>\n          <NavLink to=\"/Backups\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-key\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Seed Backup</p>\n          </NavLink>\n          <NavLink to=\"/walletSettings\" className=\"drawer-item\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-spending-rule\" />\n            </div>\n            <p className=\"drawer-item-title unselectable\">Wallet Settings</p>\n          </NavLink>\n        </div>\n        <div className=\"drawer-bottom-section\">\n          {/*<NavLink className=\"drawer-item\" to=\"/moonpay\" onClick={close}>\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Buy Bitcoins</p>\n          </NavLink>*/}\n          <div className=\"drawer-item\">\n            <div className=\"drawer-item-icon\">\n              <i className=\"icon-solid-help\"></i>\n            </div>\n            <p className=\"drawer-item-title unselectable\">Help</p>\n          </div>\n        </div>\n\n        <div className=\"drawer-logout-and-scan\">\n          <NavLink to=\"/QRScanner\" onClick={close}>\n            <i\n              onClick={onClickScan}\n              className=\"icon-solid-scan\"\n              style={{ color: \"var(--main-blue)\" }}\n            ></i>\n          </NavLink>\n          <i\n            onClick={onClickLogout}\n            className=\"fas fa-power-off\"\n            style={{ color: \"var(--main-blue)\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","// @ts-check\nimport React, {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport JWTDecode from \"jwt-decode\";\nimport videojs from \"video.js\";\nimport FullHeight from \"react-div-100vh\";\n\nimport { setAuthenticated } from \"./actions/AuthActions\";\n\nimport Loader from \"./common/Loader\";\nimport Drawer from \"./common/Drawer\";\nimport {\n  subscribeUserProfile,\n  unsubscribeUserProfile\n} from \"./actions/UserProfilesActions\";\nimport * as Store from \"./store\";\nimport \"./styles/App.global.css\";\nimport Stream from \"./common/Post/components/Stream\";\nimport { dragElement } from \"./utils/ui\";\nimport { Http } from \"./utils\";\nimport {\n  addStream,\n  removeStream,\n  setSeedInfo,\n  setSeedProviderPub\n} from \"./actions/ContentActions\";\nimport { closeDialog } from \"./actions/AppActions\";\n\nimport { ToastContainer } from \"react-toastify\";\n\nconst OverviewPage = React.lazy(() => import(\"./pages/Overview\"));\nconst AdvancedPage = React.lazy(() => import(\"./pages/Advanced\"));\nconst WalletSettingsPage = React.lazy(() => import(\"./pages/WalletSettings\"));\nconst MessagesPage = React.lazy(() => import(\"./pages/Messages\"));\nconst ProfilePage = React.lazy(() => import(\"./pages/Profile\"));\nconst ChatPage = React.lazy(() => import(\"./pages/Chat\"));\nconst SendPage = React.lazy(() => import(\"./pages/Send\"));\nconst RequestPage = React.lazy(() => import(\"./pages/Request\"));\nconst AuthPage = React.lazy(() => import(\"./pages/Auth\"));\nconst FeedPage = React.lazy(() => import(\"./pages/Feed\"));\nconst MoonPayPage = React.lazy(() => import(\"./pages/MoonPay\"));\nconst PublishContentPage = React.lazy(() =>\n  import(\"./pages/Profile/PublishContent\")\n);\nconst offerServicePage = React.lazy(() =>\n  import(\"./pages/Profile/offerService\")\n);\nconst CreatePostPage = React.lazy(() => import(\"./pages/Profile/CreatePost\"));\nconst GoLivePage = React.lazy(() => import(\"./pages/Profile/GoLive/GoLive\"));\nconst OtherUserPage = React.lazy(() => import(\"./pages/OtherUser\"));\nconst QRScannerPage = React.lazy(() => import(\"./pages/QRScanner\"));\nconst BackupsPage = React.lazy(() => import(\"./pages/Backups\"));\nconst PublicContentItemPage = React.lazy(() =>\n  import(\"./pages/PublicContentItem\")\n);\n\nconst PrivateRoute = ({ component, ...options }) => {\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const authorizedComponent = authenticated ? component : AuthPage;\n\n  return <Route {...options} component={authorizedComponent} />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const authToken = Store.useSelector(({ node }) => node.authToken);\n  const authenticated = Store.useSelector(({ auth }) => auth.authenticated);\n  const publicKey = Store.useSelector(Store.selectSelfPublicKey);\n  const streamUrl = Store.useSelector(({ content }) => content.streamUrl);\n  const streamStatusUrl = Store.useSelector(\n    ({ content }) => content.streamStatusUrl\n  );\n  const streamContentId = Store.useSelector(\n    ({ content }) => content.streamContentId\n  );\n  const streamPostId = Store.useSelector(({ content }) => content.streamPostId);\n  const streamUserToken = Store.useSelector(\n    ({ content }) => content.streamUserToken\n  );\n  const streamLiveToken = Store.useSelector(\n    ({ content }) => content.streamLiveToken\n  );\n  const dialogText = Store.useSelector(({ app }) => app.dialogText);\n  const dialogHasCallback = Store.useSelector(\n    ({ app }) => app.dialogHasCallback\n  );\n  const [update, setUpdate] = useState(0);\n  const [isLive, setIsLive] = useState(false);\n  const [showFloatingPlayer, setShowFloatingPlayer] = useState(false);\n  // effect to update live status\n  useEffect(() => {\n    if (!streamStatusUrl) {\n      return;\n    }\n    let timeout;\n    const interval = setInterval(async () => {\n      try {\n        const res = await Http.get(streamStatusUrl);\n        if (!res.data.isLive) {\n          return;\n        }\n        setIsLive(true);\n        clearInterval(interval);\n        timeout = setTimeout(() => {\n          console.info(\"upp\");\n          setUpdate(Date.now());\n        }, 5000);\n      } catch (e) {}\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, [streamStatusUrl, setIsLive, setUpdate]);\n  const StreamRender = useMemo(() => {\n    return (\n      <Stream\n        hideRibbon={true}\n        item={{ magnetURI: streamUrl, liveStatus: \"live\" }}\n        timeout={1500}\n        id={undefined}\n        index={undefined}\n        postId={undefined}\n        tipCounter={undefined}\n        tipValue={undefined}\n        width={undefined}\n      />\n    );\n  }, [streamUrl, update]);\n\n  const stopStream = useCallback(() => {\n    Http.post(\"/api/stopStream\", {\n      postId: streamPostId,\n      contentId: streamContentId,\n      endUrl: `https://stream.shock.network/api/stream/end`,\n      urlForMagnet: `https://stream.shock.network/api/stream/torrent/${streamUserToken}`,\n      obsToken: streamLiveToken\n    });\n    removeStream()(dispatch);\n    console.info(streamUserToken);\n    history.push(\"/profile\");\n  }, [\n    dispatch,\n    history,\n    streamContentId,\n    streamLiveToken,\n    streamPostId,\n    streamUserToken\n  ]);\n\n  useEffect(() => {\n    videojs.addLanguage(\"en\", {\n      \"The media could not be loaded, either because the server or network failed or because the format is not supported.\":\n        \"Stream Not Available\"\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!authToken) {\n      dispatch(setAuthenticated(false));\n      return;\n    }\n\n    const decodedToken = JWTDecode(authToken);\n    // @ts-expect-error\n    const tokenExpired = decodedToken.exp * 1000 < Date.now();\n    setAuthenticated(tokenExpired);\n  }, [authToken, dispatch]);\n\n  useEffect(() => {\n    if (authenticated) {\n      // Get current user's profile on login\n      dispatch(subscribeUserProfile(publicKey));\n\n      return () => {\n        dispatch(unsubscribeUserProfile(publicKey));\n      };\n    }\n  }, [authenticated, dispatch, publicKey]);\n\n  useEffect(() => {\n    const tmp = !!(authenticated && isLive && streamUrl);\n    if (tmp !== showFloatingPlayer) {\n      setShowFloatingPlayer(tmp);\n    }\n  }, [\n    authenticated,\n    isLive,\n    streamUrl,\n    showFloatingPlayer,\n    setShowFloatingPlayer\n  ]);\n  useEffect(() => {\n    if (showFloatingPlayer) {\n      dragElement(\"floatyVideo\");\n    }\n  }, [showFloatingPlayer]);\n\n  //load info about content provider stored into gun\n  const loadContentInfo = useCallback(async () => {\n    try {\n      const { data: serviceProvider } = await Http.get(\n        `/api/gun/user/load/seedServiceProviderPubKey`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        serviceProvider &&\n        typeof serviceProvider.data === \"string\" &&\n        serviceProvider.data !== \"\"\n      ) {\n        setSeedProviderPub(serviceProvider.data, true)(dispatch);\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n    try {\n      const { data: seedData } = await Http.get(\n        `/api/gun/user/load/seedServiceSeedData`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        seedData &&\n        typeof seedData.data === \"string\" &&\n        seedData.data !== \"\"\n      ) {\n        const JObject = JSON.parse(seedData.data);\n        if (JObject && JObject.seedUrl && JObject.seedToken) {\n          setSeedInfo(JObject.seedUrl, JObject.seedToken, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated) {\n      return;\n    }\n    loadContentInfo();\n  }, [authenticated, loadContentInfo]);\n\n  //load info about current stream stored into gun\n  const loadStreamInfo = useCallback(async () => {\n    try {\n      const { data: streamData } = await Http.get(\n        `/api/gun/user/load/currentStreamInfo`,\n        {\n          headers: {\n            \"public-key-for-decryption\": publicKey\n          }\n        }\n      );\n      if (\n        streamData &&\n        typeof streamData.data === \"string\" &&\n        streamData.data !== \"\"\n      ) {\n        if (streamData.data === \"NO DATA\") {\n          removeStream(true, true)(dispatch);\n          return;\n        }\n        const JObject = JSON.parse(streamData.data);\n\n        if (JObject) {\n          addStream(JObject, true)(dispatch);\n        }\n      }\n    } catch (err) {\n      //if something goes wrong just log the error, no need to do anything else\n      console.log(err);\n    }\n  }, [dispatch, publicKey]);\n  useEffect(() => {\n    if (!authenticated) {\n      return;\n    }\n    loadStreamInfo();\n  }, [authenticated, loadStreamInfo]);\n\n  const DialogClose = useCallback(() => {\n    closeDialog(false)(dispatch);\n  }, [closeDialog, dispatch]);\n\n  const ConfirmDialog = useCallback(() => {\n    closeDialog(dialogHasCallback)(dispatch);\n  }, [dialogHasCallback, closeDialog, dispatch]);\n  return (\n    <FullHeight className=\"ShockWallet\">\n      {showFloatingPlayer && (\n        <div id=\"floatyVideo\" className=\"floaty-container\">\n          <i id=\"floatyVideoHeader\" className=\"fas fa-grip-vertical\"></i>\n          {StreamRender}\n          <button onClick={stopStream}>CLOSE STREAM</button>\n        </div>\n      )}\n      {dialogText && (\n        <div className=\"fixed-container\">\n          <div className=\"global-dialog\">\n            <p>{dialogText}</p>\n            <div className=\"d-flex flex-justify-center w-80\">\n              {dialogHasCallback && (\n                <button\n                  className=\"shock-form-button m-t-1 w-50\"\n                  onClick={DialogClose}\n                >\n                  Cancel\n                </button>\n              )}\n              {dialogHasCallback && <div style={{ width: \"1rem\" }}></div>}\n              <button\n                className=\"shock-form-button-confirm m-t-1 w-50\"\n                onClick={ConfirmDialog}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      <Drawer />\n      <Suspense fallback={<Loader fullScreen text={null} />}>\n        <Switch>\n          <Route path=\"/auth\" exact component={AuthPage} />\n          <PrivateRoute path=\"/overview\" exact component={OverviewPage} />\n          <PrivateRoute path=\"/advanced\" exact component={AdvancedPage} />\n          <PrivateRoute\n            path=\"/walletSettings\"\n            exact\n            component={WalletSettingsPage}\n          />\n          <PrivateRoute path=\"/chat\" exact component={MessagesPage} />\n          <PrivateRoute path=\"/chat/:publicKey\" component={ChatPage} />\n          <PrivateRoute path=\"/send\" exact component={SendPage} />\n          <PrivateRoute path=\"/request\" exact component={RequestPage} />\n          <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/publishContent\"\n            exact\n            component={PublishContentPage}\n          />\n          <PrivateRoute path=\"/feed\" exact component={FeedPage} />\n          <PrivateRoute path=\"/moonpay\" exact component={MoonPayPage} />\n          <PrivateRoute path=\"/createPost\" exact component={CreatePostPage} />\n          <PrivateRoute path=\"/goLive\" exact component={GoLivePage} />\n          <PrivateRoute\n            path=\"/offerService\"\n            exact\n            component={offerServicePage}\n          />\n          <PrivateRoute path=\"/QRScanner\" exact component={QRScannerPage} />\n          <PrivateRoute\n            path=\"/otherUser/:publicKey/:selectedView?\"\n            exact\n            component={OtherUserPage}\n          />\n          <PrivateRoute path=\"/Backups\" exact component={BackupsPage} />\n\n          <PrivateRoute\n            path=\"/item/:publicKey/:id\"\n            exact\n            component={PublicContentItemPage}\n          />\n          <Redirect to=\"/overview\" />\n        </Switch>\n      </Suspense>\n\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover={false}\n        closeButton={false}\n      />\n    </FullHeight>\n  );\n};\n\nexport default App;\n","export function dragElement(elementId) {\n  const elmnt = document.getElementById(elementId)\n  if(!elmnt){\n    console.log(\"draggable set fail\")\n    return\n      \n  }\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  document.getElementById(elmnt.id + \"Header\").onpointerdown = dragMouseDown;\n\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onpointerup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onpointermove = elementDrag;\n  }\n\n  function elementDrag(e) {\n      console.log(\"dragging yooo\")\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n  }\n\n  function closeDragElement() {\n      console.log(\"not anymore!\")\n    // stop moving when mouse button is released:\n    document.onpointerup = null;\n    document.onpointermove = null;\n  }\n  }\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Http from \"axios\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./styles/index.global.css\";\n\nHttp.defaults.timeout = 20000;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import { AxiosError } from \"axios\";\nimport FieldError, { FieldErrorType } from \"./FieldError\";\n\nexport type MixedError = Error | AxiosError | FieldErrorType;\n\nexport const parseError = (error: MixedError) => {\n  if (\"response\" in error) {\n    const response = error.response?.data;\n    return new FieldError({\n      field: response?.field ?? \"unknown\",\n      message: response?.errorMessage ?? \"An unknown error has occurred\"\n    });\n  }\n\n  return new FieldError({\n    field: (\"field\" in error && error.field) ?? \"unknown\",\n    message: error.message ?? \"An unknown error has occurred\"\n  });\n};\n","export type FieldErrorType = {\n  message: string;\n  field: string;\n  name?: string;\n  stack?: string;\n};\n\nclass FieldError extends Error {\n  field: string;\n\n  constructor(error: any) {\n    super();\n    this.message = error?.message ?? \"An unknown error has occurred\";\n    this.field = error?.field ?? \"unknown\";\n    this.name = error?.name;\n    this.stack = error?.stack;\n  }\n}\n\nexport default FieldError;\n","import { v4 as uuidv4 } from \"uuid\";\nimport Http from \"axios\";\nimport { setHostId } from \"./NodeActions\";\nimport { generateKeyPair } from \"../utils/Encryption\";\n\nexport const ACTIONS = {\n  ADD_USER_KEY_PAIR: \"encryption/userKeyPair\",\n  ADD_HOST_KEY: \"encryption/hostKey\",\n  SET_DEVICE_ID: \"encryption/deviceId\"\n};\n\nlet exchangeSource = Http.CancelToken.source();\n\nexport const generateDeviceId = () => dispatch => {\n  const deviceId = uuidv4();\n  dispatch({\n    type: ACTIONS.SET_DEVICE_ID,\n    data: deviceId\n  });\n  return deviceId;\n};\n\nexport const addUserKeyPair = ({ hostId, keyPair }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_USER_KEY_PAIR,\n    data: { hostId, keyPair }\n  });\n};\n\nexport const addHostKey = ({ hostId, publicKey }) => dispatch => {\n  dispatch({\n    type: ACTIONS.ADD_HOST_KEY,\n    data: {\n      hostId,\n      publicKey\n    }\n  });\n};\n\nconst getDeviceId = () => (dispatch, getState) => {\n  const { deviceId } = getState().node;\n\n  if (!deviceId) {\n    const newDeviceId = dispatch(generateDeviceId());\n    return newDeviceId;\n  }\n\n  return deviceId;\n};\n\nexport const exchangeKeyPair = () => async dispatch => {\n  try {\n    if (exchangeSource) {\n      exchangeSource.cancel(\n        \"Key Pair exchange operation is preceded by another one\"\n      );\n      exchangeSource = null;\n    }\n\n    exchangeSource = Http.CancelToken.source();\n    const deviceId = dispatch(getDeviceId());\n\n    const keyPair = generateKeyPair();\n    const { data } = await Http.post(\n      `/api/encryption/exchange`,\n      {\n        publicKey: keyPair.publicKeyBase64,\n        deviceId\n      },\n      {\n        cancelToken: exchangeSource.token\n      }\n    );\n\n    dispatch(\n      addUserKeyPair({\n        hostId: data.hostId,\n        keyPair\n      })\n    );\n\n    dispatch(\n      addHostKey({\n        hostId: data.hostId,\n        publicKey: data.APIPublicKey\n      })\n    );\n\n    dispatch(setHostId(data.hostId));\n\n    return {\n      user: keyPair,\n      host: data\n    };\n  } catch (err) {\n    console.error(\"[ENCRYPTION] Key Exchange Error:\", err);\n    throw err;\n  }\n};\n","export const ACTIONS = {\n  SET_DRAWER_OPEN: \"drawer/open\"\n};\n\nexport const openDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: true\n  });\n};\n\nexport const closeDrawer = () => async dispatch => {\n  dispatch({\n    type: ACTIONS.SET_DRAWER_OPEN,\n    data: false\n  });\n};\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\nimport * as Common from \"shock-common\";\n\nexport function useForceUpdate(): () => void {\n  const [, setTick] = React.useState(0);\n  const update = React.useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return update;\n}\n\n/**\n * Handle the ugly \"in 0 seconds\" cases (returning \"Just now\"), returns an empty\n * string if the timestamp is -1.\n */\nexport const formatTimestamp = (timestamp: number): string => {\n  if (timestamp === -1) {\n    return \"\";\n  }\n  const relativeTime = DateTime.fromMillis(\n    Common.normalizeTimestampToMs(timestamp)\n  ).toRelative();\n  return relativeTime === \"in 0 seconds\" ? \"Just now\" : relativeTime;\n};\n","import * as Common from \"shock-common\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { Contact, ReceivedRequest, SentRequest } from \"../schema\";\n\nimport { rifle } from \"./WebSocket\";\n\nexport * from \"./Date\";\nexport { default as Http } from \"./Http\";\nexport * from \"./Error\";\nexport * from \"./WebSocket\";\n\nexport const logger = {\n  log: (...args: any[]) => console.log(...args),\n  warn: (...args: any[]) => console.warn(...args),\n  error: (...args: any[]) => console.error(...args),\n  debug: (...args: any[]) => console.debug(...args)\n};\n\nexport interface File {\n  size: number;\n  type: string;\n}\n\n/**\n * Max limit in API 's http config.\n */\nexport const LARGEST_RES_SIZE = 102400;\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const resizeImage = (\n  img: HTMLImageElement,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  const canvas = document.createElement(\"canvas\");\n  let { width, height } = img;\n\n  if (width > height) {\n    if (width > desiredLongEdge) {\n      //height *= max_width / width;\n      height = Math.round((height *= desiredLongEdge / width));\n      width = desiredLongEdge;\n    }\n  } /* height > width */ else {\n    if (height > desiredLongEdge) {\n      width = Math.round((width *= desiredLongEdge / height));\n      height = desiredLongEdge;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n  return canvas.toDataURL(\"image/jpeg\", compression);\n};\n\n/**\n * @returns Image in jpeg format, in a data url presentation (base64).\n */\nexport const processImageFile = async (\n  file: File,\n  desiredLongEdge: number,\n  compression: number\n) => {\n  // based on https://github.com/josefrichter/resize/blob/master/public/preprocess.js\n  if (!file.type.startsWith(\"image/\")) {\n    throw new TypeError(\n      `Got a file of type ${file.type} with size: ${file.size}, expected type to start with \"image\"`\n    );\n  }\n\n  const imageBuffer = await Common.makePromise<ArrayBuffer>((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      if (e.target.result instanceof ArrayBuffer) {\n        res(e.target.result);\n      } else {\n        rej(\n          new TypeError(\n            `Non ArrayBuffer file reader result when trying to load image file.`\n          )\n        );\n      }\n    };\n\n    const onFail = (e: ProgressEvent<FileReader>) => {\n      rej(\n        new Error(\n          `Error inside processImageFile()->imageBuffer->${JSON.stringify(e)}`\n        )\n      );\n    };\n    reader.onerror = onFail;\n    reader.onabort = onFail;\n\n    /// TODO: Why the need to cast and heck why does it even allow the cast?\n    reader.readAsArrayBuffer(file as Blob);\n  });\n\n  const url = (window.URL ?? window.webkitURL).createObjectURL(\n    new Blob([imageBuffer], { type: \"image/jpeg\" })\n  );\n\n  const image = await Common.makePromise<HTMLImageElement>((res, rej) => {\n    const _image = new Image();\n    _image.src = url;\n\n    _image.onload = () => {\n      res(_image);\n    };\n\n    _image.onerror = e => {\n      if (typeof e === \"string\") {\n        rej(new Error(e));\n      } else {\n        rej(new Error(JSON.stringify(e)));\n      }\n    };\n  });\n\n  const resizedImage = resizeImage(image, desiredLongEdge, compression);\n\n  return resizedImage;\n};\n\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>(r => {\n    setTimeout(r, ms);\n  });\n\nexport const retryOperation = <T>(\n  operation: () => Promise<T>,\n  delay: number,\n  retries: number\n): Promise<T> =>\n  new Promise<T>((resolve, reject) => {\n    return operation()\n      .then(resolve)\n      .catch(reason => {\n        if (retries > 0) {\n          return (\n            wait(delay)\n              .then(retryOperation.bind(null, operation, delay, retries - 1))\n              // @ts-expect-error\n              .then(resolve)\n              .catch(reject)\n          );\n        }\n        return reject(reason);\n      });\n  });\n\n/**\n * Returns an empty string if the string provided is not a url.\n */\nexport const normalizeURL = (_url: string): string => {\n  let url = _url;\n\n  if (url.startsWith(\"www.\")) {\n    url = \"https://\" + url;\n  }\n\n  // https://stackoverflow.com/a/43467144\n  const isURL = (() => {\n    let __url: URL;\n\n    try {\n      __url = new URL(url);\n    } catch (_) {\n      return false;\n    }\n\n    return __url.protocol === \"http:\" || __url.protocol === \"https:\";\n  })();\n\n  if (isURL) {\n    return new URL(url).href;\n  }\n\n  return \"\";\n};\n\nexport const getContact = (\n  contacts: Array<Contact | SentRequest | ReceivedRequest>,\n  publicKey: string\n) => contacts.filter(contact => contact.pk === publicKey)[0];\n\nexport const EMPTY_FN: (...args: any[]) => void = () => {};\n\nexport const useBooleanState = (initialState: boolean) => {\n  const [state, setState] = useState<boolean>(initialState);\n  const toggle = useCallback(() => {\n    setState(_state => !_state);\n  }, []);\n\n  return [state, toggle] as const;\n};\n\nexport const parseJson = (o: string) => JSON.parse(o) as unknown;\n\n/**\n * Returns null if the value provided is not a valid JSON string.\n * @param o\n */\nexport const safeParseJson = (o: unknown): unknown => {\n  if (!Common.isPopulatedString(o)) {\n    return null;\n  }\n  try {\n    return JSON.parse(o);\n  } catch (e) {\n    logger.warn(`Error inside safeParseJson() -> `, e);\n    logger.log(`Error inside safeParseJson(), string provided -> `, o);\n    return null;\n  }\n};\n\nexport const useLastSeen = (publicKey: string) => {\n  const [lastSeenApp, setLastSeenApp] = useState(0);\n  const [lastSeenNode, setLastSeenNode] = useState(0);\n\n  useEffect(() => {\n    const appSub = rifle({\n      query: `${publicKey}::Profile>lastSeenApp::on`,\n      onData(lastSeen) {\n        if (typeof lastSeen === \"number\") {\n          setLastSeenApp(lastSeen);\n        } else {\n          logger.error(`useLastSeen() -> got non-number lastSeenApp`);\n        }\n      },\n      onError(e) {\n        logger.error(`useLastSeen() -> lastSeenApp rifle -> `, e);\n      }\n    });\n\n    const nodeSub = rifle({\n      query: `${publicKey}::Profile>lastSeenNode::on`,\n      onData(lastSeen) {\n        if (typeof lastSeen === \"number\") {\n          setLastSeenNode(lastSeen);\n        } else {\n          logger.error(`useLastSeen() -> got non-number lastSeenNode`);\n        }\n      },\n      onError(e) {\n        logger.error(`useLastSeen() -> lastSeenNode rifle -> `, e);\n      }\n    });\n\n    return () => {\n      appSub.then(sub => {\n        sub.off();\n      });\n      nodeSub.then(sub => {\n        sub.off();\n      });\n    };\n  }, [publicKey]);\n\n  return { lastSeenApp, lastSeenNode };\n};\n","export const initialMessagePrefix = \"$$__SHOCKWALLET__INITIAL__MESSAGE\";\n\nexport const invoiceMessagePrefix = \"$$__SHOCKWALLET__INVOICE__\";\n\nexport const userMessagePrefix = \"$$__SHOCKWALLET__USER__\";\n\nexport const capitalizeText = text =>\n  text\n    .split(\" \")\n    .map(\n      word => `${word.slice(0, 1).toUpperCase()}${word.slice(1).toLowerCase()}`\n    )\n    .join(\" \");\n\nexport const processDisplayName = (publicKey = \"\", displayName = \"\") => {\n  if (displayName) {\n    return displayName;\n  }\n\n  const suffix = publicKey.slice(-8);\n\n  return `Anon${suffix}`;\n};\n","import Http from \"../utils/Http\";\n\nexport const ACTIONS = {\n  RESET_FEES: \"fees/reset\",\n  LOAD_FEE_RATES: \"fees/feeRates/load\",\n  SET_SOURCE: \"fees/source/set\",\n  SET_RATE: \"fees/rate/set\"\n};\n\nexport const loadFeeRates = () => async (dispatch, getState) => {\n  const { source } = getState().fees;\n  const { data } = await Http.get(source);\n\n  dispatch({\n    type: ACTIONS.LOAD_FEE_RATES,\n    data\n  });\n\n  return data;\n};\n\n/**\n * @param {string} source\n */\nexport const setSource = source => ({\n  type: ACTIONS.SET_SOURCE,\n  data: source\n});\n\n/**\n * @param {import('../schema').FeeRate} rate\n */\nexport const setRate = rate => ({\n  type: ACTIONS.SET_RATE,\n  data: rate\n});\n"],"sourceRoot":""}