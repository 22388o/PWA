[{"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Profile\\index.js":"1","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Profile\\publishContent.tsx":"2","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\utils\\String.js":"3","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\common\\Drawer\\index.js":"4","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\actions\\NodeActions.js":"5","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\reducers\\ContentReducer.js":"6","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Auth\\components\\UnlockStep\\index.js":"7","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\common\\ContactsSearch\\components\\Suggestion\\index.js":"8","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\actions\\AuthActions.js":"9","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Send\\index.js":"10","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Advanced\\components\\Transaction\\index.js":"11","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\common\\ContactsSearch\\index.js":"12","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\index.js":"13","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Messages\\index.js":"14","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Request\\components\\InvoiceStep\\index.js":"15","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\actions\\ChatActions.js":"16","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\common\\DialogPageContainer\\index.js":"17","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\reducers\\NodeReducer.js":"18","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Messages\\components\\Message\\index.js":"19","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\utils\\WebSocket.js":"20","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\utils\\Http.js":"21","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\utils\\FieldError.js":"22","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\actions\\ContentActions.js":"23","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\common\\DialogNav\\index.js":"24","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Advanced\\components\\Invoice\\index.js":"25","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Messages\\components\\Request\\index.js":"26","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Auth\\components\\HostStep\\index.js":"27"},{"size":5313,"mtime":1613746703025,"results":"28","hashOfConfig":"29"},{"size":7208,"mtime":1614010634922,"results":"30","hashOfConfig":"29"},{"size":591,"mtime":1613052893842,"results":"31","hashOfConfig":"29"},{"size":2573,"mtime":1613052893806,"results":"32","hashOfConfig":"29"},{"size":2756,"mtime":1614188497393,"results":"33","hashOfConfig":"29"},{"size":370,"mtime":1613665999475,"results":"34","hashOfConfig":"29"},{"size":2090,"mtime":1613052893826,"results":"35","hashOfConfig":"29"},{"size":2301,"mtime":1613052893803,"results":"36","hashOfConfig":"29"},{"size":405,"mtime":1613316514181,"results":"37","hashOfConfig":"29"},{"size":5434,"mtime":1613052893836,"results":"38","hashOfConfig":"29"},{"size":1320,"mtime":1613052893823,"results":"39","hashOfConfig":"29"},{"size":3835,"mtime":1613052893804,"results":"40","hashOfConfig":"29"},{"size":1240,"mtime":1613052893820,"results":"41","hashOfConfig":"29"},{"size":6158,"mtime":1613052893831,"results":"42","hashOfConfig":"29"},{"size":5550,"mtime":1613052893835,"results":"43","hashOfConfig":"29"},{"size":5377,"mtime":1613312003851,"results":"44","hashOfConfig":"29"},{"size":693,"mtime":1613052893805,"results":"45","hashOfConfig":"29"},{"size":1014,"mtime":1613052893838,"results":"46","hashOfConfig":"29"},{"size":1899,"mtime":1613052893829,"results":"47","hashOfConfig":"29"},{"size":3818,"mtime":1614186634579,"results":"48","hashOfConfig":"29"},{"size":757,"mtime":1613052893841,"results":"49","hashOfConfig":"29"},{"size":293,"mtime":1613052893841,"results":"50","hashOfConfig":"29"},{"size":224,"mtime":1613665819984,"results":"51","hashOfConfig":"29"},{"size":845,"mtime":1613052893805,"results":"52","hashOfConfig":"29"},{"size":1316,"mtime":1613052893821,"results":"53","hashOfConfig":"29"},{"size":997,"mtime":1613052893830,"results":"54","hashOfConfig":"29"},{"size":1992,"mtime":1614188686704,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"1ud4o4j",{"filePath":"60","messages":"61","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Profile\\index.js",["117","118","119","120"],"import React, { useCallback, useMemo, useState } from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { processDisplayName } from \"../../utils/String\";\r\n\r\nimport {setSeedProviderPub} from '../../actions/ContentActions'\r\n\r\nimport BottomBar from \"../../common/BottomBar\";\r\nimport AddBtn from \"../../common/AddBtn\";\r\nimport Modal from \"../../common/Modal\";\r\n\r\nimport ClipboardIcon from \"../../images/clipboard.svg\";\r\nimport QRCodeIcon from \"../../images/qrcode.svg\";\r\nimport \"./css/index.css\";\r\n\r\nconst ProfilePage = () => {\r\n  const dispatch = useDispatch()\r\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\r\n  const [profileConfigModalOpen, setProfileConfigModalOpen] = useState(false);\r\n  const displayName = useSelector(({ node }) => node.displayName);\r\n  const publicKey = useSelector(({ node }) => node.publicKey);\r\n  const seedProviderPub = useSelector(({content}) => content.seedProviderPub)\r\n  const [localSeedPub,setLocalSeedPub] = useState(seedProviderPub)\r\n  const avatar = useSelector(({ node }) => node.avatar);\r\n  const processedDisplayName = useMemo(\r\n    () => processDisplayName(publicKey, displayName),\r\n    [publicKey, displayName]\r\n  );\r\n\r\n  const toggleModal = useCallback(() => {\r\n    setProfileModalOpen(!profileModalOpen);\r\n  }, [profileModalOpen]);\r\n  const toggleConfigModal = useCallback(() => {\r\n    \r\n    setProfileConfigModalOpen(!profileConfigModalOpen);\r\n  }, [profileConfigModalOpen]);\r\n\r\n  const copyClipboard = useCallback(() => {\r\n    navigator.clipboard.writeText(publicKey);\r\n  }, [publicKey]);\r\n\r\n  const onInputChange = useCallback(e => {\r\n    const { value, name } = e.target;\r\n    switch (name) {\r\n      case \"localPub\": {\r\n        setLocalSeedPub(value);\r\n        return;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  })\r\n  const onUpdatePub = useCallback(() => {\r\n    setSeedProviderPub(localSeedPub)(dispatch)\r\n  },[localSeedPub])\r\n  const onCancel = useCallback(() => {\r\n    setLocalSeedPub(seedProviderPub)\r\n  },[seedProviderPub])\r\n\r\n  return (\r\n    <div className=\"page-container profile-page\">\r\n      <div className=\"profile-container\">\r\n        <div className=\"profile-cover\" />\r\n        <div className=\"profile-info-container\">\r\n          <div className=\"profile-avatar\" />\r\n          <div className=\"profile-info\">\r\n            <p className=\"profile-name\">{processedDisplayName}</p>\r\n            <p className=\"profile-desc\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Numquam,\r\n              blanditiis\r\n            </p>\r\n            <div className=\"config-btn\" onClick={toggleConfigModal}>\r\n              <i className=\"config-btn-icon icon-solid-spending-rule\" />\r\n              <p className=\"config-btn-text\">Config</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-choices-container\">\r\n          <button className=\"profile-choice-container\">\r\n            <i className=\"profile-choice-icon fas fa-user\"></i>\r\n            <p className=\"profile-choice-text\">Offer a Product</p>\r\n          </button>\r\n          <div className=\"profile-choice-container\">\r\n            <i className=\"profile-choice-icon fas fa-user\"></i>\r\n            <p className=\"profile-choice-text\">Offer a Product</p>\r\n          </div>\r\n          <Link to={\"/publishContent\"} className=\"profile-choice-container\" >\r\n            <i className=\"profile-choice-icon fas fa-user\"></i>\r\n            <p className=\"profile-choice-text\">Publish Content</p>\r\n          </Link>\r\n          <div className=\"profile-choice-container\">\r\n            <i className=\"profile-choice-icon fas fa-user\"></i>\r\n            <p className=\"profile-choice-text\">Offer a Product</p>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          toggleModal={toggleModal}\r\n          modalOpen={profileModalOpen}\r\n          contentStyle={{\r\n            padding: \"40px 30px\"\r\n          }}\r\n        >\r\n          <QRCode\r\n            bgColor=\"#23282d\"\r\n            fgColor=\"#4285b9\"\r\n            value={publicKey}\r\n            size={180}\r\n            className=\"profile-qrcode\"\r\n          />\r\n          <p className=\"profile-qrcode-desc\">\r\n            Other users can scan this code to contact you\r\n          </p>\r\n          <div className=\"profile-clipboard-container\" onClick={copyClipboard}>\r\n            <img src={ClipboardIcon} className=\"profile-clipboard-icon\" />\r\n            <p className=\"profile-clipboard-text\">Tap to copy to clipboard</p>\r\n          </div>\r\n        </Modal>\r\n        <Modal\r\n          toggleModal={toggleConfigModal}\r\n          modalOpen={profileConfigModalOpen}\r\n          \r\n          contentStyle={{\r\n            padding: \"40px 30px\"\r\n          }}\r\n        >\r\n          <div>\r\n            \r\n            <input type='text' placeholder={localSeedPub} name=\"localPub\" onChange={onInputChange} />\r\n            <button onClick={onUpdatePub}>UPDATE</button>\r\n            <button onClick={onCancel}>CANCEL</button>\r\n          </div>\r\n        </Modal>\r\n        <AddBtn\r\n          onClick={toggleModal}\r\n          large\r\n          iconURL={QRCodeIcon}\r\n          style={{ backgroundColor: \"var(--yellow)\" }}\r\n        />\r\n      </div>\r\n\r\n      <BottomBar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n",["121","122"],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Profile\\publishContent.tsx",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"import React, { createElement, useCallback, useMemo, useRef, useState } from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { processDisplayName } from \"../../utils/String\";\r\n\r\nimport BottomBar from \"../../common/BottomBar\";\r\nimport AddBtn from \"../../common/AddBtn\";\r\nimport Modal from \"../../common/Modal\";\r\n\r\nimport ClipboardIcon from \"../../images/clipboard.svg\";\r\nimport QRCodeIcon from \"../../images/qrcode.svg\";\r\nimport \"./css/index.css\";\r\n\r\nimport Loader from \"../../common/Loader\";\r\nimport MainNav from \"../../common/MainNav\";\r\nimport DialogNav from \"../../common/DialogNav\";\r\nimport Http from \"../../utils/Http\";\r\nconst PublishContentPage = () => {\r\n  const dispatch = useDispatch();\r\n  //@ts-ignore\r\n  const seedProviderPub = useSelector(({content}) => content.seedProviderPub)\r\n  const [error, setError] = useState<string|null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [mediaPreviews,setMediaPreviews] = useState([])\r\n  const [title,setTitle] = useState(\"\")\r\n  const [description,setDescription] = useState(\"\")\r\n  const imageFile = useRef(null)\r\n  const videoFile = useRef(null)\r\n\r\n  const [selectedFiles,setSelectedFiles] = useState([]) \r\n\r\n  const onSubmit = useCallback(\r\n    async e => {\r\n      e.preventDefault();\r\n      console.log([title,description,selectedFiles])\r\n      if(selectedFiles.length === 0){\r\n        setError(\"no selected files\")\r\n        return\r\n      }\r\n      Http.post('/api/lnd/unifiedTrx',{\r\n        type: 'torrentSeed',\r\n        amt: 100,\r\n        to:seedProviderPub,\r\n        memo:'',\r\n        feeLimit:500,\r\n        ackInfo:1\r\n      })\r\n      .then(res => {\r\n        const {data,status} = res\r\n        if(status !== 200){\r\n          setError(\"seed token request failed\")\r\n        }\r\n        console.log(data)\r\n        const {orderAck} = data\r\n        const orderData = JSON.parse(orderAck.response)\r\n        const {seedUrl,tokens} = orderData\r\n        const formData = new FormData()\r\n        //TODO support public/private content by requesting two tokens and doing this req twice\r\n        Array.from(selectedFiles).forEach(file => formData.append('files', file))\r\n        formData.append('info', 'extraInfo')\r\n        formData.append('comment', 'comment')\r\n        return fetch(`${seedUrl}/api/put_file`, {\r\n          method: 'POST',\r\n          headers: {\r\n            Authorization: `Bearer ${tokens[0]}`,\r\n          },\r\n          body: formData,\r\n        })\r\n      })\r\n      .then(res => {\r\n        console.log(res)\r\n        return res.json()\r\n      })\r\n      .then(res =>{\r\n        console.log(res)\r\n        const {torrent} = res.data\r\n        const {magnet} = torrent\r\n\r\n      })\r\n      .catch(err => {\r\n        setError(\"seed token request failed\")\r\n        console.log(err)\r\n      })\r\n\r\n    },\r\n    [title,description,selectedFiles, dispatch, setError]\r\n  );\r\n  const onDiscard = useCallback(\r\n    async e => {\r\n      e.preventDefault();\r\n      setTitle(\"\")\r\n      setDescription(\"\")\r\n      setError(null)\r\n      \r\n    },\r\n    [setDescription, setTitle, setError]\r\n  );\r\n  const onInputChange = useCallback(e => {\r\n    const { value, name } = e.target;\r\n    switch (name) {\r\n      case \"title\": {\r\n        setTitle(value);\r\n        return;\r\n      }\r\n      case \"description\": {\r\n        setDescription(value);\r\n        return;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  }, [setTitle,setDescription]);\r\n  const onSelectedFile = useCallback(e =>{\r\n    e.preventDefault()\r\n    \r\n    console.log(e.target.files)\r\n    setSelectedFiles(e.target.files)\r\n    const promises = Array.from(e.target.files).map(file => {\r\n      console.log(\"doing file...\")\r\n      return new Promise(res => {\r\n        //@ts-ignore\r\n        const {type} = file\r\n        //@ts-ignore\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = function (e) {\r\n          if(type.startsWith('image/')){\r\n            res({type:'image',uri:e.target.result})\r\n          }\r\n          if(type.startsWith('video/')){\r\n            res({type:'video',uri:e.target.result})\r\n          }\r\n        }\r\n        //@ts-ignore\r\n        reader.readAsDataURL(file);\r\n        \r\n      })\r\n    })\r\n    Promise.allSettled(promises)\r\n    .then(res =>{\r\n      const previews = []\r\n      res.forEach(singleRes => {\r\n        if(singleRes.status === 'fulfilled'){\r\n          previews.push(singleRes.value)\r\n        }\r\n      })\r\n      console.log(previews)\r\n      setMediaPreviews(previews)\r\n    })\r\n  },[setSelectedFiles,setMediaPreviews])\r\n  const onSelectImageFile = useCallback(e => {\r\n    e.preventDefault()\r\n    //imageFile.current.onChange = \r\n    imageFile.current.click()\r\n  },[imageFile])\r\n  const onSelectVideoFile = useCallback(e => {\r\n    e.preventDefault()\r\n    videoFile.current.click()\r\n  },[videoFile])\r\n  return (<div className=\"publish-content-form-container\">\r\n    {loading ? (\r\n      <Loader overlay fullScreen text=\"Unlocking Wallet...\" />\r\n    ) : null}\r\n    <DialogNav  drawerVisible={false} pageTitle=\"PUBLISH CONTENT\" />\r\n  \r\n    <form className=\"publish-content-form\" onSubmit={onSubmit} onReset={onDiscard}>\r\n      <div className=\"publish-content-title\">\r\n        <label htmlFor=\"title\" >Title</label>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"How I monetized my content with ShockWallet\"\r\n        value={title}\r\n        onChange={onInputChange}\r\n        className=\"input-field\"\r\n      />\r\n      <div className=\"publish-content-title\">\r\n        <label htmlFor=\"contents\">Contents</label>\r\n      </div>\r\n      <div>\r\n      <input type='file' id='file' ref={imageFile} style={{display: 'none'}} accept=\"image/*\" multiple onChange={onSelectedFile}/>\r\n      <input type='file' id='file' ref={videoFile} style={{display: 'none'}} accept=\"video/*\" multiple onChange={onSelectedFile}/>\r\n      <i className=\"fas fa-images publish-content-icon\" onClick={onSelectImageFile}></i>\r\n      <i className=\"fas fa-video publish-content-icon\" onClick={onSelectVideoFile}></i>\r\n      <div >\r\n        {mediaPreviews.length > 0 && mediaPreviews.map(prev => {\r\n          if(prev.type === 'image'){\r\n            return <img src={prev.uri} width={100} className=\"m-1\"></img>\r\n          }\r\n          if(prev.type === 'video'){\r\n            return <video src={prev.uri} width={100} controls className=\"m-1\"></video>\r\n          }\r\n        })}\r\n      </div>\r\n      {/*<i className=\"fas fa-music publish-content-icon\"></i>\r\n      <i className=\"fas fa-paperclip publish-content-icon\"></i>*/}\r\n      </div>\r\n      <div className=\"publish-content-title\">\r\n        <label htmlFor=\"description\">Description</label>\r\n      </div>\r\n      <textarea\r\n        name=\"description\"\r\n        placeholder=\"I made a quick video to show you guys how easy it is to run your own social platform on ShockWallet, and start earning Bitcoin\"\r\n        rows={3}\r\n        value={description}\r\n        onChange={onInputChange}\r\n        className=\"input-field\"\r\n      />\r\n      {error ? <p className=\"error-container\">{error}</p> : null}\r\n      <input type=\"reset\" value=\"reset\" />\r\n      <input type=\"submit\" value=\"submit\" />\r\n    </form>\r\n  </div>)\r\n};\r\n\r\nexport default PublishContentPage;\r\n",["138","139"],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\utils\\String.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\common\\Drawer\\index.js",[],["140","141"],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\actions\\NodeActions.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\reducers\\ContentReducer.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Auth\\components\\UnlockStep\\index.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\common\\ContactsSearch\\components\\Suggestion\\index.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\actions\\AuthActions.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Send\\index.js",["142"],"import React, { useCallback, useState } from \"react\";\r\nimport Http from \"../../utils/Http\";\r\nimport SlidePay from \"../../common/SlidePay\";\r\nimport InputGroup from \"../../common/InputGroup\";\r\nimport ContactSearch from \"../../common/ContactsSearch\";\r\nimport DialogPageContainer from \"../../common/DialogPageContainer\";\r\nimport Suggestion from \"../../common/ContactsSearch/components/Suggestion\";\r\nimport Loader from \"../../common/Loader\";\r\nimport \"./css/index.css\";\r\n\r\nconst SendPage = () => {\r\n  const [amount, setAmount] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [unit, setUnit] = useState(\"sats\");\r\n  const [contact, setContact] = useState();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [paymentLoading, setPaymentLoading] = useState(false);\r\n\r\n  const onInputChange = useCallback(e => {\r\n    if (e.target.name === \"amount\") {\r\n      setAmount(e.target.value);\r\n    }\r\n\r\n    if (e.target.name === \"description\") {\r\n      setDescription(e.target.value);\r\n    }\r\n\r\n    if (e.target.name === \"unit\") {\r\n      setUnit(e.target.value);\r\n    }\r\n  }, []);\r\n\r\n  const selectContact = useCallback(async contact => {\r\n    console.log(\"selectContact:\", contact);\r\n    setLoading(true);\r\n    setContact(contact);\r\n\r\n    if (contact && contact.type === \"invoice\") {\r\n      // Do invoice decoding\r\n      const { data } = await Http.post(\"/api/lnd/decodePayReq\", {\r\n        payReq: contact.paymentRequest\r\n      });\r\n\r\n      const { decodedRequest } = data;\r\n\r\n      setAmount(decodedRequest.num_satoshis);\r\n      setUnit(\"sats\");\r\n      setDescription(decodedRequest.description);\r\n    }\r\n\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const sendBTCPayment = useCallback(async () => {\r\n    if (contact) {\r\n      const { data: payment } = await Http.post(\"/api/lnd/sendcoins\", {\r\n        addr: contact.address,\r\n        amount: amount\r\n      });\r\n      console.log(payment);\r\n    }\r\n  }, [amount, contact]);\r\n\r\n  const sendLightningPayment = useCallback(async () => {\r\n    if (contact) {\r\n      const { data: payment } = await Http.post(\"/api/lnd/sendpayment\", {\r\n        dest: contact.dest,\r\n        payreq: contact.paymentRequest,\r\n        amt: contact.paymentRequest ? \"0\" : amount,\r\n        feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\r\n        keysend: contact.type === \"keysend\"\r\n      });\r\n      console.log(payment);\r\n    }\r\n  }, [amount, contact]);\r\n\r\n  const sendGunPayment = useCallback(async () => {\r\n    if (contact) {\r\n      const { data: gunPayment } = await Http.post(\"/api/gun/sendpayment\", {\r\n        recipientPub: contact.pk,\r\n        amount: parseInt(amount),\r\n        feeLimit: amount * 0.006 + 10, // TODO: Hardcoded fees for now\r\n        memo: description\r\n      });\r\n      console.log(gunPayment);\r\n    }\r\n  }, [amount, contact, description]);\r\n\r\n  const onSubmit = useCallback(async () => {\r\n    try {\r\n      setError(\"\");\r\n      setPaymentLoading(true);\r\n\r\n      if (contact?.type === \"btc\") {\r\n        await sendBTCPayment();\r\n      }\r\n\r\n      if ([\"invoice\", \"keysend\"].includes(contact?.type)) {\r\n        await sendLightningPayment();\r\n      }\r\n\r\n      if (contact?.type === \"contact\") {\r\n        await sendGunPayment();\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(err.response?.data.errorMessage ?? err.message);\r\n      throw err;\r\n    } finally {\r\n      setPaymentLoading(false);\r\n    }\r\n  }, [contact, sendBTCPayment, sendGunPayment, sendLightningPayment]);\r\n\r\n  return (\r\n    <DialogPageContainer containerClassName=\"send-page\" title=\"SEND\">\r\n      <div className=\"send-form-container\">\r\n        {paymentLoading ? (\r\n          <Loader fullScreen overlay text=\"Processing Payment...\" />\r\n        ) : null}\r\n        {error ? <p className=\"form-error\">{error}</p> : null}\r\n        {!contact ? (\r\n          <div className=\"scan-qr-btn\">\r\n            <i className=\"scan-qr-icon icon icon-solid-scan\"></i>\r\n            <p className=\"scan-qr-text\">Scan QR</p>\r\n          </div>\r\n        ) : null}\r\n        {contact ? (\r\n          <Suggestion\r\n            selected\r\n            contact={contact}\r\n            selectContact={selectContact}\r\n          />\r\n        ) : (\r\n          <ContactSearch\r\n            selectContact={selectContact}\r\n            features={[\"btc\", \"keysend\", \"contact\", \"invoice\"]}\r\n          />\r\n        )}\r\n        <div className=\"inputs-group\">\r\n          <InputGroup\r\n            name=\"amount\"\r\n            label=\"Enter Amount\"\r\n            onChange={onInputChange}\r\n            value={amount}\r\n            disabled={contact?.type === \"invoice\"}\r\n          />\r\n          <select\r\n            name=\"unit\"\r\n            className=\"unit-dropdown\"\r\n            onChange={onInputChange}\r\n            value={unit}\r\n            disabled={contact?.type === \"invoice\"}\r\n          >\r\n            <option value=\"sats\">Sats</option>\r\n            <option value=\"msats\">mSats</option>\r\n            <option value=\"btc\">BTC</option>\r\n          </select>\r\n        </div>\r\n        <InputGroup\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          element=\"textarea\"\r\n          onChange={onInputChange}\r\n          type=\"textarea\"\r\n          value={description}\r\n          disabled={contact?.type === \"invoice\"}\r\n        />\r\n      </div>\r\n      <SlidePay disabled={!contact} onSuccess={onSubmit} />\r\n    </DialogPageContainer>\r\n  );\r\n};\r\n\r\nexport default SendPage;\r\n","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Advanced\\components\\Transaction\\index.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\common\\ContactsSearch\\index.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\index.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Messages\\index.js",["143"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DateTime } from \"luxon\";\r\nimport classNames from \"classnames\";\r\nimport { loadChatData, sendHandshakeRequest } from \"../../actions/ChatActions\";\r\nimport BottomBar from \"../../common/BottomBar\";\r\nimport Message from \"./components/Message\";\r\nimport Request from \"./components/Request\";\r\nimport MainNav from \"../../common/MainNav\";\r\nimport AddBtn from \"../../common/AddBtn\";\r\nimport Loader from \"../../common/Loader\";\r\nimport FieldError from \"../../utils/FieldError\";\r\nimport \"./css/index.css\";\r\nimport Modal from \"../../common/Modal\";\r\n\r\nconst MessagesPage = () => {\r\n  const dispatch = useDispatch();\r\n  const [addModalOpen, setAddModalOpen] = useState(false);\r\n  const [sendError, setSendError] = useState(\"\");\r\n  const [sendRequestLoading, setSendRequestLoading] = useState(false);\r\n  const [chatLoaded, setChatLoaded] = useState(false);\r\n  const contacts = useSelector(({ chat }) => chat.contacts);\r\n  const messages = useSelector(({ chat }) => chat.messages);\r\n  const sentRequests = useSelector(({ chat }) => chat.sentRequests);\r\n  const receivedRequests = useSelector(({ chat }) => chat.receivedRequests);\r\n\r\n  const loadChat = useCallback(async () => {\r\n    await dispatch(loadChatData());\r\n    setChatLoaded(true);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    loadChat();\r\n  }, [loadChat]);\r\n\r\n  const toggleModal = useCallback(() => {\r\n    setAddModalOpen(!addModalOpen);\r\n  }, [addModalOpen]);\r\n\r\n  const sanitizePublicKey = publicKey => {\r\n    if (publicKey.startsWith(\"http\")) {\r\n      const parts = publicKey.split(\"/\");\r\n      return parts.slice(-1)[0];\r\n    }\r\n\r\n    return publicKey;\r\n  };\r\n\r\n  const sendRequest = useCallback(\r\n    async shockUser => {\r\n      try {\r\n        setSendError(null);\r\n        setSendRequestLoading(true);\r\n        const pk = sanitizePublicKey(shockUser);\r\n\r\n        if (!pk?.length) {\r\n          throw new FieldError({\r\n            field: \"publicKey\",\r\n            message: \"Please specify a public key\"\r\n          });\r\n        }\r\n\r\n        if (!/^[0-9A-Za-z\\-_.+/]+[=]{0,3}/.test(pk)) {\r\n          throw new FieldError({\r\n            field: \"publicKey\",\r\n            message: \"Invalid public key format specified\"\r\n          });\r\n        }\r\n\r\n        await dispatch(sendHandshakeRequest(shockUser));\r\n\r\n        setAddModalOpen(false);\r\n        return;\r\n      } catch (err) {\r\n        if (err instanceof FieldError) {\r\n          setSendError(err.message);\r\n          return;\r\n        }\r\n\r\n        console.error(err);\r\n        setSendError(\"An unknown error has occurred\");\r\n      } finally {\r\n        setSendRequestLoading(false);\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const sendRequestClipboard = useCallback(async () => {\r\n    const clipboardText = await navigator.clipboard.readText();\r\n    return sendRequest(clipboardText);\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <div className=\"page-container messages-page\">\r\n      <MainNav solid pageTitle=\"MESSAGES\" />\r\n      <div className=\"messages-container\">\r\n        <div className=\"message-list-container\">\r\n          {sentRequests.length > 0 ? (\r\n            <p className=\"messages-section-title\">Sent Requests</p>\r\n          ) : null}\r\n          {sentRequests.map(request => (\r\n            <Request publicKey={request.pk} sent />\r\n          ))}\r\n          {receivedRequests.length > 0 ? (\r\n            <p className=\"messages-section-title\">Received Requests</p>\r\n          ) : null}\r\n          {receivedRequests.map(request => (\r\n            <Request publicKey={request.pk} />\r\n          ))}\r\n          {contacts.length > 0 ? (\r\n            <p className=\"messages-section-title\">Messages</p>\r\n          ) : null}\r\n          {contacts.map(contact => {\r\n            const contactMessages = messages[contact.pk] ?? [];\r\n            const lastMessage = contactMessages[0] ?? {\r\n              body: \"Unable to preview last message...\",\r\n              timestamp: Date.now()\r\n            };\r\n\r\n            return (\r\n              <Message\r\n                publicKey={contact.pk}\r\n                name={contact.displayName}\r\n                subtitle={lastMessage.body}\r\n                time={DateTime.fromMillis(lastMessage.timestamp).toRelative()}\r\n                chatLoaded={chatLoaded}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <AddBtn onClick={toggleModal} label=\"REQUEST\" />\r\n        {/* TODO: Extract to a separate component */}\r\n        <Modal\r\n          modalTitle=\"SEND REQUEST\"\r\n          toggleModal={toggleModal}\r\n          modalOpen={addModalOpen}\r\n        >\r\n          {sendRequestLoading ? (\r\n            <Loader\r\n              text=\"Sending Request...\"\r\n              overlay\r\n              style={{\r\n                borderRadius: \"0 0 15px 15px\"\r\n              }}\r\n            />\r\n          ) : null}\r\n          {sendError ? (\r\n            <div className=\"send-request-error\">{sendError}</div>\r\n          ) : null}\r\n          <div className=\"send-request-cards\">\r\n            <div className=\"send-request-card\" onClick={sendRequest}>\r\n              <i className=\"send-request-card-icon fas fa-qrcode\" />\r\n              <p className=\"send-request-card-title\">SCAN QR</p>\r\n              <p className=\"send-request-card-desc\">\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Cum\r\n                exercitationem eveniet a soluta vel. Non voluptatem,\r\n                reprehenderit error\r\n              </p>\r\n            </div>\r\n            <div className=\"send-request-card\" onClick={sendRequestClipboard}>\r\n              <i className=\"send-request-card-icon fas fa-clipboard\" />\r\n              <p className=\"send-request-card-title\">PASTE CLIPBOARD</p>\r\n              <p className=\"send-request-card-desc\">\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Cum\r\n                exercitationem eveniet a soluta vel. Non voluptatem,\r\n                reprehenderit error\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n      <BottomBar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesPage;\r\n","C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Request\\components\\InvoiceStep\\index.js",["144"],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\actions\\ChatActions.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\common\\DialogPageContainer\\index.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\reducers\\NodeReducer.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Messages\\components\\Message\\index.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\utils\\WebSocket.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\utils\\Http.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\utils\\FieldError.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\actions\\ContentActions.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\common\\DialogNav\\index.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Advanced\\components\\Invoice\\index.js",[],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Messages\\components\\Request\\index.js",["145","146","147","148","149","150"],"C:\\Users\\boufn\\code\\backend\\shocknet\\PWA\\src\\pages\\Auth\\components\\HostStep\\index.js",[],{"ruleId":"151","severity":1,"message":"152","line":25,"column":9,"nodeType":"153","messageId":"154","endLine":25,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":43,"column":25,"nodeType":"153","endLine":43,"endColumn":36},{"ruleId":"155","severity":1,"message":"157","line":56,"column":5,"nodeType":"158","endLine":56,"endColumn":19,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":115,"column":13,"nodeType":"162","endLine":115,"endColumn":75},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":30},{"ruleId":"167","severity":1,"message":"169","line":1,"column":45,"nodeType":"153","messageId":"154","endLine":1,"endColumn":52},{"ruleId":"167","severity":1,"message":"170","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"171","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":28},{"ruleId":"167","severity":1,"message":"172","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":17},{"ruleId":"167","severity":1,"message":"173","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":14},{"ruleId":"167","severity":1,"message":"174","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":13},{"ruleId":"167","severity":1,"message":"175","line":10,"column":8,"nodeType":"153","messageId":"154","endLine":10,"endColumn":21},{"ruleId":"167","severity":1,"message":"176","line":11,"column":8,"nodeType":"153","messageId":"154","endLine":11,"endColumn":18},{"ruleId":"167","severity":1,"message":"177","line":15,"column":8,"nodeType":"153","messageId":"154","endLine":15,"endColumn":15},{"ruleId":"167","severity":1,"message":"178","line":23,"column":19,"nodeType":"153","messageId":"154","endLine":23,"endColumn":29},{"ruleId":"167","severity":1,"message":"179","line":77,"column":16,"nodeType":"153","messageId":"154","endLine":77,"endColumn":22},{"ruleId":"155","severity":1,"message":"180","line":86,"column":5,"nodeType":"158","endLine":86,"endColumn":58,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":187,"column":61,"nodeType":"184","messageId":"185","endLine":187,"endColumn":63},{"ruleId":"160","severity":1,"message":"161","line":189,"column":20,"nodeType":"162","endLine":189,"endColumn":68},{"ruleId":"163","replacedBy":"186"},{"ruleId":"165","replacedBy":"187"},{"ruleId":"163","replacedBy":"186"},{"ruleId":"165","replacedBy":"187"},{"ruleId":"151","severity":1,"message":"188","line":17,"column":10,"nodeType":"153","messageId":"154","endLine":17,"endColumn":17},{"ruleId":"151","severity":1,"message":"189","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":18},{"ruleId":"151","severity":1,"message":"190","line":22,"column":10,"nodeType":"153","messageId":"154","endLine":22,"endColumn":15},{"ruleId":"151","severity":1,"message":"191","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":28},{"ruleId":"151","severity":1,"message":"192","line":1,"column":30,"nodeType":"153","messageId":"154","endLine":1,"endColumn":39},{"ruleId":"151","severity":1,"message":"193","line":1,"column":41,"nodeType":"153","messageId":"154","endLine":1,"endColumn":49},{"ruleId":"151","severity":1,"message":"194","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":21},{"ruleId":"151","severity":1,"message":"195","line":2,"column":23,"nodeType":"153","messageId":"154","endLine":2,"endColumn":34},{"ruleId":"151","severity":1,"message":"196","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":31},"no-unused-vars","'avatar' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["197"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["198"],"no-negated-in-lhs",["199"],"@typescript-eslint/no-unused-vars","'createElement' is defined but never used.","'useMemo' is defined but never used.","'QRCode' is defined but never used.","'processDisplayName' is defined but never used.","'BottomBar' is defined but never used.","'AddBtn' is defined but never used.","'Modal' is defined but never used.","'ClipboardIcon' is defined but never used.","'QRCodeIcon' is defined but never used.","'MainNav' is defined but never used.","'setLoading' is assigned a value but never used.","'magnet' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'seedProviderPub'. Either include it or remove the dependency array.",["200"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["198"],["199"],"'loading' is assigned a value but never used.","'classNames' is defined but never used.","'error' is assigned a value but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'subscribeChatMessages' is defined but never used.",{"desc":"201","fix":"202"},"no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},"Update the dependencies array to be: [dispatch, localSeedPub]",{"range":"205","text":"206"},"Update the dependencies array to be: [title, description, selectedFiles, seedProviderPub]",{"range":"207","text":"208"},[1985,1999],"[dispatch, localSeedPub]",[2834,2887],"[title, description, selectedFiles, seedProviderPub]"]